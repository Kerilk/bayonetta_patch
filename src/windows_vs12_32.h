typedef unsigned char   undefined;

typedef unsigned long long    GUID;
typedef unsigned int    ImageBaseOffset32;
typedef unsigned char    bool;
typedef unsigned char    byte;
typedef unsigned int    dword;
typedef long long    longlong;
typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned long    ulong;
typedef unsigned long long    ulonglong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined4;
typedef unsigned long long    undefined6;
typedef unsigned long long    undefined8;
typedef unsigned short    ushort;
typedef short    wchar_t;
typedef unsigned short    word;
#define ACTRL_ACCESS_ALLOWED 1

#define ACTRL_ACCESS_DENIED 2

#define ACTRL_ACCESS_NO_OPTIONS 0

#define ACTRL_ACCESS_PROTECTED 1

#define ACTRL_ACCESS_SUPPORTS_OBJECT_ENTRIES 1

#define ACTRL_AUDIT_FAILURE 8

#define ACTRL_AUDIT_SUCCESS 4

#define ACTRL_CHANGE_ACCESS 536870912

#define ACTRL_CHANGE_OWNER 1073741824

#define ACTRL_DELETE 134217728

#define ACTRL_DIR_CREATE_CHILD 4

#define ACTRL_DIR_CREATE_OBJECT 2

#define ACTRL_DIR_DELETE_CHILD 64

#define ACTRL_DIR_LIST 1

#define ACTRL_DIR_TRAVERSE 32

#define ACTRL_DS_CONTROL_ACCESS 256

#define ACTRL_DS_CREATE_CHILD 1

#define ACTRL_DS_DELETE_CHILD 2

#define ACTRL_DS_DELETE_TREE 64

#define ACTRL_DS_LIST 4

#define ACTRL_DS_LIST_OBJECT 128

#define ACTRL_DS_OPEN 0

#define ACTRL_DS_READ_PROP 16

#define ACTRL_DS_SELF 8

#define ACTRL_DS_WRITE_PROP 32

#define ACTRL_FILE_APPEND 4

#define ACTRL_FILE_CREATE_PIPE 512

#define ACTRL_FILE_EXECUTE 32

#define ACTRL_FILE_READ 1

#define ACTRL_FILE_READ_ATTRIB 128

#define ACTRL_FILE_READ_PROP 8

#define ACTRL_FILE_WRITE 2

#define ACTRL_FILE_WRITE_ATTRIB 256

#define ACTRL_FILE_WRITE_PROP 16

#define ACTRL_KERNEL_ALERT 1024

#define ACTRL_KERNEL_CONTROL 512

#define ACTRL_KERNEL_DIMPERSONATE 32768

#define ACTRL_KERNEL_DUP_HANDLE 32

#define ACTRL_KERNEL_GET_CONTEXT 2048

#define ACTRL_KERNEL_GET_INFO 256

#define ACTRL_KERNEL_IMPERSONATE 16384

#define ACTRL_KERNEL_PROCESS 64

#define ACTRL_KERNEL_SET_CONTEXT 4096

#define ACTRL_KERNEL_SET_INFO 128

#define ACTRL_KERNEL_TERMINATE 1

#define ACTRL_KERNEL_THREAD 2

#define ACTRL_KERNEL_TOKEN 8192

#define ACTRL_KERNEL_VM 4

#define ACTRL_KERNEL_VM_READ 8

#define ACTRL_KERNEL_VM_WRITE 16

#define ACTRL_PERM_1 1

#define ACTRL_PERM_10 512

#define ACTRL_PERM_11 1024

#define ACTRL_PERM_12 2048

#define ACTRL_PERM_13 4096

#define ACTRL_PERM_14 8192

#define ACTRL_PERM_15 16384

#define ACTRL_PERM_16 32768

#define ACTRL_PERM_17 65536

#define ACTRL_PERM_18 131072

#define ACTRL_PERM_19 262144

#define ACTRL_PERM_2 2

#define ACTRL_PERM_20 524288

#define ACTRL_PERM_3 4

#define ACTRL_PERM_4 8

#define ACTRL_PERM_5 16

#define ACTRL_PERM_6 32

#define ACTRL_PERM_7 64

#define ACTRL_PERM_8 128

#define ACTRL_PERM_9 256

#define ACTRL_PRINT_JADMIN 16

#define ACTRL_PRINT_PADMIN 4

#define ACTRL_PRINT_PUSE 8

#define ACTRL_PRINT_SADMIN 1

#define ACTRL_PRINT_SLIST 2

#define ACTRL_READ_CONTROL 268435456

#define ACTRL_REG_CREATE_CHILD 4

#define ACTRL_REG_LINK 32

#define ACTRL_REG_LIST 8

#define ACTRL_REG_NOTIFY 16

#define ACTRL_REG_QUERY 1

#define ACTRL_REG_SET 2

#define ACTRL_RESERVED 0

#define ACTRL_STD_RIGHT_REQUIRED 2013265920

#define ACTRL_STD_RIGHTS_ALL 4160749568

#define ACTRL_SVC_GET_INFO 1

#define ACTRL_SVC_INTERROGATE 128

#define ACTRL_SVC_LIST 8

#define ACTRL_SVC_PAUSE 64

#define ACTRL_SVC_SET_INFO 2

#define ACTRL_SVC_START 16

#define ACTRL_SVC_STATUS 4

#define ACTRL_SVC_STOP 32

#define ACTRL_SVC_UCONTROL 256

#define ACTRL_SYNCHRONIZE 2147483648

#define ACTRL_SYSTEM_ACCESS 67108864

#define ACTRL_WIN_CLIPBRD 1

#define ACTRL_WIN_CREATE 4

#define ACTRL_WIN_EXIT 256

#define ACTRL_WIN_GLOBAL_ATOMS 2

#define ACTRL_WIN_LIST 16

#define ACTRL_WIN_LIST_DESK 8

#define ACTRL_WIN_READ_ATTRIBS 32

#define ACTRL_WIN_SCREEN 128

#define ACTRL_WIN_WRITE_ATTRIBS 64

#define INHERIT_NO_PROPAGATE 4

#define INHERIT_ONLY 8

#define INHERITED_ACCESS_ENTRY 16

#define INHERITED_GRANDPARENT 536870912

#define INHERITED_PARENT 268435456

#define NO_INHERITANCE 0

#define SUB_CONTAINERS_AND_OBJECTS_INHERIT 3

#define SUB_CONTAINERS_ONLY_INHERIT 2

#define SUB_OBJECTS_ONLY_INHERIT 1

#define TRUSTEE_ACCESS_ALL 4294967295

#define TRUSTEE_ACCESS_ALLOWED 1

#define TRUSTEE_ACCESS_EXPLICIT 1

#define TRUSTEE_ACCESS_READ 2

#define TRUSTEE_ACCESS_WRITE 4

typedef enum _ACCESS_MODE {
    DENY_ACCESS=3,
    GRANT_ACCESS=1,
    NOT_USED_ACCESS=0,
    REVOKE_ACCESS=4,
    SET_ACCESS=2,
    SET_AUDIT_FAILURE=6,
    SET_AUDIT_SUCCESS=5
} _ACCESS_MODE;

typedef struct _ACTRL_ACCESS_ENTRY_LISTA _ACTRL_ACCESS_ENTRY_LISTA, *P_ACTRL_ACCESS_ENTRY_LISTA;

typedef ulong DWORD;

typedef DWORD ULONG;

typedef struct _ACTRL_ACCESS_ENTRYA _ACTRL_ACCESS_ENTRYA, *P_ACTRL_ACCESS_ENTRYA;

typedef struct _ACTRL_ACCESS_ENTRYA ACTRL_ACCESS_ENTRYA;

typedef struct _TRUSTEE_A _TRUSTEE_A, *P_TRUSTEE_A;

typedef struct _TRUSTEE_A TRUSTEE_A;

typedef ULONG ACCESS_RIGHTS;

typedef ULONG INHERIT_FLAGS;

typedef char CHAR;

typedef CHAR * LPSTR;

typedef enum _MULTIPLE_TRUSTEE_OPERATION {
    NO_MULTIPLE_TRUSTEE=0,
    TRUSTEE_IS_IMPERSONATE=1
} _MULTIPLE_TRUSTEE_OPERATION;

typedef enum _MULTIPLE_TRUSTEE_OPERATION MULTIPLE_TRUSTEE_OPERATION;

typedef enum _TRUSTEE_FORM {
    TRUSTEE_BAD_FORM=2,
    TRUSTEE_IS_NAME=1,
    TRUSTEE_IS_OBJECTS_AND_NAME=4,
    TRUSTEE_IS_OBJECTS_AND_SID=3,
    TRUSTEE_IS_SID=0
} _TRUSTEE_FORM;

typedef enum _TRUSTEE_FORM TRUSTEE_FORM;

typedef enum _TRUSTEE_TYPE {
    TRUSTEE_IS_ALIAS=4,
    TRUSTEE_IS_COMPUTER=8,
    TRUSTEE_IS_DELETED=6,
    TRUSTEE_IS_DOMAIN=3,
    TRUSTEE_IS_GROUP=2,
    TRUSTEE_IS_INVALID=7,
    TRUSTEE_IS_UNKNOWN=0,
    TRUSTEE_IS_USER=1,
    TRUSTEE_IS_WELL_KNOWN_GROUP=5
} _TRUSTEE_TYPE;

typedef enum _TRUSTEE_TYPE TRUSTEE_TYPE;

struct _TRUSTEE_A {
    struct _TRUSTEE_A * pMultipleTrustee;
    MULTIPLE_TRUSTEE_OPERATION MultipleTrusteeOperation;
    TRUSTEE_FORM TrusteeForm;
    TRUSTEE_TYPE TrusteeType;
    LPSTR ptstrName;
};

struct _ACTRL_ACCESS_ENTRY_LISTA {
    ULONG cEntries;
    ACTRL_ACCESS_ENTRYA * pAccessList;
};

struct _ACTRL_ACCESS_ENTRYA {
    TRUSTEE_A Trustee;
    ULONG fAccessFlags;
    ACCESS_RIGHTS Access;
    ACCESS_RIGHTS ProvSpecificAccess;
    INHERIT_FLAGS Inheritance;
    LPSTR lpInheritProperty;
};

typedef struct _ACTRL_ACCESS_ENTRY_LISTW _ACTRL_ACCESS_ENTRY_LISTW, *P_ACTRL_ACCESS_ENTRY_LISTW;

typedef struct _ACTRL_ACCESS_ENTRYW _ACTRL_ACCESS_ENTRYW, *P_ACTRL_ACCESS_ENTRYW;

typedef struct _ACTRL_ACCESS_ENTRYW ACTRL_ACCESS_ENTRYW;

typedef struct _TRUSTEE_W _TRUSTEE_W, *P_TRUSTEE_W;

typedef struct _TRUSTEE_W TRUSTEE_W;

typedef wchar_t WCHAR;

typedef WCHAR * LPWSTR;

struct _ACTRL_ACCESS_ENTRY_LISTW {
    ULONG cEntries;
    ACTRL_ACCESS_ENTRYW * pAccessList;
};

struct _TRUSTEE_W {
    struct _TRUSTEE_W * pMultipleTrustee;
    MULTIPLE_TRUSTEE_OPERATION MultipleTrusteeOperation;
    TRUSTEE_FORM TrusteeForm;
    TRUSTEE_TYPE TrusteeType;
    LPWSTR ptstrName;
};

struct _ACTRL_ACCESS_ENTRYW {
    TRUSTEE_W Trustee;
    ULONG fAccessFlags;
    ACCESS_RIGHTS Access;
    ACCESS_RIGHTS ProvSpecificAccess;
    INHERIT_FLAGS Inheritance;
    LPWSTR lpInheritProperty;
};

typedef struct _ACTRL_ACCESS_INFOA _ACTRL_ACCESS_INFOA, *P_ACTRL_ACCESS_INFOA;

struct _ACTRL_ACCESS_INFOA {
    ULONG fAccessPermission;
    LPSTR lpAccessPermissionName;
};

typedef struct _ACTRL_ACCESS_INFOW _ACTRL_ACCESS_INFOW, *P_ACTRL_ACCESS_INFOW;

struct _ACTRL_ACCESS_INFOW {
    ULONG fAccessPermission;
    LPWSTR lpAccessPermissionName;
};

typedef struct _ACTRL_ALISTA _ACTRL_ALISTA, *P_ACTRL_ALISTA;

typedef struct _ACTRL_PROPERTY_ENTRYA _ACTRL_PROPERTY_ENTRYA, *P_ACTRL_PROPERTY_ENTRYA;

typedef struct _ACTRL_PROPERTY_ENTRYA * PACTRL_PROPERTY_ENTRYA;

typedef struct _ACTRL_ACCESS_ENTRY_LISTA * PACTRL_ACCESS_ENTRY_LISTA;

struct _ACTRL_ALISTA {
    ULONG cEntries;
    PACTRL_PROPERTY_ENTRYA pPropertyAccessList;
};

struct _ACTRL_PROPERTY_ENTRYA {
    LPSTR lpProperty;
    PACTRL_ACCESS_ENTRY_LISTA pAccessEntryList;
    ULONG fListFlags;
};

typedef struct _ACTRL_ALISTW _ACTRL_ALISTW, *P_ACTRL_ALISTW;

typedef struct _ACTRL_PROPERTY_ENTRYW _ACTRL_PROPERTY_ENTRYW, *P_ACTRL_PROPERTY_ENTRYW;

typedef struct _ACTRL_PROPERTY_ENTRYW * PACTRL_PROPERTY_ENTRYW;

typedef struct _ACTRL_ACCESS_ENTRY_LISTW * PACTRL_ACCESS_ENTRY_LISTW;

struct _ACTRL_ALISTW {
    ULONG cEntries;
    PACTRL_PROPERTY_ENTRYW pPropertyAccessList;
};

struct _ACTRL_PROPERTY_ENTRYW {
    LPWSTR lpProperty;
    PACTRL_ACCESS_ENTRY_LISTW pAccessEntryList;
    ULONG fListFlags;
};

typedef struct _ACTRL_CONTROL_INFOA _ACTRL_CONTROL_INFOA, *P_ACTRL_CONTROL_INFOA;

struct _ACTRL_CONTROL_INFOA {
    LPSTR lpControlId;
    LPSTR lpControlName;
};

typedef struct _ACTRL_CONTROL_INFOW _ACTRL_CONTROL_INFOW, *P_ACTRL_CONTROL_INFOW;

struct _ACTRL_CONTROL_INFOW {
    LPWSTR lpControlId;
    LPWSTR lpControlName;
};

typedef struct _ACTRL_OVERLAPPED _ACTRL_OVERLAPPED, *P_ACTRL_OVERLAPPED;

typedef union _union_5339 _union_5339, *P_union_5339;

typedef void * HANDLE;

typedef void * PVOID;

union _union_5339 {
    PVOID Provider;
    ULONG Reserved1;
};

struct _ACTRL_OVERLAPPED {
    union _union_5339 u;
    ULONG Reserved2;
    HANDLE hEvent;
};

typedef struct _EXPLICIT_ACCESS_A _EXPLICIT_ACCESS_A, *P_EXPLICIT_ACCESS_A;

typedef enum _ACCESS_MODE ACCESS_MODE;

struct _EXPLICIT_ACCESS_A {
    DWORD grfAccessPermissions;
    ACCESS_MODE grfAccessMode;
    DWORD grfInheritance;
    TRUSTEE_A Trustee;
};

typedef struct _EXPLICIT_ACCESS_W _EXPLICIT_ACCESS_W, *P_EXPLICIT_ACCESS_W;

struct _EXPLICIT_ACCESS_W {
    DWORD grfAccessPermissions;
    ACCESS_MODE grfAccessMode;
    DWORD grfInheritance;
    TRUSTEE_W Trustee;
};

typedef struct _FN_OBJECT_MGR_FUNCTIONS _FN_OBJECT_MGR_FUNCTIONS, *P_FN_OBJECT_MGR_FUNCTIONS;

struct _FN_OBJECT_MGR_FUNCTIONS {
    ULONG Placeholder;
};

typedef struct _INHERITED_FROMA _INHERITED_FROMA, *P_INHERITED_FROMA;

typedef long LONG;

struct _INHERITED_FROMA {
    LONG GenerationGap;
    LPSTR AncestorName;
};

typedef struct _INHERITED_FROMW _INHERITED_FROMW, *P_INHERITED_FROMW;

struct _INHERITED_FROMW {
    LONG GenerationGap;
    LPWSTR AncestorName;
};

typedef struct _OBJECTS_AND_NAME_A _OBJECTS_AND_NAME_A, *P_OBJECTS_AND_NAME_A;

typedef enum _SE_OBJECT_TYPE {
    SE_DS_OBJECT=8,
    SE_DS_OBJECT_ALL=9,
    SE_FILE_OBJECT=1,
    SE_KERNEL_OBJECT=6,
    SE_LMSHARE=5,
    SE_PRINTER=3,
    SE_PROVIDER_DEFINED_OBJECT=10,
    SE_REGISTRY_KEY=4,
    SE_REGISTRY_WOW64_32KEY=12,
    SE_SERVICE=2,
    SE_UNKNOWN_OBJECT_TYPE=0,
    SE_WINDOW_OBJECT=7,
    SE_WMIGUID_OBJECT=11
} _SE_OBJECT_TYPE;

typedef enum _SE_OBJECT_TYPE SE_OBJECT_TYPE;

struct _OBJECTS_AND_NAME_A {
    DWORD ObjectsPresent;
    SE_OBJECT_TYPE ObjectType;
    LPSTR ObjectTypeName;
    LPSTR InheritedObjectTypeName;
    LPSTR ptstrName;
};

typedef struct _OBJECTS_AND_NAME_W _OBJECTS_AND_NAME_W, *P_OBJECTS_AND_NAME_W;

struct _OBJECTS_AND_NAME_W {
    DWORD ObjectsPresent;
    SE_OBJECT_TYPE ObjectType;
    LPWSTR ObjectTypeName;
    LPWSTR InheritedObjectTypeName;
    LPWSTR ptstrName;
};

typedef struct _OBJECTS_AND_SID _OBJECTS_AND_SID, *P_OBJECTS_AND_SID;


/* WARNING! conflicting data type names: /guiddef.h/GUID - /GUID */

typedef struct _SID _SID, *P_SID;

typedef struct _SID SID;

typedef uchar BYTE;

typedef struct _SID_IDENTIFIER_AUTHORITY _SID_IDENTIFIER_AUTHORITY, *P_SID_IDENTIFIER_AUTHORITY;

typedef struct _SID_IDENTIFIER_AUTHORITY SID_IDENTIFIER_AUTHORITY;

struct _SID_IDENTIFIER_AUTHORITY {
    BYTE Value[6];
};

struct _SID {
    BYTE Revision;
    BYTE SubAuthorityCount;
    SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
    DWORD SubAuthority[1];
};

struct _OBJECTS_AND_SID {
    DWORD ObjectsPresent;
    GUID ObjectTypeGuid;
    GUID InheritedObjectTypeGuid;
    SID * pSid;
};

typedef enum _PROGRESS_INVOKE_SETTING {
    ProgressCancelOperation=4,
    ProgressInvokeEveryObject=2,
    ProgressInvokeNever=1,
    ProgressInvokeOnError=3,
    ProgressRetryOperation=5
} _PROGRESS_INVOKE_SETTING;

typedef struct _TRUSTEE_ACCESSA _TRUSTEE_ACCESSA, *P_TRUSTEE_ACCESSA;

struct _TRUSTEE_ACCESSA {
    LPSTR lpProperty;
    ACCESS_RIGHTS Access;
    ULONG fAccessFlags;
    ULONG fReturnedAccess;
};

typedef struct _TRUSTEE_ACCESSW _TRUSTEE_ACCESSW, *P_TRUSTEE_ACCESSW;

struct _TRUSTEE_ACCESSW {
    LPWSTR lpProperty;
    ACCESS_RIGHTS Access;
    ULONG fAccessFlags;
    ULONG fReturnedAccess;
};

typedef struct _ACTRL_ALISTA ACTRL_ACCESSA;

typedef ACTRL_ACCESSA ACTRL_ACCESS;

typedef ACTRL_ACCESS_ENTRYA ACTRL_ACCESS_ENTRY;

typedef struct _ACTRL_ACCESS_ENTRY_LISTA ACTRL_ACCESS_ENTRY_LISTA;

typedef ACTRL_ACCESS_ENTRY_LISTA ACTRL_ACCESS_ENTRY_LIST;

typedef struct _ACTRL_ACCESS_ENTRY_LISTW ACTRL_ACCESS_ENTRY_LISTW;

typedef struct _ACTRL_ACCESS_INFOA ACTRL_ACCESS_INFOA;

typedef ACTRL_ACCESS_INFOA ACTRL_ACCESS_INFO;

typedef struct _ACTRL_ACCESS_INFOW ACTRL_ACCESS_INFOW;

typedef struct _ACTRL_ALISTW ACTRL_ACCESSW;

typedef struct _ACTRL_ALISTA ACTRL_AUDITA;

typedef ACTRL_AUDITA ACTRL_AUDIT;

typedef struct _ACTRL_ALISTW ACTRL_AUDITW;

typedef struct _ACTRL_CONTROL_INFOA ACTRL_CONTROL_INFOA;

typedef ACTRL_CONTROL_INFOA ACTRL_CONTROL_INFO;

typedef struct _ACTRL_CONTROL_INFOW ACTRL_CONTROL_INFOW;

typedef struct _ACTRL_OVERLAPPED ACTRL_OVERLAPPED;

typedef struct _ACTRL_PROPERTY_ENTRYA ACTRL_PROPERTY_ENTRYA;

typedef ACTRL_PROPERTY_ENTRYA ACTRL_PROPERTY_ENTRY;

typedef struct _ACTRL_PROPERTY_ENTRYW ACTRL_PROPERTY_ENTRYW;

typedef struct _EXPLICIT_ACCESS_A EXPLICIT_ACCESSA;

typedef EXPLICIT_ACCESSA EXPLICIT_ACCESS;

typedef struct _EXPLICIT_ACCESS_A EXPLICIT_ACCESS_A;

typedef EXPLICIT_ACCESS_A EXPLICIT_ACCESS_;

typedef struct _EXPLICIT_ACCESS_W EXPLICIT_ACCESS_W;

typedef struct _EXPLICIT_ACCESS_W EXPLICIT_ACCESSW;

typedef struct _FN_OBJECT_MGR_FUNCTIONS FN_OBJECT_MGR_FUNCTS;

typedef struct _INHERITED_FROMA INHERITED_FROMA;

typedef INHERITED_FROMA INHERITED_FROM;

typedef struct _INHERITED_FROMW INHERITED_FROMW;

typedef struct _OBJECTS_AND_NAME_A OBJECTS_AND_NAME_A;

typedef OBJECTS_AND_NAME_A OBJECTS_AND_NAME_;

typedef struct _OBJECTS_AND_NAME_W OBJECTS_AND_NAME_W;

typedef struct _OBJECTS_AND_SID OBJECTS_AND_SID;

typedef ULONG * PACCESS_RIGHTS;

typedef struct _ACTRL_ALISTA * PACTRL_ACCESSA;

typedef PACTRL_ACCESSA PACTRL_ACCESS;

typedef struct _ACTRL_ACCESS_ENTRYA * PACTRL_ACCESS_ENTRYA;

typedef PACTRL_ACCESS_ENTRYA PACTRL_ACCESS_ENTRY;

typedef PACTRL_ACCESS_ENTRY_LISTA PACTRL_ACCESS_ENTRY_LIST;

typedef struct _ACTRL_ACCESS_ENTRYW * PACTRL_ACCESS_ENTRYW;

typedef struct _ACTRL_ACCESS_INFOA * PACTRL_ACCESS_INFOA;

typedef PACTRL_ACCESS_INFOA PACTRL_ACCESS_INFO;

typedef struct _ACTRL_ACCESS_INFOW * PACTRL_ACCESS_INFOW;

typedef struct _ACTRL_ALISTW * PACTRL_ACCESSW;

typedef struct _ACTRL_ALISTA * PACTRL_AUDITA;

typedef PACTRL_AUDITA PACTRL_AUDIT;

typedef struct _ACTRL_ALISTW * PACTRL_AUDITW;

typedef struct _ACTRL_CONTROL_INFOA * PACTRL_CONTROL_INFOA;

typedef PACTRL_CONTROL_INFOA PACTRL_CONTROL_INFO;

typedef struct _ACTRL_CONTROL_INFOW * PACTRL_CONTROL_INFOW;

typedef struct _ACTRL_OVERLAPPED * PACTRL_OVERLAPPED;

typedef PACTRL_PROPERTY_ENTRYA PACTRL_PROPERTY_ENTRY;

typedef struct _EXPLICIT_ACCESS_A * PEXPLICIT_ACCESSA;

typedef PEXPLICIT_ACCESSA PEXPLICIT_ACCESS;

typedef struct _EXPLICIT_ACCESS_A * PEXPLICIT_ACCESS_A;

typedef PEXPLICIT_ACCESS_A PEXPLICIT_ACCESS_;

typedef struct _EXPLICIT_ACCESS_W * PEXPLICIT_ACCESS_W;

typedef struct _EXPLICIT_ACCESS_W * PEXPLICIT_ACCESSW;

typedef struct _FN_OBJECT_MGR_FUNCTIONS * PFN_OBJECT_MGR_FUNCTS;

typedef ULONG * PINHERIT_FLAGS;

typedef struct _INHERITED_FROMA * PINHERITED_FROMA;

typedef PINHERITED_FROMA PINHERITED_FROM;

typedef struct _INHERITED_FROMW * PINHERITED_FROMW;

typedef struct _OBJECTS_AND_NAME_A * POBJECTS_AND_NAME_A;

typedef POBJECTS_AND_NAME_A POBJECTS_AND_NAME_;

typedef struct _OBJECTS_AND_NAME_W * POBJECTS_AND_NAME_W;

typedef struct _OBJECTS_AND_SID * POBJECTS_AND_SID;

typedef enum _PROGRESS_INVOKE_SETTING * PPROG_INVOKE_SETTING;

typedef enum _PROGRESS_INVOKE_SETTING PROG_INVOKE_SETTING;

typedef struct _TRUSTEE_A * PTRUSTEEA;

typedef PTRUSTEEA PTRUSTEE;

typedef struct _TRUSTEE_A * PTRUSTEE_A;

typedef PTRUSTEE_A PTRUSTEE_;

typedef struct _TRUSTEE_ACCESSA * PTRUSTEE_ACCESSA;

typedef PTRUSTEE_ACCESSA PTRUSTEE_ACCESS;

typedef struct _TRUSTEE_ACCESSW * PTRUSTEE_ACCESSW;

typedef struct _TRUSTEE_W * PTRUSTEE_W;

typedef struct _TRUSTEE_W * PTRUSTEEW;

typedef struct _TRUSTEE_A TRUSTEEA;

typedef TRUSTEEA TRUSTEE;

typedef TRUSTEE_A TRUSTEE_;

typedef struct _TRUSTEE_ACCESSA TRUSTEE_ACCESSA;

typedef TRUSTEE_ACCESSA TRUSTEE_ACCESS;

typedef struct _TRUSTEE_ACCESSW TRUSTEE_ACCESSW;

typedef struct _TRUSTEE_W TRUSTEEW;

typedef int BOOL;

typedef void (* FN_PROGRESS)(LPWSTR, DWORD, PPROG_INVOKE_SETTING, PVOID, BOOL);

#define DQWORD_ALIGN 15

#define DWORD_ALIGN 3

#define P2_ALIGN 7

#define QWORD_ALIGN 7

#define WORD_ALIGN 1

typedef enum _AVRT_PRIORITY {
    AVRT_PRIORITY_CRITICAL=3,
    AVRT_PRIORITY_HIGH=2,
    AVRT_PRIORITY_LOW=0,
    AVRT_PRIORITY_NORMAL=1
} _AVRT_PRIORITY;

typedef enum _AVRT_PRIORITY AVRT_PRIORITY;

typedef enum _AVRT_PRIORITY * PAVRT_PRIORITY;

#define FAST_FAIL_CORRUPT_LIST_ENTRY 3

#define FAST_FAIL_FATAL_APP_EXIT 7

#define FAST_FAIL_GS_COOKIE_INIT 6

#define FAST_FAIL_INCORRECT_STACK 4

#define FAST_FAIL_INVALID_ARG 5

#define FAST_FAIL_RANGE_CHECK_FAILURE 8

#define FAST_FAIL_STACK_COOKIE_CHECK_FAILURE 2

#define FAST_FAIL_VTGUARD_CHECK_FAILURE 1

#define PF_FASTFAIL_AVAILABLE 23

#define ADDRESS_TAG_BIT 2147483648

#define MAXDWORD32 -1

#define MAXDWORD64 -1

#define MAXHALF_PTR -1

#define MAXINT -1

#define MAXINT16 -1

#define MAXINT32 -1

#define MAXINT64 -1

#define MAXINT8 -1

#define MAXINT_PTR -1

#define MAXLONG32 -1

#define MAXLONG64 -1

#define MAXLONG_PTR -1

#define MAXSIZE_T -1

#define MAXSSIZE_T -1

#define MAXUHALF_PTR -1

#define MAXUINT -1

#define MAXUINT16 -1

#define MAXUINT32 -1

#define MAXUINT64 -1

#define MAXUINT8 -1

#define MAXUINT_PTR -1

#define MAXULONG32 -1

#define MAXULONG64 -1

#define MAXULONG_PTR -1

#define MAXULONGLONG -1

#define MINHALF_PTR 0

#define MININT 0

#define MININT16 0

#define MININT32 0

#define MININT64 0

#define MININT8 0

#define MININT_PTR 0

#define MINLONG32 0

#define MINLONG64 0

#define MINLONG_PTR 0

#define MINSSIZE_T 0

typedef uint DWORD32;

typedef ulonglong DWORD64;

typedef ulong ULONG_PTR;

typedef ULONG_PTR DWORD_PTR;

typedef short HALF_PTR;

typedef ulong HANDLE_PTR;

typedef short INT16;

typedef int INT32;

typedef longlong INT64;

typedef char INT8;

typedef int INT_PTR;

typedef ULONG_PTR KAFFINITY;

typedef int LONG32;

typedef longlong LONG64;

typedef long LONG_PTR;

typedef uint * PDWORD32;

typedef ulonglong * PDWORD64;

typedef ULONG_PTR * PDWORD_PTR;

typedef short * PHALF_PTR;

typedef short * PINT16;

typedef int * PINT32;

typedef longlong * PINT64;

typedef char * PINT8;

typedef int * PINT_PTR;

typedef KAFFINITY * PKAFFINITY;

typedef int * PLONG32;

typedef longlong * PLONG64;

typedef long * PLONG_PTR;

typedef ulong POINTER_64_INT;

typedef ULONG_PTR * PSIZE_T;

typedef LONG_PTR * PSSIZE_T;

typedef ushort * PUHALF_PTR;

typedef ushort * PUINT16;

typedef uint * PUINT32;

typedef ulonglong * PUINT64;

typedef uchar * PUINT8;

typedef uint * PUINT_PTR;

typedef uint * PULONG32;

typedef ulonglong * PULONG64;

typedef ulong * PULONG_PTR;

typedef long SHANDLE_PTR;

typedef ULONG_PTR SIZE_T;

typedef LONG_PTR SSIZE_T;

typedef ushort UHALF_PTR;

typedef ushort UINT16;

typedef uint UINT32;

typedef ulonglong UINT64;

typedef uchar UINT8;

typedef uint UINT_PTR;

typedef uint ULONG32;

typedef ulonglong ULONG64;

#define BCRYPT_ALG_HANDLE_HMAC_FLAG 8

#define BCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE 3

#define BCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION 4

#define BCRYPT_AUTH_MODE_CHAIN_CALLS_FLAG 1

#define BCRYPT_AUTH_MODE_IN_PROGRESS_FLAG 2

#define BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO_VERSION 1

#define BCRYPT_BLOCK_PADDING 1

#define BCRYPT_CIPHER_INTERFACE 1

#define BCRYPT_CIPHER_OPERATION 1

#define BCRYPT_DH_PARAMETERS_MAGIC 1297107012

#define BCRYPT_DH_PRIVATE_MAGIC 1448101956

#define BCRYPT_DH_PUBLIC_MAGIC 1112557636

#define BCRYPT_DSA_PARAMETERS_MAGIC 1297109828

#define BCRYPT_DSA_PRIVATE_MAGIC 1448104772

#define BCRYPT_DSA_PUBLIC_MAGIC 1112560452

#define BCRYPT_ECDH_PRIVATE_P256_MAGIC 843793221

#define BCRYPT_ECDH_PRIVATE_P384_MAGIC 877347653

#define BCRYPT_ECDH_PRIVATE_P521_MAGIC 910902085

#define BCRYPT_ECDH_PUBLIC_P256_MAGIC 827016005

#define BCRYPT_ECDH_PUBLIC_P384_MAGIC 860570437

#define BCRYPT_ECDH_PUBLIC_P521_MAGIC 894124869

#define BCRYPT_ECDSA_PRIVATE_P256_MAGIC 844317509

#define BCRYPT_ECDSA_PRIVATE_P384_MAGIC 877871941

#define BCRYPT_ECDSA_PRIVATE_P521_MAGIC 911426373

#define BCRYPT_ECDSA_PUBLIC_P256_MAGIC 827540293

#define BCRYPT_ECDSA_PUBLIC_P384_MAGIC 861094725

#define BCRYPT_ECDSA_PUBLIC_P521_MAGIC 894649157

#define BCRYPT_HASH_INTERFACE 2

#define BCRYPT_HASH_OPERATION 2

#define BCRYPT_KEY_DATA_BLOB_MAGIC 1296188491

#define BCRYPT_KEY_DATA_BLOB_VERSION1 1

#define BCRYPT_NO_KEY_VALIDATION 8

#define BCRYPT_OBJECT_ALIGNMENT 16

#define BCRYPT_PAD_NONE 1

#define BCRYPT_PAD_OAEP 4

#define BCRYPT_PAD_PKCS1 2

#define BCRYPT_PAD_PSS 8

#define BCRYPT_PRIVATE_KEY_FLAG 2

#define BCRYPT_PROV_DISPATCH 1

#define BCRYPT_PUBLIC_KEY_FLAG 1

#define BCRYPT_RNG_INTERFACE 6

#define BCRYPT_RNG_OPERATION 32

#define BCRYPT_RNG_USE_ENTROPY_IN_BUFFER 1

#define BCRYPT_RSAFULLPRIVATE_MAGIC 859919186

#define BCRYPT_RSAPRIVATE_MAGIC 843141970

#define BCRYPT_RSAPUBLIC_MAGIC 826364754

#define BCRYPT_SECRET_AGREEMENT_INTERFACE 4

#define BCRYPT_SECRET_AGREEMENT_OPERATION 8

#define BCRYPT_SIGNATURE_INTERFACE 5

#define BCRYPT_SIGNATURE_OPERATION 16

#define BCRYPT_SUPPORTED_PAD_OAEP 8

#define BCRYPT_SUPPORTED_PAD_PKCS1_ENC 2

#define BCRYPT_SUPPORTED_PAD_PKCS1_SIG 4

#define BCRYPT_SUPPORTED_PAD_PSS 16

#define BCRYPT_SUPPORTED_PAD_ROUTER 1

#define BCRYPT_USE_SYSTEM_PREFERRED_RNG 2

#define BCRYPTBUFFER_VERSION 0

#define CRYPT_ALL_FUNCTIONS 1

#define CRYPT_ALL_PROVIDERS 2

#define CRYPT_ANY 4

#define CRYPT_DOMAIN 2

#define CRYPT_EXCLUSIVE 1

#define CRYPT_KM 2

#define CRYPT_LOCAL 1

#define CRYPT_MIN_DEPENDENCIES 1

#define CRYPT_MM 3

#define CRYPT_OVERRIDE 65536

#define CRYPT_OVERWRITE 1

#define CRYPT_PRIORITY_BOTTOM 4294967295

#define CRYPT_PRIORITY_TOP 0

#define CRYPT_PROCESS_ISOLATE 65536

#define CRYPT_UM 1

#define KDF_ALGORITHMID 8

#define KDF_HASH_ALGORITHM 0

#define KDF_HMAC_KEY 3

#define KDF_PARTYUINFO 9

#define KDF_PARTYVINFO 10

#define KDF_SECRET_APPEND 2

#define KDF_SECRET_HANDLE 6

#define KDF_SECRET_PREPEND 1

#define KDF_SUPPPRIVINFO 12

#define KDF_SUPPPUBINFO 11

#define KDF_TLS_PRF_LABEL 4

#define KDF_TLS_PRF_PROTOCOL 7

#define KDF_TLS_PRF_SEED 5

#define KDF_USE_SECRET_AS_HMAC_KEY_FLAG 1

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT __BCRYPT_KEY_LENGTHS_STRUCT, *P__BCRYPT_KEY_LENGTHS_STRUCT;


/* WARNING! conflicting data type names: /WinDef.h/ULONG - /wtypes.h/ULONG */

struct __BCRYPT_KEY_LENGTHS_STRUCT {
    ULONG dwMinLength;
    ULONG dwMaxLength;
    ULONG dwIncrement;
};

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER _BCRYPT_ALGORITHM_IDENTIFIER, *P_BCRYPT_ALGORITHM_IDENTIFIER;

struct _BCRYPT_ALGORITHM_IDENTIFIER {
    LPWSTR pszName;
    ULONG dwClass;
    ULONG dwFlags;
};

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *P_BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;

typedef uchar UCHAR;

typedef UCHAR * PUCHAR;

typedef double ULONGLONG;

struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO {
    ULONG cbSize;
    ULONG dwInfoVersion;
    PUCHAR pbNonce;
    ULONG cbNonce;
    PUCHAR pbAuthData;
    ULONG cbAuthData;
    PUCHAR pbTag;
    ULONG cbTag;
    PUCHAR pbMacContext;
    ULONG cbMacContext;
    ULONG cbAAD;
    ULONGLONG cbData;
    ULONG dwFlags;
};

typedef struct _BCRYPT_DH_KEY_BLOB _BCRYPT_DH_KEY_BLOB, *P_BCRYPT_DH_KEY_BLOB;

struct _BCRYPT_DH_KEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
};

typedef struct _BCRYPT_DH_PARAMETER_HEADER _BCRYPT_DH_PARAMETER_HEADER, *P_BCRYPT_DH_PARAMETER_HEADER;

struct _BCRYPT_DH_PARAMETER_HEADER {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
};

typedef struct _BCRYPT_DSA_KEY_BLOB _BCRYPT_DSA_KEY_BLOB, *P_BCRYPT_DSA_KEY_BLOB;

struct _BCRYPT_DSA_KEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
    UCHAR Count[4];
    UCHAR Seed[20];
    UCHAR q[20];
};

typedef struct _BCRYPT_DSA_PARAMETER_HEADER _BCRYPT_DSA_PARAMETER_HEADER, *P_BCRYPT_DSA_PARAMETER_HEADER;

struct _BCRYPT_DSA_PARAMETER_HEADER {
    ULONG cbLength;
    ULONG dwMagic;
    ULONG cbKeyLength;
    UCHAR Count[4];
    UCHAR Seed[20];
    UCHAR q[20];
};

typedef struct _BCRYPT_ECCKEY_BLOB _BCRYPT_ECCKEY_BLOB, *P_BCRYPT_ECCKEY_BLOB;

struct _BCRYPT_ECCKEY_BLOB {
    ULONG dwMagic;
    ULONG cbKey;
};

typedef struct _BCRYPT_INTERFACE_VERSION _BCRYPT_INTERFACE_VERSION, *P_BCRYPT_INTERFACE_VERSION;

typedef ushort USHORT;

struct _BCRYPT_INTERFACE_VERSION {
    USHORT MajorVersion;
    USHORT MinorVersion;
};

typedef struct _BCRYPT_KEY_BLOB _BCRYPT_KEY_BLOB, *P_BCRYPT_KEY_BLOB;

struct _BCRYPT_KEY_BLOB {
    ULONG Magic;
};

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER _BCRYPT_KEY_DATA_BLOB_HEADER, *P_BCRYPT_KEY_DATA_BLOB_HEADER;

struct _BCRYPT_KEY_DATA_BLOB_HEADER {
    ULONG dwMagic;
    ULONG dwVersion;
    ULONG cbKeyData;
};

typedef struct _BCRYPT_OAEP_PADDING_INFO _BCRYPT_OAEP_PADDING_INFO, *P_BCRYPT_OAEP_PADDING_INFO;

typedef WCHAR * LPCWSTR;

struct _BCRYPT_OAEP_PADDING_INFO {
    LPCWSTR pszAlgId;
    PUCHAR pbLabel;
    ULONG cbLabel;
};

typedef struct _BCRYPT_OID _BCRYPT_OID, *P_BCRYPT_OID;

struct _BCRYPT_OID {
    ULONG cbOID;
    PUCHAR pbOID;
};

typedef struct _BCRYPT_OID_LIST _BCRYPT_OID_LIST, *P_BCRYPT_OID_LIST;

typedef struct _BCRYPT_OID BCRYPT_OID;

struct _BCRYPT_OID_LIST {
    ULONG dwOIDCount;
    BCRYPT_OID * pOIDs;
};

typedef struct _BCRYPT_PKCS1_PADDING_INFO _BCRYPT_PKCS1_PADDING_INFO, *P_BCRYPT_PKCS1_PADDING_INFO;

struct _BCRYPT_PKCS1_PADDING_INFO {
    LPCWSTR pszAlgId;
};

typedef struct _BCRYPT_PROVIDER_NAME _BCRYPT_PROVIDER_NAME, *P_BCRYPT_PROVIDER_NAME;

struct _BCRYPT_PROVIDER_NAME {
    LPWSTR pszProviderName;
};

typedef struct _BCRYPT_PSS_PADDING_INFO _BCRYPT_PSS_PADDING_INFO, *P_BCRYPT_PSS_PADDING_INFO;

struct _BCRYPT_PSS_PADDING_INFO {
    LPCWSTR pszAlgId;
    ULONG cbSalt;
};

typedef struct _BCRYPT_RSAKEY_BLOB _BCRYPT_RSAKEY_BLOB, *P_BCRYPT_RSAKEY_BLOB;

struct _BCRYPT_RSAKEY_BLOB {
    ULONG Magic;
    ULONG BitLength;
    ULONG cbPublicExp;
    ULONG cbModulus;
    ULONG cbPrime1;
    ULONG cbPrime2;
};

typedef struct _BCryptBuffer _BCryptBuffer, *P_BCryptBuffer;

struct _BCryptBuffer {
    ULONG cbBuffer;
    ULONG BufferType;
    PVOID pvBuffer;
};

typedef struct _BCryptBufferDesc _BCryptBufferDesc, *P_BCryptBufferDesc;

typedef struct _BCryptBuffer * PBCryptBuffer;

struct _BCryptBufferDesc {
    ULONG ulVersion;
    ULONG cBuffers;
    PBCryptBuffer pBuffers;
};

typedef struct _CRYPT_CONTEXT_CONFIG _CRYPT_CONTEXT_CONFIG, *P_CRYPT_CONTEXT_CONFIG;

struct _CRYPT_CONTEXT_CONFIG {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG _CRYPT_CONTEXT_FUNCTION_CONFIG, *P_CRYPT_CONTEXT_FUNCTION_CONFIG;

struct _CRYPT_CONTEXT_FUNCTION_CONFIG {
    ULONG dwFlags;
    ULONG dwReserved;
};

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS _CRYPT_CONTEXT_FUNCTION_PROVIDERS, *P_CRYPT_CONTEXT_FUNCTION_PROVIDERS;

typedef WCHAR * PWSTR;

struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS {
    ULONG cProviders;
    PWSTR * rgpszProviders;
};

typedef struct _CRYPT_CONTEXT_FUNCTIONS _CRYPT_CONTEXT_FUNCTIONS, *P_CRYPT_CONTEXT_FUNCTIONS;

struct _CRYPT_CONTEXT_FUNCTIONS {
    ULONG cFunctions;
    PWSTR * rgpszFunctions;
};

typedef struct _CRYPT_CONTEXTS _CRYPT_CONTEXTS, *P_CRYPT_CONTEXTS;

struct _CRYPT_CONTEXTS {
    ULONG cContexts;
    PWSTR * rgpszContexts;
};

typedef struct _CRYPT_IMAGE_REF _CRYPT_IMAGE_REF, *P_CRYPT_IMAGE_REF;

struct _CRYPT_IMAGE_REF {
    PWSTR pszImage;
    ULONG dwFlags;
};

typedef struct _CRYPT_IMAGE_REG _CRYPT_IMAGE_REG, *P_CRYPT_IMAGE_REG;

typedef struct _CRYPT_INTERFACE_REG _CRYPT_INTERFACE_REG, *P_CRYPT_INTERFACE_REG;

typedef struct _CRYPT_INTERFACE_REG * PCRYPT_INTERFACE_REG;

struct _CRYPT_IMAGE_REG {
    PWSTR pszImage;
    ULONG cInterfaces;
    PCRYPT_INTERFACE_REG * rgpInterfaces;
};

struct _CRYPT_INTERFACE_REG {
    ULONG dwInterface;
    ULONG dwFlags;
    ULONG cFunctions;
    PWSTR * rgpszFunctions;
};

typedef struct _CRYPT_PROPERTY_REF _CRYPT_PROPERTY_REF, *P_CRYPT_PROPERTY_REF;

struct _CRYPT_PROPERTY_REF {
    PWSTR pszProperty;
    ULONG cbValue;
    PUCHAR pbValue;
};

typedef struct _CRYPT_PROVIDER_REF _CRYPT_PROVIDER_REF, *P_CRYPT_PROVIDER_REF;

typedef struct _CRYPT_PROPERTY_REF * PCRYPT_PROPERTY_REF;

typedef struct _CRYPT_IMAGE_REF * PCRYPT_IMAGE_REF;

struct _CRYPT_PROVIDER_REF {
    ULONG dwInterface;
    PWSTR pszFunction;
    PWSTR pszProvider;
    ULONG cProperties;
    PCRYPT_PROPERTY_REF * rgpProperties;
    PCRYPT_IMAGE_REF pUM;
    PCRYPT_IMAGE_REF pKM;
};

typedef struct _CRYPT_PROVIDER_REFS _CRYPT_PROVIDER_REFS, *P_CRYPT_PROVIDER_REFS;

typedef struct _CRYPT_PROVIDER_REF * PCRYPT_PROVIDER_REF;

struct _CRYPT_PROVIDER_REFS {
    ULONG cProviders;
    PCRYPT_PROVIDER_REF * rgpProviders;
};

typedef struct _CRYPT_PROVIDER_REG _CRYPT_PROVIDER_REG, *P_CRYPT_PROVIDER_REG;

typedef struct _CRYPT_IMAGE_REG * PCRYPT_IMAGE_REG;

struct _CRYPT_PROVIDER_REG {
    ULONG cAliases;
    PWSTR * rgpszAliases;
    PCRYPT_IMAGE_REG pUM;
    PCRYPT_IMAGE_REG pKM;
};

typedef struct _CRYPT_PROVIDERS _CRYPT_PROVIDERS, *P_CRYPT_PROVIDERS;

struct _CRYPT_PROVIDERS {
    ULONG cProviders;
    PWSTR * rgpszProviders;
};

typedef PVOID BCRYPT_ALG_HANDLE;

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER BCRYPT_ALGORITHM_IDENTIFIER;

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT BCRYPT_KEY_LENGTHS_STRUCT;

typedef BCRYPT_KEY_LENGTHS_STRUCT BCRYPT_AUTH_TAG_LENGTHS_STRUCT;

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;

typedef struct _BCRYPT_DH_KEY_BLOB BCRYPT_DH_KEY_BLOB;

typedef struct _BCRYPT_DH_PARAMETER_HEADER BCRYPT_DH_PARAMETER_HEADER;

typedef struct _BCRYPT_DSA_KEY_BLOB BCRYPT_DSA_KEY_BLOB;

typedef struct _BCRYPT_DSA_PARAMETER_HEADER BCRYPT_DSA_PARAMETER_HEADER;

typedef struct _BCRYPT_ECCKEY_BLOB BCRYPT_ECCKEY_BLOB;

typedef PVOID BCRYPT_HANDLE;

typedef PVOID BCRYPT_HASH_HANDLE;

typedef struct _BCRYPT_INTERFACE_VERSION BCRYPT_INTERFACE_VERSION;

typedef struct _BCRYPT_KEY_BLOB BCRYPT_KEY_BLOB;

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER BCRYPT_KEY_DATA_BLOB_HEADER;

typedef PVOID BCRYPT_KEY_HANDLE;

typedef struct _BCRYPT_OAEP_PADDING_INFO BCRYPT_OAEP_PADDING_INFO;

typedef struct _BCRYPT_OID_LIST BCRYPT_OID_LIST;

typedef struct _BCRYPT_PKCS1_PADDING_INFO BCRYPT_PKCS1_PADDING_INFO;

typedef struct _BCRYPT_PROVIDER_NAME BCRYPT_PROVIDER_NAME;

typedef struct _BCRYPT_PSS_PADDING_INFO BCRYPT_PSS_PADDING_INFO;

typedef struct _BCRYPT_RSAKEY_BLOB BCRYPT_RSAKEY_BLOB;

typedef PVOID BCRYPT_SECRET_HANDLE;

typedef struct _BCryptBuffer BCryptBuffer;

typedef struct _BCryptBufferDesc BCryptBufferDesc;

typedef struct _CRYPT_CONTEXT_CONFIG CRYPT_CONTEXT_CONFIG;

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG CRYPT_CONTEXT_FUNCTION_CONFIG;

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS CRYPT_CONTEXT_FUNCTION_PROVIDERS;

typedef struct _CRYPT_CONTEXT_FUNCTIONS CRYPT_CONTEXT_FUNCTIONS;

typedef struct _CRYPT_CONTEXTS CRYPT_CONTEXTS;

typedef struct _CRYPT_IMAGE_REF CRYPT_IMAGE_REF;

typedef struct _CRYPT_IMAGE_REG CRYPT_IMAGE_REG;

typedef struct _CRYPT_INTERFACE_REG CRYPT_INTERFACE_REG;

typedef struct _CRYPT_PROPERTY_REF CRYPT_PROPERTY_REF;

typedef struct _CRYPT_PROVIDER_REF CRYPT_PROVIDER_REF;

typedef struct _CRYPT_PROVIDER_REFS CRYPT_PROVIDER_REFS;

typedef struct _CRYPT_PROVIDER_REG CRYPT_PROVIDER_REG;

typedef struct _CRYPT_PROVIDERS CRYPT_PROVIDERS;

typedef LONG NTSTATUS;

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO * PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;

typedef struct _BCRYPT_DH_KEY_BLOB * PBCRYPT_DH_KEY_BLOB;

typedef struct _BCRYPT_DSA_KEY_BLOB * PBCRYPT_DSA_KEY_BLOB;

typedef struct _BCRYPT_ECCKEY_BLOB * PBCRYPT_ECCKEY_BLOB;

typedef struct _BCRYPT_INTERFACE_VERSION * PBCRYPT_INTERFACE_VERSION;

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER * PBCRYPT_KEY_DATA_BLOB_HEADER;

typedef struct _BCryptBufferDesc * PBCryptBufferDesc;

typedef struct _CRYPT_CONTEXT_CONFIG * PCRYPT_CONTEXT_CONFIG;

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG * PCRYPT_CONTEXT_FUNCTION_CONFIG;

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS * PCRYPT_CONTEXT_FUNCTION_PROVIDERS;

typedef struct _CRYPT_CONTEXT_FUNCTIONS * PCRYPT_CONTEXT_FUNCTIONS;

typedef struct _CRYPT_CONTEXTS * PCRYPT_CONTEXTS;

typedef struct _CRYPT_PROVIDER_REFS * PCRYPT_PROVIDER_REFS;

typedef struct _CRYPT_PROVIDER_REG * PCRYPT_PROVIDER_REG;

typedef struct _CRYPT_PROVIDERS * PCRYPT_PROVIDERS;

typedef NTSTATUS * PNTSTATUS;

typedef struct _JAVA_POLICY_PROVIDER _JAVA_POLICY_PROVIDER, *P_JAVA_POLICY_PROVIDER;

typedef void * LPVOID;

typedef struct _JAVA_TRUST _JAVA_TRUST, *P_JAVA_TRUST;

typedef struct _JAVA_TRUST * PJAVA_TRUST;

typedef BYTE * PBYTE;

typedef long HRESULT;

struct _JAVA_POLICY_PROVIDER {
    DWORD cbSize;
    LPVOID pZoneManager;
    LPCWSTR pwszZone;
    BOOL fNoBadUI;
    PJAVA_TRUST pbJavaTrust;
    DWORD cbJavaTrust;
    DWORD dwActionID;
    DWORD dwUnsignedActionID;
    BOOL VMBased;
};

struct _JAVA_TRUST {
    DWORD cbSize;
    DWORD flag;
    BOOL fAllActiveXPermissions;
    BOOL fAllPermissions;
    DWORD dwEncodingType;
    PBYTE pbJavaPermissions;
    DWORD cbJavaPermissions;
    PBYTE pbSigner;
    DWORD cbSigner;
    LPCWSTR pwszZone;
    GUID guidZone;
    HRESULT hVerify;
};

typedef struct _JAVA_POLICY_PROVIDER JAVA_POLICY_PROVIDER;

typedef struct _JAVA_TRUST JAVA_TRUST;

typedef struct _JAVA_POLICY_PROVIDER * PJAVA_POLICY_PROVIDER;

#define CCERR_CHOOSECOLORCODES 20480

#define CDERR_DIALOGFAILURE 65535

#define CDERR_FINDRESFAILURE 6

#define CDERR_GENERALCODES 0

#define CDERR_INITIALIZATION 2

#define CDERR_LOADRESFAILURE 7

#define CDERR_LOADSTRFAILURE 5

#define CDERR_LOCKRESFAILURE 8

#define CDERR_MEMALLOCFAILURE 9

#define CDERR_MEMLOCKFAILURE 10

#define CDERR_NOHINSTANCE 4

#define CDERR_NOHOOK 11

#define CDERR_NOTEMPLATE 3

#define CDERR_REGISTERMSGFAIL 12

#define CDERR_STRUCTSIZE 1

#define CFERR_CHOOSEFONTCODES 8192

#define CFERR_MAXLESSTHANMIN 8194

#define CFERR_NOFONTS 8193

#define FNERR_BUFFERTOOSMALL 12291

#define FNERR_FILENAMECODES 12288

#define FNERR_INVALIDFILENAME 12290

#define FNERR_SUBCLASSFAILURE 12289

#define FRERR_BUFFERLENGTHZERO 16385

#define FRERR_FINDREPLACECODES 16384

#define PDERR_CREATEICFAILURE 4106

#define PDERR_DEFAULTDIFFERENT 4108

#define PDERR_DNDMMISMATCH 4105

#define PDERR_GETDEVMODEFAIL 4101

#define PDERR_INITFAILURE 4102

#define PDERR_LOADDRVFAILURE 4100

#define PDERR_NODEFAULTPRN 4104

#define PDERR_NODEVICES 4103

#define PDERR_PARSEFAILURE 4098

#define PDERR_PRINTERCODES 4096

#define PDERR_PRINTERNOTFOUND 4107

#define PDERR_RETDEFFAILURE 4099

#define PDERR_SETUPFAILURE 4097

#define CLCTL_CLUSTER_BASE 0

#define CLCTL_GLOBAL_MASK 8388608

#define CLCTL_GLOBAL_SHIFT 23

#define CLCTL_INTERNAL_MASK 1048576

#define CLCTL_INTERNAL_SHIFT 20

#define CLCTL_MODIFY_MASK 4194304

#define CLCTL_MODIFY_SHIFT 22

#define CLCTL_USER_BASE 2097152

#define CLCTL_USER_MASK 2097152

#define CLCTL_USER_SHIFT 21

#define CLUS_ACCESS_ANY 0

#define CLUS_ACCESS_READ 1

#define CLUS_ACCESS_WRITE 2

#define CLUS_GLOBAL 1

#define CLUS_HYBRID_QUORUM 1024

#define CLUS_LEGACY_QUORUM 4194304

#define CLUS_MODIFY 1

#define CLUS_NO_MODIFY 0

#define CLUS_NODE_MAJORITY_QUORUM 0

#define CLUS_NOT_GLOBAL 0

#define CLUSAPI_ALL_ACCESS 3

#define CLUSAPI_CHANGE_ACCESS 2

#define CLUSAPI_NO_ACCESS 4

#define CLUSAPI_READ_ACCESS 1

#define CLUSAPI_VERSION 1536

#define CLUSAPI_VERSION_SERVER2008 1536

#define CLUSAPI_VERSION_SERVER2008R2 1792

#define CLUSCTL_ACCESS_MODE_MASK 3

#define CLUSCTL_ACCESS_SHIFT 0

#define CLUSCTL_CONTROL_CODE_MASK 4194303

#define CLUSCTL_FUNCTION_SHIFT 2

#define CLUSCTL_OBJECT_MASK 255

#define CLUSCTL_OBJECT_SHIFT 24

#define CLUSCTL_RESOURCE_STATE_CHANGE_REASON_VERSION_1 1

#define CLUSTER_CONFIGURED 2

#define CLUSTER_INSTALLED 1

#define CLUSTER_RUNNING 16

#define CLUSTER_VERSION_FLAG_MIXED_MODE 1

#define CLUSTER_VERSION_UNKNOWN 4294967295

#define CREATE_CLUSTER_MAJOR_VERSION_MASK 4294967040

#define CREATE_CLUSTER_VERSION 1536

#define CREATEDC_PRESENT 2

#define GUID_PRESENT 1

#define MAINTENANCE_MODE_V2_SIG 2881155087

#define MAX_CO_PASSWORD_LENGTH 16

#define MAX_CREATINGDC_LENGTH 256

#define MAX_OBJECTID 64

#define NNLEN 80

#define NT4_MAJOR_VERSION 1

#define NT4SP4_MAJOR_VERSION 2

#define NT51_MAJOR_VERSION 4

#define NT5_MAJOR_VERSION 3

#define NT6_MAJOR_VERSION 5

#define NT7_MAJOR_VERSION 6

typedef struct _CLUS_CSV_VOLUME_INFO _CLUS_CSV_VOLUME_INFO, *P_CLUS_CSV_VOLUME_INFO;

typedef union _ULARGE_INTEGER _ULARGE_INTEGER, *P_ULARGE_INTEGER;

typedef union _ULARGE_INTEGER ULARGE_INTEGER;

typedef enum _CLUSTER_CSV_VOLUME_FAULT_STATE {
    VolumeStateInMaintenance=4,
    VolumeStateNoAccess=2,
    VolumeStateNoDirectIO=1,
    VolumeStateNoFaults=0
} _CLUSTER_CSV_VOLUME_FAULT_STATE;

typedef enum _CLUSTER_CSV_VOLUME_FAULT_STATE CLUSTER_CSV_VOLUME_FAULT_STATE;

typedef enum _CLUSTER_SHARED_VOLUME_BACKUP_STATE {
    VolumeBackupInProgress=1,
    VolumeBackupNone=0
} _CLUSTER_SHARED_VOLUME_BACKUP_STATE;

typedef enum _CLUSTER_SHARED_VOLUME_BACKUP_STATE CLUSTER_SHARED_VOLUME_BACKUP_STATE;

typedef struct _struct_22 _struct_22, *P_struct_22;

typedef struct _struct_23 _struct_23, *P_struct_23;

struct _struct_23 {
    DWORD LowPart;
    DWORD HighPart;
};

struct _struct_22 {
    DWORD LowPart;
    DWORD HighPart;
};

union _ULARGE_INTEGER {
    struct _struct_22 s;
    struct _struct_23 u;
    ULONGLONG QuadPart;
};

struct _CLUS_CSV_VOLUME_INFO {
    ULARGE_INTEGER VolumeOffset;
    DWORD PartitionNumber;
    CLUSTER_CSV_VOLUME_FAULT_STATE FaultState;
    CLUSTER_SHARED_VOLUME_BACKUP_STATE BackupState;
    WCHAR szVolumeFriendlyName[260];
    WCHAR szVolumeName[50];
};

typedef struct _CLUS_DISK_NUMBER_INFO _CLUS_DISK_NUMBER_INFO, *P_CLUS_DISK_NUMBER_INFO;

struct _CLUS_DISK_NUMBER_INFO {
    DWORD DiskNumber;
    DWORD BytesPerSector;
};

typedef struct _CLUS_MAINTENANCE_MODE_INFOEX _CLUS_MAINTENANCE_MODE_INFOEX, *P_CLUS_MAINTENANCE_MODE_INFOEX;

typedef enum _MAINTENANCE_MODE_TYPE_ENUM {
    MaintenanceModeTypeDisableIsAliveCheck=1,
    MaintenanceModeTypeOfflineResource=2,
    MaintenanceModeTypeUnclusterResource=3
} _MAINTENANCE_MODE_TYPE_ENUM;

typedef enum _MAINTENANCE_MODE_TYPE_ENUM MAINTENANCE_MODE_TYPE_ENUM;

typedef enum CLUSTER_RESOURCE_STATE {
    ClusterResourceFailed=5,
    ClusterResourceInherited=1,
    ClusterResourceInitializing=2,
    ClusterResourceOffline=4,
    ClusterResourceOfflinePending=130,
    ClusterResourceOnline=3,
    ClusterResourceOnlinePending=129,
    ClusterResourcePending=128,
    ClusterResourceStateUnknown=0
} CLUSTER_RESOURCE_STATE;

struct _CLUS_MAINTENANCE_MODE_INFOEX {
    BOOL InMaintenance;
    MAINTENANCE_MODE_TYPE_ENUM MaintainenceModeType;
    enum CLUSTER_RESOURCE_STATE InternalState;
    DWORD Signature;
};

typedef struct _CLUS_PROVIDER_STATE_CHANGE_INFO _CLUS_PROVIDER_STATE_CHANGE_INFO, *P_CLUS_PROVIDER_STATE_CHANGE_INFO;

struct _CLUS_PROVIDER_STATE_CHANGE_INFO {
    DWORD dwSize;
    enum CLUSTER_RESOURCE_STATE resourceState;
    WCHAR szProviderId[1];
};

typedef struct _CLUS_SHARED_VOLUME_BACKUP_MODE _CLUS_SHARED_VOLUME_BACKUP_MODE, *P_CLUS_SHARED_VOLUME_BACKUP_MODE;

struct _CLUS_SHARED_VOLUME_BACKUP_MODE {
    CLUSTER_SHARED_VOLUME_BACKUP_STATE BackupState;
    DWORD DelayTimerInSecs;
    WCHAR VolumeName[260];
};

typedef struct _CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS _CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS, *P_CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS;

struct _CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS {
    DWORD AvailDrivelettersMask;
};

typedef struct _CLUS_STORAGE_REMAP_DRIVELETTER _CLUS_STORAGE_REMAP_DRIVELETTER, *P_CLUS_STORAGE_REMAP_DRIVELETTER;

struct _CLUS_STORAGE_REMAP_DRIVELETTER {
    DWORD CurrentDriveLetterMask;
    DWORD TargetDriveLetterMask;
};

typedef struct _CLUS_STORAGE_SET_DRIVELETTER _CLUS_STORAGE_SET_DRIVELETTER, *P_CLUS_STORAGE_SET_DRIVELETTER;

struct _CLUS_STORAGE_SET_DRIVELETTER {
    DWORD PartitionNumber;
    DWORD DriveLetterMask;
};

typedef struct _CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT _CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT, *P_CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT;

typedef enum CLUSTER_RESOURCE_STATE_CHANGE_REASON {
    eResourceStateChangeReasonFailedMove=3,
    eResourceStateChangeReasonFailover=2,
    eResourceStateChangeReasonMove=1,
    eResourceStateChangeReasonRundown=5,
    eResourceStateChangeReasonShutdown=4,
    eResourceStateChangeReasonUnknown=0
} CLUSTER_RESOURCE_STATE_CHANGE_REASON;

struct _CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT {
    DWORD dwSize;
    DWORD dwVersion;
    enum CLUSTER_RESOURCE_STATE_CHANGE_REASON eReason;
};

typedef struct _CLUSTER_BATCH_COMMAND _CLUSTER_BATCH_COMMAND, *P_CLUSTER_BATCH_COMMAND;

typedef enum _CLUSTER_REG_COMMAND {
    CLUSREG_COMMAND_NONE=0,
    CLUSREG_CREATE_KEY=2,
    CLUSREG_DELETE_KEY=3,
    CLUSREG_DELETE_VALUE=4,
    CLUSREG_LAST_COMMAND=7,
    CLUSREG_SET_KEY_SECURITY=5,
    CLUSREG_SET_VALUE=1,
    CLUSREG_VALUE_DELETED=6
} _CLUSTER_REG_COMMAND;

typedef enum _CLUSTER_REG_COMMAND CLUSTER_REG_COMMAND;

struct _CLUSTER_BATCH_COMMAND {
    CLUSTER_REG_COMMAND Command;
    DWORD dwOptions;
    LPCWSTR wzName;
    BYTE * lpData;
    DWORD cbData;
};

typedef struct _CLUSTER_IP_ENTRY _CLUSTER_IP_ENTRY, *P_CLUSTER_IP_ENTRY;

typedef WCHAR * PCWSTR;

struct _CLUSTER_IP_ENTRY {
    PCWSTR lpszIpAddress;
    DWORD dwPrefixLength;
};

typedef enum _CLUSTER_SETUP_PHASE {
    ClusterSetupPhaseAddClusterProperties=201,
    ClusterSetupPhaseAddNodeToCluster=301,
    ClusterSetupPhaseCleanupCOs=402,
    ClusterSetupPhaseCleanupNode=405,
    ClusterSetupPhaseClusterGroupOnline=206,
    ClusterSetupPhaseConfigureClusSvc=104,
    ClusterSetupPhaseConfigureClusterAccount=109,
    ClusterSetupPhaseCoreGroupCleanup=406,
    ClusterSetupPhaseCreateClusterAccount=108,
    ClusterSetupPhaseCreateGroups=203,
    ClusterSetupPhaseCreateIPAddressResources=204,
    ClusterSetupPhaseCreateNetworkName=205,
    ClusterSetupPhaseCreateResourceTypes=202,
    ClusterSetupPhaseDeleteGroup=401,
    ClusterSetupPhaseEvictNode=404,
    ClusterSetupPhaseFailureCleanup=999,
    ClusterSetupPhaseFormingCluster=200,
    ClusterSetupPhaseGettingCurrentMembership=300,
    ClusterSetupPhaseInitialize=1,
    ClusterSetupPhaseMoveGroup=400,
    ClusterSetupPhaseNodeUp=302,
    ClusterSetupPhaseOfflineGroup=403,
    ClusterSetupPhaseQueryClusterNameAccount=106,
    ClusterSetupPhaseStartingClusSvc=105,
    ClusterSetupPhaseValidateClusDisk=103,
    ClusterSetupPhaseValidateClusterNameAccount=107,
    ClusterSetupPhaseValidateNetft=102,
    ClusterSetupPhaseValidateNodeState=100
} _CLUSTER_SETUP_PHASE;

typedef enum _CLUSTER_SETUP_PHASE_SEVERITY {
    ClusterSetupPhaseFatal=3,
    ClusterSetupPhaseInformational=1,
    ClusterSetupPhaseWarning=2
} _CLUSTER_SETUP_PHASE_SEVERITY;

typedef enum _CLUSTER_SETUP_PHASE_TYPE {
    ClusterSetupPhaseContinue=2,
    ClusterSetupPhaseEnd=3,
    ClusterSetupPhaseStart=1
} _CLUSTER_SETUP_PHASE_TYPE;

typedef struct _CLUSTER_VALIDATE_CSV_FILENAME _CLUSTER_VALIDATE_CSV_FILENAME, *P_CLUSTER_VALIDATE_CSV_FILENAME;

struct _CLUSTER_VALIDATE_CSV_FILENAME {
    WCHAR * szFileName;
};

typedef struct _CLUSTER_VALIDATE_DIRECTORY _CLUSTER_VALIDATE_DIRECTORY, *P_CLUSTER_VALIDATE_DIRECTORY;

struct _CLUSTER_VALIDATE_DIRECTORY {
    WCHAR * szPath;
};

typedef struct _CLUSTER_VALIDATE_NETNAME _CLUSTER_VALIDATE_NETNAME, *P_CLUSTER_VALIDATE_NETNAME;

struct _CLUSTER_VALIDATE_NETNAME {
    WCHAR * szNetworkName;
};

typedef struct _CLUSTER_VALIDATE_PATH _CLUSTER_VALIDATE_PATH, *P_CLUSTER_VALIDATE_PATH;

struct _CLUSTER_VALIDATE_PATH {
    WCHAR * szPath;
};

typedef struct _CREATE_CLUSTER_CONFIG _CREATE_CLUSTER_CONFIG, *P_CREATE_CLUSTER_CONFIG;

typedef struct _CLUSTER_IP_ENTRY * PCLUSTER_IP_ENTRY;

typedef uchar boolean;

typedef boolean BOOLEAN;

struct _CREATE_CLUSTER_CONFIG {
    DWORD dwVersion;
    PCWSTR lpszClusterName;
    DWORD cNodes;
    PCWSTR * ppszNodeNames;
    DWORD cIpEntries;
    PCLUSTER_IP_ENTRY pIpEntries;
    BOOLEAN fEmptyCluster;
};

typedef struct _FILESHARE_CHANGE _FILESHARE_CHANGE, *P_FILESHARE_CHANGE;

typedef enum _FILESHARE_CHANGE_ENUM {
    FILESHARE_CHANGE_ADD=1,
    FILESHARE_CHANGE_DEL=2,
    FILESHARE_CHANGE_MODIFY=3,
    FILESHARE_CHANGE_NONE=0
} _FILESHARE_CHANGE_ENUM;

typedef enum _FILESHARE_CHANGE_ENUM FILESHARE_CHANGE_ENUM;

struct _FILESHARE_CHANGE {
    FILESHARE_CHANGE_ENUM Change;
    WCHAR ShareName[84];
};

typedef struct _FILESHARE_CHANGE_LIST _FILESHARE_CHANGE_LIST, *P_FILESHARE_CHANGE_LIST;

typedef struct _FILESHARE_CHANGE FILESHARE_CHANGE;

struct _FILESHARE_CHANGE_LIST {
    DWORD NumEntries;
    FILESHARE_CHANGE * ChangeEntry;
};

typedef struct _HCHANGE _HCHANGE, *P_HCHANGE;

struct _HCHANGE {
};

typedef struct _HCLUSENUM _HCLUSENUM, *P_HCLUSENUM;

struct _HCLUSENUM {
};

typedef struct _HCLUSTER _HCLUSTER, *P_HCLUSTER;

struct _HCLUSTER {
};

typedef struct _HGROUP _HGROUP, *P_HGROUP;

struct _HGROUP {
};

typedef struct _HGROUPENUM _HGROUPENUM, *P_HGROUPENUM;

struct _HGROUPENUM {
};

typedef struct _HNETINTERFACE _HNETINTERFACE, *P_HNETINTERFACE;

struct _HNETINTERFACE {
};

typedef struct _HNETWORK _HNETWORK, *P_HNETWORK;

struct _HNETWORK {
};

typedef struct _HNETWORKENUM _HNETWORKENUM, *P_HNETWORKENUM;

struct _HNETWORKENUM {
};

typedef struct _HNODE _HNODE, *P_HNODE;

struct _HNODE {
};

typedef struct _HNODEENUM _HNODEENUM, *P_HNODEENUM;

struct _HNODEENUM {
};

typedef struct _HREGBATCH _HREGBATCH, *P_HREGBATCH;

struct _HREGBATCH {
};

typedef struct _HREGBATCHNOTIFICATION _HREGBATCHNOTIFICATION, *P_HREGBATCHNOTIFICATION;

struct _HREGBATCHNOTIFICATION {
};

typedef struct _HREGBATCHPORT _HREGBATCHPORT, *P_HREGBATCHPORT;

struct _HREGBATCHPORT {
};

typedef struct _HRESENUM _HRESENUM, *P_HRESENUM;

struct _HRESENUM {
};

typedef struct _HRESOURCE _HRESOURCE, *P_HRESOURCE;

struct _HRESOURCE {
};

typedef struct _HRESTYPEENUM _HRESTYPEENUM, *P_HRESTYPEENUM;

struct _HRESTYPEENUM {
};

typedef struct _struct_5481 _struct_5481, *P_struct_5481;

typedef ushort WORD;

struct _struct_5481 {
    WORD wFormat;
    WORD wType;
};

typedef struct _struct_5495 _struct_5495, *P_struct_5495;

typedef union _union_5496 _union_5496, *P_union_5496;

typedef enum CLUSTER_RESOURCE_CLASS {
    CLUS_RESCLASS_NETWORK=2,
    CLUS_RESCLASS_STORAGE=1,
    CLUS_RESCLASS_UNKNOWN=0,
    CLUS_RESCLASS_USER=32768
} CLUSTER_RESOURCE_CLASS;

union _union_5496 {
    DWORD dw;
    enum CLUSTER_RESOURCE_CLASS rc;
};

struct _struct_5495 {
    union _union_5496 u;
    DWORD SubClass;
};

typedef struct _struct_5512 _struct_5512, *P_struct_5512;


/* WARNING! conflicting data type names: /winsmcrd.h/UCHAR - /WinDef.h/UCHAR */

struct _struct_5512 {
    UCHAR PortNumber;
    UCHAR PathId;
    UCHAR TargetId;
    UCHAR Lun;
};

typedef union _union_5491 _union_5491, *P_union_5491;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE _SECURITY_DESCRIPTOR_RELATIVE, *P_SECURITY_DESCRIPTOR_RELATIVE;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE SECURITY_DESCRIPTOR_RELATIVE;

typedef WORD SECURITY_DESCRIPTOR_CONTROL;

struct _SECURITY_DESCRIPTOR_RELATIVE {
    BYTE Revision;
    BYTE Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    DWORD Owner;
    DWORD Group;
    DWORD Sacl;
    DWORD Dacl;
};

union _union_5491 {
    SECURITY_DESCRIPTOR_RELATIVE sd;
    BYTE rgbSecurityDescriptor;
};

typedef union _union_5494 _union_5494, *P_union_5494;

union _union_5494 {
    struct _struct_5495 s;
    ULARGE_INTEGER li;
};

typedef union _union_5511 _union_5511, *P_union_5511;

union _union_5511 {
    struct _struct_5512 s;
    DWORD dw;
};

typedef enum CLUSTER_GROUP_AUTOFAILBACK_TYPE {
    ClusterGroupAllowFailback=1,
    ClusterGroupFailbackTypeCount=2,
    ClusterGroupPreventFailback=0
} CLUSTER_GROUP_AUTOFAILBACK_TYPE;

typedef enum CLUSTER_GROUP_AUTOFAILBACK_TYPE CGAFT;

typedef enum CLCTL_CODES {
    CLCTL_ADD_CRYPTO_CHECKPOINT=33,
    CLCTL_ADD_DEPENDENCY=88,
    CLCTL_ADD_OWNER=90,
    CLCTL_ADD_REGISTRY_CHECKPOINT=30,
    CLCTL_ADD_REGISTRY_CHECKPOINT_32BIT=38,
    CLCTL_ADD_REGISTRY_CHECKPOINT_64BIT=37,
    CLCTL_BATCH_BLOCK_KEY=74,
    CLCTL_BATCH_UNBLOCK_KEY=75,
    CLCTL_CHECK_VOTER_DOWN=14,
    CLCTL_CHECK_VOTER_EVICT=13,
    CLCTL_CLUSTER_NAME_CHANGED=93,
    CLCTL_CLUSTER_VERSION_CHANGED=94,
    CLCTL_DELETE=85,
    CLCTL_DELETE_CRYPTO_CHECKPOINT=34,
    CLCTL_DELETE_REGISTRY_CHECKPOINT=31,
    CLCTL_DISABLE_SHARED_VOLUME_DIRECTIO=81,
    CLCTL_ENABLE_SHARED_VOLUME_DIRECTIO=80,
    CLCTL_ENUM_COMMON_PROPERTIES=16,
    CLCTL_ENUM_PRIVATE_PROPERTIES=23,
    CLCTL_EVICT_NODE=87,
    CLCTL_FILESERVER_SHARE_ADD=76,
    CLCTL_FILESERVER_SHARE_DEL=77,
    CLCTL_FILESERVER_SHARE_MODIFY=78,
    CLCTL_FILESERVER_SHARE_REPORT=79,
    CLCTL_FIXUP_ON_UPGRADE=95,
    CLCTL_FORCE_QUORUM=100,
    CLCTL_FSWITNESS_GET_EPOCH_INFO=106,
    CLCTL_FSWITNESS_RELEASE_LOCK=108,
    CLCTL_FSWITNESS_SET_EPOCH_INFO=107,
    CLCTL_GET_ARB_TIMEOUT=5,
    CLCTL_GET_CHARACTERISTICS=1,
    CLCTL_GET_CLASS_INFO=3,
    CLCTL_GET_CLUSTER_SERVICE_ACCOUNT_NAME=12,
    CLCTL_GET_COMMON_PROPERTIES=18,
    CLCTL_GET_COMMON_PROPERTY_FMTS=21,
    CLCTL_GET_COMMON_RESOURCE_PROPERTY_FMTS=22,
    CLCTL_GET_CRYPTO_CHECKPOINTS=35,
    CLCTL_GET_DNS_NAME=43,
    CLCTL_GET_FLAGS=2,
    CLCTL_GET_FQDN=11,
    CLCTL_GET_ID=10,
    CLCTL_GET_LOADBAL_PROCESS_LIST=39,
    CLCTL_GET_NAME=6,
    CLCTL_GET_NETWORK=9,
    CLCTL_GET_NETWORK_NAME=40,
    CLCTL_GET_NODE=8,
    CLCTL_GET_PRIVATE_PROPERTIES=25,
    CLCTL_GET_PRIVATE_PROPERTY_FMTS=28,
    CLCTL_GET_PRIVATE_RESOURCE_PROPERTY_FMTS=29,
    CLCTL_GET_REGISTRY_CHECKPOINTS=32,
    CLCTL_GET_REQUIRED_DEPENDENCIES=4,
    CLCTL_GET_RESOURCE_TYPE=7,
    CLCTL_GET_RO_COMMON_PROPERTIES=17,
    CLCTL_GET_RO_PRIVATE_PROPERTIES=24,
    CLCTL_GET_SHARED_VOLUME_ID=82,
    CLCTL_HOLD_IO=98,
    CLCTL_INITIALIZE=101,
    CLCTL_INSTALL_NODE=86,
    CLCTL_IPADDRESS_RELEASE_LEASE=55,
    CLCTL_IPADDRESS_RENEW_LEASE=54,
    CLCTL_JOINING_GROUP=105,
    CLCTL_LEAVING_GROUP=104,
    CLCTL_NETNAME_CREDS_NOTIFYCAM=109,
    CLCTL_NETNAME_CREDS_UPDATED=48,
    CLCTL_NETNAME_DELETE_CO=45,
    CLCTL_NETNAME_GET_VIRTUAL_SERVER_TOKEN=41,
    CLCTL_NETNAME_REGISTER_DNS_RECORDS=42,
    CLCTL_NETNAME_RESET_VCO=47,
    CLCTL_NETNAME_SET_PWD_INFO=44,
    CLCTL_NETNAME_VALIDATE_VCO=46,
    CLCTL_PROVIDER_STATE_CHANGE=103,
    CLCTL_QUERY_CSV_MAINTENANCE_MODE=114,
    CLCTL_QUERY_DELETE=53,
    CLCTL_QUERY_MAINTENANCE_MODE=56,
    CLCTL_REMOVE_DEPENDENCY=89,
    CLCTL_REMOVE_OWNER=91,
    CLCTL_RESOURCE_UPGRADE_DLL=36,
    CLCTL_RESUME_IO=99,
    CLCTL_SET_CLUSTER_MEMBERSHIP=112,
    CLCTL_SET_COMMON_PROPERTIES=19,
    CLCTL_SET_CSV_MAINTENANCE_MODE=83,
    CLCTL_SET_MAINTENANCE_MODE=57,
    CLCTL_SET_NAME=92,
    CLCTL_SET_PRIVATE_PROPERTIES=26,
    CLCTL_SET_SHARED_PR_KEY=113,
    CLCTL_SET_SHARED_VOLUME_BACKUP_MODE=84,
    CLCTL_SHUTDOWN=15,
    CLCTL_STARTING_PHASE1=96,
    CLCTL_STARTING_PHASE2=97,
    CLCTL_STATE_CHANGE_REASON=102,
    CLCTL_STORAGE_CLUSTER_DISK=67,
    CLCTL_STORAGE_GET_AVAILABLE_DISKS=50,
    CLCTL_STORAGE_GET_AVAILABLE_DISKS_EX=61,
    CLCTL_STORAGE_GET_CSV_DISK_INFO=111,
    CLCTL_STORAGE_GET_DIRTY=68,
    CLCTL_STORAGE_GET_DISKID=63,
    CLCTL_STORAGE_GET_DISK_INFO=49,
    CLCTL_STORAGE_GET_DISK_INFO_EX=60,
    CLCTL_STORAGE_GET_DISK_NUMBER=110,
    CLCTL_STORAGE_GET_DRIVELETTERS=59,
    CLCTL_STORAGE_GET_MOUNTPOINTS=66,
    CLCTL_STORAGE_GET_SHARED_VOLUME_INFO=69,
    CLCTL_STORAGE_IS_CLUSTERABLE=64,
    CLCTL_STORAGE_IS_CSV_FILE=70,
    CLCTL_STORAGE_IS_PATH_VALID=51,
    CLCTL_STORAGE_REMAP_DRIVELETTER=62,
    CLCTL_STORAGE_REMOVE_VM_OWNERSHIP=65,
    CLCTL_STORAGE_SET_DRIVELETTER=58,
    CLCTL_STORAGE_SYNC_CLUSDISK_DB=52,
    CLCTL_UNKNOWN=0,
    CLCTL_VALIDATE_COMMON_PROPERTIES=20,
    CLCTL_VALIDATE_DIRECTORY=73,
    CLCTL_VALIDATE_NETNAME=72,
    CLCTL_VALIDATE_PATH=71,
    CLCTL_VALIDATE_PRIVATE_PROPERTIES=27
} CLCTL_CODES;

typedef enum CLUS_CHARACTERISTICS {
    CLUS_CHAR_BROADCAST_DELETE=32,
    CLUS_CHAR_DELETE_REQUIRES_ALL_NODES=2,
    CLUS_CHAR_LOCAL_QUORUM=4,
    CLUS_CHAR_LOCAL_QUORUM_DEBUG=8,
    CLUS_CHAR_QUORUM=1,
    CLUS_CHAR_REQUIRES_STATE_CHANGE_REASON=16,
    CLUS_CHAR_SINGLE_CLUSTER_INSTANCE=64,
    CLUS_CHAR_SINGLE_GROUP_INSTANCE=128,
    CLUS_CHAR_UNKNOWN=0
} CLUS_CHARACTERISTICS;

typedef struct CLUS_CSV_MAINTENANCE_MODE_INFO CLUS_CSV_MAINTENANCE_MODE_INFO, *PCLUS_CSV_MAINTENANCE_MODE_INFO;

struct CLUS_CSV_MAINTENANCE_MODE_INFO {
    BOOL InMaintenance;
    WCHAR VolumeName[260];
};

typedef struct _CLUS_CSV_VOLUME_INFO CLUS_CSV_VOLUME_INFO;

typedef struct _CLUS_DISK_NUMBER_INFO CLUS_DISK_NUMBER_INFO;

typedef enum CLUS_FLAGS {
    CLUS_FLAG_CORE=1
} CLUS_FLAGS;

typedef struct CLUS_FORCE_QUORUM_INFO CLUS_FORCE_QUORUM_INFO, *PCLUS_FORCE_QUORUM_INFO;

struct CLUS_FORCE_QUORUM_INFO {
    DWORD dwSize;
    DWORD dwNodeBitMask;
    DWORD dwMaxNumberofNodes;
    WCHAR multiszNodeList[1];
};

typedef struct CLUS_FTSET_INFO CLUS_FTSET_INFO, *PCLUS_FTSET_INFO;

struct CLUS_FTSET_INFO {
    DWORD dwRootSignature;
    DWORD dwFtType;
};

typedef struct CLUS_MAINTENANCE_MODE_INFO CLUS_MAINTENANCE_MODE_INFO, *PCLUS_MAINTENANCE_MODE_INFO;

struct CLUS_MAINTENANCE_MODE_INFO {
    BOOL InMaintenance;
};

typedef struct _CLUS_MAINTENANCE_MODE_INFOEX CLUS_MAINTENANCE_MODE_INFOEX;

typedef struct CLUS_NETNAME_PWD_INFO CLUS_NETNAME_PWD_INFO, *PCLUS_NETNAME_PWD_INFO;

struct CLUS_NETNAME_PWD_INFO {
    DWORD Flags;
    WCHAR Password[16];
    WCHAR CreatingDC[258];
    WCHAR ObjectGuid[64];
};

typedef struct CLUS_NETNAME_VS_TOKEN_INFO CLUS_NETNAME_VS_TOKEN_INFO, *PCLUS_NETNAME_VS_TOKEN_INFO;

struct CLUS_NETNAME_VS_TOKEN_INFO {
    DWORD ProcessID;
    DWORD DesiredAccess;
    BOOL InheritHandle;
};

typedef struct CLUS_PARTITION_INFO CLUS_PARTITION_INFO, *PCLUS_PARTITION_INFO;

struct CLUS_PARTITION_INFO {
    DWORD dwFlags;
    WCHAR szDeviceName[260];
    WCHAR szVolumeLabel[260];
    DWORD dwSerialNumber;
    DWORD rgdwMaximumComponentLength;
    DWORD dwFileSystemFlags;
    WCHAR szFileSystem[32];
};

typedef struct CLUS_PARTITION_INFO_EX CLUS_PARTITION_INFO_EX, *PCLUS_PARTITION_INFO_EX;

struct CLUS_PARTITION_INFO_EX {
    DWORD dwFlags;
    WCHAR szDeviceName[260];
    WCHAR szVolumeLabel[260];
    DWORD dwSerialNumber;
    DWORD rgdwMaximumComponentLength;
    DWORD dwFileSystemFlags;
    WCHAR szFileSystem[32];
    ULARGE_INTEGER TotalSizeInBytes;
    ULARGE_INTEGER FreeSizeInBytes;
    DWORD DeviceNumber;
    DWORD PartitionNumber;
    GUID VolumeGuid;
};

typedef struct _CLUS_PROVIDER_STATE_CHANGE_INFO CLUS_PROVIDER_STATE_CHANGE_INFO;

typedef struct CLUS_RESOURCE_CLASS_INFO CLUS_RESOURCE_CLASS_INFO, *PCLUS_RESOURCE_CLASS_INFO;

struct CLUS_RESOURCE_CLASS_INFO {
    union _union_5494 u;
};

typedef enum CLUS_RESSUBCLASS {
    CLUS_RESSUBCLASS_SHARED=-2147483648
} CLUS_RESSUBCLASS;

typedef enum CLUS_RESSUBCLASS_NETWORK {
    CLUS_RESSUBCLASS_NETWORK_INTERNET_PROTOCOL=-2147483648
} CLUS_RESSUBCLASS_NETWORK;

typedef enum CLUS_RESSUBCLASS_STORAGE {
    CLUS_RESSUBCLASS_STORAGE_SHARED_BUS=-2147483648
} CLUS_RESSUBCLASS_STORAGE;

typedef struct CLUS_SCSI_ADDRESS CLUS_SCSI_ADDRESS, *PCLUS_SCSI_ADDRESS;

struct CLUS_SCSI_ADDRESS {
    union _union_5511 u;
};

typedef struct _CLUS_SHARED_VOLUME_BACKUP_MODE CLUS_SHARED_VOLUME_BACKUP_MODE;

typedef struct CLUS_STARTING_PARAMS CLUS_STARTING_PARAMS, *PCLUS_STARTING_PARAMS;

struct CLUS_STARTING_PARAMS {
    DWORD dwSize;
    BOOL bForm;
    BOOL bFirst;
};

typedef struct _CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS;

typedef struct _CLUS_STORAGE_REMAP_DRIVELETTER CLUS_STORAGE_REMAP_DRIVELETTER;

typedef struct _CLUS_STORAGE_SET_DRIVELETTER CLUS_STORAGE_SET_DRIVELETTER;

typedef enum CLUSCTL_CLUSTER_CODES {
    CLUSCTL_CLUSTER_BATCH_BLOCK_KEY=17,
    CLUSCTL_CLUSTER_BATCH_UNBLOCK_KEY=18,
    CLUSCTL_CLUSTER_CHECK_VOTER_DOWN=15,
    CLUSCTL_CLUSTER_CHECK_VOTER_EVICT=14,
    CLUSCTL_CLUSTER_ENUM_COMMON_PROPERTIES=2,
    CLUSCTL_CLUSTER_ENUM_PRIVATE_PROPERTIES=7,
    CLUSCTL_CLUSTER_GET_COMMON_PROPERTIES=4,
    CLUSCTL_CLUSTER_GET_COMMON_PROPERTY_FMTS=12,
    CLUSCTL_CLUSTER_GET_FQDN=1,
    CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTIES=9,
    CLUSCTL_CLUSTER_GET_PRIVATE_PROPERTY_FMTS=13,
    CLUSCTL_CLUSTER_GET_RO_COMMON_PROPERTIES=3,
    CLUSCTL_CLUSTER_GET_RO_PRIVATE_PROPERTIES=8,
    CLUSCTL_CLUSTER_GET_SHARED_VOLUME_ID=19,
    CLUSCTL_CLUSTER_SET_COMMON_PROPERTIES=5,
    CLUSCTL_CLUSTER_SET_PRIVATE_PROPERTIES=10,
    CLUSCTL_CLUSTER_SHUTDOWN=16,
    CLUSCTL_CLUSTER_UNKNOWN=0,
    CLUSCTL_CLUSTER_VALIDATE_COMMON_PROPERTIES=6,
    CLUSCTL_CLUSTER_VALIDATE_PRIVATE_PROPERTIES=11
} CLUSCTL_CLUSTER_CODES;

typedef enum CLUSCTL_GROUP_CODES {
    CLUSCTL_GROUP_ENUM_COMMON_PROPERTIES=5,
    CLUSCTL_GROUP_ENUM_PRIVATE_PROPERTIES=10,
    CLUSCTL_GROUP_GET_CHARACTERISTICS=1,
    CLUSCTL_GROUP_GET_COMMON_PROPERTIES=7,
    CLUSCTL_GROUP_GET_COMMON_PROPERTY_FMTS=16,
    CLUSCTL_GROUP_GET_FLAGS=2,
    CLUSCTL_GROUP_GET_ID=4,
    CLUSCTL_GROUP_GET_NAME=3,
    CLUSCTL_GROUP_GET_PRIVATE_PROPERTIES=12,
    CLUSCTL_GROUP_GET_PRIVATE_PROPERTY_FMTS=17,
    CLUSCTL_GROUP_GET_RO_COMMON_PROPERTIES=6,
    CLUSCTL_GROUP_GET_RO_PRIVATE_PROPERTIES=11,
    CLUSCTL_GROUP_QUERY_DELETE=15,
    CLUSCTL_GROUP_SET_COMMON_PROPERTIES=8,
    CLUSCTL_GROUP_SET_PRIVATE_PROPERTIES=13,
    CLUSCTL_GROUP_UNKNOWN=0,
    CLUSCTL_GROUP_VALIDATE_COMMON_PROPERTIES=9,
    CLUSCTL_GROUP_VALIDATE_PRIVATE_PROPERTIES=14
} CLUSCTL_GROUP_CODES;

typedef enum CLUSCTL_NETINTERFACE_CODES {
    CLUSCTL_NETINTERFACE_ENUM_COMMON_PROPERTIES=7,
    CLUSCTL_NETINTERFACE_ENUM_PRIVATE_PROPERTIES=12,
    CLUSCTL_NETINTERFACE_GET_CHARACTERISTICS=1,
    CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTIES=9,
    CLUSCTL_NETINTERFACE_GET_COMMON_PROPERTY_FMTS=17,
    CLUSCTL_NETINTERFACE_GET_FLAGS=2,
    CLUSCTL_NETINTERFACE_GET_ID=4,
    CLUSCTL_NETINTERFACE_GET_NAME=3,
    CLUSCTL_NETINTERFACE_GET_NETWORK=6,
    CLUSCTL_NETINTERFACE_GET_NODE=5,
    CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTIES=14,
    CLUSCTL_NETINTERFACE_GET_PRIVATE_PROPERTY_FMTS=18,
    CLUSCTL_NETINTERFACE_GET_RO_COMMON_PROPERTIES=8,
    CLUSCTL_NETINTERFACE_GET_RO_PRIVATE_PROPERTIES=13,
    CLUSCTL_NETINTERFACE_SET_COMMON_PROPERTIES=10,
    CLUSCTL_NETINTERFACE_SET_PRIVATE_PROPERTIES=15,
    CLUSCTL_NETINTERFACE_UNKNOWN=0,
    CLUSCTL_NETINTERFACE_VALIDATE_COMMON_PROPERTIES=11,
    CLUSCTL_NETINTERFACE_VALIDATE_PRIVATE_PROPERTIES=16
} CLUSCTL_NETINTERFACE_CODES;

typedef enum CLUSCTL_NETWORK_CODES {
    CLUSCTL_NETWORK_ENUM_COMMON_PROPERTIES=5,
    CLUSCTL_NETWORK_ENUM_PRIVATE_PROPERTIES=10,
    CLUSCTL_NETWORK_GET_CHARACTERISTICS=1,
    CLUSCTL_NETWORK_GET_COMMON_PROPERTIES=7,
    CLUSCTL_NETWORK_GET_COMMON_PROPERTY_FMTS=15,
    CLUSCTL_NETWORK_GET_FLAGS=2,
    CLUSCTL_NETWORK_GET_ID=4,
    CLUSCTL_NETWORK_GET_NAME=3,
    CLUSCTL_NETWORK_GET_PRIVATE_PROPERTIES=12,
    CLUSCTL_NETWORK_GET_PRIVATE_PROPERTY_FMTS=16,
    CLUSCTL_NETWORK_GET_RO_COMMON_PROPERTIES=6,
    CLUSCTL_NETWORK_GET_RO_PRIVATE_PROPERTIES=11,
    CLUSCTL_NETWORK_SET_COMMON_PROPERTIES=8,
    CLUSCTL_NETWORK_SET_PRIVATE_PROPERTIES=13,
    CLUSCTL_NETWORK_UNKNOWN=0,
    CLUSCTL_NETWORK_VALIDATE_COMMON_PROPERTIES=9,
    CLUSCTL_NETWORK_VALIDATE_PRIVATE_PROPERTIES=14
} CLUSCTL_NETWORK_CODES;

typedef enum CLUSCTL_NODE_CODES {
    CLUSCTL_NODE_ENUM_COMMON_PROPERTIES=5,
    CLUSCTL_NODE_ENUM_PRIVATE_PROPERTIES=10,
    CLUSCTL_NODE_GET_CHARACTERISTICS=1,
    CLUSCTL_NODE_GET_CLUSTER_SERVICE_ACCOUNT_NAME=17,
    CLUSCTL_NODE_GET_COMMON_PROPERTIES=7,
    CLUSCTL_NODE_GET_COMMON_PROPERTY_FMTS=15,
    CLUSCTL_NODE_GET_FLAGS=2,
    CLUSCTL_NODE_GET_ID=4,
    CLUSCTL_NODE_GET_NAME=3,
    CLUSCTL_NODE_GET_PRIVATE_PROPERTIES=12,
    CLUSCTL_NODE_GET_PRIVATE_PROPERTY_FMTS=16,
    CLUSCTL_NODE_GET_RO_COMMON_PROPERTIES=6,
    CLUSCTL_NODE_GET_RO_PRIVATE_PROPERTIES=11,
    CLUSCTL_NODE_SET_COMMON_PROPERTIES=8,
    CLUSCTL_NODE_SET_PRIVATE_PROPERTIES=13,
    CLUSCTL_NODE_UNKNOWN=0,
    CLUSCTL_NODE_VALIDATE_COMMON_PROPERTIES=9,
    CLUSCTL_NODE_VALIDATE_PRIVATE_PROPERTIES=14
} CLUSCTL_NODE_CODES;

typedef enum CLUSCTL_RESOURCE_CODES {
    CLUSCTL_RESOURCE_ADD_CRYPTO_CHECKPOINT=23,
    CLUSCTL_RESOURCE_ADD_DEPENDENCY=62,
    CLUSCTL_RESOURCE_ADD_OWNER=64,
    CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT=20,
    CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_32BIT=42,
    CLUSCTL_RESOURCE_ADD_REGISTRY_CHECKPOINT_64BIT=41,
    CLUSCTL_RESOURCE_CLUSTER_NAME_CHANGED=67,
    CLUSCTL_RESOURCE_CLUSTER_VERSION_CHANGED=68,
    CLUSCTL_RESOURCE_DELETE=59,
    CLUSCTL_RESOURCE_DELETE_CRYPTO_CHECKPOINT=24,
    CLUSCTL_RESOURCE_DELETE_REGISTRY_CHECKPOINT=21,
    CLUSCTL_RESOURCE_DISABLE_SHARED_VOLUME_DIRECTIO=57,
    CLUSCTL_RESOURCE_ENABLE_SHARED_VOLUME_DIRECTIO=56,
    CLUSCTL_RESOURCE_ENUM_COMMON_PROPERTIES=8,
    CLUSCTL_RESOURCE_ENUM_PRIVATE_PROPERTIES=14,
    CLUSCTL_RESOURCE_EVICT_NODE=61,
    CLUSCTL_RESOURCE_FILESERVER_SHARE_ADD=47,
    CLUSCTL_RESOURCE_FILESERVER_SHARE_DEL=48,
    CLUSCTL_RESOURCE_FILESERVER_SHARE_MODIFY=49,
    CLUSCTL_RESOURCE_FILESERVER_SHARE_REPORT=50,
    CLUSCTL_RESOURCE_FORCE_QUORUM=69,
    CLUSCTL_RESOURCE_FSWITNESS_GET_EPOCH_INFO=75,
    CLUSCTL_RESOURCE_FSWITNESS_RELEASE_LOCK=77,
    CLUSCTL_RESOURCE_FSWITNESS_SET_EPOCH_INFO=76,
    CLUSCTL_RESOURCE_GET_CHARACTERISTICS=1,
    CLUSCTL_RESOURCE_GET_CLASS_INFO=3,
    CLUSCTL_RESOURCE_GET_COMMON_PROPERTIES=10,
    CLUSCTL_RESOURCE_GET_COMMON_PROPERTY_FMTS=13,
    CLUSCTL_RESOURCE_GET_CRYPTO_CHECKPOINTS=25,
    CLUSCTL_RESOURCE_GET_DNS_NAME=34,
    CLUSCTL_RESOURCE_GET_FLAGS=2,
    CLUSCTL_RESOURCE_GET_ID=6,
    CLUSCTL_RESOURCE_GET_LOADBAL_PROCESS_LIST=26,
    CLUSCTL_RESOURCE_GET_NAME=5,
    CLUSCTL_RESOURCE_GET_NETWORK_NAME=27,
    CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTIES=16,
    CLUSCTL_RESOURCE_GET_PRIVATE_PROPERTY_FMTS=19,
    CLUSCTL_RESOURCE_GET_REGISTRY_CHECKPOINTS=22,
    CLUSCTL_RESOURCE_GET_REQUIRED_DEPENDENCIES=4,
    CLUSCTL_RESOURCE_GET_RESOURCE_TYPE=7,
    CLUSCTL_RESOURCE_GET_RO_COMMON_PROPERTIES=9,
    CLUSCTL_RESOURCE_GET_RO_PRIVATE_PROPERTIES=15,
    CLUSCTL_RESOURCE_INITIALIZE=70,
    CLUSCTL_RESOURCE_INSTALL_NODE=60,
    CLUSCTL_RESOURCE_IPADDRESS_RELEASE_LEASE=40,
    CLUSCTL_RESOURCE_IPADDRESS_RENEW_LEASE=39,
    CLUSCTL_RESOURCE_JOINING_GROUP=74,
    CLUSCTL_RESOURCE_LEAVING_GROUP=73,
    CLUSCTL_RESOURCE_NETNAME_CREDS_NOTIFYCAM=79,
    CLUSCTL_RESOURCE_NETNAME_CREDS_UPDATED=78,
    CLUSCTL_RESOURCE_NETNAME_DELETE_CO=30,
    CLUSCTL_RESOURCE_NETNAME_GET_VIRTUAL_SERVER_TOKEN=28,
    CLUSCTL_RESOURCE_NETNAME_REGISTER_DNS_RECORDS=33,
    CLUSCTL_RESOURCE_NETNAME_RESET_VCO=32,
    CLUSCTL_RESOURCE_NETNAME_SET_PWD_INFO=29,
    CLUSCTL_RESOURCE_NETNAME_VALIDATE_VCO=31,
    CLUSCTL_RESOURCE_PROVIDER_STATE_CHANGE=72,
    CLUSCTL_RESOURCE_QUERY_CSV_MAINTENANCE_MODE=84,
    CLUSCTL_RESOURCE_QUERY_DELETE=37,
    CLUSCTL_RESOURCE_QUERY_MAINTENANCE_MODE=43,
    CLUSCTL_RESOURCE_REMOVE_DEPENDENCY=63,
    CLUSCTL_RESOURCE_REMOVE_OWNER=65,
    CLUSCTL_RESOURCE_SET_CLUSTER_MEMBERSHIP=80,
    CLUSCTL_RESOURCE_SET_COMMON_PROPERTIES=11,
    CLUSCTL_RESOURCE_SET_CSV_MAINTENANCE_MODE=55,
    CLUSCTL_RESOURCE_SET_MAINTENANCE_MODE=44,
    CLUSCTL_RESOURCE_SET_NAME=66,
    CLUSCTL_RESOURCE_SET_PRIVATE_PROPERTIES=17,
    CLUSCTL_RESOURCE_SET_SHARED_PR_KEY=81,
    CLUSCTL_RESOURCE_SET_SHARED_VOLUME_BACKUP_MODE=58,
    CLUSCTL_RESOURCE_STATE_CHANGE_REASON=71,
    CLUSCTL_RESOURCE_STORAGE_CLUSTER_DISK=52,
    CLUSCTL_RESOURCE_STORAGE_GET_CSV_DISK_INFO=83,
    CLUSCTL_RESOURCE_STORAGE_GET_DIRTY=53,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO=35,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_INFO_EX=46,
    CLUSCTL_RESOURCE_STORAGE_GET_DISK_NUMBER=82,
    CLUSCTL_RESOURCE_STORAGE_GET_MOUNTPOINTS=51,
    CLUSCTL_RESOURCE_STORAGE_GET_SHARED_VOLUME_INFO=54,
    CLUSCTL_RESOURCE_STORAGE_IS_PATH_VALID=36,
    CLUSCTL_RESOURCE_STORAGE_SET_DRIVELETTER=45,
    CLUSCTL_RESOURCE_UNKNOWN=0,
    CLUSCTL_RESOURCE_UPGRADE_DLL=38,
    CLUSCTL_RESOURCE_VALIDATE_COMMON_PROPERTIES=12,
    CLUSCTL_RESOURCE_VALIDATE_PRIVATE_PROPERTIES=18
} CLUSCTL_RESOURCE_CODES;

typedef struct _CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT;

typedef enum CLUSCTL_RESOURCE_TYPE_CODES {
    CLUSCTL_RESOURCE_TYPE_CLUSTER_VERSION_CHANGED=39,
    CLUSCTL_RESOURCE_TYPE_ENUM_COMMON_PROPERTIES=6,
    CLUSCTL_RESOURCE_TYPE_ENUM_PRIVATE_PROPERTIES=13,
    CLUSCTL_RESOURCE_TYPE_EVICT_NODE=38,
    CLUSCTL_RESOURCE_TYPE_FIXUP_ON_UPGRADE=40,
    CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_DIRECTORY=26,
    CLUSCTL_RESOURCE_TYPE_GEN_APP_VALIDATE_PATH=25,
    CLUSCTL_RESOURCE_TYPE_GEN_SCRIPT_VALIDATE_PATH=27,
    CLUSCTL_RESOURCE_TYPE_GET_ARB_TIMEOUT=5,
    CLUSCTL_RESOURCE_TYPE_GET_CHARACTERISTICS=1,
    CLUSCTL_RESOURCE_TYPE_GET_CLASS_INFO=3,
    CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTIES=8,
    CLUSCTL_RESOURCE_TYPE_GET_COMMON_PROPERTY_FMTS=11,
    CLUSCTL_RESOURCE_TYPE_GET_COMMON_RESOURCE_PROPERTY_FMTS=12,
    CLUSCTL_RESOURCE_TYPE_GET_CRYPTO_CHECKPOINTS=21,
    CLUSCTL_RESOURCE_TYPE_GET_FLAGS=2,
    CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTIES=15,
    CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_PROPERTY_FMTS=18,
    CLUSCTL_RESOURCE_TYPE_GET_PRIVATE_RESOURCE_PROPERTY_FMTS=19,
    CLUSCTL_RESOURCE_TYPE_GET_REGISTRY_CHECKPOINTS=20,
    CLUSCTL_RESOURCE_TYPE_GET_REQUIRED_DEPENDENCIES=4,
    CLUSCTL_RESOURCE_TYPE_GET_RO_COMMON_PROPERTIES=7,
    CLUSCTL_RESOURCE_TYPE_GET_RO_PRIVATE_PROPERTIES=14,
    CLUSCTL_RESOURCE_TYPE_HOLD_IO=43,
    CLUSCTL_RESOURCE_TYPE_INSTALL_NODE=37,
    CLUSCTL_RESOURCE_TYPE_NETNAME_VALIDATE_NETNAME=24,
    CLUSCTL_RESOURCE_TYPE_QUERY_DELETE=28,
    CLUSCTL_RESOURCE_TYPE_RESUME_IO=44,
    CLUSCTL_RESOURCE_TYPE_SET_COMMON_PROPERTIES=10,
    CLUSCTL_RESOURCE_TYPE_SET_PRIVATE_PROPERTIES=16,
    CLUSCTL_RESOURCE_TYPE_STARTING_PHASE1=41,
    CLUSCTL_RESOURCE_TYPE_STARTING_PHASE2=42,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS=22,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_AVAILABLE_DISKS_EX=30,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DISKID=32,
    CLUSCTL_RESOURCE_TYPE_STORAGE_GET_DRIVELETTERS=29,
    CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CLUSTERABLE=33,
    CLUSCTL_RESOURCE_TYPE_STORAGE_IS_CSV_FILE=35,
    CLUSCTL_RESOURCE_TYPE_STORAGE_REMAP_DRIVELETTER=31,
    CLUSCTL_RESOURCE_TYPE_STORAGE_REMOVE_VM_OWNERSHIP=34,
    CLUSCTL_RESOURCE_TYPE_STORAGE_SYNC_CLUSDISK_DB=23,
    CLUSCTL_RESOURCE_TYPE_UNKNOWN=0,
    CLUSCTL_RESOURCE_TYPE_VALIDATE_COMMON_PROPERTIES=9,
    CLUSCTL_RESOURCE_TYPE_VALIDATE_PRIVATE_PROPERTIES=17,
    CLUSCTL_RESOURCE_TYPE_WITNESS_VALIDATE_PATH=36
} CLUSCTL_RESOURCE_TYPE_CODES;

typedef struct CLUSPROP_BINARY CLUSPROP_BINARY, *PCLUSPROP_BINARY;

typedef struct CLUSPROP_VALUE CLUSPROP_VALUE, *PCLUSPROP_VALUE;

typedef union CLUSPROP_SYNTAX CLUSPROP_SYNTAX, *PCLUSPROP_SYNTAX;

union CLUSPROP_SYNTAX {
    DWORD dw;
    struct _struct_5481 s;
};

struct CLUSPROP_VALUE {
    union CLUSPROP_SYNTAX Syntax;
    DWORD cbLength;
};

struct CLUSPROP_BINARY {
    struct CLUSPROP_VALUE field_0x0;
    BYTE * rgb;
};

typedef union CLUSPROP_BUFFER_HELPER CLUSPROP_BUFFER_HELPER, *PCLUSPROP_BUFFER_HELPER;

typedef struct CLUSPROP_LIST CLUSPROP_LIST, *PCLUSPROP_LIST;

typedef struct CLUSPROP_SZ CLUSPROP_SZ, *PCLUSPROP_SZ;

typedef struct CLUSPROP_SZ * PCLUSPROP_PROPERTY_NAME;

typedef struct CLUSPROP_WORD CLUSPROP_WORD, *PCLUSPROP_WORD;

typedef struct CLUSPROP_DWORD CLUSPROP_DWORD, *PCLUSPROP_DWORD;

typedef struct CLUSPROP_LONG CLUSPROP_LONG, *PCLUSPROP_LONG;

typedef struct CLUSPROP_ULARGE_INTEGER CLUSPROP_ULARGE_INTEGER, *PCLUSPROP_ULARGE_INTEGER;

typedef struct CLUSPROP_LARGE_INTEGER CLUSPROP_LARGE_INTEGER, *PCLUSPROP_LARGE_INTEGER;

typedef struct CLUSPROP_SZ * PCLUSPROP_MULTI_SZ;

typedef struct CLUSPROP_SECURITY_DESCRIPTOR CLUSPROP_SECURITY_DESCRIPTOR, *PCLUSPROP_SECURITY_DESCRIPTOR;

typedef struct CLUSPROP_RESOURCE_CLASS CLUSPROP_RESOURCE_CLASS, *PCLUSPROP_RESOURCE_CLASS;

typedef struct CLUSPROP_RESOURCE_CLASS_INFO CLUSPROP_RESOURCE_CLASS_INFO, *PCLUSPROP_RESOURCE_CLASS_INFO;

typedef struct CLUSPROP_DWORD * PCLUSPROP_DISK_SIGNATURE;

typedef struct CLUSPROP_SCSI_ADDRESS CLUSPROP_SCSI_ADDRESS, *PCLUSPROP_SCSI_ADDRESS;

typedef struct CLUSPROP_DWORD * PCLUSPROP_DISK_NUMBER;

typedef struct CLUSPROP_PARTITION_INFO CLUSPROP_PARTITION_INFO, *PCLUSPROP_PARTITION_INFO;

typedef union CLUSPROP_REQUIRED_DEPENDENCY CLUSPROP_REQUIRED_DEPENDENCY, *PCLUSPROP_REQUIRED_DEPENDENCY;

typedef struct CLUSPROP_PARTITION_INFO_EX CLUSPROP_PARTITION_INFO_EX, *PCLUSPROP_PARTITION_INFO_EX;

typedef struct CLUSPROP_FILETIME CLUSPROP_FILETIME, *PCLUSPROP_FILETIME;

typedef struct CLUSPROP_SZ CLUSPROP_PROPERTY_NAME;

typedef union _LARGE_INTEGER _LARGE_INTEGER, *P_LARGE_INTEGER;

typedef union _LARGE_INTEGER LARGE_INTEGER;

typedef struct _FILETIME _FILETIME, *P_FILETIME;

typedef struct _FILETIME FILETIME;

typedef struct _struct_19 _struct_19, *P_struct_19;

typedef struct _struct_20 _struct_20, *P_struct_20;

typedef double LONGLONG;

struct CLUSPROP_WORD {
    struct CLUSPROP_VALUE field_0x0;
    WORD w;
};

struct CLUSPROP_PARTITION_INFO {
    struct CLUSPROP_VALUE field_0x0;
    struct CLUS_PARTITION_INFO field_0x8;
};

struct CLUSPROP_RESOURCE_CLASS {
    struct CLUSPROP_VALUE field_0x0;
    enum CLUSTER_RESOURCE_CLASS rc;
};

struct CLUSPROP_ULARGE_INTEGER {
    struct CLUSPROP_VALUE field_0x0;
    ULARGE_INTEGER li;
};

struct CLUSPROP_SECURITY_DESCRIPTOR {
    struct CLUSPROP_VALUE field_0x0;
    union _union_5491 u;
};

struct CLUSPROP_LONG {
    struct CLUSPROP_VALUE field_0x0;
    LONG l;
};

struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
};

struct CLUSPROP_SZ {
    struct CLUSPROP_VALUE field_0x0;
    WCHAR * sz;
};

struct CLUSPROP_LIST {
    DWORD nPropertyCount;
    CLUSPROP_PROPERTY_NAME PropertyName;
};

union CLUSPROP_REQUIRED_DEPENDENCY {
    struct CLUSPROP_VALUE Value;
    struct CLUSPROP_RESOURCE_CLASS ResClass;
    struct CLUSPROP_SZ ResTypeName;
};

struct _struct_20 {
    DWORD LowPart;
    LONG HighPart;
};

struct _struct_19 {
    DWORD LowPart;
    LONG HighPart;
};

union _LARGE_INTEGER {
    struct _struct_19 s;
    struct _struct_20 u;
    LONGLONG QuadPart;
};

union CLUSPROP_BUFFER_HELPER {
    BYTE * pb;
    WORD * pw;
    DWORD * pdw;
    LONG * pl;
    LPWSTR psz;
    PCLUSPROP_LIST pList;
    PCLUSPROP_SYNTAX pSyntax;
    PCLUSPROP_PROPERTY_NAME pName;
    PCLUSPROP_VALUE pValue;
    PCLUSPROP_BINARY pBinaryValue;
    PCLUSPROP_WORD pWordValue;
    PCLUSPROP_DWORD pDwordValue;
    PCLUSPROP_LONG pLongValue;
    PCLUSPROP_ULARGE_INTEGER pULargeIntegerValue;
    PCLUSPROP_LARGE_INTEGER pLargeIntegerValue;
    PCLUSPROP_SZ pStringValue;
    PCLUSPROP_MULTI_SZ pMultiSzValue;
    PCLUSPROP_SECURITY_DESCRIPTOR pSecurityDescriptor;
    PCLUSPROP_RESOURCE_CLASS pResourceClassValue;
    PCLUSPROP_RESOURCE_CLASS_INFO pResourceClassInfoValue;
    PCLUSPROP_DISK_SIGNATURE pDiskSignatureValue;
    PCLUSPROP_SCSI_ADDRESS pScsiAddressValue;
    PCLUSPROP_DISK_NUMBER pDiskNumberValue;
    PCLUSPROP_PARTITION_INFO pPartitionInfoValue;
    PCLUSPROP_REQUIRED_DEPENDENCY pRequiredDependencyValue;
    PCLUSPROP_PARTITION_INFO_EX pPartitionInfoValueEx;
    PCLUSPROP_FILETIME pFileTimeValue;
};

struct CLUSPROP_LARGE_INTEGER {
    struct CLUSPROP_VALUE field_0x0;
    LARGE_INTEGER li;
};

struct CLUSPROP_RESOURCE_CLASS_INFO {
    struct CLUSPROP_VALUE field_0x0;
    struct CLUS_RESOURCE_CLASS_INFO field_0x8;
};

struct CLUSPROP_SCSI_ADDRESS {
    struct CLUSPROP_VALUE field_0x0;
    struct CLUS_SCSI_ADDRESS field_0x8;
};

struct CLUSPROP_PARTITION_INFO_EX {
    struct CLUSPROP_VALUE field_0x0;
    struct CLUS_PARTITION_INFO_EX field_0x8;
};

struct CLUSPROP_FILETIME {
    struct CLUSPROP_VALUE field_0x0;
    FILETIME ft;
};

struct CLUSPROP_DWORD {
    struct CLUSPROP_VALUE field_0x0;
    DWORD dw;
};

typedef struct CLUSPROP_DWORD CLUSPROP_DISK_NUMBER;

typedef struct CLUSPROP_DWORD CLUSPROP_DISK_SIGNATURE;

typedef struct CLUSPROP_FTSET_INFO CLUSPROP_FTSET_INFO, *PCLUSPROP_FTSET_INFO;

struct CLUSPROP_FTSET_INFO {
    struct CLUSPROP_VALUE field_0x0;
    struct CLUS_FTSET_INFO field_0x8;
};

typedef enum CLUSPROP_IPADDR_ENABLENETBIOS {
    CLUSPROP_IPADDR_ENABLENETBIOS_DISABLED=0,
    CLUSPROP_IPADDR_ENABLENETBIOS_ENABLED=1,
    CLUSPROP_IPADDR_ENABLENETBIOS_TRACK_NIC=2
} CLUSPROP_IPADDR_ENABLENETBIOS;

typedef struct CLUSPROP_SZ CLUSPROP_MULTI_SZ;

typedef enum CLUSPROP_PIFLAGS {
    CLUSPROP_PIFLAG_DEFAULT_QUORUM=8,
    CLUSPROP_PIFLAG_REMOVABLE=2,
    CLUSPROP_PIFLAG_STICKY=1,
    CLUSPROP_PIFLAG_USABLE=4
} CLUSPROP_PIFLAGS;

typedef struct _CLUSTER_BATCH_COMMAND CLUSTER_BATCH_COMMAND;

typedef enum CLUSTER_CHANGE {
    CLUSTER_CHANGE_ALL=-2147483647,
    CLUSTER_CHANGE_CLUSTER_PROPERTY=1073741824,
    CLUSTER_CHANGE_CLUSTER_RECONNECT=524288,
    CLUSTER_CHANGE_CLUSTER_STATE=536870912,
    CLUSTER_CHANGE_GROUP_ADDED=16384,
    CLUSTER_CHANGE_GROUP_DELETED=8192,
    CLUSTER_CHANGE_GROUP_PROPERTY=32768,
    CLUSTER_CHANGE_GROUP_STATE=4096,
    CLUSTER_CHANGE_HANDLE_CLOSE=-2147483648,
    CLUSTER_CHANGE_NETINTERFACE_ADDED=67108864,
    CLUSTER_CHANGE_NETINTERFACE_DELETED=33554432,
    CLUSTER_CHANGE_NETINTERFACE_PROPERTY=134217728,
    CLUSTER_CHANGE_NETINTERFACE_STATE=16777216,
    CLUSTER_CHANGE_NETWORK_ADDED=4194304,
    CLUSTER_CHANGE_NETWORK_DELETED=2097152,
    CLUSTER_CHANGE_NETWORK_PROPERTY=8388608,
    CLUSTER_CHANGE_NETWORK_STATE=1048576,
    CLUSTER_CHANGE_NODE_ADDED=4,
    CLUSTER_CHANGE_NODE_DELETED=2,
    CLUSTER_CHANGE_NODE_PROPERTY=8,
    CLUSTER_CHANGE_NODE_STATE=1,
    CLUSTER_CHANGE_QUORUM_STATE=268435456,
    CLUSTER_CHANGE_REGISTRY_ATTRIBUTES=32,
    CLUSTER_CHANGE_REGISTRY_NAME=16,
    CLUSTER_CHANGE_REGISTRY_SUBTREE=128,
    CLUSTER_CHANGE_REGISTRY_VALUE=64,
    CLUSTER_CHANGE_RESOURCE_ADDED=1024,
    CLUSTER_CHANGE_RESOURCE_DELETED=512,
    CLUSTER_CHANGE_RESOURCE_PROPERTY=2048,
    CLUSTER_CHANGE_RESOURCE_STATE=256,
    CLUSTER_CHANGE_RESOURCE_TYPE_ADDED=131072,
    CLUSTER_CHANGE_RESOURCE_TYPE_DELETED=65536,
    CLUSTER_CHANGE_RESOURCE_TYPE_PROPERTY=262144
} CLUSTER_CHANGE;

typedef enum CLUSTER_CONTROL_OBJECT {
    CLUS_OBJECT_CLUSTER=7,
    CLUS_OBJECT_GROUP=3,
    CLUS_OBJECT_INVALID=0,
    CLUS_OBJECT_NETINTERFACE=6,
    CLUS_OBJECT_NETWORK=5,
    CLUS_OBJECT_NODE=4,
    CLUS_OBJECT_RESOURCE=1,
    CLUS_OBJECT_RESOURCE_TYPE=2,
    CLUS_OBJECT_USER=128
} CLUSTER_CONTROL_OBJECT;

typedef enum CLUSTER_ENUM {
    CLUSTER_ENUM_ALL=-2147483647,
    CLUSTER_ENUM_GROUP=8,
    CLUSTER_ENUM_INTERNAL_NETWORK=-2147483648,
    CLUSTER_ENUM_NETINTERFACE=32,
    CLUSTER_ENUM_NETWORK=16,
    CLUSTER_ENUM_NODE=1,
    CLUSTER_ENUM_RESOURCE=4,
    CLUSTER_ENUM_RESTYPE=2,
    CLUSTER_ENUM_SHARED_VOLUME_RESOURCE=1073741824
} CLUSTER_ENUM;

typedef enum CLUSTER_GROUP_ENUM {
    CLUSTER_GROUP_ENUM_ALL=3,
    CLUSTER_GROUP_ENUM_CONTAINS=1,
    CLUSTER_GROUP_ENUM_NODES=2
} CLUSTER_GROUP_ENUM;

typedef enum CLUSTER_GROUP_STATE {
    ClusterGroupFailed=3,
    ClusterGroupOffline=2,
    ClusterGroupOnline=1,
    ClusterGroupPartialOnline=4,
    ClusterGroupPending=5,
    ClusterGroupStateUnknown=0
} CLUSTER_GROUP_STATE;

typedef struct _CLUSTER_IP_ENTRY CLUSTER_IP_ENTRY;

typedef enum CLUSTER_NETINTERFACE_STATE {
    ClusterNetInterfaceFailed=2,
    ClusterNetInterfaceStateUnknown=0,
    ClusterNetInterfaceUnavailable=1,
    ClusterNetInterfaceUnreachable=3,
    ClusterNetInterfaceUp=4
} CLUSTER_NETINTERFACE_STATE;

typedef enum CLUSTER_NETWORK_ENUM {
    CLUSTER_NETWORK_ENUM_ALL=2,
    CLUSTER_NETWORK_ENUM_NETINTERFACES=1
} CLUSTER_NETWORK_ENUM;

typedef enum CLUSTER_NETWORK_ROLE {
    ClusterNetworkRoleClientAccess=2,
    ClusterNetworkRoleInternalAndClient=3,
    ClusterNetworkRoleInternalUse=1,
    ClusterNetworkRoleNone=0
} CLUSTER_NETWORK_ROLE;

typedef enum CLUSTER_NETWORK_STATE {
    ClusterNetworkDown=2,
    ClusterNetworkPartitioned=3,
    ClusterNetworkStateUnknown=0,
    ClusterNetworkUnavailable=1,
    ClusterNetworkUp=4
} CLUSTER_NETWORK_STATE;

typedef enum CLUSTER_NODE_ENUM {
    CLUSTER_NODE_ENUM_ALL=2,
    CLUSTER_NODE_ENUM_NETINTERFACES=1
} CLUSTER_NODE_ENUM;

typedef enum CLUSTER_NODE_STATE {
    ClusterNodeDown=2,
    ClusterNodeJoining=4,
    ClusterNodePaused=3,
    ClusterNodeStateUnknown=0,
    ClusterNodeUp=1
} CLUSTER_NODE_STATE;

typedef enum CLUSTER_PROPERTY_FORMAT {
    CLUSPROP_FORMAT_BINARY=1,
    CLUSPROP_FORMAT_DWORD=2,
    CLUSPROP_FORMAT_EXPANDED_SZ=8,
    CLUSPROP_FORMAT_EXPAND_SZ=4,
    CLUSPROP_FORMAT_FILETIME=12,
    CLUSPROP_FORMAT_LARGE_INTEGER=10,
    CLUSPROP_FORMAT_LONG=7,
    CLUSPROP_FORMAT_MULTI_SZ=5,
    CLUSPROP_FORMAT_SECURITY_DESCRIPTOR=9,
    CLUSPROP_FORMAT_SZ=3,
    CLUSPROP_FORMAT_ULARGE_INTEGER=6,
    CLUSPROP_FORMAT_UNKNOWN=0,
    CLUSPROP_FORMAT_USER=32768,
    CLUSPROP_FORMAT_WORD=11
} CLUSTER_PROPERTY_FORMAT;

typedef enum CLUSTER_PROPERTY_SYNTAX {
    CLUSPROP_SYNTAX_DISK_GUID=20,
    CLUSPROP_SYNTAX_DISK_NUMBER=16,
    CLUSPROP_SYNTAX_DISK_SERIALNUMBER=19,
    CLUSPROP_SYNTAX_DISK_SIGNATURE=14,
    CLUSPROP_SYNTAX_DISK_SIZE=21,
    CLUSPROP_SYNTAX_ENDMARK=0,
    CLUSPROP_SYNTAX_FTSET_INFO=18,
    CLUSPROP_SYNTAX_LIST_VALUE_BINARY=6,
    CLUSPROP_SYNTAX_LIST_VALUE_DWORD=5,
    CLUSPROP_SYNTAX_LIST_VALUE_EXPANDED_SZ=9,
    CLUSPROP_SYNTAX_LIST_VALUE_EXPAND_SZ=4,
    CLUSPROP_SYNTAX_LIST_VALUE_FILETIME=23,
    CLUSPROP_SYNTAX_LIST_VALUE_LARGE_INTEGER=11,
    CLUSPROP_SYNTAX_LIST_VALUE_LONG=8,
    CLUSPROP_SYNTAX_LIST_VALUE_MULTI_SZ=7,
    CLUSPROP_SYNTAX_LIST_VALUE_SECURITY_DESCRIPTOR=10,
    CLUSPROP_SYNTAX_LIST_VALUE_SZ=3,
    CLUSPROP_SYNTAX_LIST_VALUE_ULARGE_INTEGER=12,
    CLUSPROP_SYNTAX_LIST_VALUE_WORD=13,
    CLUSPROP_SYNTAX_NAME=1,
    CLUSPROP_SYNTAX_PARTITION_INFO=17,
    CLUSPROP_SYNTAX_PARTITION_INFO_EX=22,
    CLUSPROP_SYNTAX_RESCLASS=2,
    CLUSPROP_SYNTAX_SCSI_ADDRESS=15
} CLUSTER_PROPERTY_SYNTAX;

typedef enum CLUSTER_PROPERTY_TYPE {
    CLUSPROP_TYPE_DISK_GUID=11,
    CLUSPROP_TYPE_DISK_NUMBER=7,
    CLUSPROP_TYPE_DISK_SERIALNUMBER=10,
    CLUSPROP_TYPE_DISK_SIZE=12,
    CLUSPROP_TYPE_ENDMARK=0,
    CLUSPROP_TYPE_FTSET_INFO=9,
    CLUSPROP_TYPE_LIST_VALUE=1,
    CLUSPROP_TYPE_NAME=4,
    CLUSPROP_TYPE_PARTITION_INFO=8,
    CLUSPROP_TYPE_PARTITION_INFO_EX=13,
    CLUSPROP_TYPE_RESCLASS=2,
    CLUSPROP_TYPE_RESERVED1=3,
    CLUSPROP_TYPE_SCSI_ADDRESS=6,
    CLUSPROP_TYPE_SIGNATURE=5,
    CLUSPROP_TYPE_UNKNOWN=0,
    CLUSPROP_TYPE_USER=32768
} CLUSTER_PROPERTY_TYPE;

typedef enum CLUSTER_QUORUM_TYPE {
    ModifyQuorum=1,
    OperationalQuorum=0
} CLUSTER_QUORUM_TYPE;

typedef enum CLUSTER_QUORUM_VALUE {
    CLUSTER_QUORUM_LOST=1,
    CLUSTER_QUORUM_MAINTAINED=0
} CLUSTER_QUORUM_VALUE;

typedef enum CLUSTER_RESOURCE_CREATE_FLAGS {
    CLUSTER_RESOURCE_DEFAULT_MONITOR=0,
    CLUSTER_RESOURCE_SEPARATE_MONITOR=1,
    CLUSTER_RESOURCE_VALID_FLAGS=2
} CLUSTER_RESOURCE_CREATE_FLAGS;

typedef enum CLUSTER_RESOURCE_ENUM {
    CLUSTER_RESOURCE_ENUM_ALL=5,
    CLUSTER_RESOURCE_ENUM_DEPENDS=1,
    CLUSTER_RESOURCE_ENUM_NODES=4,
    CLUSTER_RESOURCE_ENUM_PROVIDES=2
} CLUSTER_RESOURCE_ENUM;

typedef enum CLUSTER_RESOURCE_RESTART_ACTION {
    ClusterResourceDontRestart=0,
    ClusterResourceRestartActionCount=3,
    ClusterResourceRestartNoNotify=1,
    ClusterResourceRestartNotify=2
} CLUSTER_RESOURCE_RESTART_ACTION;

typedef enum CLUSTER_RESOURCE_TYPE_ENUM {
    CLUSTER_RESOURCE_TYPE_ENUM_ALL=3,
    CLUSTER_RESOURCE_TYPE_ENUM_NODES=1,
    CLUSTER_RESOURCE_TYPE_ENUM_RESOURCES=2
} CLUSTER_RESOURCE_TYPE_ENUM;

typedef struct CLUSTER_SET_PASSWORD_STATUS CLUSTER_SET_PASSWORD_STATUS, *PCLUSTER_SET_PASSWORD_STATUS;

struct CLUSTER_SET_PASSWORD_STATUS {
    DWORD NodeId;
    BOOLEAN SetAttempted;
    DWORD ReturnStatus;
};

typedef enum _CLUSTER_SETUP_PHASE CLUSTER_SETUP_PHASE;

typedef enum _CLUSTER_SETUP_PHASE_SEVERITY CLUSTER_SETUP_PHASE_SEVERITY;

typedef enum _CLUSTER_SETUP_PHASE_TYPE CLUSTER_SETUP_PHASE_TYPE;

typedef struct _CLUSTER_VALIDATE_CSV_FILENAME CLUSTER_VALIDATE_CSV_FILENAME;

typedef struct _CLUSTER_VALIDATE_DIRECTORY CLUSTER_VALIDATE_DIRECTORY;

typedef struct _CLUSTER_VALIDATE_NETNAME CLUSTER_VALIDATE_NETNAME;

typedef struct _CLUSTER_VALIDATE_PATH CLUSTER_VALIDATE_PATH;

typedef struct CLUSTERVERSIONINFO CLUSTERVERSIONINFO, *PCLUSTERVERSIONINFO;

struct CLUSTERVERSIONINFO {
    DWORD dwVersionInfoSize;
    WORD MajorVersion;
    WORD MinorVersion;
    WORD BuildNumber;
    WCHAR szVendorId[64];
    WCHAR szCSDVersion[64];
    DWORD dwClusterHighestVersion;
    DWORD dwClusterLowestVersion;
    DWORD dwFlags;
    DWORD dwReserved;
};

typedef struct CLUSTERVERSIONINFO_NT4 CLUSTERVERSIONINFO_NT4, *PCLUSTERVERSIONINFO_NT4;

struct CLUSTERVERSIONINFO_NT4 {
    DWORD dwVersionInfoSize;
    WORD MajorVersion;
    WORD MinorVersion;
    WORD BuildNumber;
    WCHAR szVendorId[64];
    WCHAR szCSDVersion[64];
};

typedef struct _CREATE_CLUSTER_CONFIG CREATE_CLUSTER_CONFIG;

typedef enum CLUSTER_RESOURCE_RESTART_ACTION CRRA;

typedef struct _FILESHARE_CHANGE_LIST FILESHARE_CHANGE_LIST;

typedef struct _HCHANGE * HCHANGE;

typedef struct _HCLUSENUM * HCLUSENUM;

typedef struct _HCLUSTER * HCLUSTER;

typedef struct _HGROUP * HGROUP;

typedef struct _HGROUPENUM * HGROUPENUM;

typedef struct _HNETINTERFACE * HNETINTERFACE;

typedef struct _HNETWORK * HNETWORK;

typedef struct _HNETWORKENUM * HNETWORKENUM;

typedef struct _HNODE * HNODE;

typedef struct _HNODEENUM * HNODEENUM;

typedef struct _HREGBATCH * HREGBATCH;

typedef struct _HREGBATCHNOTIFICATION * HREGBATCHNOTIFICATION;

typedef struct _HREGBATCHPORT * HREGBATCHPORT;

typedef struct _HRESENUM * HRESENUM;

typedef struct _HRESOURCE * HRESOURCE;

typedef struct _HRESTYPEENUM * HRESTYPEENUM;

typedef struct CLUSTERVERSIONINFO * LPCLUSTERVERSIONINFO;

typedef enum NODE_CLUSTER_STATE {
    ClusterStateNotConfigured=1,
    ClusterStateNotInstalled=0,
    ClusterStateNotRunning=2,
    ClusterStateRunning=3
} NODE_CLUSTER_STATE;

typedef struct _CLUS_CSV_VOLUME_INFO * PCLUS_CSV_VOLUME_INFO;

typedef struct _CLUS_DISK_NUMBER_INFO * PCLUS_DISK_NUMBER_INFO;

typedef struct _CLUS_MAINTENANCE_MODE_INFOEX * PCLUS_MAINTENANCE_MODE_INFOEX;

typedef struct _CLUS_PROVIDER_STATE_CHANGE_INFO * PCLUS_PROVIDER_STATE_CHANGE_INFO;

typedef struct _CLUS_SHARED_VOLUME_BACKUP_MODE * PCLUS_SHARED_VOLUME_BACKUP_MODE;

typedef struct _CLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS * PCLUS_STORAGE_GET_AVAILABLE_DRIVELETTERS;

typedef struct _CLUS_STORAGE_REMAP_DRIVELETTER * PCLUS_STORAGE_REMAP_DRIVELETTER;

typedef struct _CLUS_STORAGE_SET_DRIVELETTER * PCLUS_STORAGE_SET_DRIVELETTER;

typedef BOOL (* PCLUSTER_SETUP_PROGRESS_CALLBACK)(PVOID, CLUSTER_SETUP_PHASE, CLUSTER_SETUP_PHASE_TYPE, CLUSTER_SETUP_PHASE_SEVERITY, DWORD, PCWSTR, DWORD);

typedef HNODE (* PCLUSAPI_ADD_CLUSTER_NODE)(HCLUSTER, PCWSTR, PCLUSTER_SETUP_PROGRESS_CALLBACK, PVOID);

typedef DWORD (* PCLUSAPI_ADD_CLUSTER_RESOURCE_DEPENDENCY)(HRESOURCE, HRESOURCE);

typedef DWORD (* PCLUSAPI_ADD_CLUSTER_RESOURCE_NODE)(HRESOURCE, HNODE);

typedef DWORD (* PCLUSAPI_ADD_RESOURCE_TO_CLUSTER_SHARED_VOLUMES)(HRESOURCE);

typedef DWORD (* PCLUSAPI_BACKUP_CLUSTER_DATABASE)(HCLUSTER, LPCWSTR);

typedef BOOL (* PCLUSAPI_CAN_RESOURCE_BE_DEPENDENT)(HRESOURCE, HRESOURCE);

typedef DWORD (* PCLUSAPI_CHANGE_CLUSTER_RESOURCE_GROUP)(HRESOURCE, HGROUP);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER)(HCLUSTER);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER_GROUP)(HGROUP);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER_NET_INTERFACE)(HNETINTERFACE);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER_NETWORK)(HNETWORK);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER_NODE)(HNODE);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER_NOTIFY_PORT)(HCHANGE);

typedef BOOL (* PCLUSAPI_CLOSE_CLUSTER_RESOURCE)(HRESOURCE);

typedef DWORD (* PCLUSAPI_CLUSTER_CLOSE_ENUM)(HCLUSENUM);

typedef DWORD * LPDWORD;

typedef DWORD (* PCLUSAPI_CLUSTER_CONTROL)(HCLUSTER, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_ENUM)(HCLUSENUM, DWORD, LPDWORD, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_GET_ENUM_COUNT)(HCLUSENUM);

typedef DWORD (* PCLUSAPI_CLUSTER_GROUP_CLOSE_ENUM)(HGROUPENUM);

typedef DWORD (* PCLUSAPI_CLUSTER_GROUP_CONTROL)(HGROUP, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_GROUP_ENUM)(HGROUPENUM, DWORD, LPDWORD, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_GROUP_GET_ENUM_COUNT)(HGROUPENUM);

typedef HGROUPENUM (* PCLUSAPI_CLUSTER_GROUP_OPEN_ENUM)(HGROUP, DWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NET_INTERFACE_CONTROL)(HNETINTERFACE, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NETWORK_CLOSE_ENUM)(HNETWORKENUM);

typedef DWORD (* PCLUSAPI_CLUSTER_NETWORK_CONTROL)(HNETWORK, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NETWORK_ENUM)(HNETWORKENUM, DWORD, LPDWORD, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NETWORK_GET_ENUM_COUNT)(HNETWORKENUM);

typedef HNETWORKENUM (* PCLUSAPI_CLUSTER_NETWORK_OPEN_ENUM)(HNETWORK, DWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NODE_CLOSE_ENUM)(HNODEENUM);

typedef DWORD (* PCLUSAPI_CLUSTER_NODE_CONTROL)(HNODE, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NODE_ENUM)(HNODEENUM, DWORD, LPDWORD, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_NODE_GET_ENUM_COUNT)(HNODEENUM);

typedef HNODEENUM (* PCLUSAPI_CLUSTER_NODE_OPEN_ENUM)(HNODE, DWORD);

typedef HCLUSENUM (* PCLUSAPI_CLUSTER_OPEN_ENUM)(HCLUSTER, DWORD);

typedef struct HKEY__ HKEY__, *PHKEY__;

typedef struct HKEY__ * HKEY;

typedef LONG (* PCLUSAPI_CLUSTER_REG_CLOSE_KEY)(HKEY);

struct HKEY__ {
    int unused;
};

typedef LONG (* PCLUSAPI_CLUSTER_REG_CREATE_BATCH)(HKEY, HREGBATCH *);

typedef DWORD ACCESS_MASK;

typedef ACCESS_MASK REGSAM;

typedef struct _SECURITY_ATTRIBUTES _SECURITY_ATTRIBUTES, *P_SECURITY_ATTRIBUTES;

typedef struct _SECURITY_ATTRIBUTES * LPSECURITY_ATTRIBUTES;

typedef HKEY * PHKEY;

typedef LONG (* PCLUSAPI_CLUSTER_REG_CREATE_KEY)(HKEY, LPCWSTR, DWORD, REGSAM, LPSECURITY_ATTRIBUTES, PHKEY, LPDWORD);

struct _SECURITY_ATTRIBUTES {
    DWORD nLength;
    LPVOID lpSecurityDescriptor;
    BOOL bInheritHandle;
};

typedef LONG (* PCLUSAPI_CLUSTER_REG_DELETE_KEY)(HKEY, LPCWSTR);

typedef DWORD (* PCLUSAPI_CLUSTER_REG_DELETE_VALUE)(HKEY, LPCWSTR);

typedef struct _FILETIME * PFILETIME;

typedef LONG (* PCLUSAPI_CLUSTER_REG_ENUM_KEY)(HKEY, DWORD, LPWSTR, LPDWORD, PFILETIME);

typedef BYTE * LPBYTE;

typedef DWORD (* PCLUSAPI_CLUSTER_REG_ENUM_VALUE)(HKEY, DWORD, LPWSTR, LPDWORD, LPDWORD, LPBYTE, LPDWORD);

typedef DWORD SECURITY_INFORMATION;

typedef PVOID PSECURITY_DESCRIPTOR;

typedef LONG (* PCLUSAPI_CLUSTER_REG_GET_KEY_SECURITY)(HKEY, SECURITY_INFORMATION, PSECURITY_DESCRIPTOR, LPDWORD);

typedef LONG (* PCLUSAPI_CLUSTER_REG_OPEN_KEY)(HKEY, LPCWSTR, REGSAM, PHKEY);

typedef LONG (* PCLUSAPI_CLUSTER_REG_QUERY_INFO_KEY)(HKEY, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, PFILETIME);

typedef LONG (* PCLUSAPI_CLUSTER_REG_QUERY_VALUE)(HKEY, LPCWSTR, LPDWORD, LPBYTE, LPDWORD);

typedef LONG (* PCLUSAPI_CLUSTER_REG_SET_KEY_SECURITY)(HKEY, SECURITY_INFORMATION, PSECURITY_DESCRIPTOR);

typedef DWORD (* PCLUSAPI_CLUSTER_REG_SET_VALUE)(HKEY, LPCWSTR, DWORD, BYTE *, DWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_CLOSE_ENUM)(HRESENUM);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_CONTROL)(HRESOURCE, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_ENUM)(HRESENUM, DWORD, LPDWORD, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_GET_ENUM_COUNT)(HRESENUM);

typedef HRESENUM (* PCLUSAPI_CLUSTER_RESOURCE_OPEN_ENUM)(HRESOURCE, DWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_TYPE_CLOSE_ENUM)(HRESTYPEENUM);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_TYPE_CONTROL)(HCLUSTER, LPCWSTR, HNODE, DWORD, LPVOID, DWORD, LPVOID, DWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_TYPE_ENUM)(HRESTYPEENUM, DWORD, LPDWORD, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_CLUSTER_RESOURCE_TYPE_GET_ENUM_COUNT)(HRESTYPEENUM);

typedef HRESTYPEENUM (* PCLUSAPI_CLUSTER_RESOURCE_TYPE_OPEN_ENUM)(HCLUSTER, LPCWSTR, DWORD);

typedef struct _CREATE_CLUSTER_CONFIG * PCREATE_CLUSTER_CONFIG;

typedef HCLUSTER (* PCLUSAPI_CREATE_CLUSTER)(PCREATE_CLUSTER_CONFIG, PCLUSTER_SETUP_PROGRESS_CALLBACK, PVOID);

typedef HGROUP (* PCLUSAPI_CREATE_CLUSTER_GROUP)(HCLUSTER, LPCWSTR);

typedef HCHANGE (* PCLUSAPI_CREATE_CLUSTER_NOTIFY_PORT)(HCHANGE, HCLUSTER, DWORD, DWORD_PTR);

typedef HRESOURCE (* PCLUSAPI_CREATE_CLUSTER_RESOURCE)(HGROUP, LPCWSTR, LPCWSTR, DWORD);

typedef DWORD (* PCLUSAPI_CREATE_CLUSTER_RESOURCE_TYPE)(HCLUSTER, LPCWSTR, LPCWSTR, LPCWSTR, DWORD, DWORD);

typedef DWORD (* PCLUSAPI_DELETE_CLUSTER_GROUP)(HGROUP);

typedef DWORD (* PCLUSAPI_DELETE_CLUSTER_RESOURCE)(HRESOURCE);

typedef DWORD (* PCLUSAPI_DELETE_CLUSTER_RESOURCE_TYPE)(HCLUSTER, LPCWSTR);

typedef DWORD (* PCLUSAPI_DESTROY_CLUSTER)(HCLUSTER, PCLUSTER_SETUP_PROGRESS_CALLBACK, PVOID, BOOL);

typedef DWORD (* PCLUSAPI_DESTROY_CLUSTER_GROUP)(HGROUP);

typedef DWORD (* PCLUSAPI_EVICT_CLUSTER_NODE)(HNODE);

typedef DWORD (* PCLUSAPI_EVICT_CLUSTER_NODE_EX)(HNODE, DWORD, HRESULT *);

typedef DWORD (* PCLUSAPI_FAIL_CLUSTER_RESOURCE)(HRESOURCE);

typedef HCLUSTER (* PCLUSAPI_GET_CLUSTER_FROM_GROUP)(HGROUP);

typedef HCLUSTER (* PCLUSAPI_GET_CLUSTER_FROM_NET_INTERFACE)(HNETINTERFACE);

typedef HCLUSTER (* PCLUSAPI_GET_CLUSTER_FROM_NETWORK)(HNETWORK);

typedef HCLUSTER (* PCLUSAPI_GET_CLUSTER_FROM_NODE)(HNODE);

typedef HCLUSTER (* PCLUSAPI_GET_CLUSTER_FROM_RESOURCE)(HRESOURCE);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_GROUP_KEY)(HGROUP, REGSAM);

typedef CLUSTER_GROUP_STATE (* PCLUSAPI_GET_CLUSTER_GROUP_STATE)(HGROUP, LPWSTR, LPDWORD);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_INFORMATION)(HCLUSTER, LPWSTR, LPDWORD, LPCLUSTERVERSIONINFO);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_KEY)(HCLUSTER, REGSAM);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_NET_INTERFACE)(HCLUSTER, LPCWSTR, LPCWSTR, LPWSTR, LPDWORD);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_NET_INTERFACE_KEY)(HNETINTERFACE, REGSAM);

typedef CLUSTER_NETINTERFACE_STATE (* PCLUSAPI_GET_CLUSTER_NET_INTERFACE_STATE)(HNETINTERFACE);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_NETWORK_ID)(HNETWORK, LPWSTR, LPDWORD);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_NETWORK_KEY)(HNETWORK, REGSAM);

typedef CLUSTER_NETWORK_STATE (* PCLUSAPI_GET_CLUSTER_NETWORK_STATE)(HNETWORK);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_NODE_ID)(HNODE, LPWSTR, LPDWORD);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_NODE_KEY)(HNODE, REGSAM);

typedef CLUSTER_NODE_STATE (* PCLUSAPI_GET_CLUSTER_NODE_STATE)(HNODE);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_NOTIFY)(HCHANGE, DWORD_PTR *, LPDWORD, LPWSTR, LPDWORD, DWORD);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_QUORUM_RESOURCE)(HCLUSTER, LPWSTR, LPDWORD, LPWSTR, LPDWORD, LPDWORD);

typedef DWORD (* PCLUSAPI_GET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION)(HRESOURCE, LPWSTR, LPDWORD);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_RESOURCE_KEY)(HRESOURCE, REGSAM);

typedef BOOL (* PCLUSAPI_GET_CLUSTER_RESOURCE_NETWORK_NAME)(HRESOURCE, LPWSTR, LPDWORD);

typedef CLUSTER_RESOURCE_STATE (* PCLUSAPI_GET_CLUSTER_RESOURCE_STATE)(HRESOURCE, LPWSTR, LPDWORD, LPWSTR, LPDWORD);

typedef HKEY (* PCLUSAPI_GET_CLUSTER_RESOURCE_TYPE_KEY)(HCLUSTER, LPCWSTR, REGSAM);

typedef DWORD (* PCLUSAPI_GET_NODE_CLUSTER_STATE)(LPCWSTR, LPDWORD);

typedef BOOL * PBOOL;

typedef DWORD (* PCLUSAPI_IS_FILE_ON_CLUSTER_SHARED_VOLUME)(LPCWSTR, PBOOL);

typedef DWORD (* PCLUSAPI_MOVE_CLUSTER_GROUP)(HGROUP, HNODE);

typedef DWORD (* PCLUSAPI_OFFLINE_CLUSTER_GROUP)(HGROUP);

typedef DWORD (* PCLUSAPI_OFFLINE_CLUSTER_RESOURCE)(HRESOURCE);

typedef DWORD (* PCLUSAPI_ONLINE_CLUSTER_GROUP)(HGROUP, HNODE);

typedef DWORD (* PCLUSAPI_ONLINE_CLUSTER_RESOURCE)(HRESOURCE);

typedef HCLUSTER (* PCLUSAPI_OPEN_CLUSTER)(LPCWSTR);

typedef HGROUP (* PCLUSAPI_OPEN_CLUSTER_GROUP)(HCLUSTER, LPCWSTR);

typedef HNETINTERFACE (* PCLUSAPI_OPEN_CLUSTER_NET_INTERFACE)(HCLUSTER, LPCWSTR);

typedef HNETWORK (* PCLUSAPI_OPEN_CLUSTER_NETWORK)(HCLUSTER, LPCWSTR);

typedef HNODE (* PCLUSAPI_OPEN_CLUSTER_NODE)(HCLUSTER, LPCWSTR);

typedef HRESOURCE (* PCLUSAPI_OPEN_CLUSTER_RESOURCE)(HCLUSTER, LPCWSTR);

typedef DWORD (* PCLUSAPI_PAUSE_CLUSTER_NODE)(HNODE);

typedef DWORD (* PCLUSAPI_REGISTER_CLUSTER_NOTIFY)(HCHANGE, DWORD, HANDLE, DWORD_PTR);

typedef DWORD (* PCLUSAPI_REMOVE_CLUSTER_RESOURCE_DEPENDENCY)(HRESOURCE, HRESOURCE);

typedef DWORD (* PCLUSAPI_REMOVE_CLUSTER_RESOURCE_NODE)(HRESOURCE, HNODE);

typedef DWORD (* PCLUSAPI_REMOVE_RESOURCE_FROM_CLUSTER_SHARED_VOLUMES)(HRESOURCE);

typedef DWORD (* PCLUSAPI_RESTORE_CLUSTER_DATABASE)(LPCWSTR, BOOL, LPCWSTR);

typedef DWORD (* PCLUSAPI_RESUME_CLUSTER_NODE)(HNODE);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_GROUP_NAME)(HGROUP, LPCWSTR);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_GROUP_NODE_LIST)(HGROUP, DWORD, HNODE *);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_NETWORK_NAME)(HNETWORK, LPCWSTR);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_NETWORK_PRIORITY_ORDER)(HCLUSTER, DWORD, HNETWORK *);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_QUORUM_RESOURCE)(HRESOURCE, LPCWSTR, DWORD);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_RESOURCE_DEPENDENCY_EXPRESSION)(HRESOURCE, LPCWSTR);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_RESOURCE_NAME)(HRESOURCE, LPCWSTR);

typedef DWORD (* PCLUSAPI_SET_CLUSTER_SERVICE_ACCOUNT_PASSWORD)(LPCWSTR, LPCWSTR, DWORD, PCLUSTER_SET_PASSWORD_STATUS, LPDWORD);

typedef DWORD (* PCLUSAPI_SetClusterName)(HCLUSTER, LPCWSTR);

typedef struct _CLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT * PCLUSCTL_RESOURCE_STATE_CHANGE_REASON_STRUCT;

typedef enum _CLUSTER_CSV_VOLUME_FAULT_STATE * PCLUSTER_CSV_VOLUME_FAULT_STATE;

typedef LONG (* PCLUSTER_REG_BATCH_ADD_COMMAND)(HREGBATCH, CLUSTER_REG_COMMAND, LPWSTR, DWORD, void *, DWORD);

typedef LONG (* PCLUSTER_REG_BATCH_CLOSE_NOTIFICATION)(HREGBATCHNOTIFICATION);

typedef LONG (* PCLUSTER_REG_BATCH_READ_COMMAND)(HREGBATCHNOTIFICATION, CLUSTER_BATCH_COMMAND *);

typedef int INT;

typedef LONG (* PCLUSTER_REG_CLOSE_BATCH)(HREGBATCH, BOOL, INT *);

typedef LONG (* PCLUSTER_REG_CLOSE_BATCH_NOTIFY_PORT)(HREGBATCHPORT);

typedef LONG (* PCLUSTER_REG_CREATE_BATCH_NOTIFY_PORT)(HKEY, HREGBATCHPORT *);

typedef LONG (* PCLUSTER_REG_GET_BATCH_NOTIFICATION)(HREGBATCHPORT, HREGBATCHNOTIFICATION *);

typedef enum _CLUSTER_SHARED_VOLUME_BACKUP_STATE * PCLUSTER_SHARED_VOLUME_BACKUP_STATE;

typedef struct _CLUSTER_VALIDATE_CSV_FILENAME * PCLUSTER_VALIDATE_CSV_FILENAME;

typedef struct _CLUSTER_VALIDATE_DIRECTORY * PCLUSTER_VALIDATE_DIRECTORY;

typedef struct _CLUSTER_VALIDATE_NETNAME * PCLUSTER_VALIDATE_NETNAME;

typedef struct _CLUSTER_VALIDATE_PATH * PCLUSTER_VALIDATE_PATH;

typedef struct _FILESHARE_CHANGE * PFILESHARE_CHANGE;

typedef enum _FILESHARE_CHANGE_ENUM * PFILESHARE_CHANGE_ENUM;

typedef struct _FILESHARE_CHANGE_LIST * PFILESHARE_CHANGE_LIST;

typedef enum _MAINTENANCE_MODE_TYPE_ENUM * PMAINTENANCE_MODE_TYPE_ENUM;

typedef struct tagCATEGORYINFO tagCATEGORYINFO, *PtagCATEGORYINFO;

typedef struct tagCATEGORYINFO CATEGORYINFO;

typedef GUID CATID;

typedef DWORD LCID;

typedef WCHAR OLECHAR;

struct tagCATEGORYINFO {
    CATID catid;
    LCID lcid;
    OLECHAR szDescription[128];
};

typedef struct ICatInformation ICatInformation, *PICatInformation;

typedef struct ICatInformationVtbl ICatInformationVtbl, *PICatInformationVtbl;

typedef GUID IID;

typedef struct IEnumCATEGORYINFO IEnumCATEGORYINFO, *PIEnumCATEGORYINFO;

typedef GUID * REFCATID;

typedef struct IEnumGUID IEnumGUID, *PIEnumGUID;

typedef struct IEnumCATEGORYINFOVtbl IEnumCATEGORYINFOVtbl, *PIEnumCATEGORYINFOVtbl;

typedef struct IEnumGUIDVtbl IEnumGUIDVtbl, *PIEnumGUIDVtbl;

struct IEnumGUIDVtbl {
    HRESULT (* QueryInterface)(struct IEnumGUID *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumGUID *);
    ULONG (* Release)(struct IEnumGUID *);
    HRESULT (* Next)(struct IEnumGUID *, ULONG, GUID *, ULONG *);
    HRESULT (* Skip)(struct IEnumGUID *, ULONG);
    HRESULT (* Reset)(struct IEnumGUID *);
    HRESULT (* Clone)(struct IEnumGUID *, struct IEnumGUID * *);
};

struct ICatInformationVtbl {
    HRESULT (* QueryInterface)(struct ICatInformation *, IID *, void * *);
    ULONG (* AddRef)(struct ICatInformation *);
    ULONG (* Release)(struct ICatInformation *);
    HRESULT (* EnumCategories)(struct ICatInformation *, LCID, struct IEnumCATEGORYINFO * *);
    HRESULT (* GetCategoryDesc)(struct ICatInformation *, REFCATID, LCID, LPWSTR *);
    HRESULT (* EnumClassesOfCategories)(struct ICatInformation *, ULONG, CATID *, ULONG, CATID *, struct IEnumGUID * *);
    HRESULT (* IsClassOfCategories)(struct ICatInformation *, IID *, ULONG, CATID *, ULONG, CATID *);
    HRESULT (* EnumImplCategoriesOfClass)(struct ICatInformation *, IID *, struct IEnumGUID * *);
    HRESULT (* EnumReqCategoriesOfClass)(struct ICatInformation *, IID *, struct IEnumGUID * *);
};

struct IEnumCATEGORYINFO {
    struct IEnumCATEGORYINFOVtbl * lpVtbl;
};

struct IEnumCATEGORYINFOVtbl {
    HRESULT (* QueryInterface)(struct IEnumCATEGORYINFO *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumCATEGORYINFO *);
    ULONG (* Release)(struct IEnumCATEGORYINFO *);
    HRESULT (* Next)(struct IEnumCATEGORYINFO *, ULONG, CATEGORYINFO *, ULONG *);
    HRESULT (* Skip)(struct IEnumCATEGORYINFO *, ULONG);
    HRESULT (* Reset)(struct IEnumCATEGORYINFO *);
    HRESULT (* Clone)(struct IEnumCATEGORYINFO *, struct IEnumCATEGORYINFO * *);
};

struct IEnumGUID {
    struct IEnumGUIDVtbl * lpVtbl;
};

struct ICatInformation {
    struct ICatInformationVtbl * lpVtbl;
};

typedef struct ICatRegister ICatRegister, *PICatRegister;

typedef struct ICatRegisterVtbl ICatRegisterVtbl, *PICatRegisterVtbl;

struct ICatRegisterVtbl {
    HRESULT (* QueryInterface)(struct ICatRegister *, IID *, void * *);
    ULONG (* AddRef)(struct ICatRegister *);
    ULONG (* Release)(struct ICatRegister *);
    HRESULT (* RegisterCategories)(struct ICatRegister *, ULONG, CATEGORYINFO *);
    HRESULT (* UnRegisterCategories)(struct ICatRegister *, ULONG, CATID *);
    HRESULT (* RegisterClassImplCategories)(struct ICatRegister *, IID *, ULONG, CATID *);
    HRESULT (* UnRegisterClassImplCategories)(struct ICatRegister *, IID *, ULONG, CATID *);
    HRESULT (* RegisterClassReqCategories)(struct ICatRegister *, IID *, ULONG, CATID *);
    HRESULT (* UnRegisterClassReqCategories)(struct ICatRegister *, IID *, ULONG, CATID *);
};

struct ICatRegister {
    struct ICatRegisterVtbl * lpVtbl;
};

typedef struct tagCATEGORYINFO * LPCATEGORYINFO;

typedef struct ICatInformation * LPCATINFORMATION;

typedef struct ICatRegister * LPCATREGISTER;

typedef struct IEnumCATEGORYINFO * LPENUMCATEGORYINFO;

typedef struct IEnumGUID * LPENUMGUID;

#define ACM_ISPLAYING 1128

#define ACM_OPEN 1124

#define ACM_OPENA 1124

#define ACM_OPENW 1127

#define ACM_PLAY 1125

#define ACM_STOP 1126

#define ACN_START 1

#define ACN_STOP 2

#define ACS_AUTOPLAY 4

#define ACS_CENTER 1

#define ACS_TIMER 8

#define ACS_TRANSPARENT 2

#define BCCL_NOGLYPH -1

#define BCM_FIRST 5632

#define BCM_GETIDEALSIZE 5633

#define BCM_GETIMAGELIST 5635

#define BCM_GETNOTE 5642

#define BCM_GETNOTELENGTH 5643

#define BCM_GETSPLITINFO 5640

#define BCM_GETTEXTMARGIN 5637

#define BCM_SETDROPDOWNSTATE 5638

#define BCM_SETIMAGELIST 5634

#define BCM_SETNOTE 5641

#define BCM_SETSHIELD 5644

#define BCM_SETSPLITINFO 5639

#define BCM_SETTEXTMARGIN 5636

#define BCN_DROPDOWN -1248

#define BCN_FIRST -1250

#define BCN_HOTITEMCHANGE -1249

#define BCN_LAST -1350

#define BCSIF_GLYPH 1

#define BCSIF_IMAGE 2

#define BCSIF_SIZE 8

#define BCSIF_STYLE 4

#define BCSS_ALIGNLEFT 4

#define BCSS_IMAGE 8

#define BCSS_NOSPLIT 1

#define BCSS_STRETCH 2

#define BS_COMMANDLINK 14

#define BS_DEFCOMMANDLINK 15

#define BS_DEFSPLITBUTTON 13

#define BS_SPLITBUTTON 12

#define BST_DROPDOWNPUSHED 1024

#define BST_HOT 512

#define BTNS_AUTOSIZE 16

#define BTNS_BUTTON 0

#define BTNS_CHECK 2

#define BTNS_CHECKGROUP 6

#define BTNS_DROPDOWN 8

#define BTNS_GROUP 4

#define BTNS_NOPREFIX 32

#define BTNS_SEP 1

#define BTNS_SHOWTEXT 64

#define BTNS_WHOLEDROPDOWN 128

#define BUTTON_IMAGELIST_ALIGN_BOTTOM 3

#define BUTTON_IMAGELIST_ALIGN_CENTER 4

#define BUTTON_IMAGELIST_ALIGN_LEFT 0

#define BUTTON_IMAGELIST_ALIGN_RIGHT 1

#define BUTTON_IMAGELIST_ALIGN_TOP 2

#define CB_GETCUEBANNER 5892

#define CB_GETMINVISIBLE 5890

#define CB_SETCUEBANNER 5891

#define CB_SETMINVISIBLE 5889

#define CBEIF_DI_SETITEM 268435456

#define CBEIF_IMAGE 2

#define CBEIF_INDENT 16

#define CBEIF_LPARAM 32

#define CBEIF_OVERLAY 8

#define CBEIF_SELECTEDIMAGE 4

#define CBEIF_TEXT 1

#define CBEM_DELETEITEM 324

#define CBEM_GETCOMBOCONTROL 1030

#define CBEM_GETEDITCONTROL 1031

#define CBEM_GETEXSTYLE 1033

#define CBEM_GETEXTENDEDSTYLE 1033

#define CBEM_GETIMAGELIST 1027

#define CBEM_GETITEM 1028

#define CBEM_GETITEMA 1028

#define CBEM_GETITEMW 1037

#define CBEM_GETUNICODEFORMAT 8198

#define CBEM_HASEDITCHANGED 1034

#define CBEM_INSERTITEM 1025

#define CBEM_INSERTITEMA 1025

#define CBEM_INSERTITEMW 1035

#define CBEM_SETEXSTYLE 1032

#define CBEM_SETEXTENDEDSTYLE 1038

#define CBEM_SETIMAGELIST 1026

#define CBEM_SETITEM 1029

#define CBEM_SETITEMA 1029

#define CBEM_SETITEMW 1036

#define CBEM_SETUNICODEFORMAT 8197

#define CBEM_SETWINDOWTHEME 8203

#define CBEMAXSTRLEN 260

#define CBEN_BEGINEDIT -804

#define CBEN_DELETEITEM -802

#define CBEN_DRAGBEGIN -808

#define CBEN_DRAGBEGINA -808

#define CBEN_DRAGBEGINW -809

#define CBEN_ENDEDIT -805

#define CBEN_ENDEDITA -805

#define CBEN_ENDEDITW -806

#define CBEN_FIRST -800

#define CBEN_GETDISPINFO -800

#define CBEN_GETDISPINFOA -800

#define CBEN_GETDISPINFOW -807

#define CBEN_INSERTITEM -801

#define CBEN_LAST -830

#define CBENF_DROPDOWN 4

#define CBENF_ESCAPE 3

#define CBENF_KILLFOCUS 1

#define CBENF_RETURN 2

#define CBES_EX_CASESENSITIVE 16

#define CBES_EX_NOEDITIMAGE 1

#define CBES_EX_NOEDITIMAGEINDENT 2

#define CBES_EX_NOSIZELIMIT 8

#define CBES_EX_PATHWORDBREAKPROC 4

#define CBES_EX_TEXTENDELLIPSIS 32

#define CBM_FIRST 5888

#define CCM_DPISCALE 8204

#define CCM_FIRST 8192

#define CCM_GETCOLORSCHEME 8195

#define CCM_GETDROPTARGET 8196

#define CCM_GETUNICODEFORMAT 8198

#define CCM_GETVERSION 8200

#define CCM_LAST 8704

#define CCM_SETBKCOLOR 8193

#define CCM_SETCOLORSCHEME 8194

#define CCM_SETNOTIFYWINDOW 8201

#define CCM_SETUNICODEFORMAT 8197

#define CCM_SETVERSION 8199

#define CCM_SETWINDOWTHEME 8203

#define CCS_ADJUSTABLE 32

#define CCS_BOTTOM 3

#define CCS_LEFT 129

#define CCS_NODIVIDER 64

#define CCS_NOMOVEX 130

#define CCS_NOMOVEY 2

#define CCS_NOPARENTALIGN 8

#define CCS_NORESIZE 4

#define CCS_RIGHT 131

#define CCS_TOP 1

#define CCS_VERT 128

#define CDDS_ITEM 65536

#define CDDS_ITEMPOSTERASE 65540

#define CDDS_ITEMPOSTPAINT 65538

#define CDDS_ITEMPREERASE 65539

#define CDDS_ITEMPREPAINT 65537

#define CDDS_POSTERASE 4

#define CDDS_POSTPAINT 2

#define CDDS_PREERASE 3

#define CDDS_PREPAINT 1

#define CDDS_SUBITEM 131072

#define CDIS_CHECKED 8

#define CDIS_DEFAULT 32

#define CDIS_DISABLED 4

#define CDIS_DROPHILITED 4096

#define CDIS_FOCUS 16

#define CDIS_GRAYED 2

#define CDIS_HOT 64

#define CDIS_INDETERMINATE 256

#define CDIS_MARKED 128

#define CDIS_NEARHOT 1024

#define CDIS_OTHERSIDEHOT 2048

#define CDIS_SELECTED 1

#define CDIS_SHOWKEYBOARDCUES 512

#define CDRF_DODEFAULT 0

#define CDRF_DOERASE 8

#define CDRF_NEWFONT 2

#define CDRF_NOTIFYITEMDRAW 32

#define CDRF_NOTIFYPOSTERASE 64

#define CDRF_NOTIFYPOSTPAINT 16

#define CDRF_NOTIFYSUBITEMDRAW 32

#define CDRF_SKIPDEFAULT 4

#define CDRF_SKIPPOSTPAINT 256

#define CLR_DEFAULT 4278190080

#define CLR_HILIGHT 4278190080

#define CLR_NONE 4294967295

#define CMB_MASKED 2

#define COMCTL32_VERSION 6

#define DA_ERR -1

#define DA_LAST 2147483647

#define DL_BEGINDRAG 1157

#define DL_CANCELDRAG 1160

#define DL_COPYCURSOR 2

#define DL_CURSORSET 0

#define DL_DRAGGING 1158

#define DL_DROPPED 1159

#define DL_MOVECURSOR 3

#define DL_STOPCURSOR 1

#define DPA_APPEND 2147483647

#define DPA_ERR -1

#define DPAM_INTERSECT 8

#define DPAM_NORMAL 2

#define DPAM_SORTED 1

#define DPAM_UNION 4

#define DPAMM_DELETE 2

#define DPAMM_INSERT 3

#define DPAMM_MERGE 1

#define DPAS_INSERTAFTER 4

#define DPAS_INSERTBEFORE 2

#define DPAS_SORTED 1

#define DSA_APPEND 2147483647

#define DSA_ERR -1

#define DTM_FIRST 4096

#define DTM_GETMCCOLOR 4103

#define DTM_GETMCFONT 4106

#define DTM_GETMONTHCAL 4104

#define DTM_GETRANGE 4099

#define DTM_GETSYSTEMTIME 4097

#define DTM_SETFORMAT 4101

#define DTM_SETFORMATA 4101

#define DTM_SETFORMATW 4146

#define DTM_SETMCCOLOR 4102

#define DTM_SETMCFONT 4105

#define DTM_SETRANGE 4100

#define DTM_SETSYSTEMTIME 4098

#define DTN_CLOSEUP -753

#define DTN_DATETIMECHANGE -759

#define DTN_DROPDOWN -754

#define DTN_FIRST -740

#define DTN_FIRST2 -753

#define DTN_FORMAT -756

#define DTN_FORMATA -756

#define DTN_FORMATQUERY -755

#define DTN_FORMATQUERYA -755

#define DTN_FORMATQUERYW -742

#define DTN_FORMATW -743

#define DTN_LAST -745

#define DTN_LAST2 -799

#define DTN_USERSTRING -758

#define DTN_USERSTRINGA -758

#define DTN_USERSTRINGW -745

#define DTN_WMKEYDOWN -757

#define DTN_WMKEYDOWNA -757

#define DTN_WMKEYDOWNW -744

#define DTS_APPCANPARSE 16

#define DTS_LONGDATEFORMAT 4

#define DTS_RIGHTALIGN 32

#define DTS_SHORTDATECENTURYFORMAT 12

#define DTS_SHORTDATEFORMAT 0

#define DTS_SHOWNONE 2

#define DTS_TIMEFORMAT 9

#define DTS_UPDOWN 1

#define ECM_FIRST 5376

#define EM_GETCUEBANNER 5378

#define EM_GETHILITE 5382

#define EM_HIDEBALLOONTIP 5380

#define EM_SETCUEBANNER 5377

#define EM_SETHILITE 5381

#define EM_SHOWBALLOONTIP 5379

#define EMF_CENTERED 1

#define FSB_ENCARTA_MODE 1

#define FSB_FLAT_MODE 2

#define FSB_REGULAR_MODE 0

#define GDT_ERROR -1

#define GDT_NONE 1

#define GDT_VALID 0

#define GDTR_MAX 2

#define GDTR_MIN 1

#define GMR_DAYSTATE 1

#define GMR_VISIBLE 0

#define HBITMAP_CALLBACK -1

#define HDF_BITMAP 8192

#define HDF_BITMAP_ON_RIGHT 4096

#define HDF_CENTER 2

#define HDF_CHECKBOX 64

#define HDF_CHECKED 128

#define HDF_FIXEDWIDTH 256

#define HDF_IMAGE 2048

#define HDF_JUSTIFYMASK 3

#define HDF_LEFT 0

#define HDF_OWNERDRAW 32768

#define HDF_RIGHT 1

#define HDF_RTLREADING 4

#define HDF_SORTDOWN 512

#define HDF_SORTUP 1024

#define HDF_SPLITBUTTON 16777216

#define HDF_STRING 16384

#define HDFT_HASNOVALUE 32768

#define HDFT_ISDATE 2

#define HDFT_ISNUMBER 1

#define HDFT_ISSTRING 0

#define HDI_BITMAP 16

#define HDI_DI_SETITEM 64

#define HDI_FILTER 256

#define HDI_FORMAT 4

#define HDI_HEIGHT 1

#define HDI_IMAGE 32

#define HDI_LPARAM 8

#define HDI_ORDER 128

#define HDI_STATE 512

#define HDI_TEXT 2

#define HDI_WIDTH 1

#define HDIS_FOCUSED 1

#define HDM_CLEARFILTER 4632

#define HDM_CREATEDRAGIMAGE 4624

#define HDM_DELETEITEM 4610

#define HDM_EDITFILTER 4631

#define HDM_FIRST 4608

#define HDM_GETBITMAPMARGIN 4629

#define HDM_GETFOCUSEDITEM 4635

#define HDM_GETIMAGELIST 4617

#define HDM_GETITEM 4611

#define HDM_GETITEMA 4611

#define HDM_GETITEMCOUNT 4608

#define HDM_GETITEMDROPDOWNRECT 4633

#define HDM_GETITEMRECT 4615

#define HDM_GETITEMW 4619

#define HDM_GETORDERARRAY 4625

#define HDM_GETOVERFLOWRECT 4634

#define HDM_GETUNICODEFORMAT 8198

#define HDM_HITTEST 4614

#define HDM_INSERTITEM 4609

#define HDM_INSERTITEMA 4609

#define HDM_INSERTITEMW 4618

#define HDM_LAYOUT 4613

#define HDM_ORDERTOINDEX 4623

#define HDM_SETBITMAPMARGIN 4628

#define HDM_SETFILTERCHANGETIMEOUT 4630

#define HDM_SETFOCUSEDITEM 4636

#define HDM_SETHOTDIVIDER 4627

#define HDM_SETIMAGELIST 4616

#define HDM_SETITEM 4612

#define HDM_SETITEMA 4612

#define HDM_SETITEMW 4620

#define HDM_SETORDERARRAY 4626

#define HDM_SETUNICODEFORMAT 8197

#define HDN_BEGINDRAG -310

#define HDN_BEGINFILTEREDIT -314

#define HDN_BEGINTRACK -306

#define HDN_BEGINTRACKA -306

#define HDN_BEGINTRACKW -326

#define HDN_DIVIDERDBLCLICK -305

#define HDN_DIVIDERDBLCLICKA -305

#define HDN_DIVIDERDBLCLICKW -325

#define HDN_DROPDOWN -318

#define HDN_ENDDRAG -311

#define HDN_ENDFILTEREDIT -315

#define HDN_ENDTRACK -307

#define HDN_ENDTRACKA -307

#define HDN_ENDTRACKW -327

#define HDN_FILTERBTNCLICK -313

#define HDN_FILTERCHANGE -312

#define HDN_FIRST -300

#define HDN_GETDISPINFO -309

#define HDN_GETDISPINFOA -309

#define HDN_GETDISPINFOW -329

#define HDN_ITEMCHANGED -301

#define HDN_ITEMCHANGEDA -301

#define HDN_ITEMCHANGEDW -321

#define HDN_ITEMCHANGING -300

#define HDN_ITEMCHANGINGA -300

#define HDN_ITEMCHANGINGW -320

#define HDN_ITEMCLICK -302

#define HDN_ITEMCLICKA -302

#define HDN_ITEMCLICKW -322

#define HDN_ITEMDBLCLICK -303

#define HDN_ITEMDBLCLICKA -303

#define HDN_ITEMDBLCLICKW -323

#define HDN_ITEMKEYDOWN -317

#define HDN_ITEMSTATEICONCLICK -316

#define HDN_LAST -399

#define HDN_OVERFLOWCLICK -319

#define HDN_TRACK -308

#define HDN_TRACKA -308

#define HDN_TRACKW -328

#define HDS_BUTTONS 2

#define HDS_CHECKBOXES 1024

#define HDS_DRAGDROP 64

#define HDS_FILTERBAR 256

#define HDS_FLAT 512

#define HDS_FULLDRAG 128

#define HDS_HIDDEN 8

#define HDS_HORZ 0

#define HDS_HOTTRACK 4

#define HDS_NOSIZING 2048

#define HDS_OVERFLOW 4096

#define HDSIL_NORMAL 0

#define HDSIL_STATE 1

#define HHT_ABOVE 256

#define HHT_BELOW 512

#define HHT_NOWHERE 1

#define HHT_ONDIVIDER 4

#define HHT_ONDIVOPEN 8

#define HHT_ONDROPDOWN 8192

#define HHT_ONFILTER 16

#define HHT_ONFILTERBUTTON 32

#define HHT_ONHEADER 2

#define HHT_ONITEMSTATEICON 4096

#define HHT_ONOVERFLOW 16384

#define HHT_TOLEFT 2048

#define HHT_TORIGHT 1024

#define HICF_ACCELERATOR 4

#define HICF_ARROWKEYS 2

#define HICF_DUPACCEL 8

#define HICF_ENTERING 16

#define HICF_LEAVING 32

#define HICF_LMOUSE 128

#define HICF_MOUSE 1

#define HICF_OTHER 0

#define HICF_RESELECT 64

#define HICF_TOGGLEDROPDOWN 256

#define HINST_COMMCTRL -1

#define HIST_ADDTOFAVORITES 3

#define HIST_BACK 0

#define HIST_FAVORITES 2

#define HIST_FORWARD 1

#define HIST_VIEWTREE 4

#define HKCOMB_A 8

#define HKCOMB_C 4

#define HKCOMB_CA 64

#define HKCOMB_NONE 1

#define HKCOMB_S 2

#define HKCOMB_SA 32

#define HKCOMB_SC 16

#define HKCOMB_SCA 128

#define HKM_GETHOTKEY 1026

#define HKM_SETHOTKEY 1025

#define HKM_SETRULES 1027

#define HOTKEYF_ALT 4

#define HOTKEYF_CONTROL 2

#define HOTKEYF_EXT 8

#define HOTKEYF_SHIFT 1

#define I_CHILDRENCALLBACK -1

#define I_COLUMNSCALLBACK -1

#define I_GROUPIDCALLBACK -1

#define I_GROUPIDNONE -2

#define I_IMAGECALLBACK -1

#define I_IMAGENONE -2

#define I_INDENTCALLBACK -1

#define ICC_ANIMATE_CLASS 128

#define ICC_BAR_CLASSES 4

#define ICC_COOL_CLASSES 1024

#define ICC_DATE_CLASSES 256

#define ICC_HOTKEY_CLASS 64

#define ICC_INTERNET_CLASSES 2048

#define ICC_LINK_CLASS 32768

#define ICC_LISTVIEW_CLASSES 1

#define ICC_NATIVEFNTCTL_CLASS 8192

#define ICC_PAGESCROLLER_CLASS 4096

#define ICC_PROGRESS_CLASS 32

#define ICC_STANDARD_CLASSES 16384

#define ICC_TAB_CLASSES 8

#define ICC_TREEVIEW_CLASSES 2

#define ICC_UPDOWN_CLASS 16

#define ICC_USEREX_CLASSES 512

#define ICC_WIN95_CLASSES 255

#define IDB_HIST_DISABLED 14

#define IDB_HIST_HOT 13

#define IDB_HIST_LARGE_COLOR 9

#define IDB_HIST_NORMAL 12

#define IDB_HIST_PRESSED 15

#define IDB_HIST_SMALL_COLOR 8

#define IDB_STD_LARGE_COLOR 1

#define IDB_STD_SMALL_COLOR 0

#define IDB_VIEW_LARGE_COLOR 5

#define IDB_VIEW_SMALL_COLOR 4

#define ILC_COLOR 0

#define ILC_COLOR16 16

#define ILC_COLOR24 24

#define ILC_COLOR32 32

#define ILC_COLOR4 4

#define ILC_COLOR8 8

#define ILC_COLORDDB 254

#define ILC_HIGHQUALITYSCALE 131072

#define ILC_MASK 1

#define ILC_MIRROR 8192

#define ILC_ORIGINALSIZE 65536

#define ILC_PALETTE 2048

#define ILC_PERITEMMIRROR 32768

#define ILCF_MOVE 0

#define ILCF_SWAP 1

#define ILD_ASYNC 32768

#define ILD_BLEND 4

#define ILD_BLEND25 2

#define ILD_BLEND50 4

#define ILD_DPISCALE 16384

#define ILD_FOCUS 2

#define ILD_IMAGE 32

#define ILD_MASK 16

#define ILD_NORMAL 0

#define ILD_OVERLAYMASK 3840

#define ILD_PRESERVEALPHA 4096

#define ILD_ROP 64

#define ILD_SCALE 8192

#define ILD_SELECTED 4

#define ILD_TRANSPARENT 1

#define ILGT_ASYNC 1

#define ILGT_NORMAL 0

#define ILP_DOWNLEVEL 1

#define ILP_NORMAL 0

#define ILS_ALPHA 8

#define ILS_GLOW 1

#define ILS_NORMAL 0

#define ILS_SATURATE 4

#define ILS_SHADOW 2

#define INFOTIPSIZE 1024

#define INVALID_LINK_INDEX -1

#define IPM_CLEARADDRESS 1124

#define IPM_GETADDRESS 1126

#define IPM_ISBLANK 1129

#define IPM_SETADDRESS 1125

#define IPM_SETFOCUS 1128

#define IPM_SETRANGE 1127

#define IPN_FIELDCHANGED -860

#define IPN_FIRST -860

#define IPN_LAST -879

#define LIF_ITEMID 4

#define LIF_ITEMINDEX 1

#define LIF_STATE 2

#define LIF_URL 8

#define LIS_DEFAULTCOLORS 16

#define LIS_ENABLED 2

#define LIS_FOCUSED 1

#define LIS_HOTTRACK 8

#define LIS_VISITED 4

#define LM_GETIDEALHEIGHT 1793

#define LM_GETIDEALSIZE 1793

#define LM_GETITEM 1795

#define LM_HITTEST 1792

#define LM_SETITEM 1794

#define LPSTR_TEXTCALLBACK -1

#define LPSTR_TEXTCALLBACKA -1

#define LPSTR_TEXTCALLBACKW -1

#define LV_MAX_WORKAREAS 16

#define LV_VIEW_DETAILS 1

#define LV_VIEW_ICON 0

#define LV_VIEW_LIST 3

#define LV_VIEW_MAX 4

#define LV_VIEW_SMALLICON 2

#define LV_VIEW_TILE 4

#define LVA_ALIGNLEFT 1

#define LVA_ALIGNTOP 2

#define LVA_DEFAULT 0

#define LVA_SNAPTOGRID 5

#define LVBKIF_FLAG_ALPHABLEND 536870912

#define LVBKIF_FLAG_TILEOFFSET 256

#define LVBKIF_SOURCE_HBITMAP 1

#define LVBKIF_SOURCE_MASK 3

#define LVBKIF_SOURCE_NONE 0

#define LVBKIF_SOURCE_URL 2

#define LVBKIF_STYLE_MASK 16

#define LVBKIF_STYLE_NORMAL 0

#define LVBKIF_STYLE_TILE 16

#define LVBKIF_TYPE_WATERMARK 268435456

#define LVCDI_GROUP 1

#define LVCDI_ITEM 0

#define LVCDI_ITEMSLIST 2

#define LVCDRF_NOGROUPFRAME 131072

#define LVCDRF_NOSELECT 65536

#define LVCF_DEFAULTWIDTH 128

#define LVCF_FMT 1

#define LVCF_IDEALWIDTH 256

#define LVCF_IMAGE 16

#define LVCF_MINWIDTH 64

#define LVCF_ORDER 32

#define LVCF_SUBITEM 8

#define LVCF_TEXT 4

#define LVCF_WIDTH 2

#define LVCFMT_BITMAP_ON_RIGHT 4096

#define LVCFMT_CENTER 2

#define LVCFMT_COL_HAS_IMAGES 32768

#define LVCFMT_FILL 2097152

#define LVCFMT_FIXED_RATIO 524288

#define LVCFMT_FIXED_WIDTH 256

#define LVCFMT_IMAGE 2048

#define LVCFMT_JUSTIFYMASK 3

#define LVCFMT_LEFT 0

#define LVCFMT_LINE_BREAK 1048576

#define LVCFMT_NO_DPI_SCALE 262144

#define LVCFMT_NO_TITLE 8388608

#define LVCFMT_RIGHT 1

#define LVCFMT_SPLITBUTTON 16777216

#define LVCFMT_TILE_PLACEMENTMASK 3145728

#define LVCFMT_WRAP 4194304

#define LVFF_ITEMCOUNT 1

#define LVFI_NEARESTXY 64

#define LVFI_PARAM 1

#define LVFI_PARTIAL 8

#define LVFI_STRING 2

#define LVFI_SUBSTRING 4

#define LVFI_WRAP 32

#define LVFIF_STATE 2

#define LVFIF_TEXT 1

#define LVFIS_FOCUSED 1

#define LVGA_FOOTER_CENTER 16

#define LVGA_FOOTER_LEFT 8

#define LVGA_FOOTER_RIGHT 32

#define LVGA_HEADER_CENTER 2

#define LVGA_HEADER_LEFT 1

#define LVGA_HEADER_RIGHT 4

#define LVGF_ALIGN 8

#define LVGF_DESCRIPTIONBOTTOM 2048

#define LVGF_DESCRIPTIONTOP 1024

#define LVGF_EXTENDEDIMAGE 8192

#define LVGF_FOOTER 2

#define LVGF_GROUPID 16

#define LVGF_HEADER 1

#define LVGF_ITEMS 16384

#define LVGF_NONE 0

#define LVGF_STATE 4

#define LVGF_SUBSET 32768

#define LVGF_SUBSETITEMS 65536

#define LVGF_SUBTITLE 256

#define LVGF_TASK 512

#define LVGF_TITLEIMAGE 4096

#define LVGGR_GROUP 0

#define LVGGR_HEADER 1

#define LVGGR_LABEL 2

#define LVGGR_SUBSETLINK 3

#define LVGIT_UNFOLDED 1

#define LVGMF_BORDERCOLOR 2

#define LVGMF_BORDERSIZE 1

#define LVGMF_NONE 0

#define LVGMF_TEXTCOLOR 4

#define LVGS_COLLAPSED 1

#define LVGS_COLLAPSIBLE 8

#define LVGS_FOCUSED 16

#define LVGS_HIDDEN 2

#define LVGS_NOHEADER 4

#define LVGS_NORMAL 0

#define LVGS_SELECTED 32

#define LVGS_SUBSETED 64

#define LVGS_SUBSETLINKFOCUSED 128

#define LVHT_ABOVE 8

#define LVHT_BELOW 16

#define LVHT_EX_FOOTER 134217728

#define LVHT_EX_GROUP 4076863488

#define LVHT_EX_GROUP_BACKGROUND 2147483648

#define LVHT_EX_GROUP_COLLAPSE 1073741824

#define LVHT_EX_GROUP_FOOTER 536870912

#define LVHT_EX_GROUP_HEADER 268435456

#define LVHT_EX_GROUP_STATEICON 16777216

#define LVHT_EX_GROUP_SUBSETLINK 33554432

#define LVHT_EX_ONCONTENTS 67108864

#define LVHT_NOWHERE 1

#define LVHT_ONITEM 14

#define LVHT_ONITEMICON 2

#define LVHT_ONITEMLABEL 4

#define LVHT_ONITEMSTATEICON 8

#define LVHT_TOLEFT 64

#define LVHT_TORIGHT 32

#define LVIF_COLFMT 65536

#define LVIF_COLUMNS 512

#define LVIF_DI_SETITEM 4096

#define LVIF_GROUPID 256

#define LVIF_IMAGE 2

#define LVIF_INDENT 16

#define LVIF_NORECOMPUTE 2048

#define LVIF_PARAM 4

#define LVIF_STATE 8

#define LVIF_TEXT 1

#define LVIM_AFTER 1

#define LVIR_BOUNDS 0

#define LVIR_ICON 1

#define LVIR_LABEL 2

#define LVIR_SELECTBOUNDS 3

#define LVIS_ACTIVATING 32

#define LVIS_CUT 4

#define LVIS_DROPHILITED 8

#define LVIS_FOCUSED 1

#define LVIS_GLOW 16

#define LVIS_OVERLAYMASK 3840

#define LVIS_SELECTED 2

#define LVIS_STATEIMAGEMASK 61440

#define LVKF_ALT 1

#define LVKF_CONTROL 2

#define LVKF_SHIFT 4

#define LVM_APPROXIMATEVIEWRECT 4160

#define LVM_ARRANGE 4118

#define LVM_CANCELEDITLABEL 4275

#define LVM_CREATEDRAGIMAGE 4129

#define LVM_DELETEALLITEMS 4105

#define LVM_DELETECOLUMN 4124

#define LVM_DELETEITEM 4104

#define LVM_EDITLABEL 4119

#define LVM_EDITLABELA 4119

#define LVM_EDITLABELW 4214

#define LVM_ENABLEGROUPVIEW 4253

#define LVM_ENSUREVISIBLE 4115

#define LVM_FINDITEM 4109

#define LVM_FINDITEMA 4109

#define LVM_FINDITEMW 4179

#define LVM_FIRST 4096

#define LVM_GETBKCOLOR 4096

#define LVM_GETBKIMAGE 4165

#define LVM_GETBKIMAGEA 4165

#define LVM_GETBKIMAGEW 4235

#define LVM_GETCALLBACKMASK 4106

#define LVM_GETCOLUMN 4121

#define LVM_GETCOLUMNA 4121

#define LVM_GETCOLUMNORDERARRAY 4155

#define LVM_GETCOLUMNW 4191

#define LVM_GETCOLUMNWIDTH 4125

#define LVM_GETCOUNTPERPAGE 4136

#define LVM_GETEDITCONTROL 4120

#define LVM_GETEMPTYTEXT 4300

#define LVM_GETEXTENDEDLISTVIEWSTYLE 4151

#define LVM_GETFOCUSEDGROUP 4189

#define LVM_GETFOOTERINFO 4302

#define LVM_GETFOOTERITEM 4304

#define LVM_GETFOOTERITEMRECT 4303

#define LVM_GETFOOTERRECT 4301

#define LVM_GETGROUPCOUNT 4248

#define LVM_GETGROUPINFO 4245

#define LVM_GETGROUPINFOBYINDEX 4249

#define LVM_GETGROUPMETRICS 4252

#define LVM_GETGROUPRECT 4194

#define LVM_GETGROUPSTATE 4188

#define LVM_GETHEADER 4127

#define LVM_GETHOTCURSOR 4159

#define LVM_GETHOTITEM 4157

#define LVM_GETHOVERTIME 4168

#define LVM_GETIMAGELIST 4098

#define LVM_GETINSERTMARK 4263

#define LVM_GETINSERTMARKCOLOR 4267

#define LVM_GETINSERTMARKRECT 4265

#define LVM_GETISEARCHSTRING 4148

#define LVM_GETISEARCHSTRINGA 4148

#define LVM_GETISEARCHSTRINGW 4213

#define LVM_GETITEM 4101

#define LVM_GETITEMA 4101

#define LVM_GETITEMCOUNT 4100

#define LVM_GETITEMINDEXRECT 4305

#define LVM_GETITEMPOSITION 4112

#define LVM_GETITEMRECT 4110

#define LVM_GETITEMSPACING 4147

#define LVM_GETITEMSTATE 4140

#define LVM_GETITEMTEXT 4141

#define LVM_GETITEMTEXTA 4141

#define LVM_GETITEMTEXTW 4211

#define LVM_GETITEMW 4171

#define LVM_GETNEXTITEM 4108

#define LVM_GETNEXTITEMINDEX 4307

#define LVM_GETNUMBEROFWORKAREAS 4169

#define LVM_GETORIGIN 4137

#define LVM_GETOUTLINECOLOR 4272

#define LVM_GETSELECTEDCOLUMN 4270

#define LVM_GETSELECTEDCOUNT 4146

#define LVM_GETSELECTIONMARK 4162

#define LVM_GETSTRINGWIDTH 4113

#define LVM_GETSTRINGWIDTHA 4113

#define LVM_GETSTRINGWIDTHW 4183

#define LVM_GETSUBITEMRECT 4152

#define LVM_GETTEXTBKCOLOR 4133

#define LVM_GETTEXTCOLOR 4131

#define LVM_GETTILEINFO 4261

#define LVM_GETTILEVIEWINFO 4259

#define LVM_GETTOOLTIPS 4174

#define LVM_GETTOPINDEX 4135

#define LVM_GETUNICODEFORMAT 8198

#define LVM_GETVIEW 4239

#define LVM_GETVIEWRECT 4130

#define LVM_GETWORKAREAS 4166

#define LVM_HASGROUP 4257

#define LVM_HITTEST 4114

#define LVM_INSERTCOLUMN 4123

#define LVM_INSERTCOLUMNA 4123

#define LVM_INSERTCOLUMNW 4193

#define LVM_INSERTGROUP 4241

#define LVM_INSERTGROUPSORTED 4255

#define LVM_INSERTITEM 4103

#define LVM_INSERTITEMA 4103

#define LVM_INSERTITEMW 4173

#define LVM_INSERTMARKHITTEST 4264

#define LVM_ISGROUPVIEWENABLED 4271

#define LVM_ISITEMVISIBLE 4278

#define LVM_MAPIDTOINDEX 4277

#define LVM_MAPINDEXTOID 4276

#define LVM_MOVEGROUP 4247

#define LVM_MOVEITEMTOGROUP 4250

#define LVM_REDRAWITEMS 4117

#define LVM_REMOVEALLGROUPS 4256

#define LVM_REMOVEGROUP 4246

#define LVM_SCROLL 4116

#define LVM_SETBKCOLOR 4097

#define LVM_SETBKIMAGE 4164

#define LVM_SETBKIMAGEA 4164

#define LVM_SETBKIMAGEW 4234

#define LVM_SETCALLBACKMASK 4107

#define LVM_SETCOLUMN 4122

#define LVM_SETCOLUMNA 4122

#define LVM_SETCOLUMNORDERARRAY 4154

#define LVM_SETCOLUMNW 4192

#define LVM_SETCOLUMNWIDTH 4126

#define LVM_SETEXTENDEDLISTVIEWSTYLE 4150

#define LVM_SETGROUPINFO 4243

#define LVM_SETGROUPMETRICS 4251

#define LVM_SETHOTCURSOR 4158

#define LVM_SETHOTITEM 4156

#define LVM_SETHOVERTIME 4167

#define LVM_SETICONSPACING 4149

#define LVM_SETIMAGELIST 4099

#define LVM_SETINFOTIP 4269

#define LVM_SETINSERTMARK 4262

#define LVM_SETINSERTMARKCOLOR 4266

#define LVM_SETITEM 4102

#define LVM_SETITEMA 4102

#define LVM_SETITEMCOUNT 4143

#define LVM_SETITEMINDEXSTATE 4306

#define LVM_SETITEMPOSITION 4111

#define LVM_SETITEMPOSITION32 4145

#define LVM_SETITEMSTATE 4139

#define LVM_SETITEMTEXT 4142

#define LVM_SETITEMTEXTA 4142

#define LVM_SETITEMTEXTW 4212

#define LVM_SETITEMW 4172

#define LVM_SETOUTLINECOLOR 4273

#define LVM_SETSELECTEDCOLUMN 4236

#define LVM_SETSELECTIONMARK 4163

#define LVM_SETTEXTBKCOLOR 4134

#define LVM_SETTEXTCOLOR 4132

#define LVM_SETTILEINFO 4260

#define LVM_SETTILEVIEWINFO 4258

#define LVM_SETTOOLTIPS 4170

#define LVM_SETUNICODEFORMAT 8197

#define LVM_SETVIEW 4238

#define LVM_SETWORKAREAS 4161

#define LVM_SORTGROUPS 4254

#define LVM_SORTITEMS 4144

#define LVM_SORTITEMSEX 4177

#define LVM_SUBITEMHITTEST 4153

#define LVM_UPDATE 4138

#define LVN_BEGINDRAG -109

#define LVN_BEGINLABELEDIT -105

#define LVN_BEGINLABELEDITA -105

#define LVN_BEGINLABELEDITW -175

#define LVN_BEGINRDRAG -111

#define LVN_BEGINSCROLL -180

#define LVN_COLUMNCLICK -108

#define LVN_COLUMNDROPDOWN -164

#define LVN_COLUMNOVERFLOWCLICK -166

#define LVN_DELETEALLITEMS -104

#define LVN_DELETEITEM -103

#define LVN_ENDLABELEDIT -106

#define LVN_ENDLABELEDITA -106

#define LVN_ENDLABELEDITW -176

#define LVN_ENDSCROLL -181

#define LVN_FIRST -100

#define LVN_GETDISPINFO -150

#define LVN_GETDISPINFOA -150

#define LVN_GETDISPINFOW -177

#define LVN_GETEMPTYMARKUP -187

#define LVN_GETINFOTIP -157

#define LVN_GETINFOTIPA -157

#define LVN_GETINFOTIPW -158

#define LVN_HOTTRACK -121

#define LVN_INCREMENTALSEARCH -162

#define LVN_INCREMENTALSEARCHA -162

#define LVN_INCREMENTALSEARCHW -163

#define LVN_INSERTITEM -102

#define LVN_ITEMACTIVATE -114

#define LVN_ITEMCHANGED -101

#define LVN_ITEMCHANGING -100

#define LVN_KEYDOWN -155

#define LVN_LAST -199

#define LVN_LINKCLICK -184

#define LVN_MARQUEEBEGIN -156

#define LVN_ODCACHEHINT -113

#define LVN_ODFINDITEM -152

#define LVN_ODFINDITEMA -152

#define LVN_ODFINDITEMW -179

#define LVN_ODSTATECHANGED -115

#define LVN_SETDISPINFO -151

#define LVN_SETDISPINFOA -151

#define LVN_SETDISPINFOW -178

#define LVNI_ABOVE 256

#define LVNI_ALL 0

#define LVNI_BELOW 512

#define LVNI_CUT 4

#define LVNI_DIRECTIONMASK 3840

#define LVNI_DROPHILITED 8

#define LVNI_FOCUSED 1

#define LVNI_PREVIOUS 32

#define LVNI_SAMEGROUPONLY 128

#define LVNI_SELECTED 2

#define LVNI_STATEMASK 15

#define LVNI_TOLEFT 1024

#define LVNI_TORIGHT 2048

#define LVNI_VISIBLEONLY 64

#define LVNI_VISIBLEORDER 16

#define LVNSCH_DEFAULT -1

#define LVNSCH_ERROR -2

#define LVNSCH_IGNORE -3

#define LVS_ALIGNLEFT 2048

#define LVS_ALIGNMASK 3072

#define LVS_ALIGNTOP 0

#define LVS_AUTOARRANGE 256

#define LVS_EDITLABELS 512

#define LVS_EX_AUTOAUTOARRANGE 16777216

#define LVS_EX_AUTOCHECKSELECT 134217728

#define LVS_EX_AUTOSIZECOLUMNS 268435456

#define LVS_EX_BORDERSELECT 32768

#define LVS_EX_CHECKBOXES 4

#define LVS_EX_COLUMNOVERFLOW 2147483648

#define LVS_EX_COLUMNSNAPPOINTS 1073741824

#define LVS_EX_DOUBLEBUFFER 65536

#define LVS_EX_FLATSB 256

#define LVS_EX_FULLROWSELECT 32

#define LVS_EX_GRIDLINES 1

#define LVS_EX_HEADERDRAGDROP 16

#define LVS_EX_HEADERINALLVIEWS 33554432

#define LVS_EX_HIDELABELS 131072

#define LVS_EX_INFOTIP 1024

#define LVS_EX_JUSTIFYCOLUMNS 2097152

#define LVS_EX_LABELTIP 16384

#define LVS_EX_MULTIWORKAREAS 8192

#define LVS_EX_ONECLICKACTIVATE 64

#define LVS_EX_REGIONAL 512

#define LVS_EX_SIMPLESELECT 1048576

#define LVS_EX_SINGLEROW 262144

#define LVS_EX_SNAPTOGRID 524288

#define LVS_EX_SUBITEMIMAGES 2

#define LVS_EX_TRACKSELECT 8

#define LVS_EX_TRANSPARENTBKGND 4194304

#define LVS_EX_TRANSPARENTSHADOWTEXT 8388608

#define LVS_EX_TWOCLICKACTIVATE 128

#define LVS_EX_UNDERLINECOLD 4096

#define LVS_EX_UNDERLINEHOT 2048

#define LVS_ICON 0

#define LVS_LIST 3

#define LVS_NOCOLUMNHEADER 16384

#define LVS_NOLABELWRAP 128

#define LVS_NOSCROLL 8192

#define LVS_NOSORTHEADER 32768

#define LVS_OWNERDATA 4096

#define LVS_OWNERDRAWFIXED 1024

#define LVS_REPORT 1

#define LVS_SHAREIMAGELISTS 64

#define LVS_SHOWSELALWAYS 8

#define LVS_SINGLESEL 4

#define LVS_SMALLICON 2

#define LVS_SORTASCENDING 16

#define LVS_SORTDESCENDING 32

#define LVS_TYPEMASK 3

#define LVS_TYPESTYLEMASK 64512

#define LVSCW_AUTOSIZE -1

#define LVSCW_AUTOSIZE_USEHEADER -2

#define LVSICF_NOINVALIDATEALL 1

#define LVSICF_NOSCROLL 2

#define LVSIL_GROUPHEADER 3

#define LVSIL_NORMAL 0

#define LVSIL_SMALL 1

#define LVSIL_STATE 2

#define LVTVIF_AUTOSIZE 0

#define LVTVIF_EXTENDED 4

#define LVTVIF_FIXEDHEIGHT 2

#define LVTVIF_FIXEDSIZE 3

#define LVTVIF_FIXEDWIDTH 1

#define LVTVIM_COLUMNS 2

#define LVTVIM_LABELMARGIN 4

#define LVTVIM_TILESIZE 1

#define LWS_IGNORERETURN 2

#define LWS_NOPREFIX 4

#define LWS_RIGHT 32

#define LWS_TRANSPARENT 1

#define LWS_USECUSTOMTEXT 16

#define LWS_USEVISUALSTYLE 8

#define MAX_LINKID_TEXT 48

#define MCHT_CALENDAR 131072

#define MCHT_CALENDARBK 131072

#define MCHT_CALENDARDATE 131073

#define MCHT_CALENDARDATEMAX 131077

#define MCHT_CALENDARDATEMIN 131076

#define MCHT_CALENDARDATENEXT 16908289

#define MCHT_CALENDARDATEPREV 33685505

#define MCHT_CALENDARDAY 131074

#define MCHT_CALENDARWEEKNUM 131075

#define MCHT_NEXT 16777216

#define MCHT_NOWHERE 0

#define MCHT_PREV 33554432

#define MCHT_TITLE 65536

#define MCHT_TITLEBK 65536

#define MCHT_TITLEBTNNEXT 16842755

#define MCHT_TITLEBTNPREV 33619971

#define MCHT_TITLEMONTH 65537

#define MCHT_TITLEYEAR 65538

#define MCHT_TODAYLINK 196608

#define MCM_FIRST 4096

#define MCM_GETCOLOR 4107

#define MCM_GETCURSEL 4097

#define MCM_GETFIRSTDAYOFWEEK 4112

#define MCM_GETMAXSELCOUNT 4099

#define MCM_GETMAXTODAYWIDTH 4117

#define MCM_GETMINREQRECT 4105

#define MCM_GETMONTHDELTA 4115

#define MCM_GETMONTHRANGE 4103

#define MCM_GETRANGE 4113

#define MCM_GETSELRANGE 4101

#define MCM_GETTODAY 4109

#define MCM_GETUNICODEFORMAT 8198

#define MCM_HITTEST 4110

#define MCM_SETCOLOR 4106

#define MCM_SETCURSEL 4098

#define MCM_SETDAYSTATE 4104

#define MCM_SETFIRSTDAYOFWEEK 4111

#define MCM_SETMAXSELCOUNT 4100

#define MCM_SETMONTHDELTA 4116

#define MCM_SETRANGE 4114

#define MCM_SETSELRANGE 4102

#define MCM_SETTODAY 4108

#define MCM_SETUNICODEFORMAT 8197

#define MCN_FIRST -746

#define MCN_GETDAYSTATE -747

#define MCN_LAST -752

#define MCN_SELCHANGE -749

#define MCN_SELECT -746

#define MCN_VIEWCHANGE -750

#define MCS_DAYSTATE 1

#define MCS_MULTISELECT 2

#define MCS_NOTODAY 16

#define MCS_NOTODAYCIRCLE 8

#define MCS_WEEKNUMBERS 4

#define MCSC_BACKGROUND 0

#define MCSC_MONTHBK 4

#define MCSC_TEXT 1

#define MCSC_TITLEBK 2

#define MCSC_TITLETEXT 3

#define MCSC_TRAILINGTEXT 5

#define MINSYSCOMMAND 61440

#define MSGF_COMMCTRL_BEGINDRAG 16896

#define MSGF_COMMCTRL_DRAGSELECT 16898

#define MSGF_COMMCTRL_SIZEHEADER 16897

#define MSGF_COMMCTRL_TOOLBARCUST 16899

#define NFS_ALL 16

#define NFS_BUTTON 8

#define NFS_EDIT 1

#define NFS_LISTCOMBO 4

#define NFS_STATIC 2

#define NFS_USEFONTASSOC 32

#define NM_CHAR -18

#define NM_CLICK -2

#define NM_CUSTOMDRAW -12

#define NM_CUSTOMTEXT -24

#define NM_DBLCLK -3

#define NM_FIRST 0

#define NM_FONTCHANGED -23

#define NM_GETCUSTOMSPLITRECT -1247

#define NM_HOVER -13

#define NM_KEYDOWN -15

#define NM_KILLFOCUS -8

#define NM_LAST -99

#define NM_LDOWN -20

#define NM_NCHITTEST -14

#define NM_OUTOFMEMORY -1

#define NM_RCLICK -5

#define NM_RDBLCLK -6

#define NM_RDOWN -21

#define NM_RELEASEDCAPTURE -16

#define NM_RETURN -4

#define NM_SETCURSOR -17

#define NM_SETFOCUS -7

#define NM_THEMECHANGED -22

#define NM_TOOLTIPSCREATED -19

#define NM_TVSTATEIMAGECHANGING -24

#define ODT_HEADER 100

#define ODT_LISTVIEW 102

#define ODT_TAB 101

#define PBM_DELTAPOS 1027

#define PBM_GETBARCOLOR 1039

#define PBM_GETBKCOLOR 1038

#define PBM_GETPOS 1032

#define PBM_GETRANGE 1031

#define PBM_GETSTATE 1041

#define PBM_GETSTEP 1037

#define PBM_SETBARCOLOR 1033

#define PBM_SETBKCOLOR 8193

#define PBM_SETMARQUEE 1034

#define PBM_SETPOS 1026

#define PBM_SETRANGE 1025

#define PBM_SETRANGE32 1030

#define PBM_SETSTATE 1040

#define PBM_SETSTEP 1028

#define PBM_STEPIT 1029

#define PBS_MARQUEE 8

#define PBS_SMOOTH 1

#define PBS_SMOOTHREVERSE 16

#define PBS_VERTICAL 4

#define PBST_ERROR 2

#define PBST_NORMAL 1

#define PBST_PAUSED 3

#define PGB_BOTTOMORRIGHT 1

#define PGB_TOPORLEFT 0

#define PGF_CALCHEIGHT 2

#define PGF_CALCWIDTH 1

#define PGF_DEPRESSED 4

#define PGF_GRAYED 2

#define PGF_HOT 8

#define PGF_INVISIBLE 0

#define PGF_NORMAL 1

#define PGF_SCROLLDOWN 2

#define PGF_SCROLLLEFT 4

#define PGF_SCROLLRIGHT 8

#define PGF_SCROLLUP 1

#define PGK_CONTROL 2

#define PGK_MENU 4

#define PGK_SHIFT 1

#define PGM_FIRST 5120

#define PGM_FORWARDMOUSE 5123

#define PGM_GETBKCOLOR 5125

#define PGM_GETBORDER 5127

#define PGM_GETBUTTONSIZE 5131

#define PGM_GETBUTTONSTATE 5132

#define PGM_GETDROPTARGET 8196

#define PGM_GETPOS 5129

#define PGM_RECALCSIZE 5122

#define PGM_SETBKCOLOR 5124

#define PGM_SETBORDER 5126

#define PGM_SETBUTTONSIZE 5130

#define PGM_SETCHILD 5121

#define PGM_SETPOS 5128

#define PGN_CALCSIZE -902

#define PGN_FIRST -900

#define PGN_HOTITEMCHANGE -903

#define PGN_LAST -950

#define PGN_SCROLL -901

#define PGS_AUTOSCROLL 2

#define PGS_DRAGNDROP 4

#define PGS_HORZ 1

#define PGS_VERT 0

#define RB_BEGINDRAG 1048

#define RB_DELETEBAND 1026

#define RB_DRAGMOVE 1050

#define RB_ENDDRAG 1049

#define RB_GETBANDBORDERS 1058

#define RB_GETBANDCOUNT 1036

#define RB_GETBANDINFO 1053

#define RB_GETBANDINFOA 1053

#define RB_GETBANDINFOW 1052

#define RB_GETBANDMARGINS 1064

#define RB_GETBARHEIGHT 1051

#define RB_GETBARINFO 1027

#define RB_GETBKCOLOR 1044

#define RB_GETCOLORSCHEME 8195

#define RB_GETDROPTARGET 8196

#define RB_GETEXTENDEDSTYLE 1066

#define RB_GETPALETTE 1062

#define RB_GETRECT 1033

#define RB_GETROWCOUNT 1037

#define RB_GETROWHEIGHT 1038

#define RB_GETTEXTCOLOR 1046

#define RB_GETTOOLTIPS 1041

#define RB_GETUNICODEFORMAT 8198

#define RB_HITTEST 1032

#define RB_IDTOINDEX 1040

#define RB_INSERTBAND 1025

#define RB_INSERTBANDA 1025

#define RB_INSERTBANDW 1034

#define RB_MAXIMIZEBAND 1055

#define RB_MINIMIZEBAND 1054

#define RB_MOVEBAND 1063

#define RB_PUSHCHEVRON 1067

#define RB_SETBANDINFO 1030

#define RB_SETBANDINFOA 1030

#define RB_SETBANDINFOW 1035

#define RB_SETBANDWIDTH 1068

#define RB_SETBARINFO 1028

#define RB_SETBKCOLOR 1043

#define RB_SETCOLORSCHEME 8194

#define RB_SETEXTENDEDSTYLE 1065

#define RB_SETPALETTE 1061

#define RB_SETPARENT 1031

#define RB_SETTEXTCOLOR 1045

#define RB_SETTOOLTIPS 1042

#define RB_SETUNICODEFORMAT 8197

#define RB_SETWINDOWTHEME 8203

#define RB_SHOWBAND 1059

#define RB_SIZETORECT 1047

#define RBAB_ADDBAND 2

#define RBAB_AUTOSIZE 1

#define RBBIM_BACKGROUND 128

#define RBBIM_CHEVRONLOCATION 4096

#define RBBIM_CHEVRONSTATE 8192

#define RBBIM_CHILD 16

#define RBBIM_CHILDSIZE 32

#define RBBIM_COLORS 2

#define RBBIM_HEADERSIZE 2048

#define RBBIM_ID 256

#define RBBIM_IDEALSIZE 512

#define RBBIM_IMAGE 8

#define RBBIM_LPARAM 1024

#define RBBIM_SIZE 64

#define RBBIM_STYLE 1

#define RBBIM_TEXT 4

#define RBBS_BREAK 1

#define RBBS_CHILDEDGE 4

#define RBBS_FIXEDBMP 32

#define RBBS_FIXEDSIZE 2

#define RBBS_GRIPPERALWAYS 128

#define RBBS_HIDDEN 8

#define RBBS_HIDETITLE 1024

#define RBBS_NOGRIPPER 256

#define RBBS_NOVERT 16

#define RBBS_TOPALIGN 2048

#define RBBS_USECHEVRON 512

#define RBBS_VARIABLEHEIGHT 64

#define RBHT_CAPTION 2

#define RBHT_CHEVRON 8

#define RBHT_CLIENT 3

#define RBHT_GRABBER 4

#define RBHT_NOWHERE 1

#define RBHT_SPLITTER 16

#define RBIM_IMAGELIST 1

#define RBN_AUTOBREAK -853

#define RBN_AUTOSIZE -834

#define RBN_BEGINDRAG -835

#define RBN_CHEVRONPUSHED -841

#define RBN_CHILDSIZE -839

#define RBN_DELETEDBAND -838

#define RBN_DELETINGBAND -837

#define RBN_ENDDRAG -836

#define RBN_FIRST -831

#define RBN_GETOBJECT -832

#define RBN_HEIGHTCHANGE -831

#define RBN_LAST -859

#define RBN_LAYOUTCHANGED -833

#define RBN_MINMAX -852

#define RBN_SPLITTERDRAG -842

#define RBNM_ID 1

#define RBNM_LPARAM 4

#define RBNM_STYLE 2

#define RBS_AUTOSIZE 8192

#define RBS_BANDBORDERS 1024

#define RBS_DBLCLKTOGGLE 32768

#define RBS_FIXEDORDER 2048

#define RBS_REGISTERDROP 4096

#define RBS_TOOLTIPS 256

#define RBS_VARHEIGHT 512

#define RBS_VERTICALGRIPPER 16384

#define RBSTR_CHANGERECT 1

#define SB_GETBORDERS 1031

#define SB_GETICON 1044

#define SB_GETPARTS 1030

#define SB_GETRECT 1034

#define SB_GETTEXT 1026

#define SB_GETTEXTA 1026

#define SB_GETTEXTLENGTH 1027

#define SB_GETTEXTLENGTHA 1027

#define SB_GETTEXTLENGTHW 1036

#define SB_GETTEXTW 1037

#define SB_GETTIPTEXT 1042

#define SB_GETTIPTEXTA 1042

#define SB_GETTIPTEXTW 1043

#define SB_GETUNICODEFORMAT 8198

#define SB_ISSIMPLE 1038

#define SB_SETBKCOLOR 8193

#define SB_SETICON 1039

#define SB_SETMINHEIGHT 1032

#define SB_SETPARTS 1028

#define SB_SETTEXT 1025

#define SB_SETTEXTA 1025

#define SB_SETTEXTW 1035

#define SB_SETTIPTEXT 1040

#define SB_SETTIPTEXTA 1040

#define SB_SETTIPTEXTW 1041

#define SB_SETUNICODEFORMAT 8197

#define SB_SIMPLE 1033

#define SB_SIMPLEID 255

#define SBARS_SIZEGRIP 256

#define SBARS_TOOLTIPS 2048

#define SBN_FIRST -880

#define SBN_LAST -899

#define SBN_SIMPLEMODECHANGE -880

#define SBT_NOBORDERS 256

#define SBT_NOTABPARSING 2048

#define SBT_OWNERDRAW 4096

#define SBT_POPOUT 512

#define SBT_RTLREADING 1024

#define SBT_TOOLTIPS 2048

#define STD_COPY 1

#define STD_CUT 0

#define STD_DELETE 5

#define STD_FILENEW 6

#define STD_FILEOPEN 7

#define STD_FILESAVE 8

#define STD_FIND 12

#define STD_HELP 11

#define STD_PASTE 2

#define STD_PRINT 14

#define STD_PRINTPRE 9

#define STD_PROPERTIES 10

#define STD_REDOW 4

#define STD_REPLACE 13

#define STD_UNDO 3

#define TB_ADDBITMAP 1043

#define TB_ADDBUTTONS 1044

#define TB_ADDBUTTONSA 1044

#define TB_ADDBUTTONSW 1092

#define TB_ADDSTRING 1052

#define TB_ADDSTRINGA 1052

#define TB_ADDSTRINGW 1101

#define TB_AUTOSIZE 1057

#define TB_BOTTOM 7

#define TB_BUTTONCOUNT 1048

#define TB_BUTTONSTRUCTSIZE 1054

#define TB_CHANGEBITMAP 1067

#define TB_CHECKBUTTON 1026

#define TB_COMMANDTOINDEX 1049

#define TB_CUSTOMIZE 1051

#define TB_DELETEBUTTON 1046

#define TB_ENABLEBUTTON 1025

#define TB_ENDTRACK 8

#define TB_GETANCHORHIGHLIGHT 1098

#define TB_GETBITMAP 1068

#define TB_GETBITMAPFLAGS 1065

#define TB_GETBUTTON 1047

#define TB_GETBUTTONINFO 1089

#define TB_GETBUTTONINFOA 1089

#define TB_GETBUTTONINFOW 1087

#define TB_GETBUTTONSIZE 1082

#define TB_GETBUTTONTEXT 1069

#define TB_GETBUTTONTEXTA 1069

#define TB_GETBUTTONTEXTW 1099

#define TB_GETCOLORSCHEME 8195

#define TB_GETDISABLEDIMAGELIST 1079

#define TB_GETEXTENDEDSTYLE 1109

#define TB_GETHOTIMAGELIST 1077

#define TB_GETHOTITEM 1095

#define TB_GETIDEALSIZE 1123

#define TB_GETIMAGELIST 1073

#define TB_GETIMAGELISTCOUNT 1122

#define TB_GETINSERTMARK 1103

#define TB_GETINSERTMARKCOLOR 1113

#define TB_GETITEMDROPDOWNRECT 1127

#define TB_GETITEMRECT 1053

#define TB_GETMAXSIZE 1107

#define TB_GETMETRICS 1125

#define TB_GETOBJECT 1086

#define TB_GETPADDING 1110

#define TB_GETPRESSEDIMAGELIST 1129

#define TB_GETRECT 1075

#define TB_GETROWS 1064

#define TB_GETSTATE 1042

#define TB_GETSTRING 1116

#define TB_GETSTRINGA 1116

#define TB_GETSTRINGW 1115

#define TB_GETSTYLE 1081

#define TB_GETTEXTROWS 1085

#define TB_GETTOOLTIPS 1059

#define TB_GETUNICODEFORMAT 8198

#define TB_HIDEBUTTON 1028

#define TB_HITTEST 1093

#define TB_INDETERMINATE 1029

#define TB_INSERTBUTTON 1045

#define TB_INSERTBUTTONA 1045

#define TB_INSERTBUTTONW 1091

#define TB_INSERTMARKHITTEST 1105

#define TB_ISBUTTONCHECKED 1034

#define TB_ISBUTTONENABLED 1033

#define TB_ISBUTTONHIDDEN 1036

#define TB_ISBUTTONHIGHLIGHTED 1038

#define TB_ISBUTTONINDETERMINATE 1037

#define TB_ISBUTTONPRESSED 1035

#define TB_LINEDOWN 1

#define TB_LINEUP 0

#define TB_LOADIMAGES 1074

#define TB_MAPACCELERATOR 1102

#define TB_MAPACCELERATORA 1102

#define TB_MAPACCELERATORW 1114

#define TB_MARKBUTTON 1030

#define TB_MOVEBUTTON 1106

#define TB_PAGEDOWN 3

#define TB_PAGEUP 2

#define TB_PRESSBUTTON 1027

#define TB_REPLACEBITMAP 1070

#define TB_SAVERESTORE 1050

#define TB_SAVERESTOREA 1050

#define TB_SAVERESTOREW 1100

#define TB_SETANCHORHIGHLIGHT 1097

#define TB_SETBITMAPSIZE 1056

#define TB_SETBUTTONINFO 1090

#define TB_SETBUTTONINFOA 1090

#define TB_SETBUTTONINFOW 1088

#define TB_SETBUTTONSIZE 1055

#define TB_SETBUTTONWIDTH 1083

#define TB_SETCMDID 1066

#define TB_SETCOLORSCHEME 8194

#define TB_SETDISABLEDIMAGELIST 1078

#define TB_SETDRAWTEXTFLAGS 1094

#define TB_SETEXTENDEDSTYLE 1108

#define TB_SETHOTIMAGELIST 1076

#define TB_SETHOTITEM 1096

#define TB_SETHOTITEM2 1118

#define TB_SETIMAGELIST 1072

#define TB_SETINDENT 1071

#define TB_SETINSERTMARK 1104

#define TB_SETINSERTMARKCOLOR 1112

#define TB_SETLISTGAP 1120

#define TB_SETMAXTEXTROWS 1084

#define TB_SETMETRICS 1126

#define TB_SETPADDING 1111

#define TB_SETPARENT 1061

#define TB_SETPRESSEDIMAGELIST 1128

#define TB_SETROWS 1063

#define TB_SETSTATE 1041

#define TB_SETSTYLE 1080

#define TB_SETTOOLTIPS 1060

#define TB_SETUNICODEFORMAT 8197

#define TB_SETWINDOWTHEME 8203

#define TB_THUMBPOSITION 4

#define TB_THUMBTRACK 5

#define TB_TOP 6

#define TBBF_LARGE 1

#define TBCD_CHANNEL 3

#define TBCD_THUMB 2

#define TBCD_TICS 1

#define TBCDRF_BLENDICON 2097152

#define TBCDRF_HILITEHOTTRACK 131072

#define TBCDRF_NOBACKGROUND 4194304

#define TBCDRF_NOEDGES 65536

#define TBCDRF_NOETCHEDEFFECT 1048576

#define TBCDRF_NOMARK 524288

#define TBCDRF_NOOFFSET 262144

#define TBCDRF_USECDCOLORS 8388608

#define TBDDRET_DEFAULT 0

#define TBDDRET_NODEFAULT 1

#define TBDDRET_TREATPRESSED 2

#define TBIF_BYINDEX 2147483648

#define TBIF_COMMAND 32

#define TBIF_IMAGE 1

#define TBIF_LPARAM 16

#define TBIF_SIZE 64

#define TBIF_STATE 4

#define TBIF_STYLE 8

#define TBIF_TEXT 2

#define TBIMHT_AFTER 1

#define TBIMHT_BACKGROUND 2

#define TBM_CLEARSEL 1043

#define TBM_CLEARTICS 1033

#define TBM_GETBUDDY 1057

#define TBM_GETCHANNELRECT 1050

#define TBM_GETLINESIZE 1048

#define TBM_GETNUMTICS 1040

#define TBM_GETPAGESIZE 1046

#define TBM_GETPOS 1024

#define TBM_GETPTICS 1038

#define TBM_GETRANGEMAX 1026

#define TBM_GETRANGEMIN 1025

#define TBM_GETSELEND 1042

#define TBM_GETSELSTART 1041

#define TBM_GETTHUMBLENGTH 1052

#define TBM_GETTHUMBRECT 1049

#define TBM_GETTIC 1027

#define TBM_GETTICPOS 1039

#define TBM_GETTOOLTIPS 1054

#define TBM_GETUNICODEFORMAT 8198

#define TBM_SETBUDDY 1056

#define TBM_SETLINESIZE 1047

#define TBM_SETPAGESIZE 1045

#define TBM_SETPOS 1029

#define TBM_SETPOSNOTIFY 1058

#define TBM_SETRANGE 1030

#define TBM_SETRANGEMAX 1032

#define TBM_SETRANGEMIN 1031

#define TBM_SETSEL 1034

#define TBM_SETSELEND 1036

#define TBM_SETSELSTART 1035

#define TBM_SETTHUMBLENGTH 1051

#define TBM_SETTIC 1028

#define TBM_SETTICFREQ 1044

#define TBM_SETTIPSIDE 1055

#define TBM_SETTOOLTIPS 1053

#define TBM_SETUNICODEFORMAT 8197

#define TBMF_BARPAD 2

#define TBMF_BUTTONSPACING 4

#define TBMF_PAD 1

#define TBN_BEGINADJUST -703

#define TBN_BEGINDRAG -701

#define TBN_CUSTHELP -709

#define TBN_DELETINGBUTTON -715

#define TBN_DRAGOUT -714

#define TBN_DRAGOVER -727

#define TBN_DROPDOWN -710

#define TBN_DUPACCELERATOR -725

#define TBN_ENDADJUST -704

#define TBN_ENDDRAG -702

#define TBN_FIRST -700

#define TBN_GETBUTTONINFO -700

#define TBN_GETBUTTONINFOA -700

#define TBN_GETBUTTONINFOW -720

#define TBN_GETDISPINFO -716

#define TBN_GETDISPINFOA -716

#define TBN_GETDISPINFOW -717

#define TBN_GETINFOTIP -718

#define TBN_GETINFOTIPA -718

#define TBN_GETINFOTIPW -719

#define TBN_GETOBJECT -712

#define TBN_HOTITEMCHANGE -713

#define TBN_INITCUSTOMIZE -723

#define TBN_LAST -720

#define TBN_MAPACCELERATOR -728

#define TBN_QUERYDELETE -707

#define TBN_QUERYINSERT -706

#define TBN_RESET -705

#define TBN_RESTORE -721

#define TBN_SAVE -722

#define TBN_TOOLBARCHANGE -708

#define TBN_WRAPACCELERATOR -726

#define TBN_WRAPHOTITEM -724

#define TBNF_DI_SETITEM 268435456

#define TBNF_IMAGE 1

#define TBNF_TEXT 2

#define TBNRF_ENDCUSTOMIZE 2

#define TBNRF_HIDEHELP 1

#define TBS_AUTOTICKS 1

#define TBS_BOTH 8

#define TBS_BOTTOM 0

#define TBS_DOWNISLEFT 1024

#define TBS_ENABLESELRANGE 32

#define TBS_FIXEDLENGTH 64

#define TBS_HORZ 0

#define TBS_LEFT 4

#define TBS_NOTHUMB 128

#define TBS_NOTICKS 16

#define TBS_NOTIFYBEFOREMOVE 2048

#define TBS_REVERSED 512

#define TBS_RIGHT 0

#define TBS_TOOLTIPS 256

#define TBS_TOP 4

#define TBS_VERT 2

#define TBSTATE_CHECKED 1

#define TBSTATE_ELLIPSES 64

#define TBSTATE_ENABLED 4

#define TBSTATE_HIDDEN 8

#define TBSTATE_INDETERMINATE 16

#define TBSTATE_MARKED 128

#define TBSTATE_PRESSED 2

#define TBSTATE_WRAP 32

#define TBSTYLE_ALTDRAG 1024

#define TBSTYLE_AUTOSIZE 16

#define TBSTYLE_BUTTON 0

#define TBSTYLE_CHECK 2

#define TBSTYLE_CHECKGROUP 6

#define TBSTYLE_CUSTOMERASE 8192

#define TBSTYLE_DROPDOWN 8

#define TBSTYLE_EX_DOUBLEBUFFER 128

#define TBSTYLE_EX_DRAWDDARROWS 1

#define TBSTYLE_EX_HIDECLIPPEDBUTTONS 16

#define TBSTYLE_EX_MIXEDBUTTONS 8

#define TBSTYLE_FLAT 2048

#define TBSTYLE_GROUP 4

#define TBSTYLE_LIST 4096

#define TBSTYLE_NOPREFIX 32

#define TBSTYLE_REGISTERDROP 16384

#define TBSTYLE_SEP 1

#define TBSTYLE_TOOLTIPS 256

#define TBSTYLE_TRANSPARENT 32768

#define TBSTYLE_WRAPABLE 512

#define TBTS_BOTTOM 2

#define TBTS_LEFT 1

#define TBTS_RIGHT 3

#define TBTS_TOP 0

#define TCHT_NOWHERE 1

#define TCHT_ONITEM 6

#define TCHT_ONITEMICON 2

#define TCHT_ONITEMLABEL 4

#define TCIF_IMAGE 2

#define TCIF_PARAM 8

#define TCIF_RTLREADING 4

#define TCIF_STATE 16

#define TCIF_TEXT 1

#define TCIS_BUTTONPRESSED 1

#define TCIS_HIGHLIGHTED 2

#define TCM_ADJUSTRECT 4904

#define TCM_DELETEALLITEMS 4873

#define TCM_DELETEITEM 4872

#define TCM_DESELECTALL 4914

#define TCM_FIRST 4864

#define TCM_GETCURFOCUS 4911

#define TCM_GETCURSEL 4875

#define TCM_GETEXTENDEDSTYLE 4917

#define TCM_GETIMAGELIST 4866

#define TCM_GETITEM 4869

#define TCM_GETITEMA 4869

#define TCM_GETITEMCOUNT 4868

#define TCM_GETITEMRECT 4874

#define TCM_GETITEMW 4924

#define TCM_GETROWCOUNT 4908

#define TCM_GETTOOLTIPS 4909

#define TCM_GETUNICODEFORMAT 8198

#define TCM_HIGHLIGHTITEM 4915

#define TCM_HITTEST 4877

#define TCM_INSERTITEM 4871

#define TCM_INSERTITEMA 4871

#define TCM_INSERTITEMW 4926

#define TCM_REMOVEIMAGE 4906

#define TCM_SETCURFOCUS 4912

#define TCM_SETCURSEL 4876

#define TCM_SETEXTENDEDSTYLE 4916

#define TCM_SETIMAGELIST 4867

#define TCM_SETITEM 4870

#define TCM_SETITEMA 4870

#define TCM_SETITEMEXTRA 4878

#define TCM_SETITEMSIZE 4905

#define TCM_SETITEMW 4925

#define TCM_SETMINTABWIDTH 4913

#define TCM_SETPADDING 4907

#define TCM_SETTOOLTIPS 4910

#define TCM_SETUNICODEFORMAT 8197

#define TCN_FIRST -550

#define TCN_FOCUSCHANGE -554

#define TCN_GETOBJECT -553

#define TCN_KEYDOWN -550

#define TCN_LAST -580

#define TCN_SELCHANGE -551

#define TCN_SELCHANGING -552

#define TCS_BOTTOM 2

#define TCS_BUTTONS 256

#define TCS_EX_FLATSEPARATORS 1

#define TCS_EX_REGISTERDROP 2

#define TCS_FIXEDWIDTH 1024

#define TCS_FLATBUTTONS 8

#define TCS_FOCUSNEVER 32768

#define TCS_FOCUSONBUTTONDOWN 4096

#define TCS_FORCEICONLEFT 16

#define TCS_FORCELABELLEFT 32

#define TCS_HOTTRACK 64

#define TCS_MULTILINE 512

#define TCS_MULTISELECT 4

#define TCS_OWNERDRAWFIXED 8192

#define TCS_RAGGEDRIGHT 2048

#define TCS_RIGHT 2

#define TCS_RIGHTJUSTIFY 0

#define TCS_SCROLLOPPOSITE 1

#define TCS_SINGLELINE 0

#define TCS_TABS 0

#define TCS_TOOLTIPS 16384

#define TCS_VERTICAL 128

#define TRBN_FIRST -1501

#define TRBN_LAST -1519

#define TRBN_THUMBPOSCHANGING -1502

#define TTDT_AUTOMATIC 0

#define TTDT_AUTOPOP 2

#define TTDT_INITIAL 3

#define TTDT_RESHOW 1

#define TTF_ABSOLUTE 128

#define TTF_CENTERTIP 2

#define TTF_DI_SETITEM 32768

#define TTF_IDISHWND 1

#define TTF_PARSELINKS 4096

#define TTF_RTLREADING 4

#define TTF_SUBCLASS 16

#define TTF_TRACK 32

#define TTF_TRANSPARENT 256

#define TTI_ERROR 3

#define TTI_ERROR_LARGE 6

#define TTI_INFO 1

#define TTI_INFO_LARGE 4

#define TTI_NONE 0

#define TTI_WARNING 2

#define TTI_WARNING_LARGE 5

#define TTM_ACTIVATE 1025

#define TTM_ADDTOOL 1028

#define TTM_ADDTOOLA 1028

#define TTM_ADDTOOLW 1074

#define TTM_ADJUSTRECT 1055

#define TTM_DELTOOL 1029

#define TTM_DELTOOLA 1029

#define TTM_DELTOOLW 1075

#define TTM_ENUMTOOLS 1038

#define TTM_ENUMTOOLSA 1038

#define TTM_ENUMTOOLSW 1082

#define TTM_GETBUBBLESIZE 1054

#define TTM_GETCURRENTTOOL 1039

#define TTM_GETCURRENTTOOLA 1039

#define TTM_GETCURRENTTOOLW 1083

#define TTM_GETDELAYTIME 1045

#define TTM_GETMARGIN 1051

#define TTM_GETMAXTIPWIDTH 1049

#define TTM_GETTEXT 1035

#define TTM_GETTEXTA 1035

#define TTM_GETTEXTW 1080

#define TTM_GETTIPBKCOLOR 1046

#define TTM_GETTIPTEXTCOLOR 1047

#define TTM_GETTITLE 1059

#define TTM_GETTOOLCOUNT 1037

#define TTM_GETTOOLINFO 1032

#define TTM_GETTOOLINFOA 1032

#define TTM_GETTOOLINFOW 1077

#define TTM_HITTEST 1034

#define TTM_HITTESTA 1034

#define TTM_HITTESTW 1079

#define TTM_NEWTOOLRECT 1030

#define TTM_NEWTOOLRECTA 1030

#define TTM_NEWTOOLRECTW 1076

#define TTM_POP 1052

#define TTM_POPUP 1058

#define TTM_RELAYEVENT 1031

#define TTM_SETDELAYTIME 1027

#define TTM_SETMARGIN 1050

#define TTM_SETMAXTIPWIDTH 1048

#define TTM_SETTIPBKCOLOR 1043

#define TTM_SETTIPTEXTCOLOR 1044

#define TTM_SETTITLE 1056

#define TTM_SETTITLEA 1056

#define TTM_SETTITLEW 1057

#define TTM_SETTOOLINFO 1033

#define TTM_SETTOOLINFOA 1033

#define TTM_SETTOOLINFOW 1078

#define TTM_SETWINDOWTHEME 8203

#define TTM_TRACKACTIVATE 1041

#define TTM_TRACKPOSITION 1042

#define TTM_UPDATE 1053

#define TTM_UPDATETIPTEXT 1036

#define TTM_UPDATETIPTEXTA 1036

#define TTM_UPDATETIPTEXTW 1081

#define TTM_WINDOWFROMPOINT 1040

#define TTN_FIRST -520

#define TTN_GETDISPINFO -520

#define TTN_GETDISPINFOA -520

#define TTN_GETDISPINFOW -530

#define TTN_LAST -549

#define TTN_LINKCLICK -523

#define TTN_NEEDTEXT -520

#define TTN_NEEDTEXTA -520

#define TTN_NEEDTEXTW -530

#define TTN_POP -522

#define TTN_SHOW -521

#define TTS_ALWAYSTIP 1

#define TTS_BALLOON 64

#define TTS_CLOSE 128

#define TTS_NOANIMATE 16

#define TTS_NOFADE 32

#define TTS_NOPREFIX 2

#define TTS_USEVISUALSTYLE 256

#define TV_FIRST 4352

#define TVC_BYKEYBOARD 2

#define TVC_BYMOUSE 1

#define TVC_UNKNOWN 0

#define TVCDRF_NOIMAGES 65536

#define TVE_COLLAPSE 1

#define TVE_COLLAPSERESET 32768

#define TVE_EXPAND 2

#define TVE_EXPANDPARTIAL 16384

#define TVE_TOGGLE 3

#define TVGN_CARET 9

#define TVGN_CHILD 4

#define TVGN_DROPHILITE 8

#define TVGN_FIRSTVISIBLE 5

#define TVGN_LASTVISIBLE 10

#define TVGN_NEXT 1

#define TVGN_NEXTSELECTED 11

#define TVGN_NEXTVISIBLE 6

#define TVGN_PARENT 3

#define TVGN_PREVIOUS 2

#define TVGN_PREVIOUSVISIBLE 7

#define TVGN_ROOT 0

#define TVHT_ABOVE 256

#define TVHT_BELOW 512

#define TVHT_NOWHERE 1

#define TVHT_ONITEM 70

#define TVHT_ONITEMBUTTON 16

#define TVHT_ONITEMICON 2

#define TVHT_ONITEMINDENT 8

#define TVHT_ONITEMLABEL 4

#define TVHT_ONITEMRIGHT 32

#define TVHT_ONITEMSTATEICON 64

#define TVHT_TOLEFT 2048

#define TVHT_TORIGHT 1024

#define TVI_FIRST -65535

#define TVI_LAST -65534

#define TVI_ROOT -65536

#define TVI_SORT -65533

#define TVIF_CHILDREN 64

#define TVIF_DI_SETITEM 4096

#define TVIF_EXPANDEDIMAGE 512

#define TVIF_HANDLE 16

#define TVIF_IMAGE 2

#define TVIF_INTEGRAL 128

#define TVIF_PARAM 4

#define TVIF_SELECTEDIMAGE 32

#define TVIF_STATE 8

#define TVIF_STATEEX 256

#define TVIF_TEXT 1

#define TVIS_BOLD 16

#define TVIS_CUT 4

#define TVIS_DROPHILITED 8

#define TVIS_EX_ALL 2

#define TVIS_EX_DISABLED 2

#define TVIS_EX_FLAT 1

#define TVIS_EXPANDED 32

#define TVIS_EXPANDEDONCE 64

#define TVIS_EXPANDPARTIAL 128

#define TVIS_OVERLAYMASK 3840

#define TVIS_SELECTED 2

#define TVIS_STATEIMAGEMASK 61440

#define TVIS_USERMASK 61440

#define TVM_CREATEDRAGIMAGE 4370

#define TVM_DELETEITEM 4353

#define TVM_EDITLABEL 4366

#define TVM_EDITLABELA 4366

#define TVM_EDITLABELW 4417

#define TVM_ENDEDITLABELNOW 4374

#define TVM_ENSUREVISIBLE 4372

#define TVM_EXPAND 4354

#define TVM_GETBKCOLOR 4383

#define TVM_GETCOUNT 4357

#define TVM_GETEDITCONTROL 4367

#define TVM_GETEXTENDEDSTYLE 4397

#define TVM_GETIMAGELIST 4360

#define TVM_GETINDENT 4358

#define TVM_GETINSERTMARKCOLOR 4390

#define TVM_GETISEARCHSTRING 4375

#define TVM_GETISEARCHSTRINGA 4375

#define TVM_GETISEARCHSTRINGW 4416

#define TVM_GETITEM 4364

#define TVM_GETITEMA 4364

#define TVM_GETITEMHEIGHT 4380

#define TVM_GETITEMPARTRECT 4424

#define TVM_GETITEMRECT 4356

#define TVM_GETITEMSTATE 4391

#define TVM_GETITEMW 4414

#define TVM_GETLINECOLOR 4393

#define TVM_GETNEXTITEM 4362

#define TVM_GETSCROLLTIME 4386

#define TVM_GETSELECTEDCOUNT 4422

#define TVM_GETTEXTCOLOR 4384

#define TVM_GETTOOLTIPS 4377

#define TVM_GETUNICODEFORMAT 8198

#define TVM_GETVISIBLECOUNT 4368

#define TVM_HITTEST 4369

#define TVM_INSERTITEM 4352

#define TVM_INSERTITEMA 4352

#define TVM_INSERTITEMW 4402

#define TVM_MAPACCIDTOHTREEITEM 4394

#define TVM_MAPHTREEITEMTOACCID 4395

#define TVM_SELECTITEM 4363

#define TVM_SETAUTOSCROLLINFO 4411

#define TVM_SETBKCOLOR 4381

#define TVM_SETEXTENDEDSTYLE 4396

#define TVM_SETIMAGELIST 4361

#define TVM_SETINDENT 4359

#define TVM_SETINSERTMARK 4378

#define TVM_SETINSERTMARKCOLOR 4389

#define TVM_SETITEM 4365

#define TVM_SETITEMA 4365

#define TVM_SETITEMHEIGHT 4379

#define TVM_SETITEMW 4415

#define TVM_SETLINECOLOR 4392

#define TVM_SETSCROLLTIME 4385

#define TVM_SETTEXTCOLOR 4382

#define TVM_SETTOOLTIPS 4376

#define TVM_SETUNICODEFORMAT 8197

#define TVM_SHOWINFOTIP 4423

#define TVM_SORTCHILDREN 4371

#define TVM_SORTCHILDRENCB 4373

#define TVN_ASYNCDRAW -420

#define TVN_BEGINDRAG -407

#define TVN_BEGINDRAGA -407

#define TVN_BEGINDRAGW -456

#define TVN_BEGINLABELEDIT -410

#define TVN_BEGINLABELEDITA -410

#define TVN_BEGINLABELEDITW -459

#define TVN_BEGINRDRAG -408

#define TVN_BEGINRDRAGA -408

#define TVN_BEGINRDRAGW -457

#define TVN_DELETEITEM -409

#define TVN_DELETEITEMA -409

#define TVN_DELETEITEMW -458

#define TVN_ENDLABELEDIT -411

#define TVN_ENDLABELEDITA -411

#define TVN_ENDLABELEDITW -460

#define TVN_FIRST -400

#define TVN_GETDISPINFO -403

#define TVN_GETDISPINFOA -403

#define TVN_GETDISPINFOW -452

#define TVN_GETINFOTIP -413

#define TVN_GETINFOTIPA -413

#define TVN_GETINFOTIPW -414

#define TVN_ITEMCHANGED -418

#define TVN_ITEMCHANGEDA -418

#define TVN_ITEMCHANGEDW -419

#define TVN_ITEMCHANGING -416

#define TVN_ITEMCHANGINGA -416

#define TVN_ITEMCHANGINGW -417

#define TVN_ITEMEXPANDED -406

#define TVN_ITEMEXPANDEDA -406

#define TVN_ITEMEXPANDEDW -455

#define TVN_ITEMEXPANDING -405

#define TVN_ITEMEXPANDINGA -405

#define TVN_ITEMEXPANDINGW -454

#define TVN_KEYDOWN -412

#define TVN_LAST -499

#define TVN_SELCHANGED -402

#define TVN_SELCHANGEDA -402

#define TVN_SELCHANGEDW -451

#define TVN_SELCHANGING -401

#define TVN_SELCHANGINGA -401

#define TVN_SELCHANGINGW -450

#define TVN_SETDISPINFO -404

#define TVN_SETDISPINFOA -404

#define TVN_SETDISPINFOW -453

#define TVN_SINGLEEXPAND -415

#define TVNRET_DEFAULT 0

#define TVNRET_SKIPNEW 2

#define TVNRET_SKIPOLD 1

#define TVS_CHECKBOXES 256

#define TVS_DISABLEDRAGDROP 16

#define TVS_EDITLABELS 8

#define TVS_EX_AUTOHSCROLL 32

#define TVS_EX_DIMMEDCHECKBOXES 512

#define TVS_EX_DOUBLEBUFFER 4

#define TVS_EX_DRAWIMAGEASYNC 1024

#define TVS_EX_EXCLUSIONCHECKBOXES 256

#define TVS_EX_FADEINOUTEXPANDOS 64

#define TVS_EX_MULTISELECT 2

#define TVS_EX_NOINDENTSTATE 8

#define TVS_EX_PARTIALCHECKBOXES 128

#define TVS_EX_RICHTOOLTIP 16

#define TVS_FULLROWSELECT 4096

#define TVS_HASBUTTONS 1

#define TVS_HASLINES 2

#define TVS_INFOTIP 2048

#define TVS_LINESATROOT 4

#define TVS_NOHSCROLL 32768

#define TVS_NONEVENHEIGHT 16384

#define TVS_NOSCROLL 8192

#define TVS_NOTOOLTIPS 128

#define TVS_RTLREADING 64

#define TVS_SHOWSELALWAYS 32

#define TVS_SINGLEEXPAND 1024

#define TVS_TRACKSELECT 512

#define TVSI_NOSINGLEEXPAND 32768

#define TVSIL_NORMAL 0

#define TVSIL_STATE 2

#define UD_MAXVAL 32767

#define UD_MINVAL -32767

#define UDM_GETACCEL 1132

#define UDM_GETBASE 1134

#define UDM_GETBUDDY 1130

#define UDM_GETPOS 1128

#define UDM_GETPOS32 1138

#define UDM_GETRANGE 1126

#define UDM_GETRANGE32 1136

#define UDM_GETUNICODEFORMAT 8198

#define UDM_SETACCEL 1131

#define UDM_SETBASE 1133

#define UDM_SETBUDDY 1129

#define UDM_SETPOS 1127

#define UDM_SETPOS32 1137

#define UDM_SETRANGE 1125

#define UDM_SETRANGE32 1135

#define UDM_SETUNICODEFORMAT 8197

#define UDN_DELTAPOS -722

#define UDN_FIRST -721

#define UDN_LAST -729

#define UDS_ALIGNLEFT 8

#define UDS_ALIGNRIGHT 4

#define UDS_ARROWKEYS 32

#define UDS_AUTOBUDDY 16

#define UDS_HORZ 64

#define UDS_HOTTRACK 256

#define UDS_NOTHOUSANDS 128

#define UDS_SETBUDDYINT 2

#define UDS_WRAP 1

#define VIEW_DETAILS 3

#define VIEW_LARGEICONS 0

#define VIEW_LIST 2

#define VIEW_NETCONNECT 9

#define VIEW_NETDISCONNECT 10

#define VIEW_NEWFOLDER 11

#define VIEW_PARENTFOLDER 8

#define VIEW_SMALLICONS 1

#define VIEW_SORTDATE 6

#define VIEW_SORTNAME 4

#define VIEW_SORTSIZE 5

#define VIEW_SORTTYPE 7

#define VIEW_VIEWMENU 12

#define WMN_FIRST -1000

#define WMN_LAST -1200

#define WSB_PROP_CXHSCROLL 2

#define WSB_PROP_CXHTHUMB 16

#define WSB_PROP_CXVSCROLL 8

#define WSB_PROP_CYHSCROLL 4

#define WSB_PROP_CYVSCROLL 1

#define WSB_PROP_CYVTHUMB 32

#define WSB_PROP_HBKGCOLOR 128

#define WSB_PROP_HSTYLE 512

#define WSB_PROP_MASK 4095

#define WSB_PROP_PALETTE 2048

#define WSB_PROP_VBKGCOLOR 64

#define WSB_PROP_VSTYLE 256

#define WSB_PROP_WINSTYLE 1024

typedef struct _COLORMAP _COLORMAP, *P_COLORMAP;

typedef DWORD COLORREF;

struct _COLORMAP {
    COLORREF from;
    COLORREF to;
};

typedef struct _DPA _DPA, *P_DPA;

struct _DPA {
};

typedef struct _DPASTREAMINFO _DPASTREAMINFO, *P_DPASTREAMINFO;

struct _DPASTREAMINFO {
    int iPos;
    void * pvItem;
};

typedef struct _DSA _DSA, *P_DSA;

struct _DSA {
};

typedef struct _HD_HITTESTINFO _HD_HITTESTINFO, *P_HD_HITTESTINFO;

typedef struct tagPOINT tagPOINT, *PtagPOINT;

typedef struct tagPOINT POINT;

typedef uint UINT;

struct tagPOINT {
    LONG x;
    LONG y;
};

struct _HD_HITTESTINFO {
    POINT pt;
    UINT flags;
    int iItem;
};

typedef struct _HD_ITEMA _HD_ITEMA, *P_HD_ITEMA;

typedef struct HBITMAP__ HBITMAP__, *PHBITMAP__;

typedef struct HBITMAP__ * HBITMAP;

typedef LONG_PTR LPARAM;

struct _HD_ITEMA {
    UINT mask;
    int cxy;
    LPSTR pszText;
    HBITMAP hbm;
    int cchTextMax;
    int fmt;
    LPARAM lParam;
    int iImage;
    int iOrder;
    UINT type;
    void * pvFilter;
    UINT state;
};

struct HBITMAP__ {
    int unused;
};

typedef struct _HD_ITEMW _HD_ITEMW, *P_HD_ITEMW;

struct _HD_ITEMW {
    UINT mask;
    int cxy;
    LPWSTR pszText;
    HBITMAP hbm;
    int cchTextMax;
    int fmt;
    LPARAM lParam;
    int iImage;
    int iOrder;
    UINT type;
    void * pvFilter;
    UINT state;
};

typedef struct _HD_LAYOUT _HD_LAYOUT, *P_HD_LAYOUT;

typedef struct tagRECT tagRECT, *PtagRECT;

typedef struct tagRECT RECT;

typedef struct tagWINDOWPOS tagWINDOWPOS, *PtagWINDOWPOS;

typedef struct tagWINDOWPOS WINDOWPOS;

typedef struct HWND__ HWND__, *PHWND__;

typedef struct HWND__ * HWND;

struct _HD_LAYOUT {
    RECT * prc;
    WINDOWPOS * pwpos;
};

struct HWND__ {
    int unused;
};

struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct tagWINDOWPOS {
    HWND hwnd;
    HWND hwndInsertAfter;
    int x;
    int y;
    int cx;
    int cy;
    UINT flags;
};

typedef struct _HD_TEXTFILTERA _HD_TEXTFILTERA, *P_HD_TEXTFILTERA;

struct _HD_TEXTFILTERA {
    LPSTR pszText;
    INT cchTextMax;
};

typedef struct _HD_TEXTFILTERW _HD_TEXTFILTERW, *P_HD_TEXTFILTERW;

struct _HD_TEXTFILTERW {
    LPWSTR pszText;
    INT cchTextMax;
};

typedef struct _IMAGEINFO _IMAGEINFO, *P_IMAGEINFO;

struct _IMAGEINFO {
    HBITMAP hbmImage;
    HBITMAP hbmMask;
    int Unused1;
    int Unused2;
    RECT rcImage;
};

typedef struct _IMAGELIST _IMAGELIST, *P_IMAGELIST;

struct _IMAGELIST {
};

typedef struct _IMAGELISTDRAWPARAMS _IMAGELISTDRAWPARAMS, *P_IMAGELISTDRAWPARAMS;

typedef struct _IMAGELIST * HIMAGELIST;

typedef struct HDC__ HDC__, *PHDC__;

typedef struct HDC__ * HDC;

struct _IMAGELISTDRAWPARAMS {
    DWORD cbSize;
    HIMAGELIST himl;
    int i;
    HDC hdcDst;
    int x;
    int y;
    int cx;
    int cy;
    int xBitmap;
    int yBitmap;
    COLORREF rgbBk;
    COLORREF rgbFg;
    UINT fStyle;
    DWORD dwRop;
    DWORD fState;
    DWORD Frame;
    COLORREF crEffect;
};

struct HDC__ {
    int unused;
};

typedef struct _NM_UPDOWN _NM_UPDOWN, *P_NM_UPDOWN;

typedef struct tagNMHDR tagNMHDR, *PtagNMHDR;

typedef struct tagNMHDR NMHDR;

struct tagNMHDR {
    HWND hwndFrom;
    UINT_PTR idFrom;
    UINT code;
};

struct _NM_UPDOWN {
    NMHDR hdr;
    int iPos;
    int iDelta;
};

typedef struct _NMTBCUSTOMDRAW _NMTBCUSTOMDRAW, *P_NMTBCUSTOMDRAW;

typedef struct tagNMCUSTOMDRAWINFO tagNMCUSTOMDRAWINFO, *PtagNMCUSTOMDRAWINFO;

typedef struct tagNMCUSTOMDRAWINFO NMCUSTOMDRAW;

typedef struct HBRUSH__ HBRUSH__, *PHBRUSH__;

typedef struct HBRUSH__ * HBRUSH;

typedef struct HPEN__ HPEN__, *PHPEN__;

typedef struct HPEN__ * HPEN;

struct HBRUSH__ {
    int unused;
};

struct tagNMCUSTOMDRAWINFO {
    NMHDR hdr;
    DWORD dwDrawStage;
    HDC hdc;
    RECT rc;
    DWORD_PTR dwItemSpec;
    UINT uItemState;
    LPARAM lItemlParam;
};

struct _NMTBCUSTOMDRAW {
    NMCUSTOMDRAW nmcd;
    HBRUSH hbrMonoDither;
    HBRUSH hbrLines;
    HPEN hpenLines;
    COLORREF clrText;
    COLORREF clrMark;
    COLORREF clrTextHighlight;
    COLORREF clrBtnFace;
    COLORREF clrBtnHighlight;
    COLORREF clrHighlightHotTrack;
    RECT rcText;
    int nStringBkMode;
    int nHLStringBkMode;
    int iListGap;
};

struct HPEN__ {
    int unused;
};

typedef struct _RB_HITTESTINFO _RB_HITTESTINFO, *P_RB_HITTESTINFO;

struct _RB_HITTESTINFO {
    POINT pt;
    UINT flags;
    int iBand;
};

typedef struct _tagEDITBALLOONTIP _tagEDITBALLOONTIP, *P_tagEDITBALLOONTIP;

struct _tagEDITBALLOONTIP {
    DWORD cbStruct;
    LPCWSTR pszTitle;
    LPCWSTR pszText;
    INT ttiIcon;
};

typedef struct _TBBUTTON _TBBUTTON, *P_TBBUTTON;

struct _TBBUTTON {
    int iBitmap;
    int idCommand;
    BYTE fsState;
    BYTE fsStyle;
    BYTE bReserved[2];
    DWORD_PTR dwData;
    INT_PTR iString;
};

typedef struct _TREEITEM _TREEITEM, *P_TREEITEM;

struct _TREEITEM {
};

typedef struct _TT_HITTESTINFOA _TT_HITTESTINFOA, *P_TT_HITTESTINFOA;

typedef struct tagTOOLINFOA tagTOOLINFOA, *PtagTOOLINFOA;

typedef struct tagTOOLINFOA TTTOOLINFOA;

typedef struct HINSTANCE__ HINSTANCE__, *PHINSTANCE__;

typedef struct HINSTANCE__ * HINSTANCE;

struct tagTOOLINFOA {
    UINT cbSize;
    UINT uFlags;
    HWND hwnd;
    UINT_PTR uId;
    RECT rect;
    HINSTANCE hinst;
    LPSTR lpszText;
    LPARAM lParam;
    void * lpReserved;
};

struct _TT_HITTESTINFOA {
    HWND hwnd;
    POINT pt;
    TTTOOLINFOA ti;
};

struct HINSTANCE__ {
    int unused;
};

typedef struct _TT_HITTESTINFOW _TT_HITTESTINFOW, *P_TT_HITTESTINFOW;

typedef struct tagTOOLINFOW tagTOOLINFOW, *PtagTOOLINFOW;

typedef struct tagTOOLINFOW TTTOOLINFOW;

struct tagTOOLINFOW {
    UINT cbSize;
    UINT uFlags;
    HWND hwnd;
    UINT_PTR uId;
    RECT rect;
    HINSTANCE hinst;
    LPWSTR lpszText;
    LPARAM lParam;
    void * lpReserved;
};

struct _TT_HITTESTINFOW {
    HWND hwnd;
    POINT pt;
    TTTOOLINFOW ti;
};

typedef struct _TTGETTITLE _TTGETTITLE, *P_TTGETTITLE;

struct _TTGETTITLE {
    DWORD dwSize;
    UINT uTitleBitmap;
    UINT cch;
    WCHAR * pszTitle;
};

typedef enum _TVITEMPART {
    TVGIPR_BUTTON=1
} _TVITEMPART;

typedef struct _UDACCEL _UDACCEL, *P_UDACCEL;

struct _UDACCEL {
    UINT nSec;
    UINT nInc;
};

typedef union _union_3402 _union_3402, *P_union_3402;

typedef struct tagTVITEMEXA tagTVITEMEXA, *PtagTVITEMEXA;

typedef struct tagTVITEMEXA TVITEMEXA;

typedef struct tagTVITEMA tagTVITEMA, *PtagTVITEMA;

typedef struct tagTVITEMA TVITEMA;

typedef struct _TREEITEM * HTREEITEM;

struct tagTVITEMEXA {
    UINT mask;
    HTREEITEM hItem;
    UINT state;
    UINT stateMask;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
    int iSelectedImage;
    int cChildren;
    LPARAM lParam;
    int iIntegral;
    UINT uStateEx;
    HWND hwnd;
    int iExpandedImage;
};

struct tagTVITEMA {
    UINT mask;
    HTREEITEM hItem;
    UINT state;
    UINT stateMask;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
    int iSelectedImage;
    int cChildren;
    LPARAM lParam;
};

union _union_3402 {
    TVITEMEXA itemex;
    TVITEMA item;
};

typedef union _union_3404 _union_3404, *P_union_3404;

typedef struct tagTVITEMEXW tagTVITEMEXW, *PtagTVITEMEXW;

typedef struct tagTVITEMEXW TVITEMEXW;

typedef struct tagTVITEMW tagTVITEMW, *PtagTVITEMW;

typedef struct tagTVITEMW TVITEMW;

struct tagTVITEMEXW {
    UINT mask;
    HTREEITEM hItem;
    UINT state;
    UINT stateMask;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
    int iSelectedImage;
    int cChildren;
    LPARAM lParam;
    int iIntegral;
    UINT uStateEx;
    HWND hwnd;
    int iExpandedImage;
};

struct tagTVITEMW {
    UINT mask;
    HTREEITEM hItem;
    UINT state;
    UINT stateMask;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
    int iSelectedImage;
    int cChildren;
    LPARAM lParam;
};

union _union_3404 {
    TVITEMEXW itemex;
    TVITEMW item;
};

typedef struct BUTTON_IMAGELIST BUTTON_IMAGELIST, *PBUTTON_IMAGELIST;

struct BUTTON_IMAGELIST {
    HIMAGELIST himl;
    RECT margin;
    UINT uAlign;
};

typedef struct tagBUTTON_SPLITINFO tagBUTTON_SPLITINFO, *PtagBUTTON_SPLITINFO;

typedef struct tagBUTTON_SPLITINFO BUTTON_SPLITINFO;

typedef struct tagSIZE tagSIZE, *PtagSIZE;

typedef struct tagSIZE SIZE;

struct tagSIZE {
    LONG cx;
    LONG cy;
};

struct tagBUTTON_SPLITINFO {
    UINT mask;
    HIMAGELIST himlGlyph;
    UINT uSplitStyle;
    SIZE size;
};

typedef struct _COLORMAP COLORMAP;

typedef struct tagCOLORSCHEME tagCOLORSCHEME, *PtagCOLORSCHEME;

typedef struct tagCOLORSCHEME COLORSCHEME;

struct tagCOLORSCHEME {
    DWORD dwSize;
    COLORREF clrBtnHighlight;
    COLORREF clrBtnShadow;
};

typedef struct tagCOMBOBOXEXITEMA tagCOMBOBOXEXITEMA, *PtagCOMBOBOXEXITEMA;

typedef struct tagCOMBOBOXEXITEMA COMBOBOXEXITEMA;

struct tagCOMBOBOXEXITEMA {
    UINT mask;
    INT_PTR iItem;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
    int iSelectedImage;
    int iOverlay;
    int iIndent;
    LPARAM lParam;
};

typedef struct tagCOMBOBOXEXITEMW tagCOMBOBOXEXITEMW, *PtagCOMBOBOXEXITEMW;

typedef struct tagCOMBOBOXEXITEMW COMBOBOXEXITEMW;

struct tagCOMBOBOXEXITEMW {
    UINT mask;
    INT_PTR iItem;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
    int iSelectedImage;
    int iOverlay;
    int iIndent;
    LPARAM lParam;
};

typedef struct _DPASTREAMINFO DPASTREAMINFO;

typedef struct tagDRAGLISTINFO tagDRAGLISTINFO, *PtagDRAGLISTINFO;

typedef struct tagDRAGLISTINFO DRAGLISTINFO;

struct tagDRAGLISTINFO {
    UINT uNotification;
    HWND hWnd;
    POINT ptCursor;
};

typedef struct _tagEDITBALLOONTIP EDITBALLOONTIP;

typedef struct _HD_TEXTFILTERA HD_TEXTFILTERA;

typedef struct _HD_TEXTFILTERW HD_TEXTFILTERW;

typedef struct _HD_HITTESTINFO HDHITTESTINFO;

typedef struct _HD_ITEMA HDITEMA;

typedef struct _HD_ITEMW HDITEMW;

typedef struct _HD_LAYOUT HDLAYOUT;

typedef struct _DPA * HDPA;

typedef struct _DSA * HDSA;

typedef struct _IMAGEINFO IMAGEINFO;

typedef struct _IMAGELISTDRAWPARAMS IMAGELISTDRAWPARAMS;

typedef struct tagINITCOMMONCONTROLSEX tagINITCOMMONCONTROLSEX, *PtagINITCOMMONCONTROLSEX;

typedef struct tagINITCOMMONCONTROLSEX INITCOMMONCONTROLSEX;

struct tagINITCOMMONCONTROLSEX {
    DWORD dwSize;
    DWORD dwICC;
};

typedef struct tagLHITTESTINFO tagLHITTESTINFO, *PtagLHITTESTINFO;

typedef struct tagLHITTESTINFO LHITTESTINFO;

typedef struct tagLITEM tagLITEM, *PtagLITEM;

typedef struct tagLITEM LITEM;

struct tagLITEM {
    UINT mask;
    int iLink;
    UINT state;
    UINT stateMask;
    WCHAR szID[48];
    WCHAR szUrl[2080];
};

struct tagLHITTESTINFO {
    POINT pt;
    LITEM item;
};

typedef struct _COLORMAP * LPCOLORMAP;

typedef struct tagCOLORSCHEME * LPCOLORSCHEME;

typedef struct tagREBARBANDINFOA tagREBARBANDINFOA, *PtagREBARBANDINFOA;

typedef struct tagREBARBANDINFOA REBARBANDINFOA;

typedef REBARBANDINFOA * LPCREBARBANDINFOA;

struct tagREBARBANDINFOA {
    UINT cbSize;
    UINT fMask;
    UINT fStyle;
    COLORREF clrFore;
    COLORREF clrBack;
    LPSTR lpText;
    UINT cch;
    int iImage;
    HWND hwndChild;
    UINT cxMinChild;
    UINT cyMinChild;
    UINT cx;
    HBITMAP hbmBack;
    UINT wID;
    UINT cyChild;
    UINT cyMaxChild;
    UINT cyIntegral;
    UINT cxIdeal;
    LPARAM lParam;
    UINT cxHeader;
    RECT rcChevronLocation;
    UINT uChevronState;
};

typedef struct tagREBARBANDINFOW tagREBARBANDINFOW, *PtagREBARBANDINFOW;

typedef struct tagREBARBANDINFOW REBARBANDINFOW;

typedef REBARBANDINFOW * LPCREBARBANDINFOW;

struct tagREBARBANDINFOW {
    UINT cbSize;
    UINT fMask;
    UINT fStyle;
    COLORREF clrFore;
    COLORREF clrBack;
    LPWSTR lpText;
    UINT cch;
    int iImage;
    HWND hwndChild;
    UINT cxMinChild;
    UINT cyMinChild;
    UINT cx;
    HBITMAP hbmBack;
    UINT wID;
    UINT cyChild;
    UINT cyMaxChild;
    UINT cyIntegral;
    UINT cxIdeal;
    LPARAM lParam;
    UINT cxHeader;
    RECT rcChevronLocation;
    UINT uChevronState;
};

typedef struct _TBBUTTON TBBUTTON;

typedef TBBUTTON * LPCTBBUTTON;

typedef struct tagDRAGLISTINFO * LPDRAGLISTINFO;

typedef struct tagLVFINDINFOA tagLVFINDINFOA, *PtagLVFINDINFOA;

typedef struct tagLVFINDINFOA * LPFINDINFOA;

typedef CHAR * LPCSTR;

struct tagLVFINDINFOA {
    UINT flags;
    LPCSTR psz;
    LPARAM lParam;
    POINT pt;
    UINT vkDirection;
};

typedef struct tagLVFINDINFOW tagLVFINDINFOW, *PtagLVFINDINFOW;

typedef struct tagLVFINDINFOW * LPFINDINFOW;

struct tagLVFINDINFOW {
    UINT flags;
    LPCWSTR psz;
    LPARAM lParam;
    POINT pt;
    UINT vkDirection;
};

typedef struct _HD_TEXTFILTERA * LPHD_TEXTFILTERA;

typedef struct _HD_TEXTFILTERW * LPHD_TEXTFILTERW;

typedef struct _HD_HITTESTINFO * LPHDHITTESTINFO;

typedef struct _HD_ITEMA * LPHDITEMA;

typedef struct _HD_ITEMW * LPHDITEMW;

typedef struct _HD_LAYOUT * LPHDLAYOUT;

typedef struct _IMAGEINFO * LPIMAGEINFO;

typedef struct _IMAGELISTDRAWPARAMS * LPIMAGELISTDRAWPARAMS;

typedef struct tagINITCOMMONCONTROLSEX * LPINITCOMMONCONTROLSEX;

typedef struct tagLVBKIMAGEA tagLVBKIMAGEA, *PtagLVBKIMAGEA;

typedef struct tagLVBKIMAGEA * LPLVBKIMAGEA;

struct tagLVBKIMAGEA {
    ULONG ulFlags;
    HBITMAP hbm;
    LPSTR pszImage;
    UINT cchImageMax;
    int xOffsetPercent;
    int yOffsetPercent;
};

typedef struct tagLVBKIMAGEW tagLVBKIMAGEW, *PtagLVBKIMAGEW;

typedef struct tagLVBKIMAGEW * LPLVBKIMAGEW;

struct tagLVBKIMAGEW {
    ULONG ulFlags;
    HBITMAP hbm;
    LPWSTR pszImage;
    UINT cchImageMax;
    int xOffsetPercent;
    int yOffsetPercent;
};

typedef struct tagLVCOLUMNA tagLVCOLUMNA, *PtagLVCOLUMNA;

typedef struct tagLVCOLUMNA * LPLVCOLUMNA;

struct tagLVCOLUMNA {
    UINT mask;
    int fmt;
    int cx;
    LPSTR pszText;
    int cchTextMax;
    int iSubItem;
    int iImage;
    int iOrder;
    int cxMin;
    int cxDefault;
    int cxIdeal;
};

typedef struct tagLVCOLUMNW tagLVCOLUMNW, *PtagLVCOLUMNW;

typedef struct tagLVCOLUMNW * LPLVCOLUMNW;

struct tagLVCOLUMNW {
    UINT mask;
    int fmt;
    int cx;
    LPWSTR pszText;
    int cchTextMax;
    int iSubItem;
    int iImage;
    int iOrder;
    int cxMin;
    int cxDefault;
    int cxIdeal;
};

typedef struct tagLVFOOTERINFO tagLVFOOTERINFO, *PtagLVFOOTERINFO;

typedef struct tagLVFOOTERINFO * LPLVFOOTERINFO;

struct tagLVFOOTERINFO {
    UINT mask;
    LPWSTR pszText;
    int cchTextMax;
    UINT cItems;
};

typedef struct tagLVFOOTERITEM tagLVFOOTERITEM, *PtagLVFOOTERITEM;

typedef struct tagLVFOOTERITEM * LPLVFOOTERITEM;

struct tagLVFOOTERITEM {
    UINT mask;
    int iItem;
    LPWSTR pszText;
    int cchTextMax;
    UINT state;
    UINT stateMask;
};

typedef struct tagLVHITTESTINFO tagLVHITTESTINFO, *PtagLVHITTESTINFO;

typedef struct tagLVHITTESTINFO * LPLVHITTESTINFO;

struct tagLVHITTESTINFO {
    POINT pt;
    UINT flags;
    int iItem;
    int iSubItem;
    int iGroup;
};

typedef struct LVINSERTMARK LVINSERTMARK, *PLVINSERTMARK;

typedef struct LVINSERTMARK * LPLVINSERTMARK;

struct LVINSERTMARK {
    UINT cbSize;
    DWORD dwFlags;
    int iItem;
    DWORD dwReserved;
};

typedef struct tagLVITEMA tagLVITEMA, *PtagLVITEMA;

typedef struct tagLVITEMA * LPLVITEMA;

typedef uint * PUINT;

struct tagLVITEMA {
    UINT mask;
    int iItem;
    int iSubItem;
    UINT state;
    UINT stateMask;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
    LPARAM lParam;
    int iIndent;
    int iGroupId;
    UINT cColumns;
    PUINT puColumns;
    int * piColFmt;
    int iGroup;
};

typedef struct tagLVITEMW tagLVITEMW, *PtagLVITEMW;

typedef struct tagLVITEMW * LPLVITEMW;

struct tagLVITEMW {
    UINT mask;
    int iItem;
    int iSubItem;
    UINT state;
    UINT stateMask;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
    LPARAM lParam;
    int iIndent;
    int iGroupId;
    UINT cColumns;
    PUINT puColumns;
    int * piColFmt;
    int iGroup;
};

typedef DWORD * LPMONTHDAYSTATE;

typedef struct tagNMBCDROPDOWN tagNMBCDROPDOWN, *PtagNMBCDROPDOWN;

typedef struct tagNMBCDROPDOWN * LPNMBCDROPDOWN;

struct tagNMBCDROPDOWN {
    NMHDR hdr;
    RECT rcButton;
};

typedef struct tagNMBCHOTITEM tagNMBCHOTITEM, *PtagNMBCHOTITEM;

typedef struct tagNMBCHOTITEM * LPNMBCHOTITEM;

struct tagNMBCHOTITEM {
    NMHDR hdr;
    DWORD dwFlags;
};

typedef struct NMCBEDRAGBEGINA NMCBEDRAGBEGINA, *PNMCBEDRAGBEGINA;

typedef struct NMCBEDRAGBEGINA * LPNMCBEDRAGBEGINA;

struct NMCBEDRAGBEGINA {
    NMHDR hdr;
    int iItemid;
    char szText[260];
};

typedef struct NMCBEDRAGBEGINW NMCBEDRAGBEGINW, *PNMCBEDRAGBEGINW;

typedef struct NMCBEDRAGBEGINW * LPNMCBEDRAGBEGINW;

struct NMCBEDRAGBEGINW {
    NMHDR hdr;
    int iItemid;
    WCHAR szText[260];
};

typedef struct NMCBEENDEDITA NMCBEENDEDITA, *PNMCBEENDEDITA;

typedef struct NMCBEENDEDITA * LPNMCBEENDEDITA;

struct NMCBEENDEDITA {
    NMHDR hdr;
    BOOL fChanged;
    int iNewSelection;
    char szText[260];
    int iWhy;
};

typedef struct NMCBEENDEDITW NMCBEENDEDITW, *PNMCBEENDEDITW;

typedef struct NMCBEENDEDITW * LPNMCBEENDEDITW;

struct NMCBEENDEDITW {
    NMHDR hdr;
    BOOL fChanged;
    int iNewSelection;
    WCHAR szText[260];
    int iWhy;
};

typedef struct tagNMCHAR tagNMCHAR, *PtagNMCHAR;

typedef struct tagNMCHAR * LPNMCHAR;

struct tagNMCHAR {
    NMHDR hdr;
    UINT ch;
    DWORD dwItemPrev;
    DWORD dwItemNext;
};

typedef struct tagNMMOUSE tagNMMOUSE, *PtagNMMOUSE;

typedef struct tagNMMOUSE * LPNMMOUSE;

typedef LPNMMOUSE LPNMCLICK;

struct tagNMMOUSE {
    NMHDR hdr;
    DWORD_PTR dwItemSpec;
    DWORD_PTR dwItemData;
    POINT pt;
    LPARAM dwHitInfo;
};

typedef struct tagNMCUSTOMDRAWINFO * LPNMCUSTOMDRAW;

typedef struct tagNMCUSTOMSPLITRECTINFO tagNMCUSTOMSPLITRECTINFO, *PtagNMCUSTOMSPLITRECTINFO;

typedef struct tagNMCUSTOMSPLITRECTINFO * LPNMCUSTOMSPLITRECTINFO;

struct tagNMCUSTOMSPLITRECTINFO {
    NMHDR hdr;
    RECT rcClient;
    RECT rcButton;
    RECT rcSplit;
};

typedef struct tagNMCUSTOMTEXT tagNMCUSTOMTEXT, *PtagNMCUSTOMTEXT;

typedef struct tagNMCUSTOMTEXT * LPNMCUSTOMTEXT;

typedef struct tagRECT * LPRECT;

struct tagNMCUSTOMTEXT {
    NMHDR hdr;
    HDC hDC;
    LPCWSTR lpString;
    int nCount;
    LPRECT lpRect;
    UINT uFormat;
    BOOL fLink;
};

typedef struct tagNMDATETIMECHANGE tagNMDATETIMECHANGE, *PtagNMDATETIMECHANGE;

typedef struct tagNMDATETIMECHANGE * LPNMDATETIMECHANGE;

typedef struct _SYSTEMTIME _SYSTEMTIME, *P_SYSTEMTIME;

typedef struct _SYSTEMTIME SYSTEMTIME;

struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
};

struct tagNMDATETIMECHANGE {
    NMHDR nmhdr;
    DWORD dwFlags;
    SYSTEMTIME st;
};

typedef struct tagNMDATETIMEFORMATA tagNMDATETIMEFORMATA, *PtagNMDATETIMEFORMATA;

typedef struct tagNMDATETIMEFORMATA * LPNMDATETIMEFORMATA;

struct tagNMDATETIMEFORMATA {
    NMHDR nmhdr;
    LPCSTR pszFormat;
    SYSTEMTIME st;
    LPCSTR pszDisplay;
    CHAR szDisplay[64];
};

typedef struct tagNMDATETIMEFORMATQUERYA tagNMDATETIMEFORMATQUERYA, *PtagNMDATETIMEFORMATQUERYA;

typedef struct tagNMDATETIMEFORMATQUERYA * LPNMDATETIMEFORMATQUERYA;

struct tagNMDATETIMEFORMATQUERYA {
    NMHDR nmhdr;
    LPCSTR pszFormat;
    SIZE szMax;
};

typedef struct tagNMDATETIMEFORMATQUERYW tagNMDATETIMEFORMATQUERYW, *PtagNMDATETIMEFORMATQUERYW;

typedef struct tagNMDATETIMEFORMATQUERYW * LPNMDATETIMEFORMATQUERYW;

struct tagNMDATETIMEFORMATQUERYW {
    NMHDR nmhdr;
    LPCWSTR pszFormat;
    SIZE szMax;
};

typedef struct tagNMDATETIMEFORMATW tagNMDATETIMEFORMATW, *PtagNMDATETIMEFORMATW;

typedef struct tagNMDATETIMEFORMATW * LPNMDATETIMEFORMATW;

struct tagNMDATETIMEFORMATW {
    NMHDR nmhdr;
    LPCWSTR pszFormat;
    SYSTEMTIME st;
    LPCWSTR pszDisplay;
    WCHAR szDisplay[64];
};

typedef struct tagNMDATETIMESTRINGA tagNMDATETIMESTRINGA, *PtagNMDATETIMESTRINGA;

typedef struct tagNMDATETIMESTRINGA * LPNMDATETIMESTRINGA;

struct tagNMDATETIMESTRINGA {
    NMHDR nmhdr;
    LPCSTR pszUserString;
    SYSTEMTIME st;
    DWORD dwFlags;
};

typedef struct tagNMDATETIMESTRINGW tagNMDATETIMESTRINGW, *PtagNMDATETIMESTRINGW;

typedef struct tagNMDATETIMESTRINGW * LPNMDATETIMESTRINGW;

struct tagNMDATETIMESTRINGW {
    NMHDR nmhdr;
    LPCWSTR pszUserString;
    SYSTEMTIME st;
    DWORD dwFlags;
};

typedef struct tagNMDATETIMEWMKEYDOWNA tagNMDATETIMEWMKEYDOWNA, *PtagNMDATETIMEWMKEYDOWNA;

typedef struct tagNMDATETIMEWMKEYDOWNA * LPNMDATETIMEWMKEYDOWNA;

struct tagNMDATETIMEWMKEYDOWNA {
    NMHDR nmhdr;
    int nVirtKey;
    LPCSTR pszFormat;
    SYSTEMTIME st;
};

typedef struct tagNMDATETIMEWMKEYDOWNW tagNMDATETIMEWMKEYDOWNW, *PtagNMDATETIMEWMKEYDOWNW;

typedef struct tagNMDATETIMEWMKEYDOWNW * LPNMDATETIMEWMKEYDOWNW;

struct tagNMDATETIMEWMKEYDOWNW {
    NMHDR nmhdr;
    int nVirtKey;
    LPCWSTR pszFormat;
    SYSTEMTIME st;
};

typedef struct tagNMDAYSTATE tagNMDAYSTATE, *PtagNMDAYSTATE;

typedef struct tagNMDAYSTATE * LPNMDAYSTATE;

struct tagNMDAYSTATE {
    NMHDR nmhdr;
    SYSTEMTIME stStart;
    int cDayState;
    LPMONTHDAYSTATE prgDayState;
};

typedef struct tagNMHDDISPINFOA tagNMHDDISPINFOA, *PtagNMHDDISPINFOA;

typedef struct tagNMHDDISPINFOA * LPNMHDDISPINFOA;

struct tagNMHDDISPINFOA {
    NMHDR hdr;
    int iItem;
    UINT mask;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
    LPARAM lParam;
};

typedef struct tagNMHDDISPINFOW tagNMHDDISPINFOW, *PtagNMHDDISPINFOW;

typedef struct tagNMHDDISPINFOW * LPNMHDDISPINFOW;

struct tagNMHDDISPINFOW {
    NMHDR hdr;
    int iItem;
    UINT mask;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
    LPARAM lParam;
};

typedef struct tagNMHDFILTERBTNCLICK tagNMHDFILTERBTNCLICK, *PtagNMHDFILTERBTNCLICK;

typedef struct tagNMHDFILTERBTNCLICK * LPNMHDFILTERBTNCLICK;

struct tagNMHDFILTERBTNCLICK {
    NMHDR hdr;
    INT iItem;
    RECT rc;
};

typedef struct tagNMHEADERA tagNMHEADERA, *PtagNMHEADERA;

typedef struct tagNMHEADERA * LPNMHEADERA;

struct tagNMHEADERA {
    NMHDR hdr;
    int iItem;
    int iButton;
    HDITEMA * pitem;
};

typedef struct tagNMHEADERW tagNMHEADERW, *PtagNMHEADERW;

typedef struct tagNMHEADERW * LPNMHEADERW;

struct tagNMHEADERW {
    NMHDR hdr;
    int iItem;
    int iButton;
    HDITEMW * pitem;
};

typedef struct tagNMIPADDRESS tagNMIPADDRESS, *PtagNMIPADDRESS;

typedef struct tagNMIPADDRESS * LPNMIPADDRESS;

struct tagNMIPADDRESS {
    NMHDR hdr;
    int iField;
    int iValue;
};

typedef struct tagNMITEMACTIVATE tagNMITEMACTIVATE, *PtagNMITEMACTIVATE;

typedef struct tagNMITEMACTIVATE * LPNMITEMACTIVATE;

struct tagNMITEMACTIVATE {
    NMHDR hdr;
    int iItem;
    int iSubItem;
    UINT uNewState;
    UINT uOldState;
    UINT uChanged;
    POINT ptAction;
    LPARAM lParam;
    UINT uKeyFlags;
};

typedef struct tagNMKEY tagNMKEY, *PtagNMKEY;

typedef struct tagNMKEY * LPNMKEY;

struct tagNMKEY {
    NMHDR hdr;
    UINT nVKey;
    UINT uFlags;
};

typedef struct tagNMLISTVIEW tagNMLISTVIEW, *PtagNMLISTVIEW;

typedef struct tagNMLISTVIEW * LPNMLISTVIEW;

struct tagNMLISTVIEW {
    NMHDR hdr;
    int iItem;
    int iSubItem;
    UINT uNewState;
    UINT uOldState;
    UINT uChanged;
    POINT ptAction;
    LPARAM lParam;
};

typedef struct tagNMLVCACHEHINT tagNMLVCACHEHINT, *PtagNMLVCACHEHINT;

typedef struct tagNMLVCACHEHINT * LPNMLVCACHEHINT;

struct tagNMLVCACHEHINT {
    NMHDR hdr;
    int iFrom;
    int iTo;
};

typedef struct tagNMLVCUSTOMDRAW tagNMLVCUSTOMDRAW, *PtagNMLVCUSTOMDRAW;

typedef struct tagNMLVCUSTOMDRAW * LPNMLVCUSTOMDRAW;

struct tagNMLVCUSTOMDRAW {
    NMCUSTOMDRAW nmcd;
    COLORREF clrText;
    COLORREF clrTextBk;
    int iSubItem;
    DWORD dwItemType;
    COLORREF clrFace;
    int iIconEffect;
    int iIconPhase;
    int iPartId;
    int iStateId;
    RECT rcText;
    UINT uAlign;
};

typedef struct tagLVDISPINFO tagLVDISPINFO, *PtagLVDISPINFO;

typedef struct tagLVDISPINFO * LPNMLVDISPINFOA;

typedef struct tagLVITEMA LVITEMA;

struct tagLVDISPINFO {
    NMHDR hdr;
    LVITEMA item;
};

typedef struct tagLVDISPINFOW tagLVDISPINFOW, *PtagLVDISPINFOW;

typedef struct tagLVDISPINFOW * LPNMLVDISPINFOW;

typedef struct tagLVITEMW LVITEMW;

struct tagLVDISPINFOW {
    NMHDR hdr;
    LVITEMW item;
};

typedef struct tagNMLVFINDITEMA tagNMLVFINDITEMA, *PtagNMLVFINDITEMA;

typedef struct tagNMLVFINDITEMA * LPNMLVFINDITEMA;

typedef struct tagLVFINDINFOA LVFINDINFOA;

struct tagNMLVFINDITEMA {
    NMHDR hdr;
    int iStart;
    LVFINDINFOA lvfi;
};

typedef struct tagNMLVFINDITEMW tagNMLVFINDITEMW, *PtagNMLVFINDITEMW;

typedef struct tagNMLVFINDITEMW * LPNMLVFINDITEMW;

typedef struct tagLVFINDINFOW LVFINDINFOW;

struct tagNMLVFINDITEMW {
    NMHDR hdr;
    int iStart;
    LVFINDINFOW lvfi;
};

typedef struct tagNMLVGETINFOTIPA tagNMLVGETINFOTIPA, *PtagNMLVGETINFOTIPA;

typedef struct tagNMLVGETINFOTIPA * LPNMLVGETINFOTIPA;

struct tagNMLVGETINFOTIPA {
    NMHDR hdr;
    DWORD dwFlags;
    LPSTR pszText;
    int cchTextMax;
    int iItem;
    int iSubItem;
    LPARAM lParam;
};

typedef struct tagNMLVGETINFOTIPW tagNMLVGETINFOTIPW, *PtagNMLVGETINFOTIPW;

typedef struct tagNMLVGETINFOTIPW * LPNMLVGETINFOTIPW;

struct tagNMLVGETINFOTIPW {
    NMHDR hdr;
    DWORD dwFlags;
    LPWSTR pszText;
    int cchTextMax;
    int iItem;
    int iSubItem;
    LPARAM lParam;
};

typedef struct tagLVKEYDOWN tagLVKEYDOWN, *PtagLVKEYDOWN;

typedef struct tagLVKEYDOWN * LPNMLVKEYDOWN;

struct tagLVKEYDOWN {
    NMHDR hdr;
    WORD wVKey;
    UINT flags;
};

typedef struct tagNMLVODSTATECHANGE tagNMLVODSTATECHANGE, *PtagNMLVODSTATECHANGE;

typedef struct tagNMLVODSTATECHANGE * LPNMLVODSTATECHANGE;

struct tagNMLVODSTATECHANGE {
    NMHDR hdr;
    int iFrom;
    int iTo;
    UINT uNewState;
    UINT uOldState;
};

typedef struct tagNMLVSCROLL tagNMLVSCROLL, *PtagNMLVSCROLL;

typedef struct tagNMLVSCROLL * LPNMLVSCROLL;

struct tagNMLVSCROLL {
    NMHDR hdr;
    int dx;
    int dy;
};

typedef struct tagNMOBJECTNOTIFY tagNMOBJECTNOTIFY, *PtagNMOBJECTNOTIFY;

typedef struct tagNMOBJECTNOTIFY * LPNMOBJECTNOTIFY;

struct tagNMOBJECTNOTIFY {
    NMHDR hdr;
    int iItem;
    IID * piid;
    void * pObject;
    HRESULT hResult;
    DWORD dwFlags;
};

typedef struct NMPGCALCSIZE NMPGCALCSIZE, *PNMPGCALCSIZE;

typedef struct NMPGCALCSIZE * LPNMPGCALCSIZE;

struct NMPGCALCSIZE {
    NMHDR hdr;
    DWORD dwFlag;
    int iWidth;
    int iHeight;
};

typedef struct tagNMPGHOTITEM tagNMPGHOTITEM, *PtagNMPGHOTITEM;

typedef struct tagNMPGHOTITEM * LPNMPGHOTITEM;

struct tagNMPGHOTITEM {
    NMHDR hdr;
    int idOld;
    int idNew;
    DWORD dwFlags;
};

typedef struct NMPGSCROLL NMPGSCROLL, *PNMPGSCROLL;

typedef struct NMPGSCROLL * LPNMPGSCROLL;

struct NMPGSCROLL {
    NMHDR hdr;
    WORD fwKeys;
    RECT rcParent;
    int iDir;
    int iXpos;
    int iYpos;
    int iScroll;
};

typedef struct tagNMRBAUTOSIZE tagNMRBAUTOSIZE, *PtagNMRBAUTOSIZE;

typedef struct tagNMRBAUTOSIZE * LPNMRBAUTOSIZE;

struct tagNMRBAUTOSIZE {
    NMHDR hdr;
    BOOL fChanged;
    RECT rcTarget;
    RECT rcActual;
};

typedef struct tagNMREBAR tagNMREBAR, *PtagNMREBAR;

typedef struct tagNMREBAR * LPNMREBAR;

struct tagNMREBAR {
    NMHDR hdr;
    DWORD dwMask;
    UINT uBand;
    UINT fStyle;
    UINT wID;
    LPARAM lParam;
};

typedef struct tagNMREBARAUTOBREAK tagNMREBARAUTOBREAK, *PtagNMREBARAUTOBREAK;

typedef struct tagNMREBARAUTOBREAK * LPNMREBARAUTOBREAK;

struct tagNMREBARAUTOBREAK {
    NMHDR hdr;
    UINT uBand;
    UINT wID;
    LPARAM lParam;
    UINT uMsg;
    UINT fStyleCurrent;
    BOOL fAutoBreak;
};

typedef struct tagNMREBARCHEVRON tagNMREBARCHEVRON, *PtagNMREBARCHEVRON;

typedef struct tagNMREBARCHEVRON * LPNMREBARCHEVRON;

struct tagNMREBARCHEVRON {
    NMHDR hdr;
    UINT uBand;
    UINT wID;
    LPARAM lParam;
    RECT rc;
    LPARAM lParamNM;
};

typedef struct tagNMREBARCHILDSIZE tagNMREBARCHILDSIZE, *PtagNMREBARCHILDSIZE;

typedef struct tagNMREBARCHILDSIZE * LPNMREBARCHILDSIZE;

struct tagNMREBARCHILDSIZE {
    NMHDR hdr;
    UINT uBand;
    UINT wID;
    RECT rcChild;
    RECT rcBand;
};

typedef struct tagNMREBARSPLITTER tagNMREBARSPLITTER, *PtagNMREBARSPLITTER;

typedef struct tagNMREBARSPLITTER * LPNMREBARSPLITTER;

struct tagNMREBARSPLITTER {
    NMHDR hdr;
    RECT rcSizing;
};

typedef struct tagNMSELCHANGE tagNMSELCHANGE, *PtagNMSELCHANGE;

typedef struct tagNMSELCHANGE * LPNMSELCHANGE;

struct tagNMSELCHANGE {
    NMHDR nmhdr;
    SYSTEMTIME stSelStart;
    SYSTEMTIME stSelEnd;
};

typedef struct tagNMSELCHANGE NMSELCHANGE;

typedef NMSELCHANGE * LPNMSELECT;

typedef struct _NMTBCUSTOMDRAW * LPNMTBCUSTOMDRAW;

typedef struct NMTBDISPINFOA NMTBDISPINFOA, *PNMTBDISPINFOA;

typedef struct NMTBDISPINFOA * LPNMTBDISPINFOA;

struct NMTBDISPINFOA {
    NMHDR hdr;
    DWORD dwMask;
    int idCommand;
    DWORD_PTR lParam;
    int iImage;
    LPSTR pszText;
    int cchText;
};

typedef struct NMTBDISPINFOW NMTBDISPINFOW, *PNMTBDISPINFOW;

typedef struct NMTBDISPINFOW * LPNMTBDISPINFOW;

struct NMTBDISPINFOW {
    NMHDR hdr;
    DWORD dwMask;
    int idCommand;
    DWORD_PTR lParam;
    int iImage;
    LPWSTR pszText;
    int cchText;
};

typedef struct tagNMTBGETINFOTIPA tagNMTBGETINFOTIPA, *PtagNMTBGETINFOTIPA;

typedef struct tagNMTBGETINFOTIPA * LPNMTBGETINFOTIPA;

struct tagNMTBGETINFOTIPA {
    NMHDR hdr;
    LPSTR pszText;
    int cchTextMax;
    int iItem;
    LPARAM lParam;
};

typedef struct tagNMTBGETINFOTIPW tagNMTBGETINFOTIPW, *PtagNMTBGETINFOTIPW;

typedef struct tagNMTBGETINFOTIPW * LPNMTBGETINFOTIPW;

struct tagNMTBGETINFOTIPW {
    NMHDR hdr;
    LPWSTR pszText;
    int cchTextMax;
    int iItem;
    LPARAM lParam;
};

typedef struct tagNMTBHOTITEM tagNMTBHOTITEM, *PtagNMTBHOTITEM;

typedef struct tagNMTBHOTITEM * LPNMTBHOTITEM;

struct tagNMTBHOTITEM {
    NMHDR hdr;
    int idOld;
    int idNew;
    DWORD dwFlags;
};

typedef struct tagNMTBRESTORE tagNMTBRESTORE, *PtagNMTBRESTORE;

typedef struct tagNMTBRESTORE * LPNMTBRESTORE;

struct tagNMTBRESTORE {
    NMHDR hdr;
    DWORD * pData;
    DWORD * pCurrent;
    UINT cbData;
    int iItem;
    int cButtons;
    int cbBytesPerRecord;
    TBBUTTON tbButton;
};

typedef struct tagNMTBSAVE tagNMTBSAVE, *PtagNMTBSAVE;

typedef struct tagNMTBSAVE * LPNMTBSAVE;

struct tagNMTBSAVE {
    NMHDR hdr;
    DWORD * pData;
    DWORD * pCurrent;
    UINT cbData;
    int iItem;
    int cButtons;
    TBBUTTON tbButton;
};

typedef struct tagNMTOOLBARA tagNMTOOLBARA, *PtagNMTOOLBARA;

typedef struct tagNMTOOLBARA * LPNMTOOLBARA;

struct tagNMTOOLBARA {
    NMHDR hdr;
    int iItem;
    TBBUTTON tbButton;
    int cchText;
    LPSTR pszText;
    RECT rcButton;
};

typedef struct tagNMTOOLBARW tagNMTOOLBARW, *PtagNMTOOLBARW;

typedef struct tagNMTOOLBARW * LPNMTOOLBARW;

struct tagNMTOOLBARW {
    NMHDR hdr;
    int iItem;
    TBBUTTON tbButton;
    int cchText;
    LPWSTR pszText;
    RECT rcButton;
};

typedef struct tagNMTOOLTIPSCREATED tagNMTOOLTIPSCREATED, *PtagNMTOOLTIPSCREATED;

typedef struct tagNMTOOLTIPSCREATED * LPNMTOOLTIPSCREATED;

struct tagNMTOOLTIPSCREATED {
    NMHDR hdr;
    HWND hwndToolTips;
};

typedef struct tagNMTREEVIEWA tagNMTREEVIEWA, *PtagNMTREEVIEWA;

typedef struct tagNMTREEVIEWA * LPNMTREEVIEWA;

struct tagNMTREEVIEWA {
    NMHDR hdr;
    UINT action;
    TVITEMA itemOld;
    TVITEMA itemNew;
    POINT ptDrag;
};

typedef struct tagNMTREEVIEWW tagNMTREEVIEWW, *PtagNMTREEVIEWW;

typedef struct tagNMTREEVIEWW * LPNMTREEVIEWW;

struct tagNMTREEVIEWW {
    NMHDR hdr;
    UINT action;
    TVITEMW itemOld;
    TVITEMW itemNew;
    POINT ptDrag;
};

typedef struct tagNMTTCUSTOMDRAW tagNMTTCUSTOMDRAW, *PtagNMTTCUSTOMDRAW;

typedef struct tagNMTTCUSTOMDRAW * LPNMTTCUSTOMDRAW;

struct tagNMTTCUSTOMDRAW {
    NMCUSTOMDRAW nmcd;
    UINT uDrawFlags;
};

typedef struct tagNMTTDISPINFOA tagNMTTDISPINFOA, *PtagNMTTDISPINFOA;

typedef struct tagNMTTDISPINFOA * LPNMTTDISPINFOA;

struct tagNMTTDISPINFOA {
    NMHDR hdr;
    LPSTR lpszText;
    char szText[80];
    HINSTANCE hinst;
    UINT uFlags;
    LPARAM lParam;
};

typedef struct tagNMTTDISPINFOW tagNMTTDISPINFOW, *PtagNMTTDISPINFOW;

typedef struct tagNMTTDISPINFOW * LPNMTTDISPINFOW;

struct tagNMTTDISPINFOW {
    NMHDR hdr;
    LPWSTR lpszText;
    WCHAR szText[80];
    HINSTANCE hinst;
    UINT uFlags;
    LPARAM lParam;
};

typedef struct tagNMTVCUSTOMDRAW tagNMTVCUSTOMDRAW, *PtagNMTVCUSTOMDRAW;

typedef struct tagNMTVCUSTOMDRAW * LPNMTVCUSTOMDRAW;

struct tagNMTVCUSTOMDRAW {
    NMCUSTOMDRAW nmcd;
    COLORREF clrText;
    COLORREF clrTextBk;
    int iLevel;
};

typedef struct tagTVDISPINFOA tagTVDISPINFOA, *PtagTVDISPINFOA;

typedef struct tagTVDISPINFOA * LPNMTVDISPINFOA;

struct tagTVDISPINFOA {
    NMHDR hdr;
    TVITEMA item;
};

typedef struct tagTVDISPINFOEXA tagTVDISPINFOEXA, *PtagTVDISPINFOEXA;

typedef struct tagTVDISPINFOEXA * LPNMTVDISPINFOEXA;

struct tagTVDISPINFOEXA {
    NMHDR hdr;
    TVITEMEXA item;
};

typedef struct tagTVDISPINFOEXW tagTVDISPINFOEXW, *PtagTVDISPINFOEXW;

typedef struct tagTVDISPINFOEXW * LPNMTVDISPINFOEXW;

struct tagTVDISPINFOEXW {
    NMHDR hdr;
    TVITEMEXW item;
};

typedef struct tagTVDISPINFOW tagTVDISPINFOW, *PtagTVDISPINFOW;

typedef struct tagTVDISPINFOW * LPNMTVDISPINFOW;

struct tagTVDISPINFOW {
    NMHDR hdr;
    TVITEMW item;
};

typedef struct tagNMTVGETINFOTIPA tagNMTVGETINFOTIPA, *PtagNMTVGETINFOTIPA;

typedef struct tagNMTVGETINFOTIPA * LPNMTVGETINFOTIPA;

struct tagNMTVGETINFOTIPA {
    NMHDR hdr;
    LPSTR pszText;
    int cchTextMax;
    HTREEITEM hItem;
    LPARAM lParam;
};

typedef struct tagNMTVGETINFOTIPW tagNMTVGETINFOTIPW, *PtagNMTVGETINFOTIPW;

typedef struct tagNMTVGETINFOTIPW * LPNMTVGETINFOTIPW;

struct tagNMTVGETINFOTIPW {
    NMHDR hdr;
    LPWSTR pszText;
    int cchTextMax;
    HTREEITEM hItem;
    LPARAM lParam;
};

typedef struct tagTVKEYDOWN tagTVKEYDOWN, *PtagTVKEYDOWN;

typedef struct tagTVKEYDOWN * LPNMTVKEYDOWN;

struct tagTVKEYDOWN {
    NMHDR hdr;
    WORD wVKey;
    UINT flags;
};

typedef struct tagNMTVSTATEIMAGECHANGING tagNMTVSTATEIMAGECHANGING, *PtagNMTVSTATEIMAGECHANGING;

typedef struct tagNMTVSTATEIMAGECHANGING * LPNMTVSTATEIMAGECHANGING;

struct tagNMTVSTATEIMAGECHANGING {
    NMHDR hdr;
    HTREEITEM hti;
    int iOldStateImageIndex;
    int iNewStateImageIndex;
};

typedef struct _NM_UPDOWN * LPNMUPDOWN;

typedef struct tagNMVIEWCHANGE tagNMVIEWCHANGE, *PtagNMVIEWCHANGE;

typedef struct tagNMVIEWCHANGE * LPNMVIEWCHANGE;

struct tagNMVIEWCHANGE {
    NMHDR nmhdr;
    DWORD dwOldView;
    DWORD dwNewView;
};

typedef struct _RB_HITTESTINFO * LPRBHITTESTINFO;

typedef struct tagREBARBANDINFOA * LPREBARBANDINFOA;

typedef struct tagREBARBANDINFOW * LPREBARBANDINFOW;

typedef struct tagREBARINFO tagREBARINFO, *PtagREBARINFO;

typedef struct tagREBARINFO * LPREBARINFO;

struct tagREBARINFO {
    UINT cbSize;
    UINT fMask;
    HIMAGELIST himl;
};

typedef struct tagTBADDBITMAP tagTBADDBITMAP, *PtagTBADDBITMAP;

typedef struct tagTBADDBITMAP * LPTBADDBITMAP;

struct tagTBADDBITMAP {
    HINSTANCE hInst;
    UINT_PTR nID;
};

typedef struct _TBBUTTON * LPTBBUTTON;

typedef struct TBBUTTONINFOA TBBUTTONINFOA, *PTBBUTTONINFOA;

typedef struct TBBUTTONINFOA * LPTBBUTTONINFOA;

struct TBBUTTONINFOA {
    UINT cbSize;
    DWORD dwMask;
    int idCommand;
    int iImage;
    BYTE fsState;
    BYTE fsStyle;
    WORD cx;
    DWORD_PTR lParam;
    LPSTR pszText;
    int cchText;
};

typedef struct TBBUTTONINFOW TBBUTTONINFOW, *PTBBUTTONINFOW;

typedef struct TBBUTTONINFOW * LPTBBUTTONINFOW;

struct TBBUTTONINFOW {
    UINT cbSize;
    DWORD dwMask;
    int idCommand;
    int iImage;
    BYTE fsState;
    BYTE fsStyle;
    WORD cx;
    DWORD_PTR lParam;
    LPWSTR pszText;
    int cchText;
};

typedef struct TBINSERTMARK TBINSERTMARK, *PTBINSERTMARK;

typedef struct TBINSERTMARK * LPTBINSERTMARK;

struct TBINSERTMARK {
    int iButton;
    DWORD dwFlags;
};

typedef struct TBMETRICS TBMETRICS, *PTBMETRICS;

typedef struct TBMETRICS * LPTBMETRICS;

struct TBMETRICS {
    UINT cbSize;
    DWORD dwMask;
    int cxPad;
    int cyPad;
    int cxBarPad;
    int cyBarPad;
    int cxButtonSpacing;
    int cyButtonSpacing;
};

typedef struct TBREPLACEBITMAP TBREPLACEBITMAP, *PTBREPLACEBITMAP;

typedef struct TBREPLACEBITMAP * LPTBREPLACEBITMAP;

struct TBREPLACEBITMAP {
    HINSTANCE hInstOld;
    UINT_PTR nIDOld;
    HINSTANCE hInstNew;
    UINT_PTR nIDNew;
    int nButtons;
};

typedef struct tagTBSAVEPARAMSA tagTBSAVEPARAMSA, *PtagTBSAVEPARAMSA;

typedef struct tagTBSAVEPARAMSA * LPTBSAVEPARAMSA;

struct tagTBSAVEPARAMSA {
    HKEY hkr;
    LPCSTR pszSubKey;
    LPCSTR pszValueName;
};

typedef struct tagTBSAVEPARAMSW tagTBSAVEPARAMSW, *PtagTBSAVEPARAMSW;

typedef struct tagTBSAVEPARAMSW * LPTBSAVEPARAMW;

struct tagTBSAVEPARAMSW {
    HKEY hkr;
    LPCWSTR pszSubKey;
    LPCWSTR pszValueName;
};

typedef struct tagTCHITTESTINFO tagTCHITTESTINFO, *PtagTCHITTESTINFO;

typedef struct tagTCHITTESTINFO * LPTCHITTESTINFO;

struct tagTCHITTESTINFO {
    POINT pt;
    UINT flags;
};

typedef struct tagTCITEMA tagTCITEMA, *PtagTCITEMA;

typedef struct tagTCITEMA * LPTCITEMA;

struct tagTCITEMA {
    UINT mask;
    DWORD dwState;
    DWORD dwStateMask;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
    LPARAM lParam;
};

typedef struct tagTCITEMHEADERA tagTCITEMHEADERA, *PtagTCITEMHEADERA;

typedef struct tagTCITEMHEADERA * LPTCITEMHEADERA;

struct tagTCITEMHEADERA {
    UINT mask;
    UINT lpReserved1;
    UINT lpReserved2;
    LPSTR pszText;
    int cchTextMax;
    int iImage;
};

typedef struct tagTCITEMHEADERW tagTCITEMHEADERW, *PtagTCITEMHEADERW;

typedef struct tagTCITEMHEADERW * LPTCITEMHEADERW;

struct tagTCITEMHEADERW {
    UINT mask;
    UINT lpReserved1;
    UINT lpReserved2;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
};

typedef struct tagTCITEMW tagTCITEMW, *PtagTCITEMW;

typedef struct tagTCITEMW * LPTCITEMW;

struct tagTCITEMW {
    UINT mask;
    DWORD dwState;
    DWORD dwStateMask;
    LPWSTR pszText;
    int cchTextMax;
    int iImage;
    LPARAM lParam;
};

typedef struct _TT_HITTESTINFOA * LPTTHITTESTINFOA;

typedef struct _TT_HITTESTINFOW * LPTTHITTESTINFOW;

typedef struct tagTOOLINFOA * LPTTTOOLINFOA;

typedef struct tagTOOLINFOW * LPTTTOOLINFOW;

typedef struct tagTVHITTESTINFO tagTVHITTESTINFO, *PtagTVHITTESTINFO;

typedef struct tagTVHITTESTINFO * LPTVHITTESTINFO;

struct tagTVHITTESTINFO {
    POINT pt;
    UINT flags;
    HTREEITEM hItem;
};

typedef struct tagTVINSERTSTRUCTA tagTVINSERTSTRUCTA, *PtagTVINSERTSTRUCTA;

typedef struct tagTVINSERTSTRUCTA * LPTVINSERTSTRUCTA;

struct tagTVINSERTSTRUCTA {
    HTREEITEM hParent;
    HTREEITEM hInsertAfter;
    union _union_3402 u;
};

typedef struct tagTVINSERTSTRUCTW tagTVINSERTSTRUCTW, *PtagTVINSERTSTRUCTW;

typedef struct tagTVINSERTSTRUCTW * LPTVINSERTSTRUCTW;

struct tagTVINSERTSTRUCTW {
    HTREEITEM hParent;
    HTREEITEM hInsertAfter;
    union _union_3404 u;
};

typedef struct tagTVITEMA * LPTVITEMA;

typedef struct tagTVITEMEXA * LPTVITEMEXA;

typedef LPTVITEMEXA LPTVITEMEX;

typedef struct tagTVITEMEXW * LPTVITEMEXW;

typedef struct tagTVITEMW * LPTVITEMW;

typedef struct tagTVSORTCB tagTVSORTCB, *PtagTVSORTCB;

typedef struct tagTVSORTCB * LPTVSORTCB;

typedef int (* PFNTVCOMPARE)(LPARAM, LPARAM, LPARAM);

struct tagTVSORTCB {
    HTREEITEM hParent;
    PFNTVCOMPARE lpfnCompare;
    LPARAM lParam;
};

typedef struct _UDACCEL * LPUDACCEL;

typedef struct tagLVBKIMAGEA LVBKIMAGEA;

typedef struct tagLVBKIMAGEW LVBKIMAGEW;

typedef struct tagLVCOLUMNA LVCOLUMNA;

typedef struct tagLVCOLUMNW LVCOLUMNW;

typedef struct tagLVFOOTERINFO LVFOOTERINFO;

typedef struct tagLVFOOTERITEM LVFOOTERITEM;

typedef struct tagLVGROUP tagLVGROUP, *PtagLVGROUP;

typedef struct tagLVGROUP LVGROUP;

struct tagLVGROUP {
    UINT cbSize;
    UINT mask;
    LPWSTR pszHeader;
    int cchHeader;
    LPWSTR pszFooter;
    int cchFooter;
    int iGroupId;
    UINT stateMask;
    UINT state;
    UINT uAlign;
    LPWSTR pszSubtitle;
    UINT cchSubtitle;
    LPWSTR pszTask;
    UINT cchTask;
    LPWSTR pszDescriptionTop;
    UINT cchDescriptionTop;
    LPWSTR pszDescriptionBottom;
    UINT cchDescriptionBottom;
    int iTitleImage;
    int iExtendedImage;
    int iFirstItem;
    UINT cItems;
    LPWSTR pszSubsetTitle;
    UINT cchSubsetTitle;
};

typedef struct tagLVGROUPMETRICS tagLVGROUPMETRICS, *PtagLVGROUPMETRICS;

typedef struct tagLVGROUPMETRICS LVGROUPMETRICS;

struct tagLVGROUPMETRICS {
    UINT cbSize;
    UINT mask;
    UINT Left;
    UINT Top;
    UINT Right;
    UINT Bottom;
    COLORREF crLeft;
    COLORREF crTop;
    COLORREF crRight;
    COLORREF crBottom;
    COLORREF crHeader;
    COLORREF crFooter;
};

typedef struct tagLVHITTESTINFO LVHITTESTINFO;

typedef struct tagLVINSERTGROUPSORTED tagLVINSERTGROUPSORTED, *PtagLVINSERTGROUPSORTED;

typedef struct tagLVINSERTGROUPSORTED LVINSERTGROUPSORTED;

typedef int (* PFNLVGROUPCOMPARE)(int, int, void *);

struct tagLVINSERTGROUPSORTED {
    PFNLVGROUPCOMPARE pfnGroupCompare;
    void * pvData;
    LVGROUP lvGroup;
};

typedef struct tagLVITEMINDEX tagLVITEMINDEX, *PtagLVITEMINDEX;

typedef struct tagLVITEMINDEX LVITEMINDEX;

struct tagLVITEMINDEX {
    int iItem;
    int iGroup;
};

typedef struct tagLVSETINFOTIP tagLVSETINFOTIP, *PtagLVSETINFOTIP;

typedef struct tagLVSETINFOTIP LVSETINFOTIP;

struct tagLVSETINFOTIP {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR pszText;
    int iItem;
    int iSubItem;
};

typedef struct tagLVTILEINFO tagLVTILEINFO, *PtagLVTILEINFO;

typedef struct tagLVTILEINFO LVTILEINFO;

struct tagLVTILEINFO {
    UINT cbSize;
    int iItem;
    UINT cColumns;
    PUINT puColumns;
    int * piColFmt;
};

typedef struct tagLVTILEVIEWINFO tagLVTILEVIEWINFO, *PtagLVTILEVIEWINFO;

typedef struct tagLVTILEVIEWINFO LVTILEVIEWINFO;

struct tagLVTILEVIEWINFO {
    UINT cbSize;
    DWORD dwMask;
    DWORD dwFlags;
    SIZE sizeTile;
    int cLines;
    RECT rcLabelMargin;
};

typedef struct MCHITTESTINFO MCHITTESTINFO, *PMCHITTESTINFO;

struct MCHITTESTINFO {
    UINT cbSize;
    POINT pt;
    UINT uHit;
    SYSTEMTIME st;
};

typedef DWORD MONTHDAYSTATE;

typedef struct tagNMBCDROPDOWN NMBCDROPDOWN;

typedef struct tagNMBCHOTITEM NMBCHOTITEM;

typedef struct tagNMCHAR NMCHAR;

typedef struct tagNMMOUSE NMMOUSE;

typedef NMMOUSE NMCLICK;

typedef struct NMCOMBOBOXEXA NMCOMBOBOXEXA, *PNMCOMBOBOXEXA;

struct NMCOMBOBOXEXA {
    NMHDR hdr;
    COMBOBOXEXITEMA ceItem;
};

typedef struct NMCOMBOBOXEXW NMCOMBOBOXEXW, *PNMCOMBOBOXEXW;

struct NMCOMBOBOXEXW {
    NMHDR hdr;
    COMBOBOXEXITEMW ceItem;
};

typedef struct tagNMCUSTOMSPLITRECTINFO NMCUSTOMSPLITRECTINFO;

typedef struct tagNMCUSTOMTEXT NMCUSTOMTEXT;

typedef struct tagNMDATETIMECHANGE NMDATETIMECHANGE;

typedef struct tagNMDATETIMEFORMATA NMDATETIMEFORMATA;

typedef struct tagNMDATETIMEFORMATQUERYA NMDATETIMEFORMATQUERYA;

typedef struct tagNMDATETIMEFORMATQUERYW NMDATETIMEFORMATQUERYW;

typedef struct tagNMDATETIMEFORMATW NMDATETIMEFORMATW;

typedef struct tagNMDATETIMESTRINGA NMDATETIMESTRINGA;

typedef struct tagNMDATETIMESTRINGW NMDATETIMESTRINGW;

typedef struct tagNMDATETIMEWMKEYDOWNA NMDATETIMEWMKEYDOWNA;

typedef struct tagNMDATETIMEWMKEYDOWNW NMDATETIMEWMKEYDOWNW;

typedef struct tagNMDAYSTATE NMDAYSTATE;

typedef struct tagNMHDDISPINFOA NMHDDISPINFOA;

typedef struct tagNMHDDISPINFOW NMHDDISPINFOW;

typedef struct tagNMHDFILTERBTNCLICK NMHDFILTERBTNCLICK;

typedef struct tagNMHEADERA NMHEADERA;

typedef struct tagNMHEADERW NMHEADERW;

typedef struct tagNMIPADDRESS NMIPADDRESS;

typedef struct tagNMITEMACTIVATE NMITEMACTIVATE;

typedef struct tagNMKEY NMKEY;

typedef struct tagNMLINK tagNMLINK, *PtagNMLINK;

typedef struct tagNMLINK NMLINK;

struct tagNMLINK {
    NMHDR hdr;
    LITEM item;
};

typedef struct tagNMLISTVIEW NMLISTVIEW;

typedef struct tagNMLVCACHEHINT NMLVCACHEHINT;

typedef struct tagNMLVCUSTOMDRAW NMLVCUSTOMDRAW;

typedef struct tagLVDISPINFO NMLVDISPINFOA;

typedef struct tagLVDISPINFOW NMLVDISPINFOW;

typedef struct tagNMLVEMPTYMARKUP tagNMLVEMPTYMARKUP, *PtagNMLVEMPTYMARKUP;

typedef struct tagNMLVEMPTYMARKUP NMLVEMPTYMARKUP;

struct tagNMLVEMPTYMARKUP {
    NMHDR hdr;
    DWORD dwFlags;
    WCHAR szMarkup[2080];
};

typedef struct tagNMLVFINDITEMA NMLVFINDITEMA;

typedef struct tagNMLVFINDITEMW NMLVFINDITEMW;

typedef struct tagNMLVGETINFOTIPA NMLVGETINFOTIPA;

typedef struct tagNMLVGETINFOTIPW NMLVGETINFOTIPW;

typedef struct tagLVKEYDOWN NMLVKEYDOWN;

typedef struct tagNMLVLINK tagNMLVLINK, *PtagNMLVLINK;

typedef struct tagNMLVLINK NMLVLINK;

struct tagNMLVLINK {
    NMHDR hdr;
    LITEM link;
    int iItem;
    int iSubItem;
};

typedef struct tagNMLVODSTATECHANGE NMLVODSTATECHANGE;

typedef struct tagNMLVSCROLL NMLVSCROLL;

typedef struct tagNMOBJECTNOTIFY NMOBJECTNOTIFY;

typedef struct tagNMPGHOTITEM NMPGHOTITEM;

typedef struct tagNMRBAUTOSIZE NMRBAUTOSIZE;

typedef struct tagNMREBAR NMREBAR;

typedef struct tagNMREBARAUTOBREAK NMREBARAUTOBREAK;

typedef struct tagNMREBARCHEVRON NMREBARCHEVRON;

typedef struct tagNMREBARCHILDSIZE NMREBARCHILDSIZE;

typedef struct tagNMREBARSPLITTER NMREBARSPLITTER;

typedef NMSELCHANGE NMSELECT;

typedef struct _NMTBCUSTOMDRAW NMTBCUSTOMDRAW;

typedef struct tagNMTBGETINFOTIPA NMTBGETINFOTIPA;

typedef struct tagNMTBGETINFOTIPW NMTBGETINFOTIPW;

typedef struct tagNMTBHOTITEM NMTBHOTITEM;

typedef struct tagNMTBRESTORE NMTBRESTORE;

typedef struct tagNMTBSAVE NMTBSAVE;

typedef struct tagTCKEYDOWN tagTCKEYDOWN, *PtagTCKEYDOWN;

typedef struct tagTCKEYDOWN NMTCKEYDOWN;

struct tagTCKEYDOWN {
    NMHDR hdr;
    WORD wVKey;
    UINT flags;
};

typedef struct tagNMTOOLBARA NMTOOLBARA;

typedef struct tagNMTOOLBARW NMTOOLBARW;

typedef struct tagNMTOOLTIPSCREATED NMTOOLTIPSCREATED;

typedef struct tagTRBTHUMBPOSCHANGING tagTRBTHUMBPOSCHANGING, *PtagTRBTHUMBPOSCHANGING;

typedef struct tagTRBTHUMBPOSCHANGING NMTRBTHUMBPOSCHANGING;

struct tagTRBTHUMBPOSCHANGING {
    NMHDR hdr;
    DWORD dwPos;
    int nReason;
};

typedef struct tagNMTREEVIEWA NMTREEVIEWA;

typedef struct tagNMTREEVIEWW NMTREEVIEWW;

typedef struct tagNMTTCUSTOMDRAW NMTTCUSTOMDRAW;

typedef struct tagNMTTDISPINFOA NMTTDISPINFOA;

typedef struct tagNMTTDISPINFOW NMTTDISPINFOW;

typedef struct tagNMTVASYNCDRAW tagNMTVASYNCDRAW, *PtagNMTVASYNCDRAW;

typedef struct tagNMTVASYNCDRAW NMTVASYNCDRAW;

struct tagNMTVASYNCDRAW {
    NMHDR hdr;
    IMAGELISTDRAWPARAMS * pimldp;
    HRESULT hr;
    HTREEITEM hItem;
    LPARAM lParam;
    DWORD dwRetFlags;
    int iRetImageIndex;
};

typedef struct tagNMTVCUSTOMDRAW NMTVCUSTOMDRAW;

typedef struct tagTVDISPINFOA NMTVDISPINFOA;

typedef struct tagTVDISPINFOEXA NMTVDISPINFOEXA;

typedef struct tagTVDISPINFOEXW NMTVDISPINFOEXW;

typedef struct tagTVDISPINFOW NMTVDISPINFOW;

typedef struct tagNMTVGETINFOTIPA NMTVGETINFOTIPA;

typedef struct tagNMTVGETINFOTIPW NMTVGETINFOTIPW;

typedef struct tagTVITEMCHANGE tagTVITEMCHANGE, *PtagTVITEMCHANGE;

typedef struct tagTVITEMCHANGE NMTVITEMCHANGE;

struct tagTVITEMCHANGE {
    NMHDR hdr;
    UINT uChanged;
    HTREEITEM hItem;
    UINT uStateNew;
    UINT uStateOld;
    LPARAM lParam;
};

typedef struct tagTVKEYDOWN NMTVKEYDOWN;

typedef struct tagNMTVSTATEIMAGECHANGING NMTVSTATEIMAGECHANGING;

typedef struct _NM_UPDOWN NMUPDOWN;

typedef struct tagNMVIEWCHANGE NMVIEWCHANGE;

typedef struct PBRANGE PBRANGE, *PPBRANGE;

struct PBRANGE {
    int iLow;
    int iHigh;
};

typedef struct tagBUTTON_SPLITINFO * PBUTTON_SPLITINFO;

typedef COMBOBOXEXITEMA * PCCOMBOEXITEMA;

typedef COMBOBOXEXITEMW * PCCOMBOEXITEMW;

typedef struct tagCOMBOBOXEXITEMA * PCOMBOBOXEXITEMA;

typedef struct tagCOMBOBOXEXITEMW * PCOMBOBOXEXITEMW;

typedef struct _tagEDITBALLOONTIP * PEDITBALLOONTIP;

typedef int (* PFNDACOMPARE)(void *, void *, LPARAM);

typedef int (* PFNDACOMPARECONST)(void *, void *, LPARAM);

typedef int (* PFNDAENUMCALLBACK)(void *, void *);

typedef int (* PFNDAENUMCALLBACKCONST)(void *, void *);

typedef void * (* PFNDPAMERGE)(UINT, void *, void *, LPARAM);

typedef void * (* PFNDPAMERGECONST)(UINT, void *, void *, LPARAM);

typedef struct IStream IStream, *PIStream;

typedef HRESULT (* PFNDPASTREAM)(DPASTREAMINFO *, struct IStream *, void *);

typedef struct IStreamVtbl IStreamVtbl, *PIStreamVtbl;

typedef struct tagSTATSTG tagSTATSTG, *PtagSTATSTG;

typedef struct tagSTATSTG STATSTG;

typedef OLECHAR * LPOLESTR;

typedef GUID CLSID;

struct IStreamVtbl {
    HRESULT (* QueryInterface)(struct IStream *, IID *, void * *);
    ULONG (* AddRef)(struct IStream *);
    ULONG (* Release)(struct IStream *);
    HRESULT (* Read)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct IStream *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct IStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct IStream *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct IStream *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct IStream *, DWORD);
    HRESULT (* Revert)(struct IStream *);
    HRESULT (* LockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct IStream *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct IStream *, struct IStream * *);
};

struct IStream {
    struct IStreamVtbl * lpVtbl;
};

struct tagSTATSTG {
    LPOLESTR pwcsName;
    DWORD type;
    ULARGE_INTEGER cbSize;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD grfMode;
    DWORD grfLocksSupported;
    CLSID clsid;
    DWORD grfStateBits;
    DWORD reserved;
};

typedef int (* PFNLVCOMPARE)(LPARAM, LPARAM, LPARAM);

typedef struct tagLHITTESTINFO * PLHITTESTINFO;

typedef struct tagLITEM * PLITEM;

typedef struct tagLVGROUP * PLVGROUP;

typedef struct tagLVGROUPMETRICS * PLVGROUPMETRICS;

typedef struct tagLVINSERTGROUPSORTED * PLVINSERTGROUPSORTED;

typedef struct tagLVITEMINDEX * PLVITEMINDEX;

typedef struct tagLVSETINFOTIP * PLVSETINFOTIP;

typedef struct tagLVTILEINFO * PLVTILEINFO;

typedef struct tagLVTILEVIEWINFO * PLVTILEVIEWINFO;

typedef struct tagNMLINK * PNMLINK;

typedef struct tagNMLVLINK * PNMLVLINK;

typedef struct _TBBUTTON * PTBBUTTON;

typedef struct tagTOOLINFOA * PTOOLINFOA;

typedef struct tagTOOLINFOW * PTOOLINFOW;

typedef struct _TTGETTITLE * PTTGETTITLE;

typedef struct _RB_HITTESTINFO RBHITTESTINFO;

typedef struct tagREBARINFO REBARINFO;

typedef LONG_PTR LRESULT;

typedef UINT_PTR WPARAM;

typedef LRESULT (* SUBCLASSPROC)(HWND, UINT, WPARAM, LPARAM, UINT_PTR, DWORD_PTR);

typedef struct tagTVGETITEMPARTRECTINFO tagTVGETITEMPARTRECTINFO, *PtagTVGETITEMPARTRECTINFO;

typedef enum _TVITEMPART TVITEMPART;

struct tagTVGETITEMPARTRECTINFO {
    HTREEITEM hti;
    RECT * prc;
    TVITEMPART partID;
};

typedef struct tagTBADDBITMAP TBADDBITMAP;

typedef struct tagTBSAVEPARAMSA TBSAVEPARAMSA;

typedef struct tagTBSAVEPARAMSW TBSAVEPARAMSW;

typedef struct tagTCHITTESTINFO TCHITTESTINFO;

typedef struct tagTCITEMA TCITEMA;

typedef struct tagTCITEMHEADERA TCITEMHEADERA;

typedef struct tagTCITEMHEADERW TCITEMHEADERW;

typedef struct tagTCITEMW TCITEMW;

typedef struct _TTGETTITLE TTGETTITLE;

typedef struct _TT_HITTESTINFOA TTHITTESTINFOA;

typedef struct _TT_HITTESTINFOW TTHITTESTINFOW;

typedef struct tagTVGETITEMPARTRECTINFO TVGETITEMPARTRECTINFO;

typedef struct tagTVHITTESTINFO TVHITTESTINFO;

typedef struct tagTVINSERTSTRUCTA TVINSERTSTRUCTA;

typedef struct tagTVINSERTSTRUCTW TVINSERTSTRUCTW;

typedef TVITEMEXA TVITEMEX;

typedef struct tagTVSORTCB TVSORTCB;

typedef struct _UDACCEL UDACCEL;

#define BOLD_FONTTYPE 256

#define CC_ANYCOLOR 256

#define CC_ENABLEHOOK 16

#define CC_ENABLETEMPLATE 32

#define CC_ENABLETEMPLATEHANDLE 64

#define CC_FULLOPEN 2

#define CC_PREVENTFULLOPEN 4

#define CC_RGBINIT 1

#define CC_SHOWHELP 8

#define CC_SOLIDCOLOR 128

#define CD_LBSELADD 2

#define CD_LBSELCHANGE 0

#define CD_LBSELNOITEMS -1

#define CD_LBSELSUB 1

#define CDM_FIRST 1124

#define CDM_GETFILEPATH 1125

#define CDM_GETFOLDERIDLIST 1127

#define CDM_GETFOLDERPATH 1126

#define CDM_GETSPEC 1124

#define CDM_HIDECONTROL 1129

#define CDM_LAST 1224

#define CDM_SETCONTROLTEXT 1128

#define CDM_SETDEFEXT 1130

#define CDN_FILEOK -606

#define CDN_FIRST -601

#define CDN_FOLDERCHANGE -603

#define CDN_HELP -605

#define CDN_INITDONE -601

#define CDN_LAST -699

#define CDN_SELCHANGE -602

#define CDN_SHAREVIOLATION -604

#define CDN_TYPECHANGE -607

#define CF_ANSIONLY 1024

#define CF_APPLY 512

#define CF_BOTH 3

#define CF_EFFECTS 256

#define CF_ENABLEHOOK 8

#define CF_ENABLETEMPLATE 16

#define CF_ENABLETEMPLATEHANDLE 32

#define CF_FIXEDPITCHONLY 16384

#define CF_FORCEFONTEXIST 65536

#define CF_INACTIVEFONTS 33554432

#define CF_INITTOLOGFONTSTRUCT 64

#define CF_LIMITSIZE 8192

#define CF_NOFACESEL 524288

#define CF_NOOEMFONTS 2048

#define CF_NOSCRIPTSEL 8388608

#define CF_NOSIMULATIONS 4096

#define CF_NOSIZESEL 2097152

#define CF_NOSTYLESEL 1048576

#define CF_NOVECTORFONTS 2048

#define CF_NOVERTFONTS 16777216

#define CF_PRINTERFONTS 2

#define CF_SCALABLEONLY 131072

#define CF_SCREENFONTS 1

#define CF_SCRIPTSONLY 1024

#define CF_SELECTSCRIPT 4194304

#define CF_SHOWHELP 4

#define CF_TTONLY 262144

#define CF_USESTYLE 128

#define CF_WYSIWYG 32768

#define DN_DEFAULTPRN 1

#define FR_DIALOGTERM 64

#define FR_DOWN 1

#define FR_ENABLEHOOK 256

#define FR_ENABLETEMPLATE 512

#define FR_ENABLETEMPLATEHANDLE 8192

#define FR_FINDNEXT 8

#define FR_HIDEMATCHCASE 32768

#define FR_HIDEUPDOWN 16384

#define FR_HIDEWHOLEWORD 65536

#define FR_MATCHCASE 4

#define FR_NOMATCHCASE 2048

#define FR_NOUPDOWN 1024

#define FR_NOWHOLEWORD 4096

#define FR_REPLACE 16

#define FR_REPLACEALL 32

#define FR_SHOWHELP 128

#define FR_WHOLEWORD 2

#define ITALIC_FONTTYPE 512

#define OFN_ALLOWMULTISELECT 512

#define OFN_CREATEPROMPT 8192

#define OFN_DONTADDTORECENT 33554432

#define OFN_ENABLEHOOK 32

#define OFN_ENABLEINCLUDENOTIFY 4194304

#define OFN_ENABLESIZING 8388608

#define OFN_ENABLETEMPLATE 64

#define OFN_ENABLETEMPLATEHANDLE 128

#define OFN_EX_NOPLACESBAR 1

#define OFN_EXPLORER 524288

#define OFN_EXTENSIONDIFFERENT 1024

#define OFN_FILEMUSTEXIST 4096

#define OFN_FORCESHOWHIDDEN 268435456

#define OFN_HIDEREADONLY 4

#define OFN_LONGNAMES 2097152

#define OFN_NOCHANGEDIR 8

#define OFN_NODEREFERENCELINKS 1048576

#define OFN_NOLONGNAMES 262144

#define OFN_NONETWORKBUTTON 131072

#define OFN_NOREADONLYRETURN 32768

#define OFN_NOTESTFILECREATE 65536

#define OFN_NOVALIDATE 256

#define OFN_OVERWRITEPROMPT 2

#define OFN_PATHMUSTEXIST 2048

#define OFN_READONLY 1

#define OFN_SHAREAWARE 16384

#define OFN_SHAREFALLTHROUGH 2

#define OFN_SHARENOWARN 1

#define OFN_SHAREWARN 0

#define OFN_SHOWHELP 16

#define PD_ALLPAGES 0

#define PD_COLLATE 16

#define PD_CURRENTPAGE 4194304

#define PD_DISABLEPRINTTOFILE 524288

#define PD_ENABLEPRINTHOOK 4096

#define PD_ENABLEPRINTTEMPLATE 16384

#define PD_ENABLEPRINTTEMPLATEHANDLE 65536

#define PD_ENABLESETUPHOOK 8192

#define PD_ENABLESETUPTEMPLATE 32768

#define PD_ENABLESETUPTEMPLATEHANDLE 131072

#define PD_EXCL_COPIESANDCOLLATE 33024

#define PD_EXCLUSIONFLAGS 16777216

#define PD_HIDEPRINTTOFILE 1048576

#define PD_NOCURRENTPAGE 8388608

#define PD_NONETWORKBUTTON 2097152

#define PD_NOPAGENUMS 8

#define PD_NOSELECTION 4

#define PD_NOWARNING 128

#define PD_PAGENUMS 2

#define PD_PRINTSETUP 64

#define PD_PRINTTOFILE 32

#define PD_RESULT_APPLY 2

#define PD_RESULT_CANCEL 0

#define PD_RESULT_PRINT 1

#define PD_RETURNDC 256

#define PD_RETURNDEFAULT 1024

#define PD_RETURNIC 512

#define PD_SELECTION 1

#define PD_SHOWHELP 2048

#define PD_USEDEVMODECOPIES 262144

#define PD_USEDEVMODECOPIESANDCOLLATE 262144

#define PD_USELARGETEMPLATE 268435456

#define PRINTER_FONTTYPE 16384

#define PSD_DEFAULTMINMARGINS 0

#define PSD_DISABLEMARGINS 16

#define PSD_DISABLEORIENTATION 256

#define PSD_DISABLEPAGEPAINTING 524288

#define PSD_DISABLEPAPER 512

#define PSD_DISABLEPRINTER 32

#define PSD_ENABLEPAGEPAINTHOOK 262144

#define PSD_ENABLEPAGESETUPHOOK 8192

#define PSD_ENABLEPAGESETUPTEMPLATE 32768

#define PSD_ENABLEPAGESETUPTEMPLATEHANDLE 131072

#define PSD_INHUNDREDTHSOFMILLIMETERS 8

#define PSD_INTHOUSANDTHSOFINCHES 4

#define PSD_INWININIINTLMEASURE 0

#define PSD_MARGINS 2

#define PSD_MINMARGINS 1

#define PSD_NONETWORKBUTTON 2097152

#define PSD_NOWARNING 128

#define PSD_RETURNDEFAULT 1024

#define PSD_SHOWHELP 2048

#define REGULAR_FONTTYPE 1024

#define SCREEN_FONTTYPE 8192

#define SIMULATED_FONTTYPE 32768

#define START_PAGE_GENERAL 4294967295

#define SYMBOL_FONTTYPE 524288

#define WM_CHOOSEFONT_GETLOGFONT 1025

#define WM_PSD_ENVSTAMPRECT 1029

#define WM_PSD_FULLPAGERECT 1025

#define WM_PSD_GREEKTEXTRECT 1028

#define WM_PSD_MARGINRECT 1027

#define WM_PSD_MINMARGINRECT 1026

#define WM_PSD_PAGESETUPDLG 1024

#define WM_PSD_YAFULLPAGERECT 1030

typedef struct _OFNOTIFYA _OFNOTIFYA, *P_OFNOTIFYA;

typedef struct tagOFNA tagOFNA, *PtagOFNA;

typedef struct tagOFNA * LPOPENFILENAMEA;

typedef UINT_PTR (* LPOFNHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct _OFNOTIFYA {
    NMHDR hdr;
    LPOPENFILENAMEA lpOFN;
    LPSTR pszFile;
};

struct tagOFNA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
    void * pvReserved;
    DWORD dwReserved;
    DWORD FlagsEx;
};

typedef struct _OFNOTIFYEXA _OFNOTIFYEXA, *P_OFNOTIFYEXA;

struct _OFNOTIFYEXA {
    NMHDR hdr;
    LPOPENFILENAMEA lpOFN;
    LPVOID psf;
    LPVOID pidl;
};

typedef struct _OFNOTIFYEXW _OFNOTIFYEXW, *P_OFNOTIFYEXW;

typedef struct tagOFNW tagOFNW, *PtagOFNW;

typedef struct tagOFNW * LPOPENFILENAMEW;

struct _OFNOTIFYEXW {
    NMHDR hdr;
    LPOPENFILENAMEW lpOFN;
    LPVOID psf;
    LPVOID pidl;
};

struct tagOFNW {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpstrFilter;
    LPWSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPWSTR lpstrFile;
    DWORD nMaxFile;
    LPWSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCWSTR lpstrInitialDir;
    LPCWSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCWSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
    void * pvReserved;
    DWORD dwReserved;
    DWORD FlagsEx;
};

typedef struct _OFNOTIFYW _OFNOTIFYW, *P_OFNOTIFYW;

struct _OFNOTIFYW {
    NMHDR hdr;
    LPOPENFILENAMEW lpOFN;
    LPWSTR pszFile;
};

typedef struct tagCHOOSECOLORA tagCHOOSECOLORA, *PtagCHOOSECOLORA;

typedef struct tagCHOOSECOLORA CHOOSECOLORA;

typedef CHOOSECOLORA CHOOSECOLOR;

typedef UINT_PTR (* LPCCHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagCHOOSECOLORA {
    DWORD lStructSize;
    HWND hwndOwner;
    HWND hInstance;
    COLORREF rgbResult;
    COLORREF * lpCustColors;
    DWORD Flags;
    LPARAM lCustData;
    LPCCHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagCHOOSECOLORW tagCHOOSECOLORW, *PtagCHOOSECOLORW;

typedef struct tagCHOOSECOLORW CHOOSECOLORW;

struct tagCHOOSECOLORW {
    DWORD lStructSize;
    HWND hwndOwner;
    HWND hInstance;
    COLORREF rgbResult;
    COLORREF * lpCustColors;
    DWORD Flags;
    LPARAM lCustData;
    LPCCHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct tagCHOOSEFONTA tagCHOOSEFONTA, *PtagCHOOSEFONTA;

typedef struct tagCHOOSEFONTA CHOOSEFONTA;

typedef CHOOSEFONTA CHOOSEFONT;

typedef struct tagLOGFONTA tagLOGFONTA, *PtagLOGFONTA;

typedef struct tagLOGFONTA * LPLOGFONTA;

typedef UINT_PTR (* LPCFHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[32];
};

struct tagCHOOSEFONTA {
    DWORD lStructSize;
    HWND hwndOwner;
    HDC hDC;
    LPLOGFONTA lpLogFont;
    INT iPointSize;
    DWORD Flags;
    COLORREF rgbColors;
    LPARAM lCustData;
    LPCFHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
    HINSTANCE hInstance;
    LPSTR lpszStyle;
    WORD nFontType;
    WORD ___MISSING_ALIGNMENT__;
    INT nSizeMin;
    INT nSizeMax;
};

typedef struct tagCHOOSEFONTW tagCHOOSEFONTW, *PtagCHOOSEFONTW;

typedef struct tagCHOOSEFONTW CHOOSEFONTW;

typedef struct tagLOGFONTW tagLOGFONTW, *PtagLOGFONTW;

typedef struct tagLOGFONTW * LPLOGFONTW;

struct tagCHOOSEFONTW {
    DWORD lStructSize;
    HWND hwndOwner;
    HDC hDC;
    LPLOGFONTW lpLogFont;
    INT iPointSize;
    DWORD Flags;
    COLORREF rgbColors;
    LPARAM lCustData;
    LPCFHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
    HINSTANCE hInstance;
    LPWSTR lpszStyle;
    WORD nFontType;
    WORD ___MISSING_ALIGNMENT__;
    INT nSizeMin;
    INT nSizeMax;
};

struct tagLOGFONTW {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    WCHAR lfFaceName[32];
};

typedef struct tagDEVNAMES tagDEVNAMES, *PtagDEVNAMES;

typedef struct tagDEVNAMES DEVNAMES;

struct tagDEVNAMES {
    WORD wDriverOffset;
    WORD wDeviceOffset;
    WORD wOutputOffset;
    WORD wDefault;
};

typedef struct tagFINDREPLACEA tagFINDREPLACEA, *PtagFINDREPLACEA;

typedef struct tagFINDREPLACEA FINDREPLACEA;

typedef FINDREPLACEA FINDREPLACE;

typedef UINT_PTR (* LPFRHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagFINDREPLACEA {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    DWORD Flags;
    LPSTR lpstrFindWhat;
    LPSTR lpstrReplaceWith;
    WORD wFindWhatLen;
    WORD wReplaceWithLen;
    LPARAM lCustData;
    LPFRHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagFINDREPLACEW tagFINDREPLACEW, *PtagFINDREPLACEW;

typedef struct tagFINDREPLACEW FINDREPLACEW;

struct tagFINDREPLACEW {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    DWORD Flags;
    LPWSTR lpstrFindWhat;
    LPWSTR lpstrReplaceWith;
    WORD wFindWhatLen;
    WORD wReplaceWithLen;
    LPARAM lCustData;
    LPFRHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef struct IPrintDialogCallback IPrintDialogCallback, *PIPrintDialogCallback;

typedef struct IPrintDialogCallbackVtbl IPrintDialogCallbackVtbl, *PIPrintDialogCallbackVtbl;

struct IPrintDialogCallbackVtbl {
    HRESULT (* QueryInterface)(struct IPrintDialogCallback *, IID *, LPVOID *);
    ULONG (* AddRef)(struct IPrintDialogCallback *);
    ULONG (* Release)(struct IPrintDialogCallback *);
    HRESULT (* InitDone)(struct IPrintDialogCallback *);
    HRESULT (* SelectionChange)(struct IPrintDialogCallback *);
    HRESULT (* HandleMessage)(struct IPrintDialogCallback *, HWND, UINT, WPARAM, LPARAM, LRESULT *);
};

struct IPrintDialogCallback {
    struct IPrintDialogCallbackVtbl * lpVtbl;
};

typedef struct IPrintDialogServices IPrintDialogServices, *PIPrintDialogServices;

typedef struct IPrintDialogServicesVtbl IPrintDialogServicesVtbl, *PIPrintDialogServicesVtbl;

typedef struct _devicemodeA _devicemodeA, *P_devicemodeA;

typedef struct _devicemodeA * LPDEVMODEA;

typedef LPDEVMODEA LPDEVMODE;

typedef union _union_655 _union_655, *P_union_655;

typedef union _union_658 _union_658, *P_union_658;

typedef struct _struct_656 _struct_656, *P_struct_656;

typedef struct _struct_657 _struct_657, *P_struct_657;

typedef struct _POINTL _POINTL, *P_POINTL;

typedef struct _POINTL POINTL;

struct IPrintDialogServices {
    struct IPrintDialogServicesVtbl * lpVtbl;
};

struct _struct_656 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
};

struct _POINTL {
    LONG x;
    LONG y;
};

struct _struct_657 {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
};

union _union_655 {
    struct _struct_656 field0;
    struct _struct_657 field1;
};

union _union_658 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _devicemodeA {
    BYTE dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_655 field_0x2c;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    BYTE dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_658 field_0x74;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

struct IPrintDialogServicesVtbl {
    HRESULT (* QueryInterface)(struct IPrintDialogServices *, IID *, LPVOID *);
    ULONG (* AddRef)(struct IPrintDialogServices *);
    ULONG (* Release)(struct IPrintDialogServices *);
    HRESULT (* GetCurrentDevMode)(struct IPrintDialogServices *, LPDEVMODE, UINT *);
    HRESULT (* GetCurrentPrinterName)(struct IPrintDialogServices *, LPWSTR, UINT *);
    HRESULT (* GetCurrentPortName)(struct IPrintDialogServices *, LPWSTR, UINT *);
};

typedef struct tagCHOOSECOLORA * LPCHOOSECOLORA;

typedef LPCHOOSECOLORA LPCHOOSECOLOR;

typedef struct tagCHOOSECOLORW * LPCHOOSECOLORW;

typedef CHOOSEFONTA * LPCHOOSEFONTA;

typedef LPCHOOSEFONTA LPCHOOSEFONT;

typedef CHOOSEFONTW * LPCHOOSEFONTW;

typedef DEVNAMES * LPDEVNAMES;

typedef struct tagFINDREPLACEA * LPFINDREPLACEA;

typedef LPFINDREPLACEA LPFINDREPLACE;

typedef struct tagFINDREPLACEW * LPFINDREPLACEW;

typedef struct _OFNOTIFYA * LPOFNOTIFYA;

typedef LPOFNOTIFYA LPOFNOTIFY;

typedef struct _OFNOTIFYEXA * LPOFNOTIFYEXA;

typedef LPOFNOTIFYEXA LPOFNOTIFYEX;

typedef struct _OFNOTIFYEXW * LPOFNOTIFYEXW;

typedef struct _OFNOTIFYW * LPOFNOTIFYW;

typedef LPOPENFILENAMEA LPOPENFILENAME;

typedef struct tagOFN_NT4A tagOFN_NT4A, *PtagOFN_NT4A;

typedef struct tagOFN_NT4A * LPOPENFILENAME_NT4A;

typedef LPOPENFILENAME_NT4A LPOPENFILENAME_NT4;

struct tagOFN_NT4A {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpstrFilter;
    LPSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPSTR lpstrFile;
    DWORD nMaxFile;
    LPSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCSTR lpstrInitialDir;
    LPCSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCSTR lpTemplateName;
};

typedef struct tagOFN_NT4W tagOFN_NT4W, *PtagOFN_NT4W;

typedef struct tagOFN_NT4W * LPOPENFILENAME_NT4W;

struct tagOFN_NT4W {
    DWORD lStructSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpstrFilter;
    LPWSTR lpstrCustomFilter;
    DWORD nMaxCustFilter;
    DWORD nFilterIndex;
    LPWSTR lpstrFile;
    DWORD nMaxFile;
    LPWSTR lpstrFileTitle;
    DWORD nMaxFileTitle;
    LPCWSTR lpstrInitialDir;
    LPCWSTR lpstrTitle;
    DWORD Flags;
    WORD nFileOffset;
    WORD nFileExtension;
    LPCWSTR lpstrDefExt;
    LPARAM lCustData;
    LPOFNHOOKPROC lpfnHook;
    LPCWSTR lpTemplateName;
};

typedef UINT_PTR (* LPPAGEPAINTHOOK)(HWND, UINT, WPARAM, LPARAM);

typedef struct tagPSDA tagPSDA, *PtagPSDA;

typedef struct tagPSDA * LPPAGESETUPDLGA;

typedef LPPAGESETUPDLGA LPPAGESETUPDLG;

typedef HANDLE HGLOBAL;

typedef UINT_PTR (* LPPAGESETUPHOOK)(HWND, UINT, WPARAM, LPARAM);

struct tagPSDA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    DWORD Flags;
    POINT ptPaperSize;
    RECT rtMinMargin;
    RECT rtMargin;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPAGESETUPHOOK lpfnPageSetupHook;
    LPPAGEPAINTHOOK lpfnPagePaintHook;
    LPCSTR lpPageSetupTemplateName;
    HGLOBAL hPageSetupTemplate;
};

typedef struct tagPSDW tagPSDW, *PtagPSDW;

typedef struct tagPSDW * LPPAGESETUPDLGW;

struct tagPSDW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    DWORD Flags;
    POINT ptPaperSize;
    RECT rtMinMargin;
    RECT rtMargin;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPAGESETUPHOOK lpfnPageSetupHook;
    LPPAGEPAINTHOOK lpfnPagePaintHook;
    LPCWSTR lpPageSetupTemplateName;
    HGLOBAL hPageSetupTemplate;
};

typedef struct tagPDA tagPDA, *PtagPDA;

typedef struct tagPDA * LPPRINTDLGA;

typedef LPPRINTDLGA LPPRINTDLG;

typedef UINT_PTR (* LPPRINTHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

typedef UINT_PTR (* LPSETUPHOOKPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagPDA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    WORD nFromPage;
    WORD nToPage;
    WORD nMinPage;
    WORD nMaxPage;
    WORD nCopies;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPRINTHOOKPROC lpfnPrintHook;
    LPSETUPHOOKPROC lpfnSetupHook;
    LPCSTR lpPrintTemplateName;
    LPCSTR lpSetupTemplateName;
    HGLOBAL hPrintTemplate;
    HGLOBAL hSetupTemplate;
};

typedef struct tagPDEXA tagPDEXA, *PtagPDEXA;

typedef struct tagPDEXA * LPPRINTDLGEXA;

typedef LPPRINTDLGEXA LPPRINTDLGEX;

typedef struct tagPRINTPAGERANGE tagPRINTPAGERANGE, *PtagPRINTPAGERANGE;

typedef struct tagPRINTPAGERANGE PRINTPAGERANGE;

typedef PRINTPAGERANGE * LPPRINTPAGERANGE;

typedef struct IUnknown IUnknown, *PIUnknown;

typedef struct IUnknown * LPUNKNOWN;

typedef struct _PSP _PSP, *P_PSP;

typedef struct _PSP * HPROPSHEETPAGE;

typedef struct IUnknownVtbl IUnknownVtbl, *PIUnknownVtbl;

struct _PSP {
};

struct tagPDEXA {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    DWORD Flags2;
    DWORD ExclusionFlags;
    DWORD nPageRanges;
    DWORD nMaxPageRanges;
    LPPRINTPAGERANGE lpPageRanges;
    DWORD nMinPage;
    DWORD nMaxPage;
    DWORD nCopies;
    HINSTANCE hInstance;
    LPCSTR lpPrintTemplateName;
    LPUNKNOWN lpCallback;
    DWORD nPropertyPages;
    HPROPSHEETPAGE * lphPropertyPages;
    DWORD nStartPage;
    DWORD dwResultAction;
};

struct IUnknownVtbl {
    HRESULT (* QueryInterface)(struct IUnknown *, IID *, void * *);
    ULONG (* AddRef)(struct IUnknown *);
    ULONG (* Release)(struct IUnknown *);
};

struct IUnknown {
    struct IUnknownVtbl * lpVtbl;
};

struct tagPRINTPAGERANGE {
    DWORD nFromPage;
    DWORD nToPage;
};

typedef struct tagPDEXW tagPDEXW, *PtagPDEXW;

typedef struct tagPDEXW * LPPRINTDLGEXW;

struct tagPDEXW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    DWORD Flags2;
    DWORD ExclusionFlags;
    DWORD nPageRanges;
    DWORD nMaxPageRanges;
    LPPRINTPAGERANGE lpPageRanges;
    DWORD nMinPage;
    DWORD nMaxPage;
    DWORD nCopies;
    HINSTANCE hInstance;
    LPCWSTR lpPrintTemplateName;
    LPUNKNOWN lpCallback;
    DWORD nPropertyPages;
    HPROPSHEETPAGE * lphPropertyPages;
    DWORD nStartPage;
    DWORD dwResultAction;
};

typedef struct tagPDW tagPDW, *PtagPDW;

typedef struct tagPDW * LPPRINTDLGW;

struct tagPDW {
    DWORD lStructSize;
    HWND hwndOwner;
    HGLOBAL hDevMode;
    HGLOBAL hDevNames;
    HDC hDC;
    DWORD Flags;
    WORD nFromPage;
    WORD nToPage;
    WORD nMinPage;
    WORD nMaxPage;
    WORD nCopies;
    HINSTANCE hInstance;
    LPARAM lCustData;
    LPPRINTHOOKPROC lpfnPrintHook;
    LPSETUPHOOKPROC lpfnSetupHook;
    LPCWSTR lpPrintTemplateName;
    LPCWSTR lpSetupTemplateName;
    HGLOBAL hPrintTemplate;
    HGLOBAL hSetupTemplate;
};

typedef struct _OFNOTIFYA OFNOTIFYA;

typedef OFNOTIFYA OFNOTIFY;

typedef struct _OFNOTIFYEXA OFNOTIFYEXA;

typedef OFNOTIFYEXA OFNOTIFYEX;

typedef struct _OFNOTIFYEXW OFNOTIFYEXW;

typedef struct _OFNOTIFYW OFNOTIFYW;

typedef struct tagOFNA OPENFILENAMEA;

typedef OPENFILENAMEA OPENFILENAME;

typedef struct tagOFN_NT4A OPENFILENAME_NT4A;

typedef OPENFILENAME_NT4A OPENFILENAME_NT4;

typedef struct tagOFN_NT4W OPENFILENAME_NT4W;

typedef struct tagOFNW OPENFILENAMEW;

typedef struct tagPSDA PAGESETUPDLGA;

typedef PAGESETUPDLGA PAGESETUPDLG;

typedef struct tagPSDW PAGESETUPDLGW;

typedef CHOOSEFONTA * PCCHOOSEFONTA;

typedef PCCHOOSEFONTA PCCHOOSEFONT;

typedef CHOOSEFONTW * PCCHOOSEFONTW;

typedef DEVNAMES * PCDEVNAMES;

typedef PRINTPAGERANGE * PCPRINTPAGERANGE;

typedef struct tagPDA PRINTDLGA;

typedef PRINTDLGA PRINTDLG;

typedef struct tagPDEXA PRINTDLGEXA;

typedef PRINTDLGEXA PRINTDLGEX;

typedef struct tagPDEXW PRINTDLGEXW;

typedef struct tagPDW PRINTDLGW;

#define WEOF 65535

#define _CLIENT_BLOCK 4

#define _CRT_ASSERT 2

#define _CRT_BLOCK 2

#define _CRT_ERRCNT 3

#define _CRT_ERROR 1

#define _CRT_RPTHOOK_INSTALL 0

#define _CRT_RPTHOOK_REMOVE 1

#define _CRT_WARN 0

#define _CrtCheckMemory 1

#define _CRTDBG_ALLOC_MEM_DF 1

#define _CRTDBG_CHECK_ALWAYS_DF 4

#define _CRTDBG_CHECK_CRT_DF 16

#define _CRTDBG_CHECK_DEFAULT_DF 0

#define _CRTDBG_CHECK_EVERY_1024_DF 67108864

#define _CRTDBG_CHECK_EVERY_128_DF 8388608

#define _CRTDBG_CHECK_EVERY_16_DF 1048576

#define _CRTDBG_DELAY_FREE_MEM_DF 2

#define _CRTDBG_FILE_STDERR -5

#define _CRTDBG_FILE_STDOUT -4

#define _CRTDBG_HFILE_ERROR -2

#define _CRTDBG_INVALID_HFILE -1

#define _CRTDBG_LEAK_CHECK_DF 32

#define _CRTDBG_MODE_DEBUG 2

#define _CRTDBG_MODE_FILE 1

#define _CRTDBG_MODE_WNDW 4

#define _CRTDBG_REPORT_FILE -6

#define _CRTDBG_REPORT_FLAG -1

#define _CRTDBG_REPORT_MODE -1

#define _CRTDBG_RESERVED_DF 8

#define _CrtDbgBreak 0

#define _CrtDumpMemoryLeaks 0

#define _CrtGetAllocHook 0

#define _CrtGetCheckCount 0

#define _CrtGetDumpClient 0

#define _CrtGetReportHook 0

#define _FREE_BLOCK 0

#define _HOOK_ALLOC 1

#define _HOOK_FREE 3

#define _HOOK_REALLOC 2

#define _IGNORE_BLOCK 3

#define _MAX_BLOCKS 5

#define _NORMAL_BLOCK 1

typedef uint size_t;

typedef int (* _CRT_ALLOC_HOOK)(int, void *, size_t, int, long, uchar *, int);

typedef void (* _CRT_DUMP_CLIENT)(void *, size_t);

typedef int (* _CRT_REPORT_HOOK)(int, char *, int *);

typedef int (* _CRT_REPORT_HOOKW)(int, wchar_t *, int *);

typedef struct _CrtMemBlockHeader _CrtMemBlockHeader, *P_CrtMemBlockHeader;

struct _CrtMemBlockHeader {
};

typedef struct _CrtMemState _CrtMemState, *P_CrtMemState;

struct _CrtMemState {
    struct _CrtMemBlockHeader * pBlockHeader;
    size_t lCounts[5];
    size_t lSizes[5];
    size_t lHighWaterCount;
    size_t lTotalCount;
};

typedef void * _HFILE;

#define __GOT_SECURE_LIB__ 200411

#define __STDC_SECURE_LIB__ 200411

#define __STDC_WANT_SECURE_LIB__ 1

#define _ARGMAX 100

#define _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE 0

#define _CRT_BUILD_DESKTOP_APP 1

#define _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES 0

#define _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY 0

#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 0

#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT 0

#define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY 0

#define _SECURECRT_FILL_BUFFER_PATTERN 254

#define _TRUNCATE -1

typedef struct __lc_time_data __lc_time_data, *P__lc_time_data;

struct __lc_time_data {
    char * wday_abbr[7];
    char * wday[7];
    char * month_abbr[12];
    char * month[12];
    char * ampm[2];
    char * ww_sdatefmt;
    char * ww_ldatefmt;
    char * ww_timefmt;
    int ww_caltype;
    int refcount;
    wchar_t * _W_wday_abbr[7];
    wchar_t * _W_wday[7];
    wchar_t * _W_month_abbr[12];
    wchar_t * _W_month[12];
    wchar_t * _W_ampm[2];
    wchar_t * _W_ww_sdatefmt;
    wchar_t * _W_ww_ldatefmt;
    wchar_t * _W_ww_timefmt;
    wchar_t * _W_ww_locale_name;
};

typedef long __time32_t;

typedef longlong __time64_t;

typedef struct localeinfo_struct localeinfo_struct, *Plocaleinfo_struct;

typedef struct localeinfo_struct * _locale_t;

typedef struct threadlocaleinfostruct threadlocaleinfostruct, *Pthreadlocaleinfostruct;

typedef struct threadlocaleinfostruct * pthreadlocinfo;

typedef struct threadmbcinfostruct threadmbcinfostruct, *Pthreadmbcinfostruct;

typedef struct threadmbcinfostruct * pthreadmbcinfo;

typedef struct localerefcount localerefcount, *Plocalerefcount;

typedef struct localerefcount locrefcount;

typedef struct lconv lconv, *Plconv;

struct lconv {
    char * decimal_point;
    char * thousands_sep;
    char * grouping;
    char * int_curr_symbol;
    char * currency_symbol;
    char * mon_decimal_point;
    char * mon_thousands_sep;
    char * mon_grouping;
    char * positive_sign;
    char * negative_sign;
    char int_frac_digits;
    char frac_digits;
    char p_cs_precedes;
    char p_sep_by_space;
    char n_cs_precedes;
    char n_sep_by_space;
    char p_sign_posn;
    char n_sign_posn;
    wchar_t * _W_decimal_point;
    wchar_t * _W_thousands_sep;
    wchar_t * _W_int_curr_symbol;
    wchar_t * _W_currency_symbol;
    wchar_t * _W_mon_decimal_point;
    wchar_t * _W_mon_thousands_sep;
    wchar_t * _W_positive_sign;
    wchar_t * _W_negative_sign;
};

struct localerefcount {
    char * locale;
    wchar_t * wlocale;
    int * refcount;
    int * wrefcount;
};

struct threadlocaleinfostruct {
    int refcount;
    uint lc_codepage;
    uint lc_collate_cp;
    uint lc_time_cp;
    locrefcount lc_category[6];
    int lc_clike;
    int mb_cur_max;
    int * lconv_intl_refcount;
    int * lconv_num_refcount;
    int * lconv_mon_refcount;
    struct lconv * lconv;
    int * ctype1_refcount;
    ushort * ctype1;
    ushort * pctype;
    uchar * pclmap;
    uchar * pcumap;
    struct __lc_time_data * lc_time_curr;
    wchar_t * locale_name[6];
};

struct threadmbcinfostruct {
    int refcount;
    int mbcodepage;
    int ismbcodepage;
    ushort mbulinfo[6];
    uchar mbctype[257];
    uchar mbcasemap[256];
    wchar_t * mblocalename;
};

struct localeinfo_struct {
    pthreadlocinfo locinfo;
    pthreadmbcinfo mbcinfo;
};

typedef struct localeinfo_struct _locale_tstruct;

typedef int errno_t;

typedef int intptr_t;

typedef int ptrdiff_t;

typedef size_t rsize_t;

typedef struct threadlocaleinfostruct threadlocinfo;

typedef __time64_t time_t;

typedef ushort wctype_t;

typedef ushort wint_t;

#define _VC_CRT_BUILD_VERSION 50727

#define _VC_CRT_MAJOR_VERSION 11

#define _VC_CRT_MINOR_VERSION 0

#define _VC_CRT_RBUILD_VERSION 1

#define _CRTWRN_WNUMBER__DEPRECATE_STATIC_CPPLIB 1007

#define _CRTWRN_WNUMBER__NO_SPECIAL_TRANSFER 1004

#define CERT_CREDENTIAL_PROVIDER_ID -509

#define CRYPTUI_ACCEPT_DECLINE_STYLE 64

#define CRYPTUI_CACHE_ONLY_URL_RETRIEVAL 262144

#define CRYPTUI_CERT_MGR_PUBLISHER_TAB 4

#define CRYPTUI_CERT_MGR_SINGLE_TAB_FLAG 32768

#define CRYPTUI_CERT_MGR_TAB_MASK 15

#define CRYPTUI_DISABLE_ADDTOSTORE 16

#define CRYPTUI_DISABLE_EDITPROPERTIES 4

#define CRYPTUI_DISABLE_EXPORT 8192

#define CRYPTUI_DISABLE_HTMLLINK 65536

#define CRYPTUI_DISABLE_ISSUERSTATEMENT 131072

#define CRYPTUI_DONT_OPEN_STORES 256

#define CRYPTUI_ENABLE_ADDTOSTORE 32

#define CRYPTUI_ENABLE_EDITPROPERTIES 8

#define CRYPTUI_ENABLE_REVOCATION_CHECK_CHAIN 32768

#define CRYPTUI_ENABLE_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 2048

#define CRYPTUI_ENABLE_REVOCATION_CHECK_END_CERT 16384

#define CRYPTUI_ENABLE_REVOCATION_CHECKING 2048

#define CRYPTUI_HIDE_DETAILPAGE 2

#define CRYPTUI_HIDE_HIERARCHYPAGE 1

#define CRYPTUI_IGNORE_UNTRUSTED_ROOT 128

#define CRYPTUI_ONLY_OPEN_ROOT_STORE 512

#define CRYPTUI_SELECT_EXPIRATION_COLUMN 32

#define CRYPTUI_SELECT_FRIENDLYNAME_COLUMN 8

#define CRYPTUI_SELECT_INTENDEDUSE_COLUMN 4

#define CRYPTUI_SELECT_ISSUEDBY_COLUMN 2

#define CRYPTUI_SELECT_ISSUEDTO_COLUMN 1

#define CRYPTUI_SELECT_LOCATION_COLUMN 16

#define CRYPTUI_WARN_REMOTE_TRUST 4096

#define CRYPTUI_WARN_UNTRUSTED_ROOT 1024

#define CRYPTUI_WIZ_DIGITAL_SIGN_ADD_CHAIN 1

#define CRYPTUI_WIZ_DIGITAL_SIGN_ADD_CHAIN_NO_ROOT 2

#define CRYPTUI_WIZ_DIGITAL_SIGN_CERT 1

#define CRYPTUI_WIZ_DIGITAL_SIGN_COMMERCIAL 1

#define CRYPTUI_WIZ_DIGITAL_SIGN_EXCLUDE_PAGE_HASHES 2

#define CRYPTUI_WIZ_DIGITAL_SIGN_INCLUDE_PAGE_HASHES 4

#define CRYPTUI_WIZ_DIGITAL_SIGN_INDIVIDUAL 2

#define CRYPTUI_WIZ_DIGITAL_SIGN_PVK 3

#define CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE 1

#define CRYPTUI_WIZ_DIGITAL_SIGN_PVK_PROV 2

#define CRYPTUI_WIZ_DIGITAL_SIGN_STORE 2

#define CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_BLOB 2

#define CRYPTUI_WIZ_DIGITAL_SIGN_SUBJECT_FILE 1

#define CRYPTUI_WIZ_EXPORT_CERT_CONTEXT 1

#define CRYPTUI_WIZ_EXPORT_CERT_STORE 4

#define CRYPTUI_WIZ_EXPORT_CERT_STORE_CERTIFICATES_ONLY 5

#define CRYPTUI_WIZ_EXPORT_CRL_CONTEXT 3

#define CRYPTUI_WIZ_EXPORT_CTL_CONTEXT 2

#define CRYPTUI_WIZ_EXPORT_FORMAT_BASE64 4

#define CRYPTUI_WIZ_EXPORT_FORMAT_CRL 6

#define CRYPTUI_WIZ_EXPORT_FORMAT_CTL 7

#define CRYPTUI_WIZ_EXPORT_FORMAT_DER 1

#define CRYPTUI_WIZ_EXPORT_FORMAT_PFX 2

#define CRYPTUI_WIZ_EXPORT_FORMAT_PKCS7 3

#define CRYPTUI_WIZ_EXPORT_FORMAT_SERIALIZED_CERT_STORE 5

#define CRYPTUI_WIZ_IMPORT_ALLOW_CERT 131072

#define CRYPTUI_WIZ_IMPORT_ALLOW_CRL 262144

#define CRYPTUI_WIZ_IMPORT_ALLOW_CTL 524288

#define CRYPTUI_WIZ_IMPORT_NO_CHANGE_DEST_STORE 65536

#define CRYPTUI_WIZ_IMPORT_REMOTE_DEST_STORE 4194304

#define CRYPTUI_WIZ_IMPORT_SUBJECT_CERT_CONTEXT 2

#define CRYPTUI_WIZ_IMPORT_SUBJECT_CERT_STORE 5

#define CRYPTUI_WIZ_IMPORT_SUBJECT_CRL_CONTEXT 4

#define CRYPTUI_WIZ_IMPORT_SUBJECT_CTL_CONTEXT 3

#define CRYPTUI_WIZ_IMPORT_SUBJECT_FILE 1

#define CRYPTUI_WIZ_IMPORT_TO_CURRENTUSER 2097152

#define CRYPTUI_WIZ_IMPORT_TO_LOCALMACHINE 1048576

#define CRYPTUI_WIZ_NO_UI 1

typedef struct _CRYPTUI_CERT_MGR_STRUCT _CRYPTUI_CERT_MGR_STRUCT, *P_CRYPTUI_CERT_MGR_STRUCT;

struct _CRYPTUI_CERT_MGR_STRUCT {
    DWORD dwSize;
    HWND hwndParent;
    DWORD dwFlags;
    LPCWSTR pwszTitle;
    LPCSTR pszInitUsageOID;
};

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO _CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO, *P_CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO;

struct _CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO {
    DWORD dwSize;
    GUID * pGuidSubject;
    DWORD cbBlob;
    BYTE * pbBlob;
    LPCWSTR pwszDisplayName;
};

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO _CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO, *P_CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO;

typedef union _union_5533 _union_5533, *P_union_5533;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO _CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO, *P_CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO * PCCRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO;

typedef struct _CRYPT_KEY_PROV_INFO _CRYPT_KEY_PROV_INFO, *P_CRYPT_KEY_PROV_INFO;

typedef struct _CRYPT_KEY_PROV_INFO * PCRYPT_KEY_PROV_INFO;

typedef struct _CRYPT_KEY_PROV_PARAM _CRYPT_KEY_PROV_PARAM, *P_CRYPT_KEY_PROV_PARAM;

typedef struct _CRYPT_KEY_PROV_PARAM * PCRYPT_KEY_PROV_PARAM;

union _union_5533 {
    PCCRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO pPvkFileInfo;
    PCRYPT_KEY_PROV_INFO pPvkProvInfo;
};

struct _CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO {
    DWORD dwSize;
    LPWSTR pwszSigningCertFileName;
    DWORD dwPvkChoice;
    union _union_5533 field_0xc;
};

struct _CRYPT_KEY_PROV_PARAM {
    DWORD dwParam;
    BYTE * pbData;
    DWORD cbData;
    DWORD dwFlags;
};

struct _CRYPT_KEY_PROV_INFO {
    LPWSTR pwszContainerName;
    LPWSTR pwszProvName;
    DWORD dwProvType;
    DWORD dwFlags;
    DWORD cProvParam;
    PCRYPT_KEY_PROV_PARAM rgProvParam;
    DWORD dwKeySpec;
};

struct _CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO {
    DWORD dwSize;
    LPWSTR pwszPvkFileName;
    LPWSTR pwszProvName;
    DWORD dwProvType;
};

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT _CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT, *P_CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT;

struct _CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT {
    DWORD dwSize;
    DWORD cbBlob;
    BYTE * pbBlob;
};

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO _CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO, *P_CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO;

typedef void * HCERTSTORE;

typedef struct _CRYPT_ATTRIBUTES _CRYPT_ATTRIBUTES, *P_CRYPT_ATTRIBUTES;

typedef struct _CRYPT_ATTRIBUTES * PCRYPT_ATTRIBUTES;

typedef struct _CRYPT_ATTRIBUTE _CRYPT_ATTRIBUTE, *P_CRYPT_ATTRIBUTE;

typedef struct _CRYPT_ATTRIBUTE * PCRYPT_ATTRIBUTE;

typedef struct _CRYPTOAPI_BLOB _CRYPTOAPI_BLOB, *P_CRYPTOAPI_BLOB;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_ATTR_BLOB;

struct _CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO {
    DWORD dwSize;
    DWORD dwAttrFlags;
    LPCWSTR pwszDescription;
    LPCWSTR pwszMoreInfoLocation;
    LPCSTR pszHashAlg;
    LPCWSTR pwszSigningCertDisplayString;
    HCERTSTORE hAdditionalCertStore;
    PCRYPT_ATTRIBUTES psAuthenticated;
    PCRYPT_ATTRIBUTES psUnauthenticated;
};

struct _CRYPT_ATTRIBUTES {
    DWORD cAttr;
    PCRYPT_ATTRIBUTE rgAttr;
};

struct _CRYPTOAPI_BLOB {
    DWORD cbData;
    BYTE * pbData;
};

struct _CRYPT_ATTRIBUTE {
    LPSTR pszObjId;
    DWORD cValue;
    PCRYPT_ATTR_BLOB rgValue;
};

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_INFO _CRYPTUI_WIZ_DIGITAL_SIGN_INFO, *P_CRYPTUI_WIZ_DIGITAL_SIGN_INFO;

typedef union _union_5536 _union_5536, *P_union_5536;

typedef union _union_5537 _union_5537, *P_union_5537;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO * PCCRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO * PCCRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO;

typedef struct _CERT_CONTEXT _CERT_CONTEXT, *P_CERT_CONTEXT;

typedef struct _CERT_CONTEXT CERT_CONTEXT;

typedef CERT_CONTEXT * PCCERT_CONTEXT;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO _CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO, *P_CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO * PCCRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO * PCCRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO;

typedef struct _CERT_INFO _CERT_INFO, *P_CERT_INFO;

typedef struct _CERT_INFO * PCERT_INFO;

typedef BOOL (* PFNCFILTERPROC)(PCCERT_CONTEXT, BOOL *, void *);

typedef struct _CRYPTOAPI_BLOB CRYPT_INTEGER_BLOB;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER _CRYPT_ALGORITHM_IDENTIFIER, *P_CRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER CRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CRYPTOAPI_BLOB CERT_NAME_BLOB;

typedef struct _CERT_PUBLIC_KEY_INFO _CERT_PUBLIC_KEY_INFO, *P_CERT_PUBLIC_KEY_INFO;

typedef struct _CERT_PUBLIC_KEY_INFO CERT_PUBLIC_KEY_INFO;

typedef struct _CRYPT_BIT_BLOB _CRYPT_BIT_BLOB, *P_CRYPT_BIT_BLOB;

typedef struct _CRYPT_BIT_BLOB CRYPT_BIT_BLOB;

typedef struct _CERT_EXTENSION _CERT_EXTENSION, *P_CERT_EXTENSION;

typedef struct _CERT_EXTENSION * PCERT_EXTENSION;

typedef struct _CRYPTOAPI_BLOB CRYPT_OBJID_BLOB;

struct _CRYPT_ALGORITHM_IDENTIFIER {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Parameters;
};

struct _CRYPT_BIT_BLOB {
    DWORD cbData;
    BYTE * pbData;
    DWORD cUnusedBits;
};

struct _CERT_PUBLIC_KEY_INFO {
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_BIT_BLOB PublicKey;
};

struct _CERT_INFO {
    DWORD dwVersion;
    CRYPT_INTEGER_BLOB SerialNumber;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CERT_NAME_BLOB Issuer;
    FILETIME NotBefore;
    FILETIME NotAfter;
    CERT_NAME_BLOB Subject;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    CRYPT_BIT_BLOB IssuerUniqueId;
    CRYPT_BIT_BLOB SubjectUniqueId;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

union _union_5537 {
    PCCERT_CONTEXT pSigningCertContext;
    PCCRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO pSigningCertStore;
    PCCRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO pSigningCertPvkInfo;
};

union _union_5536 {
    LPCWSTR pwszFileName;
    PCCRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO pSignBlobInfo;
};

struct _CRYPTUI_WIZ_DIGITAL_SIGN_INFO {
    DWORD dwSize;
    DWORD dwSubjectChoice;
    union _union_5536 field_0x8;
    DWORD dwSigningCertChoice;
    union _union_5537 field_0x10;
    LPCWSTR pwszTimestampURL;
    DWORD dwAdditionalCertChoice;
    PCCRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO pSignExtInfo;
};

struct _CERT_EXTENSION {
    LPSTR pszObjId;
    BOOL fCritical;
    CRYPT_OBJID_BLOB Value;
};

struct _CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO {
    DWORD dwSize;
    DWORD cCertStore;
    HCERTSTORE * rghCertStore;
    PFNCFILTERPROC pFilterCallback;
    void * pvCallbackData;
};

struct _CERT_CONTEXT {
    DWORD dwCertEncodingType;
    BYTE * pbCertEncoded;
    DWORD cbCertEncoded;
    PCERT_INFO pCertInfo;
    HCERTSTORE hCertStore;
};

typedef struct _CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO _CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO, *P_CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO;

struct _CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO {
    DWORD dwSize;
    DWORD dwExportFormat;
    BOOL fExportChain;
    BOOL fExportPrivateKeys;
    LPCWSTR pwszPassword;
    BOOL fStrongEncryption;
};

typedef struct _CRYPTUI_WIZ_EXPORT_INFO _CRYPTUI_WIZ_EXPORT_INFO, *P_CRYPTUI_WIZ_EXPORT_INFO;

typedef union _union_5545 _union_5545, *P_union_5545;

typedef struct _CTL_CONTEXT _CTL_CONTEXT, *P_CTL_CONTEXT;

typedef struct _CTL_CONTEXT CTL_CONTEXT;

typedef CTL_CONTEXT * PCCTL_CONTEXT;

typedef struct _CRL_CONTEXT _CRL_CONTEXT, *P_CRL_CONTEXT;

typedef struct _CRL_CONTEXT CRL_CONTEXT;

typedef CRL_CONTEXT * PCCRL_CONTEXT;

typedef struct _CTL_INFO _CTL_INFO, *P_CTL_INFO;

typedef struct _CTL_INFO * PCTL_INFO;

typedef void * HCRYPTMSG;

typedef struct _CRL_INFO _CRL_INFO, *P_CRL_INFO;

typedef struct _CRL_INFO * PCRL_INFO;

typedef struct _CTL_USAGE _CTL_USAGE, *P_CTL_USAGE;

typedef struct _CTL_USAGE CTL_USAGE;

typedef struct _CRYPTOAPI_BLOB CRYPT_DATA_BLOB;

typedef struct _CTL_ENTRY _CTL_ENTRY, *P_CTL_ENTRY;

typedef struct _CTL_ENTRY * PCTL_ENTRY;

typedef struct _CRL_ENTRY _CRL_ENTRY, *P_CRL_ENTRY;

typedef struct _CRL_ENTRY * PCRL_ENTRY;

struct _CRL_ENTRY {
    CRYPT_INTEGER_BLOB SerialNumber;
    FILETIME RevocationDate;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CTL_USAGE {
    DWORD cUsageIdentifier;
    LPSTR * rgpszUsageIdentifier;
};

struct _CTL_CONTEXT {
    DWORD dwMsgAndCertEncodingType;
    BYTE * pbCtlEncoded;
    DWORD cbCtlEncoded;
    PCTL_INFO pCtlInfo;
    HCERTSTORE hCertStore;
    HCRYPTMSG hCryptMsg;
    BYTE * pbCtlContent;
    DWORD cbCtlContent;
};

struct _CRL_INFO {
    DWORD dwVersion;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CERT_NAME_BLOB Issuer;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    DWORD cCRLEntry;
    PCRL_ENTRY rgCRLEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

union _union_5545 {
    PCCERT_CONTEXT pCertContext;
    PCCTL_CONTEXT pCTLContext;
    PCCRL_CONTEXT pCRLContext;
    HCERTSTORE hCertStore;
};

struct _CRYPTUI_WIZ_EXPORT_INFO {
    DWORD dwSize;
    LPCWSTR pwszExportFileName;
    DWORD dwSubjectChoice;
    union _union_5545 field_0xc;
    DWORD cStores;
    HCERTSTORE * rghStores;
};

struct _CTL_ENTRY {
    CRYPT_DATA_BLOB SubjectIdentifier;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

struct _CTL_INFO {
    DWORD dwVersion;
    CTL_USAGE SubjectUsage;
    CRYPT_DATA_BLOB ListIdentifier;
    CRYPT_INTEGER_BLOB SequenceNumber;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    DWORD cCTLEntry;
    PCTL_ENTRY rgCTLEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _CRL_CONTEXT {
    DWORD dwCertEncodingType;
    BYTE * pbCrlEncoded;
    DWORD cbCrlEncoded;
    PCRL_INFO pCrlInfo;
    HCERTSTORE hCertStore;
};

typedef struct _CRYPTUI_WIZ_IMPORT_SUBJECT_INFO _CRYPTUI_WIZ_IMPORT_SUBJECT_INFO, *P_CRYPTUI_WIZ_IMPORT_SUBJECT_INFO;

typedef union _union_5548 _union_5548, *P_union_5548;

union _union_5548 {
    LPCWSTR pwszFileName;
    PCCERT_CONTEXT pCertContext;
    PCCTL_CONTEXT pCTLContext;
    PCCRL_CONTEXT pCRLContext;
    HCERTSTORE hCertStore;
};

struct _CRYPTUI_WIZ_IMPORT_SUBJECT_INFO {
    DWORD dwSize;
    DWORD dwSubjectChoice;
    union _union_5548 field_0x8;
    DWORD dwFlags;
    LPCWSTR pwszPassword;
};

typedef union _union_5541 _union_5541, *P_union_5541;

typedef struct _CRYPT_PROVIDER_DATA _CRYPT_PROVIDER_DATA, *P_CRYPT_PROVIDER_DATA;

typedef struct _CRYPT_PROVIDER_DATA CRYPT_PROVIDER_DATA;

typedef struct _WINTRUST_DATA _WINTRUST_DATA, *P_WINTRUST_DATA;

typedef struct _WINTRUST_DATA WINTRUST_DATA;

typedef ULONG_PTR HCRYPTPROV;

typedef struct _CRYPT_PROVIDER_FUNCTIONS _CRYPT_PROVIDER_FUNCTIONS, *P_CRYPT_PROVIDER_FUNCTIONS;

typedef struct _CRYPT_PROVIDER_SGNR _CRYPT_PROVIDER_SGNR, *P_CRYPT_PROVIDER_SGNR;

typedef struct _CRYPT_PROVIDER_PRIVDATA _CRYPT_PROVIDER_PRIVDATA, *P_CRYPT_PROVIDER_PRIVDATA;

typedef union _union_5400 _union_5400, *P_union_5400;

typedef struct _CERT_USAGE_MATCH _CERT_USAGE_MATCH, *P_CERT_USAGE_MATCH;

typedef struct _CERT_USAGE_MATCH * PCERT_USAGE_MATCH;

typedef union _union_5368 _union_5368, *P_union_5368;

typedef void * (* PFN_CPD_MEM_ALLOC)(DWORD);

typedef void (* PFN_CPD_MEM_FREE)(void *);

typedef BOOL (* PFN_CPD_ADD_STORE)(struct _CRYPT_PROVIDER_DATA *, HCERTSTORE);

typedef BOOL (* PFN_CPD_ADD_SGNR)(struct _CRYPT_PROVIDER_DATA *, BOOL, DWORD, struct _CRYPT_PROVIDER_SGNR *);

typedef BOOL (* PFN_CPD_ADD_CERT)(struct _CRYPT_PROVIDER_DATA *, DWORD, BOOL, DWORD, PCCERT_CONTEXT);

typedef BOOL (* PFN_CPD_ADD_PRIVDATA)(struct _CRYPT_PROVIDER_DATA *, struct _CRYPT_PROVIDER_PRIVDATA *);

typedef HRESULT (* PFN_PROVIDER_INIT_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef HRESULT (* PFN_PROVIDER_OBJTRUST_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef HRESULT (* PFN_PROVIDER_SIGTRUST_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef HRESULT (* PFN_PROVIDER_CERTTRUST_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef HRESULT (* PFN_PROVIDER_FINALPOLICY_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef BOOL (* PFN_PROVIDER_CERTCHKPOLICY_CALL)(struct _CRYPT_PROVIDER_DATA *, DWORD, BOOL, DWORD);

typedef HRESULT (* PFN_PROVIDER_TESTFINALPOLICY_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef struct _CRYPT_PROVUI_FUNCS _CRYPT_PROVUI_FUNCS, *P_CRYPT_PROVUI_FUNCS;

typedef HRESULT (* PFN_PROVIDER_CLEANUP_CALL)(struct _CRYPT_PROVIDER_DATA *);

typedef struct _CRYPT_PROVIDER_CERT _CRYPT_PROVIDER_CERT, *P_CRYPT_PROVIDER_CERT;

typedef struct _CMSG_SIGNER_INFO _CMSG_SIGNER_INFO, *P_CMSG_SIGNER_INFO;

typedef struct _CMSG_SIGNER_INFO CMSG_SIGNER_INFO;

typedef struct _CERT_CHAIN_CONTEXT _CERT_CHAIN_CONTEXT, *P_CERT_CHAIN_CONTEXT;

typedef struct _CERT_CHAIN_CONTEXT CERT_CHAIN_CONTEXT;

typedef CERT_CHAIN_CONTEXT * PCCERT_CHAIN_CONTEXT;

typedef struct _PROVDATA_SIP _PROVDATA_SIP, *P_PROVDATA_SIP;

typedef struct _CTL_USAGE CERT_ENHKEY_USAGE;

typedef struct WINTRUST_FILE_INFO_ WINTRUST_FILE_INFO_, *PWINTRUST_FILE_INFO_;

typedef struct WINTRUST_CATALOG_INFO_ WINTRUST_CATALOG_INFO_, *PWINTRUST_CATALOG_INFO_;

typedef struct WINTRUST_BLOB_INFO_ WINTRUST_BLOB_INFO_, *PWINTRUST_BLOB_INFO_;

typedef struct WINTRUST_SGNR_INFO_ WINTRUST_SGNR_INFO_, *PWINTRUST_SGNR_INFO_;

typedef struct WINTRUST_CERT_INFO_ WINTRUST_CERT_INFO_, *PWINTRUST_CERT_INFO_;

typedef struct _CRYPT_PROVUI_DATA _CRYPT_PROVUI_DATA, *P_CRYPT_PROVUI_DATA;

typedef BOOL (* PFN_PROVUI_CALL)(HWND, struct _CRYPT_PROVIDER_DATA *);

typedef struct _CERT_CHAIN_ELEMENT _CERT_CHAIN_ELEMENT, *P_CERT_CHAIN_ELEMENT;

typedef struct _CERT_CHAIN_ELEMENT * PCERT_CHAIN_ELEMENT;

typedef struct _CRYPT_ATTRIBUTES CRYPT_ATTRIBUTES;

typedef struct _CERT_TRUST_STATUS _CERT_TRUST_STATUS, *P_CERT_TRUST_STATUS;

typedef struct _CERT_TRUST_STATUS CERT_TRUST_STATUS;

typedef struct _CERT_SIMPLE_CHAIN _CERT_SIMPLE_CHAIN, *P_CERT_SIMPLE_CHAIN;

typedef struct _CERT_SIMPLE_CHAIN * PCERT_SIMPLE_CHAIN;

typedef struct SIP_DISPATCH_INFO_ SIP_DISPATCH_INFO_, *PSIP_DISPATCH_INFO_;

typedef struct SIP_SUBJECTINFO_ SIP_SUBJECTINFO_, *PSIP_SUBJECTINFO_;

typedef struct SIP_INDIRECT_DATA_ SIP_INDIRECT_DATA_, *PSIP_INDIRECT_DATA_;

typedef struct _CERT_REVOCATION_INFO _CERT_REVOCATION_INFO, *P_CERT_REVOCATION_INFO;

typedef struct _CERT_REVOCATION_INFO * PCERT_REVOCATION_INFO;

typedef struct _CTL_USAGE * PCERT_ENHKEY_USAGE;

typedef struct _CERT_TRUST_LIST_INFO _CERT_TRUST_LIST_INFO, *P_CERT_TRUST_LIST_INFO;

typedef struct _CERT_TRUST_LIST_INFO * PCERT_TRUST_LIST_INFO;

typedef struct SIP_SUBJECTINFO_ SIP_SUBJECTINFO;

typedef BOOL (* pCryptSIPGetSignedDataMsg)(SIP_SUBJECTINFO *, DWORD *, DWORD, DWORD *, BYTE *);

typedef BOOL (* pCryptSIPPutSignedDataMsg)(SIP_SUBJECTINFO *, DWORD, DWORD *, DWORD, BYTE *);

typedef struct SIP_INDIRECT_DATA_ SIP_INDIRECT_DATA;

typedef BOOL (* pCryptSIPCreateIndirectData)(SIP_SUBJECTINFO *, DWORD *, SIP_INDIRECT_DATA *);

typedef BOOL (* pCryptSIPVerifyIndirectData)(SIP_SUBJECTINFO *, SIP_INDIRECT_DATA *);

typedef BOOL (* pCryptSIPRemoveSignedDataMsg)(SIP_SUBJECTINFO *, DWORD);

typedef union _union_5348 _union_5348, *P_union_5348;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE _CRYPT_ATTRIBUTE_TYPE_VALUE, *P_CRYPT_ATTRIBUTE_TYPE_VALUE;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE CRYPT_ATTRIBUTE_TYPE_VALUE;

typedef struct _CRYPTOAPI_BLOB CRYPT_HASH_BLOB;

typedef struct _CERT_REVOCATION_CRL_INFO _CERT_REVOCATION_CRL_INFO, *P_CERT_REVOCATION_CRL_INFO;

typedef struct _CERT_REVOCATION_CRL_INFO * PCERT_REVOCATION_CRL_INFO;

typedef struct MS_ADDINFO_FLAT_ MS_ADDINFO_FLAT_, *PMS_ADDINFO_FLAT_;

typedef struct MS_ADDINFO_CATALOGMEMBER_ MS_ADDINFO_CATALOGMEMBER_, *PMS_ADDINFO_CATALOGMEMBER_;

typedef struct MS_ADDINFO_BLOB_ MS_ADDINFO_BLOB_, *PMS_ADDINFO_BLOB_;

typedef struct CRYPTCATSTORE_ CRYPTCATSTORE_, *PCRYPTCATSTORE_;

typedef struct CRYPTCATMEMBER_ CRYPTCATMEMBER_, *PCRYPTCATMEMBER_;

typedef struct _CRYPTOAPI_BLOB CRYPT_ATTR_BLOB;

struct _CERT_USAGE_MATCH {
    DWORD dwType;
    CERT_ENHKEY_USAGE Usage;
};

union _union_5368 {
    struct WINTRUST_FILE_INFO_ * pFile;
    struct WINTRUST_CATALOG_INFO_ * pCatalog;
    struct WINTRUST_BLOB_INFO_ * pBlob;
    struct WINTRUST_SGNR_INFO_ * pSgnr;
    struct WINTRUST_CERT_INFO_ * pCert;
};

struct _WINTRUST_DATA {
    DWORD cbStruct;
    LPVOID pPolicyCallbackData;
    LPVOID pSIPClientData;
    DWORD dwUIChoice;
    DWORD fdwRevocationChecks;
    DWORD dwUnionChoice;
    union _union_5368 field_0x18;
    DWORD dwStateAction;
    HANDLE hWVTStateData;
    WCHAR * pwszURLReference;
    DWORD dwProvFlags;
    DWORD dwUIContext;
};

struct _CERT_REVOCATION_INFO {
    DWORD cbSize;
    DWORD dwRevocationResult;
    LPCSTR pszRevocationOid;
    LPVOID pvOidSpecificInfo;
    BOOL fHasFreshnessTime;
    DWORD dwFreshnessTime;
    PCERT_REVOCATION_CRL_INFO pCrlInfo;
};

struct _CRYPT_PROVUI_FUNCS {
    DWORD cbStruct;
    struct _CRYPT_PROVUI_DATA * psUIData;
    PFN_PROVUI_CALL pfnOnMoreInfoClick;
    PFN_PROVUI_CALL pfnOnMoreInfoClickDefault;
    PFN_PROVUI_CALL pfnOnAdvancedClick;
    PFN_PROVUI_CALL pfnOnAdvancedClickDefault;
};

struct _PROVDATA_SIP {
    DWORD cbStruct;
    GUID gSubject;
    struct SIP_DISPATCH_INFO_ * pSip;
    struct SIP_DISPATCH_INFO_ * pCATSip;
    struct SIP_SUBJECTINFO_ * psSipSubjectInfo;
    struct SIP_SUBJECTINFO_ * psSipCATSubjectInfo;
    struct SIP_INDIRECT_DATA_ * psIndirectData;
};

struct _CERT_REVOCATION_CRL_INFO {
    DWORD cbSize;
    PCCRL_CONTEXT pBaseCrlContext;
    PCCRL_CONTEXT pDeltaCrlContext;
    PCRL_ENTRY pCrlEntry;
    BOOL fDeltaCrlEntry;
};

struct _CRYPT_PROVUI_DATA {
    DWORD cbStruct;
    DWORD dwFinalError;
    WCHAR * pYesButtonText;
    WCHAR * pNoButtonText;
    WCHAR * pMoreInfoButtonText;
    WCHAR * pAdvancedLinkText;
    WCHAR * pCopyActionText;
    WCHAR * pCopyActionTextNoTS;
    WCHAR * pCopyActionTextNotSigned;
};

struct _CRYPT_PROVIDER_CERT {
    DWORD cbStruct;
    PCCERT_CONTEXT pCert;
    BOOL fCommercial;
    BOOL fTrustedRoot;
    BOOL fSelfSigned;
    BOOL fTestCert;
    DWORD dwRevokedReason;
    DWORD dwConfidence;
    DWORD dwError;
    CTL_CONTEXT * pTrustListContext;
    BOOL fTrustListSignerCert;
    PCCTL_CONTEXT pCtlContext;
    DWORD dwCtlError;
    BOOL fIsCyclic;
    PCERT_CHAIN_ELEMENT pChainElement;
};

struct _CERT_TRUST_STATUS {
    DWORD dwErrorStatus;
    DWORD dwInfoStatus;
};

struct _CERT_CHAIN_ELEMENT {
    DWORD cbSize;
    PCCERT_CONTEXT pCertContext;
    CERT_TRUST_STATUS TrustStatus;
    PCERT_REVOCATION_INFO pRevocationInfo;
    PCERT_ENHKEY_USAGE pIssuanceUsage;
    PCERT_ENHKEY_USAGE pApplicationUsage;
    LPCWSTR pwszExtendedErrorInfo;
};

struct _CERT_CHAIN_CONTEXT {
    DWORD cbSize;
    CERT_TRUST_STATUS TrustStatus;
    DWORD cChain;
    PCERT_SIMPLE_CHAIN * rgpChain;
    DWORD cLowerQualityChainContext;
    PCCERT_CHAIN_CONTEXT * rgpLowerQualityChainContext;
    BOOL fHasRevocationFreshnessTime;
    DWORD dwRevocationFreshnessTime;
    DWORD dwCreateFlags;
    GUID ChainId;
};

struct _CRYPT_ATTRIBUTE_TYPE_VALUE {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

struct SIP_INDIRECT_DATA_ {
    CRYPT_ATTRIBUTE_TYPE_VALUE Data;
    CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
    CRYPT_HASH_BLOB Digest;
};

struct MS_ADDINFO_FLAT_ {
    DWORD cbStruct;
    struct SIP_INDIRECT_DATA_ * pIndirectData;
};

union _union_5400 {
    struct _PROVDATA_SIP * pPDSip;
};

struct _CRYPT_PROVIDER_DATA {
    DWORD cbStruct;
    WINTRUST_DATA * pWintrustData;
    BOOL fOpenedFile;
    HWND hWndParent;
    GUID * pgActionID;
    HCRYPTPROV hProv;
    DWORD dwError;
    DWORD dwRegSecuritySettings;
    DWORD dwRegPolicySettings;
    struct _CRYPT_PROVIDER_FUNCTIONS * psPfns;
    DWORD cdwTrustStepErrors;
    DWORD * padwTrustStepErrors;
    DWORD chStores;
    HCERTSTORE * pahStores;
    DWORD dwEncoding;
    HCRYPTMSG hMsg;
    DWORD csSigners;
    struct _CRYPT_PROVIDER_SGNR * pasSigners;
    DWORD csProvPrivData;
    struct _CRYPT_PROVIDER_PRIVDATA * pasProvPrivData;
    DWORD dwSubjectChoice;
    union _union_5400 field_0x54;
    char * pszUsageOID;
    BOOL fRecallWithState;
    FILETIME sftSystemTime;
    char * pszCTLSignerUsageOID;
    DWORD dwProvFlags;
    DWORD dwFinalError;
    PCERT_USAGE_MATCH pRequestUsage;
    DWORD dwTrustPubSettings;
    DWORD dwUIStateFlags;
};

struct _CERT_TRUST_LIST_INFO {
    DWORD cbSize;
    PCTL_ENTRY pCtlEntry;
    PCCTL_CONTEXT pCtlContext;
};

union _union_5541 {
    CRYPT_PROVIDER_DATA * pCryptProviderData;
    HANDLE hWVTStateData;
};

struct WINTRUST_FILE_INFO_ {
    DWORD cbStruct;
    LPCWSTR pcwszFilePath;
    HANDLE hFile;
    GUID * pgKnownSubject;
};

struct _CERT_SIMPLE_CHAIN {
    DWORD cbSize;
    CERT_TRUST_STATUS TrustStatus;
    DWORD cElement;
    PCERT_CHAIN_ELEMENT * rgpElement;
    PCERT_TRUST_LIST_INFO pTrustListInfo;
    BOOL fHasRevocationFreshnessTime;
    DWORD dwRevocationFreshnessTime;
};

struct _CMSG_SIGNER_INFO {
    DWORD dwVersion;
    CERT_NAME_BLOB Issuer;
    CRYPT_INTEGER_BLOB SerialNumber;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedHash;
    CRYPT_ATTRIBUTES AuthAttrs;
    CRYPT_ATTRIBUTES UnauthAttrs;
};

struct MS_ADDINFO_CATALOGMEMBER_ {
    DWORD cbStruct;
    struct CRYPTCATSTORE_ * pStore;
    struct CRYPTCATMEMBER_ * pMember;
};

struct MS_ADDINFO_BLOB_ {
    DWORD cbStruct;
    DWORD cbMemObject;
    BYTE * pbMemObject;
    DWORD cbMemSignedMsg;
    BYTE * pbMemSignedMsg;
};

struct _CRYPT_PROVIDER_FUNCTIONS {
    DWORD cbStruct;
    PFN_CPD_MEM_ALLOC pfnAlloc;
    PFN_CPD_MEM_FREE pfnFree;
    PFN_CPD_ADD_STORE pfnAddStore2Chain;
    PFN_CPD_ADD_SGNR pfnAddSgnr2Chain;
    PFN_CPD_ADD_CERT pfnAddCert2Chain;
    PFN_CPD_ADD_PRIVDATA pfnAddPrivData2Chain;
    PFN_PROVIDER_INIT_CALL pfnInitialize;
    PFN_PROVIDER_OBJTRUST_CALL pfnObjectTrust;
    PFN_PROVIDER_SIGTRUST_CALL pfnSignatureTrust;
    PFN_PROVIDER_CERTTRUST_CALL pfnCertificateTrust;
    PFN_PROVIDER_FINALPOLICY_CALL pfnFinalPolicy;
    PFN_PROVIDER_CERTCHKPOLICY_CALL pfnCertCheckPolicy;
    PFN_PROVIDER_TESTFINALPOLICY_CALL pfnTestFinalPolicy;
    struct _CRYPT_PROVUI_FUNCS * psUIpfns;
    PFN_PROVIDER_CLEANUP_CALL pfnCleanupPolicy;
};

struct _CRYPT_PROVIDER_PRIVDATA {
    DWORD cbStruct;
    GUID gProviderID;
    DWORD cbProvData;
    void * pvProvData;
};

struct WINTRUST_CATALOG_INFO_ {
    DWORD cbStruct;
    DWORD dwCatalogVersion;
    LPCWSTR pcwszCatalogFilePath;
    LPCWSTR pcwszMemberTag;
    LPCWSTR pcwszMemberFilePath;
    HANDLE hMemberFile;
    BYTE * pbCalculatedFileHash;
    DWORD cbCalculatedFileHash;
    PCCTL_CONTEXT pcCatalogContext;
};

struct _CRYPT_PROVIDER_SGNR {
    DWORD cbStruct;
    FILETIME sftVerifyAsOf;
    DWORD csCertChain;
    struct _CRYPT_PROVIDER_CERT * pasCertChain;
    DWORD dwSignerType;
    CMSG_SIGNER_INFO * psSigner;
    DWORD dwError;
    DWORD csCounterSigners;
    struct _CRYPT_PROVIDER_SGNR * pasCounterSigners;
    PCCERT_CHAIN_CONTEXT pChainContext;
};

struct WINTRUST_CERT_INFO_ {
    DWORD cbStruct;
    LPCWSTR pcwszDisplayName;
    CERT_CONTEXT * psCertContext;
    DWORD chStores;
    HCERTSTORE * pahStores;
    DWORD dwFlags;
    FILETIME * psftVerifyAsOf;
};

struct WINTRUST_SGNR_INFO_ {
    DWORD cbStruct;
    LPCWSTR pcwszDisplayName;
    CMSG_SIGNER_INFO * psSignerInfo;
    DWORD chStores;
    HCERTSTORE * pahStores;
};

struct SIP_DISPATCH_INFO_ {
    DWORD cbSize;
    HANDLE hSIP;
    pCryptSIPGetSignedDataMsg pfGet;
    pCryptSIPPutSignedDataMsg pfPut;
    pCryptSIPCreateIndirectData pfCreate;
    pCryptSIPVerifyIndirectData pfVerify;
    pCryptSIPRemoveSignedDataMsg pfRemove;
};

struct CRYPTCATMEMBER_ {
    DWORD cbStruct;
    LPWSTR pwszReferenceTag;
    LPWSTR pwszFileName;
    GUID gSubjectType;
    DWORD fdwMemberFlags;
    struct SIP_INDIRECT_DATA_ * pIndirectData;
    DWORD dwCertVersion;
    DWORD dwReserved;
    HANDLE hReserved;
    CRYPT_ATTR_BLOB sEncodedIndirectData;
    CRYPT_ATTR_BLOB sEncodedMemberInfo;
};

union _union_5348 {
    struct MS_ADDINFO_FLAT_ * psFlat;
    struct MS_ADDINFO_CATALOGMEMBER_ * psCatMember;
    struct MS_ADDINFO_BLOB_ * psBlob;
};

struct SIP_SUBJECTINFO_ {
    DWORD cbSize;
    GUID * pgSubjectType;
    HANDLE hFile;
    LPCWSTR pwsFileName;
    LPCWSTR pwsDisplayName;
    DWORD dwReserved1;
    DWORD dwIntVersion;
    HCRYPTPROV hProv;
    CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
    DWORD dwFlags;
    DWORD dwEncodingType;
    DWORD dwReserved2;
    DWORD fdwCAPISettings;
    DWORD fdwSecuritySettings;
    DWORD dwIndex;
    DWORD dwUnionChoice;
    union _union_5348 field_0x48;
    LPVOID pClientData;
};

struct CRYPTCATSTORE_ {
    DWORD cbStruct;
    DWORD dwPublicVersion;
    LPWSTR pwszP7File;
    HCRYPTPROV hProv;
    DWORD dwEncodingType;
    DWORD fdwStoreFlags;
    HANDLE hReserved;
    HANDLE hAttrs;
    HCRYPTMSG hCryptMsg;
    HANDLE hSorted;
};

struct WINTRUST_BLOB_INFO_ {
    DWORD cbStruct;
    GUID gSubject;
    LPCWSTR pcwszDisplayName;
    DWORD cbMemObject;
    BYTE * pbMemObject;
    DWORD cbMemSignedMsg;
    BYTE * pbMemSignedMsg;
};

typedef union _union_5543 _union_5543, *P_union_5543;

union _union_5543 {
    CRYPT_PROVIDER_DATA * pCryptProviderData;
    HANDLE hWVTStateData;
};

typedef struct CERT_SELECTUI_INPUT CERT_SELECTUI_INPUT, *PCERT_SELECTUI_INPUT;

struct CERT_SELECTUI_INPUT {
    HCERTSTORE hStore;
    PCCERT_CHAIN_CONTEXT * prgpChain;
    DWORD cChain;
};

typedef struct _CRYPTUI_CERT_MGR_STRUCT CRYPTUI_CERT_MGR_STRUCT;

typedef struct tagCRYPTUI_INITDIALOG_STRUCT tagCRYPTUI_INITDIALOG_STRUCT, *PtagCRYPTUI_INITDIALOG_STRUCT;

typedef struct tagCRYPTUI_INITDIALOG_STRUCT CRYPTUI_INITDIALOG_STRUCT;

struct tagCRYPTUI_INITDIALOG_STRUCT {
    LPARAM lParam;
    PCCERT_CONTEXT pCertContext;
};

typedef struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTA tagCRYPTUI_VIEWCERTIFICATE_STRUCTA, *PtagCRYPTUI_VIEWCERTIFICATE_STRUCTA;

typedef struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTA CRYPTUI_VIEWCERTIFICATE_STRUCTA;

typedef struct _PROPSHEETPAGEA _PROPSHEETPAGEA, *P_PROPSHEETPAGEA;

typedef struct _PROPSHEETPAGEA PROPSHEETPAGEA_V4;

typedef PROPSHEETPAGEA_V4 * LPCPROPSHEETPAGEA_V4;

typedef LPCPROPSHEETPAGEA_V4 LPCPROPSHEETPAGEA;

typedef union _union_1933 _union_1933, *P_union_1933;

typedef union _union_1934 _union_1934, *P_union_1934;

typedef INT_PTR (* DLGPROC)(HWND, UINT, WPARAM, LPARAM);

typedef UINT (* LPFNPSPCALLBACKA)(HWND, UINT, struct _PROPSHEETPAGEA *);

typedef union _union_1935 _union_1935, *P_union_1935;

typedef struct DLGTEMPLATE DLGTEMPLATE, *PDLGTEMPLATE;

typedef struct DLGTEMPLATE * LPCDLGTEMPLATEA;

typedef LPCDLGTEMPLATEA LPCDLGTEMPLATE;

typedef LPCDLGTEMPLATE PROPSHEETPAGE_RESOURCE;

typedef struct HICON__ HICON__, *PHICON__;

typedef struct HICON__ * HICON;

struct HICON__ {
    int unused;
};

struct DLGTEMPLATE {
    DWORD style;
    DWORD dwExtendedStyle;
    WORD cdit;
    short x;
    short y;
    short cx;
    short cy;
};

union _union_1934 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1935 {
    HBITMAP hbmHeader;
    LPCSTR pszbmHeader;
};

union _union_1933 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEA {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1933 u;
    union _union_1934 u2;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT * pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
    HANDLE hActCtx;
    union _union_1935 u3;
};

struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTA {
    DWORD dwSize;
    HWND hwndParent;
    DWORD dwFlags;
    LPCSTR szTitle;
    PCCERT_CONTEXT pCertContext;
    LPCSTR * rgszPurposes;
    DWORD cPurposes;
    union _union_5543 field_0x1c;
    BOOL fpCryptProviderDataTrustedUsage;
    DWORD idxSigner;
    DWORD idxCert;
    BOOL fCounterSigner;
    DWORD idxCounterSigner;
    DWORD cStores;
    HCERTSTORE * rghStores;
    DWORD cPropSheetPages;
    LPCPROPSHEETPAGEA rgPropSheetPages;
    DWORD nStartPage;
};

typedef struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTW tagCRYPTUI_VIEWCERTIFICATE_STRUCTW, *PtagCRYPTUI_VIEWCERTIFICATE_STRUCTW;

typedef struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTW CRYPTUI_VIEWCERTIFICATE_STRUCTW;

typedef struct _PROPSHEETPAGEW _PROPSHEETPAGEW, *P_PROPSHEETPAGEW;

typedef struct _PROPSHEETPAGEW PROPSHEETPAGEW_V4;

typedef PROPSHEETPAGEW_V4 * LPCPROPSHEETPAGEW_V4;

typedef LPCPROPSHEETPAGEW_V4 LPCPROPSHEETPAGEW;

typedef union _union_1946 _union_1946, *P_union_1946;

typedef union _union_1947 _union_1947, *P_union_1947;

typedef UINT (* LPFNPSPCALLBACKW)(HWND, UINT, struct _PROPSHEETPAGEW *);

typedef union _union_1948 _union_1948, *P_union_1948;

struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTW {
    DWORD dwSize;
    HWND hwndParent;
    DWORD dwFlags;
    LPCWSTR szTitle;
    PCCERT_CONTEXT pCertContext;
    LPCSTR * rgszPurposes;
    DWORD cPurposes;
    union _union_5541 field_0x1c;
    BOOL fpCryptProviderDataTrustedUsage;
    DWORD idxSigner;
    DWORD idxCert;
    BOOL fCounterSigner;
    DWORD idxCounterSigner;
    DWORD cStores;
    HCERTSTORE * rghStores;
    DWORD cPropSheetPages;
    LPCPROPSHEETPAGEW rgPropSheetPages;
    DWORD nStartPage;
};

union _union_1948 {
    HBITMAP hbmHeader;
    LPCWSTR pszbmHeader;
};

union _union_1946 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1947 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1946 u;
    union _union_1947 u2;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT * pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
    HANDLE hActCtx;
    union _union_1948 u3;
};

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_INFO CRYPTUI_WIZ_DIGITAL_SIGN_INFO;

typedef struct _CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO;

typedef struct _CRYPTUI_WIZ_EXPORT_INFO CRYPTUI_WIZ_EXPORT_INFO;

typedef struct _CRYPTUI_WIZ_IMPORT_SUBJECT_INFO CRYPTUI_WIZ_IMPORT_SRC_INFO;

typedef CRYPTUI_CERT_MGR_STRUCT * PCCRYPTUI_CERT_MGR_STRUCT;

typedef CRYPTUI_VIEWCERTIFICATE_STRUCTA * PCCRYPTUI_VIEWCERTIFICATE_STRUCTA;

typedef CRYPTUI_VIEWCERTIFICATE_STRUCTW * PCCRYPTUI_VIEWCERTIFICATE_STRUCTW;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT * PCCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT;

typedef CRYPTUI_WIZ_DIGITAL_SIGN_INFO * PCCRYPTUI_WIZ_DIGITAL_SIGN_INFO;

typedef CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO * PCCRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO;

typedef CRYPTUI_WIZ_EXPORT_INFO * PCCRYPTUI_WIZ_EXPORT_INFO;

typedef CRYPTUI_WIZ_IMPORT_SRC_INFO * PCCRYPTUI_WIZ_IMPORT_SRC_INFO;

typedef struct _CRYPTUI_CERT_MGR_STRUCT * PCRYPTUI_CERT_MGR_STRUCT;

typedef struct tagCRYPTUI_INITDIALOG_STRUCT * PCRYPTUI_INITDIALOG_STRUCT;

typedef struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTA * PCRYPTUI_VIEWCERTIFICATE_STRUCTA;

typedef struct tagCRYPTUI_VIEWCERTIFICATE_STRUCTW * PCRYPTUI_VIEWCERTIFICATE_STRUCTW;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO * PCRYPTUI_WIZ_DIGITAL_SIGN_BLOB_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO * PCRYPTUI_WIZ_DIGITAL_SIGN_CERT_PVK_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT * PCRYPTUI_WIZ_DIGITAL_SIGN_CONTEXT;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO * PCRYPTUI_WIZ_DIGITAL_SIGN_EXTENDED_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_INFO * PCRYPTUI_WIZ_DIGITAL_SIGN_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO * PCRYPTUI_WIZ_DIGITAL_SIGN_PVK_FILE_INFO;

typedef struct _CRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO * PCRYPTUI_WIZ_DIGITAL_SIGN_STORE_INFO;

typedef struct _CRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO * PCRYPTUI_WIZ_EXPORT_CERTCONTEXT_INFO;

typedef struct _CRYPTUI_WIZ_EXPORT_INFO * PCRYPTUI_WIZ_EXPORT_INFO;

typedef struct _CRYPTUI_WIZ_IMPORT_SUBJECT_INFO * PCRYPTUI_WIZ_IMPORT_SRC_INFO;

#define _BASE_DOW 4

#define _BASE_YEAR 70

#define _DAY_SEC 86400

#define _DEC_SEC 315532800

#define _FOUR_YEAR_SEC 126230400

#define _LEAP_YEAR_ADJUST 17

#define _MAX__TIME32_T 2147471999

#define _MAX_LOCAL_TIME 46800

#define _MAX_YEAR 138

#define _MAX_YEAR64 1100

#define _MIN_LOCAL_TIME -43200

#define _YEAR_SEC 31536000

#define _ALPHA 259

#define _BLANK 64

#define _CONTROL 32

#define _DIGIT 4

#define _HEX 128

#define _LEADBYTE 32768

#define _LOWER 2

#define _PUNCT 16

#define _SPACE 8

#define _UPPER 1

#define _FAR 16

#define _LONG 2

#define _NEAR 8

#define _SHORT 1

#define _USIGN 4

//#define DECIMAL 10

#define HEX 16

#define OCTAL 8

#define _CRT_DEBUGGER_ABORT 3

#define _CRT_DEBUGGER_GSFAILURE 1

#define _CRT_DEBUGGER_IGNORE -1

#define _CRT_DEBUGGER_INVALIDPARAMETER 2

#define WM_DDE_ACK 996

#define WM_DDE_ADVISE 994

#define WM_DDE_DATA 997

#define WM_DDE_EXECUTE 1000

#define WM_DDE_FIRST 992

#define WM_DDE_INITIATE 992

#define WM_DDE_LAST 1000

#define WM_DDE_POKE 999

#define WM_DDE_REQUEST 998

#define WM_DDE_TERMINATE 993

#define WM_DDE_UNADVISE 995

typedef union anon__struct_993_bitfield_1 anon__struct_993_bitfield_1, *Panon__struct_993_bitfield_1;

union anon__struct_993_bitfield_1 {
    ushort bAppReturnCode:8; /* : bits 0-7 */
    ushort reserved:6; /* : bits 8-13 */
    ushort fBusy:1; /* : bits 14 */
    ushort fAck:1; /* : bits 15 */
};

typedef union anon__struct_994_bitfield_1 anon__struct_994_bitfield_1, *Panon__struct_994_bitfield_1;

union anon__struct_994_bitfield_1 {
    ushort reserved:14; /* : bits 0-13 */
    ushort fDeferUpd:1; /* : bits 14 */
    ushort fAckReq:1; /* : bits 15 */
};

typedef union anon__struct_995_bitfield_1 anon__struct_995_bitfield_1, *Panon__struct_995_bitfield_1;

union anon__struct_995_bitfield_1 {
    ushort unused:12; /* : bits 0-11 */
    ushort fResponse:1; /* : bits 12 */
    ushort fRelease:1; /* : bits 13 */
    ushort reserved:1; /* : bits 14 */
    ushort fAckReq:1; /* : bits 15 */
};

typedef union anon__struct_996_bitfield_1 anon__struct_996_bitfield_1, *Panon__struct_996_bitfield_1;

union anon__struct_996_bitfield_1 {
    ushort unused:13; /* : bits 0-12 */
    ushort fRelease:1; /* : bits 13 */
    ushort fReserved:2; /* : bits 14-15 */
};

typedef union anon__struct_997_bitfield_1 anon__struct_997_bitfield_1, *Panon__struct_997_bitfield_1;

union anon__struct_997_bitfield_1 {
    ushort unused:13; /* : bits 0-12 */
    ushort fRelease:1; /* : bits 13 */
    ushort fDeferUpd:1; /* : bits 14 */
    ushort fAckReq:1; /* : bits 15 */
};

typedef union anon__struct_998_bitfield_1 anon__struct_998_bitfield_1, *Panon__struct_998_bitfield_1;

union anon__struct_998_bitfield_1 {
    ushort unused:12; /* : bits 0-11 */
    ushort fAck:1; /* : bits 12 */
    ushort fRelease:1; /* : bits 13 */
    ushort fReserved:1; /* : bits 14 */
    ushort fAckReq:1; /* : bits 15 */
};

typedef struct DDEACK DDEACK, *PDDEACK;

struct DDEACK {
    union anon__struct_993_bitfield_1 field_0x0;
};

typedef struct DDEADVISE DDEADVISE, *PDDEADVISE;

struct DDEADVISE {
    union anon__struct_994_bitfield_1 field_0x0;
    short cfFormat;
};

typedef struct DDEDATA DDEDATA, *PDDEDATA;

struct DDEDATA {
    union anon__struct_995_bitfield_1 field_0x0;
    short cfFormat;
    BYTE Value[1];
};

typedef struct DDELN DDELN, *PDDELN;

struct DDELN {
    union anon__struct_997_bitfield_1 field_0x0;
    short cfFormat;
};

typedef struct DDEPOKE DDEPOKE, *PDDEPOKE;

struct DDEPOKE {
    union anon__struct_996_bitfield_1 field_0x0;
    short cfFormat;
    BYTE Value[1];
};

typedef struct DDEUP DDEUP, *PDDEUP;

struct DDEUP {
    union anon__struct_998_bitfield_1 field_0x0;
    short cfFormat;
    BYTE rgb[1];
};

#define APPCLASS_MASK 15

#define APPCLASS_MONITOR 1

#define APPCLASS_STANDARD 0

#define APPCMD_CLIENTONLY 16

#define APPCMD_FILTERINITS 32

#define APPCMD_MASK 4080

#define CADV_LATEACK 65535

#define CBF_FAIL_ADVISES 16384

#define CBF_FAIL_ALLSVRXACTIONS 258048

#define CBF_FAIL_CONNECTIONS 8192

#define CBF_FAIL_EXECUTES 32768

#define CBF_FAIL_POKES 65536

#define CBF_FAIL_REQUESTS 131072

#define CBF_FAIL_SELFCONNECTIONS 4096

#define CBF_SKIP_ALLNOTIFICATIONS 3932160

#define CBF_SKIP_CONNECT_CONFIRMS 262144

#define CBF_SKIP_DISCONNECTS 2097152

#define CBF_SKIP_REGISTRATIONS 524288

#define CBF_SKIP_UNREGISTRATIONS 1048576

#define CBR_BLOCK -1

#define CP_WINANSI 1004

#define CP_WINNEUTRAL 1004

#define CP_WINUNICODE 1200

#define DDE_FACK 32768

#define DDE_FACKREQ 32768

#define DDE_FACKRESERVED -49408

#define DDE_FADVRESERVED -49153

#define DDE_FAPPSTATUS 255

#define DDE_FBUSY 16384

#define DDE_FDATRESERVED -45057

#define DDE_FDEFERUPD 16384

#define DDE_FNOTPROCESSED 0

#define DDE_FPOKRESERVED -8193

#define DDE_FRELEASE 8192

#define DDE_FREQUESTED 4096

#define DMLERR_ADVACKTIMEOUT 16384

#define DMLERR_BUSY 16385

#define DMLERR_DATAACKTIMEOUT 16386

#define DMLERR_DLL_NOT_INITIALIZED 16387

#define DMLERR_DLL_USAGE 16388

#define DMLERR_EXECACKTIMEOUT 16389

#define DMLERR_FIRST 16384

#define DMLERR_INVALIDPARAMETER 16390

#define DMLERR_LAST 16401

#define DMLERR_LOW_MEMORY 16391

#define DMLERR_MEMORY_ERROR 16392

#define DMLERR_NO_CONV_ESTABLISHED 16394

#define DMLERR_NO_ERROR 0

#define DMLERR_NOTPROCESSED 16393

#define DMLERR_POKEACKTIMEOUT 16395

#define DMLERR_POSTMSG_FAILED 16396

#define DMLERR_REENTRANCY 16397

#define DMLERR_SERVER_DIED 16398

#define DMLERR_SYS_ERROR 16399

#define DMLERR_UNADVACKTIMEOUT 16400

#define DMLERR_UNFOUND_QUEUE_ID 16401

#define DNS_FILTEROFF 8

#define DNS_FILTERON 4

#define DNS_REGISTER 1

#define DNS_UNREGISTER 2

#define EC_DISABLE 8

#define EC_ENABLEALL 0

#define EC_ENABLEONE 128

#define EC_QUERYWAITING 2

#define HDATA_APPOWNED 1

#define MAX_MONITORS 4

#define MF_CALLBACKS 134217728

#define MF_CONV 1073741824

#define MF_ERRORS 268435456

#define MF_HSZ_INFO 16777216

#define MF_LINKS 536870912

#define MF_MASK 4278190080

#define MF_POSTMSGS 67108864

#define MF_SENDMSGS 33554432

#define MH_CLEANUP 4

#define MH_CREATE 1

#define MH_DELETE 3

#define MH_KEEP 2

#define MSGF_DDEMGR 32769

#define QID_SYNC 4294967295

#define ST_ADVISE 2

#define ST_BLOCKED 8

#define ST_BLOCKNEXT 128

#define ST_CLIENT 16

#define ST_CONNECTED 1

#define ST_INLIST 64

#define ST_ISLOCAL 4

#define ST_ISSELF 256

#define ST_TERMINATED 32

#define TIMEOUT_ASYNC 4294967295

#define XCLASS_BOOL 4096

#define XCLASS_DATA 8192

#define XCLASS_FLAGS 16384

#define XCLASS_MASK 64512

#define XCLASS_NOTIFICATION 32768

#define XST_ADVACKRCVD 13

#define XST_ADVDATAACKRCVD 16

#define XST_ADVDATASENT 15

#define XST_ADVSENT 11

#define XST_CONNECTED 2

#define XST_DATARCVD 6

#define XST_EXECACKRCVD 10

#define XST_EXECSENT 9

#define XST_INCOMPLETE 1

#define XST_INIT1 3

#define XST_INIT2 4

#define XST_NULL 0

#define XST_POKEACKRCVD 8

#define XST_POKESENT 7

#define XST_REQSENT 5

#define XST_UNADVACKRCVD 14

#define XST_UNADVSENT 12

#define XTYP_ADVDATA 16400

#define XTYP_ADVREQ 8226

#define XTYP_ADVSTART 4144

#define XTYP_ADVSTOP 32832

#define XTYP_CONNECT 4194

#define XTYP_CONNECT_CONFIRM 32882

#define XTYP_DISCONNECT 32962

#define XTYP_ERROR 32770

#define XTYP_EXECUTE 16464

#define XTYP_MASK 240

#define XTYP_MONITOR 33010

#define XTYP_POKE 16528

#define XTYP_REGISTER 32930

#define XTYP_REQUEST 8368

#define XTYP_SHIFT 4

#define XTYP_UNREGISTER 32978

#define XTYP_WILDCONNECT 8418

#define XTYP_XACT_COMPLETE 32896

#define XTYPF_ACKREQ 8

#define XTYPF_NOBLOCK 2

#define XTYPF_NODATA 4

typedef struct tagCONVCONTEXT tagCONVCONTEXT, *PtagCONVCONTEXT;

typedef struct tagCONVCONTEXT CONVCONTEXT;

typedef struct _SECURITY_QUALITY_OF_SERVICE _SECURITY_QUALITY_OF_SERVICE, *P_SECURITY_QUALITY_OF_SERVICE;

typedef struct _SECURITY_QUALITY_OF_SERVICE SECURITY_QUALITY_OF_SERVICE;

typedef enum _SECURITY_IMPERSONATION_LEVEL {
    SecurityAnonymous=0,
    SecurityDelegation=3,
    SecurityIdentification=1,
    SecurityImpersonation=2
} _SECURITY_IMPERSONATION_LEVEL;

typedef enum _SECURITY_IMPERSONATION_LEVEL SECURITY_IMPERSONATION_LEVEL;


/* WARNING! conflicting data type names: /winnt.h/BOOLEAN - /wtypes.h/BOOLEAN */

typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE;

struct _SECURITY_QUALITY_OF_SERVICE {
    DWORD Length;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode;
    BOOLEAN EffectiveOnly;
};

struct tagCONVCONTEXT {
    UINT cb;
    UINT wFlags;
    UINT wCountryID;
    int iCodePage;
    DWORD dwLangID;
    DWORD dwSecurity;
    SECURITY_QUALITY_OF_SERVICE qos;
};

typedef struct tagCONVINFO tagCONVINFO, *PtagCONVINFO;

typedef struct tagCONVINFO CONVINFO;

typedef struct HCONV__ HCONV__, *PHCONV__;

typedef struct HCONV__ * HCONV;

typedef struct HSZ__ HSZ__, *PHSZ__;

typedef struct HSZ__ * HSZ;

typedef struct HCONVLIST__ HCONVLIST__, *PHCONVLIST__;

typedef struct HCONVLIST__ * HCONVLIST;

struct HCONVLIST__ {
    int unused;
};

struct tagCONVINFO {
    DWORD cb;
    DWORD_PTR hUser;
    HCONV hConvPartner;
    HSZ hszSvcPartner;
    HSZ hszServiceReq;
    HSZ hszTopic;
    HSZ hszItem;
    UINT wFmt;
    UINT wType;
    UINT wStatus;
    UINT wConvst;
    UINT wLastError;
    HCONVLIST hConvList;
    CONVCONTEXT ConvCtxt;
    HWND hwnd;
    HWND hwndPartner;
};

struct HCONV__ {
    int unused;
};

struct HSZ__ {
    int unused;
};

typedef struct tagDDEML_MSG_HOOK_DATA tagDDEML_MSG_HOOK_DATA, *PtagDDEML_MSG_HOOK_DATA;

typedef struct tagDDEML_MSG_HOOK_DATA DDEML_MSG_HOOK_DATA;

struct tagDDEML_MSG_HOOK_DATA {
    UINT_PTR uiLo;
    UINT_PTR uiHi;
    DWORD cbData;
    DWORD Data[8];
};

typedef struct HDDEDATA__ HDDEDATA__, *PHDDEDATA__;

typedef struct HDDEDATA__ * HDDEDATA;

typedef HDDEDATA (FNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, ULONG_PTR, ULONG_PTR);

struct HDDEDATA__ {
    int unused;
};

typedef struct tagHSZPAIR tagHSZPAIR, *PtagHSZPAIR;

typedef struct tagHSZPAIR HSZPAIR;

struct tagHSZPAIR {
    HSZ hszSvc;
    HSZ hszTopic;
};

typedef struct tagMONCBSTRUCT tagMONCBSTRUCT, *PtagMONCBSTRUCT;

typedef struct tagMONCBSTRUCT MONCBSTRUCT;

struct tagMONCBSTRUCT {
    UINT cb;
    DWORD dwTime;
    HANDLE hTask;
    DWORD dwRet;
    UINT wType;
    UINT wFmt;
    HCONV hConv;
    HSZ hsz1;
    HSZ hsz2;
    HDDEDATA hData;
    ULONG_PTR dwData1;
    ULONG_PTR dwData2;
    CONVCONTEXT cc;
    DWORD cbData;
    DWORD Data[8];
};

typedef struct tagMONCONVSTRUCT tagMONCONVSTRUCT, *PtagMONCONVSTRUCT;

typedef struct tagMONCONVSTRUCT MONCONVSTRUCT;

struct tagMONCONVSTRUCT {
    UINT cb;
    BOOL fConnect;
    DWORD dwTime;
    HANDLE hTask;
    HSZ hszSvc;
    HSZ hszTopic;
    HCONV hConvClient;
    HCONV hConvServer;
};

typedef struct tagMONERRSTRUCT tagMONERRSTRUCT, *PtagMONERRSTRUCT;

typedef struct tagMONERRSTRUCT MONERRSTRUCT;

struct tagMONERRSTRUCT {
    UINT cb;
    UINT wLastError;
    DWORD dwTime;
    HANDLE hTask;
};

typedef struct tagMONHSZSTRUCTA tagMONHSZSTRUCTA, *PtagMONHSZSTRUCTA;

typedef struct tagMONHSZSTRUCTA MONHSZSTRUCTA;

typedef MONHSZSTRUCTA MONHSZSTRUCT;

struct tagMONHSZSTRUCTA {
    UINT cb;
    BOOL fsAction;
    DWORD dwTime;
    HSZ hsz;
    HANDLE hTask;
    CHAR str[1];
};

typedef struct tagMONHSZSTRUCTW tagMONHSZSTRUCTW, *PtagMONHSZSTRUCTW;

typedef struct tagMONHSZSTRUCTW MONHSZSTRUCTW;

struct tagMONHSZSTRUCTW {
    UINT cb;
    BOOL fsAction;
    DWORD dwTime;
    HSZ hsz;
    HANDLE hTask;
    WCHAR str[1];
};

typedef struct tagMONLINKSTRUCT tagMONLINKSTRUCT, *PtagMONLINKSTRUCT;

typedef struct tagMONLINKSTRUCT MONLINKSTRUCT;

struct tagMONLINKSTRUCT {
    UINT cb;
    DWORD dwTime;
    HANDLE hTask;
    BOOL fEstablished;
    BOOL fNoData;
    HSZ hszSvc;
    HSZ hszTopic;
    HSZ hszItem;
    UINT wFmt;
    BOOL fServer;
    HCONV hConvServer;
    HCONV hConvClient;
};

typedef struct tagMONMSGSTRUCT tagMONMSGSTRUCT, *PtagMONMSGSTRUCT;

typedef struct tagMONMSGSTRUCT MONMSGSTRUCT;

struct tagMONMSGSTRUCT {
    UINT cb;
    HWND hwndTo;
    DWORD dwTime;
    HANDLE hTask;
    UINT wMsg;
    WPARAM wParam;
    LPARAM lParam;
    DDEML_MSG_HOOK_DATA dmhd;
};

typedef struct tagCONVCONTEXT * PCONVCONTEXT;

typedef struct tagCONVINFO * PCONVINFO;

typedef struct tagDDEML_MSG_HOOK_DATA * PDDEML_MSG_HOOK_DATA;

typedef HDDEDATA (* PFNCALLBACK)(UINT, UINT, HCONV, HSZ, HSZ, HDDEDATA, ULONG_PTR, ULONG_PTR);

typedef struct tagHSZPAIR * PHSZPAIR;

typedef struct tagMONCBSTRUCT * PMONCBSTRUCT;

typedef struct tagMONCONVSTRUCT * PMONCONVSTRUCT;

typedef struct tagMONERRSTRUCT * PMONERRSTRUCT;

typedef struct tagMONHSZSTRUCTA * PMONHSZSTRUCTA;

typedef PMONHSZSTRUCTA PMONHSZSTRUCT;

typedef struct tagMONHSZSTRUCTW * PMONHSZSTRUCTW;

typedef struct tagMONLINKSTRUCT * PMONLINKSTRUCT;

typedef struct tagMONMSGSTRUCT * PMONMSGSTRUCT;

#define _INTEGRAL_MAX_BITS 32

#define _M_IX86 300

#define _MSC_VER 1200

#define WINVER 2304

#define _DELAY_IMP_VER 2

typedef union _union_458 _union_458, *P_union_458;

union _union_458 {
    LPCSTR szProcName;
    DWORD dwOrdinal;
};

typedef struct DelayLoadInfo DelayLoadInfo, *PDelayLoadInfo;

typedef struct ImgDelayDescr ImgDelayDescr, *PImgDelayDescr;

typedef struct ImgDelayDescr * PCImgDelayDescr;

typedef int (* FARPROC)(void);

typedef struct DelayLoadProc DelayLoadProc, *PDelayLoadProc;

typedef HINSTANCE HMODULE;

typedef DWORD RVA;

struct DelayLoadProc {
    BOOL fImportByName;
    union _union_458 field_0x4;
};

struct DelayLoadInfo {
    DWORD cb;
    PCImgDelayDescr pidd;
    FARPROC * ppfn;
    LPCSTR szDll;
    struct DelayLoadProc dlp;
    HMODULE hmodCur;
    FARPROC pfnCur;
    DWORD dwLastError;
};

struct ImgDelayDescr {
    DWORD grAttrs;
    RVA rvaDLLName;
    RVA rvaHmod;
    RVA rvaIAT;
    RVA rvaINT;
    RVA rvaBoundIAT;
    RVA rvaUnloadIAT;
    DWORD dwTimeStamp;
};

typedef enum DLAttr {
    dlattrRva=1
} DLAttr;

typedef enum enum_456 {
    dliFailGetProc=5,
    dliFailLoadLib=4,
    dliNoteEndProcessing=6,
    dliNotePreGetProcAddress=3,
    dliNotePreLoadLibrary=2,
    dliNoteStartProcessing=1,
    dliStartProcessing=0
} enum_456;

typedef struct _IMAGE_THUNK_DATA32 _IMAGE_THUNK_DATA32, *P_IMAGE_THUNK_DATA32;

typedef struct _IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32;

typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA;

typedef IMAGE_THUNK_DATA * PCImgThunkData;

typedef union _union_261 _union_261, *P_union_261;

union _union_261 {
    DWORD ForwarderString;
    DWORD Function;
    DWORD Ordinal;
    DWORD AddressOfData;
};

struct _IMAGE_THUNK_DATA32 {
    union _union_261 u1;
};

typedef FARPROC (* PfnDliHook)(uint, PDelayLoadInfo);

typedef IMAGE_THUNK_DATA * PImgThunkData;

#define DEVPROP_FALSE 0

#define DEVPROP_MASK_TYPE 4095

#define DEVPROP_MASK_TYPEMOD 61440

#define DEVPROP_TRUE -1

#define DEVPROP_TYPE_BINARY 4099

#define DEVPROP_TYPE_BOOLEAN 17

#define DEVPROP_TYPE_BYTE 3

#define DEVPROP_TYPE_CURRENCY 14

#define DEVPROP_TYPE_DATE 15

#define DEVPROP_TYPE_DECIMAL 12

#define DEVPROP_TYPE_DEVPROPKEY 21

#define DEVPROP_TYPE_DEVPROPTYPE 22

#define DEVPROP_TYPE_DOUBLE 11

#define DEVPROP_TYPE_EMPTY 0

#define DEVPROP_TYPE_ERROR 23

#define DEVPROP_TYPE_FILETIME 16

#define DEVPROP_TYPE_FLOAT 10

#define DEVPROP_TYPE_GUID 13

#define DEVPROP_TYPE_INT16 4

#define DEVPROP_TYPE_INT32 6

#define DEVPROP_TYPE_INT64 8

#define DEVPROP_TYPE_NTSTATUS 24

#define DEVPROP_TYPE_NULL 1

#define DEVPROP_TYPE_SBYTE 2

#define DEVPROP_TYPE_SECURITY_DESCRIPTOR 19

#define DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING 20

#define DEVPROP_TYPE_STRING 18

#define DEVPROP_TYPE_STRING_INDIRECT 25

#define DEVPROP_TYPE_STRING_LIST 8210

#define DEVPROP_TYPE_UINT16 5

#define DEVPROP_TYPE_UINT32 7

#define DEVPROP_TYPE_UINT64 9

#define DEVPROP_TYPEMOD_ARRAY 4096

#define DEVPROP_TYPEMOD_LIST 8192

#define DEVPROPID_FIRST_USABLE 2

#define MAX_DEVPROP_TYPE 25

#define MAX_DEVPROP_TYPEMOD 8192

typedef struct _DEVPROPKEY _DEVPROPKEY, *P_DEVPROPKEY;

typedef GUID DEVPROPGUID;

typedef ULONG DEVPROPID;

struct _DEVPROPKEY {
    DEVPROPGUID fmtid;
    DEVPROPID pid;
};

typedef CHAR DEVPROP_BOOLEAN;

typedef struct _DEVPROPKEY DEVPROPKEY;

typedef ULONG DEVPROPTYPE;

typedef CHAR * PDEVPROP_BOOLEAN;

typedef GUID * PDEVPROPGUID;

typedef ULONG * PDEVPROPID;

typedef struct _DEVPROPKEY * PDEVPROPKEY;

typedef ULONG * PDEVPROPTYPE;

#define ADDRESS_TYPE_IANA 0

#define ADDRESS_TYPE_IATA 1

#define CLIENT_TYPE_BOOTP 2

#define CLIENT_TYPE_BOTH 3

#define CLIENT_TYPE_DHCP 1

#define CLIENT_TYPE_NONE 100

#define CLIENT_TYPE_RESERVATION_FLAG 4

#define CLIENT_TYPE_UNSPECIFIED 0

#define DHCP_ATTRIB_BOOL_IS_ADMIN 5

#define DHCP_ATTRIB_BOOL_IS_BINDING_AWARE 4

#define DHCP_ATTRIB_BOOL_IS_DYNBOOTP 2

#define DHCP_ATTRIB_BOOL_IS_PART_OF_DSDC 3

#define DHCP_ATTRIB_BOOL_IS_ROGUE 1

#define DHCP_ATTRIB_TYPE_BOOL 1

#define DHCP_ATTRIB_TYPE_ULONG 2

#define DHCP_ATTRIB_ULONG_RESTORE_STATUS 6

#define DHCP_ENDPOINT_FLAG_CANT_MODIFY 1

#define DHCP_FLAGS_DONT_ACCESS_DS 1

#define DHCP_FLAGS_DONT_DO_RPC 2

#define DHCP_FLAGS_OPTION_IS_VENDOR 3

#define DHCP_MAX_DELAY 1000

#define DHCP_MIN_DELAY 0

#define DHCP_OPT_ENUM_IGNORE_VENDOR 1

#define DHCP_OPT_ENUM_USE_CLASSNAME 2

#define DHCP_SUBNET_INFO_VQ_FLAG_QUARANTINE 1

#define DNS_FLAG_CLEANUP_EXPIRED 4

#define DNS_FLAG_ENABLED 1

#define DNS_FLAG_UPDATE_BOTH_ALWAYS 16

#define DNS_FLAG_UPDATE_DHCID 32

#define DNS_FLAG_UPDATE_DOWNLEVEL 2

#define FILTER_STATUS_FULL_MATCH_IN_ALLOW_LIST 2

#define FILTER_STATUS_FULL_MATCH_IN_DENY_LIST 4

#define FILTER_STATUS_NONE 1

#define FILTER_STATUS_WILDCARD_MATCH_IN_ALLOW_LIST 8

#define FILTER_STATUS_WILDCARD_MATCH_IN_DENY_LIST 16

#define HWTYPE_ETHERNET_10MB 1

#define MAC_ADDRESS_LENGTH 6

#define MAX_PATTERN_LENGTH 255

#define QUARANTIN_OPTION_BASE 43220

#define QUARANTINE_CONFIG_OPTION 43222

#define QUARANTINE_SCOPE_QUARPROFILE_OPTION 43221

#define Set_APIProtocolSupport 1

#define Set_AuditLogState 2048

#define Set_BackupInterval 16

#define Set_BackupPath 8

#define Set_BootFileTable 1024

#define Set_DatabaseCleanupInterval 128

#define Set_DatabaseLoggingFlag 32

#define Set_DatabaseName 2

#define Set_DatabasePath 4

#define Set_DebugFlag 256

#define Set_PingRetries 512

#define Set_PreferredLifetime 4

#define Set_PreferredLifetimeIATA 64

#define Set_QuarantineDefFail 8192

#define Set_QuarantineON 4096

#define Set_RapidCommitFlag 2

#define Set_RestoreFlag 64

#define Set_T1 16

#define Set_T2 32

#define Set_UnicastFlag 1

#define Set_ValidLifetime 8

#define Set_ValidLifetimeIATA 128

#define V5_ADDRESS_BIT_BOTH_REC 32

#define V5_ADDRESS_BIT_DELETED 128

#define V5_ADDRESS_BIT_UNREGISTERED 64

#define V5_ADDRESS_STATE_ACTIVE 1

#define V5_ADDRESS_STATE_DECLINED 2

#define V5_ADDRESS_STATE_DOOM 3

#define V5_ADDRESS_STATE_OFFERED 0

typedef struct _DATE_TIME _DATE_TIME, *P_DATE_TIME;

struct _DATE_TIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
};

typedef struct _DHCP_ADDR_PATTERN _DHCP_ADDR_PATTERN, *P_DHCP_ADDR_PATTERN;

struct _DHCP_ADDR_PATTERN {
    BOOL MatchHWType;
    BYTE HWType;
    BOOL IsWildcard;
    BYTE Length;
    BYTE Pattern[255];
};

typedef struct _DHCP_ALL_OPTION_VALUES _DHCP_ALL_OPTION_VALUES, *P_DHCP_ALL_OPTION_VALUES;

typedef struct _struct_5626 _struct_5626, *P_struct_5626;

typedef struct _DHCP_OPTION_VALUE_ARRAY _DHCP_OPTION_VALUE_ARRAY, *P_DHCP_OPTION_VALUE_ARRAY;

typedef struct _DHCP_OPTION_VALUE_ARRAY * LPDHCP_OPTION_VALUE_ARRAY;

typedef struct _DHCP_OPTION_VALUE _DHCP_OPTION_VALUE, *P_DHCP_OPTION_VALUE;

typedef struct _DHCP_OPTION_VALUE * LPDHCP_OPTION_VALUE;

typedef DWORD DHCP_OPTION_ID;

typedef struct _DHCP_OPTION_DATA _DHCP_OPTION_DATA, *P_DHCP_OPTION_DATA;

typedef struct _DHCP_OPTION_DATA DHCP_OPTION_DATA;

typedef struct _DHCP_OPTION_DATA_ELEMENT _DHCP_OPTION_DATA_ELEMENT, *P_DHCP_OPTION_DATA_ELEMENT;

typedef struct _DHCP_OPTION_DATA_ELEMENT * LPDHCP_OPTION_DATA_ELEMENT;

typedef enum _DHCP_OPTION_DATA_TYPE {
    DhcpBinaryDataOption=6,
    DhcpByteOption=0,
    DhcpDWordDWordOption=3,
    DhcpDWordOption=2,
    DhcpEncapsulatedDataOption=7,
    DhcpIpAddressOption=4,
    DhcpIpv6AddressOption=8,
    DhcpStringDataOption=5,
    DhcpWordOption=1
} _DHCP_OPTION_DATA_TYPE;

typedef enum _DHCP_OPTION_DATA_TYPE DHCP_OPTION_DATA_TYPE;

typedef union _DHCP_OPTION_ELEMENT_UNION _DHCP_OPTION_ELEMENT_UNION, *P_DHCP_OPTION_ELEMENT_UNION;

typedef struct _DWORD_DWORD _DWORD_DWORD, *P_DWORD_DWORD;

typedef struct _DWORD_DWORD DWORD_DWORD;

typedef DWORD DHCP_IP_ADDRESS;

typedef struct _DHCP_BINARY_DATA _DHCP_BINARY_DATA, *P_DHCP_BINARY_DATA;

typedef struct _DHCP_BINARY_DATA DHCP_BINARY_DATA;

struct _DWORD_DWORD {
    DWORD DWord1;
    DWORD DWord2;
};

struct _DHCP_ALL_OPTION_VALUES {
    DWORD Flags;
    DWORD NumElements;
    struct _struct_5626 * Options;
};

struct _DHCP_OPTION_DATA {
    DWORD NumElements;
    LPDHCP_OPTION_DATA_ELEMENT Elements;
};

struct _DHCP_BINARY_DATA {
    DWORD DataLength;
    BYTE * Data;
};

union _DHCP_OPTION_ELEMENT_UNION {
    BYTE ByteOption;
    WORD WordOption;
    DWORD DWordOption;
    DWORD_DWORD DWordDWordOption;
    DHCP_IP_ADDRESS IpAddressOption;
    LPWSTR StringDataOption;
    DHCP_BINARY_DATA BinaryDataOption;
    DHCP_BINARY_DATA EncapsulatedDataOption;
    LPWSTR Ipv6AddressDataOption;
};

struct _DHCP_OPTION_DATA_ELEMENT {
    DHCP_OPTION_DATA_TYPE OptionType;
    union _DHCP_OPTION_ELEMENT_UNION Element;
};

struct _DHCP_OPTION_VALUE_ARRAY {
    DWORD NumElements;
    LPDHCP_OPTION_VALUE Values;
};

struct _struct_5626 {
    LPWSTR ClassName;
    LPWSTR VendorName;
    BOOL IsVendor;
    LPDHCP_OPTION_VALUE_ARRAY OptionsArray;
};

struct _DHCP_OPTION_VALUE {
    DHCP_OPTION_ID OptionID;
    DHCP_OPTION_DATA Value;
};

typedef struct _DHCP_ALL_OPTIONS _DHCP_ALL_OPTIONS, *P_DHCP_ALL_OPTIONS;

typedef struct _DHCP_OPTION_ARRAY _DHCP_OPTION_ARRAY, *P_DHCP_OPTION_ARRAY;

typedef struct _DHCP_OPTION_ARRAY * LPDHCP_OPTION_ARRAY;

typedef struct _struct_5624 _struct_5624, *P_struct_5624;

typedef struct _DHCP_OPTION _DHCP_OPTION, *P_DHCP_OPTION;

typedef struct _DHCP_OPTION * LPDHCP_OPTION;

typedef struct _DHCP_OPTION DHCP_OPTION;

typedef enum _DHCP_OPTION_TYPE {
    DhcpArrayTypeOption=1,
    DhcpUnaryElementTypeOption=0
} _DHCP_OPTION_TYPE;

typedef enum _DHCP_OPTION_TYPE DHCP_OPTION_TYPE;

struct _DHCP_ALL_OPTIONS {
    DWORD Flags;
    LPDHCP_OPTION_ARRAY NonVendorOptions;
    DWORD NumVendorOptions;
    struct _struct_5624 * VendorOptions;
};

struct _DHCP_OPTION {
    DHCP_OPTION_ID OptionID;
    LPWSTR OptionName;
    LPWSTR OptionComment;
    DHCP_OPTION_DATA DefaultValue;
    DHCP_OPTION_TYPE OptionType;
};

struct _struct_5624 {
    DHCP_OPTION Option;
    LPWSTR VendorName;
    LPWSTR ClassName;
};

struct _DHCP_OPTION_ARRAY {
    DWORD NumElements;
    LPDHCP_OPTION Options;
};

typedef struct _DHCP_ATTRIB _DHCP_ATTRIB, *P_DHCP_ATTRIB;

typedef ULONG DHCP_ATTRIB_ID;

typedef union _union_5630 _union_5630, *P_union_5630;

union _union_5630 {
    BOOL DhcpAttribBool;
    ULONG DhcpAttribUlong;
};

struct _DHCP_ATTRIB {
    DHCP_ATTRIB_ID DhcpAttribId;
    ULONG DhcpAttribType;
    union _union_5630 field_0x8;
};

typedef struct _DHCP_ATTRIB_ARRAY _DHCP_ATTRIB_ARRAY, *P_DHCP_ATTRIB_ARRAY;

typedef struct _DHCP_ATTRIB * LPDHCP_ATTRIB;

struct _DHCP_ATTRIB_ARRAY {
    ULONG NumElements;
    LPDHCP_ATTRIB DhcpAttribs;
};

typedef struct _DHCP_BIND_ELEMENT _DHCP_BIND_ELEMENT, *P_DHCP_BIND_ELEMENT;

struct _DHCP_BIND_ELEMENT {
    ULONG Flags;
    BOOL fBoundToDHCPServer;
    DHCP_IP_ADDRESS AdapterPrimaryAddress;
    DHCP_IP_ADDRESS AdapterSubnetAddress;
    LPWSTR IfDescription;
    ULONG IfIdSize;
    LPBYTE IfId;
};

typedef struct _DHCP_BIND_ELEMENT_ARRAY _DHCP_BIND_ELEMENT_ARRAY, *P_DHCP_BIND_ELEMENT_ARRAY;

typedef struct _DHCP_BIND_ELEMENT * LPDHCP_BIND_ELEMENT;

struct _DHCP_BIND_ELEMENT_ARRAY {
    DWORD NumElements;
    LPDHCP_BIND_ELEMENT Elements;
};

typedef struct _DHCP_BOOTP_IP_RANGE _DHCP_BOOTP_IP_RANGE, *P_DHCP_BOOTP_IP_RANGE;

struct _DHCP_BOOTP_IP_RANGE {
    DHCP_IP_ADDRESS StartAddress;
    DHCP_IP_ADDRESS EndAddress;
    ULONG BootpAllocated;
    ULONG MaxBootpAllowed;
};

typedef struct _DHCP_CLASS_INFO _DHCP_CLASS_INFO, *P_DHCP_CLASS_INFO;

struct _DHCP_CLASS_INFO {
    LPWSTR ClassName;
    LPWSTR ClassComment;
    DWORD ClassDataLength;
    BOOL IsVendor;
    DWORD Flags;
    LPBYTE ClassData;
};

typedef struct _DHCP_CLASS_INFO_ARRAY _DHCP_CLASS_INFO_ARRAY, *P_DHCP_CLASS_INFO_ARRAY;

typedef struct _DHCP_CLASS_INFO * LPDHCP_CLASS_INFO;

struct _DHCP_CLASS_INFO_ARRAY {
    DWORD NumElements;
    LPDHCP_CLASS_INFO Classes;
};

typedef struct _DHCP_CLASS_INFO_ARRAY_V6 _DHCP_CLASS_INFO_ARRAY_V6, *P_DHCP_CLASS_INFO_ARRAY_V6;

typedef struct _DHCP_CLASS_INFO_V6 _DHCP_CLASS_INFO_V6, *P_DHCP_CLASS_INFO_V6;

typedef struct _DHCP_CLASS_INFO_V6 * LPDHCP_CLASS_INFO_V6;

struct _DHCP_CLASS_INFO_V6 {
    LPWSTR ClassName;
    LPWSTR ClassComment;
    DWORD ClassDataLength;
    BOOL IsVendor;
    DWORD EnterpriseNumber;
    DWORD Flags;
    LPBYTE ClassData;
};

struct _DHCP_CLASS_INFO_ARRAY_V6 {
    DWORD NumElements;
    LPDHCP_CLASS_INFO_V6 Classes;
};

typedef struct _DHCP_CLIENT_FILTER_STATUS_INFO _DHCP_CLIENT_FILTER_STATUS_INFO, *P_DHCP_CLIENT_FILTER_STATUS_INFO;

typedef DWORD DHCP_IP_MASK;

typedef DHCP_BINARY_DATA DHCP_CLIENT_UID;

typedef struct _DATE_TIME DATE_TIME;

typedef struct _DHCP_HOST_INFO _DHCP_HOST_INFO, *P_DHCP_HOST_INFO;

typedef struct _DHCP_HOST_INFO DHCP_HOST_INFO;

typedef enum _QuarantineStatus {
    DEFAULTQUARSETTING=5,
    DROPPACKET=2,
    EXEMPT=4,
    NOQUARANTINE=0,
    NOQUARINFO=6,
    PROBATION=3,
    RESTRICTEDACCESS=1
} _QuarantineStatus;

typedef enum _QuarantineStatus QuarantineStatus;

struct _DHCP_HOST_INFO {
    DHCP_IP_ADDRESS IpAddress;
    LPWSTR NetBiosName;
    LPWSTR HostName;
};

struct _DHCP_CLIENT_FILTER_STATUS_INFO {
    DHCP_IP_ADDRESS ClientIpAddress;
    DHCP_IP_MASK SubnetMask;
    DHCP_CLIENT_UID ClientHardwareAddress;
    LPWSTR ClientName;
    LPWSTR ClientComment;
    DATE_TIME ClientLeaseExpires;
    DHCP_HOST_INFO OwnerHost;
    BYTE bClientType;
    BYTE AddressState;
    QuarantineStatus Status;
    DATE_TIME ProbationEnds;
    BOOL QuarantineCapable;
    DWORD FilterStatus;
};

typedef struct _DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY _DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY, *P_DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY;

typedef struct _DHCP_CLIENT_FILTER_STATUS_INFO * LPDHCP_CLIENT_FILTER_STATUS_INFO;

struct _DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY {
    DWORD NumElements;
    LPDHCP_CLIENT_FILTER_STATUS_INFO * Clients;
};

typedef struct _DHCP_CLIENT_INFO _DHCP_CLIENT_INFO, *P_DHCP_CLIENT_INFO;

struct _DHCP_CLIENT_INFO {
    DHCP_IP_ADDRESS ClientIpAddress;
    DHCP_IP_MASK SubnetMask;
    DHCP_CLIENT_UID ClientHardwareAddress;
    LPWSTR ClientName;
    LPWSTR ClientComment;
    DATE_TIME ClientLeaseExpires;
    DHCP_HOST_INFO OwnerHost;
};

typedef struct _DHCP_CLIENT_INFO_ARRAY _DHCP_CLIENT_INFO_ARRAY, *P_DHCP_CLIENT_INFO_ARRAY;

typedef struct _DHCP_CLIENT_INFO * LPDHCP_CLIENT_INFO;

struct _DHCP_CLIENT_INFO_ARRAY {
    DWORD NumElements;
    LPDHCP_CLIENT_INFO * Clients;
};

typedef struct _DHCP_CLIENT_INFO_ARRAY_V4 _DHCP_CLIENT_INFO_ARRAY_V4, *P_DHCP_CLIENT_INFO_ARRAY_V4;

typedef struct _DHCP_CLIENT_INFO_V4 _DHCP_CLIENT_INFO_V4, *P_DHCP_CLIENT_INFO_V4;

typedef struct _DHCP_CLIENT_INFO_V4 * LPDHCP_CLIENT_INFO_V4;

struct _DHCP_CLIENT_INFO_V4 {
    DHCP_IP_ADDRESS ClientIpAddress;
    DHCP_IP_MASK SubnetMask;
    DHCP_CLIENT_UID ClientHardwareAddress;
    LPWSTR ClientName;
    LPWSTR ClientComment;
    DATE_TIME ClientLeaseExpires;
    DHCP_HOST_INFO OwnerHost;
    BYTE bClientType;
};

struct _DHCP_CLIENT_INFO_ARRAY_V4 {
    DWORD NumElements;
    LPDHCP_CLIENT_INFO_V4 * Clients;
};

typedef struct _DHCP_CLIENT_INFO_ARRAY_V5 _DHCP_CLIENT_INFO_ARRAY_V5, *P_DHCP_CLIENT_INFO_ARRAY_V5;

typedef struct _DHCP_CLIENT_INFO_V5 _DHCP_CLIENT_INFO_V5, *P_DHCP_CLIENT_INFO_V5;

typedef struct _DHCP_CLIENT_INFO_V5 * LPDHCP_CLIENT_INFO_V5;

struct _DHCP_CLIENT_INFO_V5 {
    DHCP_IP_ADDRESS ClientIpAddress;
    DHCP_IP_MASK SubnetMask;
    DHCP_CLIENT_UID ClientHardwareAddress;
    LPWSTR ClientName;
    LPWSTR ClientComment;
    DATE_TIME ClientLeaseExpires;
    DHCP_HOST_INFO OwnerHost;
    BYTE bClientType;
    BYTE AddressState;
};

struct _DHCP_CLIENT_INFO_ARRAY_V5 {
    DWORD NumElements;
    LPDHCP_CLIENT_INFO_V5 * Clients;
};

typedef struct _DHCP_CLIENT_INFO_ARRAY_V6 _DHCP_CLIENT_INFO_ARRAY_V6, *P_DHCP_CLIENT_INFO_ARRAY_V6;

typedef struct _DHCP_CLIENT_INFO_V6 _DHCP_CLIENT_INFO_V6, *P_DHCP_CLIENT_INFO_V6;

typedef struct _DHCP_CLIENT_INFO_V6 * LPDHCP_CLIENT_INFO_V6;

typedef struct _DHCP_IPV6_ADDRESS _DHCP_IPV6_ADDRESS, *P_DHCP_IPV6_ADDRESS;

typedef struct _DHCP_IPV6_ADDRESS DHCP_IPV6_ADDRESS;

typedef struct _DHCP_HOST_INFO_V6 _DHCP_HOST_INFO_V6, *P_DHCP_HOST_INFO_V6;

typedef struct _DHCP_HOST_INFO_V6 DHCP_HOST_INFO_V6;

struct _DHCP_IPV6_ADDRESS {
    ULONGLONG HighOrderBits;
    ULONGLONG LowOrderBits;
};

struct _DHCP_HOST_INFO_V6 {
    DHCP_IPV6_ADDRESS IpAddress;
    LPWSTR NetBiosName;
    LPWSTR HostName;
};

struct _DHCP_CLIENT_INFO_ARRAY_V6 {
    DWORD NumElements;
    LPDHCP_CLIENT_INFO_V6 * Clients;
};

struct _DHCP_CLIENT_INFO_V6 {
    DHCP_IPV6_ADDRESS ClientIpAddress;
    DHCP_CLIENT_UID ClientDUID;
    DWORD AddressType;
    DWORD IAID;
    LPWSTR ClientName;
    LPWSTR ClientComment;
    DATE_TIME ClientValidLeaseExpires;
    DATE_TIME ClientPrefLeaseExpires;
    DHCP_HOST_INFO_V6 OwnerHost;
};

typedef struct _DHCP_CLIENT_INFO_ARRAY_VQ _DHCP_CLIENT_INFO_ARRAY_VQ, *P_DHCP_CLIENT_INFO_ARRAY_VQ;

typedef struct _DHCP_CLIENT_INFO_VQ _DHCP_CLIENT_INFO_VQ, *P_DHCP_CLIENT_INFO_VQ;

typedef struct _DHCP_CLIENT_INFO_VQ * LPDHCP_CLIENT_INFO_VQ;

struct _DHCP_CLIENT_INFO_ARRAY_VQ {
    DWORD NumElements;
    LPDHCP_CLIENT_INFO_VQ * Clients;
};

struct _DHCP_CLIENT_INFO_VQ {
    DHCP_IP_ADDRESS ClientIpAddress;
    DHCP_IP_MASK SubnetMask;
    DHCP_CLIENT_UID ClientHardwareAddress;
    LPWSTR ClientName;
    LPWSTR ClientComment;
    DATE_TIME ClientLeaseExpires;
    DHCP_HOST_INFO OwnerHost;
    BYTE bClientType;
    BYTE AddressState;
    QuarantineStatus Status;
    DATE_TIME ProbationEnds;
    BOOL QuarantineCapable;
};

typedef struct _DHCP_CLIENT_SEARCH_INFO _DHCP_CLIENT_SEARCH_INFO, *P_DHCP_CLIENT_SEARCH_INFO;

typedef enum _DHCP_CLIENT_SEARCH_TYPE {
    DhcpClientHardwareAddress=1,
    DhcpClientIpAddress=0,
    DhcpClientName=2
} _DHCP_CLIENT_SEARCH_TYPE;

typedef enum _DHCP_CLIENT_SEARCH_TYPE DHCP_SEARCH_INFO_TYPE;

typedef union _DHCP_CLIENT_SEARCH_UNION _DHCP_CLIENT_SEARCH_UNION, *P_DHCP_CLIENT_SEARCH_UNION;

union _DHCP_CLIENT_SEARCH_UNION {
    DHCP_IP_ADDRESS ClientIpAddress;
    DHCP_CLIENT_UID ClientHardwareAddress;
    LPWSTR ClientName;
};

struct _DHCP_CLIENT_SEARCH_INFO {
    DHCP_SEARCH_INFO_TYPE SearchType;
    union _DHCP_CLIENT_SEARCH_UNION SearchInfo;
};

typedef struct _DHCP_CLIENT_SEARCH_INFO_V6 _DHCP_CLIENT_SEARCH_INFO_V6, *P_DHCP_CLIENT_SEARCH_INFO_V6;

typedef enum _DHCP_CLIENT_SEARCH_TYPE_V6 {
    Dhcpv6ClientDUID=1,
    Dhcpv6ClientIpAddress=0,
    Dhcpv6ClientName=2
} _DHCP_CLIENT_SEARCH_TYPE_V6;

typedef enum _DHCP_CLIENT_SEARCH_TYPE_V6 DHCP_SEARCH_INFO_TYPE_V6;

typedef union _DHCP_CLIENT_SEARCH_UNION_V6 _DHCP_CLIENT_SEARCH_UNION_V6, *P_DHCP_CLIENT_SEARCH_UNION_V6;

union _DHCP_CLIENT_SEARCH_UNION_V6 {
    DHCP_IPV6_ADDRESS ClientIpAddress;
    DHCP_CLIENT_UID ClientDUID;
    LPWSTR ClientName;
};

struct _DHCP_CLIENT_SEARCH_INFO_V6 {
    DHCP_SEARCH_INFO_TYPE_V6 SearchType;
    union _DHCP_CLIENT_SEARCH_UNION_V6 SearchInfo;
};

typedef struct _DHCP_FILTER_ADD_INFOV4 _DHCP_FILTER_ADD_INFOV4, *P_DHCP_FILTER_ADD_INFOV4;

typedef struct _DHCP_ADDR_PATTERN DHCP_ADDR_PATTERN;

typedef enum _DHCP_FILTER_LIST_TYPE {
    Allow=1,
    Deny=0
} _DHCP_FILTER_LIST_TYPE;

typedef enum _DHCP_FILTER_LIST_TYPE DHCP_FILTER_LIST_TYPE;

struct _DHCP_FILTER_ADD_INFOV4 {
    DHCP_ADDR_PATTERN AddrPatt;
    LPWSTR Comment;
    DHCP_FILTER_LIST_TYPE ListType;
};

typedef struct _DHCP_FILTER_ENUM_INFO _DHCP_FILTER_ENUM_INFO, *P_DHCP_FILTER_ENUM_INFO;

typedef struct _DHCP_FILTER_RECORD _DHCP_FILTER_RECORD, *P_DHCP_FILTER_RECORD;

typedef struct _DHCP_FILTER_RECORD * LPDHCP_FILTER_RECORD;

struct _DHCP_FILTER_ENUM_INFO {
    DWORD NumElements;
    LPDHCP_FILTER_RECORD pEnumRecords;
};

struct _DHCP_FILTER_RECORD {
    DHCP_ADDR_PATTERN AddrPatt;
    LPWSTR Comment;
};

typedef struct _DHCP_FILTER_GLOBAL_INFO _DHCP_FILTER_GLOBAL_INFO, *P_DHCP_FILTER_GLOBAL_INFO;

struct _DHCP_FILTER_GLOBAL_INFO {
    BOOL EnforceAllowList;
    BOOL EnforceDenyList;
};

typedef enum _DHCP_FORCE_FLAG {
    DhcpFullForce=0,
    DhcpNoForce=1
} _DHCP_FORCE_FLAG;

typedef struct _DHCP_IP_ARRAY _DHCP_IP_ARRAY, *P_DHCP_IP_ARRAY;

typedef DWORD * LPDHCP_IP_ADDRESS;

struct _DHCP_IP_ARRAY {
    DWORD NumElements;
    LPDHCP_IP_ADDRESS Elements;
};

typedef struct _DHCP_IP_CLUSTER _DHCP_IP_CLUSTER, *P_DHCP_IP_CLUSTER;

struct _DHCP_IP_CLUSTER {
    DHCP_IP_ADDRESS ClusterAddress;
    DWORD ClusterMask;
};

typedef struct _DHCP_IP_RANGE _DHCP_IP_RANGE, *P_DHCP_IP_RANGE;

struct _DHCP_IP_RANGE {
    DHCP_IP_ADDRESS StartAddress;
    DHCP_IP_ADDRESS EndAddress;
};

typedef struct _DHCP_IP_RANGE_V6 _DHCP_IP_RANGE_V6, *P_DHCP_IP_RANGE_V6;

struct _DHCP_IP_RANGE_V6 {
    DHCP_IPV6_ADDRESS StartAddress;
    DHCP_IPV6_ADDRESS EndAddress;
};

typedef struct _DHCP_IP_RESERVATION _DHCP_IP_RESERVATION, *P_DHCP_IP_RESERVATION;

struct _DHCP_IP_RESERVATION {
    DHCP_IP_ADDRESS ReservedIpAddress;
    DHCP_CLIENT_UID * ReservedForClient;
};

typedef struct _DHCP_IP_RESERVATION_V4 _DHCP_IP_RESERVATION_V4, *P_DHCP_IP_RESERVATION_V4;

struct _DHCP_IP_RESERVATION_V4 {
    DHCP_IP_ADDRESS ReservedIpAddress;
    DHCP_CLIENT_UID * ReservedForClient;
    BYTE bAllowedClientTypes;
};

typedef struct _DHCP_IP_RESERVATION_V6 _DHCP_IP_RESERVATION_V6, *P_DHCP_IP_RESERVATION_V6;

struct _DHCP_IP_RESERVATION_V6 {
    DHCP_IPV6_ADDRESS ReservedIpAddress;
    DHCP_CLIENT_UID * ReservedForClient;
    DWORD InterfaceId;
};

typedef struct _DHCP_MIB_INFO _DHCP_MIB_INFO, *P_DHCP_MIB_INFO;

typedef struct _SCOPE_MIB_INFO _SCOPE_MIB_INFO, *P_SCOPE_MIB_INFO;

typedef struct _SCOPE_MIB_INFO * LPSCOPE_MIB_INFO;

struct _SCOPE_MIB_INFO {
    DHCP_IP_ADDRESS Subnet;
    DWORD NumAddressesInuse;
    DWORD NumAddressesFree;
    DWORD NumPendingOffers;
};

struct _DHCP_MIB_INFO {
    DWORD Discovers;
    DWORD Offers;
    DWORD Requests;
    DWORD Acks;
    DWORD Naks;
    DWORD Declines;
    DWORD Releases;
    DATE_TIME ServerStartTime;
    DWORD Scopes;
    LPSCOPE_MIB_INFO ScopeInfo;
};

typedef struct _DHCP_MIB_INFO_V5 _DHCP_MIB_INFO_V5, *P_DHCP_MIB_INFO_V5;

typedef struct _SCOPE_MIB_INFO_V5 _SCOPE_MIB_INFO_V5, *P_SCOPE_MIB_INFO_V5;

typedef struct _SCOPE_MIB_INFO_V5 * LPSCOPE_MIB_INFO_V5;

struct _DHCP_MIB_INFO_V5 {
    DWORD Discovers;
    DWORD Offers;
    DWORD Requests;
    DWORD Acks;
    DWORD Naks;
    DWORD Declines;
    DWORD Releases;
    DATE_TIME ServerStartTime;
    DWORD QtnNumLeases;
    DWORD QtnPctQtnLeases;
    DWORD QtnProbationLeases;
    DWORD QtnNonQtnLeases;
    DWORD QtnExemptLeases;
    DWORD QtnCapableClients;
    DWORD QtnIASErrors;
    DWORD DelayedOffers;
    DWORD ScopesWithDelayedOffers;
    DWORD Scopes;
    LPSCOPE_MIB_INFO_V5 ScopeInfo;
};

struct _SCOPE_MIB_INFO_V5 {
    DHCP_IP_ADDRESS Subnet;
    DWORD NumAddressesInuse;
    DWORD NumAddressesFree;
    DWORD NumPendingOffers;
};

typedef struct _DHCP_MIB_INFO_V6 _DHCP_MIB_INFO_V6, *P_DHCP_MIB_INFO_V6;

typedef struct _SCOPE_MIB_INFO_V6 _SCOPE_MIB_INFO_V6, *P_SCOPE_MIB_INFO_V6;

typedef struct _SCOPE_MIB_INFO_V6 * LPSCOPE_MIB_INFO_V6;

struct _DHCP_MIB_INFO_V6 {
    DWORD Solicits;
    DWORD Advertises;
    DWORD Requests;
    DWORD Renews;
    DWORD Rebinds;
    DWORD Replies;
    DWORD Confirms;
    DWORD Declines;
    DWORD Releases;
    DWORD Informs;
    DATE_TIME ServerStartTime;
    DWORD Scopes;
    LPSCOPE_MIB_INFO_V6 ScopeInfo;
};

struct _SCOPE_MIB_INFO_V6 {
    DHCP_IPV6_ADDRESS Subnet;
    ULONGLONG NumAddressesInuse;
    ULONGLONG NumAddressesFree;
    ULONGLONG NumPendingAdvertises;
};

typedef struct _DHCP_MIB_INFO_VQ _DHCP_MIB_INFO_VQ, *P_DHCP_MIB_INFO_VQ;

typedef struct _SCOPE_MIB_INFO_VQ _SCOPE_MIB_INFO_VQ, *P_SCOPE_MIB_INFO_VQ;

typedef struct _SCOPE_MIB_INFO_VQ * LPSCOPE_MIB_INFO_VQ;

struct _SCOPE_MIB_INFO_VQ {
    DHCP_IP_ADDRESS Subnet;
    DWORD NumAddressesInuse;
    DWORD NumAddressesFree;
    DWORD NumPendingOffers;
    DWORD QtnNumLeases;
    DWORD QtnPctQtnLeases;
    DWORD QtnProbationLeases;
    DWORD QtnNonQtnLeases;
    DWORD QtnExemptLeases;
    DWORD QtnCapableClients;
};

struct _DHCP_MIB_INFO_VQ {
    DWORD Discovers;
    DWORD Offers;
    DWORD Requests;
    DWORD Acks;
    DWORD Naks;
    DWORD Declines;
    DWORD Releases;
    DATE_TIME ServerStartTime;
    DWORD QtnNumLeases;
    DWORD QtnPctQtnLeases;
    DWORD QtnProbationLeases;
    DWORD QtnNonQtnLeases;
    DWORD QtnExemptLeases;
    DWORD QtnCapableClients;
    DWORD QtnIASErrors;
    DWORD Scopes;
    LPSCOPE_MIB_INFO_VQ ScopeInfo;
};

typedef struct _DHCP_OPTION_LIST _DHCP_OPTION_LIST, *P_DHCP_OPTION_LIST;

typedef struct _DHCP_OPTION_VALUE DHCP_OPTION_VALUE;

struct _DHCP_OPTION_LIST {
    DWORD NumOptions;
    DHCP_OPTION_VALUE * Options;
};

typedef struct _DHCP_OPTION_SCOPE_INFO _DHCP_OPTION_SCOPE_INFO, *P_DHCP_OPTION_SCOPE_INFO;

typedef enum _DHCP_OPTION_SCOPE_TYPE {
    DhcpDefaultOptions=0,
    DhcpGlobalOptions=1,
    DhcpMScopeOptions=4,
    DhcpReservedOptions=3,
    DhcpSubnetOptions=2
} _DHCP_OPTION_SCOPE_TYPE;

typedef enum _DHCP_OPTION_SCOPE_TYPE DHCP_OPTION_SCOPE_TYPE;

typedef union _DHCP_OPTION_SCOPE_UNION _DHCP_OPTION_SCOPE_UNION, *P_DHCP_OPTION_SCOPE_UNION;

typedef struct _DHCP_RESERVED_SCOPE _DHCP_RESERVED_SCOPE, *P_DHCP_RESERVED_SCOPE;

typedef struct _DHCP_RESERVED_SCOPE DHCP_RESERVED_SCOPE;

struct _DHCP_RESERVED_SCOPE {
    DHCP_IP_ADDRESS ReservedIpAddress;
    DHCP_IP_ADDRESS ReservedIpSubnetAddress;
};

union _DHCP_OPTION_SCOPE_UNION {
    PVOID DefaultScopeInfo;
    PVOID GlobalScopeInfo;
    DHCP_IP_ADDRESS SubnetScopeInfo;
    DHCP_RESERVED_SCOPE ReservedScopeInfo;
    LPWSTR MScopeInfo;
};

struct _DHCP_OPTION_SCOPE_INFO {
    DHCP_OPTION_SCOPE_TYPE ScopeType;
    union _DHCP_OPTION_SCOPE_UNION ScopeInfo;
};

typedef struct _DHCP_OPTION_SCOPE_INFO6 _DHCP_OPTION_SCOPE_INFO6, *P_DHCP_OPTION_SCOPE_INFO6;

typedef enum _DHCP_OPTION_SCOPE_TYPE6 {
    DhcpDefaultOptions6=0,
    DhcpGlobalOptions6=3,
    DhcpReservedOptions6=2,
    DhcpScopeOptions6=1
} _DHCP_OPTION_SCOPE_TYPE6;

typedef enum _DHCP_OPTION_SCOPE_TYPE6 DHCP_OPTION_SCOPE_TYPE6;

typedef union _DHCP_OPTION_SCOPE_UNION6 _DHCP_OPTION_SCOPE_UNION6, *P_DHCP_OPTION_SCOPE_UNION6;

typedef struct _DHCP_RESERVED_SCOPE6 _DHCP_RESERVED_SCOPE6, *P_DHCP_RESERVED_SCOPE6;

typedef struct _DHCP_RESERVED_SCOPE6 DHCP_RESERVED_SCOPE6;

struct _DHCP_RESERVED_SCOPE6 {
    DHCP_IPV6_ADDRESS ReservedIpAddress;
    DHCP_IPV6_ADDRESS ReservedIpSubnetAddress;
};

union _DHCP_OPTION_SCOPE_UNION6 {
    PVOID DefaultScopeInfo;
    DHCP_IPV6_ADDRESS SubnetScopeInfo;
    DHCP_RESERVED_SCOPE6 ReservedScopeInfo;
};

struct _DHCP_OPTION_SCOPE_INFO6 {
    DHCP_OPTION_SCOPE_TYPE6 ScopeType;
    union _DHCP_OPTION_SCOPE_UNION6 ScopeInfo;
};

typedef struct _DHCP_PERF_STATS _DHCP_PERF_STATS, *P_DHCP_PERF_STATS;

struct _DHCP_PERF_STATS {
    ULONG dwNumPacketsReceived;
    ULONG dwNumPacketsDuplicate;
    ULONG dwNumPacketsExpired;
    ULONG dwNumMilliSecondsProcessed;
    ULONG dwNumPacketsInActiveQueue;
    ULONG dwNumPacketsInPingQueue;
    ULONG dwNumDiscoversReceived;
    ULONG dwNumOffersSent;
    ULONG dwNumRequestsReceived;
    ULONG dwNumInformsReceived;
    ULONG dwNumAcksSent;
    ULONG dwNumNacksSent;
    ULONG dwNumDeclinesReceived;
    ULONG dwNumReleasesReceived;
    ULONG dwNumDelayedOfferInQueue;
    ULONG dwNumPacketsProcessed;
    ULONG dwNumPacketsInQuarWaitingQueue;
    ULONG dwNumPacketsInQuarReadyQueue;
    ULONG dwNumPacketsInQuarDecisionQueue;
};

typedef enum _DHCP_SCAN_FLAG {
    DhcpDatabaseFix=1,
    DhcpRegistryFix=0
} _DHCP_SCAN_FLAG;

typedef struct _DHCP_SCAN_ITEM _DHCP_SCAN_ITEM, *P_DHCP_SCAN_ITEM;

typedef enum _DHCP_SCAN_FLAG DHCP_SCAN_FLAG;

struct _DHCP_SCAN_ITEM {
    DHCP_IP_ADDRESS IpAddress;
    DHCP_SCAN_FLAG ScanFlag;
};

typedef struct _DHCP_SCAN_LIST _DHCP_SCAN_LIST, *P_DHCP_SCAN_LIST;

typedef struct _DHCP_SCAN_ITEM DHCP_SCAN_ITEM;

struct _DHCP_SCAN_LIST {
    DWORD NumScanItems;
    DHCP_SCAN_ITEM * ScanItems;
};

typedef struct _DHCP_SERVER_CONFIG_INFO _DHCP_SERVER_CONFIG_INFO, *P_DHCP_SERVER_CONFIG_INFO;

struct _DHCP_SERVER_CONFIG_INFO {
    DWORD APIProtocolSupport;
    LPWSTR DatabaseName;
    LPWSTR DatabasePath;
    LPWSTR BackupPath;
    DWORD BackupInterval;
    DWORD DatabaseLoggingFlag;
    DWORD RestoreFlag;
    DWORD DatabaseCleanupInterval;
    DWORD DebugFlag;
};

typedef struct _DHCP_SERVER_CONFIG_INFO_V4 _DHCP_SERVER_CONFIG_INFO_V4, *P_DHCP_SERVER_CONFIG_INFO_V4;

struct _DHCP_SERVER_CONFIG_INFO_V4 {
    DWORD APIProtocolSupport;
    LPWSTR DatabaseName;
    LPWSTR DatabasePath;
    LPWSTR BackupPath;
    DWORD BackupInterval;
    DWORD DatabaseLoggingFlag;
    DWORD RestoreFlag;
    DWORD DatabaseCleanupInterval;
    DWORD DebugFlag;
    DWORD dwPingRetries;
    DWORD cbBootTableString;
    WCHAR * wszBootTableString;
    BOOL fAuditLog;
};

typedef struct _DHCP_SERVER_CONFIG_INFO_V6 _DHCP_SERVER_CONFIG_INFO_V6, *P_DHCP_SERVER_CONFIG_INFO_V6;

struct _DHCP_SERVER_CONFIG_INFO_V6 {
    BOOL UnicastFlag;
    BOOL RapidCommitFlag;
    DWORD PreferredLifetime;
    DWORD ValidLifetime;
    DWORD T1;
    DWORD T2;
    DWORD PreferredLifetimeIATA;
    DWORD ValidLifetimeIATA;
    BOOL fAuditLog;
};

typedef struct _DHCP_SERVER_CONFIG_INFO_VQ _DHCP_SERVER_CONFIG_INFO_VQ, *P_DHCP_SERVER_CONFIG_INFO_VQ;

struct _DHCP_SERVER_CONFIG_INFO_VQ {
    DWORD APIProtocolSupport;
    LPWSTR DatabaseName;
    LPWSTR DatabasePath;
    LPWSTR BackupPath;
    DWORD BackupInterval;
    DWORD DatabaseLoggingFlag;
    DWORD RestoreFlag;
    DWORD DatabaseCleanupInterval;
    DWORD DebugFlag;
    DWORD dwPingRetries;
    DWORD cbBootTableString;
    WCHAR * wszBootTableString;
    BOOL fAuditLog;
    BOOL QuarantineOn;
    DWORD QuarDefFail;
    BOOL QuarRuntimeStatus;
};

typedef struct _DHCP_SERVER_SPECIFIC_STRINGS _DHCP_SERVER_SPECIFIC_STRINGS, *P_DHCP_SERVER_SPECIFIC_STRINGS;

struct _DHCP_SERVER_SPECIFIC_STRINGS {
    LPWSTR DefaultVendorClassName;
    LPWSTR DefaultUserClassName;
};

typedef struct _DHCP_SUBNET_ELEMENT_DATA _DHCP_SUBNET_ELEMENT_DATA, *P_DHCP_SUBNET_ELEMENT_DATA;

typedef enum _DHCP_SUBNET_ELEMENT_TYPE_V5 {
    DhcpExcludedIpRanges=3,
    DhcpIpRanges=0,
    DhcpIpRangesBootpOnly=7,
    DhcpIpRangesDhcpBootp=6,
    DhcpIpRangesDhcpOnly=5,
    DhcpIpUsedClusters=4,
    DhcpReservedIps=2,
    DhcpSecondaryHosts=1
} _DHCP_SUBNET_ELEMENT_TYPE_V5;

typedef enum _DHCP_SUBNET_ELEMENT_TYPE_V5 DHCP_SUBNET_ELEMENT_TYPE;

typedef union _DHCP_SUBNET_ELEMENT_UNION _DHCP_SUBNET_ELEMENT_UNION, *P_DHCP_SUBNET_ELEMENT_UNION;

typedef struct _DHCP_IP_RANGE DHCP_IP_RANGE;

typedef struct _DHCP_IP_RESERVATION DHCP_IP_RESERVATION;

typedef struct _DHCP_IP_CLUSTER DHCP_IP_CLUSTER;

union _DHCP_SUBNET_ELEMENT_UNION {
    DHCP_IP_RANGE * IpRange;
    DHCP_HOST_INFO * SecondaryHost;
    DHCP_IP_RESERVATION * ReservedIp;
    DHCP_IP_RANGE * ExcludeIpRange;
    DHCP_IP_CLUSTER * IpUsedCluster;
};

struct _DHCP_SUBNET_ELEMENT_DATA {
    DHCP_SUBNET_ELEMENT_TYPE ElementType;
    union _DHCP_SUBNET_ELEMENT_UNION Element;
};

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V4 _DHCP_SUBNET_ELEMENT_DATA_V4, *P_DHCP_SUBNET_ELEMENT_DATA_V4;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V4 _DHCP_SUBNET_ELEMENT_UNION_V4, *P_DHCP_SUBNET_ELEMENT_UNION_V4;

typedef struct _DHCP_IP_RESERVATION_V4 DHCP_IP_RESERVATION_V4;

union _DHCP_SUBNET_ELEMENT_UNION_V4 {
    DHCP_IP_RANGE * IpRange;
    DHCP_HOST_INFO * SecondaryHost;
    DHCP_IP_RESERVATION_V4 * ReservedIp;
    DHCP_IP_RANGE * ExcludeIpRange;
    DHCP_IP_CLUSTER * IpUsedCluster;
};

struct _DHCP_SUBNET_ELEMENT_DATA_V4 {
    DHCP_SUBNET_ELEMENT_TYPE ElementType;
    union _DHCP_SUBNET_ELEMENT_UNION_V4 Element;
};

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V5 _DHCP_SUBNET_ELEMENT_DATA_V5, *P_DHCP_SUBNET_ELEMENT_DATA_V5;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V5 _DHCP_SUBNET_ELEMENT_UNION_V5, *P_DHCP_SUBNET_ELEMENT_UNION_V5;

typedef struct _DHCP_BOOTP_IP_RANGE DHCP_BOOTP_IP_RANGE;

union _DHCP_SUBNET_ELEMENT_UNION_V5 {
    DHCP_BOOTP_IP_RANGE * IpRange;
    DHCP_HOST_INFO * SecondaryHost;
    DHCP_IP_RESERVATION_V4 * ReservedIp;
    DHCP_IP_RANGE * ExcludeIpRange;
    DHCP_IP_CLUSTER * IpUsedCluster;
};

struct _DHCP_SUBNET_ELEMENT_DATA_V5 {
    DHCP_SUBNET_ELEMENT_TYPE ElementType;
    union _DHCP_SUBNET_ELEMENT_UNION_V5 Element;
};

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V6 _DHCP_SUBNET_ELEMENT_DATA_V6, *P_DHCP_SUBNET_ELEMENT_DATA_V6;

typedef enum _DHCP_SUBNET_ELEMENT_TYPE_V6 {
    Dhcpv6ExcludedIpRanges=2,
    Dhcpv6IpRanges=0,
    Dhcpv6ReservedIps=1
} _DHCP_SUBNET_ELEMENT_TYPE_V6;

typedef enum _DHCP_SUBNET_ELEMENT_TYPE_V6 DHCP_SUBNET_ELEMENT_TYPE_V6;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V6 _DHCP_SUBNET_ELEMENT_UNION_V6, *P_DHCP_SUBNET_ELEMENT_UNION_V6;

typedef struct _DHCP_IP_RANGE_V6 DHCP_IP_RANGE_V6;

typedef struct _DHCP_IP_RESERVATION_V6 DHCP_IP_RESERVATION_V6;

union _DHCP_SUBNET_ELEMENT_UNION_V6 {
    DHCP_IP_RANGE_V6 * IpRange;
    DHCP_IP_RESERVATION_V6 * ReservedIp;
    DHCP_IP_RANGE_V6 * ExcludeIpRange;
};

struct _DHCP_SUBNET_ELEMENT_DATA_V6 {
    DHCP_SUBNET_ELEMENT_TYPE_V6 ElementType;
    union _DHCP_SUBNET_ELEMENT_UNION_V6 Element;
};

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY _DHCP_SUBNET_ELEMENT_INFO_ARRAY, *P_DHCP_SUBNET_ELEMENT_INFO_ARRAY;

typedef struct _DHCP_SUBNET_ELEMENT_DATA * LPDHCP_SUBNET_ELEMENT_DATA;

struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY {
    DWORD NumElements;
    LPDHCP_SUBNET_ELEMENT_DATA Elements;
};

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4 _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4, *P_DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4;

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V4 * LPDHCP_SUBNET_ELEMENT_DATA_V4;

struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4 {
    DWORD NumElements;
    LPDHCP_SUBNET_ELEMENT_DATA_V4 Elements;
};

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5 _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5, *P_DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5;

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V5 * LPDHCP_SUBNET_ELEMENT_DATA_V5;

struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5 {
    DWORD NumElements;
    LPDHCP_SUBNET_ELEMENT_DATA_V5 Elements;
};

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6 _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6, *P_DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6;

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V6 * LPDHCP_SUBNET_ELEMENT_DATA_V6;

struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6 {
    DWORD NumElements;
    LPDHCP_SUBNET_ELEMENT_DATA_V6 Elements;
};

typedef struct _DHCP_SUBNET_INFO _DHCP_SUBNET_INFO, *P_DHCP_SUBNET_INFO;

typedef enum _DHCP_SUBNET_STATE {
    DhcpSubnetDisabled=1,
    DhcpSubnetDisabledSwitched=3,
    DhcpSubnetEnabled=0,
    DhcpSubnetEnabledSwitched=2,
    DhcpSubnetInvalidState=4
} _DHCP_SUBNET_STATE;

typedef enum _DHCP_SUBNET_STATE DHCP_SUBNET_STATE;

struct _DHCP_SUBNET_INFO {
    DHCP_IP_ADDRESS SubnetAddress;
    DHCP_IP_MASK SubnetMask;
    LPWSTR SubnetName;
    LPWSTR SubnetComment;
    DHCP_HOST_INFO PrimaryHost;
    DHCP_SUBNET_STATE SubnetState;
};

typedef struct _DHCP_SUBNET_INFO_V6 _DHCP_SUBNET_INFO_V6, *P_DHCP_SUBNET_INFO_V6;

struct _DHCP_SUBNET_INFO_V6 {
    DHCP_IPV6_ADDRESS SubnetAddress;
    ULONG Prefix;
    USHORT Preference;
    LPWSTR SubnetName;
    LPWSTR SubnetComment;
    DWORD State;
    DWORD ScopeId;
};

typedef struct _DHCP_SUBNET_INFO_VQ _DHCP_SUBNET_INFO_VQ, *P_DHCP_SUBNET_INFO_VQ;

struct _DHCP_SUBNET_INFO_VQ {
    DHCP_IP_ADDRESS SubnetAddress;
    DHCP_IP_MASK SubnetMask;
    LPWSTR SubnetName;
    LPWSTR SubnetComment;
    DHCP_HOST_INFO PrimaryHost;
    DHCP_SUBNET_STATE SubnetState;
    DWORD QuarantineOn;
    DWORD Reserved1;
    DWORD Reserved2;
    INT64 Reserved3;
    INT64 Reserved4;
};

typedef struct _DHCP_SUPER_SCOPE_TABLE _DHCP_SUPER_SCOPE_TABLE, *P_DHCP_SUPER_SCOPE_TABLE;

typedef struct _DHCP_SUPER_SCOPE_TABLE_ENTRY _DHCP_SUPER_SCOPE_TABLE_ENTRY, *P_DHCP_SUPER_SCOPE_TABLE_ENTRY;

typedef struct _DHCP_SUPER_SCOPE_TABLE_ENTRY DHCP_SUPER_SCOPE_TABLE_ENTRY;

struct _DHCP_SUPER_SCOPE_TABLE_ENTRY {
    DHCP_IP_ADDRESS SubnetAddress;
    DWORD SuperScopeNumber;
    DWORD NextInSuperScope;
    LPWSTR SuperScopeName;
};

struct _DHCP_SUPER_SCOPE_TABLE {
    DWORD cEntries;
    DHCP_SUPER_SCOPE_TABLE_ENTRY * pEntries;
};

typedef struct _DHCPDS_SERVER _DHCPDS_SERVER, *P_DHCPDS_SERVER;

struct _DHCPDS_SERVER {
    DWORD Version;
    LPWSTR ServerName;
    DWORD ServerAddress;
    DWORD Flags;
    DWORD State;
    LPWSTR DsLocation;
    DWORD DsLocType;
};

typedef struct _DHCPDS_SERVERS _DHCPDS_SERVERS, *P_DHCPDS_SERVERS;

typedef struct _DHCPDS_SERVER * LPDHCPDS_SERVER;

struct _DHCPDS_SERVERS {
    DWORD Flags;
    DWORD NumElements;
    LPDHCPDS_SERVER Servers;
};

typedef struct _DHCPV6_BIND_ELEMENT _DHCPV6_BIND_ELEMENT, *P_DHCPV6_BIND_ELEMENT;

struct _DHCPV6_BIND_ELEMENT {
    ULONG Flags;
    BOOL fBoundToDHCPServer;
    DHCP_IPV6_ADDRESS AdapterPrimaryAddress;
    DHCP_IPV6_ADDRESS AdapterSubnetAddress;
    LPWSTR IfDescription;
    DWORD IpV6IfIndex;
    ULONG IfIdSize;
    LPBYTE IfId;
};

typedef struct _DHCPV6_BIND_ELEMENT_ARRAY _DHCPV6_BIND_ELEMENT_ARRAY, *P_DHCPV6_BIND_ELEMENT_ARRAY;

typedef struct _DHCPV6_BIND_ELEMENT * LPDHCPV6_BIND_ELEMENT;

struct _DHCPV6_BIND_ELEMENT_ARRAY {
    DWORD NumElements;
    LPDHCPV6_BIND_ELEMENT Elements;
};

typedef struct _DHCPV6_IP_ARRAY _DHCPV6_IP_ARRAY, *P_DHCPV6_IP_ARRAY;

typedef struct _DHCP_IPV6_ADDRESS * LPDHCP_IPV6_ADDRESS;

struct _DHCPV6_IP_ARRAY {
    DWORD NumElements;
    LPDHCP_IPV6_ADDRESS Elements;
};

typedef struct _DHCP_ALL_OPTION_VALUES DHCP_ALL_OPTION_VALUES;

typedef struct _DHCP_ALL_OPTIONS DHCP_ALL_OPTIONS;

typedef struct _DHCP_ATTRIB DHCP_ATTRIB;

typedef struct _DHCP_ATTRIB_ARRAY DHCP_ATTRIB_ARRAY;

typedef struct _DHCP_BIND_ELEMENT DHCP_BIND_ELEMENT;

typedef struct _DHCP_BIND_ELEMENT_ARRAY DHCP_BIND_ELEMENT_ARRAY;

typedef struct _DHCP_CLASS_INFO DHCP_CLASS_INFO;

typedef struct _DHCP_CLASS_INFO_ARRAY DHCP_CLASS_INFO_ARRAY;

typedef struct _DHCP_CLASS_INFO_ARRAY_V6 DHCP_CLASS_INFO_ARRAY_V6;

typedef struct _DHCP_CLASS_INFO_V6 DHCP_CLASS_INFO_V6;

typedef struct _DHCP_CLIENT_FILTER_STATUS_INFO DHCP_CLIENT_FILTER_STATUS_INFO;

typedef struct _DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY;

typedef struct _DHCP_CLIENT_INFO DHCP_CLIENT_INFO;

typedef struct _DHCP_CLIENT_INFO_ARRAY DHCP_CLIENT_INFO_ARRAY;

typedef struct _DHCP_CLIENT_INFO_ARRAY_V4 DHCP_CLIENT_INFO_ARRAY_V4;

typedef struct _DHCP_CLIENT_INFO_ARRAY_V5 DHCP_CLIENT_INFO_ARRAY_V5;

typedef struct _DHCP_CLIENT_INFO_ARRAY_V6 DHCP_CLIENT_INFO_ARRAY_V6;

typedef struct _DHCP_CLIENT_INFO_ARRAY_VQ DHCP_CLIENT_INFO_ARRAY_VQ;

typedef struct _DHCP_CLIENT_INFO_V4 DHCP_CLIENT_INFO_V4;

typedef struct _DHCP_CLIENT_INFO_V5 DHCP_CLIENT_INFO_V5;

typedef struct _DHCP_CLIENT_INFO_V6 DHCP_CLIENT_INFO_V6;

typedef struct _DHCP_CLIENT_INFO_VQ DHCP_CLIENT_INFO_VQ;

typedef union _DHCP_CLIENT_SEARCH_UNION DHCP_CLIENT_SEARCH_UNION;

typedef struct _DHCP_FILTER_ADD_INFOV4 DHCP_FILTER_ADD_INFO;

typedef struct _DHCP_FILTER_ENUM_INFO DHCP_FILTER_ENUM_INFO;

typedef struct _DHCP_FILTER_GLOBAL_INFO DHCP_FILTER_GLOBAL_INFO;

typedef struct _DHCP_FILTER_RECORD DHCP_FILTER_RECORD;

typedef enum _DHCP_FORCE_FLAG DHCP_FORCE_FLAG;

typedef struct _DHCP_IP_ARRAY DHCP_IP_ARRAY;

typedef struct _DHCP_MIB_INFO DHCP_MIB_INFO;

typedef struct _DHCP_MIB_INFO_V5 DHCP_MIB_INFO_V5;

typedef struct _DHCP_MIB_INFO_V6 DHCP_MIB_INFO_V6;

typedef struct _DHCP_MIB_INFO_VQ DHCP_MIB_INFO_VQ;

typedef struct _DHCP_OPTION_ARRAY DHCP_OPTION_ARRAY;

typedef struct _DHCP_OPTION_DATA_ELEMENT DHCP_OPTION_DATA_ELEMENT;

typedef union _DHCP_OPTION_ELEMENT_UNION DHCP_OPTION_ELEMENT_UNION;

typedef struct _DHCP_OPTION_LIST DHCP_OPTION_LIST;

typedef struct _DHCP_OPTION_SCOPE_INFO DHCP_OPTION_SCOPE_INFO;

typedef struct _DHCP_OPTION_SCOPE_INFO6 DHCP_OPTION_SCOPE_INFO6;

typedef union _DHCP_OPTION_SCOPE_UNION6 DHCP_OPTION_SCOPE_UNION6;

typedef struct _DHCP_OPTION_VALUE_ARRAY DHCP_OPTION_VALUE_ARRAY;

typedef struct _DHCP_PERF_STATS DHCP_PERF_STATS;

typedef DWORD DHCP_RESUME_HANDLE;

typedef DHCP_IPV6_ADDRESS DHCP_RESUME_IPV6_HANDLE;

typedef struct _DHCP_SCAN_LIST DHCP_SCAN_LIST;

typedef struct _DHCP_CLIENT_SEARCH_INFO DHCP_SEARCH_INFO;

typedef struct _DHCP_CLIENT_SEARCH_INFO_V6 DHCP_SEARCH_INFO_V6;

typedef struct _DHCP_SERVER_CONFIG_INFO DHCP_SERVER_CONFIG_INFO;

typedef struct _DHCP_SERVER_CONFIG_INFO_V4 DHCP_SERVER_CONFIG_INFO_V4;

typedef struct _DHCP_SERVER_CONFIG_INFO_V6 DHCP_SERVER_CONFIG_INFO_V6;

typedef struct _DHCP_SERVER_CONFIG_INFO_VQ DHCP_SERVER_CONFIG_INFO_VQ;

typedef struct _DHCPDS_SERVER DHCPDS_SERVER;

typedef DHCPDS_SERVER DHCP_SERVER_INFO;

typedef struct _DHCPDS_SERVERS DHCPDS_SERVERS;

typedef DHCPDS_SERVERS DHCP_SERVER_INFO_ARRAY;

typedef struct _DHCP_SERVER_SPECIFIC_STRINGS DHCP_SERVER_SPECIFIC_STRINGS;

typedef struct _DHCP_SUBNET_ELEMENT_DATA DHCP_SUBNET_ELEMENT_DATA;

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V4 DHCP_SUBNET_ELEMENT_DATA_V4;

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V5 DHCP_SUBNET_ELEMENT_DATA_V5;

typedef struct _DHCP_SUBNET_ELEMENT_DATA_V6 DHCP_SUBNET_ELEMENT_DATA_V6;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY DHCP_SUBNET_ELEMENT_INFO_ARRAY;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4 DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5 DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6 DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6;

typedef union _DHCP_SUBNET_ELEMENT_UNION DHCP_SUBNET_ELEMENT_UNION;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V4 DHCP_SUBNET_ELEMENT_UNION_V4;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V6 DHCP_SUBNET_ELEMENT_UNION_V6;

typedef struct _DHCP_SUBNET_INFO DHCP_SUBNET_INFO;

typedef struct _DHCP_SUBNET_INFO_V6 DHCP_SUBNET_INFO_V6;

typedef struct _DHCP_SUBNET_INFO_VQ DHCP_SUBNET_INFO_VQ;

typedef struct _DHCP_SUPER_SCOPE_TABLE DHCP_SUPER_SCOPE_TABLE;

typedef struct _DHCPV6_BIND_ELEMENT DHCPV6_BIND_ELEMENT;

typedef struct _DHCPV6_BIND_ELEMENT_ARRAY DHCPV6_BIND_ELEMENT_ARRAY;

typedef struct _DHCPV6_IP_ARRAY DHCPV6_IP_ARRAY;

typedef struct _DATE_TIME * LPDATE_TIME;

typedef struct _DHCP_ADDR_PATTERN * LPDHCP_ADDR_PATTERN;

typedef struct _DHCP_ALL_OPTION_VALUES * LPDHCP_ALL_OPTION_VALUES;

typedef struct _DHCP_ALL_OPTIONS * LPDHCP_ALL_OPTIONS;

typedef struct _DHCP_ATTRIB_ARRAY * LPDHCP_ATTRIB_ARRAY;

typedef ULONG * LPDHCP_ATTRIB_ID;

typedef struct _DHCP_BINARY_DATA * LPDHCP_BINARY_DATA;

typedef struct _DHCP_BIND_ELEMENT_ARRAY * LPDHCP_BIND_ELEMENT_ARRAY;

typedef struct _DHCP_BOOTP_IP_RANGE * LPDHCP_BOOT_IP_RANGE;

typedef struct _DHCP_CLASS_INFO_ARRAY * LPDHCP_CLASS_INFO_ARRAY;

typedef struct _DHCP_CLASS_INFO_ARRAY_V6 * LPDHCP_CLASS_INFO_ARRAY_V6;

typedef struct _DHCP_CLIENT_FILTER_STATUS_INFO_ARRAY * LPDHCP_CLIENT_FILTER_STATUS_INFO_ARRAY;

typedef struct _DHCP_CLIENT_INFO_ARRAY * LPDHCP_CLIENT_INFO_ARRAY;

typedef struct _DHCP_CLIENT_INFO_ARRAY_V4 * LPDHCP_CLIENT_INFO_ARRAY_V4;

typedef struct _DHCP_CLIENT_INFO_ARRAY_V5 * LPDHCP_CLIENT_INFO_ARRAY_V5;

typedef struct _DHCP_CLIENT_INFO_ARRAY_V6 * LPDHCP_CLIENT_INFO_ARRAY_V6;

typedef struct _DHCP_CLIENT_INFO_ARRAY_VQ * LPDHCP_CLIENT_INFO_ARRAY_VQ;

typedef union _DHCP_CLIENT_SEARCH_UNION * LPDHCP_CLIENT_SEARCH_UNION;

typedef struct _DHCP_FILTER_ADD_INFOV4 * LPDHCP_FILTER_ADD_INFO;

typedef struct _DHCP_FILTER_ENUM_INFO * LPDHCP_FILTER_ENUM_INFO;

typedef struct _DHCP_FILTER_GLOBAL_INFO * LPDHCP_FILTER_GLOBAL_INFO;

typedef enum _DHCP_FILTER_LIST_TYPE * LPDHCP_FILTER_LIST_TYPE;

typedef enum _DHCP_FORCE_FLAG * LPDHCP_FORCE_FLAG;

typedef struct _DHCP_HOST_INFO * LPDHCP_HOST_INFO;

typedef struct _DHCP_HOST_INFO_V6 * LPDHCP_HOST_INFO_V6;

typedef struct _DHCP_IP_ARRAY * LPDHCP_IP_ARRAY;

typedef struct _DHCP_IP_CLUSTER * LPDHCP_IP_CLUSTER;

typedef struct _DHCP_IP_RANGE * LPDHCP_IP_RANGE;

typedef struct _DHCP_IP_RANGE_V6 * LPDHCP_IP_RANGE_V6;

typedef struct _DHCP_IP_RESERVATION * LPDHCP_IP_RESERVATION;

typedef struct _DHCP_IP_RESERVATION_V4 * LPDHCP_IP_RESERVATION_V4;

typedef struct _DHCP_IP_RESERVATION_V6 * LPDHCP_IP_RESERVATION_V6;

typedef struct _DHCP_MIB_INFO * LPDHCP_MIB_INFO;

typedef struct _DHCP_MIB_INFO_V5 * LPDHCP_MIB_INFO_V5;

typedef struct _DHCP_MIB_INFO_V6 * LPDHCP_MIB_INFO_V6;

typedef struct _DHCP_MIB_INFO_VQ * LPDHCP_MIB_INFO_VQ;

typedef struct _DHCP_OPTION_DATA * LPDHCP_OPTION_DATA;

typedef enum _DHCP_OPTION_DATA_TYPE * LPDHCP_OPTION_DATA_TYPE;

typedef union _DHCP_OPTION_ELEMENT_UNION * LPDHCP_OPTION_ELEMENT_UNION;

typedef struct _DHCP_OPTION_LIST * LPDHCP_OPTION_LIST;

typedef struct _DHCP_OPTION_SCOPE_INFO * LPDHCP_OPTION_SCOPE_INFO;

typedef struct _DHCP_OPTION_SCOPE_INFO6 * LPDHCP_OPTION_SCOPE_INFO6;

typedef enum _DHCP_OPTION_SCOPE_TYPE * LPDHCP_OPTION_SCOPE_TYPE;

typedef enum _DHCP_OPTION_SCOPE_TYPE6 * LPDHCP_OPTION_SCOPE_TYPE6;

typedef union _DHCP_OPTION_SCOPE_UNION6 * LPDHCP_OPTION_SCOPE_UNION6;

typedef enum _DHCP_OPTION_TYPE * LPDHCP_OPTION_TYPE;

typedef struct _DHCP_PERF_STATS * LPDHCP_PERF_STATS;

typedef struct _DHCP_RESERVED_SCOPE * LPDHCP_RESERVED_SCOPE;

typedef struct _DHCP_RESERVED_SCOPE6 * LPDHCP_RESERVED_SCOPE6;

typedef enum _DHCP_SCAN_FLAG * LPDHCP_SCAN_FLAG;

typedef struct _DHCP_SCAN_ITEM * LPDHCP_SCAN_ITEM;

typedef struct _DHCP_SCAN_LIST * LPDHCP_SCAN_LIST;

typedef struct _DHCP_CLIENT_SEARCH_INFO * LPDHCP_SEARCH_INFO;

typedef enum _DHCP_CLIENT_SEARCH_TYPE * LPDHCP_SEARCH_INFO_TYPE;

typedef enum _DHCP_CLIENT_SEARCH_TYPE_V6 * LPDHCP_SEARCH_INFO_TYPE_V6;

typedef struct _DHCP_CLIENT_SEARCH_INFO_V6 * LPDHCP_SEARCH_INFO_V6;

typedef struct _DHCP_SERVER_CONFIG_INFO * LPDHCP_SERVER_CONFIG_INFO;

typedef struct _DHCP_SERVER_CONFIG_INFO_V4 * LPDHCP_SERVER_CONFIG_INFO_V4;

typedef struct _DHCP_SERVER_CONFIG_INFO_V6 * LPDHCP_SERVER_CONFIG_INFO_V6;

typedef struct _DHCP_SERVER_CONFIG_INFO_VQ * LPDHCP_SERVER_CONFIG_INFO_VQ;

typedef LPDHCPDS_SERVER LPDHCP_SERVER_INFO;

typedef struct _DHCPDS_SERVERS * LPDHCPDS_SERVERS;

typedef LPDHCPDS_SERVERS LPDHCP_SERVER_INFO_ARRAY;

typedef struct _DHCP_SERVER_SPECIFIC_STRINGS * LPDHCP_SERVER_SPECIFIC_STRINGS;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY * LPDHCP_SUBNET_ELEMENT_INFO_ARRAY;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V4 * LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V4;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V5 * LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V5;

typedef struct _DHCP_SUBNET_ELEMENT_INFO_ARRAY_V6 * LPDHCP_SUBNET_ELEMENT_INFO_ARRAY_V6;

typedef enum _DHCP_SUBNET_ELEMENT_TYPE_V5 * LPDHCP_SUBNET_ELEMENT_TYPE;

typedef enum _DHCP_SUBNET_ELEMENT_TYPE_V6 * LPDHCP_SUBNET_ELEMENT_TYPE_V6;

typedef union _DHCP_SUBNET_ELEMENT_UNION * LPDHCP_SUBNET_ELEMENT_UNION;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V4 * LPDHCP_SUBNET_ELEMENT_UNION_V4;

typedef union _DHCP_SUBNET_ELEMENT_UNION_V6 * LPDHCP_SUBNET_ELEMENT_UNION_V6;

typedef struct _DHCP_SUBNET_INFO * LPDHCP_SUBNET_INFO;

typedef struct _DHCP_SUBNET_INFO_V6 * LPDHCP_SUBNET_INFO_V6;

typedef struct _DHCP_SUBNET_INFO_VQ * LPDHCP_SUBNET_INFO_VQ;

typedef enum _DHCP_SUBNET_STATE * LPDHCP_SUBNET_STATE;

typedef struct _DHCP_SUPER_SCOPE_TABLE * LPDHCP_SUPER_SCOPE_TABLE;

typedef struct _DHCP_SUPER_SCOPE_TABLE_ENTRY * LPDHCP_SUPER_SCOPE_TABLE_ENTRY;

typedef struct _DHCPV6_BIND_ELEMENT_ARRAY * LPDHCPV6_BIND_ELEMENT_ARRAY;

typedef struct _DHCPV6_IP_ARRAY * LPDHCPV6_IP_ARRAY;

typedef struct _DWORD_DWORD * LPDWORD_DWORD;

typedef struct _DATE_TIME * PDATE_TIME;

typedef struct _DHCP_ATTRIB * PDHCP_ATTRIB;

typedef struct _DHCP_ATTRIB_ARRAY * PDHCP_ATTRIB_ARRAY;

typedef ULONG * PDHCP_ATTRIB_ID;

typedef DWORD * PDHCP_IP_ADDRESS;

typedef struct _DHCP_IPV6_ADDRESS * PDHCP_IPV6_ADDRESS;

typedef struct _DHCPDS_SERVER * PDHCPDS_SERVER;

typedef PDHCPDS_SERVER PDHCP_SERVER_INFO;

typedef struct _DHCPDS_SERVERS * PDHCPDS_SERVERS;

typedef PDHCPDS_SERVERS PDHCP_SERVER_INFO_ARRAY;

typedef struct _DHCP_SUBNET_INFO_V6 * PDHCP_SUBNET_INFO_V6;

typedef struct _SCOPE_MIB_INFO SCOPE_MIB_INFO;

typedef struct _SCOPE_MIB_INFO_V5 SCOPE_MIB_INFO_V5;

typedef struct _SCOPE_MIB_INFO_V6 SCOPE_MIB_INFO_V6;

typedef struct _SCOPE_MIB_INFO_VQ SCOPE_MIB_INFO_VQ;

typedef struct _diskfree_t _diskfree_t, *P_diskfree_t;

struct _diskfree_t {
    uint total_clusters;
    uint avail_clusters;
    uint sectors_per_cluster;
    uint bytes_per_sector;
};

#define chx1 1040

#define chx10 1049

#define chx11 1050

#define chx12 1051

#define chx13 1052

#define chx14 1053

#define chx15 1054

#define chx16 1055

#define chx2 1041

#define chx3 1042

#define chx4 1043

#define chx5 1044

#define chx6 1045

#define chx7 1046

#define chx8 1047

#define chx9 1048

#define cmb1 1136

#define cmb10 1145

#define cmb11 1146

#define cmb12 1147

#define cmb13 1148

#define cmb14 1149

#define cmb15 1150

#define cmb16 1151

#define cmb2 1137

#define cmb3 1138

#define cmb4 1139

#define cmb5 1140

#define cmb6 1141

#define cmb7 1142

#define cmb8 1143

#define cmb9 1144

#define COLORMGMTDLGORD 1551

#define ctl1 1184

#define ctlFirst 1024

#define ctlLast 1279

#define edt1 1152

#define edt10 1161

#define edt11 1162

#define edt12 1163

#define edt13 1164

#define edt14 1165

#define edt15 1166

#define edt16 1167

#define edt2 1153

#define edt3 1154

#define edt4 1155

#define edt5 1156

#define edt6 1157

#define edt7 1158

#define edt8 1159

#define edt9 1160

#define FILEOPENORD 1536

#define FINDDLGORD 1540

#define FONTDLGORD 1542

#define FORMATDLGORD30 1544

#define FORMATDLGORD31 1543

#define frm1 1076

#define frm2 1077

#define frm3 1078

#define frm4 1079

#define grp1 1072

#define grp2 1073

#define grp3 1074

#define grp4 1075

#define ico1 1084

#define ico2 1085

#define ico3 1086

#define ico4 1087

#define lst1 1120

#define lst10 1129

#define lst11 1130

#define lst12 1131

#define lst13 1132

#define lst14 1133

#define lst15 1134

#define lst16 1135

#define lst2 1121

#define lst3 1122

#define lst4 1123

#define lst5 1124

#define lst6 1125

#define lst7 1126

#define lst8 1127

#define lst9 1128

#define MULTIFILEOPENORD 1537

#define NEWFILEOPENORD 1547

#define NEWFILEOPENV2ORD 1552

#define PAGESETUPDLGORD 1546

#define PAGESETUPDLGORDMOTIF 1550

#define PRINTDLGEXORD 1549

#define PRINTDLGORD 1538

#define PRNSETUPDLGORD 1539

#define psh1 1024

#define psh10 1033

#define psh11 1034

#define psh12 1035

#define psh13 1036

#define psh14 1037

#define psh15 1038

#define psh16 1039

#define psh2 1025

#define psh3 1026

#define psh4 1027

#define psh5 1028

#define psh6 1029

#define psh7 1030

#define psh8 1031

#define psh9 1032

#define pshHelp 1038

#define rad1 1056

#define rad10 1065

#define rad11 1066

#define rad12 1067

#define rad13 1068

#define rad14 1069

#define rad15 1070

#define rad16 1071

#define rad2 1057

#define rad3 1058

#define rad4 1059

#define rad5 1060

#define rad6 1061

#define rad7 1062

#define rad8 1063

#define rad9 1064

#define rct1 1080

#define rct2 1081

#define rct3 1082

#define rct4 1083

#define REPLACEDLGORD 1541

#define RUNDLGORD 1545

#define scr1 1168

#define scr2 1169

#define scr3 1170

#define scr4 1171

#define scr5 1172

#define scr6 1173

#define scr7 1174

#define scr8 1175

#define stc1 1088

#define stc10 1097

#define stc11 1098

#define stc12 1099

#define stc13 1100

#define stc14 1101

#define stc15 1102

#define stc16 1103

#define stc17 1104

#define stc18 1105

#define stc19 1106

#define stc2 1089

#define stc20 1107

#define stc21 1108

#define stc22 1109

#define stc23 1110

#define stc24 1111

#define stc25 1112

#define stc26 1113

#define stc27 1114

#define stc28 1115

#define stc29 1116

#define stc3 1090

#define stc30 1117

#define stc31 1118

#define stc32 1119

#define stc4 1091

#define stc5 1092

#define stc6 1093

#define stc7 1094

#define stc8 1095

#define stc9 1096

typedef struct tagCRGB tagCRGB, *PtagCRGB;

typedef struct tagCRGB CRGB;

struct tagCRGB {
    BYTE bRed;
    BYTE bGreen;
    BYTE bBlue;
    BYTE bExtra;
};

#define MSOCMDERR_E_CANCELED 2147746051

#define MSOCMDERR_E_DISABLED 2147746049

#define MSOCMDERR_E_FIRST 2147746048

#define MSOCMDERR_E_NOHELP 2147746050

#define MSOCMDERR_E_NOTSUPPORTED 2147746048

#define MSOCMDERR_E_UNKNOWNGROUP 2147746052

#define OLECMDERR_E_CANCELED 2147746051

#define OLECMDERR_E_DISABLED 2147746049

#define OLECMDERR_E_FIRST 2147746048

#define OLECMDERR_E_NOHELP 2147746050

#define OLECMDERR_E_NOTSUPPORTED 2147746048

#define OLECMDERR_E_UNKNOWNGROUP 2147746052

#define PAGESET_TOLASTPAGE -1

typedef enum __MIDL_IOleDocument_0001 {
    DOCMISC_CANCREATEMULTIPLEVIEWS=1,
    DOCMISC_CANTOPENEDIT=4,
    DOCMISC_NOFILESUPPORT=8,
    DOCMISC_SUPPORTCOMPLEXRECTANGLES=2
} __MIDL_IOleDocument_0001;

typedef enum __MIDL_IPrint_0001 {
    PRINTFLAG_DONTACTUALLYPRINT=16,
    PRINTFLAG_FORCEPROPERTIES=32,
    PRINTFLAG_MAYBOTHERUSER=1,
    PRINTFLAG_PRINTTOFILE=64,
    PRINTFLAG_PROMPTUSER=2,
    PRINTFLAG_RECOMPOSETODEVICE=8,
    PRINTFLAG_USERMAYCHANGEPRINTER=4
} __MIDL_IPrint_0001;

typedef struct _tagOLECMD _tagOLECMD, *P_tagOLECMD;

struct _tagOLECMD {
    ULONG cmdID;
    DWORD cmdf;
};

typedef struct _tagOLECMDTEXT _tagOLECMDTEXT, *P_tagOLECMDTEXT;

struct _tagOLECMDTEXT {
    DWORD cmdtextf;
    ULONG cwActual;
    ULONG cwBuf;
    wchar_t rgwz[1];
};

typedef enum __MIDL_IOleDocument_0001 DOCMISC;

typedef enum enum_3705 {
    OLECMDIDF_REFRESH_CLEARUSERINPUT=4096,
    OLECMDIDF_REFRESH_COMPLETELY=3,
    OLECMDIDF_REFRESH_CONTINUE=2,
    OLECMDIDF_REFRESH_IFEXPIRED=1,
    OLECMDIDF_REFRESH_LEVELMASK=255,
    OLECMDIDF_REFRESH_NORMAL=0,
    OLECMDIDF_REFRESH_NO_CACHE=4,
    OLECMDIDF_REFRESH_PAGEACTION_INVALID_CERT=67108864,
    OLECMDIDF_REFRESH_PAGEACTION_MIXEDCONTENT=33554432,
    OLECMDIDF_REFRESH_PROMPTIFOFFLINE=8192,
    OLECMDIDF_REFRESH_RELOAD=5
} enum_3705;

typedef enum enum_3706 {
    OLECMDIDF_WINDOWSTATE_ENABLED=2,
    OLECMDIDF_WINDOWSTATE_ENABLED_VALID=131072,
    OLECMDIDF_WINDOWSTATE_USERVISIBLE=1,
    OLECMDIDF_WINDOWSTATE_USERVISIBLE_VALID=65536
} enum_3706;

typedef struct IContinueCallback IContinueCallback, *PIContinueCallback;

typedef struct IContinueCallbackVtbl IContinueCallbackVtbl, *PIContinueCallbackVtbl;

struct IContinueCallback {
    struct IContinueCallbackVtbl * lpVtbl;
};

struct IContinueCallbackVtbl {
    HRESULT (* QueryInterface)(struct IContinueCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IContinueCallback *);
    ULONG (* Release)(struct IContinueCallback *);
    HRESULT (* FContinue)(struct IContinueCallback *);
    HRESULT (* FContinuePrinting)(struct IContinueCallback *, LONG, LONG, wchar_t *);
};

typedef struct IEnumOleDocumentViews IEnumOleDocumentViews, *PIEnumOleDocumentViews;

typedef struct IEnumOleDocumentViewsVtbl IEnumOleDocumentViewsVtbl, *PIEnumOleDocumentViewsVtbl;

typedef struct IOleDocumentView IOleDocumentView, *PIOleDocumentView;

typedef struct IOleDocumentViewVtbl IOleDocumentViewVtbl, *PIOleDocumentViewVtbl;

typedef struct IOleInPlaceSite IOleInPlaceSite, *PIOleInPlaceSite;

typedef struct IStream * LPSTREAM;

typedef struct IOleInPlaceSiteVtbl IOleInPlaceSiteVtbl, *PIOleInPlaceSiteVtbl;

typedef struct IOleInPlaceFrame IOleInPlaceFrame, *PIOleInPlaceFrame;

typedef struct IOleInPlaceUIWindow IOleInPlaceUIWindow, *PIOleInPlaceUIWindow;

typedef struct tagOIFI tagOIFI, *PtagOIFI;

typedef struct tagOIFI * LPOLEINPLACEFRAMEINFO;

typedef RECT * LPCRECT;

typedef struct IOleInPlaceFrameVtbl IOleInPlaceFrameVtbl, *PIOleInPlaceFrameVtbl;

typedef LPCRECT LPCBORDERWIDTHS;

typedef struct IOleInPlaceActiveObject IOleInPlaceActiveObject, *PIOleInPlaceActiveObject;

typedef OLECHAR * LPCOLESTR;

typedef struct HMENU__ HMENU__, *PHMENU__;

typedef struct HMENU__ * HMENU;

typedef struct tagOleMenuGroupWidths tagOleMenuGroupWidths, *PtagOleMenuGroupWidths;

typedef struct tagOleMenuGroupWidths * LPOLEMENUGROUPWIDTHS;

typedef HGLOBAL HOLEMENU;

typedef struct tagMSG tagMSG, *PtagMSG;

typedef struct tagMSG * LPMSG;

typedef struct IOleInPlaceUIWindowVtbl IOleInPlaceUIWindowVtbl, *PIOleInPlaceUIWindowVtbl;

typedef struct HACCEL__ HACCEL__, *PHACCEL__;

typedef struct HACCEL__ * HACCEL;

typedef struct IOleInPlaceActiveObjectVtbl IOleInPlaceActiveObjectVtbl, *PIOleInPlaceActiveObjectVtbl;

struct IOleInPlaceSite {
    struct IOleInPlaceSiteVtbl * lpVtbl;
};

struct HACCEL__ {
    int unused;
};

struct IOleInPlaceActiveObjectVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceActiveObject *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceActiveObject *);
    ULONG (* Release)(struct IOleInPlaceActiveObject *);
    HRESULT (* GetWindow)(struct IOleInPlaceActiveObject *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (* TranslateAcceleratorA)(struct IOleInPlaceActiveObject *, LPMSG);
    HRESULT (* OnFrameWindowActivate)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (* OnDocWindowActivate)(struct IOleInPlaceActiveObject *, BOOL);
    HRESULT (* ResizeBorder)(struct IOleInPlaceActiveObject *, LPCRECT, struct IOleInPlaceUIWindow *, BOOL);
    HRESULT (* EnableModeless)(struct IOleInPlaceActiveObject *, BOOL);
};

struct HMENU__ {
    int unused;
};

struct IOleDocumentView {
    struct IOleDocumentViewVtbl * lpVtbl;
};

struct IOleInPlaceUIWindow {
    struct IOleInPlaceUIWindowVtbl * lpVtbl;
};

struct tagOleMenuGroupWidths {
    LONG width[6];
};

struct IOleInPlaceUIWindowVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceUIWindow *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceUIWindow *);
    ULONG (* Release)(struct IOleInPlaceUIWindow *);
    HRESULT (* GetWindow)(struct IOleInPlaceUIWindow *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceUIWindow *, BOOL);
    HRESULT (* GetBorder)(struct IOleInPlaceUIWindow *, LPRECT);
    HRESULT (* RequestBorderSpace)(struct IOleInPlaceUIWindow *, LPCBORDERWIDTHS);
    HRESULT (* SetBorderSpace)(struct IOleInPlaceUIWindow *, LPCBORDERWIDTHS);
    HRESULT (* SetActiveObject)(struct IOleInPlaceUIWindow *, struct IOleInPlaceActiveObject *, LPCOLESTR);
};

struct tagOIFI {
    UINT cb;
    BOOL fMDIApp;
    HWND hwndFrame;
    HACCEL haccel;
    UINT cAccelEntries;
};

struct IEnumOleDocumentViewsVtbl {
    HRESULT (* QueryInterface)(struct IEnumOleDocumentViews *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumOleDocumentViews *);
    ULONG (* Release)(struct IEnumOleDocumentViews *);
    HRESULT (* Next)(struct IEnumOleDocumentViews *, ULONG, struct IOleDocumentView * *, ULONG *);
    HRESULT (* Skip)(struct IEnumOleDocumentViews *, ULONG);
    HRESULT (* Reset)(struct IEnumOleDocumentViews *);
    HRESULT (* Clone)(struct IEnumOleDocumentViews *, struct IEnumOleDocumentViews * *);
};

struct IOleDocumentViewVtbl {
    HRESULT (* QueryInterface)(struct IOleDocumentView *, IID *, void * *);
    ULONG (* AddRef)(struct IOleDocumentView *);
    ULONG (* Release)(struct IOleDocumentView *);
    HRESULT (* SetInPlaceSite)(struct IOleDocumentView *, struct IOleInPlaceSite *);
    HRESULT (* GetInPlaceSite)(struct IOleDocumentView *, struct IOleInPlaceSite * *);
    HRESULT (* GetDocument)(struct IOleDocumentView *, struct IUnknown * *);
    HRESULT (* SetRect)(struct IOleDocumentView *, LPRECT);
    HRESULT (* GetRect)(struct IOleDocumentView *, LPRECT);
    HRESULT (* SetRectComplex)(struct IOleDocumentView *, LPRECT, LPRECT, LPRECT, LPRECT);
    HRESULT (* Show)(struct IOleDocumentView *, BOOL);
    HRESULT (* UIActivate)(struct IOleDocumentView *, BOOL);
    HRESULT (* Open)(struct IOleDocumentView *);
    HRESULT (* CloseView)(struct IOleDocumentView *, DWORD);
    HRESULT (* SaveViewState)(struct IOleDocumentView *, LPSTREAM);
    HRESULT (* ApplyViewState)(struct IOleDocumentView *, LPSTREAM);
    HRESULT (* Clone)(struct IOleDocumentView *, struct IOleInPlaceSite *, struct IOleDocumentView * *);
};

struct IOleInPlaceSiteVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceSite *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceSite *);
    ULONG (* Release)(struct IOleInPlaceSite *);
    HRESULT (* GetWindow)(struct IOleInPlaceSite *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceSite *, BOOL);
    HRESULT (* CanInPlaceActivate)(struct IOleInPlaceSite *);
    HRESULT (* OnInPlaceActivate)(struct IOleInPlaceSite *);
    HRESULT (* OnUIActivate)(struct IOleInPlaceSite *);
    HRESULT (* GetWindowContext)(struct IOleInPlaceSite *, struct IOleInPlaceFrame * *, struct IOleInPlaceUIWindow * *, LPRECT, LPRECT, LPOLEINPLACEFRAMEINFO);
    HRESULT (* Scroll)(struct IOleInPlaceSite *, SIZE);
    HRESULT (* OnUIDeactivate)(struct IOleInPlaceSite *, BOOL);
    HRESULT (* OnInPlaceDeactivate)(struct IOleInPlaceSite *);
    HRESULT (* DiscardUndoState)(struct IOleInPlaceSite *);
    HRESULT (* DeactivateAndUndo)(struct IOleInPlaceSite *);
    HRESULT (* OnPosRectChange)(struct IOleInPlaceSite *, LPCRECT);
};

struct IEnumOleDocumentViews {
    struct IEnumOleDocumentViewsVtbl * lpVtbl;
};

struct IOleInPlaceFrame {
    struct IOleInPlaceFrameVtbl * lpVtbl;
};

struct IOleInPlaceFrameVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceFrame *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceFrame *);
    ULONG (* Release)(struct IOleInPlaceFrame *);
    HRESULT (* GetWindow)(struct IOleInPlaceFrame *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceFrame *, BOOL);
    HRESULT (* GetBorder)(struct IOleInPlaceFrame *, LPRECT);
    HRESULT (* RequestBorderSpace)(struct IOleInPlaceFrame *, LPCBORDERWIDTHS);
    HRESULT (* SetBorderSpace)(struct IOleInPlaceFrame *, LPCBORDERWIDTHS);
    HRESULT (* SetActiveObject)(struct IOleInPlaceFrame *, struct IOleInPlaceActiveObject *, LPCOLESTR);
    HRESULT (* InsertMenus)(struct IOleInPlaceFrame *, HMENU, LPOLEMENUGROUPWIDTHS);
    HRESULT (* SetMenu)(struct IOleInPlaceFrame *, HMENU, HOLEMENU, HWND);
    HRESULT (* RemoveMenus)(struct IOleInPlaceFrame *, HMENU);
    HRESULT (* SetStatusText)(struct IOleInPlaceFrame *, LPCOLESTR);
    HRESULT (* EnableModeless)(struct IOleInPlaceFrame *, BOOL);
    HRESULT (* TranslateAcceleratorA)(struct IOleInPlaceFrame *, LPMSG, WORD);
};

struct IOleInPlaceActiveObject {
    struct IOleInPlaceActiveObjectVtbl * lpVtbl;
};

struct tagMSG {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
    DWORD time;
    POINT pt;
};

typedef struct IOleCommandTarget IOleCommandTarget, *PIOleCommandTarget;

typedef struct IOleCommandTargetVtbl IOleCommandTargetVtbl, *PIOleCommandTargetVtbl;

typedef struct _tagOLECMD OLECMD;

typedef struct _tagOLECMDTEXT OLECMDTEXT;

typedef struct tagVARIANT tagVARIANT, *PtagVARIANT;

typedef struct tagVARIANT VARIANT;

typedef union _union_2683 _union_2683, *P_union_2683;

typedef struct __tagVARIANT __tagVARIANT, *P__tagVARIANT;

typedef struct tagDEC tagDEC, *PtagDEC;

typedef struct tagDEC DECIMAL;

typedef ushort VARTYPE;

typedef union _union_2685 _union_2685, *P_union_2685;

typedef union _union_1695 _union_1695, *P_union_1695;

typedef union _union_1697 _union_1697, *P_union_1697;

typedef short SHORT;

typedef float FLOAT;

typedef double DOUBLE;

typedef short VARIANT_BOOL;

typedef LONG SCODE;

typedef union tagCY tagCY, *PtagCY;

typedef union tagCY CY;

typedef double DATE;

typedef OLECHAR * BSTR;

typedef struct IDispatch IDispatch, *PIDispatch;

typedef struct tagSAFEARRAY tagSAFEARRAY, *PtagSAFEARRAY;

typedef struct tagSAFEARRAY SAFEARRAY;

typedef struct __tagBRECORD __tagBRECORD, *P__tagBRECORD;

typedef struct _struct_1696 _struct_1696, *P_struct_1696;

typedef struct _struct_1698 _struct_1698, *P_struct_1698;

typedef struct _struct_1693 _struct_1693, *P_struct_1693;

typedef struct IDispatchVtbl IDispatchVtbl, *PIDispatchVtbl;

typedef struct ITypeInfo ITypeInfo, *PITypeInfo;

typedef LONG DISPID;

typedef struct tagDISPPARAMS tagDISPPARAMS, *PtagDISPPARAMS;

typedef struct tagDISPPARAMS DISPPARAMS;

typedef struct tagEXCEPINFO tagEXCEPINFO, *PtagEXCEPINFO;

typedef struct tagEXCEPINFO EXCEPINFO;

typedef struct tagSAFEARRAYBOUND tagSAFEARRAYBOUND, *PtagSAFEARRAYBOUND;

typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

typedef struct IRecordInfo IRecordInfo, *PIRecordInfo;

typedef struct ITypeInfoVtbl ITypeInfoVtbl, *PITypeInfoVtbl;

typedef struct tagTYPEATTR tagTYPEATTR, *PtagTYPEATTR;

typedef struct tagTYPEATTR TYPEATTR;

typedef struct ITypeComp ITypeComp, *PITypeComp;

typedef struct tagFUNCDESC tagFUNCDESC, *PtagFUNCDESC;

typedef struct tagFUNCDESC FUNCDESC;

typedef struct tagVARDESC tagVARDESC, *PtagVARDESC;

typedef struct tagVARDESC VARDESC;

typedef DISPID MEMBERID;

typedef DWORD HREFTYPE;

typedef enum tagINVOKEKIND {
    INVOKE_FUNC=1,
    INVOKE_PROPERTYGET=2,
    INVOKE_PROPERTYPUT=4,
    INVOKE_PROPERTYPUTREF=8
} tagINVOKEKIND;

typedef enum tagINVOKEKIND INVOKEKIND;

typedef struct ITypeLib ITypeLib, *PITypeLib;

typedef VARIANT VARIANTARG;

typedef struct IRecordInfoVtbl IRecordInfoVtbl, *PIRecordInfoVtbl;

typedef enum tagTYPEKIND {
    TKIND_ALIAS=6,
    TKIND_COCLASS=5,
    TKIND_DISPATCH=4,
    TKIND_ENUM=0,
    TKIND_INTERFACE=3,
    TKIND_MAX=8,
    TKIND_MODULE=2,
    TKIND_RECORD=1,
    TKIND_UNION=7
} tagTYPEKIND;

typedef enum tagTYPEKIND TYPEKIND;

typedef struct tagTYPEDESC tagTYPEDESC, *PtagTYPEDESC;

typedef struct tagTYPEDESC TYPEDESC;

typedef struct tagIDLDESC tagIDLDESC, *PtagIDLDESC;

typedef struct tagIDLDESC IDLDESC;

typedef struct ITypeCompVtbl ITypeCompVtbl, *PITypeCompVtbl;

typedef enum tagDESCKIND {
    DESCKIND_FUNCDESC=1,
    DESCKIND_IMPLICITAPPOBJ=4,
    DESCKIND_MAX=5,
    DESCKIND_NONE=0,
    DESCKIND_TYPECOMP=3,
    DESCKIND_VARDESC=2
} tagDESCKIND;

typedef enum tagDESCKIND DESCKIND;

typedef union tagBINDPTR tagBINDPTR, *PtagBINDPTR;

typedef union tagBINDPTR BINDPTR;

typedef struct tagELEMDESC tagELEMDESC, *PtagELEMDESC;

typedef struct tagELEMDESC ELEMDESC;

typedef enum tagFUNCKIND {
    FUNC_DISPATCH=4,
    FUNC_NONVIRTUAL=2,
    FUNC_PUREVIRTUAL=1,
    FUNC_STATIC=3,
    FUNC_VIRTUAL=0
} tagFUNCKIND;

typedef enum tagFUNCKIND FUNCKIND;

typedef enum tagCALLCONV {
    CC_CDECL=1,
    CC_FASTCALL=0,
    CC_FPFASTCALL=6,
    CC_MACPASCAL=4,
    CC_MAX=10,
    CC_MPWCDECL=8,
    CC_MPWPASCAL=9,
    CC_MSCPASCAL=2,
    CC_PASCAL=3,
    CC_STDCALL=5,
    CC_SYSCALL=7
} tagCALLCONV;

typedef enum tagCALLCONV CALLCONV;

typedef union _union_2711 _union_2711, *P_union_2711;

typedef enum tagVARKIND {
    VAR_CONST=2,
    VAR_DISPATCH=3,
    VAR_PERINSTANCE=0,
    VAR_STATIC=1
} tagVARKIND;

typedef enum tagVARKIND VARKIND;

typedef struct ITypeLibVtbl ITypeLibVtbl, *PITypeLibVtbl;

typedef struct tagTLIBATTR tagTLIBATTR, *PtagTLIBATTR;

typedef struct tagTLIBATTR TLIBATTR;

typedef union _union_2691 _union_2691, *P_union_2691;

typedef union _union_2702 _union_2702, *P_union_2702;

typedef enum tagSYSKIND {
    SYS_MAC=2,
    SYS_WIN16=0,
    SYS_WIN32=1,
    SYS_WIN64=3
} tagSYSKIND;

typedef enum tagSYSKIND SYSKIND;

typedef struct tagARRAYDESC tagARRAYDESC, *PtagARRAYDESC;

typedef struct tagPARAMDESC tagPARAMDESC, *PtagPARAMDESC;

typedef struct tagPARAMDESC PARAMDESC;

typedef struct tagPARAMDESCEX tagPARAMDESCEX, *PtagPARAMDESCEX;

typedef struct tagPARAMDESCEX * LPPARAMDESCEX;

struct _struct_1693 {
    ulong Lo;
    long Hi;
};

union tagCY {
    struct _struct_1693 s;
    LONGLONG int64;
};

struct _struct_1698 {
    ULONG Lo32;
    ULONG Mid32;
};

union _union_1697 {
    struct _struct_1698 s2;
    ULONGLONG Lo64;
};

struct _struct_1696 {
    BYTE scale;
    BYTE sign;
};

union _union_1695 {
    struct _struct_1696 s;
    USHORT signscale;
};

struct tagDEC {
    USHORT wReserved;
    union _union_1695 u;
    ULONG Hi32;
    union _union_1697 u2;
};

struct __tagBRECORD {
    PVOID pvRecord;
    struct IRecordInfo * pRecInfo;
};

union _union_2685 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    struct IUnknown * punkVal;
    struct IDispatch * pdispVal;
    SAFEARRAY * parray;
    BYTE * pbVal;
    SHORT * piVal;
    LONG * plVal;
    LONGLONG * pllVal;
    FLOAT * pfltVal;
    DOUBLE * pdblVal;
    VARIANT_BOOL * pboolVal;
    SCODE * pscode;
    CY * pcyVal;
    DATE * pdate;
    BSTR * pbstrVal;
    struct IUnknown * * ppunkVal;
    struct IDispatch * * ppdispVal;
    SAFEARRAY * * pparray;
    VARIANT * pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL * pdecVal;
    CHAR * pcVal;
    USHORT * puiVal;
    ULONG * pulVal;
    ULONGLONG * pullVal;
    INT * pintVal;
    UINT * puintVal;
    struct __tagBRECORD brecVal;
};

struct __tagVARIANT {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    union _union_2685 n3;
};

union _union_2683 {
    struct __tagVARIANT n2;
    DECIMAL decVal;
};

union _union_2691 {
    struct tagTYPEDESC * lptdesc;
    struct tagARRAYDESC * lpadesc;
    HREFTYPE hreftype;
};

struct tagTYPEDESC {
    union _union_2691 u;
    VARTYPE vt;
};

struct tagIDLDESC {
    ULONG_PTR dwReserved;
    USHORT wIDLFlags;
};

struct tagPARAMDESC {
    LPPARAMDESCEX pparamdescex;
    USHORT wParamFlags;
};

union _union_2702 {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
};

struct tagELEMDESC {
    TYPEDESC tdesc;
    union _union_2702 u;
};

struct tagFUNCDESC {
    MEMBERID memid;
    SCODE * lprgscode;
    ELEMDESC * lprgelemdescParam;
    FUNCKIND funckind;
    INVOKEKIND invkind;
    CALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    ELEMDESC elemdescFunc;
    WORD wFuncFlags;
};

struct tagVARIANT {
    union _union_2683 n1;
};

struct tagPARAMDESCEX {
    ULONG cBytes;
    VARIANTARG varDefaultValue;
};

union _union_2711 {
    ULONG oInst;
    VARIANT * lpvarValue;
};

struct tagVARDESC {
    MEMBERID memid;
    LPOLESTR lpstrSchema;
    union _union_2711 u;
    ELEMDESC elemdescVar;
    WORD wVarFlags;
    VARKIND varkind;
};

struct ITypeCompVtbl {
    HRESULT (* QueryInterface)(struct ITypeComp *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeComp *);
    ULONG (* Release)(struct ITypeComp *);
    HRESULT (* Bind)(struct ITypeComp *, LPOLESTR, ULONG, WORD, struct ITypeInfo * *, DESCKIND *, BINDPTR *);
    HRESULT (* BindType)(struct ITypeComp *, LPOLESTR, ULONG, struct ITypeInfo * *, struct ITypeComp * *);
};

struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    SAFEARRAYBOUND rgsabound[1];
};

struct ITypeInfoVtbl {
    HRESULT (* QueryInterface)(struct ITypeInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeInfo *);
    ULONG (* Release)(struct ITypeInfo *);
    HRESULT (* GetTypeAttr)(struct ITypeInfo *, TYPEATTR * *);
    HRESULT (* GetTypeComp)(struct ITypeInfo *, struct ITypeComp * *);
    HRESULT (* GetFuncDesc)(struct ITypeInfo *, UINT, FUNCDESC * *);
    HRESULT (* GetVarDesc)(struct ITypeInfo *, UINT, VARDESC * *);
    HRESULT (* GetNames)(struct ITypeInfo *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (* GetRefTypeOfImplType)(struct ITypeInfo *, UINT, HREFTYPE *);
    HRESULT (* GetImplTypeFlags)(struct ITypeInfo *, UINT, INT *);
    HRESULT (* GetIDsOfNames)(struct ITypeInfo *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (* Invoke)(struct ITypeInfo *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* GetDocumentation)(struct ITypeInfo *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (* GetDllEntry)(struct ITypeInfo *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (* GetRefTypeInfo)(struct ITypeInfo *, HREFTYPE, struct ITypeInfo * *);
    HRESULT (* AddressOfMember)(struct ITypeInfo *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (* CreateInstance)(struct ITypeInfo *, struct IUnknown *, IID *, PVOID *);
    HRESULT (* GetMops)(struct ITypeInfo *, MEMBERID, BSTR *);
    HRESULT (* GetContainingTypeLib)(struct ITypeInfo *, struct ITypeLib * *, UINT *);
    void (* ReleaseTypeAttr)(struct ITypeInfo *, TYPEATTR *);
    void (* ReleaseFuncDesc)(struct ITypeInfo *, FUNCDESC *);
    void (* ReleaseVarDesc)(struct ITypeInfo *, VARDESC *);
};

struct ITypeLibVtbl {
    HRESULT (* QueryInterface)(struct ITypeLib *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeLib *);
    ULONG (* Release)(struct ITypeLib *);
    UINT (* GetTypeInfoCount)(struct ITypeLib *);
    HRESULT (* GetTypeInfo)(struct ITypeLib *, UINT, struct ITypeInfo * *);
    HRESULT (* GetTypeInfoType)(struct ITypeLib *, UINT, TYPEKIND *);
    HRESULT (* GetTypeInfoOfGuid)(struct ITypeLib *, GUID *, struct ITypeInfo * *);
    HRESULT (* GetLibAttr)(struct ITypeLib *, TLIBATTR * *);
    HRESULT (* GetTypeComp)(struct ITypeLib *, struct ITypeComp * *);
    HRESULT (* GetDocumentation)(struct ITypeLib *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (* IsName)(struct ITypeLib *, LPOLESTR, ULONG, BOOL *);
    HRESULT (* FindName)(struct ITypeLib *, LPOLESTR, ULONG, struct ITypeInfo * *, MEMBERID *, USHORT *);
    void (* ReleaseTLibAttr)(struct ITypeLib *, TLIBATTR *);
};

struct tagTLIBATTR {
    GUID guid;
    LCID lcid;
    SYSKIND syskind;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    WORD wLibFlags;
};

struct tagARRAYDESC {
    TYPEDESC tdescElem;
    USHORT cDims;
    SAFEARRAYBOUND rgbounds[1];
};

struct ITypeComp {
    struct ITypeCompVtbl * lpVtbl;
};

struct IRecordInfo {
    struct IRecordInfoVtbl * lpVtbl;
};

struct tagTYPEATTR {
    GUID guid;
    LCID lcid;
    DWORD dwReserved;
    MEMBERID memidConstructor;
    MEMBERID memidDestructor;
    LPOLESTR lpstrSchema;
    ULONG cbSizeInstance;
    TYPEKIND typekind;
    WORD cFuncs;
    WORD cVars;
    WORD cImplTypes;
    WORD cbSizeVft;
    WORD cbAlignment;
    WORD wTypeFlags;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    TYPEDESC tdescAlias;
    IDLDESC idldescType;
};

struct IOleCommandTarget {
    struct IOleCommandTargetVtbl * lpVtbl;
};

struct IRecordInfoVtbl {
    HRESULT (* QueryInterface)(struct IRecordInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IRecordInfo *);
    ULONG (* Release)(struct IRecordInfo *);
    HRESULT (* RecordInit)(struct IRecordInfo *, PVOID);
    HRESULT (* RecordClear)(struct IRecordInfo *, PVOID);
    HRESULT (* RecordCopy)(struct IRecordInfo *, PVOID, PVOID);
    HRESULT (* GetGuid)(struct IRecordInfo *, GUID *);
    HRESULT (* GetName)(struct IRecordInfo *, BSTR *);
    HRESULT (* GetSize)(struct IRecordInfo *, ULONG *);
    HRESULT (* GetTypeInfo)(struct IRecordInfo *, struct ITypeInfo * *);
    HRESULT (* GetField)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (* GetFieldNoCopy)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *, PVOID *);
    HRESULT (* PutField)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (* PutFieldNoCopy)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (* GetFieldNames)(struct IRecordInfo *, ULONG *, BSTR *);
    BOOL (* IsMatchingType)(struct IRecordInfo *, struct IRecordInfo *);
    PVOID (* RecordCreate)(struct IRecordInfo *);
    HRESULT (* RecordCreateCopy)(struct IRecordInfo *, PVOID, PVOID *);
    HRESULT (* RecordDestroy)(struct IRecordInfo *, PVOID);
};

struct tagDISPPARAMS {
    VARIANTARG * rgvarg;
    DISPID * rgdispidNamedArgs;
    UINT cArgs;
    UINT cNamedArgs;
};

union tagBINDPTR {
    FUNCDESC * lpfuncdesc;
    VARDESC * lpvardesc;
    struct ITypeComp * lptcomp;
};

struct IDispatch {
    struct IDispatchVtbl * lpVtbl;
};

struct IDispatchVtbl {
    HRESULT (* QueryInterface)(struct IDispatch *, IID *, void * *);
    ULONG (* AddRef)(struct IDispatch *);
    ULONG (* Release)(struct IDispatch *);
    HRESULT (* GetTypeInfoCount)(struct IDispatch *, UINT *);
    HRESULT (* GetTypeInfo)(struct IDispatch *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct ITypeLib {
    struct ITypeLibVtbl * lpVtbl;
};

struct IOleCommandTargetVtbl {
    HRESULT (* QueryInterface)(struct IOleCommandTarget *, IID *, void * *);
    ULONG (* AddRef)(struct IOleCommandTarget *);
    ULONG (* Release)(struct IOleCommandTarget *);
    HRESULT (* QueryStatus)(struct IOleCommandTarget *, GUID *, ULONG, OLECMD *, OLECMDTEXT *);
    HRESULT (* Exec)(struct IOleCommandTarget *, GUID *, DWORD, DWORD, VARIANT *, VARIANT *);
};

struct ITypeInfo {
    struct ITypeInfoVtbl * lpVtbl;
};

struct tagEXCEPINFO {
    WORD wCode;
    WORD wReserved;
    BSTR bstrSource;
    BSTR bstrDescription;
    BSTR bstrHelpFile;
    DWORD dwHelpContext;
    PVOID pvReserved;
    HRESULT (* pfnDeferredFillIn)(struct tagEXCEPINFO *);
    SCODE scode;
};

typedef struct IOleDocument IOleDocument, *PIOleDocument;

typedef struct IOleDocumentVtbl IOleDocumentVtbl, *PIOleDocumentVtbl;

struct IOleDocumentVtbl {
    HRESULT (* QueryInterface)(struct IOleDocument *, IID *, void * *);
    ULONG (* AddRef)(struct IOleDocument *);
    ULONG (* Release)(struct IOleDocument *);
    HRESULT (* CreateView)(struct IOleDocument *, struct IOleInPlaceSite *, struct IStream *, DWORD, struct IOleDocumentView * *);
    HRESULT (* GetDocMiscStatus)(struct IOleDocument *, DWORD *);
    HRESULT (* EnumViews)(struct IOleDocument *, struct IEnumOleDocumentViews * *, struct IOleDocumentView * *);
};

struct IOleDocument {
    struct IOleDocumentVtbl * lpVtbl;
};

typedef struct IOleDocumentSite IOleDocumentSite, *PIOleDocumentSite;

typedef struct IOleDocumentSiteVtbl IOleDocumentSiteVtbl, *PIOleDocumentSiteVtbl;

struct IOleDocumentSite {
    struct IOleDocumentSiteVtbl * lpVtbl;
};

struct IOleDocumentSiteVtbl {
    HRESULT (* QueryInterface)(struct IOleDocumentSite *, IID *, void * *);
    ULONG (* AddRef)(struct IOleDocumentSite *);
    ULONG (* Release)(struct IOleDocumentSite *);
    HRESULT (* ActivateMe)(struct IOleDocumentSite *, struct IOleDocumentView *);
};

typedef struct IPrint IPrint, *PIPrint;

typedef struct IPrintVtbl IPrintVtbl, *PIPrintVtbl;

typedef struct tagDVTARGETDEVICE tagDVTARGETDEVICE, *PtagDVTARGETDEVICE;

typedef struct tagDVTARGETDEVICE DVTARGETDEVICE;

typedef struct tagPAGESET tagPAGESET, *PtagPAGESET;

typedef struct tagPAGESET PAGESET;

typedef struct tagSTGMEDIUM tagSTGMEDIUM, *PtagSTGMEDIUM;

typedef struct tagSTGMEDIUM uSTGMEDIUM;

typedef uSTGMEDIUM STGMEDIUM;

typedef struct tagPAGERANGE tagPAGERANGE, *PtagPAGERANGE;

typedef struct tagPAGERANGE PAGERANGE;

typedef union _union_2260 _union_2260, *P_union_2260;

typedef void * HMETAFILEPICT;

typedef struct HENHMETAFILE__ HENHMETAFILE__, *PHENHMETAFILE__;

typedef struct HENHMETAFILE__ * HENHMETAFILE;

typedef struct IStorage IStorage, *PIStorage;

typedef struct IStorageVtbl IStorageVtbl, *PIStorageVtbl;

typedef LPOLESTR * SNB;

typedef struct IEnumSTATSTG IEnumSTATSTG, *PIEnumSTATSTG;

typedef struct IEnumSTATSTGVtbl IEnumSTATSTGVtbl, *PIEnumSTATSTGVtbl;

struct IPrintVtbl {
    HRESULT (* QueryInterface)(struct IPrint *, IID *, void * *);
    ULONG (* AddRef)(struct IPrint *);
    ULONG (* Release)(struct IPrint *);
    HRESULT (* SetInitialPageNum)(struct IPrint *, LONG);
    HRESULT (* GetPageInfo)(struct IPrint *, LONG *, LONG *);
    HRESULT (* Print)(struct IPrint *, DWORD, DVTARGETDEVICE * *, PAGESET * *, STGMEDIUM *, struct IContinueCallback *, LONG, LONG *, LONG *);
};

union _union_2260 {
    HBITMAP hBitmap;
    HMETAFILEPICT hMetaFilePict;
    HENHMETAFILE hEnhMetaFile;
    HGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    struct IStream * pstm;
    struct IStorage * pstg;
};

struct IPrint {
    struct IPrintVtbl * lpVtbl;
};

struct tagPAGERANGE {
    LONG nFromPage;
    LONG nToPage;
};

struct tagPAGESET {
    ULONG cbStruct;
    BOOL fOddPages;
    BOOL fEvenPages;
    ULONG cPageRange;
    PAGERANGE rgPages[1];
};

struct tagSTGMEDIUM {
    DWORD tymed;
    union _union_2260 u;
    struct IUnknown * pUnkForRelease;
};

struct tagDVTARGETDEVICE {
    DWORD tdSize;
    WORD tdDriverNameOffset;
    WORD tdDeviceNameOffset;
    WORD tdPortNameOffset;
    WORD tdExtDevmodeOffset;
    BYTE tdData[1];
};

struct IStorageVtbl {
    HRESULT (* QueryInterface)(struct IStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IStorage *);
    ULONG (* Release)(struct IStorage *);
    HRESULT (* CreateStream)(struct IStorage *, OLECHAR *, DWORD, DWORD, DWORD, struct IStream * *);
    HRESULT (* OpenStream)(struct IStorage *, OLECHAR *, void *, DWORD, DWORD, struct IStream * *);
    HRESULT (* CreateStorage)(struct IStorage *, OLECHAR *, DWORD, DWORD, DWORD, struct IStorage * *);
    HRESULT (* OpenStorage)(struct IStorage *, OLECHAR *, struct IStorage *, DWORD, SNB, DWORD, struct IStorage * *);
    HRESULT (* CopyTo)(struct IStorage *, DWORD, IID *, SNB, struct IStorage *);
    HRESULT (* MoveElementTo)(struct IStorage *, OLECHAR *, struct IStorage *, OLECHAR *, DWORD);
    HRESULT (* Commit)(struct IStorage *, DWORD);
    HRESULT (* Revert)(struct IStorage *);
    HRESULT (* EnumElements)(struct IStorage *, DWORD, void *, DWORD, struct IEnumSTATSTG * *);
    HRESULT (* DestroyElement)(struct IStorage *, OLECHAR *);
    HRESULT (* RenameElement)(struct IStorage *, OLECHAR *, OLECHAR *);
    HRESULT (* SetElementTimes)(struct IStorage *, OLECHAR *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (* SetClass)(struct IStorage *, IID *);
    HRESULT (* SetStateBits)(struct IStorage *, DWORD, DWORD);
    HRESULT (* Stat)(struct IStorage *, STATSTG *, DWORD);
};

struct IStorage {
    struct IStorageVtbl * lpVtbl;
};

struct IEnumSTATSTGVtbl {
    HRESULT (* QueryInterface)(struct IEnumSTATSTG *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSTATSTG *);
    ULONG (* Release)(struct IEnumSTATSTG *);
    HRESULT (* Next)(struct IEnumSTATSTG *, ULONG, STATSTG *, ULONG *);
    HRESULT (* Skip)(struct IEnumSTATSTG *, ULONG);
    HRESULT (* Reset)(struct IEnumSTATSTG *);
    HRESULT (* Clone)(struct IEnumSTATSTG *, struct IEnumSTATSTG * *);
};

struct IEnumSTATSTG {
    struct IEnumSTATSTGVtbl * lpVtbl;
};

struct HENHMETAFILE__ {
    int unused;
};

typedef struct IProtectedModeMenuServices IProtectedModeMenuServices, *PIProtectedModeMenuServices;

typedef struct IProtectedModeMenuServicesVtbl IProtectedModeMenuServicesVtbl, *PIProtectedModeMenuServicesVtbl;

struct IProtectedModeMenuServicesVtbl {
    HRESULT (* QueryInterface)(struct IProtectedModeMenuServices *, IID *, void * *);
    ULONG (* AddRef)(struct IProtectedModeMenuServices *);
    ULONG (* Release)(struct IProtectedModeMenuServices *);
    HRESULT (* CreateMenu)(struct IProtectedModeMenuServices *, HMENU *);
    HRESULT (* LoadMenuA)(struct IProtectedModeMenuServices *, LPCWSTR, LPCWSTR, HMENU *);
    HRESULT (* LoadMenuID)(struct IProtectedModeMenuServices *, LPCWSTR, WORD, HMENU *);
};

struct IProtectedModeMenuServices {
    struct IProtectedModeMenuServicesVtbl * lpVtbl;
};

typedef struct IProtectFocus IProtectFocus, *PIProtectFocus;

typedef struct IProtectFocusVtbl IProtectFocusVtbl, *PIProtectFocusVtbl;

struct IProtectFocus {
    struct IProtectFocusVtbl * lpVtbl;
};

struct IProtectFocusVtbl {
    HRESULT (* QueryInterface)(struct IProtectFocus *, IID *, void * *);
    ULONG (* AddRef)(struct IProtectFocus *);
    ULONG (* Release)(struct IProtectFocus *);
    HRESULT (* AllowFocusChange)(struct IProtectFocus *, BOOL *);
};

typedef struct IZoomEvents IZoomEvents, *PIZoomEvents;

typedef struct IZoomEventsVtbl IZoomEventsVtbl, *PIZoomEventsVtbl;

struct IZoomEventsVtbl {
    HRESULT (* QueryInterface)(struct IZoomEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IZoomEvents *);
    ULONG (* Release)(struct IZoomEvents *);
    HRESULT (* OnZoomPercentChanged)(struct IZoomEvents *, ULONG);
};

struct IZoomEvents {
    struct IZoomEventsVtbl * lpVtbl;
};

typedef struct IContinueCallback * LPCONTINUECALLBACK;

typedef struct IEnumOleDocumentViews * LPENUMOLEDOCUMENTVIEWS;

typedef struct IOleCommandTarget * LPOLECOMMANDTARGET;

typedef struct IOleDocument * LPOLEDOCUMENT;

typedef struct IOleDocumentSite * LPOLEDOCUMENTSITE;

typedef struct IOleDocumentView * LPOLEDOCUMENTVIEW;

typedef struct IPrint * LPPRINT;

typedef enum OLECMDEXECOPT {
    OLECMDEXECOPT_DODEFAULT=0,
    OLECMDEXECOPT_DONTPROMPTUSER=2,
    OLECMDEXECOPT_PROMPTUSER=1,
    OLECMDEXECOPT_SHOWHELP=3
} OLECMDEXECOPT;

typedef enum OLECMDF {
    OLECMDF_DEFHIDEONCTXTMENU=32,
    OLECMDF_ENABLED=2,
    OLECMDF_INVISIBLE=16,
    OLECMDF_LATCHED=4,
    OLECMDF_NINCHED=8,
    OLECMDF_SUPPORTED=1
} OLECMDF;

typedef enum OLECMDID {
    OLECMDID_ACTIVEXINSTALLSCOPE=66,
    OLECMDID_ADDTRAVELENTRY=60,
    OLECMDID_ALLOWUILESSSAVEAS=46,
    OLECMDID_CLEARSELECTION=18,
    OLECMDID_CLOSE=45,
    OLECMDID_COPY=12,
    OLECMDID_CUT=11,
    OLECMDID_DELETE=33,
    OLECMDID_DONTDOWNLOADCSS=47,
    OLECMDID_ENABLE_INTERACTION=36,
    OLECMDID_FIND=32,
    OLECMDID_FOCUSVIEWCONTROLS=57,
    OLECMDID_FOCUSVIEWCONTROLSQUERY=58,
    OLECMDID_GETPRINTTEMPLATE=52,
    OLECMDID_GETZOOMRANGE=20,
    OLECMDID_HIDETOOLBARS=24,
    OLECMDID_HTTPEQUIV=34,
    OLECMDID_HTTPEQUIV_DONE=35,
    OLECMDID_NEW=2,
    OLECMDID_ONTOOLBARACTIVATED=31,
    OLECMDID_ONUNLOAD=37,
    OLECMDID_OPEN=1,
    OLECMDID_OPTICAL_GETZOOMRANGE=64,
    OLECMDID_OPTICAL_ZOOM=63,
    OLECMDID_PAGEACTIONBLOCKED=55,
    OLECMDID_PAGEACTIONUIQUERY=56,
    OLECMDID_PAGESETUP=8,
    OLECMDID_PASTE=13,
    OLECMDID_PASTESPECIAL=14,
    OLECMDID_PREREFRESH=39,
    OLECMDID_PRINT=6,
    OLECMDID_PRINT2=49,
    OLECMDID_PRINTPREVIEW=7,
    OLECMDID_PRINTPREVIEW2=50,
    OLECMDID_PROPERTIES=10,
    OLECMDID_PROPERTYBAG2=38,
    OLECMDID_REDO=16,
    OLECMDID_REFRESH=22,
    OLECMDID_SAVE=3,
    OLECMDID_SAVEAS=4,
    OLECMDID_SAVECOPYAS=5,
    OLECMDID_SELECTALL=17,
    OLECMDID_SETDOWNLOADSTATE=29,
    OLECMDID_SETPRINTTEMPLATE=51,
    OLECMDID_SETPROGRESSMAX=25,
    OLECMDID_SETPROGRESSPOS=26,
    OLECMDID_SETPROGRESSTEXT=27,
    OLECMDID_SETTITLE=28,
    OLECMDID_SHOWFIND=42,
    OLECMDID_SHOWMESSAGE=41,
    OLECMDID_SHOWPAGEACTIONMENU=59,
    OLECMDID_SHOWPAGESETUP=43,
    OLECMDID_SHOWPRINT=44,
    OLECMDID_SHOWSCRIPTERROR=40,
    OLECMDID_SPELL=9,
    OLECMDID_STOP=23,
    OLECMDID_STOPDOWNLOAD=30,
    OLECMDID_UNDO=15,
    OLECMDID_UPDATEBACKFORWARDSTATE=62,
    OLECMDID_UPDATECOMMANDS=21,
    OLECMDID_UPDATEPAGESTATUS=48,
    OLECMDID_UPDATETRAVELENTRY=61,
    OLECMDID_UPDATETRAVELENTRY_DATARECOVERY=67,
    OLECMDID_WINDOWSTATECHANGED=65,
    OLECMDID_ZOOM=19
} OLECMDID;

typedef enum enum_3705 OLECMDID_REFRESHFLAG;

typedef enum enum_3706 OLECMDID_WINDOWSTATE_FLAG;

typedef enum OLECMDTEXTF {
    OLECMDTEXTF_NAME=1,
    OLECMDTEXTF_NONE=0,
    OLECMDTEXTF_STATUS=2
} OLECMDTEXTF;

typedef enum __MIDL_IPrint_0001 PRINTFLAG;

#define _A_ARCH 32

#define _A_HIDDEN 2

#define _A_NORMAL 0

#define _A_RDONLY 1

#define _A_SUBDIR 16

#define _A_SYSTEM 4

#define __drv_typeBitset 2

#define __drv_typeCond 1

#define __drv_typeConst 0

#define __drv_typeExpr 3

#define DWM_BB_BLURREGION 2

#define DWM_BB_ENABLE 1

#define DWM_BB_TRANSITIONONMAXIMIZED 4

#define DWM_EC_DISABLECOMPOSITION 0

#define DWM_EC_ENABLECOMPOSITION 1

#define DWM_FRAME_DURATION_DEFAULT -1

#define DWM_SIT_DISPLAYFRAME 1

#define DWM_TNP_OPACITY 4

#define DWM_TNP_RECTDESTINATION 1

#define DWM_TNP_RECTSOURCE 2

#define DWM_TNP_SOURCECLIENTAREAONLY 16

#define DWM_TNP_VISIBLE 8

typedef struct _DWM_BLURBEHIND _DWM_BLURBEHIND, *P_DWM_BLURBEHIND;

typedef struct HRGN__ HRGN__, *PHRGN__;

typedef struct HRGN__ * HRGN;

struct HRGN__ {
    int unused;
};

struct _DWM_BLURBEHIND {
    DWORD dwFlags;
    BOOL fEnable;
    HRGN hRgnBlur;
    BOOL fTransitionOnMaximized;
};

typedef struct _DWM_PRESENT_PARAMETERS _DWM_PRESENT_PARAMETERS, *P_DWM_PRESENT_PARAMETERS;

typedef ULONGLONG DWM_FRAME_COUNT;

typedef struct _UNSIGNED_RATIO _UNSIGNED_RATIO, *P_UNSIGNED_RATIO;

typedef struct _UNSIGNED_RATIO UNSIGNED_RATIO;

typedef enum enum_5667 {
    DWM_SOURCE_FRAME_SAMPLING_COVERAGE=1,
    DWM_SOURCE_FRAME_SAMPLING_LAST=2,
    DWM_SOURCE_FRAME_SAMPLING_POINT=0
} enum_5667;

typedef enum enum_5667 DWM_SOURCE_FRAME_SAMPLING;

struct _UNSIGNED_RATIO {
    UINT32 uiNumerator;
    UINT32 uiDenominator;
};

struct _DWM_PRESENT_PARAMETERS {
    UINT32 cbSize;
    BOOL fQueue;
    DWM_FRAME_COUNT cRefreshStart;
    UINT cBuffer;
    BOOL fUseSourceRate;
    UNSIGNED_RATIO rateSource;
    UINT cRefreshesPerFrame;
    DWM_SOURCE_FRAME_SAMPLING eSampling;
};

typedef struct _DWM_THUMBNAIL_PROPERTIES _DWM_THUMBNAIL_PROPERTIES, *P_DWM_THUMBNAIL_PROPERTIES;

struct _DWM_THUMBNAIL_PROPERTIES {
    DWORD dwFlags;
    RECT rcDestination;
    RECT rcSource;
    BYTE opacity;
    BOOL fVisible;
    BOOL fSourceClientAreaOnly;
};

typedef struct _DWM_TIMING_INFO _DWM_TIMING_INFO, *P_DWM_TIMING_INFO;

typedef ULONGLONG QPC_TIME;

struct _DWM_TIMING_INFO {
    UINT32 cbSize;
    UNSIGNED_RATIO rateRefresh;
    QPC_TIME qpcRefreshPeriod;
    UNSIGNED_RATIO rateCompose;
    QPC_TIME qpcVBlank;
    DWM_FRAME_COUNT cRefresh;
    UINT cDXRefresh;
    QPC_TIME qpcCompose;
    DWM_FRAME_COUNT cFrame;
    UINT cDXPresent;
    DWM_FRAME_COUNT cRefreshFrame;
    DWM_FRAME_COUNT cFrameSubmitted;
    UINT cDXPresentSubmitted;
    DWM_FRAME_COUNT cFrameConfirmed;
    UINT cDXPresentConfirmed;
    DWM_FRAME_COUNT cRefreshConfirmed;
    UINT cDXRefreshConfirmed;
    DWM_FRAME_COUNT cFramesLate;
    UINT cFramesOutstanding;
    DWM_FRAME_COUNT cFrameDisplayed;
    QPC_TIME qpcFrameDisplayed;
    DWM_FRAME_COUNT cRefreshFrameDisplayed;
    DWM_FRAME_COUNT cFrameComplete;
    QPC_TIME qpcFrameComplete;
    DWM_FRAME_COUNT cFramePending;
    QPC_TIME qpcFramePending;
    DWM_FRAME_COUNT cFramesDisplayed;
    DWM_FRAME_COUNT cFramesComplete;
    DWM_FRAME_COUNT cFramesPending;
    DWM_FRAME_COUNT cFramesAvailable;
    DWM_FRAME_COUNT cFramesDropped;
    DWM_FRAME_COUNT cFramesMissed;
    DWM_FRAME_COUNT cRefreshNextDisplayed;
    DWM_FRAME_COUNT cRefreshNextPresented;
    DWM_FRAME_COUNT cRefreshesDisplayed;
    DWM_FRAME_COUNT cRefreshesPresented;
    DWM_FRAME_COUNT cRefreshStarted;
    ULONGLONG cPixelsReceived;
    ULONGLONG cPixelsDrawn;
    DWM_FRAME_COUNT cBuffersEmpty;
};

typedef struct _MilMatrix3x2D _MilMatrix3x2D, *P_MilMatrix3x2D;

struct _MilMatrix3x2D {
    DOUBLE S_11;
    DOUBLE S_12;
    DOUBLE S_21;
    DOUBLE S_22;
    DOUBLE DX;
    DOUBLE DY;
};

typedef struct _DWM_BLURBEHIND DWM_BLURBEHIND;

typedef struct _DWM_PRESENT_PARAMETERS DWM_PRESENT_PARAMETERS;

typedef struct _DWM_THUMBNAIL_PROPERTIES DWM_THUMBNAIL_PROPERTIES;

typedef struct _DWM_TIMING_INFO DWM_TIMING_INFO;

typedef enum DWMFLIP3DWINDOWPOLICY {
    DWMFLIP3D_DEFAULT=0,
    DWMFLIP3D_EXCLUDEABOVE=2,
    DWMFLIP3D_EXCLUDEBELOW=1,
    DWMFLIP3D_LAST=3
} DWMFLIP3DWINDOWPOLICY;

typedef enum DWMNCRENDERINGPOLICY {
    DWMNCRP_DISABLED=1,
    DWMNCRP_ENABLED=2,
    DWMNCRP_LAST=3,
    DWMNCRP_USEWINDOWSTYLE=0
} DWMNCRENDERINGPOLICY;

typedef enum DWMWINDOWATTRIBUTE {
    DWMWA_ALLOW_NCPAINT=4,
    DWMWA_CAPTION_BUTTON_BOUNDS=5,
    DWMWA_DISALLOW_PEEK=11,
    DWMWA_EXCLUDED_FROM_PEEK=12,
    DWMWA_EXTENDED_FRAME_BOUNDS=9,
    DWMWA_FLIP3D_POLICY=8,
    DWMWA_FORCE_ICONIC_REPRESENTATION=7,
    DWMWA_HAS_ICONIC_BITMAP=10,
    DWMWA_LAST=13,
    DWMWA_NCRENDERING_ENABLED=1,
    DWMWA_NCRENDERING_POLICY=2,
    DWMWA_NONCLIENT_RTL_LAYOUT=6,
    DWMWA_TRANSITIONS_FORCEDISABLED=3
} DWMWINDOWATTRIBUTE;

typedef HANDLE HTHUMBNAIL;

typedef struct _MilMatrix3x2D MilMatrix3x2D;

typedef MilMatrix3x2D MIL_MATRIX3X2D;

typedef struct _DWM_BLURBEHIND * PDWM_BLURBEHIND;

typedef struct _DWM_THUMBNAIL_PROPERTIES * PDWM_THUMBNAIL_PROPERTIES;

typedef HTHUMBNAIL * PHTHUMBNAIL;

#define EAP_CONFIG_INPUT_FIELD_PROPS_DEFAULT 0

#define EAP_CONFIG_INPUT_FIELD_PROPS_NON_DISPLAYABLE 1

#define EAP_CONFIG_INPUT_FIELD_PROPS_NON_PERSIST 2

#define EAP_CREDENTIAL_VERSION 1

#define EAP_FLAG_CONFG_READONLY 524288

#define EAP_FLAG_FULL_AUTH 4096

#define EAP_FLAG_GUEST_ACCESS 64

#define EAP_FLAG_LOGON 4

#define EAP_FLAG_MACHINE_AUTH 32

#define EAP_FLAG_NON_INTERACTIVE 2

#define EAP_FLAG_PRE_LOGON 131072

#define EAP_FLAG_PREFER_ALT_CREDENTIALS 8192

#define EAP_FLAG_PREVIEW 8

#define EAP_FLAG_Reserved1 1

#define EAP_FLAG_Reserved2 16

#define EAP_FLAG_Reserved3 128

#define EAP_FLAG_Reserved4 256

#define EAP_FLAG_Reserved5 1024

#define EAP_FLAG_Reserved6 2048

#define EAP_FLAG_Reserved7 16384

#define EAP_FLAG_Reserved8 1048576

#define EAP_FLAG_RESUME_FROM_HIBERNATE 512

#define EAP_FLAG_SUPRESS_UI 65536

#define EAP_FLAG_USER_AUTH 262144

#define EAP_INTERACTIVE_UI_DATA_VERSION 1

#define EAP_PEER_FLAG_HEALTH_STATE_CHANGE 32768

#define EAP_UI_INPUT_FIELD_PROPS_DEFAULT 0

#define EAP_UI_INPUT_FIELD_PROPS_NON_DISPLAYABLE 1

#define EAP_UI_INPUT_FIELD_PROPS_NON_PERSIST 2

#define EAP_UI_INPUT_FIELD_PROPS_READ_ONLY 4

#define EAPHOST_METHOD_API_VERSION 1

#define EAPHOST_PEER_API_VERSION 1

#define eapPropCertifiedMethod 4194304

#define eapPropChannelBinding 65536

#define eapPropCipherSuiteNegotiation 1

#define eapPropConfidentiality 16

#define eapPropCryptoBinding 8192

#define eapPropDictionaryAttackResistance 2048

#define eapPropFastReconnect 4096

#define eapPropFragmentation 32768

#define eapPropHiddenMethod 8388608

#define eapPropIdentityPrivacy 67108864

#define eapPropIntegrity 4

#define eapPropKeyDerivation 32

#define eapPropKeyStrength1024 1024

#define eapPropKeyStrength128 128

#define eapPropKeyStrength256 256

#define eapPropKeyStrength512 512

#define eapPropKeyStrength64 64

#define eapPropMachineAuth 16777216

#define eapPropMethodChaining 134217728

#define eapPropMppeEncryption 524288

#define eapPropMutualAuth 2

#define eapPropNap 131072

#define eapPropReplayProtection 8

#define eapPropReserved 2147483648

#define eapPropSessionIndependence 16384

#define eapPropSharedStateEquivalence 268435456

#define eapPropStandalone 262144

#define eapPropSupportsConfig 2097152

#define eapPropTunnelMethod 1048576

#define eapPropUserAuth 33554432

#define MAX_EAP_CONFIG_INPUT_FIELD_LENGTH 256

#define MAX_EAP_CONFIG_INPUT_FIELD_VALUE_LENGTH 1024

typedef struct _EAP_ATTRIBUTE _EAP_ATTRIBUTE, *P_EAP_ATTRIBUTE;

typedef enum _EAP_ATTRIBUTE_TYPE {
    eatARAPChallengeResponse=84,
    eatARAPFeatures=71,
    eatARAPGuestLogon=8096,
    eatARAPPassword=70,
    eatARAPSecurity=73,
    eatARAPSecurityData=74,
    eatARAPZoneAccess=72,
    eatAcctAuthentic=45,
    eatAcctDelayTime=41,
    eatAcctEventTimeStamp=55,
    eatAcctInputOctets=42,
    eatAcctInputPackets=47,
    eatAcctInterimInterval=85,
    eatAcctLinkCount=51,
    eatAcctMultiSessionId=50,
    eatAcctOutputOctets=43,
    eatAcctOutputPackets=48,
    eatAcctSessionId=44,
    eatAcctSessionTime=46,
    eatAcctStatusType=40,
    eatAcctTerminateCause=49,
    eatCallbackId=20,
    eatCallbackNumber=19,
    eatCalledStationId=30,
    eatCallingStationId=31,
    eatCertificateOID=8097,
    eatClass=25,
    eatClearTextPassword=8107,
    eatConfigurationToken=78,
    eatConnectInfo=77,
    eatCredentialsChanged=8103,
    eatEAPConfiguration=8098,
    eatEAPMessage=79,
    eatEAPTLV=8102,
    eatEMSK=9003,
    eatFilterId=11,
    eatFramedAppleTalkLink=37,
    eatFramedAppleTalkNetwork=38,
    eatFramedAppleTalkZone=39,
    eatFramedCompression=13,
    eatFramedIPAddress=8,
    eatFramedIPNetmask=9,
    eatFramedIPXNetwork=23,
    eatFramedIPv6Pool=100,
    eatFramedIPv6Prefix=97,
    eatFramedIPv6Route=99,
    eatFramedInterfaceId=96,
    eatFramedMTU=12,
    eatFramedProtocol=7,
    eatFramedRoute=22,
    eatFramedRouting=10,
    eatIdleTimeout=28,
    eatInnerEapMethodType=8104,
    eatLoginIPHost=14,
    eatLoginIPv6Host=98,
    eatLoginLATGroup=36,
    eatLoginLATNode=35,
    eatLoginLATPort=63,
    eatLoginLATService=34,
    eatLoginService=15,
    eatLoginTCPPort=16,
    eatMD5CHAPChallenge=60,
    eatMD5CHAPPassword=3,
    eatMethodId=9002,
    eatMinimum=0,
    eatNASIPAddress=4,
    eatNASIPv6Address=95,
    eatNASIdentifier=32,
    eatNASPort=5,
    eatNASPortType=61,
    eatPEAPEmbeddedEAPTypeId=8099,
    eatPEAPFastRoamedSession=8100,
    eatPasswordRetry=75,
    eatPeerId=9000,
    eatPortLimit=62,
    eatPrompt=76,
    eatProxyState=33,
    eatQuarantineSoH=8150,
    eatReplyMessage=18,
    eatReserved=-1,
    eatServerId=9001,
    eatServiceType=6,
    eatSessionId=9004,
    eatSessionTimeout=27,
    eatSignature=80,
    eatState=24,
    eatTerminationAction=29,
    eatTunnelClientEndpoint=66,
    eatTunnelMediumType=65,
    eatTunnelServerEndpoint=67,
    eatTunnelType=64,
    eatUnassigned17=17,
    eatUnassigned21=21,
    eatUserName=1,
    eatUserPassword=2,
    eatVendorSpecific=26
} _EAP_ATTRIBUTE_TYPE;

typedef enum _EAP_ATTRIBUTE_TYPE EAP_ATTRIBUTE_TYPE;

struct _EAP_ATTRIBUTE {
    EAP_ATTRIBUTE_TYPE eaType;
    DWORD dwLength;
    BYTE * pValue;
};

typedef struct _EAP_ATTRIBUTES _EAP_ATTRIBUTES, *P_EAP_ATTRIBUTES;

typedef struct _EAP_ATTRIBUTE EAP_ATTRIBUTE;

struct _EAP_ATTRIBUTES {
    DWORD dwNumberOfAttributes;
    EAP_ATTRIBUTE * pAttribs;
};

typedef struct _EAP_CONFIG_INPUT_FIELD_ARRAY _EAP_CONFIG_INPUT_FIELD_ARRAY, *P_EAP_CONFIG_INPUT_FIELD_ARRAY;

typedef struct _EAP_CONFIG_INPUT_FIELD_DATA _EAP_CONFIG_INPUT_FIELD_DATA, *P_EAP_CONFIG_INPUT_FIELD_DATA;

typedef struct _EAP_CONFIG_INPUT_FIELD_DATA EAP_CONFIG_INPUT_FIELD_DATA;

typedef enum _EAP_CONFIG_INPUT_FIELD_TYPE {
    EapConfigInputEdit=6,
    EapConfigInputNetworkPassword=3,
    EapConfigInputNetworkUsername=2,
    EapConfigInputPSK=5,
    EapConfigInputPassword=1,
    EapConfigInputPin=4,
    EapConfigInputUsername=0,
    EapConfigSmartCardError=8,
    EapConfigSmartCardUsername=7
} _EAP_CONFIG_INPUT_FIELD_TYPE;

typedef enum _EAP_CONFIG_INPUT_FIELD_TYPE EAP_CONFIG_INPUT_FIELD_TYPE;

struct _EAP_CONFIG_INPUT_FIELD_ARRAY {
    DWORD dwVersion;
    DWORD dwNumberOfFields;
    EAP_CONFIG_INPUT_FIELD_DATA * pFields;
};

struct _EAP_CONFIG_INPUT_FIELD_DATA {
    DWORD dwSize;
    EAP_CONFIG_INPUT_FIELD_TYPE Type;
    DWORD dwFlagProps;
    LPWSTR pwszLabel;
    LPWSTR pwszData;
    DWORD dwMinDataLength;
    DWORD dwMaxDataLength;
};

typedef struct _EAP_CRED_EXPIRY_REQ _EAP_CRED_EXPIRY_REQ, *P_EAP_CRED_EXPIRY_REQ;

typedef struct _EAP_CONFIG_INPUT_FIELD_ARRAY EAP_CONFIG_INPUT_FIELD_ARRAY;

struct _EAP_CRED_EXPIRY_REQ {
    EAP_CONFIG_INPUT_FIELD_ARRAY curCreds;
    EAP_CONFIG_INPUT_FIELD_ARRAY newCreds;
};

typedef struct _EAP_ERROR _EAP_ERROR, *P_EAP_ERROR;

typedef struct _EAP_METHOD_TYPE _EAP_METHOD_TYPE, *P_EAP_METHOD_TYPE;

typedef struct _EAP_METHOD_TYPE EAP_METHOD_TYPE;

typedef struct _EAP_TYPE _EAP_TYPE, *P_EAP_TYPE;

typedef struct _EAP_TYPE EAP_TYPE;

struct _EAP_TYPE {
    BYTE type;
    DWORD dwVendorId;
    DWORD dwVendorType;
};

struct _EAP_METHOD_TYPE {
    EAP_TYPE eapType;
    DWORD dwAuthorId;
};

struct _EAP_ERROR {
    DWORD dwWinError;
    EAP_METHOD_TYPE type;
    DWORD dwReasonCode;
    GUID rootCauseGuid;
    GUID repairGuid;
    GUID helpLinkGuid;
    LPWSTR pRootCauseString;
    LPWSTR pRepairString;
};

typedef struct _EAP_INTERACTIVE_UI_DATA _EAP_INTERACTIVE_UI_DATA, *P_EAP_INTERACTIVE_UI_DATA;

typedef enum _EAP_INTERACTIVE_UI_DATA_TYPE {
    EapCredExpiryReq=2,
    EapCredExpiryResp=3,
    EapCredLogonReq=4,
    EapCredLogonResp=5,
    EapCredReq=0,
    EapCredResp=1
} _EAP_INTERACTIVE_UI_DATA_TYPE;

typedef enum _EAP_INTERACTIVE_UI_DATA_TYPE EAP_INTERACTIVE_UI_DATA_TYPE;

typedef union EAP_UI_DATA_FORMAT EAP_UI_DATA_FORMAT, *PEAP_UI_DATA_FORMAT;

typedef EAP_CONFIG_INPUT_FIELD_ARRAY EAP_CRED_REQ;

typedef struct _EAP_CRED_EXPIRY_REQ EAP_CRED_EXPIRY_REQ;

typedef EAP_CONFIG_INPUT_FIELD_ARRAY EAP_CRED_LOGON_REQ;

union EAP_UI_DATA_FORMAT {
    EAP_CRED_REQ * credData;
    EAP_CRED_EXPIRY_REQ * credExpiryData;
    EAP_CRED_LOGON_REQ * credLogonData;
};

struct _EAP_INTERACTIVE_UI_DATA {
    DWORD dwVersion;
    DWORD dwSize;
    EAP_INTERACTIVE_UI_DATA_TYPE dwDataType;
    DWORD cbUiData;
    union EAP_UI_DATA_FORMAT pbUiData;
};

typedef struct _EAP_METHOD_INFO _EAP_METHOD_INFO, *P_EAP_METHOD_INFO;

struct _EAP_METHOD_INFO {
    EAP_METHOD_TYPE eaptype;
    LPWSTR pwszAuthorName;
    LPWSTR pwszFriendlyName;
    DWORD eapProperties;
    struct _EAP_METHOD_INFO * pInnerMethodInfo;
};

typedef struct _EAP_METHOD_INFO_ARRAY _EAP_METHOD_INFO_ARRAY, *P_EAP_METHOD_INFO_ARRAY;

typedef struct _EAP_METHOD_INFO EAP_METHOD_INFO;

struct _EAP_METHOD_INFO_ARRAY {
    DWORD dwNumberOfMethods;
    EAP_METHOD_INFO * pEapMethods;
};

typedef struct _EAP_METHOD_INFO_ARRAY_EX _EAP_METHOD_INFO_ARRAY_EX, *P_EAP_METHOD_INFO_ARRAY_EX;

typedef struct _EAP_METHOD_INFO_EX _EAP_METHOD_INFO_EX, *P_EAP_METHOD_INFO_EX;

typedef struct _EAP_METHOD_INFO_EX EAP_METHOD_INFO_EX;

struct _EAP_METHOD_INFO_ARRAY_EX {
    DWORD dwNumberOfMethods;
    EAP_METHOD_INFO_EX * pEapMethods;
};

struct _EAP_METHOD_INFO_EX {
    EAP_METHOD_TYPE eaptype;
    LPWSTR pwszAuthorName;
    LPWSTR pwszFriendlyName;
    DWORD eapProperties;
    struct _EAP_METHOD_INFO_ARRAY_EX * pInnerMethodInfoArray;
};

typedef struct _EAP_METHOD_PROPERTY _EAP_METHOD_PROPERTY, *P_EAP_METHOD_PROPERTY;

typedef enum _EAP_METHOD_PROPERTY_TYPE {
    emptLegacyMethodPropertyFlag=31,
    emptPropCertifiedMethod=22,
    emptPropChannelBinding=16,
    emptPropCipherSuiteNegotiation=0,
    emptPropConfidentiality=4,
    emptPropCryptoBinding=13,
    emptPropDictionaryAttackResistance=11,
    emptPropFastReconnect=12,
    emptPropFragmentation=15,
    emptPropHiddenMethod=23,
    emptPropIdentityPrivacy=26,
    emptPropIntegrity=2,
    emptPropKeyDerivation=5,
    emptPropKeyStrength1024=10,
    emptPropKeyStrength128=7,
    emptPropKeyStrength256=8,
    emptPropKeyStrength512=9,
    emptPropKeyStrength64=6,
    emptPropMachineAuth=24,
    emptPropMethodChaining=27,
    emptPropMppeEncryption=19,
    emptPropMutualAuth=1,
    emptPropNap=17,
    emptPropReplayProtection=3,
    emptPropSessionIndependence=14,
    emptPropSharedStateEquivalence=28,
    emptPropStandalone=18,
    emptPropSupportsConfig=21,
    emptPropTunnelMethod=20,
    emptPropUserAuth=25,
    emptPropVendorSpecific=255
} _EAP_METHOD_PROPERTY_TYPE;

typedef enum _EAP_METHOD_PROPERTY_TYPE EAP_METHOD_PROPERTY_TYPE;

typedef enum _EAP_METHOD_PROPERTY_VALUE_TYPE {
    empvtBool=0,
    empvtDword=1,
    empvtString=2
} _EAP_METHOD_PROPERTY_VALUE_TYPE;

typedef enum _EAP_METHOD_PROPERTY_VALUE_TYPE EAP_METHOD_PROPERTY_VALUE_TYPE;

typedef union _EAP_METHOD_PROPERTY_VALUE _EAP_METHOD_PROPERTY_VALUE, *P_EAP_METHOD_PROPERTY_VALUE;

typedef union _EAP_METHOD_PROPERTY_VALUE EAP_METHOD_PROPERTY_VALUE;

typedef struct _EAP_METHOD_PROPERTY_VALUE_BOOL _EAP_METHOD_PROPERTY_VALUE_BOOL, *P_EAP_METHOD_PROPERTY_VALUE_BOOL;

typedef struct _EAP_METHOD_PROPERTY_VALUE_BOOL EAP_METHOD_PROPERTY_VALUE_BOOL;

typedef struct _EAP_METHOD_PROPERTY_VALUE_DWORD _EAP_METHOD_PROPERTY_VALUE_DWORD, *P_EAP_METHOD_PROPERTY_VALUE_DWORD;

typedef struct _EAP_METHOD_PROPERTY_VALUE_DWORD EAP_METHOD_PROPERTY_VALUE_DWORD;

typedef struct _EAP_METHOD_PROPERTY_VALUE_STRING _EAP_METHOD_PROPERTY_VALUE_STRING, *P_EAP_METHOD_PROPERTY_VALUE_STRING;

typedef struct _EAP_METHOD_PROPERTY_VALUE_STRING EAP_METHOD_PROPERTY_VALUE_STRING;

struct _EAP_METHOD_PROPERTY_VALUE_STRING {
    DWORD length;
    BYTE * value;
};

struct _EAP_METHOD_PROPERTY_VALUE_DWORD {
    DWORD length;
    DWORD value;
};

struct _EAP_METHOD_PROPERTY_VALUE_BOOL {
    DWORD length;
    BOOL value;
};

union _EAP_METHOD_PROPERTY_VALUE {
    EAP_METHOD_PROPERTY_VALUE_BOOL empvBool;
    EAP_METHOD_PROPERTY_VALUE_DWORD empvDword;
    EAP_METHOD_PROPERTY_VALUE_STRING empvString;
};

struct _EAP_METHOD_PROPERTY {
    EAP_METHOD_PROPERTY_TYPE eapMethodPropertyType;
    EAP_METHOD_PROPERTY_VALUE_TYPE eapMethodPropertyValueType;
    EAP_METHOD_PROPERTY_VALUE eapMethodPropertyValue;
};

typedef struct _EAP_METHOD_PROPERTY_ARRAY _EAP_METHOD_PROPERTY_ARRAY, *P_EAP_METHOD_PROPERTY_ARRAY;

typedef struct _EAP_METHOD_PROPERTY EAP_METHOD_PROPERTY;

struct _EAP_METHOD_PROPERTY_ARRAY {
    DWORD dwNumberOfProperties;
    EAP_METHOD_PROPERTY * pMethodProperty;
};

typedef struct _EAP_ATTRIBUTES EAP_ATTRIBUTES;

typedef struct _EAP_CRED_EXPIRY_REQ EAP_CRED_EXPIRY_RESP;

typedef EAP_CONFIG_INPUT_FIELD_ARRAY EAP_CRED_LOGON_RESP;

typedef EAP_CONFIG_INPUT_FIELD_ARRAY EAP_CRED_RESP;

typedef struct _EAP_ERROR EAP_ERROR;

typedef struct _EAP_INTERACTIVE_UI_DATA EAP_INTERACTIVE_UI_DATA;

typedef struct _EAP_METHOD_INFO_ARRAY EAP_METHOD_INFO_ARRAY;

typedef struct _EAP_METHOD_INFO_ARRAY_EX EAP_METHOD_INFO_ARRAY_EX;

typedef struct _EAP_METHOD_PROPERTY_ARRAY EAP_METHOD_PROPERTY_ARRAY;

typedef DWORD EAP_SESSIONID;

typedef struct _EAP_ATTRIBUTE EapAttribute;

typedef struct _EAP_ATTRIBUTES EapAttributes;

typedef enum _EAP_ATTRIBUTE_TYPE EapAttributeType;

typedef struct _EAP_CONFIG_INPUT_FIELD_ARRAY * PEAP_CONFIG_INPUT_FIELD_ARRAY;

typedef struct _EAP_CONFIG_INPUT_FIELD_DATA * PEAP_CONFIG_INPUT_FIELD_DATA;

typedef enum _EAP_CONFIG_INPUT_FIELD_TYPE * PEAP_CONFIG_INPUT_FIELD_TYPE;

#define _EH_RELATIVE_OFFSETS 0

#define BBT_UNIQUE_FUNCINFO 1

#define CC_EXPLICITFRAME 0

#define CT_ByReferenceOnly 2

#define CT_HasVirtualBase 4

#define CT_IsSimpleType 1

#define CT_IsWinRTHandle 8

#define EH_EMPTY_STATE -1

#define EH_EXCEPTION_PARAMETERS 3

#define EH_MAGIC_HAS_ES 429065505

#define EH_MAGIC_NUMBER1 429065504

#define EH_MAGIC_NUMBER2 429065505

#define EH_MAGIC_NUMBER3 429065506

#define EH_PURE_MAGIC_NUMBER1 26820608

#define FI_DYNSTKALIGN_FLAG 2

#define FI_EHS_FLAG 1

#define HT_IsComplusEh 2147483648

#define HT_IsConst 1

#define HT_IsReference 8

#define HT_IsResumable 16

#define HT_IsStdDotDot 64

#define HT_IsUnaligned 4

#define HT_IsVolatile 2

#define TI_IsConst 1

#define TI_IsPure 8

#define TI_IsUnaligned 4

#define TI_IsVolatile 2

#define TI_IsWinRT 16

typedef int __ehstate_t;

typedef struct _s_CatchableType _s_CatchableType, *P_s_CatchableType;

typedef struct TypeDescriptor TypeDescriptor, *PTypeDescriptor;

typedef struct PMD PMD, *PPMD;

typedef void (* PMFN)(void *);

struct PMD {
    ptrdiff_t mdisp;
    ptrdiff_t pdisp;
    ptrdiff_t vdisp;
};

struct _s_CatchableType {
    uint properties;
    struct TypeDescriptor * pType;
    struct PMD thisDisplacement;
    int sizeOrOffset;
    PMFN copyFunction;
};

struct TypeDescriptor {
    DWORD hash;
    void * spare;
    char * name;
};

typedef struct _s_CatchableTypeArray _s_CatchableTypeArray, *P_s_CatchableTypeArray;

typedef struct _s_CatchableType CatchableType;

struct _s_CatchableTypeArray {
    int nCatchableTypes;
    CatchableType ** arrayOfCatchableTypes;
};

typedef struct _s_ESTypeList _s_ESTypeList, *P_s_ESTypeList;

typedef struct _s_HandlerType _s_HandlerType, *P_s_HandlerType;

typedef struct _s_HandlerType HandlerType;

struct _s_HandlerType {
    uint adjectives;
    struct TypeDescriptor * pType;
    ptrdiff_t dispCatchObj;
    void * addressOfHandler;
};

struct _s_ESTypeList {
    int nCount;
    HandlerType * pTypeArray;
};

typedef struct _s_FuncInfo _s_FuncInfo, *P_s_FuncInfo;

typedef union anon__struct_3261_bitfield_1 anon__struct_3261_bitfield_1, *Panon__struct_3261_bitfield_1;

typedef struct _s_UnwindMapEntry _s_UnwindMapEntry, *P_s_UnwindMapEntry;

typedef struct _s_UnwindMapEntry UnwindMapEntry;

typedef struct _s_TryBlockMapEntry _s_TryBlockMapEntry, *P_s_TryBlockMapEntry;

typedef struct _s_TryBlockMapEntry TryBlockMapEntry;

typedef struct _s_ESTypeList ESTypeList;

union anon__struct_3261_bitfield_1 {
    uint magicNumber:29; /* : bits 0-28 */
    uint bbtFlags:3; /* : bits 29-31 */
};

struct _s_FuncInfo {
    union anon__struct_3261_bitfield_1 field_0x0;
    __ehstate_t maxState;
    UnwindMapEntry * pUnwindMap;
    uint nTryBlocks;
    TryBlockMapEntry * pTryBlockMap;
    uint nIPMapEntries;
    void * pIPtoStateMap;
    ESTypeList * pESTypeList;
    int EHFlags;
};

struct _s_TryBlockMapEntry {
    __ehstate_t tryLow;
    __ehstate_t tryHigh;
    __ehstate_t catchHigh;
    int nCatches;
    HandlerType * pHandlerArray;
};

struct _s_UnwindMapEntry {
    __ehstate_t toState;
    void (* action)(void);
};

typedef struct _s_ThrowInfo _s_ThrowInfo, *P_s_ThrowInfo;

typedef struct _s_CatchableTypeArray CatchableTypeArray;

struct _s_ThrowInfo {
    uint attributes;
    PMFN pmfnUnwind;
    int (* pForwardCompat)(void);
    CatchableTypeArray * pCatchableTypeArray;
};

typedef void DispatcherContext;

typedef struct EHExceptionRecord EHExceptionRecord, *PEHExceptionRecord;

typedef struct _EXCEPTION_RECORD _EXCEPTION_RECORD, *P_EXCEPTION_RECORD;

typedef struct EHParameters EHParameters, *PEHParameters;

typedef struct _s_ThrowInfo ThrowInfo;

struct EHParameters {
    DWORD magicNumber;
    void * pExceptionObject;
    ThrowInfo * pThrowInfo;
};

struct EHExceptionRecord {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    struct _EXCEPTION_RECORD * ExceptionRecord;
    void * ExceptionAddress;
    DWORD NumberParameters;
    struct EHParameters params;
};

struct _EXCEPTION_RECORD {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    struct _EXCEPTION_RECORD * ExceptionRecord;
    PVOID ExceptionAddress;
    DWORD NumberParameters;
    ULONG_PTR ExceptionInformation[15];
};

typedef struct EHRegistrationNode EHRegistrationNode, *PEHRegistrationNode;

struct EHRegistrationNode {
    struct EHRegistrationNode * pNext;
    void * frameHandler;
    __ehstate_t state;
};

typedef struct _s_FuncInfo FuncInfo;

typedef struct _ACT_AUTHORIZATION_STATE _ACT_AUTHORIZATION_STATE, *P_ACT_AUTHORIZATION_STATE;

struct _ACT_AUTHORIZATION_STATE {
    ULONG ulState;
};

typedef struct _SILO_INFO _SILO_INFO, *P_SILO_INFO;

struct _SILO_INFO {
    ULONG ulSTID;
    UCHAR SpecificationMajor;
    UCHAR SpecificationMinor;
    UCHAR ImplementationMajor;
    UCHAR ImplementationMinor;
    UCHAR type;
    UCHAR capabilities;
};

typedef struct _ACT_AUTHORIZATION_STATE ACT_AUTHORIZATION_STATE;

typedef struct EnhancedStorageACT EnhancedStorageACT, *PEnhancedStorageACT;

struct EnhancedStorageACT {
};

typedef struct EnhancedStorageSilo EnhancedStorageSilo, *PEnhancedStorageSilo;

struct EnhancedStorageSilo {
};

typedef struct EnhancedStorageSiloAction EnhancedStorageSiloAction, *PEnhancedStorageSiloAction;

struct EnhancedStorageSiloAction {
};

typedef struct EnumEnhancedStorageACT EnumEnhancedStorageACT, *PEnumEnhancedStorageACT;

struct EnumEnhancedStorageACT {
};

typedef struct IEnhancedStorageACT IEnhancedStorageACT, *PIEnhancedStorageACT;

typedef struct IEnhancedStorageACTVtbl IEnhancedStorageACTVtbl, *PIEnhancedStorageACTVtbl;

typedef struct IEnhancedStorageSilo IEnhancedStorageSilo, *PIEnhancedStorageSilo;

typedef struct IEnhancedStorageSiloVtbl IEnhancedStorageSiloVtbl, *PIEnhancedStorageSiloVtbl;

typedef struct _SILO_INFO SILO_INFO;

typedef struct IEnhancedStorageSiloAction IEnhancedStorageSiloAction, *PIEnhancedStorageSiloAction;

typedef struct IPortableDevice IPortableDevice, *PIPortableDevice;

typedef struct IEnhancedStorageSiloActionVtbl IEnhancedStorageSiloActionVtbl, *PIEnhancedStorageSiloActionVtbl;

typedef struct IPortableDeviceVtbl IPortableDeviceVtbl, *PIPortableDeviceVtbl;

typedef struct IPortableDeviceValues IPortableDeviceValues, *PIPortableDeviceValues;

typedef struct IPortableDeviceContent IPortableDeviceContent, *PIPortableDeviceContent;

typedef struct IPortableDeviceCapabilities IPortableDeviceCapabilities, *PIPortableDeviceCapabilities;

typedef struct IPortableDeviceEventCallback IPortableDeviceEventCallback, *PIPortableDeviceEventCallback;

typedef struct IPortableDeviceValuesVtbl IPortableDeviceValuesVtbl, *PIPortableDeviceValuesVtbl;

typedef struct _tagpropertykey _tagpropertykey, *P_tagpropertykey;

typedef struct _tagpropertykey PROPERTYKEY;

typedef struct tagPROPVARIANT tagPROPVARIANT, *PtagPROPVARIANT;

typedef struct tagPROPVARIANT PROPVARIANT;

typedef struct IPortableDevicePropVariantCollection IPortableDevicePropVariantCollection, *PIPortableDevicePropVariantCollection;

typedef struct IPortableDeviceKeyCollection IPortableDeviceKeyCollection, *PIPortableDeviceKeyCollection;

typedef struct IPortableDeviceValuesCollection IPortableDeviceValuesCollection, *PIPortableDeviceValuesCollection;

typedef struct IPropertyStore IPropertyStore, *PIPropertyStore;

typedef struct IPortableDeviceContentVtbl IPortableDeviceContentVtbl, *PIPortableDeviceContentVtbl;

typedef struct IEnumPortableDeviceObjectIDs IEnumPortableDeviceObjectIDs, *PIEnumPortableDeviceObjectIDs;

typedef struct IPortableDeviceProperties IPortableDeviceProperties, *PIPortableDeviceProperties;

typedef struct IPortableDeviceResources IPortableDeviceResources, *PIPortableDeviceResources;

typedef struct IPortableDeviceCapabilitiesVtbl IPortableDeviceCapabilitiesVtbl, *PIPortableDeviceCapabilitiesVtbl;

typedef struct IPortableDeviceEventCallbackVtbl IPortableDeviceEventCallbackVtbl, *PIPortableDeviceEventCallbackVtbl;

typedef struct IPortableDevicePropVariantCollectionVtbl IPortableDevicePropVariantCollectionVtbl, *PIPortableDevicePropVariantCollectionVtbl;

typedef struct IPortableDeviceKeyCollectionVtbl IPortableDeviceKeyCollectionVtbl, *PIPortableDeviceKeyCollectionVtbl;

typedef struct IPortableDeviceValuesCollectionVtbl IPortableDeviceValuesCollectionVtbl, *PIPortableDeviceValuesCollectionVtbl;

typedef struct IPropertyStoreVtbl IPropertyStoreVtbl, *PIPropertyStoreVtbl;

typedef struct IEnumPortableDeviceObjectIDsVtbl IEnumPortableDeviceObjectIDsVtbl, *PIEnumPortableDeviceObjectIDsVtbl;

typedef struct IPortableDevicePropertiesVtbl IPortableDevicePropertiesVtbl, *PIPortableDevicePropertiesVtbl;

typedef struct IPortableDeviceResourcesVtbl IPortableDeviceResourcesVtbl, *PIPortableDeviceResourcesVtbl;

struct IPortableDeviceKeyCollectionVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceKeyCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceKeyCollection *);
    ULONG (* Release)(struct IPortableDeviceKeyCollection *);
    HRESULT (* GetCount)(struct IPortableDeviceKeyCollection *, DWORD *);
    HRESULT (* GetAt)(struct IPortableDeviceKeyCollection *, DWORD, PROPERTYKEY *);
    HRESULT (* Add)(struct IPortableDeviceKeyCollection *, PROPERTYKEY *);
    HRESULT (* Clear)(struct IPortableDeviceKeyCollection *);
    HRESULT (* RemoveAt)(struct IPortableDeviceKeyCollection *, DWORD);
};

struct IPortableDevicePropVariantCollection {
    struct IPortableDevicePropVariantCollectionVtbl * lpVtbl;
};

struct IPortableDeviceContentVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceContent *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceContent *);
    ULONG (* Release)(struct IPortableDeviceContent *);
    HRESULT (* EnumObjects)(struct IPortableDeviceContent *, DWORD, LPCWSTR, struct IPortableDeviceValues *, struct IEnumPortableDeviceObjectIDs * *);
    HRESULT (* Properties)(struct IPortableDeviceContent *, struct IPortableDeviceProperties * *);
    HRESULT (* Transfer)(struct IPortableDeviceContent *, struct IPortableDeviceResources * *);
    HRESULT (* CreateObjectWithPropertiesOnly)(struct IPortableDeviceContent *, struct IPortableDeviceValues *, LPWSTR *);
    HRESULT (* CreateObjectWithPropertiesAndData)(struct IPortableDeviceContent *, struct IPortableDeviceValues *, struct IStream * *, DWORD *, LPWSTR *);
    HRESULT (* Delete)(struct IPortableDeviceContent *, DWORD, struct IPortableDevicePropVariantCollection *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetObjectIDsFromPersistentUniqueIDs)(struct IPortableDeviceContent *, struct IPortableDevicePropVariantCollection *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* Cancel)(struct IPortableDeviceContent *);
    HRESULT (* Move)(struct IPortableDeviceContent *, struct IPortableDevicePropVariantCollection *, LPCWSTR, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* Copy)(struct IPortableDeviceContent *, struct IPortableDevicePropVariantCollection *, LPCWSTR, struct IPortableDevicePropVariantCollection * *);
};

struct IEnumPortableDeviceObjectIDs {
    struct IEnumPortableDeviceObjectIDsVtbl * lpVtbl;
};

struct IPortableDeviceEventCallback {
    struct IPortableDeviceEventCallbackVtbl * lpVtbl;
};

struct IEnumPortableDeviceObjectIDsVtbl {
    HRESULT (* QueryInterface)(struct IEnumPortableDeviceObjectIDs *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumPortableDeviceObjectIDs *);
    ULONG (* Release)(struct IEnumPortableDeviceObjectIDs *);
    HRESULT (* Next)(struct IEnumPortableDeviceObjectIDs *, ULONG, LPWSTR *, ULONG *);
    HRESULT (* Skip)(struct IEnumPortableDeviceObjectIDs *, ULONG);
    HRESULT (* Reset)(struct IEnumPortableDeviceObjectIDs *);
    HRESULT (* Clone)(struct IEnumPortableDeviceObjectIDs *, struct IEnumPortableDeviceObjectIDs * *);
    HRESULT (* Cancel)(struct IEnumPortableDeviceObjectIDs *);
};

struct tagPROPVARIANT {
};

struct IEnhancedStorageSiloActionVtbl {
    HRESULT (* QueryInterface)(struct IEnhancedStorageSiloAction *, IID *, void * *);
    ULONG (* AddRef)(struct IEnhancedStorageSiloAction *);
    ULONG (* Release)(struct IEnhancedStorageSiloAction *);
    HRESULT (* GetName)(struct IEnhancedStorageSiloAction *, LPWSTR *);
    HRESULT (* GetDescription)(struct IEnhancedStorageSiloAction *, LPWSTR *);
    HRESULT (* Invoke)(struct IEnhancedStorageSiloAction *);
};

struct IPortableDeviceEventCallbackVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceEventCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceEventCallback *);
    ULONG (* Release)(struct IPortableDeviceEventCallback *);
    HRESULT (* OnEvent)(struct IPortableDeviceEventCallback *, struct IPortableDeviceValues *);
};

struct IEnhancedStorageSilo {
    struct IEnhancedStorageSiloVtbl * lpVtbl;
};

struct IPortableDevicePropVariantCollectionVtbl {
    HRESULT (* QueryInterface)(struct IPortableDevicePropVariantCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDevicePropVariantCollection *);
    ULONG (* Release)(struct IPortableDevicePropVariantCollection *);
    HRESULT (* GetCount)(struct IPortableDevicePropVariantCollection *, DWORD *);
    HRESULT (* GetAt)(struct IPortableDevicePropVariantCollection *, DWORD, PROPVARIANT *);
    HRESULT (* Add)(struct IPortableDevicePropVariantCollection *, PROPVARIANT *);
    HRESULT (* GetType)(struct IPortableDevicePropVariantCollection *, VARTYPE *);
    HRESULT (* ChangeType)(struct IPortableDevicePropVariantCollection *, VARTYPE);
    HRESULT (* Clear)(struct IPortableDevicePropVariantCollection *);
    HRESULT (* RemoveAt)(struct IPortableDevicePropVariantCollection *, DWORD);
};

struct IPortableDeviceVtbl {
    HRESULT (* QueryInterface)(struct IPortableDevice *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDevice *);
    ULONG (* Release)(struct IPortableDevice *);
    HRESULT (* Open)(struct IPortableDevice *, LPCWSTR, struct IPortableDeviceValues *);
    HRESULT (* SendCommand)(struct IPortableDevice *, DWORD, struct IPortableDeviceValues *, struct IPortableDeviceValues * *);
    HRESULT (* Content)(struct IPortableDevice *, struct IPortableDeviceContent * *);
    HRESULT (* Capabilities)(struct IPortableDevice *, struct IPortableDeviceCapabilities * *);
    HRESULT (* Cancel)(struct IPortableDevice *);
    HRESULT (* Close)(struct IPortableDevice *);
    HRESULT (* Advise)(struct IPortableDevice *, DWORD, struct IPortableDeviceEventCallback *, struct IPortableDeviceValues *, LPWSTR *);
    HRESULT (* Unadvise)(struct IPortableDevice *, LPCWSTR);
    HRESULT (* GetPnPDeviceID)(struct IPortableDevice *, LPWSTR *);
};

struct IEnhancedStorageSiloAction {
    struct IEnhancedStorageSiloActionVtbl * lpVtbl;
};

struct _tagpropertykey {
    GUID fmtid;
    DWORD pid;
};

struct IPortableDeviceContent {
    struct IPortableDeviceContentVtbl * lpVtbl;
};

struct IEnhancedStorageACT {
    struct IEnhancedStorageACTVtbl * lpVtbl;
};

struct IPortableDeviceProperties {
    struct IPortableDevicePropertiesVtbl * lpVtbl;
};

struct IEnhancedStorageSiloVtbl {
    HRESULT (* QueryInterface)(struct IEnhancedStorageSilo *, IID *, void * *);
    ULONG (* AddRef)(struct IEnhancedStorageSilo *);
    ULONG (* Release)(struct IEnhancedStorageSilo *);
    HRESULT (* GetInfo)(struct IEnhancedStorageSilo *, SILO_INFO *);
    HRESULT (* GetActions)(struct IEnhancedStorageSilo *, struct IEnhancedStorageSiloAction * * *, ULONG *);
    HRESULT (* SendCommand)(struct IEnhancedStorageSilo *, UCHAR, BYTE *, ULONG, BYTE *, ULONG *);
    HRESULT (* GetPortableDevice)(struct IEnhancedStorageSilo *, struct IPortableDevice * *);
    HRESULT (* GetDevicePath)(struct IEnhancedStorageSilo *, LPWSTR *);
};

struct IPortableDeviceCapabilities {
    struct IPortableDeviceCapabilitiesVtbl * lpVtbl;
};

struct IPortableDeviceKeyCollection {
    struct IPortableDeviceKeyCollectionVtbl * lpVtbl;
};

struct IPortableDeviceResourcesVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceResources *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceResources *);
    ULONG (* Release)(struct IPortableDeviceResources *);
    HRESULT (* GetSupportedResources)(struct IPortableDeviceResources *, LPCWSTR, struct IPortableDeviceKeyCollection * *);
    HRESULT (* GetResourceAttributes)(struct IPortableDeviceResources *, LPCWSTR, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* GetStream)(struct IPortableDeviceResources *, LPCWSTR, PROPERTYKEY *, DWORD, DWORD *, struct IStream * *);
    HRESULT (* Delete)(struct IPortableDeviceResources *, LPCWSTR, struct IPortableDeviceKeyCollection *);
    HRESULT (* Cancel)(struct IPortableDeviceResources *);
    HRESULT (* CreateResource)(struct IPortableDeviceResources *, struct IPortableDeviceValues *, struct IStream * *, DWORD *, LPWSTR *);
};

struct IPropertyStoreVtbl {
    HRESULT (* QueryInterface)(struct IPropertyStore *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyStore *);
    ULONG (* Release)(struct IPropertyStore *);
    HRESULT (* GetCount)(struct IPropertyStore *, DWORD *);
    HRESULT (* GetAt)(struct IPropertyStore *, DWORD, PROPERTYKEY *);
    HRESULT (* GetValue)(struct IPropertyStore *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* SetValue)(struct IPropertyStore *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* Commit)(struct IPropertyStore *);
};

struct IPortableDevice {
    struct IPortableDeviceVtbl * lpVtbl;
};

struct IPortableDeviceValues {
    struct IPortableDeviceValuesVtbl * lpVtbl;
};

struct IPortableDevicePropertiesVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceProperties *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceProperties *);
    ULONG (* Release)(struct IPortableDeviceProperties *);
    HRESULT (* GetSupportedProperties)(struct IPortableDeviceProperties *, LPCWSTR, struct IPortableDeviceKeyCollection * *);
    HRESULT (* GetPropertyAttributes)(struct IPortableDeviceProperties *, LPCWSTR, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* GetValues)(struct IPortableDeviceProperties *, LPCWSTR, struct IPortableDeviceKeyCollection *, struct IPortableDeviceValues * *);
    HRESULT (* SetValues)(struct IPortableDeviceProperties *, LPCWSTR, struct IPortableDeviceValues *, struct IPortableDeviceValues * *);
    HRESULT (* Delete)(struct IPortableDeviceProperties *, LPCWSTR, struct IPortableDeviceKeyCollection *);
    HRESULT (* Cancel)(struct IPortableDeviceProperties *);
};

struct IPortableDeviceValuesCollection {
    struct IPortableDeviceValuesCollectionVtbl * lpVtbl;
};

struct IPropertyStore {
    struct IPropertyStoreVtbl * lpVtbl;
};

struct IPortableDeviceCapabilitiesVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceCapabilities *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceCapabilities *);
    ULONG (* Release)(struct IPortableDeviceCapabilities *);
    HRESULT (* GetSupportedCommands)(struct IPortableDeviceCapabilities *, struct IPortableDeviceKeyCollection * *);
    HRESULT (* GetCommandOptions)(struct IPortableDeviceCapabilities *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* GetFunctionalCategories)(struct IPortableDeviceCapabilities *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetFunctionalObjects)(struct IPortableDeviceCapabilities *, GUID *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetSupportedContentTypes)(struct IPortableDeviceCapabilities *, GUID *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetSupportedFormats)(struct IPortableDeviceCapabilities *, GUID *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetSupportedFormatProperties)(struct IPortableDeviceCapabilities *, GUID *, struct IPortableDeviceKeyCollection * *);
    HRESULT (* GetFixedPropertyAttributes)(struct IPortableDeviceCapabilities *, GUID *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* Cancel)(struct IPortableDeviceCapabilities *);
    HRESULT (* GetSupportedEvents)(struct IPortableDeviceCapabilities *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetEventOptions)(struct IPortableDeviceCapabilities *, GUID *, struct IPortableDeviceValues * *);
};

struct IPortableDeviceResources {
    struct IPortableDeviceResourcesVtbl * lpVtbl;
};

struct IEnhancedStorageACTVtbl {
    HRESULT (* QueryInterface)(struct IEnhancedStorageACT *, IID *, void * *);
    ULONG (* AddRef)(struct IEnhancedStorageACT *);
    ULONG (* Release)(struct IEnhancedStorageACT *);
    HRESULT (* Authorize)(struct IEnhancedStorageACT *, DWORD, DWORD);
    HRESULT (* Unauthorize)(struct IEnhancedStorageACT *);
    HRESULT (* GetAuthorizationState)(struct IEnhancedStorageACT *, ACT_AUTHORIZATION_STATE *);
    HRESULT (* GetMatchingVolume)(struct IEnhancedStorageACT *, LPWSTR *);
    HRESULT (* GetUniqueIdentity)(struct IEnhancedStorageACT *, LPWSTR *);
    HRESULT (* GetSilos)(struct IEnhancedStorageACT *, struct IEnhancedStorageSilo * * *, ULONG *);
};

struct IPortableDeviceValuesVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceValues *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceValues *);
    ULONG (* Release)(struct IPortableDeviceValues *);
    HRESULT (* GetCount)(struct IPortableDeviceValues *, DWORD *);
    HRESULT (* GetAt)(struct IPortableDeviceValues *, DWORD, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* SetValue)(struct IPortableDeviceValues *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetValue)(struct IPortableDeviceValues *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* SetStringValue)(struct IPortableDeviceValues *, PROPERTYKEY *, LPCWSTR);
    HRESULT (* GetStringValue)(struct IPortableDeviceValues *, PROPERTYKEY *, LPWSTR *);
    HRESULT (* SetUnsignedIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, ULONG);
    HRESULT (* GetUnsignedIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, ULONG *);
    HRESULT (* SetSignedIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, LONG);
    HRESULT (* GetSignedIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, LONG *);
    HRESULT (* SetUnsignedLargeIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, ULONGLONG);
    HRESULT (* GetUnsignedLargeIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, ULONGLONG *);
    HRESULT (* SetSignedLargeIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, LONGLONG);
    HRESULT (* GetSignedLargeIntegerValue)(struct IPortableDeviceValues *, PROPERTYKEY *, LONGLONG *);
    HRESULT (* SetFloatValue)(struct IPortableDeviceValues *, PROPERTYKEY *, FLOAT);
    HRESULT (* GetFloatValue)(struct IPortableDeviceValues *, PROPERTYKEY *, FLOAT *);
    HRESULT (* SetErrorValue)(struct IPortableDeviceValues *, PROPERTYKEY *, HRESULT);
    HRESULT (* GetErrorValue)(struct IPortableDeviceValues *, PROPERTYKEY *, HRESULT *);
    HRESULT (* SetKeyValue)(struct IPortableDeviceValues *, PROPERTYKEY *, PROPERTYKEY *);
    HRESULT (* GetKeyValue)(struct IPortableDeviceValues *, PROPERTYKEY *, PROPERTYKEY *);
    HRESULT (* SetBoolValue)(struct IPortableDeviceValues *, PROPERTYKEY *, BOOL);
    HRESULT (* GetBoolValue)(struct IPortableDeviceValues *, PROPERTYKEY *, BOOL *);
    HRESULT (* SetIUnknownValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IUnknown *);
    HRESULT (* GetIUnknownValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IUnknown * *);
    HRESULT (* SetGuidValue)(struct IPortableDeviceValues *, PROPERTYKEY *, GUID *);
    HRESULT (* GetGuidValue)(struct IPortableDeviceValues *, PROPERTYKEY *, GUID *);
    HRESULT (* SetBufferValue)(struct IPortableDeviceValues *, PROPERTYKEY *, BYTE *, DWORD);
    HRESULT (* GetBufferValue)(struct IPortableDeviceValues *, PROPERTYKEY *, BYTE * *, DWORD *);
    HRESULT (* SetIPortableDeviceValuesValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDeviceValues *);
    HRESULT (* GetIPortableDeviceValuesValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* SetIPortableDevicePropVariantCollectionValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDevicePropVariantCollection *);
    HRESULT (* GetIPortableDevicePropVariantCollectionValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* SetIPortableDeviceKeyCollectionValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDeviceKeyCollection *);
    HRESULT (* GetIPortableDeviceKeyCollectionValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDeviceKeyCollection * *);
    HRESULT (* SetIPortableDeviceValuesCollectionValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDeviceValuesCollection *);
    HRESULT (* GetIPortableDeviceValuesCollectionValue)(struct IPortableDeviceValues *, PROPERTYKEY *, struct IPortableDeviceValuesCollection * *);
    HRESULT (* RemoveValue)(struct IPortableDeviceValues *, PROPERTYKEY *);
    HRESULT (* CopyValuesFromPropertyStore)(struct IPortableDeviceValues *, struct IPropertyStore *);
    HRESULT (* CopyValuesToPropertyStore)(struct IPortableDeviceValues *, struct IPropertyStore *);
    HRESULT (* Clear)(struct IPortableDeviceValues *);
};

struct IPortableDeviceValuesCollectionVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceValuesCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceValuesCollection *);
    ULONG (* Release)(struct IPortableDeviceValuesCollection *);
    HRESULT (* GetCount)(struct IPortableDeviceValuesCollection *, DWORD *);
    HRESULT (* GetAt)(struct IPortableDeviceValuesCollection *, DWORD, struct IPortableDeviceValues * *);
    HRESULT (* Add)(struct IPortableDeviceValuesCollection *, struct IPortableDeviceValues *);
    HRESULT (* Clear)(struct IPortableDeviceValuesCollection *);
    HRESULT (* RemoveAt)(struct IPortableDeviceValuesCollection *, DWORD);
};

typedef struct IEnhancedStorageACT2 IEnhancedStorageACT2, *PIEnhancedStorageACT2;

typedef struct IEnhancedStorageACT2Vtbl IEnhancedStorageACT2Vtbl, *PIEnhancedStorageACT2Vtbl;

struct IEnhancedStorageACT2Vtbl {
    HRESULT (* QueryInterface)(struct IEnhancedStorageACT2 *, IID *, void * *);
    ULONG (* AddRef)(struct IEnhancedStorageACT2 *);
    ULONG (* Release)(struct IEnhancedStorageACT2 *);
    HRESULT (* Authorize)(struct IEnhancedStorageACT2 *, DWORD, DWORD);
    HRESULT (* Unauthorize)(struct IEnhancedStorageACT2 *);
    HRESULT (* GetAuthorizationState)(struct IEnhancedStorageACT2 *, ACT_AUTHORIZATION_STATE *);
    HRESULT (* GetMatchingVolume)(struct IEnhancedStorageACT2 *, LPWSTR *);
    HRESULT (* GetUniqueIdentity)(struct IEnhancedStorageACT2 *, LPWSTR *);
    HRESULT (* GetSilos)(struct IEnhancedStorageACT2 *, struct IEnhancedStorageSilo * * *, ULONG *);
    HRESULT (* GetDeviceName)(struct IEnhancedStorageACT2 *, LPWSTR *);
    HRESULT (* IsDeviceRemovable)(struct IEnhancedStorageACT2 *, BOOL *);
};

struct IEnhancedStorageACT2 {
    struct IEnhancedStorageACT2Vtbl * lpVtbl;
};

typedef struct IEnumEnhancedStorageACT IEnumEnhancedStorageACT, *PIEnumEnhancedStorageACT;

typedef struct IEnumEnhancedStorageACTVtbl IEnumEnhancedStorageACTVtbl, *PIEnumEnhancedStorageACTVtbl;

struct IEnumEnhancedStorageACT {
    struct IEnumEnhancedStorageACTVtbl * lpVtbl;
};

struct IEnumEnhancedStorageACTVtbl {
    HRESULT (* QueryInterface)(struct IEnumEnhancedStorageACT *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumEnhancedStorageACT *);
    ULONG (* Release)(struct IEnumEnhancedStorageACT *);
    HRESULT (* GetACTs)(struct IEnumEnhancedStorageACT *, struct IEnhancedStorageACT * * *, ULONG *);
    HRESULT (* GetMatchingACT)(struct IEnumEnhancedStorageACT *, LPCWSTR, struct IEnhancedStorageACT * *);
};

typedef struct __m128d __m128d, *P__m128d;

struct __m128d {
    double m128d_f64[2];
};

typedef union __m128i __m128i, *P__m128i;

typedef char    sbyte;
union __m128i {
    sbyte m128i_i8[16];
    short m128i_i16[8];
    int m128i_i32[4];
    longlong m128i_i64[2];
    byte m128i_u8[16];
    ushort m128i_u16[8];
    uint m128i_u32[4];
    ulonglong m128i_u64[2];
};

#define ABNORM 10

#define BADENV 7

#define BADFORM 6

#define BADVERS 4

#define CRT_NERR 11

#define DIVZR 3

#define NOARGV 8

#define NOENVP 9

#define NOFP 2

#define NOMEM 5

#define NULLERR 1

#define STCKOVR 0

#define UNKNOWN 11

#define E2BIG 7

#define EACCES 13

#define EADDRINUSE 100

#define EADDRNOTAVAIL 101

#define EAFNOSUPPORT 102

#define EAGAIN 11

#define EALREADY 103

#define EBADF 9

#define EBADMSG 104

#define EBUSY 16

#define ECANCELED 105

#define ECHILD 10

#define ECONNABORTED 106

#define ECONNREFUSED 107

#define ECONNRESET 108

#define EDEADLK 36

#define EDEADLOCK 36

#define EDESTADDRREQ 109

#define EDOM 33

#define EEXIST 17

#define EFAULT 14

#define EFBIG 27

#define EHOSTUNREACH 110

#define EIDRM 111

#define EILSEQ 42

#define EINPROGRESS 112

#define EINTR 4

#define EINVAL 22

#define EIO 5

#define EISCONN 113

#define EISDIR 21

#define ELOOP 114

#define EMFILE 24

#define EMLINK 31

#define EMSGSIZE 115

#define ENAMETOOLONG 38

#define ENETDOWN 116

#define ENETRESET 117

#define ENETUNREACH 118

#define ENFILE 23

#define ENOBUFS 119

#define ENODATA 120

#define ENODEV 19

#define ENOENT 2

#define ENOEXEC 8

#define ENOLCK 39

#define ENOLINK 121

#define ENOMEM 12

#define ENOMSG 122

#define ENOPROTOOPT 123

#define ENOSPC 28

#define ENOSR 124

#define ENOSTR 125

#define ENOSYS 40

#define ENOTCONN 126

#define ENOTDIR 20

#define ENOTEMPTY 41

#define ENOTRECOVERABLE 127

#define ENOTSOCK 128

#define ENOTSUP 129

#define ENOTTY 25

#define ENXIO 6

#define EOPNOTSUPP 130

#define EOTHER 131

#define EOVERFLOW 132

#define EOWNERDEAD 133

#define EPERM 1

#define EPIPE 32

#define EPROTO 134

#define EPROTONOSUPPORT 135

#define EPROTOTYPE 136

#define ERANGE 34

#define EROFS 30

#define ESPIPE 29

#define ESRCH 3

#define ETIME 137

#define ETIMEDOUT 138

#define ETXTBSY 139

#define EWOULDBLOCK 140

#define EXDEV 18

#define STRUNCATE 80

#define EVENT_ACTIVITY_CTRL_CREATE_ID 3

#define EVENT_ACTIVITY_CTRL_CREATE_SET_ID 5

#define EVENT_ACTIVITY_CTRL_GET_ID 1

#define EVENT_ACTIVITY_CTRL_GET_SET_ID 4

#define EVENT_ACTIVITY_CTRL_SET_ID 2

#define EVENT_FILTER_TYPE_SCHEMATIZED 2147483648

#define EVENT_MAX_LEVEL 255

#define EVENT_MIN_LEVEL 0

#define MAX_EVENT_DATA_DESCRIPTORS 128

#define MAX_EVENT_FILTER_DATA_SIZE 1024

typedef struct _EVENT_DATA_DESCRIPTOR _EVENT_DATA_DESCRIPTOR, *P_EVENT_DATA_DESCRIPTOR;

struct _EVENT_DATA_DESCRIPTOR {
    ULONGLONG Ptr;
    ULONG Size;
    ULONG Reserved;
};

typedef struct _EVENT_DESCRIPTOR _EVENT_DESCRIPTOR, *P_EVENT_DESCRIPTOR;

struct _EVENT_DESCRIPTOR {
    USHORT Id;
    UCHAR Version;
    UCHAR Channel;
    UCHAR Level;
    UCHAR Opcode;
    USHORT Task;
    ULONGLONG Keyword;
};

typedef struct _EVENT_FILTER_DESCRIPTOR _EVENT_FILTER_DESCRIPTOR, *P_EVENT_FILTER_DESCRIPTOR;

struct _EVENT_FILTER_DESCRIPTOR {
    ULONGLONG Ptr;
    ULONG Size;
    ULONG Type;
};

typedef struct _EVENT_FILTER_HEADER _EVENT_FILTER_HEADER, *P_EVENT_FILTER_HEADER;

struct _EVENT_FILTER_HEADER {
    USHORT Id;
    UCHAR Version;
    UCHAR Reserved[5];
    ULONGLONG InstanceId;
    ULONG Size;
    ULONG NextOffset;
};

typedef struct _EVENT_DATA_DESCRIPTOR EVENT_DATA_DESCRIPTOR;

typedef struct _EVENT_DESCRIPTOR EVENT_DESCRIPTOR;

typedef struct _EVENT_FILTER_DESCRIPTOR EVENT_FILTER_DESCRIPTOR;

typedef struct _EVENT_FILTER_HEADER EVENT_FILTER_HEADER;

typedef EVENT_DESCRIPTOR * PCEVENT_DESCRIPTOR;

typedef GUID * LPCGUID;

typedef struct _EVENT_FILTER_DESCRIPTOR * PEVENT_FILTER_DESCRIPTOR;

typedef void (* PENABLECALLBACK)(LPCGUID, ULONG, UCHAR, ULONGLONG, ULONGLONG, PEVENT_FILTER_DESCRIPTOR, PVOID);

typedef struct _EVENT_DATA_DESCRIPTOR * PEVENT_DATA_DESCRIPTOR;

typedef struct _EVENT_DESCRIPTOR * PEVENT_DESCRIPTOR;

typedef struct _EVENT_FILTER_HEADER * PEVENT_FILTER_HEADER;

typedef ULONGLONG * PREGHANDLE;

typedef ULONGLONG REGHANDLE;

#define EXCEPTION_CONTINUE_EXECUTION -1

#define EXCEPTION_CONTINUE_SEARCH 0

#define EXCEPTION_EXECUTE_HANDLER 1

typedef struct _CONTEXT _CONTEXT, *P_CONTEXT;

typedef struct _FLOATING_SAVE_AREA _FLOATING_SAVE_AREA, *P_FLOATING_SAVE_AREA;

typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;

struct _FLOATING_SAVE_AREA {
    DWORD ControlWord;
    DWORD StatusWord;
    DWORD TagWord;
    DWORD ErrorOffset;
    DWORD ErrorSelector;
    DWORD DataOffset;
    DWORD DataSelector;
    BYTE RegisterArea[80];
    DWORD Cr0NpxState;
};

struct _CONTEXT {
    DWORD ContextFlags;
    DWORD Dr0;
    DWORD Dr1;
    DWORD Dr2;
    DWORD Dr3;
    DWORD Dr6;
    DWORD Dr7;
    FLOATING_SAVE_AREA FloatSave;
    DWORD SegGs;
    DWORD SegFs;
    DWORD SegEs;
    DWORD SegDs;
    DWORD Edi;
    DWORD Esi;
    DWORD Ebx;
    DWORD Edx;
    DWORD Ecx;
    DWORD Eax;
    DWORD Ebp;
    DWORD Eip;
    DWORD SegCs;
    DWORD EFlags;
    DWORD Esp;
    DWORD SegSs;
    BYTE ExtendedRegisters[512];
};

typedef enum _EXCEPTION_DISPOSITION {
    ExceptionCollidedUnwind=3,
    ExceptionContinueExecution=0,
    ExceptionContinueSearch=1,
    ExceptionNestedException=2
} _EXCEPTION_DISPOSITION;

typedef struct _EXCEPTION_POINTERS _EXCEPTION_POINTERS, *P_EXCEPTION_POINTERS;

typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;

typedef EXCEPTION_RECORD * PEXCEPTION_RECORD;

typedef struct _CONTEXT CONTEXT;

typedef CONTEXT * PCONTEXT;

struct _EXCEPTION_POINTERS {
    PEXCEPTION_RECORD ExceptionRecord;
    PCONTEXT ContextRecord;
};

typedef void (* _PHNDLR)(int);

typedef struct _XCPT_ACTION _XCPT_ACTION, *P_XCPT_ACTION;

struct _XCPT_ACTION {
    ulong XcptNum;
    int SigNum;
    _PHNDLR XcptAction;
};

typedef enum _EXCEPTION_DISPOSITION EXCEPTION_DISPOSITION;

typedef enum BrowserNavConstants {
    navAllowAutosearch=16,
    navBlockRedirectsXDomain=32768,
    navBrowserBar=32,
    navEnforceRestricted=128,
    navHyperlink=64,
    navKeepWordWheelText=8192,
    navNewWindowsManaged=256,
    navNoHistory=2,
    navNoReadFromCache=4,
    navNoWriteToCache=8,
    navOpenInBackgroundTab=4096,
    navOpenInNewTab=2048,
    navOpenInNewWindow=1,
    navOpenNewForegroundTab=65536,
    navTrustedForActiveX=1024,
    navUntrustedForDownload=512,
    navVirtualTab=16384
} BrowserNavConstants;

typedef enum CommandStateChangeConstants {
    CSC_NAVIGATEBACK=2,
    CSC_NAVIGATEFORWARD=1,
    CSC_UPDATECOMMANDS=0
} CommandStateChangeConstants;

typedef struct CScriptErrorList CScriptErrorList, *PCScriptErrorList;

struct CScriptErrorList {
};

typedef struct DShellNameSpaceEvents DShellNameSpaceEvents, *PDShellNameSpaceEvents;

typedef struct DShellNameSpaceEventsVtbl DShellNameSpaceEventsVtbl, *PDShellNameSpaceEventsVtbl;

struct DShellNameSpaceEventsVtbl {
    HRESULT (* QueryInterface)(struct DShellNameSpaceEvents *, IID *, void * *);
    ULONG (* AddRef)(struct DShellNameSpaceEvents *);
    ULONG (* Release)(struct DShellNameSpaceEvents *);
    HRESULT (* GetTypeInfoCount)(struct DShellNameSpaceEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct DShellNameSpaceEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct DShellNameSpaceEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct DShellNameSpaceEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct DShellNameSpaceEvents {
    struct DShellNameSpaceEventsVtbl * lpVtbl;
};

typedef struct DShellWindowsEvents DShellWindowsEvents, *PDShellWindowsEvents;

typedef struct DShellWindowsEventsVtbl DShellWindowsEventsVtbl, *PDShellWindowsEventsVtbl;

struct DShellWindowsEvents {
    struct DShellWindowsEventsVtbl * lpVtbl;
};

struct DShellWindowsEventsVtbl {
    HRESULT (* QueryInterface)(struct DShellWindowsEvents *, IID *, void * *);
    ULONG (* AddRef)(struct DShellWindowsEvents *);
    ULONG (* Release)(struct DShellWindowsEvents *);
    HRESULT (* GetTypeInfoCount)(struct DShellWindowsEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct DShellWindowsEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct DShellWindowsEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct DShellWindowsEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct DWebBrowserEvents DWebBrowserEvents, *PDWebBrowserEvents;

typedef struct DWebBrowserEventsVtbl DWebBrowserEventsVtbl, *PDWebBrowserEventsVtbl;

struct DWebBrowserEvents {
    struct DWebBrowserEventsVtbl * lpVtbl;
};

struct DWebBrowserEventsVtbl {
    HRESULT (* QueryInterface)(struct DWebBrowserEvents *, IID *, void * *);
    ULONG (* AddRef)(struct DWebBrowserEvents *);
    ULONG (* Release)(struct DWebBrowserEvents *);
    HRESULT (* GetTypeInfoCount)(struct DWebBrowserEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct DWebBrowserEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct DWebBrowserEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct DWebBrowserEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct DWebBrowserEvents2 DWebBrowserEvents2, *PDWebBrowserEvents2;

typedef struct DWebBrowserEvents2Vtbl DWebBrowserEvents2Vtbl, *PDWebBrowserEvents2Vtbl;

struct DWebBrowserEvents2 {
    struct DWebBrowserEvents2Vtbl * lpVtbl;
};

struct DWebBrowserEvents2Vtbl {
    HRESULT (* QueryInterface)(struct DWebBrowserEvents2 *, IID *, void * *);
    ULONG (* AddRef)(struct DWebBrowserEvents2 *);
    ULONG (* Release)(struct DWebBrowserEvents2 *);
    HRESULT (* GetTypeInfoCount)(struct DWebBrowserEvents2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct DWebBrowserEvents2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct DWebBrowserEvents2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct DWebBrowserEvents2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct InternetExplorer InternetExplorer, *PInternetExplorer;

struct InternetExplorer {
};

typedef struct InternetExplorerMedium InternetExplorerMedium, *PInternetExplorerMedium;

struct InternetExplorerMedium {
};

typedef struct IScriptErrorList IScriptErrorList, *PIScriptErrorList;

typedef struct IScriptErrorListVtbl IScriptErrorListVtbl, *PIScriptErrorListVtbl;

struct IScriptErrorList {
    struct IScriptErrorListVtbl * lpVtbl;
};

struct IScriptErrorListVtbl {
    HRESULT (* QueryInterface)(struct IScriptErrorList *, IID *, void * *);
    ULONG (* AddRef)(struct IScriptErrorList *);
    ULONG (* Release)(struct IScriptErrorList *);
    HRESULT (* GetTypeInfoCount)(struct IScriptErrorList *, UINT *);
    HRESULT (* GetTypeInfo)(struct IScriptErrorList *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IScriptErrorList *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IScriptErrorList *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* advanceError)(struct IScriptErrorList *);
    HRESULT (* retreatError)(struct IScriptErrorList *);
    HRESULT (* canAdvanceError)(struct IScriptErrorList *, BOOL *);
    HRESULT (* canRetreatError)(struct IScriptErrorList *, BOOL *);
    HRESULT (* getErrorLine)(struct IScriptErrorList *, LONG *);
    HRESULT (* getErrorChar)(struct IScriptErrorList *, LONG *);
    HRESULT (* getErrorCode)(struct IScriptErrorList *, LONG *);
    HRESULT (* getErrorMsg)(struct IScriptErrorList *, BSTR *);
    HRESULT (* getErrorUrl)(struct IScriptErrorList *, BSTR *);
    HRESULT (* getAlwaysShowLockState)(struct IScriptErrorList *, BOOL *);
    HRESULT (* getDetailsPaneOpen)(struct IScriptErrorList *, BOOL *);
    HRESULT (* setDetailsPaneOpen)(struct IScriptErrorList *, BOOL);
    HRESULT (* getPerErrorDisplay)(struct IScriptErrorList *, BOOL *);
    HRESULT (* setPerErrorDisplay)(struct IScriptErrorList *, BOOL);
};

typedef struct IShellFavoritesNameSpace IShellFavoritesNameSpace, *PIShellFavoritesNameSpace;

typedef struct IShellFavoritesNameSpaceVtbl IShellFavoritesNameSpaceVtbl, *PIShellFavoritesNameSpaceVtbl;

struct IShellFavoritesNameSpace {
    struct IShellFavoritesNameSpaceVtbl * lpVtbl;
};

struct IShellFavoritesNameSpaceVtbl {
    HRESULT (* QueryInterface)(struct IShellFavoritesNameSpace *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFavoritesNameSpace *);
    ULONG (* Release)(struct IShellFavoritesNameSpace *);
    HRESULT (* GetTypeInfoCount)(struct IShellFavoritesNameSpace *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellFavoritesNameSpace *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellFavoritesNameSpace *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellFavoritesNameSpace *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* MoveSelectionUp)(struct IShellFavoritesNameSpace *);
    HRESULT (* MoveSelectionDown)(struct IShellFavoritesNameSpace *);
    HRESULT (* ResetSort)(struct IShellFavoritesNameSpace *);
    HRESULT (* NewFolder)(struct IShellFavoritesNameSpace *);
    HRESULT (* Synchronize)(struct IShellFavoritesNameSpace *);
    HRESULT (* Import)(struct IShellFavoritesNameSpace *);
    HRESULT (* Export)(struct IShellFavoritesNameSpace *);
    HRESULT (* InvokeContextMenuCommand)(struct IShellFavoritesNameSpace *, BSTR);
    HRESULT (* MoveSelectionTo)(struct IShellFavoritesNameSpace *);
    HRESULT (* get_SubscriptionsEnabled)(struct IShellFavoritesNameSpace *, VARIANT_BOOL *);
    HRESULT (* CreateSubscriptionForSelection)(struct IShellFavoritesNameSpace *, VARIANT_BOOL *);
    HRESULT (* DeleteSubscriptionForSelection)(struct IShellFavoritesNameSpace *, VARIANT_BOOL *);
    HRESULT (* SetRoot)(struct IShellFavoritesNameSpace *, BSTR);
};

typedef struct IShellNameSpace IShellNameSpace, *PIShellNameSpace;

typedef struct IShellNameSpaceVtbl IShellNameSpaceVtbl, *PIShellNameSpaceVtbl;

struct IShellNameSpace {
    struct IShellNameSpaceVtbl * lpVtbl;
};

struct IShellNameSpaceVtbl {
    HRESULT (* QueryInterface)(struct IShellNameSpace *, IID *, void * *);
    ULONG (* AddRef)(struct IShellNameSpace *);
    ULONG (* Release)(struct IShellNameSpace *);
    HRESULT (* GetTypeInfoCount)(struct IShellNameSpace *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellNameSpace *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellNameSpace *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellNameSpace *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* MoveSelectionUp)(struct IShellNameSpace *);
    HRESULT (* MoveSelectionDown)(struct IShellNameSpace *);
    HRESULT (* ResetSort)(struct IShellNameSpace *);
    HRESULT (* NewFolder)(struct IShellNameSpace *);
    HRESULT (* Synchronize)(struct IShellNameSpace *);
    HRESULT (* Import)(struct IShellNameSpace *);
    HRESULT (* Export)(struct IShellNameSpace *);
    HRESULT (* InvokeContextMenuCommand)(struct IShellNameSpace *, BSTR);
    HRESULT (* MoveSelectionTo)(struct IShellNameSpace *);
    HRESULT (* get_SubscriptionsEnabled)(struct IShellNameSpace *, VARIANT_BOOL *);
    HRESULT (* CreateSubscriptionForSelection)(struct IShellNameSpace *, VARIANT_BOOL *);
    HRESULT (* DeleteSubscriptionForSelection)(struct IShellNameSpace *, VARIANT_BOOL *);
    HRESULT (* SetRoot)(struct IShellNameSpace *, BSTR);
    HRESULT (* get_EnumOptions)(struct IShellNameSpace *, LONG *);
    HRESULT (* put_EnumOptions)(struct IShellNameSpace *, LONG);
    HRESULT (* get_SelectedItem)(struct IShellNameSpace *, struct IDispatch * *);
    HRESULT (* put_SelectedItem)(struct IShellNameSpace *, struct IDispatch *);
    HRESULT (* get_Root)(struct IShellNameSpace *, VARIANT *);
    HRESULT (* put_Root)(struct IShellNameSpace *, VARIANT);
    HRESULT (* get_Depth)(struct IShellNameSpace *, int *);
    HRESULT (* put_Depth)(struct IShellNameSpace *, int);
    HRESULT (* get_Mode)(struct IShellNameSpace *, UINT *);
    HRESULT (* put_Mode)(struct IShellNameSpace *, UINT);
    HRESULT (* get_Flags)(struct IShellNameSpace *, DWORD *);
    HRESULT (* put_Flags)(struct IShellNameSpace *, DWORD);
    HRESULT (* put_TVFlags)(struct IShellNameSpace *, DWORD);
    HRESULT (* get_TVFlags)(struct IShellNameSpace *, DWORD *);
    HRESULT (* get_Columns)(struct IShellNameSpace *, BSTR *);
    HRESULT (* put_Columns)(struct IShellNameSpace *, BSTR);
    HRESULT (* get_CountViewTypes)(struct IShellNameSpace *, int *);
    HRESULT (* SetViewType)(struct IShellNameSpace *, int);
    HRESULT (* SelectedItems)(struct IShellNameSpace *, struct IDispatch * *);
    HRESULT (* Expand)(struct IShellNameSpace *, VARIANT, int);
    HRESULT (* UnselectAll)(struct IShellNameSpace *);
};

typedef struct IShellUIHelper IShellUIHelper, *PIShellUIHelper;

typedef struct IShellUIHelperVtbl IShellUIHelperVtbl, *PIShellUIHelperVtbl;

struct IShellUIHelperVtbl {
    HRESULT (* QueryInterface)(struct IShellUIHelper *, IID *, void * *);
    ULONG (* AddRef)(struct IShellUIHelper *);
    ULONG (* Release)(struct IShellUIHelper *);
    HRESULT (* GetTypeInfoCount)(struct IShellUIHelper *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellUIHelper *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellUIHelper *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellUIHelper *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* ResetFirstBootMode)(struct IShellUIHelper *);
    HRESULT (* ResetSafeMode)(struct IShellUIHelper *);
    HRESULT (* RefreshOfflineDesktop)(struct IShellUIHelper *);
    HRESULT (* AddFavorite)(struct IShellUIHelper *, BSTR, VARIANT *);
    HRESULT (* AddChannel)(struct IShellUIHelper *, BSTR);
    HRESULT (* AddDesktopComponent)(struct IShellUIHelper *, BSTR, BSTR, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* IsSubscribed)(struct IShellUIHelper *, BSTR, VARIANT_BOOL *);
    HRESULT (* NavigateAndFind)(struct IShellUIHelper *, BSTR, BSTR, VARIANT *);
    HRESULT (* ImportExportFavorites)(struct IShellUIHelper *, VARIANT_BOOL, BSTR);
    HRESULT (* AutoCompleteSaveForm)(struct IShellUIHelper *, VARIANT *);
    HRESULT (* AutoScan)(struct IShellUIHelper *, BSTR, BSTR, VARIANT *);
    HRESULT (* AutoCompleteAttach)(struct IShellUIHelper *, VARIANT *);
    HRESULT (* ShowBrowserUI)(struct IShellUIHelper *, BSTR, VARIANT *, VARIANT *);
};

struct IShellUIHelper {
    struct IShellUIHelperVtbl * lpVtbl;
};

typedef struct IShellUIHelper2 IShellUIHelper2, *PIShellUIHelper2;

typedef struct IShellUIHelper2Vtbl IShellUIHelper2Vtbl, *PIShellUIHelper2Vtbl;

struct IShellUIHelper2Vtbl {
    HRESULT (* QueryInterface)(struct IShellUIHelper2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellUIHelper2 *);
    ULONG (* Release)(struct IShellUIHelper2 *);
    HRESULT (* GetTypeInfoCount)(struct IShellUIHelper2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellUIHelper2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellUIHelper2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellUIHelper2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* ResetFirstBootMode)(struct IShellUIHelper2 *);
    HRESULT (* ResetSafeMode)(struct IShellUIHelper2 *);
    HRESULT (* RefreshOfflineDesktop)(struct IShellUIHelper2 *);
    HRESULT (* AddFavorite)(struct IShellUIHelper2 *, BSTR, VARIANT *);
    HRESULT (* AddChannel)(struct IShellUIHelper2 *, BSTR);
    HRESULT (* AddDesktopComponent)(struct IShellUIHelper2 *, BSTR, BSTR, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* IsSubscribed)(struct IShellUIHelper2 *, BSTR, VARIANT_BOOL *);
    HRESULT (* NavigateAndFind)(struct IShellUIHelper2 *, BSTR, BSTR, VARIANT *);
    HRESULT (* ImportExportFavorites)(struct IShellUIHelper2 *, VARIANT_BOOL, BSTR);
    HRESULT (* AutoCompleteSaveForm)(struct IShellUIHelper2 *, VARIANT *);
    HRESULT (* AutoScan)(struct IShellUIHelper2 *, BSTR, BSTR, VARIANT *);
    HRESULT (* AutoCompleteAttach)(struct IShellUIHelper2 *, VARIANT *);
    HRESULT (* ShowBrowserUI)(struct IShellUIHelper2 *, BSTR, VARIANT *, VARIANT *);
    HRESULT (* AddSearchProvider)(struct IShellUIHelper2 *, BSTR);
    HRESULT (* RunOnceShown)(struct IShellUIHelper2 *);
    HRESULT (* SkipRunOnce)(struct IShellUIHelper2 *);
    HRESULT (* CustomizeSettings)(struct IShellUIHelper2 *, VARIANT_BOOL, VARIANT_BOOL, BSTR);
    HRESULT (* SqmEnabled)(struct IShellUIHelper2 *, VARIANT_BOOL *);
    HRESULT (* PhishingEnabled)(struct IShellUIHelper2 *, VARIANT_BOOL *);
    HRESULT (* BrandImageUri)(struct IShellUIHelper2 *, BSTR *);
    HRESULT (* SkipTabsWelcome)(struct IShellUIHelper2 *);
    HRESULT (* DiagnoseConnection)(struct IShellUIHelper2 *);
    HRESULT (* CustomizeClearType)(struct IShellUIHelper2 *, VARIANT_BOOL);
    HRESULT (* IsSearchProviderInstalled)(struct IShellUIHelper2 *, BSTR, DWORD *);
    HRESULT (* IsSearchMigrated)(struct IShellUIHelper2 *, VARIANT_BOOL *);
    HRESULT (* DefaultSearchProvider)(struct IShellUIHelper2 *, BSTR *);
    HRESULT (* RunOnceRequiredSettingsComplete)(struct IShellUIHelper2 *, VARIANT_BOOL);
    HRESULT (* RunOnceHasShown)(struct IShellUIHelper2 *, VARIANT_BOOL *);
    HRESULT (* SearchGuideUrl)(struct IShellUIHelper2 *, BSTR *);
};

struct IShellUIHelper2 {
    struct IShellUIHelper2Vtbl * lpVtbl;
};

typedef struct IShellUIHelper3 IShellUIHelper3, *PIShellUIHelper3;

typedef struct IShellUIHelper3Vtbl IShellUIHelper3Vtbl, *PIShellUIHelper3Vtbl;

struct IShellUIHelper3Vtbl {
    HRESULT (* QueryInterface)(struct IShellUIHelper3 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellUIHelper3 *);
    ULONG (* Release)(struct IShellUIHelper3 *);
    HRESULT (* GetTypeInfoCount)(struct IShellUIHelper3 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellUIHelper3 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellUIHelper3 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellUIHelper3 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* ResetFirstBootMode)(struct IShellUIHelper3 *);
    HRESULT (* ResetSafeMode)(struct IShellUIHelper3 *);
    HRESULT (* RefreshOfflineDesktop)(struct IShellUIHelper3 *);
    HRESULT (* AddFavorite)(struct IShellUIHelper3 *, BSTR, VARIANT *);
    HRESULT (* AddChannel)(struct IShellUIHelper3 *, BSTR);
    HRESULT (* AddDesktopComponent)(struct IShellUIHelper3 *, BSTR, BSTR, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* IsSubscribed)(struct IShellUIHelper3 *, BSTR, VARIANT_BOOL *);
    HRESULT (* NavigateAndFind)(struct IShellUIHelper3 *, BSTR, BSTR, VARIANT *);
    HRESULT (* ImportExportFavorites)(struct IShellUIHelper3 *, VARIANT_BOOL, BSTR);
    HRESULT (* AutoCompleteSaveForm)(struct IShellUIHelper3 *, VARIANT *);
    HRESULT (* AutoScan)(struct IShellUIHelper3 *, BSTR, BSTR, VARIANT *);
    HRESULT (* AutoCompleteAttach)(struct IShellUIHelper3 *, VARIANT *);
    HRESULT (* ShowBrowserUI)(struct IShellUIHelper3 *, BSTR, VARIANT *, VARIANT *);
    HRESULT (* AddSearchProvider)(struct IShellUIHelper3 *, BSTR);
    HRESULT (* RunOnceShown)(struct IShellUIHelper3 *);
    HRESULT (* SkipRunOnce)(struct IShellUIHelper3 *);
    HRESULT (* CustomizeSettings)(struct IShellUIHelper3 *, VARIANT_BOOL, VARIANT_BOOL, BSTR);
    HRESULT (* SqmEnabled)(struct IShellUIHelper3 *, VARIANT_BOOL *);
    HRESULT (* PhishingEnabled)(struct IShellUIHelper3 *, VARIANT_BOOL *);
    HRESULT (* BrandImageUri)(struct IShellUIHelper3 *, BSTR *);
    HRESULT (* SkipTabsWelcome)(struct IShellUIHelper3 *);
    HRESULT (* DiagnoseConnection)(struct IShellUIHelper3 *);
    HRESULT (* CustomizeClearType)(struct IShellUIHelper3 *, VARIANT_BOOL);
    HRESULT (* IsSearchProviderInstalled)(struct IShellUIHelper3 *, BSTR, DWORD *);
    HRESULT (* IsSearchMigrated)(struct IShellUIHelper3 *, VARIANT_BOOL *);
    HRESULT (* DefaultSearchProvider)(struct IShellUIHelper3 *, BSTR *);
    HRESULT (* RunOnceRequiredSettingsComplete)(struct IShellUIHelper3 *, VARIANT_BOOL);
    HRESULT (* RunOnceHasShown)(struct IShellUIHelper3 *, VARIANT_BOOL *);
    HRESULT (* SearchGuideUrl)(struct IShellUIHelper3 *, BSTR *);
    HRESULT (* AddService)(struct IShellUIHelper3 *, BSTR);
    HRESULT (* IsServiceInstalled)(struct IShellUIHelper3 *, BSTR, BSTR, DWORD *);
    HRESULT (* InPrivateFilteringEnabled)(struct IShellUIHelper3 *, VARIANT_BOOL *);
    HRESULT (* AddToFavoritesBar)(struct IShellUIHelper3 *, BSTR, BSTR, VARIANT *);
    HRESULT (* BuildNewTabPage)(struct IShellUIHelper3 *);
    HRESULT (* SetRecentlyClosedVisible)(struct IShellUIHelper3 *, VARIANT_BOOL);
    HRESULT (* SetActivitiesVisible)(struct IShellUIHelper3 *, VARIANT_BOOL);
    HRESULT (* ContentDiscoveryReset)(struct IShellUIHelper3 *);
    HRESULT (* IsSuggestedSitesEnabled)(struct IShellUIHelper3 *, VARIANT_BOOL *);
    HRESULT (* EnableSuggestedSites)(struct IShellUIHelper3 *, VARIANT_BOOL);
    HRESULT (* NavigateToSuggestedSites)(struct IShellUIHelper3 *, BSTR);
    HRESULT (* ShowTabsHelp)(struct IShellUIHelper3 *);
    HRESULT (* ShowInPrivateHelp)(struct IShellUIHelper3 *);
};

struct IShellUIHelper3 {
    struct IShellUIHelper3Vtbl * lpVtbl;
};

typedef struct IShellWindows IShellWindows, *PIShellWindows;

typedef struct IShellWindowsVtbl IShellWindowsVtbl, *PIShellWindowsVtbl;

struct IShellWindows {
    struct IShellWindowsVtbl * lpVtbl;
};

struct IShellWindowsVtbl {
    HRESULT (* QueryInterface)(struct IShellWindows *, IID *, void * *);
    ULONG (* AddRef)(struct IShellWindows *);
    ULONG (* Release)(struct IShellWindows *);
    HRESULT (* GetTypeInfoCount)(struct IShellWindows *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellWindows *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellWindows *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellWindows *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct IShellWindows *, long *);
    HRESULT (* Item)(struct IShellWindows *, VARIANT, struct IDispatch * *);
    HRESULT (* _NewEnum)(struct IShellWindows *, struct IUnknown * *);
    HRESULT (* Register)(struct IShellWindows *, struct IDispatch *, long, int, long *);
    HRESULT (* RegisterPending)(struct IShellWindows *, long, VARIANT *, VARIANT *, int, long *);
    HRESULT (* Revoke)(struct IShellWindows *, long);
    HRESULT (* OnNavigate)(struct IShellWindows *, long, VARIANT *);
    HRESULT (* OnActivated)(struct IShellWindows *, long, VARIANT_BOOL);
    HRESULT (* FindWindowSW)(struct IShellWindows *, VARIANT *, VARIANT *, int, long *, int, struct IDispatch * *);
    HRESULT (* OnCreated)(struct IShellWindows *, long, struct IUnknown *);
    HRESULT (* ProcessAttachDetach)(struct IShellWindows *, VARIANT_BOOL);
};

typedef struct IWebBrowser IWebBrowser, *PIWebBrowser;

typedef struct IWebBrowserVtbl IWebBrowserVtbl, *PIWebBrowserVtbl;

struct IWebBrowser {
    struct IWebBrowserVtbl * lpVtbl;
};

struct IWebBrowserVtbl {
    HRESULT (* QueryInterface)(struct IWebBrowser *, IID *, void * *);
    ULONG (* AddRef)(struct IWebBrowser *);
    ULONG (* Release)(struct IWebBrowser *);
    HRESULT (* GetTypeInfoCount)(struct IWebBrowser *, UINT *);
    HRESULT (* GetTypeInfo)(struct IWebBrowser *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IWebBrowser *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IWebBrowser *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* GoBack)(struct IWebBrowser *);
    HRESULT (* GoForward)(struct IWebBrowser *);
    HRESULT (* GoHome)(struct IWebBrowser *);
    HRESULT (* GoSearch)(struct IWebBrowser *);
    HRESULT (* Navigate)(struct IWebBrowser *, BSTR, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* Refresh)(struct IWebBrowser *);
    HRESULT (* Refresh2)(struct IWebBrowser *, VARIANT *);
    HRESULT (* Stop)(struct IWebBrowser *);
    HRESULT (* get_Application)(struct IWebBrowser *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IWebBrowser *, struct IDispatch * *);
    HRESULT (* get_Container)(struct IWebBrowser *, struct IDispatch * *);
    HRESULT (* get_Document)(struct IWebBrowser *, struct IDispatch * *);
    HRESULT (* get_TopLevelContainer)(struct IWebBrowser *, VARIANT_BOOL *);
    HRESULT (* get_Type)(struct IWebBrowser *, BSTR *);
    HRESULT (* get_Left)(struct IWebBrowser *, long *);
    HRESULT (* put_Left)(struct IWebBrowser *, long);
    HRESULT (* get_Top)(struct IWebBrowser *, long *);
    HRESULT (* put_Top)(struct IWebBrowser *, long);
    HRESULT (* get_Width)(struct IWebBrowser *, long *);
    HRESULT (* put_Width)(struct IWebBrowser *, long);
    HRESULT (* get_Height)(struct IWebBrowser *, long *);
    HRESULT (* put_Height)(struct IWebBrowser *, long);
    HRESULT (* get_LocationName)(struct IWebBrowser *, BSTR *);
    HRESULT (* get_LocationURL)(struct IWebBrowser *, BSTR *);
    HRESULT (* get_Busy)(struct IWebBrowser *, VARIANT_BOOL *);
};

typedef struct IWebBrowser2 IWebBrowser2, *PIWebBrowser2;

typedef struct IWebBrowser2Vtbl IWebBrowser2Vtbl, *PIWebBrowser2Vtbl;

typedef enum tagREADYSTATE {
    READYSTATE_COMPLETE=4,
    READYSTATE_INTERACTIVE=3,
    READYSTATE_LOADED=2,
    READYSTATE_LOADING=1,
    READYSTATE_UNINITIALIZED=0
} tagREADYSTATE;

typedef enum tagREADYSTATE READYSTATE;

struct IWebBrowser2Vtbl {
    HRESULT (* QueryInterface)(struct IWebBrowser2 *, IID *, void * *);
    ULONG (* AddRef)(struct IWebBrowser2 *);
    ULONG (* Release)(struct IWebBrowser2 *);
    HRESULT (* GetTypeInfoCount)(struct IWebBrowser2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IWebBrowser2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IWebBrowser2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IWebBrowser2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* GoBack)(struct IWebBrowser2 *);
    HRESULT (* GoForward)(struct IWebBrowser2 *);
    HRESULT (* GoHome)(struct IWebBrowser2 *);
    HRESULT (* GoSearch)(struct IWebBrowser2 *);
    HRESULT (* Navigate)(struct IWebBrowser2 *, BSTR, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* Refresh)(struct IWebBrowser2 *);
    HRESULT (* Refresh2)(struct IWebBrowser2 *, VARIANT *);
    HRESULT (* Stop)(struct IWebBrowser2 *);
    HRESULT (* get_Application)(struct IWebBrowser2 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IWebBrowser2 *, struct IDispatch * *);
    HRESULT (* get_Container)(struct IWebBrowser2 *, struct IDispatch * *);
    HRESULT (* get_Document)(struct IWebBrowser2 *, struct IDispatch * *);
    HRESULT (* get_TopLevelContainer)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* get_Type)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* get_Left)(struct IWebBrowser2 *, long *);
    HRESULT (* put_Left)(struct IWebBrowser2 *, long);
    HRESULT (* get_Top)(struct IWebBrowser2 *, long *);
    HRESULT (* put_Top)(struct IWebBrowser2 *, long);
    HRESULT (* get_Width)(struct IWebBrowser2 *, long *);
    HRESULT (* put_Width)(struct IWebBrowser2 *, long);
    HRESULT (* get_Height)(struct IWebBrowser2 *, long *);
    HRESULT (* put_Height)(struct IWebBrowser2 *, long);
    HRESULT (* get_LocationName)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* get_LocationURL)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* get_Busy)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* Quit)(struct IWebBrowser2 *);
    HRESULT (* ClientToWindow)(struct IWebBrowser2 *, int *, int *);
    HRESULT (* PutProperty)(struct IWebBrowser2 *, BSTR, VARIANT);
    HRESULT (* GetProperty)(struct IWebBrowser2 *, BSTR, VARIANT *);
    HRESULT (* get_Name)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* get_HWND)(struct IWebBrowser2 *, SHANDLE_PTR *);
    HRESULT (* get_FullName)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* get_Path)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* get_Visible)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_Visible)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_StatusBar)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_StatusBar)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_StatusText)(struct IWebBrowser2 *, BSTR *);
    HRESULT (* put_StatusText)(struct IWebBrowser2 *, BSTR);
    HRESULT (* get_ToolBar)(struct IWebBrowser2 *, int *);
    HRESULT (* put_ToolBar)(struct IWebBrowser2 *, int);
    HRESULT (* get_MenuBar)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_MenuBar)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_FullScreen)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_FullScreen)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* Navigate2)(struct IWebBrowser2 *, VARIANT *, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* QueryStatusWB)(struct IWebBrowser2 *, enum OLECMDID, enum OLECMDF *);
    HRESULT (* ExecWB)(struct IWebBrowser2 *, enum OLECMDID, enum OLECMDEXECOPT, VARIANT *, VARIANT *);
    HRESULT (* ShowBrowserBar)(struct IWebBrowser2 *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* get_ReadyState)(struct IWebBrowser2 *, READYSTATE *);
    HRESULT (* get_Offline)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_Offline)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_Silent)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_Silent)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_RegisterAsBrowser)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_RegisterAsBrowser)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_RegisterAsDropTarget)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_RegisterAsDropTarget)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_TheaterMode)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_TheaterMode)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_AddressBar)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_AddressBar)(struct IWebBrowser2 *, VARIANT_BOOL);
    HRESULT (* get_Resizable)(struct IWebBrowser2 *, VARIANT_BOOL *);
    HRESULT (* put_Resizable)(struct IWebBrowser2 *, VARIANT_BOOL);
};

struct IWebBrowser2 {
    struct IWebBrowser2Vtbl * lpVtbl;
};

typedef struct IWebBrowserApp IWebBrowserApp, *PIWebBrowserApp;

typedef struct IWebBrowserAppVtbl IWebBrowserAppVtbl, *PIWebBrowserAppVtbl;

struct IWebBrowserAppVtbl {
    HRESULT (* QueryInterface)(struct IWebBrowserApp *, IID *, void * *);
    ULONG (* AddRef)(struct IWebBrowserApp *);
    ULONG (* Release)(struct IWebBrowserApp *);
    HRESULT (* GetTypeInfoCount)(struct IWebBrowserApp *, UINT *);
    HRESULT (* GetTypeInfo)(struct IWebBrowserApp *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IWebBrowserApp *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IWebBrowserApp *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* GoBack)(struct IWebBrowserApp *);
    HRESULT (* GoForward)(struct IWebBrowserApp *);
    HRESULT (* GoHome)(struct IWebBrowserApp *);
    HRESULT (* GoSearch)(struct IWebBrowserApp *);
    HRESULT (* Navigate)(struct IWebBrowserApp *, BSTR, VARIANT *, VARIANT *, VARIANT *, VARIANT *);
    HRESULT (* Refresh)(struct IWebBrowserApp *);
    HRESULT (* Refresh2)(struct IWebBrowserApp *, VARIANT *);
    HRESULT (* Stop)(struct IWebBrowserApp *);
    HRESULT (* get_Application)(struct IWebBrowserApp *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IWebBrowserApp *, struct IDispatch * *);
    HRESULT (* get_Container)(struct IWebBrowserApp *, struct IDispatch * *);
    HRESULT (* get_Document)(struct IWebBrowserApp *, struct IDispatch * *);
    HRESULT (* get_TopLevelContainer)(struct IWebBrowserApp *, VARIANT_BOOL *);
    HRESULT (* get_Type)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* get_Left)(struct IWebBrowserApp *, long *);
    HRESULT (* put_Left)(struct IWebBrowserApp *, long);
    HRESULT (* get_Top)(struct IWebBrowserApp *, long *);
    HRESULT (* put_Top)(struct IWebBrowserApp *, long);
    HRESULT (* get_Width)(struct IWebBrowserApp *, long *);
    HRESULT (* put_Width)(struct IWebBrowserApp *, long);
    HRESULT (* get_Height)(struct IWebBrowserApp *, long *);
    HRESULT (* put_Height)(struct IWebBrowserApp *, long);
    HRESULT (* get_LocationName)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* get_LocationURL)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* get_Busy)(struct IWebBrowserApp *, VARIANT_BOOL *);
    HRESULT (* Quit)(struct IWebBrowserApp *);
    HRESULT (* ClientToWindow)(struct IWebBrowserApp *, int *, int *);
    HRESULT (* PutProperty)(struct IWebBrowserApp *, BSTR, VARIANT);
    HRESULT (* GetProperty)(struct IWebBrowserApp *, BSTR, VARIANT *);
    HRESULT (* get_Name)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* get_HWND)(struct IWebBrowserApp *, SHANDLE_PTR *);
    HRESULT (* get_FullName)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* get_Path)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* get_Visible)(struct IWebBrowserApp *, VARIANT_BOOL *);
    HRESULT (* put_Visible)(struct IWebBrowserApp *, VARIANT_BOOL);
    HRESULT (* get_StatusBar)(struct IWebBrowserApp *, VARIANT_BOOL *);
    HRESULT (* put_StatusBar)(struct IWebBrowserApp *, VARIANT_BOOL);
    HRESULT (* get_StatusText)(struct IWebBrowserApp *, BSTR *);
    HRESULT (* put_StatusText)(struct IWebBrowserApp *, BSTR);
    HRESULT (* get_ToolBar)(struct IWebBrowserApp *, int *);
    HRESULT (* put_ToolBar)(struct IWebBrowserApp *, int);
    HRESULT (* get_MenuBar)(struct IWebBrowserApp *, VARIANT_BOOL *);
    HRESULT (* put_MenuBar)(struct IWebBrowserApp *, VARIANT_BOOL);
    HRESULT (* get_FullScreen)(struct IWebBrowserApp *, VARIANT_BOOL *);
    HRESULT (* put_FullScreen)(struct IWebBrowserApp *, VARIANT_BOOL);
};

struct IWebBrowserApp {
    struct IWebBrowserAppVtbl * lpVtbl;
};

typedef enum NewProcessCauseConstants {
    ProtectedModeRedirect=1
} NewProcessCauseConstants;

typedef enum RefreshConstants {
    REFRESH_COMPLETELY=3,
    REFRESH_IFEXPIRED=1,
    REFRESH_NORMAL=0
} RefreshConstants;

typedef enum SecureLockIconConstants {
    secureLockIconMixed=1,
    secureLockIconSecure128Bit=6,
    secureLockIconSecure40Bit=3,
    secureLockIconSecure56Bit=4,
    secureLockIconSecureFortezza=5,
    secureLockIconSecureUnknownBits=2,
    secureLockIconUnsecure=0
} SecureLockIconConstants;

typedef struct ShellBrowserWindow ShellBrowserWindow, *PShellBrowserWindow;

struct ShellBrowserWindow {
};

typedef struct ShellNameSpace ShellNameSpace, *PShellNameSpace;

struct ShellNameSpace {
};

typedef struct ShellUIHelper ShellUIHelper, *PShellUIHelper;

struct ShellUIHelper {
};

typedef enum ShellWindowFindWindowOptions {
    SWFO_COOKIEPASSED=4,
    SWFO_INCLUDEPENDING=2,
    SWFO_NEEDDISPATCH=1
} ShellWindowFindWindowOptions;

typedef struct ShellWindows ShellWindows, *PShellWindows;

struct ShellWindows {
};

typedef enum ShellWindowTypeConstants {
    SWC_3RDPARTY=2,
    SWC_BROWSER=1,
    SWC_CALLBACK=4,
    SWC_DESKTOP=8,
    SWC_EXPLORER=0
} ShellWindowTypeConstants;

typedef struct WebBrowser WebBrowser, *PWebBrowser;

struct WebBrowser {
};

typedef struct WebBrowser_V1 WebBrowser_V1, *PWebBrowser_V1;

struct WebBrowser_V1 {
};

#define _O_APPEND 8

#define _O_BINARY 32768

#define _O_CREAT 256

#define _O_EXCL 1024

#define _O_NOINHERIT 128

#define _O_OBTAIN_DIR 8192

#define _O_RANDOM 16

#define _O_RAW 32768

#define _O_RDONLY 0

#define _O_RDWR 2

#define _O_SEQUENTIAL 32

#define _O_SHORT_LIVED 4096

#define _O_TEMPORARY 64

#define _O_TEXT 16384

#define _O_TRUNC 512

#define _O_U16TEXT 131072

#define _O_U8TEXT 262144

#define _O_WRONLY 1

#define _O_WTEXT 65536

#define O_APPEND 8

#define O_BINARY 32768

#define O_CREAT 256

#define O_EXCL 1024

#define O_NOINHERIT 128

#define O_RANDOM 16

#define O_RAW 32768

#define O_RDONLY 0

#define O_RDWR 2

#define O_SEQUENTIAL 32

#define O_TEMPORARY 64

#define O_TEXT 16384

#define O_TRUNC 512

#define O_WRONLY 1

#define _IOCOMMIT 16384

#define _IOCTRLZ 8192

#define _IOFEOF 2048

#define _IOFLRTN 4096

#define _IOLOCKED 32768

#define _IOSETVBUF 1024

#define _IOYOURBUF 256

typedef enum tagCHUNK_BREAKTYPE {
    CHUNK_EOC=4,
    CHUNK_EOP=3,
    CHUNK_EOS=2,
    CHUNK_EOW=1,
    CHUNK_NO_BREAK=0
} tagCHUNK_BREAKTYPE;

typedef enum tagCHUNK_BREAKTYPE CHUNK_BREAKTYPE;

typedef enum tagCHUNKSTATE {
    CHUNK_FILTER_OWNED_VALUE=4,
    CHUNK_TEXT=1,
    CHUNK_VALUE=2
} tagCHUNKSTATE;

typedef enum tagCHUNKSTATE CHUNKSTATE;

typedef struct tagFILTERREGION tagFILTERREGION, *PtagFILTERREGION;

typedef struct tagFILTERREGION FILTERREGION;

struct tagFILTERREGION {
    ULONG idChunk;
    ULONG cwcStart;
    ULONG cwcExtent;
};

typedef struct tagFULLPROPSPEC tagFULLPROPSPEC, *PtagFULLPROPSPEC;

typedef struct tagFULLPROPSPEC FULLPROPSPEC;

typedef struct tagPROPSPEC tagPROPSPEC, *PtagPROPSPEC;

typedef struct tagPROPSPEC PROPSPEC;

typedef union _union_3074 _union_3074, *P_union_3074;

typedef ULONG PROPID;

union _union_3074 {
    PROPID propid;
    LPOLESTR lpwstr;
};

struct tagPROPSPEC {
    ULONG ulKind;
    union _union_3074 u;
};

struct tagFULLPROPSPEC {
    GUID guidPropSet;
    PROPSPEC psProperty;
};

typedef struct IFilter IFilter, *PIFilter;

typedef struct IFilterVtbl IFilterVtbl, *PIFilterVtbl;

typedef struct tagSTAT_CHUNK tagSTAT_CHUNK, *PtagSTAT_CHUNK;

typedef struct tagSTAT_CHUNK STAT_CHUNK;

struct tagSTAT_CHUNK {
    ULONG idChunk;
    CHUNK_BREAKTYPE breakType;
    CHUNKSTATE flags;
    LCID locale;
    FULLPROPSPEC attribute;
    ULONG idChunkSource;
    ULONG cwcStartSource;
    ULONG cwcLenSource;
};

struct IFilter {
    struct IFilterVtbl * lpVtbl;
};

struct IFilterVtbl {
    HRESULT (* QueryInterface)(struct IFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IFilter *);
    ULONG (* Release)(struct IFilter *);
    SCODE (* Init)(struct IFilter *, ULONG, ULONG, FULLPROPSPEC *, ULONG *);
    SCODE (* GetChunk)(struct IFilter *, STAT_CHUNK *);
    SCODE (* GetText)(struct IFilter *, ULONG *, WCHAR *);
    SCODE (* GetValue)(struct IFilter *, PROPVARIANT * *);
    SCODE (* BindRegion)(struct IFilter *, FILTERREGION, IID *, void * *);
};

typedef enum tagIFILTER_FLAGS {
    IFILTER_FLAGS_OLE_PROPERTIES=1
} tagIFILTER_FLAGS;

typedef enum tagIFILTER_FLAGS IFILTER_FLAGS;

typedef enum tagIFILTER_INIT {
    IFILTER_INIT_APPLY_CRAWL_ATTRIBUTES=256,
    IFILTER_INIT_APPLY_INDEX_ATTRIBUTES=16,
    IFILTER_INIT_APPLY_OTHER_ATTRIBUTES=32,
    IFILTER_INIT_CANON_HYPHENS=4,
    IFILTER_INIT_CANON_PARAGRAPHS=1,
    IFILTER_INIT_CANON_SPACES=8,
    IFILTER_INIT_DISABLE_EMBEDDED=2048,
    IFILTER_INIT_EMIT_FORMATTING=4096,
    IFILTER_INIT_FILTER_AGGRESSIVE_BREAK=1024,
    IFILTER_INIT_FILTER_OWNED_VALUE_OK=512,
    IFILTER_INIT_HARD_LINE_BREAKS=2,
    IFILTER_INIT_INDEXING_ONLY=64,
    IFILTER_INIT_SEARCH_LINKS=128
} tagIFILTER_INIT;

typedef enum tagIFILTER_INIT IFILTER_INIT;

typedef struct _FILTERED_DATA_SOURCES _FILTERED_DATA_SOURCES, *P_FILTERED_DATA_SOURCES;

struct _FILTERED_DATA_SOURCES {
    WCHAR * pwcsExtension;
    WCHAR * pwcsMime;
    CLSID * pClsid;
    WCHAR * pwcsOverride;
};

typedef struct _FILTERED_DATA_SOURCES FILTERED_DATA_SOURCES;

typedef struct ILoadFilter ILoadFilter, *PILoadFilter;

typedef struct ILoadFilterVtbl ILoadFilterVtbl, *PILoadFilterVtbl;

struct ILoadFilterVtbl {
    HRESULT (* QueryInterface)(struct ILoadFilter *, IID *, void * *);
    ULONG (* AddRef)(struct ILoadFilter *);
    ULONG (* Release)(struct ILoadFilter *);
    HRESULT (* LoadIFilter)(struct ILoadFilter *, LPCWSTR, FILTERED_DATA_SOURCES *, struct IUnknown *, BOOL, CLSID *, int *, WCHAR * *, struct IFilter * *);
    HRESULT (* LoadIFilterFromStorage)(struct ILoadFilter *, struct IStorage *, struct IUnknown *, LPCWSTR, BOOL, CLSID *, int *, WCHAR * *, struct IFilter * *);
    HRESULT (* LoadIFilterFromStream)(struct ILoadFilter *, struct IStream *, FILTERED_DATA_SOURCES *, struct IUnknown *, BOOL, CLSID *, int *, WCHAR * *, struct IFilter * *);
};

struct ILoadFilter {
    struct ILoadFilterVtbl * lpVtbl;
};

#define _CW_DEFAULT 589855

#define _DBL_RADIX 2

#define _DBL_ROUNDS 1

#define _DN_FLUSH 16777216

#define _DN_FLUSH_OPERANDS_SAVE_RESULTS 33554432

#define _DN_SAVE 0

#define _DN_SAVE_OPERANDS_FLUSH_RESULTS 50331648

#define _EM_AMBIGUIOUS 2147483648

#define _EM_AMBIGUOUS 2147483648

#define _EM_DENORMAL 524288

#define _EM_INEXACT 1

#define _EM_INVALID 16

#define _EM_OVERFLOW 4

#define _EM_UNDERFLOW 2

#define _EM_ZERODIVIDE 8

#define _FPCLASS_ND 16

#define _FPCLASS_NINF 4

#define _FPCLASS_NN 8

#define _FPCLASS_NZ 32

#define _FPCLASS_PD 128

#define _FPCLASS_PINF 512

#define _FPCLASS_PN 256

#define _FPCLASS_PZ 64

#define _FPCLASS_QNAN 2

#define _FPCLASS_SNAN 1

#define _FPE_DENORMAL 130

#define _FPE_EXPLICITGEN 140

#define _FPE_INEXACT 134

#define _FPE_INVALID 129

#define _FPE_MULTIPLE_FAULTS 142

#define _FPE_MULTIPLE_TRAPS 141

#define _FPE_OVERFLOW 132

#define _FPE_SQRTNEG 136

#define _FPE_STACKOVERFLOW 138

#define _FPE_STACKUNDERFLOW 139

#define _FPE_UNDERFLOW 133

#define _FPE_UNEMULATED 135

#define _FPE_ZERODIVIDE 131

#define _IC_AFFINE 262144

#define _IC_PROJECTIVE 0

#define _LDBL_RADIX 2

#define _LDBL_ROUNDS 1

#define _MCW_DN 50331648

#define _MCW_EM 524319

#define _MCW_IC 262144

#define _MCW_PC 196608

#define _MCW_RC 768

#define _PC_24 131072

#define _PC_53 65536

#define _PC_64 0

#define _RC_CHOP 768

#define _RC_DOWN 256

#define _RC_NEAR 0

#define _RC_UP 512

#define _SW_DENORMAL 524288

#define _SW_INEXACT 1

#define _SW_INVALID 16

#define _SW_OVERFLOW 4

#define _SW_SQRTNEG 128

#define _SW_STACKOVERFLOW 512

#define _SW_STACKUNDERFLOW 1024

#define _SW_UNDERFLOW 2

#define _SW_UNEMULATED 64

#define _SW_ZERODIVIDE 8

#define CW_DEFAULT 589855

#define DBL_DIG 15

#define DBL_MANT_DIG 53

#define DBL_MAX_10_EXP 308

#define DBL_MAX_EXP 1024

#define DBL_MIN_10_EXP -307

#define DBL_MIN_EXP -1021

#define DBL_RADIX 2

#define DBL_ROUNDS 1

#define EM_AMBIGUIOUS 2147483648

#define EM_AMBIGUOUS 2147483648

#define EM_DENORMAL 524288

#define EM_INEXACT 1

#define EM_INVALID 16

#define EM_OVERFLOW 4

#define EM_UNDERFLOW 2

#define EM_ZERODIVIDE 8

#define FLT_DIG 6

#define FLT_GUARD 0

#define FLT_MANT_DIG 24

#define FLT_MAX_10_EXP 38

#define FLT_MAX_EXP 128

#define FLT_MIN_10_EXP -37

#define FLT_MIN_EXP -125

#define FLT_NORMALIZE 0

#define FLT_RADIX 2

#define FLT_ROUNDS 1

#define FPE_DENORMAL 130

#define FPE_EXPLICITGEN 140

#define FPE_INEXACT 134

#define FPE_INVALID 129

#define FPE_OVERFLOW 132

#define FPE_SQRTNEG 136

#define FPE_STACKOVERFLOW 138

#define FPE_STACKUNDERFLOW 139

#define FPE_UNDERFLOW 133

#define FPE_UNEMULATED 135

#define FPE_ZERODIVIDE 131

#define IC_AFFINE 262144

#define IC_PROJECTIVE 0

#define LDBL_DIG 15

#define LDBL_MANT_DIG 53

#define LDBL_MAX_10_EXP 308

#define LDBL_MAX_EXP 1024

#define LDBL_MIN_10_EXP -307

#define LDBL_MIN_EXP -1021

#define LDBL_RADIX 2

#define LDBL_ROUNDS 1

#define MCW_EM 524319

#define MCW_IC 262144

#define MCW_PC 196608

#define MCW_RC 768

#define PC_24 131072

#define PC_53 65536

#define PC_64 0

#define RC_CHOP 768

#define RC_DOWN 256

#define RC_NEAR 0

#define RC_UP 512

#define SW_DENORMAL 524288

#define SW_INEXACT 1

#define SW_INVALID 16

#define SW_OVERFLOW 4

#define SW_SQRTNEG 128

#define SW_STACKOVERFLOW 512

#define SW_STACKUNDERFLOW 1024

#define SW_UNDERFLOW 2

#define SW_UNEMULATED 64

#define SW_ZERODIVIDE 8

#define BIAS_64 1023

#define SLD_NODIGITS 4

#define SLD_OVERFLOW 2

#define SLD_UNDERFLOW 1

typedef struct _flt _flt, *P_flt;

struct _flt {
    int flags;
    int nbytes;
    long lval;
    double dval;
};

typedef struct _strflt _strflt, *P_strflt;

struct _strflt {
    int sign;
    int decpt;
    int flag;
    char * mantissa;
};

typedef enum enum_3272 {
    INTRNCVT_OK=0,
    INTRNCVT_OVERFLOW=1,
    INTRNCVT_UNDERFLOW=2
} enum_3272;

typedef struct _flt * FLT;

typedef enum enum_3272 INTRNCVT_STATUS;

typedef struct _strflt * STRFLT;

typedef struct _BCD80 _BCD80, *P_BCD80;

struct _BCD80 {
    ushort W[5];
};

typedef struct _FP128 _FP128, *P_FP128;

struct _FP128 {
    ulong W[4];
};

typedef float _FP32;

typedef double _FP64;

typedef struct _FP80 _FP80, *P_FP80;

struct _FP80 {
    ushort W[5];
};

typedef enum enum_464 {
    _FpCodeAcos=13,
    _FpCodeAdd=1,
    _FpCodeAsin=14,
    _FpCodeAtan=15,
    _FpCodeAtan2=16,
    _FpCodeCabs=17,
    _FpCodeCeil=12,
    _FpCodeCompare=7,
    _FpCodeConvert=8,
    _FpCodeConvertTrunc=42,
    _FpCodeCos=18,
    _FpCodeCosh=19,
    _FpCodeDivide=4,
    _FpCodeExp=20,
    _FpCodeFabs=21,
    _FpCodeFloor=11,
    _FpCodeFmax=41,
    _FpCodeFmin=40,
    _FpCodeFmod=22,
    _FpCodeFrexp=23,
    _FpCodeHypot=24,
    _FpCodeLdexp=25,
    _FpCodeLog=26,
    _FpCodeLog10=27,
    _FpCodeLogb=37,
    _FpCodeModf=28,
    _FpCodeMultiply=3,
    _FpCodeNegate=39,
    _FpCodeNextafter=38,
    _FpCodePow=29,
    _FpCodeRemainder=6,
    _FpCodeRound=9,
    _FpCodeSin=30,
    _FpCodeSinh=31,
    _FpCodeSquareRoot=5,
    _FpCodeSubtract=2,
    _FpCodeTan=32,
    _FpCodeTanh=33,
    _FpCodeTruncate=10,
    _FpCodeUnspecified=0,
    _FpCodeY0=34,
    _FpCodeY1=35,
    _FpCodeYn=36,
    _XMMI2Addpd=73,
    _XMMI2Addsd=74,
    _XMMI2Addsubpd=104,
    _XMMI2Cmppd=87,
    _XMMI2Cmpsd=88,
    _XMMI2Comisd=89,
    _XMMI2Cvtdq2ps=99,
    _XMMI2Cvtpd2dq=103,
    _XMMI2Cvtpd2pi=91,
    _XMMI2Cvtpd2ps=97,
    _XMMI2Cvtps2dq=101,
    _XMMI2Cvtps2pd=95,
    _XMMI2Cvtsd2si=92,
    _XMMI2Cvtsd2ss=98,
    _XMMI2Cvtss2sd=96,
    _XMMI2Cvttpd2dq=102,
    _XMMI2Cvttpd2pi=93,
    _XMMI2Cvttps2dq=100,
    _XMMI2Cvttsd2si=94,
    _XMMI2Divpd=79,
    _XMMI2Divsd=80,
    _XMMI2Dppd=109,
    _XMMI2Haddpd=105,
    _XMMI2Hsubpd=106,
    _XMMI2Maxpd=83,
    _XMMI2Maxsd=84,
    _XMMI2Minpd=85,
    _XMMI2Minsd=86,
    _XMMI2Mulpd=77,
    _XMMI2Mulsd=78,
    _XMMI2Roundpd=107,
    _XMMI2Roundsd=108,
    _XMMI2Sqrtpd=81,
    _XMMI2Sqrtsd=82,
    _XMMI2Subpd=75,
    _XMMI2Subsd=76,
    _XMMI2UComisd=90,
    _XMMIAddps=43,
    _XMMIAddss=44,
    _XMMIAddsubps=67,
    _XMMICmpps=57,
    _XMMICmpss=58,
    _XMMIComiss=59,
    _XMMICvtpi2ps=61,
    _XMMICvtps2pi=63,
    _XMMICvtsi2ss=62,
    _XMMICvtss2si=64,
    _XMMICvttps2pi=65,
    _XMMICvttss2si=66,
    _XMMIDivps=49,
    _XMMIDivss=50,
    _XMMIDpps=72,
    _XMMIHaddps=68,
    _XMMIHsubps=69,
    _XMMIMaxps=53,
    _XMMIMaxss=54,
    _XMMIMinps=55,
    _XMMIMinss=56,
    _XMMIMulps=47,
    _XMMIMulss=48,
    _XMMIRoundps=70,
    _XMMIRoundss=71,
    _XMMISqrtps=51,
    _XMMISqrtss=52,
    _XMMISubps=45,
    _XMMISubss=46,
    _XMMIUComiss=60
} enum_464;

typedef enum enum_464 _FP_OPERATION_CODE;

typedef enum enum_462 {
    _FpCompareEqual=0,
    _FpCompareGreater=1,
    _FpCompareLess=2,
    _FpCompareUnordered=3
} enum_462;

typedef enum enum_462 _FPIEEE_COMPARE_RESULT;

typedef struct _FPIEEE_EXCEPTION_FLAGS _FPIEEE_EXCEPTION_FLAGS, *P_FPIEEE_EXCEPTION_FLAGS;

typedef union anon__struct_476_bitfield_1 anon__struct_476_bitfield_1, *Panon__struct_476_bitfield_1;

union anon__struct_476_bitfield_1 {
    uint Inexact:1; /* : bits 0 */
    uint Underflow:1; /* : bits 1 */
    uint Overflow:1; /* : bits 2 */
    uint ZeroDivide:1; /* : bits 3 */
    uint InvalidOperation:1; /* : bits 4 */
};

struct _FPIEEE_EXCEPTION_FLAGS {
    union anon__struct_476_bitfield_1 field_0x0;
};

typedef enum enum_463 {
    _FpFormatBcd80=10,
    _FpFormatCompare=11,
    _FpFormatFp128=3,
    _FpFormatFp32=0,
    _FpFormatFp64=1,
    _FpFormatFp80=2,
    _FpFormatI16=4,
    _FpFormatI32=5,
    _FpFormatI64=6,
    _FpFormatString=12,
    _FpFormatU16=7,
    _FpFormatU32=8,
    _FpFormatU64=9
} enum_463;

typedef enum enum_463 _FPIEEE_FORMAT;

typedef enum enum_466 {
    _FpPrecision24=2,
    _FpPrecision53=1,
    _FpPrecisionFull=0
} enum_466;

typedef enum enum_466 _FPIEEE_PRECISION;

typedef struct _FPIEEE_RECORD _FPIEEE_RECORD, *P_FPIEEE_RECORD;

typedef union anon__struct_477_bitfield_1 anon__struct_477_bitfield_1, *Panon__struct_477_bitfield_1;

typedef struct _FPIEEE_VALUE _FPIEEE_VALUE, *P_FPIEEE_VALUE;

typedef union _union_475 _union_475, *P_union_475;

typedef union anon__struct_474_bitfield_1 anon__struct_474_bitfield_1, *Panon__struct_474_bitfield_1;

typedef short _I16;

typedef int _I32;

typedef struct _I64 _I64, *P_I64;

typedef ushort _U16;

typedef uint _U32;

typedef struct _U64 _U64, *P_U64;

typedef struct _U32ARRAY _U32ARRAY, *P_U32ARRAY;

typedef longlong _Q64;

typedef struct _FPQ64 _FPQ64, *P_FPQ64;

struct _FPQ64 {
    _Q64 W[2];
};

union anon__struct_477_bitfield_1 {
    uint RoundingMode:2; /* : bits 0-1 */
    uint Precision:3; /* : bits 2-4 */
    uint Operation:12; /* : bits 5-16 */
};

struct _I64 {
    ulong W[2];
};

struct _U32ARRAY {
    ulong W[4];
};

struct _U64 {
    ulong W[2];
};

union _union_475 {
    _FP32 Fp32Value;
    _FP64 Fp64Value;
    struct _FP80 Fp80Value;
    struct _FP128 Fp128Value;
    _I16 I16Value;
    _I32 I32Value;
    struct _I64 I64Value;
    _U16 U16Value;
    _U32 U32Value;
    struct _U64 U64Value;
    struct _BCD80 Bcd80Value;
    char * StringValue;
    int CompareValue;
    struct _U32ARRAY U32ArrayValue;
    _Q64 Q64Value;
    struct _FPQ64 Fpq64Value;
};

union anon__struct_474_bitfield_1 {
    uint OperandValid:1; /* : bits 0 */
    uint Format:4; /* : bits 1-4 */
};

struct _FPIEEE_VALUE {
    union _union_475 Value;
    union anon__struct_474_bitfield_1 field_0x10;
};

struct _FPIEEE_RECORD {
    union anon__struct_477_bitfield_1 field_0x0;
    struct _FPIEEE_EXCEPTION_FLAGS Cause;
    struct _FPIEEE_EXCEPTION_FLAGS Enable;
    struct _FPIEEE_EXCEPTION_FLAGS Status;
    struct _FPIEEE_VALUE Operand1;
    struct _FPIEEE_VALUE Operand2;
    struct _FPIEEE_VALUE Result;
};

typedef enum enum_465 {
    _FpRoundChopped=3,
    _FpRoundMinusInfinity=1,
    _FpRoundNearest=0,
    _FpRoundPlusInfinity=2
} enum_465;

typedef enum enum_465 _FPIEEE_ROUNDING_MODE;

typedef struct _FPIEEE_RECORD * _PFPIEEE_RECORD;

#define FD_LONGHORN 1

typedef ULONGLONG DWORDLONG;

typedef DWORDLONG FDQUERYCONTEXT;

typedef struct IFunctionDiscovery IFunctionDiscovery, *PIFunctionDiscovery;

typedef struct IFunctionDiscoveryVtbl IFunctionDiscoveryVtbl, *PIFunctionDiscoveryVtbl;

typedef struct IFunctionInstanceCollection IFunctionInstanceCollection, *PIFunctionInstanceCollection;

typedef struct IFunctionInstance IFunctionInstance, *PIFunctionInstance;

typedef struct IFunctionDiscoveryNotification IFunctionDiscoveryNotification, *PIFunctionDiscoveryNotification;

typedef struct IFunctionInstanceCollectionQuery IFunctionInstanceCollectionQuery, *PIFunctionInstanceCollectionQuery;

typedef struct IFunctionInstanceQuery IFunctionInstanceQuery, *PIFunctionInstanceQuery;

typedef enum tagSystemVisibilityFlags {
    SVF_SYSTEM=0,
    SVF_USER=1
} tagSystemVisibilityFlags;

typedef enum tagSystemVisibilityFlags SystemVisibilityFlags;

typedef struct IFunctionInstanceCollectionVtbl IFunctionInstanceCollectionVtbl, *PIFunctionInstanceCollectionVtbl;

typedef struct IFunctionInstanceVtbl IFunctionInstanceVtbl, *PIFunctionInstanceVtbl;

typedef struct IFunctionDiscoveryNotificationVtbl IFunctionDiscoveryNotificationVtbl, *PIFunctionDiscoveryNotificationVtbl;

typedef enum tagQueryUpdateAction {
    QUA_ADD=0,
    QUA_CHANGE=2,
    QUA_REMOVE=1
} tagQueryUpdateAction;

typedef enum tagQueryUpdateAction QueryUpdateAction;

typedef struct IFunctionInstanceCollectionQueryVtbl IFunctionInstanceCollectionQueryVtbl, *PIFunctionInstanceCollectionQueryVtbl;

typedef enum tagPropertyConstraint {
    QC_CONTAINS=9,
    QC_DOESNOTEXIST=8,
    QC_EQUALS=0,
    QC_EXISTS=7,
    QC_GREATERTHAN=4,
    QC_GREATERTHANOREQUAL=5,
    QC_LESSTHAN=2,
    QC_LESSTHANOREQUAL=3,
    QC_NOTEQUAL=1,
    QC_STARTSWITH=6
} tagPropertyConstraint;

typedef enum tagPropertyConstraint PropertyConstraint;

typedef struct IFunctionInstanceQueryVtbl IFunctionInstanceQueryVtbl, *PIFunctionInstanceQueryVtbl;

struct IFunctionDiscovery {
    struct IFunctionDiscoveryVtbl * lpVtbl;
};

struct IFunctionInstanceCollectionVtbl {
    HRESULT (* QueryInterface)(struct IFunctionInstanceCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IFunctionInstanceCollection *);
    ULONG (* Release)(struct IFunctionInstanceCollection *);
    HRESULT (* GetCount)(struct IFunctionInstanceCollection *, DWORD *);
    HRESULT (* Get)(struct IFunctionInstanceCollection *, WCHAR *, DWORD *, struct IFunctionInstance * *);
    HRESULT (* Item)(struct IFunctionInstanceCollection *, DWORD, struct IFunctionInstance * *);
    HRESULT (* Add)(struct IFunctionInstanceCollection *, struct IFunctionInstance *);
    HRESULT (* Remove)(struct IFunctionInstanceCollection *, DWORD, struct IFunctionInstance * *);
    HRESULT (* Delete)(struct IFunctionInstanceCollection *, DWORD);
    HRESULT (* DeleteAll)(struct IFunctionInstanceCollection *);
};

struct IFunctionInstanceQuery {
    struct IFunctionInstanceQueryVtbl * lpVtbl;
};

struct IFunctionInstanceVtbl {
    HRESULT (* QueryInterface)(struct IFunctionInstance *, IID *, void * *);
    ULONG (* AddRef)(struct IFunctionInstance *);
    ULONG (* Release)(struct IFunctionInstance *);
    HRESULT (* QueryService)(struct IFunctionInstance *, GUID *, IID *, void * *);
    HRESULT (* GetID)(struct IFunctionInstance *, WCHAR * *);
    HRESULT (* GetProviderInstanceID)(struct IFunctionInstance *, WCHAR * *);
    HRESULT (* OpenPropertyStore)(struct IFunctionInstance *, DWORD, struct IPropertyStore * *);
    HRESULT (* GetCategory)(struct IFunctionInstance *, WCHAR * *, WCHAR * *);
};

struct IFunctionDiscoveryNotification {
    struct IFunctionDiscoveryNotificationVtbl * lpVtbl;
};

struct IFunctionInstanceQueryVtbl {
    HRESULT (* QueryInterface)(struct IFunctionInstanceQuery *, IID *, void * *);
    ULONG (* AddRef)(struct IFunctionInstanceQuery *);
    ULONG (* Release)(struct IFunctionInstanceQuery *);
    HRESULT (* Execute)(struct IFunctionInstanceQuery *, struct IFunctionInstance * *);
};

struct IFunctionInstanceCollectionQuery {
    struct IFunctionInstanceCollectionQueryVtbl * lpVtbl;
};

struct IFunctionDiscoveryVtbl {
    HRESULT (* QueryInterface)(struct IFunctionDiscovery *, IID *, void * *);
    ULONG (* AddRef)(struct IFunctionDiscovery *);
    ULONG (* Release)(struct IFunctionDiscovery *);
    HRESULT (* GetInstanceCollection)(struct IFunctionDiscovery *, WCHAR *, WCHAR *, BOOL, struct IFunctionInstanceCollection * *);
    HRESULT (* GetInstance)(struct IFunctionDiscovery *, WCHAR *, struct IFunctionInstance * *);
    HRESULT (* CreateInstanceCollectionQuery)(struct IFunctionDiscovery *, WCHAR *, WCHAR *, BOOL, struct IFunctionDiscoveryNotification *, FDQUERYCONTEXT *, struct IFunctionInstanceCollectionQuery * *);
    HRESULT (* CreateInstanceQuery)(struct IFunctionDiscovery *, WCHAR *, struct IFunctionDiscoveryNotification *, FDQUERYCONTEXT *, struct IFunctionInstanceQuery * *);
    HRESULT (* AddInstance)(struct IFunctionDiscovery *, SystemVisibilityFlags, WCHAR *, WCHAR *, WCHAR *, struct IFunctionInstance * *);
    HRESULT (* RemoveInstance)(struct IFunctionDiscovery *, SystemVisibilityFlags, WCHAR *, WCHAR *, WCHAR *);
};

struct IFunctionDiscoveryNotificationVtbl {
    HRESULT (* QueryInterface)(struct IFunctionDiscoveryNotification *, IID *, void * *);
    ULONG (* AddRef)(struct IFunctionDiscoveryNotification *);
    ULONG (* Release)(struct IFunctionDiscoveryNotification *);
    HRESULT (* OnUpdate)(struct IFunctionDiscoveryNotification *, QueryUpdateAction, FDQUERYCONTEXT, struct IFunctionInstance *);
    HRESULT (* OnError)(struct IFunctionDiscoveryNotification *, HRESULT, FDQUERYCONTEXT, WCHAR *);
    HRESULT (* OnEvent)(struct IFunctionDiscoveryNotification *, DWORD, FDQUERYCONTEXT, WCHAR *);
};

struct IFunctionInstanceCollectionQueryVtbl {
    HRESULT (* QueryInterface)(struct IFunctionInstanceCollectionQuery *, IID *, void * *);
    ULONG (* AddRef)(struct IFunctionInstanceCollectionQuery *);
    ULONG (* Release)(struct IFunctionInstanceCollectionQuery *);
    HRESULT (* AddQueryConstraint)(struct IFunctionInstanceCollectionQuery *, WCHAR *, WCHAR *);
    HRESULT (* AddPropertyConstraint)(struct IFunctionInstanceCollectionQuery *, PROPERTYKEY *, PROPVARIANT *, PropertyConstraint);
    HRESULT (* Execute)(struct IFunctionInstanceCollectionQuery *, struct IFunctionInstanceCollection * *);
};

struct IFunctionInstanceCollection {
    struct IFunctionInstanceCollectionVtbl * lpVtbl;
};

struct IFunctionInstance {
    struct IFunctionInstanceVtbl * lpVtbl;
};

typedef struct IFunctionDiscoveryProviderRefresh IFunctionDiscoveryProviderRefresh, *PIFunctionDiscoveryProviderRefresh;

struct IFunctionDiscoveryProviderRefresh {
};

typedef struct IFunctionInstanceCollectionQuery2 IFunctionInstanceCollectionQuery2, *PIFunctionInstanceCollectionQuery2;

struct IFunctionInstanceCollectionQuery2 {
};

typedef struct IFunctionInstanceCollectionQueryCollection IFunctionInstanceCollectionQueryCollection, *PIFunctionInstanceCollectionQueryCollection;

struct IFunctionInstanceCollectionQueryCollection {
};

typedef struct IFunctionInstanceQuery2 IFunctionInstanceQuery2, *PIFunctionInstanceQuery2;

struct IFunctionInstanceQuery2 {
};

typedef struct IPropertyStoreCollection IPropertyStoreCollection, *PIPropertyStoreCollection;

typedef struct IPropertyStoreCollectionVtbl IPropertyStoreCollectionVtbl, *PIPropertyStoreCollectionVtbl;

struct IPropertyStoreCollection {
    struct IPropertyStoreCollectionVtbl * lpVtbl;
};

struct IPropertyStoreCollectionVtbl {
    HRESULT (* QueryInterface)(struct IPropertyStoreCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyStoreCollection *);
    ULONG (* Release)(struct IPropertyStoreCollection *);
    HRESULT (* GetCount)(struct IPropertyStoreCollection *, LPDWORD);
    HRESULT (* Get)(struct IPropertyStoreCollection *, WCHAR *, LPDWORD, struct IPropertyStore * *);
    HRESULT (* Item)(struct IPropertyStoreCollection *, DWORD, struct IPropertyStore * *);
    HRESULT (* Add)(struct IPropertyStoreCollection *, struct IPropertyStore *);
    HRESULT (* Remove)(struct IPropertyStoreCollection *, DWORD, struct IPropertyStore * *);
    HRESULT (* Delete)(struct IPropertyStoreCollection *, DWORD);
    HRESULT (* DeleteAll)(struct IPropertyStoreCollection *);
};

typedef enum tagQueryCategoryType {
    QCT_LAYERED=1,
    QCT_PROVIDER=0
} tagQueryCategoryType;

typedef enum tagQueryCategoryType QueryCategoryType;

#define MAX_FDCONSTRAINTNAME_LENGTH 100

#define MAX_FDCONSTRAINTVALUE_LENGTH 1000

#define E_FDPAIRING_AUTHFAILURE 2412773379

#define E_FDPAIRING_AUTHNOTALLOWED 2412773382

#define E_FDPAIRING_CONNECTTIMEOUT 2412773380

#define E_FDPAIRING_HWFAILURE 2412773378

#define E_FDPAIRING_IPBUSDISABLED 2412773383

#define E_FDPAIRING_NOCONNECTION 2412773377

#define E_FDPAIRING_NOPROFILES 2412773384

#define E_FDPAIRING_TOOMANYCONNECTIONS 2412773381

#define FD_Visibility_Default 0

#define FD_Visibility_Hidden 1

#define PNPX_INSTALLSTATE_FAILED 3

#define PNPX_INSTALLSTATE_INSTALLED 1

#define PNPX_INSTALLSTATE_INSTALLING 2

#define PNPX_INSTALLSTATE_NOTINSTALLED 0

#define FD_EVENTID 1000

#define FD_EVENTID_ASYNCTHREADEXIT 1001

#define FD_EVENTID_IPADDRESSCHANGE 1003

#define FD_EVENTID_PRIVATE 100

#define FD_EVENTID_QUERYREFRESH 1004

#define FD_EVENTID_SEARCHCOMPLETE 1000

#define FD_EVENTID_SEARCHSTART 1002

typedef struct _GUID _GUID, *P_GUID;

struct _GUID {
    ulong Data1;
    ushort Data2;
    ushort Data3;
    uchar Data4[8];
};

typedef GUID FMTID;

typedef CLSID * LPCLSID;

typedef FMTID * LPFMTID;

typedef GUID * LPGUID;

typedef IID * LPIID;

typedef struct _IELAUNCHURLINFO _IELAUNCHURLINFO, *P_IELAUNCHURLINFO;

struct _IELAUNCHURLINFO {
    DWORD cbSize;
    DWORD dwCreationFlags;
    DWORD dwLaunchOptionFlags;
};

typedef enum enum_5847 {
    IELAUNCHOPTION_SCRIPTDEBUG=1
} enum_5847;

typedef enum enum_5847 IELAUNCHOPTION_FLAGS;

typedef struct _IELAUNCHURLINFO IELAUNCHURLINFO;

typedef struct _IELAUNCHURLINFO * LPIELAUNCHURLINFO;

#define IF_MAX_PHYS_ADDRESS_LENGTH 32

#define IF_MAX_STRING_SIZE 256

#define IFI_UNSPECIFIED 0

#define NET_IF_COMPARTMENT_ID_PRIMARY 1

#define NET_IF_COMPARTMENT_ID_UNSPECIFIED 0

#define NET_IF_LINK_SPEED_UNKNOWN -1

#define NET_IF_OID_COMPARTMENT_ID 2

#define NET_IF_OID_IF_ALIAS 1

#define NET_IF_OID_IF_ENTRY 4

#define NET_IF_OID_NETWORK_GUID 3

#define NET_IF_OPER_STATUS_DORMANT_LOW_POWER 8

#define NET_IF_OPER_STATUS_DORMANT_PAUSED 4

#define NET_IF_OPER_STATUS_DOWN_NOT_AUTHENTICATED 1

#define NET_IF_OPER_STATUS_DOWN_NOT_MEDIA_CONNECTED 2

#define NET_IFINDEX_UNSPECIFIED 0

#define NET_IFLUID_UNSPECIFIED 0

#define NET_SITEID_MAXSYSTEM 268435455

#define NET_SITEID_MAXUSER 134217727

#define NET_SITEID_UNSPECIFIED 0

#define NIIF_BUS_NUMBER_UNKNOWN -1

#define NIIF_FILTER_INTERFACE 2

#define NIIF_FUNCTION_NUMBER_UNKNOWN -1

#define NIIF_HARDWARE_INTERFACE 1

#define NIIF_NDIS_ENDPOINT_INTERFACE 64

#define NIIF_NDIS_ISCSI_INTERFACE 128

#define NIIF_NDIS_RESERVED1 4

#define NIIF_NDIS_RESERVED2 8

#define NIIF_NDIS_RESERVED3 16

#define NIIF_NDIS_WDM_INTERFACE 32

#define NIIF_SLOT_NUMBER_UNKNOWN -1

#define NIIF_WAN_TUNNEL_TYPE_UNKNOWN -1

typedef enum _IF_ADMINISTRATIVE_STATE {
    IF_ADMINISTRATIVE_DEMANDDIAL=2,
    IF_ADMINISTRATIVE_DISABLED=0,
    IF_ADMINISTRATIVE_ENABLED=1
} _IF_ADMINISTRATIVE_STATE;

typedef struct _IF_COUNTED_STRING_LH _IF_COUNTED_STRING_LH, *P_IF_COUNTED_STRING_LH;

struct _IF_COUNTED_STRING_LH {
    USHORT Length;
    WCHAR String[257];
};

typedef struct _IF_PHYSICAL_ADDRESS_LH _IF_PHYSICAL_ADDRESS_LH, *P_IF_PHYSICAL_ADDRESS_LH;

struct _IF_PHYSICAL_ADDRESS_LH {
    USHORT Length;
    UCHAR Address[32];
};

typedef struct _NDIS_INTERFACE_INFORMATION _NDIS_INTERFACE_INFORMATION, *P_NDIS_INTERFACE_INFORMATION;

typedef enum _NET_IF_OPER_STATUS {
    NET_IF_OPER_STATUS_DORMANT=5,
    NET_IF_OPER_STATUS_DOWN=2,
    NET_IF_OPER_STATUS_LOWER_LAYER_DOWN=7,
    NET_IF_OPER_STATUS_NOT_PRESENT=6,
    NET_IF_OPER_STATUS_TESTING=3,
    NET_IF_OPER_STATUS_UNKNOWN=4,
    NET_IF_OPER_STATUS_UP=1
} _NET_IF_OPER_STATUS;

typedef enum _NET_IF_OPER_STATUS NET_IF_OPER_STATUS;

typedef enum _NET_IF_MEDIA_CONNECT_STATE {
    MediaConnectStateConnected=1,
    MediaConnectStateDisconnected=2,
    MediaConnectStateUnknown=0
} _NET_IF_MEDIA_CONNECT_STATE;

typedef enum _NET_IF_MEDIA_CONNECT_STATE NET_IF_MEDIA_CONNECT_STATE;

typedef enum _NET_IF_MEDIA_DUPLEX_STATE {
    MediaDuplexStateFull=2,
    MediaDuplexStateHalf=1,
    MediaDuplexStateUnknown=0
} _NET_IF_MEDIA_DUPLEX_STATE;

typedef enum _NET_IF_MEDIA_DUPLEX_STATE NET_IF_MEDIA_DUPLEX_STATE;

typedef UINT32 NET_IF_COMPARTMENT_ID;

struct _NDIS_INTERFACE_INFORMATION {
    NET_IF_OPER_STATUS ifOperStatus;
    ULONG ifOperStatusFlags;
    NET_IF_MEDIA_CONNECT_STATE MediaConnectState;
    NET_IF_MEDIA_DUPLEX_STATE MediaDuplexState;
    ULONG ifMtu;
    BOOLEAN ifPromiscuousMode;
    BOOLEAN ifDeviceWakeUpEnable;
    ULONG64 XmitLinkSpeed;
    ULONG64 RcvLinkSpeed;
    ULONG64 ifLastChange;
    ULONG64 ifCounterDiscontinuityTime;
    ULONG64 ifInUnknownProtos;
    ULONG64 ifInDiscards;
    ULONG64 ifInErrors;
    ULONG64 ifHCInOctets;
    ULONG64 ifHCInUcastPkts;
    ULONG64 ifHCInMulticastPkts;
    ULONG64 ifHCInBroadcastPkts;
    ULONG64 ifHCOutOctets;
    ULONG64 ifHCOutUcastPkts;
    ULONG64 ifHCOutMulticastPkts;
    ULONG64 ifHCOutBroadcastPkts;
    ULONG64 ifOutErrors;
    ULONG64 ifOutDiscards;
    ULONG64 ifHCInUcastOctets;
    ULONG64 ifHCInMulticastOctets;
    ULONG64 ifHCInBroadcastOctets;
    ULONG64 ifHCOutUcastOctets;
    ULONG64 ifHCOutMulticastOctets;
    ULONG64 ifHCOutBroadcastOctets;
    NET_IF_COMPARTMENT_ID CompartmentId;
    ULONG SupportedStatistics;
};

typedef enum _NET_IF_ACCESS_TYPE {
    NET_IF_ACCESS_BROADCAST=2,
    NET_IF_ACCESS_LOOPBACK=1,
    NET_IF_ACCESS_MAXIMUM=5,
    NET_IF_ACCESS_POINT_TO_MULTI_POINT=4,
    NET_IF_ACCESS_POINT_TO_POINT=3
} _NET_IF_ACCESS_TYPE;

typedef enum _NET_IF_ADMIN_STATUS {
    NET_IF_ADMIN_STATUS_DOWN=2,
    NET_IF_ADMIN_STATUS_TESTING=3,
    NET_IF_ADMIN_STATUS_UP=1
} _NET_IF_ADMIN_STATUS;

typedef struct _NET_IF_ALIAS_LH _NET_IF_ALIAS_LH, *P_NET_IF_ALIAS_LH;

struct _NET_IF_ALIAS_LH {
    USHORT ifAliasLength;
    USHORT ifAliasOffset;
};

typedef enum _NET_IF_CONNECTION_TYPE {
    NET_IF_CONNECTION_DEDICATED=1,
    NET_IF_CONNECTION_DEMAND=3,
    NET_IF_CONNECTION_MAXIMUM=4,
    NET_IF_CONNECTION_PASSIVE=2
} _NET_IF_CONNECTION_TYPE;

typedef enum _NET_IF_DIRECTION_TYPE {
    NET_IF_DIRECTION_MAXIMUM=3,
    NET_IF_DIRECTION_RECEIVEONLY=2,
    NET_IF_DIRECTION_SENDONLY=1,
    NET_IF_DIRECTION_SENDRECEIVE=0
} _NET_IF_DIRECTION_TYPE;

typedef struct _NET_IF_RCV_ADDRESS_LH _NET_IF_RCV_ADDRESS_LH, *P_NET_IF_RCV_ADDRESS_LH;

typedef enum _NET_IF_RCV_ADDRESS_TYPE {
    NET_IF_RCV_ADDRESS_TYPE_NON_VOLATILE=3,
    NET_IF_RCV_ADDRESS_TYPE_OTHER=1,
    NET_IF_RCV_ADDRESS_TYPE_VOLATILE=2
} _NET_IF_RCV_ADDRESS_TYPE;

typedef enum _NET_IF_RCV_ADDRESS_TYPE NET_IF_RCV_ADDRESS_TYPE;

struct _NET_IF_RCV_ADDRESS_LH {
    NET_IF_RCV_ADDRESS_TYPE ifRcvAddressType;
    USHORT ifRcvAddressLength;
    USHORT ifRcvAddressOffset;
};

typedef union _NET_LUID_LH _NET_LUID_LH, *P_NET_LUID_LH;

typedef struct _struct_6639 _struct_6639, *P_struct_6639;

typedef union anon__struct_6639_bitfield_1 anon__struct_6639_bitfield_1, *Panon__struct_6639_bitfield_1;

union anon__struct_6639_bitfield_1 {
    ULONG64 Reserved:24; /* : bits 0-23 */
    ULONG64 NetLuidIndex:24; /* : bits 24-47 */
    ULONG64 IfType:16; /* : bits 48-63 */
};

struct _struct_6639 {
    union anon__struct_6639_bitfield_1 field_0x0;
};

union _NET_LUID_LH {
    ULONG64 Value;
    struct _struct_6639 Info;
};

typedef struct _NET_PHYSICAL_LOCATION_LH _NET_PHYSICAL_LOCATION_LH, *P_NET_PHYSICAL_LOCATION_LH;

struct _NET_PHYSICAL_LOCATION_LH {
    ULONG BusNumber;
    ULONG SlotNumber;
    ULONG FunctionNumber;
};

typedef enum enum_6643 {
    TUNNEL_TYPE_6TO4=11,
    TUNNEL_TYPE_DIRECT=2,
    TUNNEL_TYPE_IPHTTPS=15,
    TUNNEL_TYPE_ISATAP=13,
    TUNNEL_TYPE_NONE=0,
    TUNNEL_TYPE_OTHER=1,
    TUNNEL_TYPE_TEREDO=14
} enum_6643;

typedef enum enum_6644 {
    IfOperStatusDormant=5,
    IfOperStatusDown=2,
    IfOperStatusLowerLayerDown=7,
    IfOperStatusNotPresent=6,
    IfOperStatusTesting=3,
    IfOperStatusUnknown=4,
    IfOperStatusUp=1
} enum_6644;

typedef enum _IF_ADMINISTRATIVE_STATE IF_ADMINISTRATIVE_STATE;

typedef struct _IF_COUNTED_STRING_LH IF_COUNTED_STRING_LH;

typedef ULONG NET_IFINDEX;

typedef NET_IFINDEX IF_INDEX;

typedef union _NET_LUID_LH NET_LUID_LH;

typedef NET_LUID_LH NET_LUID;

typedef NET_LUID IF_LUID;

typedef enum enum_6644 IF_OPER_STATUS;

typedef struct _IF_PHYSICAL_ADDRESS_LH IF_PHYSICAL_ADDRESS_LH;

typedef struct _NDIS_INTERFACE_INFORMATION NDIS_INTERFACE_INFORMATION;

typedef enum _NET_IF_ACCESS_TYPE NET_IF_ACCESS_TYPE;

typedef enum _NET_IF_ADMIN_STATUS NET_IF_ADMIN_STATUS;

typedef struct _NET_IF_ALIAS_LH NET_IF_ALIAS_LH;

typedef enum _NET_IF_CONNECTION_TYPE NET_IF_CONNECTION_TYPE;

typedef enum _NET_IF_DIRECTION_TYPE NET_IF_DIRECTION_TYPE;

typedef GUID NET_IF_NETWORK_GUID;

typedef ULONG32 NET_IF_OBJECT_ID;

typedef struct _NET_IF_RCV_ADDRESS_LH NET_IF_RCV_ADDRESS_LH;

typedef UINT16 NET_IFTYPE;

typedef struct _NET_PHYSICAL_LOCATION_LH NET_PHYSICAL_LOCATION_LH;

typedef enum _IF_ADMINISTRATIVE_STATE * PIF_ADMINISTRATIVE_STATE;

typedef struct _IF_COUNTED_STRING_LH * PIF_COUNTED_STRING_LH;

typedef NET_IFINDEX * PIF_INDEX;

typedef NET_LUID * PIF_LUID;

typedef struct _IF_PHYSICAL_ADDRESS_LH * PIF_PHYSICAL_ADDRESS_LH;

typedef struct _NDIS_INTERFACE_INFORMATION * PNDIS_INTERFACE_INFORMATION;

typedef enum _NET_IF_ACCESS_TYPE * PNET_IF_ACCESS_TYPE;

typedef enum _NET_IF_ADMIN_STATUS * PNET_IF_ADMIN_STATUS;

typedef struct _NET_IF_ALIAS_LH * PNET_IF_ALIAS_LH;

typedef UINT32 * PNET_IF_COMPARTMENT_ID;

typedef enum _NET_IF_CONNECTION_TYPE * PNET_IF_CONNECTION_TYPE;

typedef enum _NET_IF_DIRECTION_TYPE * PNET_IF_DIRECTION_TYPE;

typedef enum _NET_IF_MEDIA_CONNECT_STATE * PNET_IF_MEDIA_CONNECT_STATE;

typedef enum _NET_IF_MEDIA_DUPLEX_STATE * PNET_IF_MEDIA_DUPLEX_STATE;

typedef GUID * PNET_IF_NETWORK_GUID;

typedef ULONG32 * PNET_IF_OBJECT_ID;

typedef enum _NET_IF_OPER_STATUS * PNET_IF_OPER_STATUS;

typedef struct _NET_IF_RCV_ADDRESS_LH * PNET_IF_RCV_ADDRESS_LH;

typedef enum _NET_IF_RCV_ADDRESS_TYPE * PNET_IF_RCV_ADDRESS_TYPE;

typedef ULONG * PNET_IFINDEX;

typedef UINT16 * PNET_IFTYPE;

typedef NET_LUID * PNET_LUID;

typedef union _NET_LUID_LH * PNET_LUID_LH;

typedef struct _NET_PHYSICAL_LOCATION_LH * PNET_PHYSICAL_LOCATION_LH;

typedef enum enum_6643 * PTUNNEL_TYPE;

typedef enum enum_6643 TUNNEL_TYPE;

#define RECORDER_BURNING 2

#define RECORDER_DOING_NOTHING 0

#define RECORDER_OPENED 1

typedef struct IDiscMaster IDiscMaster, *PIDiscMaster;

typedef struct IDiscMasterVtbl IDiscMasterVtbl, *PIDiscMasterVtbl;

typedef struct IEnumDiscMasterFormats IEnumDiscMasterFormats, *PIEnumDiscMasterFormats;

typedef struct IEnumDiscRecorders IEnumDiscRecorders, *PIEnumDiscRecorders;

typedef struct IDiscRecorder IDiscRecorder, *PIDiscRecorder;

typedef struct IDiscMasterProgressEvents IDiscMasterProgressEvents, *PIDiscMasterProgressEvents;

typedef struct IEnumDiscMasterFormatsVtbl IEnumDiscMasterFormatsVtbl, *PIEnumDiscMasterFormatsVtbl;

typedef struct IEnumDiscRecordersVtbl IEnumDiscRecordersVtbl, *PIEnumDiscRecordersVtbl;

typedef struct IDiscRecorderVtbl IDiscRecorderVtbl, *PIDiscRecorderVtbl;


/* WARNING! conflicting data type names: /rpcndr.h/byte - /byte */

typedef struct IPropertyStorage IPropertyStorage, *PIPropertyStorage;

typedef struct IDiscMasterProgressEventsVtbl IDiscMasterProgressEventsVtbl, *PIDiscMasterProgressEventsVtbl;

typedef struct IPropertyStorageVtbl IPropertyStorageVtbl, *PIPropertyStorageVtbl;

typedef struct IEnumSTATPROPSTG IEnumSTATPROPSTG, *PIEnumSTATPROPSTG;

typedef struct tagSTATPROPSETSTG tagSTATPROPSETSTG, *PtagSTATPROPSETSTG;

typedef struct tagSTATPROPSETSTG STATPROPSETSTG;

typedef struct IEnumSTATPROPSTGVtbl IEnumSTATPROPSTGVtbl, *PIEnumSTATPROPSTGVtbl;

typedef struct tagSTATPROPSTG tagSTATPROPSTG, *PtagSTATPROPSTG;

typedef struct tagSTATPROPSTG STATPROPSTG;

struct IPropertyStorageVtbl {
    HRESULT (* QueryInterface)(struct IPropertyStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyStorage *);
    ULONG (* Release)(struct IPropertyStorage *);
    HRESULT (* ReadMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *, PROPVARIANT *);
    HRESULT (* WriteMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *, PROPVARIANT *, PROPID);
    HRESULT (* DeleteMultiple)(struct IPropertyStorage *, ULONG, PROPSPEC *);
    HRESULT (* ReadPropertyNames)(struct IPropertyStorage *, ULONG, PROPID *, LPOLESTR *);
    HRESULT (* WritePropertyNames)(struct IPropertyStorage *, ULONG, PROPID *, LPOLESTR *);
    HRESULT (* DeletePropertyNames)(struct IPropertyStorage *, ULONG, PROPID *);
    HRESULT (* Commit)(struct IPropertyStorage *, DWORD);
    HRESULT (* Revert)(struct IPropertyStorage *);
    HRESULT (* Enum)(struct IPropertyStorage *, struct IEnumSTATPROPSTG * *);
    HRESULT (* SetTimes)(struct IPropertyStorage *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (* SetClass)(struct IPropertyStorage *, IID *);
    HRESULT (* Stat)(struct IPropertyStorage *, STATPROPSETSTG *);
};

struct IDiscMasterVtbl {
    HRESULT (* QueryInterface)(struct IDiscMaster *, IID *, void * *);
    ULONG (* AddRef)(struct IDiscMaster *);
    ULONG (* Release)(struct IDiscMaster *);
    HRESULT (* Open)(struct IDiscMaster *);
    HRESULT (* EnumDiscMasterFormats)(struct IDiscMaster *, struct IEnumDiscMasterFormats * *);
    HRESULT (* GetActiveDiscMasterFormat)(struct IDiscMaster *, LPIID);
    HRESULT (* SetActiveDiscMasterFormat)(struct IDiscMaster *, IID *, void * *);
    HRESULT (* EnumDiscRecorders)(struct IDiscMaster *, struct IEnumDiscRecorders * *);
    HRESULT (* GetActiveDiscRecorder)(struct IDiscMaster *, struct IDiscRecorder * *);
    HRESULT (* SetActiveDiscRecorder)(struct IDiscMaster *, struct IDiscRecorder *);
    HRESULT (* ClearFormatContent)(struct IDiscMaster *);
    HRESULT (* ProgressAdvise)(struct IDiscMaster *, struct IDiscMasterProgressEvents *, UINT_PTR *);
    HRESULT (* ProgressUnadvise)(struct IDiscMaster *, UINT_PTR);
    HRESULT (* RecordDisc)(struct IDiscMaster *, boolean, boolean);
    HRESULT (* Close)(struct IDiscMaster *);
};

struct IDiscRecorder {
    struct IDiscRecorderVtbl * lpVtbl;
};

struct IPropertyStorage {
    struct IPropertyStorageVtbl * lpVtbl;
};

struct tagSTATPROPSETSTG {
    FMTID fmtid;
    CLSID clsid;
    DWORD grfFlags;
    FILETIME mtime;
    FILETIME ctime;
    FILETIME atime;
    DWORD dwOSVersion;
};

struct IEnumDiscRecorders {
    struct IEnumDiscRecordersVtbl * lpVtbl;
};

struct IDiscMasterProgressEventsVtbl {
    HRESULT (* QueryInterface)(struct IDiscMasterProgressEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IDiscMasterProgressEvents *);
    ULONG (* Release)(struct IDiscMasterProgressEvents *);
    HRESULT (* QueryCancel)(struct IDiscMasterProgressEvents *, boolean *);
    HRESULT (* NotifyPnPActivity)(struct IDiscMasterProgressEvents *);
    HRESULT (* NotifyAddProgress)(struct IDiscMasterProgressEvents *, long, long);
    HRESULT (* NotifyBlockProgress)(struct IDiscMasterProgressEvents *, long, long);
    HRESULT (* NotifyTrackProgress)(struct IDiscMasterProgressEvents *, long, long);
    HRESULT (* NotifyPreparingBurn)(struct IDiscMasterProgressEvents *, long);
    HRESULT (* NotifyClosingDisc)(struct IDiscMasterProgressEvents *, long);
    HRESULT (* NotifyBurnComplete)(struct IDiscMasterProgressEvents *, HRESULT);
    HRESULT (* NotifyEraseComplete)(struct IDiscMasterProgressEvents *, HRESULT);
};

struct IDiscRecorderVtbl {
    HRESULT (* QueryInterface)(struct IDiscRecorder *, IID *, void * *);
    ULONG (* AddRef)(struct IDiscRecorder *);
    ULONG (* Release)(struct IDiscRecorder *);
    HRESULT (* Init)(struct IDiscRecorder *, byte *, ULONG, ULONG);
    HRESULT (* GetRecorderGUID)(struct IDiscRecorder *, byte *, ULONG, ULONG *);
    HRESULT (* GetRecorderType)(struct IDiscRecorder *, long *);
    HRESULT (* GetDisplayNames)(struct IDiscRecorder *, BSTR *, BSTR *, BSTR *);
    HRESULT (* GetBasePnPID)(struct IDiscRecorder *, BSTR *);
    HRESULT (* GetPath)(struct IDiscRecorder *, BSTR *);
    HRESULT (* GetRecorderProperties)(struct IDiscRecorder *, struct IPropertyStorage * *);
    HRESULT (* SetRecorderProperties)(struct IDiscRecorder *, struct IPropertyStorage *);
    HRESULT (* GetRecorderState)(struct IDiscRecorder *, ULONG *);
    HRESULT (* OpenExclusive)(struct IDiscRecorder *);
    HRESULT (* QueryMediaType)(struct IDiscRecorder *, long *, long *);
    HRESULT (* QueryMediaInfo)(struct IDiscRecorder *, byte *, byte *, ULONG *, ULONG *, ULONG *);
    HRESULT (* Eject)(struct IDiscRecorder *);
    HRESULT (* Erase)(struct IDiscRecorder *, boolean);
    HRESULT (* Close)(struct IDiscRecorder *);
};

struct tagSTATPROPSTG {
    LPOLESTR lpwstrName;
    PROPID propid;
    VARTYPE vt;
};

struct IEnumSTATPROPSTG {
    struct IEnumSTATPROPSTGVtbl * lpVtbl;
};

struct IDiscMaster {
    struct IDiscMasterVtbl * lpVtbl;
};

struct IEnumSTATPROPSTGVtbl {
    HRESULT (* QueryInterface)(struct IEnumSTATPROPSTG *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSTATPROPSTG *);
    ULONG (* Release)(struct IEnumSTATPROPSTG *);
    HRESULT (* Next)(struct IEnumSTATPROPSTG *, ULONG, STATPROPSTG *, ULONG *);
    HRESULT (* Skip)(struct IEnumSTATPROPSTG *, ULONG);
    HRESULT (* Reset)(struct IEnumSTATPROPSTG *);
    HRESULT (* Clone)(struct IEnumSTATPROPSTG *, struct IEnumSTATPROPSTG * *);
};

struct IDiscMasterProgressEvents {
    struct IDiscMasterProgressEventsVtbl * lpVtbl;
};

struct IEnumDiscRecordersVtbl {
    HRESULT (* QueryInterface)(struct IEnumDiscRecorders *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumDiscRecorders *);
    ULONG (* Release)(struct IEnumDiscRecorders *);
    HRESULT (* Next)(struct IEnumDiscRecorders *, ULONG, struct IDiscRecorder * *, ULONG *);
    HRESULT (* Skip)(struct IEnumDiscRecorders *, ULONG);
    HRESULT (* Reset)(struct IEnumDiscRecorders *);
    HRESULT (* Clone)(struct IEnumDiscRecorders *, struct IEnumDiscRecorders * *);
};

struct IEnumDiscMasterFormatsVtbl {
    HRESULT (* QueryInterface)(struct IEnumDiscMasterFormats *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumDiscMasterFormats *);
    ULONG (* Release)(struct IEnumDiscMasterFormats *);
    HRESULT (* Next)(struct IEnumDiscMasterFormats *, ULONG, LPIID, ULONG *);
    HRESULT (* Skip)(struct IEnumDiscMasterFormats *, ULONG);
    HRESULT (* Reset)(struct IEnumDiscMasterFormats *);
    HRESULT (* Clone)(struct IEnumDiscMasterFormats *, struct IEnumDiscMasterFormats * *);
};

struct IEnumDiscMasterFormats {
    struct IEnumDiscMasterFormatsVtbl * lpVtbl;
};

typedef struct IJolietDiscMaster IJolietDiscMaster, *PIJolietDiscMaster;

typedef struct IJolietDiscMasterVtbl IJolietDiscMasterVtbl, *PIJolietDiscMasterVtbl;

struct IJolietDiscMasterVtbl {
    HRESULT (* QueryInterface)(struct IJolietDiscMaster *, IID *, void * *);
    ULONG (* AddRef)(struct IJolietDiscMaster *);
    ULONG (* Release)(struct IJolietDiscMaster *);
    HRESULT (* GetTotalDataBlocks)(struct IJolietDiscMaster *, long *);
    HRESULT (* GetUsedDataBlocks)(struct IJolietDiscMaster *, long *);
    HRESULT (* GetDataBlockSize)(struct IJolietDiscMaster *, long *);
    HRESULT (* AddData)(struct IJolietDiscMaster *, struct IStorage *, long);
    HRESULT (* GetJolietProperties)(struct IJolietDiscMaster *, struct IPropertyStorage * *);
    HRESULT (* SetJolietProperties)(struct IJolietDiscMaster *, struct IPropertyStorage *);
};

struct IJolietDiscMaster {
    struct IJolietDiscMasterVtbl * lpVtbl;
};

typedef struct IRedbookDiscMaster IRedbookDiscMaster, *PIRedbookDiscMaster;

typedef struct IRedbookDiscMasterVtbl IRedbookDiscMasterVtbl, *PIRedbookDiscMasterVtbl;

struct IRedbookDiscMaster {
    struct IRedbookDiscMasterVtbl * lpVtbl;
};

struct IRedbookDiscMasterVtbl {
    HRESULT (* QueryInterface)(struct IRedbookDiscMaster *, IID *, void * *);
    ULONG (* AddRef)(struct IRedbookDiscMaster *);
    ULONG (* Release)(struct IRedbookDiscMaster *);
    HRESULT (* GetTotalAudioTracks)(struct IRedbookDiscMaster *, long *);
    HRESULT (* GetTotalAudioBlocks)(struct IRedbookDiscMaster *, long *);
    HRESULT (* GetUsedAudioBlocks)(struct IRedbookDiscMaster *, long *);
    HRESULT (* GetAvailableAudioTrackBlocks)(struct IRedbookDiscMaster *, long *);
    HRESULT (* GetAudioBlockSize)(struct IRedbookDiscMaster *, long *);
    HRESULT (* CreateAudioTrack)(struct IRedbookDiscMaster *, long);
    HRESULT (* AddAudioTrackBlocks)(struct IRedbookDiscMaster *, byte *, long);
    HRESULT (* CloseAudioTrack)(struct IRedbookDiscMaster *);
};

typedef enum MEDIA_FLAGS {
    MEDIA_BLANK=1,
    MEDIA_FORMAT_UNUSABLE_BY_IMAPI=8,
    MEDIA_RW=2,
    MEDIA_WRITABLE=4
} MEDIA_FLAGS;

typedef enum MEDIA_TYPES {
    MEDIA_CDDA_CDROM=1,
    MEDIA_CD_EXTRA=4,
    MEDIA_CD_I=3,
    MEDIA_CD_OTHER=5,
    MEDIA_CD_ROM_XA=2,
    MEDIA_SPECIAL=6
} MEDIA_TYPES;

typedef struct MSDiscMasterObj MSDiscMasterObj, *PMSDiscMasterObj;

struct MSDiscMasterObj {
};

typedef struct MSDiscRecorderObj MSDiscRecorderObj, *PMSDiscRecorderObj;

struct MSDiscRecorderObj {
};

typedef struct MSEnumDiscRecordersObj MSEnumDiscRecordersObj, *PMSEnumDiscRecordersObj;

struct MSEnumDiscRecordersObj {
};

typedef enum RECORDER_TYPES {
    RECORDER_CDR=1,
    RECORDER_CDRW=2
} RECORDER_TYPES;

#define IME_CMODE_ALPHANUMERIC 0

#define IME_CMODE_CHARCODE 32

#define IME_CMODE_CHINESE 1

#define IME_CMODE_FULLSHAPE 8

#define IME_CMODE_HANGUL 1

#define IME_CMODE_HANJACONVERT 64

#define IME_CMODE_JAPANESE 1

#define IME_CMODE_KATAKANA 2

#define IME_CMODE_LANGUAGE 3

#define IME_CMODE_NATIVE 1

#define IME_CMODE_ROMAN 16

#define ATTR_CONVERTED 2

#define ATTR_FIXEDCONVERTED 5

#define ATTR_INPUT 0

#define ATTR_INPUT_ERROR 4

#define ATTR_TARGET_CONVERTED 1

#define ATTR_TARGET_NOTCONVERTED 3

#define CFS_CANDIDATEPOS 64

#define CFS_DEFAULT 0

#define CFS_EXCLUDE 128

#define CFS_FORCE_POSITION 32

#define CFS_POINT 2

#define CFS_RECT 1

#define CPS_CANCEL 4

#define CPS_COMPLETE 1

#define CPS_CONVERT 2

#define CPS_REVERT 3

#define CS_INSERTCHAR 8192

#define CS_NOMOVECARET 16384

#define GCL_CONVERSION 1

#define GCL_REVERSE_LENGTH 3

#define GCL_REVERSECONVERSION 2

#define GCS_COMPATTR 16

#define GCS_COMPCLAUSE 32

#define GCS_COMPREADATTR 2

#define GCS_COMPREADCLAUSE 4

#define GCS_COMPREADSTR 1

#define GCS_COMPSTR 8

#define GCS_CURSORPOS 128

#define GCS_DELTASTART 256

#define GCS_RESULTCLAUSE 4096

#define GCS_RESULTREADCLAUSE 1024

#define GCS_RESULTREADSTR 512

#define GCS_RESULTSTR 2048

#define GGL_INDEX 2

#define GGL_LEVEL 1

#define GGL_PRIVATE 4

#define GGL_STRING 3

#define GL_ID_CANNOTSAVE 17

#define GL_ID_CHOOSECANDIDATE 40

#define GL_ID_INPUTCODE 38

#define GL_ID_INPUTRADICAL 37

#define GL_ID_INPUTREADING 36

#define GL_ID_INPUTSYMBOL 39

#define GL_ID_NOCONVERT 32

#define GL_ID_NODICTIONARY 16

#define GL_ID_NOMODULE 1

#define GL_ID_PRIVATE_FIRST 32768

#define GL_ID_PRIVATE_LAST 65535

#define GL_ID_READINGCONFLICT 35

#define GL_ID_REVERSECONVERSION 41

#define GL_ID_TOOMANYSTROKE 34

#define GL_ID_TYPINGERROR 33

#define GL_ID_UNKNOWN 0

#define GL_LEVEL_ERROR 2

#define GL_LEVEL_FATAL 1

#define GL_LEVEL_INFORMATION 4

#define GL_LEVEL_NOGUIDELINE 0

#define GL_LEVEL_WARNING 3

#define IACE_CHILDREN 1

#define IACE_DEFAULT 16

#define IACE_IGNORENOCONTEXT 32

#define IGIMIF_RIGHTMENU 1

#define IGIMII_CMODE 1

#define IGIMII_CONFIGURE 4

#define IGIMII_HELP 16

#define IGIMII_INPUTTOOLS 64

#define IGIMII_OTHER 32

#define IGIMII_SMODE 2

#define IGIMII_TOOLS 8

#define IGP_CONVERSION 8

#define IGP_GETIMEVERSION -4

#define IGP_PROPERTY 4

#define IGP_SELECT 24

#define IGP_SENTENCE 12

#define IGP_SETCOMPSTR 20

#define IGP_UI 16

#define IMC_CLOSESTATUSWINDOW 33

#define IMC_GETCANDIDATEPOS 7

#define IMC_GETCOMPOSITIONFONT 9

#define IMC_GETCOMPOSITIONWINDOW 11

#define IMC_GETSTATUSWINDOWPOS 15

#define IMC_OPENSTATUSWINDOW 34

#define IMC_SETCANDIDATEPOS 8

#define IMC_SETCOMPOSITIONFONT 10

#define IMC_SETCOMPOSITIONWINDOW 12

#define IMC_SETSTATUSWINDOWPOS 16

#define IME_CAND_CODE 2

#define IME_CAND_MEANING 3

#define IME_CAND_RADICAL 4

#define IME_CAND_READ 1

#define IME_CAND_STROKE 5

#define IME_CAND_UNKNOWN 0

#define IME_CHOTKEY_IME_NONIME_TOGGLE 16

#define IME_CHOTKEY_SHAPE_TOGGLE 17

#define IME_CHOTKEY_SYMBOL_TOGGLE 18

#define IME_CMODE_EUDC 512

#define IME_CMODE_FIXED 2048

#define IME_CMODE_HANGEUL 1

#define IME_CMODE_NOCONVERSION 256

#define IME_CMODE_RESERVED 4026531840

#define IME_CMODE_SOFTKBD 128

#define IME_CMODE_SYMBOL 1024

#define IME_CONFIG_GENERAL 1

#define IME_CONFIG_REGISTERWORD 2

#define IME_CONFIG_SELECTDICTIONARY 3

#define IME_ESC_AUTOMATA 4105

#define IME_ESC_GET_EUDC_DICTIONARY 4099

#define IME_ESC_GETHELPFILENAME 4107

#define IME_ESC_HANJA_MODE 4104

#define IME_ESC_IME_NAME 4102

#define IME_ESC_MAX_KEY 4101

#define IME_ESC_PRIVATE_FIRST 2048

#define IME_ESC_PRIVATE_HOTKEY 4106

#define IME_ESC_PRIVATE_LAST 4095

#define IME_ESC_QUERY_SUPPORT 3

#define IME_ESC_RESERVED_FIRST 4

#define IME_ESC_RESERVED_LAST 2047

#define IME_ESC_SEQUENCE_TO_INTERNAL 4097

#define IME_ESC_SET_EUDC_DICTIONARY 4100

#define IME_ESC_SYNC_HOTKEY 4103

#define IME_HOTKEY_DSWITCH_FIRST 256

#define IME_HOTKEY_DSWITCH_LAST 287

#define IME_HOTKEY_PRIVATE_FIRST 512

#define IME_HOTKEY_PRIVATE_LAST 543

#define IME_ITHOTKEY_PREVIOUS_COMPOSITION 513

#define IME_ITHOTKEY_RECONVERTSTRING 515

#define IME_ITHOTKEY_RESEND_RESULTSTR 512

#define IME_ITHOTKEY_UISTYLE_TOGGLE 514

#define IME_JHOTKEY_CLOSE_OPEN 48

#define IME_KHOTKEY_ENGLISH 82

#define IME_KHOTKEY_HANJACONVERT 81

#define IME_KHOTKEY_SHAPE_TOGGLE 80

#define IME_PROP_AT_CARET 65536

#define IME_PROP_CANDLIST_START_FROM_1 262144

#define IME_PROP_COMPLETE_ON_UNSELECT 1048576

#define IME_PROP_SPECIAL_UI 131072

#define IME_PROP_UNICODE 524288

#define IME_REGWORD_STYLE_EUDC 1

#define IME_REGWORD_STYLE_USER_FIRST 2147483648

#define IME_REGWORD_STYLE_USER_LAST 4294967295

#define IME_SMODE_AUTOMATIC 4

#define IME_SMODE_CONVERSATION 16

#define IME_SMODE_NONE 0

#define IME_SMODE_PHRASEPREDICT 8

#define IME_SMODE_PLAURALCLAUSE 1

#define IME_SMODE_RESERVED 61440

#define IME_SMODE_SINGLECONVERT 2

#define IME_THOTKEY_IME_NONIME_TOGGLE 112

#define IME_THOTKEY_SHAPE_TOGGLE 113

#define IME_THOTKEY_SYMBOL_TOGGLE 114

#define IMEMENUITEM_STRING_SIZE 80

#define IMEVER_0310 196618

#define IMEVER_0400 262144

#define IMFS_CHECKED 8

#define IMFS_DEFAULT 4096

#define IMFS_DISABLED 3

#define IMFS_ENABLED 0

#define IMFS_GRAYED 3

#define IMFS_HILITE 128

#define IMFS_UNCHECKED 0

#define IMFS_UNHILITE 0

#define IMFT_RADIOCHECK 1

#define IMFT_SEPARATOR 2

#define IMFT_SUBMENU 4

#define IMM_ERROR_GENERAL -2

#define IMM_ERROR_NODATA -1

#define IMN_CHANGECANDIDATE 3

#define IMN_CLOSECANDIDATE 4

#define IMN_CLOSESTATUSWINDOW 1

#define IMN_GUIDELINE 13

#define IMN_OPENCANDIDATE 5

#define IMN_OPENSTATUSWINDOW 2

#define IMN_PRIVATE 14

#define IMN_SETCANDIDATEPOS 9

#define IMN_SETCOMPOSITIONFONT 10

#define IMN_SETCOMPOSITIONWINDOW 11

#define IMN_SETCONVERSIONMODE 6

#define IMN_SETOPENSTATUS 8

#define IMN_SETSENTENCEMODE 7

#define IMN_SETSTATUSWINDOWPOS 12

#define IMR_CANDIDATEWINDOW 2

#define IMR_COMPOSITIONFONT 3

#define IMR_COMPOSITIONWINDOW 1

#define IMR_CONFIRMRECONVERTSTRING 5

#define IMR_DOCUMENTFEED 7

#define IMR_QUERYCHARPOSITION 6

#define IMR_RECONVERTSTRING 4

#define ISC_SHOWUIALL 3221225487

#define ISC_SHOWUIALLCANDIDATEWINDOW 15

#define ISC_SHOWUICANDIDATEWINDOW 1

#define ISC_SHOWUICOMPOSITIONWINDOW 2147483648

#define ISC_SHOWUIGUIDELINE 1073741824

#define MOD_IGNORE_ALL_MODIFIER 1024

#define MOD_LEFT 32768

#define MOD_ON_KEYUP 2048

#define MOD_RIGHT 16384

#define NI_CHANGECANDIDATELIST 19

#define NI_CLOSECANDIDATE 17

#define NI_COMPOSITIONSTR 21

#define NI_FINALIZECONVERSIONRESULT 20

#define NI_IMEMENUSELECTED 24

#define NI_OPENCANDIDATE 16

#define NI_SELECTCANDIDATESTR 18

#define NI_SETCANDIDATE_PAGESIZE 23

#define NI_SETCANDIDATE_PAGESTART 22

#define SCS_CAP_COMPSTR 1

#define SCS_CAP_MAKEREAD 2

#define SCS_CAP_SETRECONVERTSTRING 4

#define SCS_CHANGEATTR 18

#define SCS_CHANGECLAUSE 36

#define SCS_QUERYRECONVERTSTRING 131072

#define SCS_SETRECONVERTSTRING 65536

#define SCS_SETSTR 9

#define SELECT_CAP_CONVERSION 1

#define SELECT_CAP_SENTENCE 2

#define SOFTKEYBOARD_TYPE_C1 2

#define SOFTKEYBOARD_TYPE_T1 1

#define STYLE_DESCRIPTION_SIZE 32

#define UI_CAP_2700 1

#define UI_CAP_ROT90 2

#define UI_CAP_ROTANY 4

typedef struct tagCANDIDATEFORM tagCANDIDATEFORM, *PtagCANDIDATEFORM;

typedef struct tagCANDIDATEFORM CANDIDATEFORM;

struct tagCANDIDATEFORM {
    DWORD dwIndex;
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT rcArea;
};

typedef struct tagCANDIDATELIST tagCANDIDATELIST, *PtagCANDIDATELIST;

typedef struct tagCANDIDATELIST CANDIDATELIST;

struct tagCANDIDATELIST {
    DWORD dwSize;
    DWORD dwStyle;
    DWORD dwCount;
    DWORD dwSelection;
    DWORD dwPageStart;
    DWORD dwPageSize;
    DWORD dwOffset[1];
};

typedef struct tagCOMPOSITIONFORM tagCOMPOSITIONFORM, *PtagCOMPOSITIONFORM;

typedef struct tagCOMPOSITIONFORM COMPOSITIONFORM;

struct tagCOMPOSITIONFORM {
    DWORD dwStyle;
    POINT ptCurrentPos;
    RECT rcArea;
};

typedef struct HIMC__ HIMC__, *PHIMC__;

typedef struct HIMC__ * HIMC;

struct HIMC__ {
    int unused;
};

typedef struct HIMCC__ HIMCC__, *PHIMCC__;

typedef struct HIMCC__ * HIMCC;

struct HIMCC__ {
    int unused;
};

typedef BOOL (* IMCENUMPROC)(HIMC, LPARAM);

typedef struct tagIMECHARPOSITION tagIMECHARPOSITION, *PtagIMECHARPOSITION;

typedef struct tagIMECHARPOSITION IMECHARPOSITION;

struct tagIMECHARPOSITION {
    DWORD dwSize;
    DWORD dwCharPos;
    POINT pt;
    UINT cLineHeight;
    RECT rcDocument;
};

typedef struct tagIMEMENUITEMINFOA tagIMEMENUITEMINFOA, *PtagIMEMENUITEMINFOA;

typedef struct tagIMEMENUITEMINFOA IMEMENUITEMINFOA;

typedef IMEMENUITEMINFOA IMEMENUITEMINFO;

struct tagIMEMENUITEMINFOA {
    UINT cbSize;
    UINT fType;
    UINT fState;
    UINT wID;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    DWORD dwItemData;
    CHAR szString[80];
    HBITMAP hbmpItem;
};

typedef struct tagIMEMENUITEMINFOW tagIMEMENUITEMINFOW, *PtagIMEMENUITEMINFOW;

typedef struct tagIMEMENUITEMINFOW IMEMENUITEMINFOW;

struct tagIMEMENUITEMINFOW {
    UINT cbSize;
    UINT fType;
    UINT fState;
    UINT wID;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    DWORD dwItemData;
    WCHAR szString[80];
    HBITMAP hbmpItem;
};

typedef struct tagCANDIDATEFORM * LPCANDIDATEFORM;

typedef struct tagCANDIDATELIST * LPCANDIDATELIST;

typedef struct tagCOMPOSITIONFORM * LPCOMPOSITIONFORM;

typedef struct HKL__ HKL__, *PHKL__;

typedef struct HKL__ * HKL;

typedef HKL * LPHKL;

struct HKL__ {
    int unused;
};

typedef struct tagIMECHARPOSITION * LPIMECHARPOSITION;

typedef struct tagIMEMENUITEMINFOA * LPIMEMENUITEMINFOA;

typedef LPIMEMENUITEMINFOA LPIMEMENUITEMINFO;

typedef struct tagIMEMENUITEMINFOW * LPIMEMENUITEMINFOW;

typedef struct tagRECONVERTSTRING tagRECONVERTSTRING, *PtagRECONVERTSTRING;

typedef struct tagRECONVERTSTRING * LPRECONVERTSTRING;

struct tagRECONVERTSTRING {
    DWORD dwSize;
    DWORD dwVersion;
    DWORD dwStrLen;
    DWORD dwStrOffset;
    DWORD dwCompStrLen;
    DWORD dwCompStrOffset;
    DWORD dwTargetStrLen;
    DWORD dwTargetStrOffset;
};

typedef struct tagREGISTERWORDA tagREGISTERWORDA, *PtagREGISTERWORDA;

typedef struct tagREGISTERWORDA * LPREGISTERWORDA;

typedef LPREGISTERWORDA LPREGISTERWORD;

struct tagREGISTERWORDA {
    LPSTR lpReading;
    LPSTR lpWord;
};

typedef struct tagREGISTERWORDW tagREGISTERWORDW, *PtagREGISTERWORDW;

typedef struct tagREGISTERWORDW * LPREGISTERWORDW;

struct tagREGISTERWORDW {
    LPWSTR lpReading;
    LPWSTR lpWord;
};

typedef struct tagSTYLEBUFA tagSTYLEBUFA, *PtagSTYLEBUFA;

typedef struct tagSTYLEBUFA * LPSTYLEBUFA;

typedef LPSTYLEBUFA LPSTYLEBUF;

struct tagSTYLEBUFA {
    DWORD dwStyle;
    CHAR szDescription[32];
};

typedef struct tagSTYLEBUFW tagSTYLEBUFW, *PtagSTYLEBUFW;

typedef struct tagSTYLEBUFW * LPSTYLEBUFW;

struct tagSTYLEBUFW {
    DWORD dwStyle;
    WCHAR szDescription[32];
};

typedef struct tagCANDIDATEFORM * NPCANDIDATEFORM;

typedef struct tagCANDIDATELIST * NPCANDIDATELIST;

typedef struct tagCOMPOSITIONFORM * NPCOMPOSITIONFORM;

typedef struct tagIMECHARPOSITION * NPIMECHARPOSITION;

typedef struct tagIMEMENUITEMINFOA * NPIMEMENUITEMINFOA;

typedef NPIMEMENUITEMINFOA NPIMEMENUITEMINFO;

typedef struct tagIMEMENUITEMINFOW * NPIMEMENUITEMINFOW;

typedef struct tagRECONVERTSTRING * NPRECONVERTSTRING;

typedef struct tagREGISTERWORDA * NPREGISTERWORDA;

typedef NPREGISTERWORDA NPREGISTERWORD;

typedef struct tagREGISTERWORDW * NPREGISTERWORDW;

typedef struct tagSTYLEBUFA * NPSTYLEBUFA;

typedef NPSTYLEBUFA NPSTYLEBUF;

typedef struct tagSTYLEBUFW * NPSTYLEBUFW;

typedef struct tagCANDIDATEFORM * PCANDIDATEFORM;

typedef struct tagCANDIDATELIST * PCANDIDATELIST;

typedef struct tagCOMPOSITIONFORM * PCOMPOSITIONFORM;

typedef struct tagIMECHARPOSITION * PIMECHARPOSITION;

typedef struct tagIMEMENUITEMINFOA * PIMEMENUITEMINFOA;

typedef PIMEMENUITEMINFOA PIMEMENUITEMINFO;

typedef struct tagIMEMENUITEMINFOW * PIMEMENUITEMINFOW;

typedef struct tagRECONVERTSTRING * PRECONVERTSTRING;

typedef struct tagREGISTERWORDA * PREGISTERWORDA;

typedef PREGISTERWORDA PREGISTERWORD;

typedef struct tagREGISTERWORDW * PREGISTERWORDW;

typedef struct tagSTYLEBUFA * PSTYLEBUFA;

typedef PSTYLEBUFA PSTYLEBUF;

typedef struct tagSTYLEBUFW * PSTYLEBUFW;

typedef struct tagRECONVERTSTRING RECONVERTSTRING;

typedef struct tagREGISTERWORDA REGISTERWORDA;

typedef REGISTERWORDA REGISTERWORD;

typedef int (* REGISTERWORDENUMPROCA)(LPCSTR, DWORD, LPCSTR, LPVOID);

typedef int (* REGISTERWORDENUMPROCW)(LPCWSTR, DWORD, LPCWSTR, LPVOID);

typedef struct tagREGISTERWORDW REGISTERWORDW;

typedef struct tagSTYLEBUFA STYLEBUFA;

typedef STYLEBUFA STYLEBUF;

typedef struct tagSTYLEBUFW STYLEBUFW;

#define _CMP_EQ_OQ 0

#define _CMP_EQ_OS 16

#define _CMP_EQ_UQ 8

#define _CMP_EQ_US 24

#define _CMP_FALSE_OQ 11

#define _CMP_FALSE_OS 27

#define _CMP_GE_OQ 29

#define _CMP_GE_OS 13

#define _CMP_GT_OQ 30

#define _CMP_GT_OS 14

#define _CMP_LE_OQ 18

#define _CMP_LE_OS 2

#define _CMP_LT_OQ 17

#define _CMP_LT_OS 1

#define _CMP_NEQ_OQ 12

#define _CMP_NEQ_OS 28

#define _CMP_NEQ_UQ 4

#define _CMP_NEQ_US 20

#define _CMP_NGE_UQ 25

#define _CMP_NGE_US 9

#define _CMP_NGT_UQ 26

#define _CMP_NGT_US 10

#define _CMP_NLE_UQ 22

#define _CMP_NLE_US 6

#define _CMP_NLT_UQ 21

#define _CMP_NLT_US 5

#define _CMP_ORD_Q 7

#define _CMP_ORD_S 23

#define _CMP_TRUE_UQ 15

#define _CMP_TRUE_US 31

#define _CMP_UNORD_Q 3

#define _CMP_UNORD_S 19

#define _XABORT_CAPACITY 8

#define _XABORT_CONFLICT 4

#define _XABORT_DEBUG 16

#define _XABORT_EXPLICIT 1

#define _XABORT_NESTED 32

#define _XABORT_RETRY 2

#define _XCR_XFEATURE_ENABLED_MASK 0

typedef union __m256 __m256, *P__m256;

union __m256 {
    float m256_f32[8];
};

typedef struct __m256d __m256d, *P__m256d;

struct __m256d {
    double m256d_f64[4];
};

typedef union __m256i __m256i, *P__m256i;

union __m256i {
    sbyte m256i_i8[32];
    short m256i_i16[16];
    int m256i_i32[8];
    longlong m256i_i64[4];
    byte m256i_u8[32];
    ushort m256i_u16[16];
    uint m256i_u32[8];
    ulonglong m256i_u64[4];
};

typedef union _union_5833 _union_5833, *P_union_5833;

union _union_5833 {
    UCHAR Byte[16];
    USHORT Word[8];
};

typedef struct in6_addr in6_addr, *Pin6_addr;

typedef struct in6_addr IN6_ADDR;

struct in6_addr {
    union _union_5833 u;
};

typedef struct in6_addr * LPIN6_ADDR;

typedef struct in6_addr * PIN6_ADDR;

typedef struct _struct_1227 _struct_1227, *P_struct_1227;

struct _struct_1227 {
    UCHAR s_b1;
    UCHAR s_b2;
    UCHAR s_b3;
    UCHAR s_b4;
};

typedef struct _struct_1228 _struct_1228, *P_struct_1228;

struct _struct_1228 {
    USHORT s_w1;
    USHORT s_w2;
};

typedef union _union_1226 _union_1226, *P_union_1226;

union _union_1226 {
    struct _struct_1227 S_un_b;
    struct _struct_1228 S_un_w;
    ULONG S_addr;
};

typedef struct in_addr in_addr, *Pin_addr;

struct in_addr {
    union _union_1226 S_un;
};

typedef struct in_addr IN_ADDR;

typedef struct in_addr * LPIN_ADDR;

typedef struct in_addr * PIN_ADDR;

#define __IOINFO_TM_ANSI 0

#define __IOINFO_TM_UTF16LE 2

#define __IOINFO_TM_UTF8 1

#define __NO_REASON 4294967295

#define _CONSOLE_APP 1

#define _CRT_SPINCOUNT 4000

#define _GUI_APP 2

#define _NHANDLE_ 2048

#define _NO_CONSOLE_FILENO -2

#define _SECURECRT_FILL_BUFFER 0

#define _SECURECRT_FILL_BUFFER_THRESHOLD 0

#define _TZ_STRINGS_SIZE 64

#define _UNKNOWN_APP 0

#define CFI_LENGTH 12

#define CR 13

#define CTRLZ 26

#define IOINFO_ARRAY_ELTS 32

#define IOINFO_ARRAYS 64

#define IOINFO_L2E 5

#define LF 10

#define STATUS_FATAL_APP_EXIT 1073741845

#define STDIO_HANDLES_COUNT 3

typedef enum enum_3249 {
    __initialized=2,
    __initializing=1,
    __uninitialized=0
} enum_3249;

typedef enum enum_3249 __enative_startup_state;

typedef struct _FILEX _FILEX, *P_FILEX;

typedef struct _iobuf _iobuf, *P_iobuf;

typedef struct _iobuf FILE;

typedef struct _RTL_CRITICAL_SECTION _RTL_CRITICAL_SECTION, *P_RTL_CRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION RTL_CRITICAL_SECTION;

typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION_DEBUG _RTL_CRITICAL_SECTION_DEBUG, *P_RTL_CRITICAL_SECTION_DEBUG;

typedef struct _RTL_CRITICAL_SECTION_DEBUG * PRTL_CRITICAL_SECTION_DEBUG;

typedef struct _LIST_ENTRY _LIST_ENTRY, *P_LIST_ENTRY;

typedef struct _LIST_ENTRY LIST_ENTRY;

struct _iobuf {
    char * _ptr;
    int _cnt;
    char * _base;
    int _flag;
    int _file;
    int _charbuf;
    int _bufsiz;
    char * _tmpfname;
};

struct _RTL_CRITICAL_SECTION {
    PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    HANDLE OwningThread;
    HANDLE LockSemaphore;
    ULONG_PTR SpinCount;
};

struct _FILEX {
    FILE f;
    CRITICAL_SECTION lock;
};

struct _LIST_ENTRY {
    struct _LIST_ENTRY * Flink;
    struct _LIST_ENTRY * Blink;
};

struct _RTL_CRITICAL_SECTION_DEBUG {
    WORD Type;
    WORD CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION * CriticalSection;
    LIST_ENTRY ProcessLocksList;
    DWORD EntryCount;
    DWORD ContentionCount;
    DWORD Flags;
    WORD CreatorBackTraceIndexHigh;
    WORD SpareWORD;
};

typedef int (* _PIFV)(void);

typedef int (* _PNH)(size_t);

typedef void (* _PVFI)(int);

typedef void (* _PVFV)(void);

typedef struct _startupinfo _startupinfo, *P_startupinfo;

struct _startupinfo {
    int newmode;
};

typedef union anon__struct_3244_bitfield_1 anon__struct_3244_bitfield_1, *Panon__struct_3244_bitfield_1;

union anon__struct_3244_bitfield_1 {
    char textmode:7; /* : bits 0-6 */
    char unicode:1; /* : bits 7 */
};

typedef char * va_list;

typedef int (* INPUTFN)(FILE *, uchar *, _locale_t, va_list);

typedef struct ioinfo ioinfo, *Pioinfo;

struct ioinfo {
    intptr_t osfhnd;
    char osfile;
    char pipech;
    int lockinitflag;
    CRITICAL_SECTION lock;
    union anon__struct_3244_bitfield_1 field_0x24;
    char pipech2[2];
    longlong startpos;
    BOOL utf8translations;
    char dbcsBuffer;
    BOOL dbcsBufferUsed;
};

typedef int (* OUTPUTFN)(FILE *, char *, _locale_t, va_list);

typedef int (* WINPUTFN)(FILE *, wchar_t *, _locale_t, va_list);

typedef int (* WOUTPUTFN)(FILE *, wchar_t *, _locale_t, va_list);

#define _USE_LOCALE_ARG 1

typedef struct __finddata64_t __finddata64_t, *P__finddata64_t;

struct __finddata64_t {
    uint attrib;
    __time64_t time_create;
    __time64_t time_access;
    __time64_t time_write;
    longlong size;
    char name[260];
};

typedef struct _finddata32_t _finddata32_t, *P_finddata32_t;

typedef ulong _fsize_t;

struct _finddata32_t {
    uint attrib;
    __time32_t time_create;
    __time32_t time_access;
    __time32_t time_write;
    _fsize_t size;
    char name[260];
};

typedef struct _finddata32i64_t _finddata32i64_t, *P_finddata32i64_t;

struct _finddata32i64_t {
    uint attrib;
    __time32_t time_create;
    __time32_t time_access;
    __time32_t time_write;
    longlong size;
    char name[260];
};

typedef struct _finddata64i32_t _finddata64i32_t, *P_finddata64i32_t;

struct _finddata64i32_t {
    uint attrib;
    __time64_t time_create;
    __time64_t time_access;
    __time64_t time_write;
    _fsize_t size;
    char name[260];
};

typedef struct _wfinddata32_t _wfinddata32_t, *P_wfinddata32_t;

struct _wfinddata32_t {
    uint attrib;
    __time32_t time_create;
    __time32_t time_access;
    __time32_t time_write;
    _fsize_t size;
    wchar_t name[260];
};

typedef struct _wfinddata32i64_t _wfinddata32i64_t, *P_wfinddata32i64_t;

struct _wfinddata32i64_t {
    uint attrib;
    __time32_t time_create;
    __time32_t time_access;
    __time32_t time_write;
    longlong size;
    wchar_t name[260];
};

typedef struct _wfinddata64_t _wfinddata64_t, *P_wfinddata64_t;

struct _wfinddata64_t {
    uint attrib;
    __time64_t time_create;
    __time64_t time_access;
    __time64_t time_write;
    longlong size;
    wchar_t name[260];
};

typedef struct _wfinddata64i32_t _wfinddata64i32_t, *P_wfinddata64i32_t;

struct _wfinddata64i32_t {
    uint attrib;
    __time64_t time_create;
    __time64_t time_access;
    __time64_t time_write;
    _fsize_t size;
    wchar_t name[260];
};

#define IP_ADDR_ADDED 11023

#define IP_ADDR_DELETED 11019

#define IP_BAD_DESTINATION 11018

#define IP_BAD_HEADER 11042

#define IP_BAD_OPTION 11007

#define IP_BAD_REQ 11011

#define IP_BAD_ROUTE 11012

#define IP_BIND_ADAPTER 11026

#define IP_BUF_TOO_SMALL 11001

#define IP_DEST_ADDR_UNREACHABLE 11003

#define IP_DEST_HOST_UNREACHABLE 11003

#define IP_DEST_NET_UNREACHABLE 11002

#define IP_DEST_NO_ROUTE 11002

#define IP_DEST_PORT_UNREACHABLE 11005

#define IP_DEST_PROHIBITED 11004

#define IP_DEST_PROT_UNREACHABLE 11004

#define IP_DEST_SCOPE_MISMATCH 11045

#define IP_DEST_UNREACHABLE 11040

#define IP_DEVICE_DOES_NOT_EXIST 11028

#define IP_DUPLICATE_ADDRESS 11029

#define IP_DUPLICATE_IPADD 11034

#define IP_EXPORT_INCLUDED 1

#define IP_FLAG_DF 2

#define IP_FLAG_REVERSE 1

#define IP_GENERAL_FAILURE 11050

#define IP_HOP_LIMIT_EXCEEDED 11013

#define IP_HW_ERROR 11008

#define IP_ICMP_ERROR 11044

#define IP_INTERFACE_METRIC_CHANGE 11030

#define IP_INTERFACE_WOL_CAPABILITY_CHANGE 11033

#define IP_MEDIA_CONNECT 11024

#define IP_MEDIA_DISCONNECT 11025

#define IP_MTU_CHANGE 11021

#define IP_NEGOTIATING_IPSEC 11032

#define IP_NO_RESOURCES 11006

#define IP_OPT_EOL 0

#define IP_OPT_LSRR 131

#define IP_OPT_NOP 1

#define IP_OPT_ROUTER_ALERT 148

#define IP_OPT_RR 7

#define IP_OPT_SECURITY 130

#define IP_OPT_SID 136

#define IP_OPT_SSRR 137

#define IP_OPT_TS 68

#define IP_OPTION_TOO_BIG 11017

#define IP_PACKET_TOO_BIG 11009

#define IP_PARAM_PROBLEM 11015

#define IP_PARAMETER_PROBLEM 11015

#define IP_PENDING 11255

#define IP_REASSEMBLY_TIME_EXCEEDED 11014

#define IP_RECONFIG_SECFLTR 11031

#define IP_REQ_TIMED_OUT 11010

#define IP_SOURCE_QUENCH 11016

#define IP_SPEC_MTU_CHANGE 11020

#define IP_STATUS_BASE 11000

#define IP_SUCCESS 0

#define IP_TIME_EXCEEDED 11041

#define IP_TTL_EXPIRED_REASSEM 11014

#define IP_TTL_EXPIRED_TRANSIT 11013

#define IP_UNBIND_ADAPTER 11027

#define IP_UNLOAD 11022

#define IP_UNRECOGNIZED_NEXT_HEADER 11043

#define MAX_ADAPTER_NAME 128

#define MAX_IP_STATUS 11050

#define MAX_OPT_SIZE 40

typedef struct _IP_ADAPTER_INDEX_MAP _IP_ADAPTER_INDEX_MAP, *P_IP_ADAPTER_INDEX_MAP;

struct _IP_ADAPTER_INDEX_MAP {
    ULONG Index;
    WCHAR Name[128];
};

typedef struct _IP_ADAPTER_ORDER_MAP _IP_ADAPTER_ORDER_MAP, *P_IP_ADAPTER_ORDER_MAP;

struct _IP_ADAPTER_ORDER_MAP {
    ULONG NumAdapters;
    ULONG AdapterOrder[1];
};

typedef struct _IP_INTERFACE_INFO _IP_INTERFACE_INFO, *P_IP_INTERFACE_INFO;

typedef struct _IP_ADAPTER_INDEX_MAP IP_ADAPTER_INDEX_MAP;

struct _IP_INTERFACE_INFO {
    LONG NumAdapters;
    IP_ADAPTER_INDEX_MAP Adapter[1];
};

typedef struct _IP_MCAST_COUNTER_INFO _IP_MCAST_COUNTER_INFO, *P_IP_MCAST_COUNTER_INFO;

struct _IP_MCAST_COUNTER_INFO {
    ULONG64 InMcastOctets;
    ULONG64 OutMcastOctets;
    ULONG64 InMcastPkts;
    ULONG64 OutMcastPkts;
};

typedef struct _IP_UNIDIRECTIONAL_ADAPTER_ADDRESS _IP_UNIDIRECTIONAL_ADAPTER_ADDRESS, *P_IP_UNIDIRECTIONAL_ADAPTER_ADDRESS;

typedef ULONG IPAddr;

struct _IP_UNIDIRECTIONAL_ADAPTER_ADDRESS {
    ULONG NumAdapters;
    IPAddr Address[1];
};

typedef struct _IPV6_ADDRESS_EX _IPV6_ADDRESS_EX, *P_IPV6_ADDRESS_EX;

struct _IPV6_ADDRESS_EX {
    USHORT sin6_port;
    ULONG sin6_flowinfo;
    USHORT sin6_addr[8];
    ULONG sin6_scope_id;
};

typedef struct arp_send_reply arp_send_reply, *Parp_send_reply;

typedef struct arp_send_reply ARP_SEND_REPLY;

struct arp_send_reply {
    IPAddr DestAddress;
    IPAddr SrcAddress;
};

typedef struct icmp_echo_reply icmp_echo_reply, *Picmp_echo_reply;

typedef struct icmp_echo_reply ICMP_ECHO_REPLY;

typedef struct ip_option_information ip_option_information, *Pip_option_information;

struct ip_option_information {
    UCHAR Ttl;
    UCHAR Tos;
    UCHAR Flags;
    UCHAR OptionsSize;
    PUCHAR OptionsData;
};

struct icmp_echo_reply {
    IPAddr Address;
    ULONG Status;
    ULONG RoundTripTime;
    USHORT DataSize;
    USHORT Reserved;
    PVOID Data;
    struct ip_option_information Options;
};

typedef struct icmpv6_echo_reply_lh icmpv6_echo_reply_lh, *Picmpv6_echo_reply_lh;

typedef struct icmpv6_echo_reply_lh ICMPV6_ECHO_REPLY_LH;

typedef ICMPV6_ECHO_REPLY_LH ICMPV6_ECHO_REPLY;

typedef struct _IPV6_ADDRESS_EX IPV6_ADDRESS_EX;

struct icmpv6_echo_reply_lh {
    IPV6_ADDRESS_EX Address;
    ULONG Status;
    uint RoundTripTime;
};

typedef struct _IP_ADAPTER_ORDER_MAP IP_ADAPTER_ORDER_MAP;

typedef struct _IP_INTERFACE_INFO IP_INTERFACE_INFO;

typedef struct _IP_MCAST_COUNTER_INFO IP_MCAST_COUNTER_INFO;

typedef struct ip_option_information IP_OPTION_INFORMATION;

typedef ULONG IP_STATUS;

typedef struct _IP_UNIDIRECTIONAL_ADAPTER_ADDRESS IP_UNIDIRECTIONAL_ADAPTER_ADDRESS;

typedef ULONG IPMask;

typedef struct in6_addr IPv6Addr;

typedef struct arp_send_reply * PARP_SEND_REPLY;

typedef struct icmp_echo_reply * PICMP_ECHO_REPLY;

typedef ICMPV6_ECHO_REPLY_LH * PICMPV6_ECHO_REPLY;

typedef struct icmpv6_echo_reply_lh * PICMPV6_ECHO_REPLY_LH;

typedef struct _IP_ADAPTER_INDEX_MAP * PIP_ADAPTER_INDEX_MAP;

typedef struct _IP_ADAPTER_ORDER_MAP * PIP_ADAPTER_ORDER_MAP;

typedef struct _IP_INTERFACE_INFO * PIP_INTERFACE_INFO;

typedef struct _IP_MCAST_COUNTER_INFO * PIP_MCAST_COUNTER_INFO;

typedef struct ip_option_information * PIP_OPTION_INFORMATION;

typedef struct _IP_UNIDIRECTIONAL_ADAPTER_ADDRESS * PIP_UNIDIRECTIONAL_ADAPTER_ADDRESS;

typedef struct _IPV6_ADDRESS_EX * PIPV6_ADDRESS_EX;

typedef struct tcp_reserve_port_range tcp_reserve_port_range, *Ptcp_reserve_port_range;

typedef struct tcp_reserve_port_range * PTCP_RESERVE_PORT_RANGE;

struct tcp_reserve_port_range {
    USHORT UpperRange;
    USHORT LowerRange;
};

typedef struct tcp_reserve_port_range TCP_RESERVE_PORT_RANGE;

#define IF_ADMIN_STATUS_DOWN 2

#define IF_ADMIN_STATUS_TESTING 3

#define IF_ADMIN_STATUS_UP 1

#define IF_CHECK_MCAST 1

#define IF_CHECK_NONE 0

#define IF_CHECK_SEND 2

#define IF_CONNECTION_DEDICATED 1

#define IF_CONNECTION_DEMAND 3

#define IF_CONNECTION_PASSIVE 2

#define IF_TYPE_A12MPPSWITCH 130

#define IF_TYPE_AAL2 187

#define IF_TYPE_AAL5 49

#define IF_TYPE_ADSL 94

#define IF_TYPE_AFLANE_8023 59

#define IF_TYPE_AFLANE_8025 60

#define IF_TYPE_ARAP 88

#define IF_TYPE_ARCNET 35

#define IF_TYPE_ARCNET_PLUS 36

#define IF_TYPE_ASYNC 84

#define IF_TYPE_ATM 37

#define IF_TYPE_ATM_DXI 105

#define IF_TYPE_ATM_FUNI 106

#define IF_TYPE_ATM_IMA 107

#define IF_TYPE_ATM_LOGICAL 80

#define IF_TYPE_ATM_RADIO 189

#define IF_TYPE_ATM_SUBINTERFACE 134

#define IF_TYPE_ATM_VCI_ENDPT 194

#define IF_TYPE_ATM_VIRTUAL 149

#define IF_TYPE_BASIC_ISDN 20

#define IF_TYPE_BGP_POLICY_ACCOUNTING 162

#define IF_TYPE_BSC 83

#define IF_TYPE_CCTEMUL 61

#define IF_TYPE_CES 133

#define IF_TYPE_CHANNEL 70

#define IF_TYPE_CNR 85

#define IF_TYPE_COFFEE 132

#define IF_TYPE_COMPOSITELINK 155

#define IF_TYPE_DCN 141

#define IF_TYPE_DDN_X25 4

#define IF_TYPE_DIGITAL_WRAPPER_OVERHEAD_CHANNEL 186

#define IF_TYPE_DIGITALPOWERLINE 138

#define IF_TYPE_DLSW 74

#define IF_TYPE_DOCSCABLE_DOWNSTREAM 128

#define IF_TYPE_DOCSCABLE_MACLAYER 127

#define IF_TYPE_DOCSCABLE_UPSTREAM 129

#define IF_TYPE_DS0 81

#define IF_TYPE_DS0_BUNDLE 82

#define IF_TYPE_DS1 18

#define IF_TYPE_DS1_FDL 170

#define IF_TYPE_DS3 30

#define IF_TYPE_DTM 140

#define IF_TYPE_DVB_ASI_IN 172

#define IF_TYPE_DVB_ASI_OUT 173

#define IF_TYPE_DVBRCC_DOWNSTREAM 147

#define IF_TYPE_DVBRCC_MACLAYER 146

#define IF_TYPE_DVBRCC_UPSTREAM 148

#define IF_TYPE_E1 19

#define IF_TYPE_EON 25

#define IF_TYPE_EPLRS 87

#define IF_TYPE_ESCON 73

#define IF_TYPE_ETHERNET_3MBIT 26

#define IF_TYPE_ETHERNET_CSMACD 6

#define IF_TYPE_FAST 125

#define IF_TYPE_FASTETHER 62

#define IF_TYPE_FASTETHER_FX 69

#define IF_TYPE_FDDI 15

#define IF_TYPE_FIBRECHANNEL 56

#define IF_TYPE_FR_DLCI_ENDPT 193

#define IF_TYPE_FR_FORWARD 158

#define IF_TYPE_FRAMERELAY 32

#define IF_TYPE_FRAMERELAY_INTERCONNECT 58

#define IF_TYPE_FRAMERELAY_MPI 92

#define IF_TYPE_FRAMERELAY_SERVICE 44

#define IF_TYPE_FRF16_MFR_BUNDLE 163

#define IF_TYPE_G703_2MB 67

#define IF_TYPE_G703_64K 66

#define IF_TYPE_GIGABITETHERNET 117

#define IF_TYPE_GR303_IDT 178

#define IF_TYPE_GR303_RDT 177

#define IF_TYPE_H323_GATEKEEPER 164

#define IF_TYPE_H323_PROXY 165

#define IF_TYPE_HDH_1822 3

#define IF_TYPE_HDLC 118

#define IF_TYPE_HDSL2 168

#define IF_TYPE_HIPERLAN2 183

#define IF_TYPE_HIPPI 47

#define IF_TYPE_HIPPIINTERFACE 57

#define IF_TYPE_HOSTPAD 90

#define IF_TYPE_HSSI 46

#define IF_TYPE_HYPERCHANNEL 14

#define IF_TYPE_IBM370PARCHAN 72

#define IF_TYPE_IDSL 154

#define IF_TYPE_IEEE1394 144

#define IF_TYPE_IEEE80211 71

#define IF_TYPE_IEEE80212 55

#define IF_TYPE_IEEE80216_WMAN 237

#define IF_TYPE_IEEE8023AD_LAG 161

#define IF_TYPE_IF_GSN 145

#define IF_TYPE_IMT 190

#define IF_TYPE_INTERLEAVE 124

#define IF_TYPE_IP 126

#define IF_TYPE_IPFORWARD 142

#define IF_TYPE_IPOVER_ATM 114

#define IF_TYPE_IPOVER_CDLC 109

#define IF_TYPE_IPOVER_CLAW 110

#define IF_TYPE_IPSWITCH 78

#define IF_TYPE_IS088023_CSMACD 7

#define IF_TYPE_ISDN 63

#define IF_TYPE_ISDN_S 75

#define IF_TYPE_ISDN_U 76

#define IF_TYPE_ISO88022_LLC 41

#define IF_TYPE_ISO88024_TOKENBUS 8

#define IF_TYPE_ISO88025_CRFPRINT 98

#define IF_TYPE_ISO88025_FIBER 115

#define IF_TYPE_ISO88025_TOKENRING 9

#define IF_TYPE_ISO88025R_DTR 86

#define IF_TYPE_ISO88026_MAN 10

#define IF_TYPE_ISUP 179

#define IF_TYPE_L2_VLAN 135

#define IF_TYPE_L3_IPVLAN 136

#define IF_TYPE_L3_IPXVLAN 137

#define IF_TYPE_LAP_B 16

#define IF_TYPE_LAP_D 77

#define IF_TYPE_LAP_F 119

#define IF_TYPE_LOCALTALK 42

#define IF_TYPE_MEDIAMAILOVERIP 139

#define IF_TYPE_MF_SIGLINK 167

#define IF_TYPE_MIO_X25 38

#define IF_TYPE_MODEM 48

#define IF_TYPE_MPC 113

#define IF_TYPE_MPLS 166

#define IF_TYPE_MPLS_TUNNEL 150

#define IF_TYPE_MSDSL 143

#define IF_TYPE_MVL 191

#define IF_TYPE_MYRINET 99

#define IF_TYPE_NFAS 175

#define IF_TYPE_NSIP 27

#define IF_TYPE_OPTICAL_CHANNEL 195

#define IF_TYPE_OPTICAL_TRANSPORT 196

#define IF_TYPE_OTHER 1

#define IF_TYPE_PARA 34

#define IF_TYPE_PLC 174

#define IF_TYPE_POS 171

#define IF_TYPE_PPP 23

#define IF_TYPE_PPPMULTILINKBUNDLE 108

#define IF_TYPE_PRIMARY_ISDN 21

#define IF_TYPE_PROP_BWA_P2MP 184

#define IF_TYPE_PROP_CNLS 89

#define IF_TYPE_PROP_DOCS_WIRELESS_DOWNSTREAM 181

#define IF_TYPE_PROP_DOCS_WIRELESS_MACLAYER 180

#define IF_TYPE_PROP_DOCS_WIRELESS_UPSTREAM 182

#define IF_TYPE_PROP_MULTIPLEXOR 54

#define IF_TYPE_PROP_POINT2POINT_SERIAL 22

#define IF_TYPE_PROP_VIRTUAL 53

#define IF_TYPE_PROP_WIRELESS_P2P 157

#define IF_TYPE_PROTEON_10MBIT 12

#define IF_TYPE_PROTEON_80MBIT 13

#define IF_TYPE_QLLC 68

#define IF_TYPE_RADIO_MAC 188

#define IF_TYPE_RADSL 95

#define IF_TYPE_REACH_DSL 192

#define IF_TYPE_REGULAR_1822 2

#define IF_TYPE_RFC1483 159

#define IF_TYPE_RFC877_X25 5

#define IF_TYPE_RS232 33

#define IF_TYPE_RSRB 79

#define IF_TYPE_SDLC 17

#define IF_TYPE_SDSL 96

#define IF_TYPE_SHDSL 169

#define IF_TYPE_SIP 31

#define IF_TYPE_SLIP 28

#define IF_TYPE_SMDS_DXI 43

#define IF_TYPE_SMDS_ICIP 52

#define IF_TYPE_SOFTWARE_LOOPBACK 24

#define IF_TYPE_SONET 39

#define IF_TYPE_SONET_OVERHEAD_CHANNEL 185

#define IF_TYPE_SONET_PATH 50

#define IF_TYPE_SONET_VT 51

#define IF_TYPE_SRP 151

#define IF_TYPE_SS7_SIGLINK 156

#define IF_TYPE_STACKTOSTACK 111

#define IF_TYPE_STARLAN 11

#define IF_TYPE_TDLC 116

#define IF_TYPE_TERMPAD 91

#define IF_TYPE_TR008 176

#define IF_TYPE_TRANSPHDLC 123

#define IF_TYPE_TUNNEL 131

#define IF_TYPE_ULTRA 29

#define IF_TYPE_USB 160

#define IF_TYPE_V11 64

#define IF_TYPE_V35 45

#define IF_TYPE_V36 65

#define IF_TYPE_V37 120

#define IF_TYPE_VDSL 97

#define IF_TYPE_VIRTUALIPADDRESS 112

#define IF_TYPE_VOICE_EM 100

#define IF_TYPE_VOICE_ENCAP 103

#define IF_TYPE_VOICE_FXO 101

#define IF_TYPE_VOICE_FXS 102

#define IF_TYPE_VOICE_OVERIP 104

#define IF_TYPE_VOICEOVERATM 152

#define IF_TYPE_VOICEOVERFRAMERELAY 153

#define IF_TYPE_WWANPP 243

#define IF_TYPE_WWANPP2 244

#define IF_TYPE_X213 93

#define IF_TYPE_X25_HUNTGROUP 122

#define IF_TYPE_X25_MLP 121

#define IF_TYPE_X25_PLE 40

#define MAX_IF_TYPE 244

#define MIB_IF_ADMIN_STATUS_DOWN 2

#define MIB_IF_ADMIN_STATUS_TESTING 3

#define MIB_IF_ADMIN_STATUS_UP 1

#define MIB_IF_TYPE_ETHERNET 6

#define MIB_IF_TYPE_FDDI 15

#define MIB_IF_TYPE_LOOPBACK 24

#define MIB_IF_TYPE_OTHER 1

#define MIB_IF_TYPE_PPP 23

#define MIB_IF_TYPE_SLIP 28

#define MIB_IF_TYPE_TOKENRING 9

#define MIN_IF_TYPE 1

typedef enum _IF_ACCESS_TYPE {
    IF_ACCESS_BROADCAST=2,
    IF_ACCESS_LOOPBACK=1,
    IF_ACCESS_POINTTOMULTIPOINT=4,
    IF_ACCESS_POINTTOPOINT=3,
    IF_ACCESS_POINT_TO_MULTI_POINT=4,
    IF_ACCESS_POINT_TO_POINT=3
} _IF_ACCESS_TYPE;

typedef enum _INTERNAL_IF_OPER_STATUS {
    IF_OPER_STATUS_CONNECTED=4,
    IF_OPER_STATUS_CONNECTING=3,
    IF_OPER_STATUS_DISCONNECTED=2,
    IF_OPER_STATUS_NON_OPERATIONAL=0,
    IF_OPER_STATUS_OPERATIONAL=5,
    IF_OPER_STATUS_UNREACHABLE=1
} _INTERNAL_IF_OPER_STATUS;

typedef enum _IF_ACCESS_TYPE IF_ACCESS_TYPE;

typedef ULONG IFTYPE;

typedef enum _INTERNAL_IF_OPER_STATUS INTERNAL_IF_OPER_STATUS;

#define __FAVOR_ATOM 0

#define __FAVOR_ENFSTRG 1

typedef enum ISA_AVAILABILITY {
    __ISA_AVAILABLE_ARMNT=0,
    __ISA_AVAILABLE_AVX=3,
    __ISA_AVAILABLE_ENFSTRG=4,
    __ISA_AVAILABLE_NEON=1,
    __ISA_AVAILABLE_SSE2=1,
    __ISA_AVAILABLE_SSE42=2,
    __ISA_AVAILABLE_X86=0
} ISA_AVAILABILITY;

#define APC_LEVEL 1

#define DISPATCH_LEVEL 2

#define PASSIVE_LEVEL 0

typedef struct _OPM_ENCRYPTED_INITIALIZATION_PARAMETERS _OPM_ENCRYPTED_INITIALIZATION_PARAMETERS, *P_OPM_ENCRYPTED_INITIALIZATION_PARAMETERS;

struct _OPM_ENCRYPTED_INITIALIZATION_PARAMETERS {
    BYTE * abEncryptedInitializationParameters;
};

typedef struct _OPM_GET_CODEC_INFO_INFORMATION _OPM_GET_CODEC_INFO_INFORMATION, *P_OPM_GET_CODEC_INFO_INFORMATION;

typedef struct _OPM_RANDOM_NUMBER _OPM_RANDOM_NUMBER, *P_OPM_RANDOM_NUMBER;

typedef struct _OPM_RANDOM_NUMBER OPM_RANDOM_NUMBER;

struct _OPM_RANDOM_NUMBER {
    BYTE abRandomNumber[16];
};

struct _OPM_GET_CODEC_INFO_INFORMATION {
    OPM_RANDOM_NUMBER rnRandomNumber;
    DWORD Merit;
};

typedef struct _OPM_GET_CODEC_INFO_PARAMETERS _OPM_GET_CODEC_INFO_PARAMETERS, *P_OPM_GET_CODEC_INFO_PARAMETERS;

struct _OPM_GET_CODEC_INFO_PARAMETERS {
    DWORD cbVerifier;
    BYTE * Verifier;
};

typedef struct _OPM_GET_INFO_PARAMETERS _OPM_GET_INFO_PARAMETERS, *P_OPM_GET_INFO_PARAMETERS;

typedef struct _OPM_OMAC _OPM_OMAC, *P_OPM_OMAC;

typedef struct _OPM_OMAC OPM_OMAC;

struct _OPM_OMAC {
    BYTE * abOMAC;
};

struct _OPM_GET_INFO_PARAMETERS {
    OPM_OMAC omac;
    OPM_RANDOM_NUMBER rnRandomNumber;
    GUID guidInformation;
    ULONG ulSequenceNumber;
    ULONG cbParametersSize;
    BYTE * abParameters;
};

typedef struct _OPM_REQUESTED_INFORMATION _OPM_REQUESTED_INFORMATION, *P_OPM_REQUESTED_INFORMATION;

struct _OPM_REQUESTED_INFORMATION {
    OPM_OMAC omac;
    ULONG cbRequestedInformationSize;
    BYTE * abRequestedInformation;
};

typedef struct _OPM_STANDARD_INFORMATION _OPM_STANDARD_INFORMATION, *P_OPM_STANDARD_INFORMATION;

struct _OPM_STANDARD_INFORMATION {
    OPM_RANDOM_NUMBER rnRandomNumber;
    ULONG ulStatusFlags;
    ULONG ulInformation;
    ULONG ulReserved;
    ULONG ulReserved2;
};

typedef enum enum_5880 {
    KSMETHOD_OPMVIDEOOUTPUT_FINISHINITIALIZATION=1,
    KSMETHOD_OPMVIDEOOUTPUT_GETINFORMATION=2,
    KSMETHOD_OPMVIDEOOUTPUT_STARTINITIALIZATION=0
} enum_5880;

typedef enum enum_5882 {
    OPM_128_BIT_RANDOM_NUMBER_SIZE=16,
    OPM_BUS_IMPLEMENTATION_MODIFIER_MASK=32767,
    OPM_BUS_TYPE_MASK=65535,
    OPM_CONFIGURE_SETTING_DATA_SIZE=4056,
    OPM_ENCRYPTED_INITIALIZATION_PARAMETERS_SIZE=256,
    OPM_GET_INFORMATION_PARAMETERS_SIZE=4056,
    OPM_HDCP_KEY_SELECTION_VECTOR_SIZE=5,
    OPM_OMAC_SIZE=16,
    OPM_PROTECTION_TYPE_SIZE=4,
    OPM_REQUESTED_INFORMATION_SIZE=4076
} enum_5882;

typedef enum enum_5880 KSMETHOD_OPMVIDEOOUTPUT;

typedef struct _OPM_ENCRYPTED_INITIALIZATION_PARAMETERS OPM_ENCRYPTED_INITIALIZATION_PARAMETERS;

typedef struct _OPM_GET_CODEC_INFO_INFORMATION OPM_GET_CODEC_INFO_INFORMATION;

typedef struct _OPM_GET_CODEC_INFO_PARAMETERS OPM_GET_CODEC_INFO_PARAMETERS;

typedef struct _OPM_GET_INFO_PARAMETERS OPM_GET_INFO_PARAMETERS;

typedef struct _OPM_REQUESTED_INFORMATION OPM_REQUESTED_INFORMATION;

typedef struct _OPM_STANDARD_INFORMATION OPM_STANDARD_INFORMATION;

typedef struct _OPM_RANDOM_NUMBER * POPM_RANDOM_NUMBER;

#define CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO 2

#define CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY 1

#define CRM_PROTOCOL_MAXIMUM_OPTION 3

#define ENLISTMENT_MAXIMUM_OPTION 1

#define ENLISTMENT_SUPERIOR 1

#define KTM_MARSHAL_BLOB_VERSION_MAJOR 1

#define KTM_MARSHAL_BLOB_VERSION_MINOR 1

#define MAX_RESOURCEMANAGER_DESCRIPTION_LENGTH 64

#define MAX_TRANSACTION_DESCRIPTION_LENGTH 64

#define RESOURCE_MANAGER_COMMUNICATION 2

#define RESOURCE_MANAGER_MAXIMUM_OPTION 3

#define RESOURCE_MANAGER_VOLATILE 1

#define TRANSACTION_DO_NOT_PROMOTE 1

#define TRANSACTION_MANAGER_COMMIT_DEFAULT 0

#define TRANSACTION_MANAGER_COMMIT_LOWEST 8

#define TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES 4

#define TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME 2

#define TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS 32

#define TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY 16

#define TRANSACTION_MANAGER_MAXIMUM_OPTION 63

#define TRANSACTION_MANAGER_VOLATILE 1

#define TRANSACTION_MAXIMUM_OPTION 1

#define TRANSACTION_NOTIFICATION_TM_ONLINE_FLAG_IS_CLUSTERED 1

#define TRANSACTION_NOTIFY_COMMIT 4

#define TRANSACTION_NOTIFY_COMMIT_COMPLETE 64

#define TRANSACTION_NOTIFY_COMMIT_FINALIZE 1073741824

#define TRANSACTION_NOTIFY_COMMIT_REQUEST 67108864

#define TRANSACTION_NOTIFY_DELEGATE_COMMIT 1024

#define TRANSACTION_NOTIFY_ENLIST_MASK 262144

#define TRANSACTION_NOTIFY_ENLIST_PREPREPARE 4096

#define TRANSACTION_NOTIFY_INDOUBT 16384

#define TRANSACTION_NOTIFY_LAST_RECOVER 8192

#define TRANSACTION_NOTIFY_MARSHAL 131072

#define TRANSACTION_NOTIFY_MASK 1073741823

#define TRANSACTION_NOTIFY_PREPARE 2

#define TRANSACTION_NOTIFY_PREPARE_COMPLETE 32

#define TRANSACTION_NOTIFY_PREPREPARE 1

#define TRANSACTION_NOTIFY_PREPREPARE_COMPLETE 16

#define TRANSACTION_NOTIFY_PROMOTE 134217728

#define TRANSACTION_NOTIFY_PROMOTE_NEW 268435456

#define TRANSACTION_NOTIFY_PROPAGATE_PULL 32768

#define TRANSACTION_NOTIFY_PROPAGATE_PUSH 65536

#define TRANSACTION_NOTIFY_RECOVER 256

#define TRANSACTION_NOTIFY_RECOVER_QUERY 2048

#define TRANSACTION_NOTIFY_REQUEST_OUTCOME 536870912

#define TRANSACTION_NOTIFY_RM_DISCONNECTED 16777216

#define TRANSACTION_NOTIFY_ROLLBACK 8

#define TRANSACTION_NOTIFY_ROLLBACK_COMPLETE 128

#define TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT 512

#define TRANSACTION_NOTIFY_TM_ONLINE 33554432

typedef struct _KCRM_MARSHAL_HEADER _KCRM_MARSHAL_HEADER, *P_KCRM_MARSHAL_HEADER;

struct _KCRM_MARSHAL_HEADER {
    ULONG VersionMajor;
    ULONG VersionMinor;
    ULONG NumProtocols;
    ULONG Unused;
};

typedef struct _KCRM_PROTOCOL_BLOB _KCRM_PROTOCOL_BLOB, *P_KCRM_PROTOCOL_BLOB;

typedef GUID CRM_PROTOCOL_ID;

struct _KCRM_PROTOCOL_BLOB {
    CRM_PROTOCOL_ID ProtocolId;
    ULONG StaticInfoLength;
    ULONG TransactionIdInfoLength;
    ULONG Unused1;
    ULONG Unused2;
};

typedef struct _KCRM_TRANSACTION_BLOB _KCRM_TRANSACTION_BLOB, *P_KCRM_TRANSACTION_BLOB;

typedef GUID UOW;

struct _KCRM_TRANSACTION_BLOB {
    UOW UOW;
    GUID TmIdentity;
    ULONG IsolationLevel;
    ULONG IsolationFlags;
    ULONG Timeout;
    WCHAR Description[64];
};

typedef struct _TRANSACTION_NOTIFICATION _TRANSACTION_NOTIFICATION, *P_TRANSACTION_NOTIFICATION;

struct _TRANSACTION_NOTIFICATION {
    PVOID TransactionKey;
    ULONG TransactionNotification;
    LARGE_INTEGER TmVirtualClock;
    ULONG ArgumentLength;
};

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *P_TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;

struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT {
    ULONG MarshalCookie;
    GUID UOW;
};

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *P_TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;

struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT {
    ULONG PropagationCookie;
    GUID UOW;
    GUID TmIdentity;
    ULONG BufferLength;
};

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *P_TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;

struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT {
    GUID EnlistmentId;
    UOW UOW;
};

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *P_TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;

typedef ULONG SAVEPOINT_ID;

struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT {
    SAVEPOINT_ID SavepointId;
};

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *P_TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;

struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT {
    GUID TmIdentity;
    ULONG Flags;
};

typedef struct _KCRM_MARSHAL_HEADER KCRM_MARSHAL_HEADER;

typedef struct _KCRM_PROTOCOL_BLOB KCRM_PROTOCOL_BLOB;

typedef struct _KCRM_TRANSACTION_BLOB KCRM_TRANSACTION_BLOB;

typedef ULONG NOTIFICATION_MASK;

typedef GUID * PCRM_PROTOCOL_ID;

typedef struct _KCRM_MARSHAL_HEADER * PKCRM_MARSHAL_HEADER;

typedef struct _KCRM_PROTOCOL_BLOB * PKCRM_PROTOCOL_BLOB;

typedef struct _KCRM_TRANSACTION_BLOB * PKCRM_TRANSACTION_BLOB;

typedef struct _KCRM_MARSHAL_HEADER * PRKCRM_MARSHAL_HEADER;

typedef struct _KCRM_PROTOCOL_BLOB * PRKCRM_PROTOCOL_BLOB;

typedef struct _KCRM_TRANSACTION_BLOB * PRKCRM_TRANSACTION_BLOB;

typedef ULONG * PSAVEPOINT_ID;

typedef struct _TRANSACTION_NOTIFICATION * PTRANSACTION_NOTIFICATION;

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT * PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;

typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT * PTRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT * PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT * PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT * PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT * PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;

typedef GUID * PUOW;

typedef struct _TRANSACTION_NOTIFICATION TRANSACTION_NOTIFICATION;

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;

typedef TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT TRANSACTION_NOTIFICATION_PROMOTE_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;

#define L2_NOTIFICATION_CODE_GROUP_SIZE 4096

#define L2_NOTIFICATION_CODE_PUBLIC_BEGIN 0

#define L2_NOTIFICATION_CODE_V2_BEGIN 4096

#define L2_NOTIFICATION_SOURCE_ALL 65535

#define L2_NOTIFICATION_SOURCE_DOT3_AUTO_CONFIG 1

#define L2_NOTIFICATION_SOURCE_NONE 0

#define L2_NOTIFICATION_SOURCE_ONEX 4

#define L2_NOTIFICATION_SOURCE_SECURITY 2

#define L2_NOTIFICATION_SOURCE_WLAN_ACM 8

#define L2_NOTIFICATION_SOURCE_WLAN_HNWK 128

#define L2_NOTIFICATION_SOURCE_WLAN_IHV 64

#define L2_NOTIFICATION_SOURCE_WLAN_MSM 16

#define L2_NOTIFICATION_SOURCE_WLAN_SECURITY 32

#define L2_PROFILE_MAX_NAME_LENGTH 256

#define L2_REASON_CODE_DOT11_AC_BASE 131072

#define L2_REASON_CODE_DOT11_MSM_BASE 196608

#define L2_REASON_CODE_DOT11_SECURITY_BASE 262144

#define L2_REASON_CODE_DOT3_AC_BASE 393216

#define L2_REASON_CODE_DOT3_MSM_BASE 458752

#define L2_REASON_CODE_GEN_BASE 65536

#define L2_REASON_CODE_GROUP_SIZE 65536

#define L2_REASON_CODE_IHV_BASE 589824

#define L2_REASON_CODE_ONEX_BASE 327680

#define L2_REASON_CODE_PROFILE_BASE 524288

#define L2_REASON_CODE_PROFILE_MISSING 1

#define L2_REASON_CODE_SUCCESS 0

#define L2_REASON_CODE_UNKNOWN 65537

#define L2_REASON_CODE_WIMAX_BASE 655360

typedef struct _L2_NOTIFICATION_DATA _L2_NOTIFICATION_DATA, *P_L2_NOTIFICATION_DATA;

struct _L2_NOTIFICATION_DATA {
    DWORD NotificationSource;
    DWORD NotificationCode;
    GUID InterfaceGuid;
    DWORD dwDataSize;
    PVOID pData;
};

typedef struct _L2_NOTIFICATION_DATA L2_NOTIFICATION_DATA;

typedef struct _L2_NOTIFICATION_DATA * PL2_NOTIFICATION_DATA;

#define CHAR_BIT 8

#define CHAR_MAX 127

#define CHAR_MIN -128

#define INT_MAX 2147483647

#define INT_MIN -2147483648

#define LONG_MAX 2147483647

#define LONG_MIN -2147483648

#define MB_LEN_MAX 5

#define RSIZE_MAX 2147483647

#define SCHAR_MAX 127

#define SCHAR_MIN -128

#define SHRT_MAX 32767

#define SHRT_MIN -32768

#define SIZE_MAX 4294967295

#define UCHAR_MAX 255

#define UINT_MAX 4294967295

#define ULONG_MAX 4294967295

#define USHRT_MAX 65535

#define ALERTSZ 128

#define CLTYPE_LEN 12

#define CNLEN 15

#define CRYPT_KEY_LEN 7

#define CRYPT_TXT_LEN 8

#define DEVLEN 80

#define DNLEN 15

#define ENCRYPTED_PWLEN 16

#define EVLEN 16

#define GNLEN 256

#define LM20_CNLEN 15

#define LM20_DEVLEN 8

#define LM20_DNLEN 15

#define LM20_GNLEN 20

#define LM20_MAXCOMMENTSZ 48

#define LM20_NNLEN 12

#define LM20_PATHLEN 256

#define LM20_PWLEN 14

#define LM20_QNLEN 12

#define LM20_RMLEN 30

#define LM20_SNLEN 15

#define LM20_STXTLEN 63

#define LM20_UNCLEN 17

#define LM20_UNLEN 20

#define MAX_LANMAN_MESSAGE_ID 5899

#define MAX_PREFERRED_LENGTH -1

#define MAXCOMMENTSZ 256

#define MIN_LANMAN_MESSAGE_ID 2100

#define NETBIOS_NAME_LEN 16

#define PARM_ERROR_NONE 0

#define PARM_ERROR_UNKNOWN -1

#define PARMNUM_ALL 0

#define PARMNUM_BASE_INFOLEVEL 1000

#define PATHLEN 256

#define PLATFORM_ID_DOS 300

#define PLATFORM_ID_NT 500

#define PLATFORM_ID_OS2 400

#define PLATFORM_ID_OSF 600

#define PLATFORM_ID_VMS 700

#define PWLEN 256

#define QNLEN 80

#define RMLEN 98

#define SESSION_CRYPT_KLEN 21

#define SESSION_PWLEN 24

#define SHPWLEN 8

#define SNLEN 80

#define STXTLEN 256

#define UNCLEN 17

#define UNLEN 256

#define MAX_NERR 2999

#define NERR_AccountExpired 2239

#define NERR_AccountLockedOut 2702

#define NERR_AccountUndefined 2238

#define NERR_AcctLimitExceeded 2434

#define NERR_ACFFileIOFail 2229

#define NERR_ACFNoParent 2232

#define NERR_ACFNoRoom 2228

#define NERR_ACFNotFound 2219

#define NERR_ACFNotLoaded 2227

#define NERR_ACFTooManyLists 2230

#define NERR_ActiveConns 2402

#define NERR_AddForwarded 2275

#define NERR_AlertExists 2430

#define NERR_AlreadyExists 2276

#define NERR_AlreadyForwarded 2274

#define NERR_AlreadyLoggedOn 2200

#define NERR_BadAsgType 2251

#define NERR_BadComponent 2356

#define NERR_BadControlRecv 2193

#define NERR_BadDest 2382

#define NERR_BadDev 2341

#define NERR_BadDevString 2340

#define NERR_BadDomainJoinInfo 2712

#define NERR_BadDosFunction 2502

#define NERR_BadDosRetCode 2500

#define NERR_BadEventName 2143

#define NERR_BadFileCheckSum 2504

#define NERR_BadOfflineJoinInfo 2710

#define NERR_BadPassword 2203

#define NERR_BadPasswordCore 2403

#define NERR_BadQueueDevString 2334

#define NERR_BadQueuePriority 2335

#define NERR_BadReceive 2282

#define NERR_BadRecipient 2433

#define NERR_BadServiceName 2185

#define NERR_BadServiceProgName 2188

#define NERR_BadSource 2381

#define NERR_BadTransactConfig 2141

#define NERR_BadUasConfig 2450

#define NERR_BadUsername 2202

#define NERR_BASE 2100

#define NERR_BrowserConfiguredToNotRun 2550

#define NERR_BrowserNotStarted 2139

#define NERR_BrowserTableIncomplete 2319

#define NERR_BufTooSmall 2123

#define NERR_CallingRplSrvr 2515

#define NERR_CanNotGrowSegment 2233

#define NERR_CanNotGrowUASFile 2456

#define NERR_CantConnectRplSrvr 2513

#define NERR_CantCreateJoinInfo 2711

#define NERR_CantLoadOfflineHive 2717

#define NERR_CantOpenImageFile 2514

#define NERR_CantType 2357

#define NERR_CantVerifyHostname 2716

#define NERR_CfgCompNotFound 2146

#define NERR_CfgParamNotFound 2147

#define NERR_ClientNameNotFound 2312

#define NERR_CommDevInUse 2343

#define NERR_ComputerAccountNotFound 2697

#define NERR_ConnectionInsecure 2718

#define NERR_DatabaseUpToDate 2248

#define NERR_DataTypeInvalid 2167

#define NERR_DCNotFound 2453

#define NERR_DefaultJoinRequired 2694

#define NERR_DelComputerName 2278

#define NERR_DeleteLater 2298

#define NERR_DestExists 2153

#define NERR_DestIdle 2158

#define NERR_DestInvalidOp 2159

#define NERR_DestInvalidState 2162

#define NERR_DestNoRoom 2157

#define NERR_DestNotFound 2152

#define NERR_DeviceIsShared 2252

#define NERR_DeviceNotShared 2311

#define NERR_DeviceShareConflict 2318

#define NERR_DevInUse 2404

#define NERR_DevInvalidOpCode 2331

#define NERR_DevNotFound 2332

#define NERR_DevNotOpen 2333

#define NERR_DevNotRedirected 2107

#define NERR_DfsAlreadyShared 2664

#define NERR_DfsBadRenamePath 2671

#define NERR_DfsCantCreateJunctionPoint 2669

#define NERR_DfsCantRemoveDfsRoot 2682

#define NERR_DfsCantRemoveLastServerShare 2677

#define NERR_DfsChildOrParentInDfs 2683

#define NERR_DfsCyclicalName 2674

#define NERR_DfsDataIsIdentical 2681

#define NERR_DfsDuplicateService 2676

#define NERR_DfsInconsistent 2679

#define NERR_DfsInternalCorruption 2660

#define NERR_DfsInternalError 2690

#define NERR_DfsLeafVolume 2667

#define NERR_DfsNoSuchServer 2673

#define NERR_DfsNoSuchShare 2665

#define NERR_DfsNoSuchVolume 2662

#define NERR_DfsNotALeafVolume 2666

#define NERR_DfsNotSupportedInServerDfs 2675

#define NERR_DfsServerNotDfsAware 2670

#define NERR_DfsServerUpgraded 2680

#define NERR_DfsVolumeAlreadyExists 2663

#define NERR_DfsVolumeDataCorrupt 2661

#define NERR_DfsVolumeHasMultipleServers 2668

#define NERR_DfsVolumeIsInterDfs 2678

#define NERR_DfsVolumeIsOffline 2672

#define NERR_DifferentServers 2383

#define NERR_DriverNotFound 2166

#define NERR_DuplicateName 2297

#define NERR_DuplicateShare 2118

#define NERR_DupNameReboot 2144

#define NERR_ErrCommRunSrv 2389

#define NERR_ErrorExecingGhost 2391

#define NERR_ExecFailure 2315

#define NERR_FileIdNotFound 2314

#define NERR_GroupExists 2223

#define NERR_GroupNotFound 2220

#define NERR_GrpMsgProcessor 2280

#define NERR_ImageParamErr 2508

#define NERR_IncompleteDel 2299

#define NERR_InternalError 2140

#define NERR_InUseBySpooler 2342

#define NERR_InvalidAPI 2142

#define NERR_InvalidComputer 2351

#define NERR_InvalidDatabase 2247

#define NERR_InvalidDevice 2294

#define NERR_InvalidLana 2400

#define NERR_InvalidLogonHours 2241

#define NERR_InvalidLogSeek 2440

#define NERR_InvalidMaxUsers 2122

#define NERR_InvalidUASOp 2451

#define NERR_InvalidWorkgroupName 2695

#define NERR_InvalidWorkstation 2240

#define NERR_IsDfsShare 2321

#define NERR_ItemNotFound 2115

#define NERR_JobInvalidState 2164

#define NERR_JobNoRoom 2156

#define NERR_JobNotFound 2151

#define NERR_JoinPerformedMustRestart 2713

#define NERR_LanmanIniError 2131

#define NERR_LastAdmin 2452

#define NERR_LineTooLong 2149

#define NERR_LocalDrive 2405

#define NERR_LocalForward 2279

#define NERR_LogFileChanged 2378

#define NERR_LogFileCorrupt 2379

#define NERR_LogonDomainExists 2216

#define NERR_LogonNoUserPath 2211

#define NERR_LogonScriptError 2212

#define NERR_LogonServerConflict 2210

#define NERR_LogonServerNotFound 2215

#define NERR_LogonsPaused 2209

#define NERR_LogonTrackingError 2454

#define NERR_LogOverflow 2377

#define NERR_MaxLenExceeded 2354

#define NERR_MsgAlreadyStarted 2271

#define NERR_MsgInitFailed 2272

#define NERR_MsgNotStarted 2284

#define NERR_MultipleNets 2300

#define NERR_NameInUse 2283

#define NERR_NameNotForwarded 2288

#define NERR_NameNotFound 2273

#define NERR_NameUsesIncompatibleCodePage 2696

#define NERR_NetlogonNotStarted 2455

#define NERR_NetNameNotFound 2310

#define NERR_NetNotStarted 2102

#define NERR_NetworkError 2136

#define NERR_NoAlternateServers 2467

#define NERR_NoCommDevs 2337

#define NERR_NoComputerName 2270

#define NERR_NoForwardName 2286

#define NERR_NoJoinPending 2714

#define NERR_NonDosFloppyUsed 2510

#define NERR_NoNetworkResource 2105

#define NERR_NonValidatedLogon 2217

#define NERR_NoOfflineJoinInfo 2709

#define NERR_NoRoom 2119

#define NERR_NoRplBootSystem 2505

#define NERR_NoSuchAlert 2432

#define NERR_NoSuchConnection 2462

#define NERR_NoSuchServer 2460

#define NERR_NoSuchSession 2461

#define NERR_NotInCache 2235

#define NERR_NotInDispatchTbl 2192

#define NERR_NotLocalDomain 2320

#define NERR_NotLocalName 2285

#define NERR_NotLoggedOn 2201

#define NERR_NotPrimary 2226

#define NERR_OpenFiles 2401

#define NERR_PasswordCantChange 2243

#define NERR_PasswordExpired 2242

#define NERR_PasswordFilterError 2705

#define NERR_PasswordHistConflict 2244

#define NERR_PasswordMismatch 2458

#define NERR_PasswordMustChange 2701

#define NERR_PasswordNotComplexEnough 2704

#define NERR_PasswordTooLong 2703

#define NERR_PasswordTooRecent 2246

#define NERR_PasswordTooShort 2245

#define NERR_PausedRemote 2281

#define NERR_PersonalSku 2698

#define NERR_ProcNoRespond 2160

#define NERR_ProcNotFound 2168

#define NERR_ProfileCleanup 2372

#define NERR_ProfileFileTooBig 2370

#define NERR_ProfileLoadErr 2374

#define NERR_ProfileOffset 2371

#define NERR_ProfileSaveErr 2375

#define NERR_ProfileUnknownCmd 2373

#define NERR_ProgNeedsExtraMem 2501

#define NERR_ProvisioningBlobUnsupported 2719

#define NERR_QExists 2154

#define NERR_QInvalidState 2163

#define NERR_QNoRoom 2155

#define NERR_QNotFound 2150

#define NERR_QueueNotFound 2338

#define NERR_RedirectedPath 2117

#define NERR_RemoteBootFailed 2503

#define NERR_RemoteErr 2127

#define NERR_RemoteFull 2287

#define NERR_RemoteOnly 2106

#define NERR_ResourceExists 2225

#define NERR_ResourceNotFound 2222

#define NERR_RPL_CONNECTED 2519

#define NERR_RplAdapterInfoCorrupted 2625

#define NERR_RplAdapterNameUnavailable 2633

#define NERR_RplAdapterNotFound 2637

#define NERR_RplBackupDatabase 2636

#define NERR_RplBadDatabase 2612

#define NERR_RplBadRegistry 2611

#define NERR_RplBootInfoCorrupted 2628

#define NERR_RplBootInUse 2635

#define NERR_RplBootNameUnavailable 2640

#define NERR_RplBootNotFound 2631

#define NERR_RplBootRestart 2511

#define NERR_RplBootServiceTerm 2517

#define NERR_RplBootStartFailed 2518

#define NERR_RplCannotEnum 2615

#define NERR_RplConfigInfoCorrupted 2623

#define NERR_RplConfigNameUnavailable 2641

#define NERR_RplConfigNotEmpty 2634

#define NERR_RplConfigNotFound 2624

#define NERR_RplIncompatibleProfile 2632

#define NERR_RplInternal 2626

#define NERR_RplLoadrDiskErr 2507

#define NERR_RplLoadrNetBiosErr 2506

#define NERR_RplNeedsRPLUSERAcct 2630

#define NERR_RplNoAdaptersStarted 2610

#define NERR_RplNotRplServer 2614

#define NERR_RplProfileInfoCorrupted 2619

#define NERR_RplProfileNameUnavailable 2621

#define NERR_RplProfileNotEmpty 2622

#define NERR_RplProfileNotFound 2620

#define NERR_RplRplfilesShare 2613

#define NERR_RplSrvrCallFailed 2512

#define NERR_RplVendorInfoCorrupted 2627

#define NERR_RplVendorNameUnavailable 2639

#define NERR_RplVendorNotFound 2638

#define NERR_RplWkstaInfoCorrupted 2616

#define NERR_RplWkstaNameUnavailable 2618

#define NERR_RplWkstaNeedsUserAcct 2629

#define NERR_RplWkstaNotFound 2617

#define NERR_RunSrvPaused 2385

#define NERR_SameAsComputerName 2253

#define NERR_ServerNotStarted 2114

#define NERR_ServiceCtlBusy 2187

#define NERR_ServiceCtlNotValid 2191

#define NERR_ServiceCtlTimeout 2186

#define NERR_ServiceEntryLocked 2183

#define NERR_ServiceInstalled 2182

#define NERR_ServiceKillProc 2190

#define NERR_ServiceNotCtrl 2189

#define NERR_ServiceNotInstalled 2184

#define NERR_ServiceNotStarting 2194

#define NERR_ServiceTableFull 2181

#define NERR_ServiceTableLocked 2180

#define NERR_SetupAlreadyJoined 2691

#define NERR_SetupCheckDNSConfig 2699

#define NERR_SetupDomainController 2693

#define NERR_SetupNotJoined 2692

#define NERR_ShareMem 2104

#define NERR_ShareNotFound 2392

#define NERR_SourceIsDir 2380

#define NERR_SpeGroupOp 2234

#define NERR_SpoolerNotLoaded 2161

#define NERR_SpoolNoMemory 2165

#define NERR_StandaloneLogon 2214

#define NERR_StartingRplBoot 2516

#define NERR_Success 0

#define NERR_SyncRequired 2249

#define NERR_TimeDiffAtDC 2457

#define NERR_TmpFile 2316

#define NERR_TooManyAlerts 2431

#define NERR_TooManyConnections 2465

#define NERR_TooManyEntries 2362

#define NERR_TooManyFiles 2466

#define NERR_TooManyImageParams 2509

#define NERR_TooManyItems 2121

#define NERR_TooManyNames 2277

#define NERR_TooManyServers 2463

#define NERR_TooManySessions 2464

#define NERR_TooMuchData 2317

#define NERR_TruncatedBroadcast 2289

#define NERR_TryDownLevel 2470

#define NERR_UnableToAddName_F 2205

#define NERR_UnableToAddName_W 2204

#define NERR_UnableToDelName_F 2207

#define NERR_UnableToDelName_W 2206

#define NERR_UnknownDevDir 2116

#define NERR_UnknownServer 2103

#define NERR_UPSDriverNotStarted 2480

#define NERR_UPSInvalidCommPort 2482

#define NERR_UPSInvalidConfig 2481

#define NERR_UPSShutdownFailed 2484

#define NERR_UPSSignalAsserted 2483

#define NERR_UseNotFound 2250

#define NERR_UserExists 2224

#define NERR_UserInGroup 2236

#define NERR_UserLogon 2231

#define NERR_UserNotFound 2221

#define NERR_UserNotInGroup 2237

#define NERR_ValuesNotSet 2715

#define NERR_WkstaInconsistentState 2137

#define NERR_WkstaNotStarted 2138

#define NERR_WriteFault 2295

#define _DISABLE_PER_THREAD_LOCALE 2

#define _DISABLE_PER_THREAD_LOCALE_GLOBAL 32

#define _DISABLE_PER_THREAD_LOCALE_NEW 512

#define _ENABLE_PER_THREAD_LOCALE 1

#define _ENABLE_PER_THREAD_LOCALE_GLOBAL 16

#define _ENABLE_PER_THREAD_LOCALE_NEW 256

#define LC_ALL 0

#define LC_COLLATE 1

#define LC_CTYPE 2

#define LC_MAX 5

#define LC_MIN 0

#define LC_MONETARY 3

#define LC_NUMERIC 4

#define LC_TIME 5

#define LOCATION_API_VERSION 1

typedef struct _ICivicAddressReportFactoryEvents _ICivicAddressReportFactoryEvents, *P_ICivicAddressReportFactoryEvents;

typedef struct _ICivicAddressReportFactoryEventsVtbl _ICivicAddressReportFactoryEventsVtbl, *P_ICivicAddressReportFactoryEventsVtbl;

struct _ICivicAddressReportFactoryEvents {
    struct _ICivicAddressReportFactoryEventsVtbl * lpVtbl;
};

struct _ICivicAddressReportFactoryEventsVtbl {
    HRESULT (* QueryInterface)(struct _ICivicAddressReportFactoryEvents *, IID *, void * *);
    ULONG (* AddRef)(struct _ICivicAddressReportFactoryEvents *);
    ULONG (* Release)(struct _ICivicAddressReportFactoryEvents *);
    HRESULT (* GetTypeInfoCount)(struct _ICivicAddressReportFactoryEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct _ICivicAddressReportFactoryEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct _ICivicAddressReportFactoryEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct _ICivicAddressReportFactoryEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct _ILatLongReportFactoryEvents _ILatLongReportFactoryEvents, *P_ILatLongReportFactoryEvents;

typedef struct _ILatLongReportFactoryEventsVtbl _ILatLongReportFactoryEventsVtbl, *P_ILatLongReportFactoryEventsVtbl;

struct _ILatLongReportFactoryEventsVtbl {
    HRESULT (* QueryInterface)(struct _ILatLongReportFactoryEvents *, IID *, void * *);
    ULONG (* AddRef)(struct _ILatLongReportFactoryEvents *);
    ULONG (* Release)(struct _ILatLongReportFactoryEvents *);
    HRESULT (* GetTypeInfoCount)(struct _ILatLongReportFactoryEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct _ILatLongReportFactoryEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct _ILatLongReportFactoryEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct _ILatLongReportFactoryEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct _ILatLongReportFactoryEvents {
    struct _ILatLongReportFactoryEventsVtbl * lpVtbl;
};

typedef struct CivicAddressReport CivicAddressReport, *PCivicAddressReport;

struct CivicAddressReport {
};

typedef struct CivicAddressReportFactory CivicAddressReportFactory, *PCivicAddressReportFactory;

struct CivicAddressReportFactory {
};

typedef struct DefaultLocation DefaultLocation, *PDefaultLocation;

struct DefaultLocation {
};

typedef struct DispCivicAddressReport DispCivicAddressReport, *PDispCivicAddressReport;

struct DispCivicAddressReport {
};

typedef struct DispLatLongReport DispLatLongReport, *PDispLatLongReport;

struct DispLatLongReport {
};

typedef struct ICivicAddressReport ICivicAddressReport, *PICivicAddressReport;

typedef struct ICivicAddressReportVtbl ICivicAddressReportVtbl, *PICivicAddressReportVtbl;

typedef GUID SENSOR_ID;

struct ICivicAddressReportVtbl {
    HRESULT (* QueryInterface)(struct ICivicAddressReport *, IID *, void * *);
    ULONG (* AddRef)(struct ICivicAddressReport *);
    ULONG (* Release)(struct ICivicAddressReport *);
    HRESULT (* GetSensorID)(struct ICivicAddressReport *, SENSOR_ID *);
    HRESULT (* GetTimestamp)(struct ICivicAddressReport *, SYSTEMTIME *);
    HRESULT (* GetValue)(struct ICivicAddressReport *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetAddressLine1)(struct ICivicAddressReport *, BSTR *);
    HRESULT (* GetAddressLine2)(struct ICivicAddressReport *, BSTR *);
    HRESULT (* GetCity)(struct ICivicAddressReport *, BSTR *);
    HRESULT (* GetStateProvince)(struct ICivicAddressReport *, BSTR *);
    HRESULT (* GetPostalCode)(struct ICivicAddressReport *, BSTR *);
    HRESULT (* GetCountryRegion)(struct ICivicAddressReport *, BSTR *);
    HRESULT (* GetDetailLevel)(struct ICivicAddressReport *, DWORD *);
};

struct ICivicAddressReport {
    struct ICivicAddressReportVtbl * lpVtbl;
};

typedef struct ICivicAddressReportFactory ICivicAddressReportFactory, *PICivicAddressReportFactory;

typedef struct ICivicAddressReportFactoryVtbl ICivicAddressReportFactoryVtbl, *PICivicAddressReportFactoryVtbl;

typedef struct IDispCivicAddressReport IDispCivicAddressReport, *PIDispCivicAddressReport;

typedef struct IDispCivicAddressReportVtbl IDispCivicAddressReportVtbl, *PIDispCivicAddressReportVtbl;

struct ICivicAddressReportFactoryVtbl {
    HRESULT (* QueryInterface)(struct ICivicAddressReportFactory *, IID *, void * *);
    ULONG (* AddRef)(struct ICivicAddressReportFactory *);
    ULONG (* Release)(struct ICivicAddressReportFactory *);
    HRESULT (* GetTypeInfoCount)(struct ICivicAddressReportFactory *, UINT *);
    HRESULT (* GetTypeInfo)(struct ICivicAddressReportFactory *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ICivicAddressReportFactory *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ICivicAddressReportFactory *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* ListenForReports)(struct ICivicAddressReportFactory *, ULONG);
    HRESULT (* StopListeningForReports)(struct ICivicAddressReportFactory *);
    HRESULT (* get_Status)(struct ICivicAddressReportFactory *, ULONG *);
    HRESULT (* get_ReportInterval)(struct ICivicAddressReportFactory *, ULONG *);
    HRESULT (* put_ReportInterval)(struct ICivicAddressReportFactory *, ULONG);
    HRESULT (* get_DesiredAccuracy)(struct ICivicAddressReportFactory *, ULONG *);
    HRESULT (* put_DesiredAccuracy)(struct ICivicAddressReportFactory *, ULONG);
    HRESULT (* RequestPermissions)(struct ICivicAddressReportFactory *, ULONG *);
    HRESULT (* get_CivicAddressReport)(struct ICivicAddressReportFactory *, struct IDispCivicAddressReport * *);
};

struct ICivicAddressReportFactory {
    struct ICivicAddressReportFactoryVtbl * lpVtbl;
};

struct IDispCivicAddressReport {
    struct IDispCivicAddressReportVtbl * lpVtbl;
};

struct IDispCivicAddressReportVtbl {
    HRESULT (* QueryInterface)(struct IDispCivicAddressReport *, IID *, void * *);
    ULONG (* AddRef)(struct IDispCivicAddressReport *);
    ULONG (* Release)(struct IDispCivicAddressReport *);
    HRESULT (* GetTypeInfoCount)(struct IDispCivicAddressReport *, UINT *);
    HRESULT (* GetTypeInfo)(struct IDispCivicAddressReport *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IDispCivicAddressReport *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IDispCivicAddressReport *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_AddressLine1)(struct IDispCivicAddressReport *, BSTR *);
    HRESULT (* get_AddressLine2)(struct IDispCivicAddressReport *, BSTR *);
    HRESULT (* get_City)(struct IDispCivicAddressReport *, BSTR *);
    HRESULT (* get_StateProvince)(struct IDispCivicAddressReport *, BSTR *);
    HRESULT (* get_PostalCode)(struct IDispCivicAddressReport *, BSTR *);
    HRESULT (* get_CountryRegion)(struct IDispCivicAddressReport *, BSTR *);
    HRESULT (* get_DetailLevel)(struct IDispCivicAddressReport *, ULONG *);
    HRESULT (* get_Timestamp)(struct IDispCivicAddressReport *, DATE *);
};

typedef struct IDefaultLocation IDefaultLocation, *PIDefaultLocation;

typedef struct IDefaultLocationVtbl IDefaultLocationVtbl, *PIDefaultLocationVtbl;

typedef struct ILocationReport ILocationReport, *PILocationReport;

typedef struct ILocationReportVtbl ILocationReportVtbl, *PILocationReportVtbl;

struct IDefaultLocationVtbl {
    HRESULT (* QueryInterface)(struct IDefaultLocation *, IID *, void * *);
    ULONG (* AddRef)(struct IDefaultLocation *);
    ULONG (* Release)(struct IDefaultLocation *);
    HRESULT (* SetReport)(struct IDefaultLocation *, IID *, struct ILocationReport *);
    HRESULT (* GetReport)(struct IDefaultLocation *, IID *, struct ILocationReport * *);
};

struct ILocationReportVtbl {
    HRESULT (* QueryInterface)(struct ILocationReport *, IID *, void * *);
    ULONG (* AddRef)(struct ILocationReport *);
    ULONG (* Release)(struct ILocationReport *);
    HRESULT (* GetSensorID)(struct ILocationReport *, SENSOR_ID *);
    HRESULT (* GetTimestamp)(struct ILocationReport *, SYSTEMTIME *);
    HRESULT (* GetValue)(struct ILocationReport *, PROPERTYKEY *, PROPVARIANT *);
};

struct IDefaultLocation {
    struct IDefaultLocationVtbl * lpVtbl;
};

struct ILocationReport {
    struct ILocationReportVtbl * lpVtbl;
};

typedef struct IDispLatLongReport IDispLatLongReport, *PIDispLatLongReport;

typedef struct IDispLatLongReportVtbl IDispLatLongReportVtbl, *PIDispLatLongReportVtbl;

struct IDispLatLongReport {
    struct IDispLatLongReportVtbl * lpVtbl;
};

struct IDispLatLongReportVtbl {
    HRESULT (* QueryInterface)(struct IDispLatLongReport *, IID *, void * *);
    ULONG (* AddRef)(struct IDispLatLongReport *);
    ULONG (* Release)(struct IDispLatLongReport *);
    HRESULT (* GetTypeInfoCount)(struct IDispLatLongReport *, UINT *);
    HRESULT (* GetTypeInfo)(struct IDispLatLongReport *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IDispLatLongReport *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IDispLatLongReport *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Latitude)(struct IDispLatLongReport *, DOUBLE *);
    HRESULT (* get_Longitude)(struct IDispLatLongReport *, DOUBLE *);
    HRESULT (* get_ErrorRadius)(struct IDispLatLongReport *, DOUBLE *);
    HRESULT (* get_Altitude)(struct IDispLatLongReport *, DOUBLE *);
    HRESULT (* get_AltitudeError)(struct IDispLatLongReport *, DOUBLE *);
    HRESULT (* get_Timestamp)(struct IDispLatLongReport *, DATE *);
};

typedef struct ILatLongReport ILatLongReport, *PILatLongReport;

typedef struct ILatLongReportVtbl ILatLongReportVtbl, *PILatLongReportVtbl;

struct ILatLongReportVtbl {
    HRESULT (* QueryInterface)(struct ILatLongReport *, IID *, void * *);
    ULONG (* AddRef)(struct ILatLongReport *);
    ULONG (* Release)(struct ILatLongReport *);
    HRESULT (* GetSensorID)(struct ILatLongReport *, SENSOR_ID *);
    HRESULT (* GetTimestamp)(struct ILatLongReport *, SYSTEMTIME *);
    HRESULT (* GetValue)(struct ILatLongReport *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetLatitude)(struct ILatLongReport *, DOUBLE *);
    HRESULT (* GetLongitude)(struct ILatLongReport *, DOUBLE *);
    HRESULT (* GetErrorRadius)(struct ILatLongReport *, DOUBLE *);
    HRESULT (* GetAltitude)(struct ILatLongReport *, DOUBLE *);
    HRESULT (* GetAltitudeError)(struct ILatLongReport *, DOUBLE *);
};

struct ILatLongReport {
    struct ILatLongReportVtbl * lpVtbl;
};

typedef struct ILatLongReportFactory ILatLongReportFactory, *PILatLongReportFactory;

typedef struct ILatLongReportFactoryVtbl ILatLongReportFactoryVtbl, *PILatLongReportFactoryVtbl;

struct ILatLongReportFactoryVtbl {
    HRESULT (* QueryInterface)(struct ILatLongReportFactory *, IID *, void * *);
    ULONG (* AddRef)(struct ILatLongReportFactory *);
    ULONG (* Release)(struct ILatLongReportFactory *);
    HRESULT (* GetTypeInfoCount)(struct ILatLongReportFactory *, UINT *);
    HRESULT (* GetTypeInfo)(struct ILatLongReportFactory *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ILatLongReportFactory *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ILatLongReportFactory *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* ListenForReports)(struct ILatLongReportFactory *, ULONG);
    HRESULT (* StopListeningForReports)(struct ILatLongReportFactory *);
    HRESULT (* get_Status)(struct ILatLongReportFactory *, ULONG *);
    HRESULT (* get_ReportInterval)(struct ILatLongReportFactory *, ULONG *);
    HRESULT (* put_ReportInterval)(struct ILatLongReportFactory *, ULONG);
    HRESULT (* get_DesiredAccuracy)(struct ILatLongReportFactory *, ULONG *);
    HRESULT (* put_DesiredAccuracy)(struct ILatLongReportFactory *, ULONG);
    HRESULT (* RequestPermissions)(struct ILatLongReportFactory *, ULONG *);
    HRESULT (* get_LatLongReport)(struct ILatLongReportFactory *, struct IDispLatLongReport * *);
};

struct ILatLongReportFactory {
    struct ILatLongReportFactoryVtbl * lpVtbl;
};

typedef struct ILocation ILocation, *PILocation;

typedef struct ILocationVtbl ILocationVtbl, *PILocationVtbl;

typedef struct ILocationEvents ILocationEvents, *PILocationEvents;

typedef enum LOCATION_REPORT_STATUS {
    REPORT_ACCESS_DENIED=2,
    REPORT_ERROR=1,
    REPORT_INITIALIZING=3,
    REPORT_NOT_SUPPORTED=0,
    REPORT_RUNNING=4
} LOCATION_REPORT_STATUS;

typedef enum LOCATION_DESIRED_ACCURACY {
    LOCATION_DESIRED_ACCURACY_DEFAULT=0,
    LOCATION_DESIRED_ACCURACY_HIGH=1
} LOCATION_DESIRED_ACCURACY;

typedef struct ILocationEventsVtbl ILocationEventsVtbl, *PILocationEventsVtbl;

struct ILocationEventsVtbl {
    HRESULT (* QueryInterface)(struct ILocationEvents *, IID *, void * *);
    ULONG (* AddRef)(struct ILocationEvents *);
    ULONG (* Release)(struct ILocationEvents *);
    HRESULT (* OnLocationChanged)(struct ILocationEvents *, IID *, struct ILocationReport *);
    HRESULT (* OnStatusChanged)(struct ILocationEvents *, IID *, enum LOCATION_REPORT_STATUS);
};

struct ILocationVtbl {
    HRESULT (* QueryInterface)(struct ILocation *, IID *, void * *);
    ULONG (* AddRef)(struct ILocation *);
    ULONG (* Release)(struct ILocation *);
    HRESULT (* RegisterForReport)(struct ILocation *, struct ILocationEvents *, IID *, DWORD);
    HRESULT (* UnregisterForReport)(struct ILocation *, IID *);
    HRESULT (* GetReport)(struct ILocation *, IID *, struct ILocationReport * *);
    HRESULT (* GetReportStatus)(struct ILocation *, IID *, enum LOCATION_REPORT_STATUS *);
    HRESULT (* GetReportInterval)(struct ILocation *, IID *, DWORD *);
    HRESULT (* SetReportInterval)(struct ILocation *, IID *, DWORD);
    HRESULT (* GetDesiredAccuracy)(struct ILocation *, IID *, enum LOCATION_DESIRED_ACCURACY *);
    HRESULT (* SetDesiredAccuracy)(struct ILocation *, IID *, enum LOCATION_DESIRED_ACCURACY);
    HRESULT (* RequestPermissions)(struct ILocation *, HWND, IID *, ULONG, BOOL);
};

struct ILocation {
    struct ILocationVtbl * lpVtbl;
};

struct ILocationEvents {
    struct ILocationEventsVtbl * lpVtbl;
};

typedef struct ILocationReportFactory ILocationReportFactory, *PILocationReportFactory;

typedef struct ILocationReportFactoryVtbl ILocationReportFactoryVtbl, *PILocationReportFactoryVtbl;

struct ILocationReportFactory {
    struct ILocationReportFactoryVtbl * lpVtbl;
};

struct ILocationReportFactoryVtbl {
    HRESULT (* QueryInterface)(struct ILocationReportFactory *, IID *, void * *);
    ULONG (* AddRef)(struct ILocationReportFactory *);
    ULONG (* Release)(struct ILocationReportFactory *);
    HRESULT (* GetTypeInfoCount)(struct ILocationReportFactory *, UINT *);
    HRESULT (* GetTypeInfo)(struct ILocationReportFactory *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ILocationReportFactory *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ILocationReportFactory *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* ListenForReports)(struct ILocationReportFactory *, ULONG);
    HRESULT (* StopListeningForReports)(struct ILocationReportFactory *);
    HRESULT (* get_Status)(struct ILocationReportFactory *, ULONG *);
    HRESULT (* get_ReportInterval)(struct ILocationReportFactory *, ULONG *);
    HRESULT (* put_ReportInterval)(struct ILocationReportFactory *, ULONG);
    HRESULT (* get_DesiredAccuracy)(struct ILocationReportFactory *, ULONG *);
    HRESULT (* put_DesiredAccuracy)(struct ILocationReportFactory *, ULONG);
    HRESULT (* RequestPermissions)(struct ILocationReportFactory *, ULONG *);
};

typedef struct LatLongReport LatLongReport, *PLatLongReport;

struct LatLongReport {
};

typedef struct LatLongReportFactory LatLongReportFactory, *PLatLongReportFactory;

struct LatLongReportFactory {
};

typedef struct Location Location, *PLocation;

struct Location {
};

#define ADM_CTRL_FAILED 3

#define class_ADSPEC 13

#define class_CONFIRM 15

#define class_ERROR_SPEC 6

#define class_FILTER_SPEC 10

#define class_FLOWSPEC 9

#define class_INTEGRITY 4

#define class_IS_FLOWSPEC 9

#define class_MAX 15

#define class_NULL 0

#define class_POLICY_DATA 14

#define class_RSVP_HOP 3

#define class_SCOPE 7

#define class_SENDER_TEMPLATE 11

#define class_SENDER_TSPEC 12

#define class_SESSION 1

#define class_SESSION_GROUP 2

#define class_STYLE 8

#define class_TIME_VALUES 5

#define CONTROLLED_DELAY_SERV 4

#define CONTROLLED_LOAD_SERV 5

#define ctype_ADSPEC_INTSERV 2

#define ctype_ERROR_SPEC_ipv4 1

#define ctype_FILTER_SPEC_ipv4 1

#define ctype_FILTER_SPEC_ipv4GPI 4

#define ctype_FLOWSPEC_Intserv0 2

#define ctype_POLICY_DATA 1

#define ctype_RSVP_HOP_ipv4 1

#define ctype_SCOPE_list_ipv4 1

#define ctype_SENDER_TEMPLATE_ipv4 1

#define ctype_SENDER_TEMPLATE_ipv4GPI 4

#define ctype_SENDER_TSPEC 2

#define ctype_SESSION_ipv4 1

#define ctype_SESSION_ipv4GPI 3

#define ctype_STYLE 1

#define DUP_RESULTS 4

#define ERR_FORWARD_OK 32768

#define ERR_global_mask 4095

#define ERR_Usage_globl 0

#define ERR_Usage_local 16

#define ERR_Usage_serv 17

#define ERROR_NO_MORE_INFO 1

#define ERROR_SPECF_InPlace 1

#define ERROR_SPECF_NotGuilty 2

#define EXPIRED_CREDENTIAL 4

#define FLOW_DURATION 5

#define FORCE_IMMEDIATE_REFRESH 1

#define GENERAL_INFO 1

#define GUARANTEED_SERV 2

#define IDENTITY_CHANGED 5

#define INSUFFICIENT_PRIVILEGES 3

#define INTSERV_VERS_MASK 240

#define INTSERV_VERSION0 0

#define INV_LPM_HANDLE 1

#define INV_REQ_HANDLE 3

#define INV_RESULTS 5

#define ISPH_FLG_INV 128

#define ISSH_BREAK_BIT 128

#define LPM_API_VERSION_1 1

#define LPM_OK 0

#define LPM_PE_ALL_TYPES 0

#define LPM_PE_APP_IDENTITY 3

#define LPM_PE_USER_IDENTITY 2

#define LPM_RESULT_DEFER 1

#define LPM_RESULT_READY 0

#define LPM_TIME_OUT 2

#define LPV_DONT_CARE 65534

#define LPV_DROP_MSG 65533

#define LPV_MAX_PRIORITY 65280

#define LPV_MIN_PRIORITY 1

#define LPV_REJECT 65535

#define LPV_RESERVED 0

#define Opt_Distinct 8

#define Opt_Explicit 2

#define Opt_Share_mask 24

#define Opt_Shared 16

#define Opt_SndSel_mask 7

#define Opt_Wildcard 1

#define PCM_VERSION_1 1

#define POLICY_ERRV_CRAZY_FLOWSPEC 57

#define POLICY_ERRV_EXPIRED_CREDENTIALS 4

#define POLICY_ERRV_EXPIRED_USER_TOKEN 51

#define POLICY_ERRV_GLOBAL_DEF_FLOW_COUNT 1

#define POLICY_ERRV_GLOBAL_DEF_FLOW_DURATION 9

#define POLICY_ERRV_GLOBAL_DEF_FLOW_RATE 17

#define POLICY_ERRV_GLOBAL_DEF_PEAK_RATE 25

#define POLICY_ERRV_GLOBAL_DEF_SUM_FLOW_RATE 33

#define POLICY_ERRV_GLOBAL_DEF_SUM_PEAK_RATE 41

#define POLICY_ERRV_GLOBAL_GRP_FLOW_COUNT 2

#define POLICY_ERRV_GLOBAL_GRP_FLOW_DURATION 10

#define POLICY_ERRV_GLOBAL_GRP_FLOW_RATE 18

#define POLICY_ERRV_GLOBAL_GRP_PEAK_RATE 26

#define POLICY_ERRV_GLOBAL_GRP_SUM_FLOW_RATE 34

#define POLICY_ERRV_GLOBAL_GRP_SUM_PEAK_RATE 42

#define POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_COUNT 4

#define POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_DURATION 12

#define POLICY_ERRV_GLOBAL_UNAUTH_USER_FLOW_RATE 20

#define POLICY_ERRV_GLOBAL_UNAUTH_USER_PEAK_RATE 28

#define POLICY_ERRV_GLOBAL_UNAUTH_USER_SUM_FLOW_RATE 36

#define POLICY_ERRV_GLOBAL_UNAUTH_USER_SUM_PEAK_RATE 44

#define POLICY_ERRV_GLOBAL_USER_FLOW_COUNT 3

#define POLICY_ERRV_GLOBAL_USER_FLOW_DURATION 11

#define POLICY_ERRV_GLOBAL_USER_FLOW_RATE 19

#define POLICY_ERRV_GLOBAL_USER_PEAK_RATE 27

#define POLICY_ERRV_GLOBAL_USER_SUM_FLOW_RATE 35

#define POLICY_ERRV_GLOBAL_USER_SUM_PEAK_RATE 43

#define POLICY_ERRV_IDENTITY_CHANGED 5

#define POLICY_ERRV_INSUFFICIENT_PRIVILEGES 3

#define POLICY_ERRV_NO_ACCEPTS 55

#define POLICY_ERRV_NO_MEMORY 56

#define POLICY_ERRV_NO_MORE_INFO 1

#define POLICY_ERRV_NO_PRIVILEGES 50

#define POLICY_ERRV_NO_RESOURCES 52

#define POLICY_ERRV_PRE_EMPTED 53

#define POLICY_ERRV_SUBNET_DEF_FLOW_COUNT 5

#define POLICY_ERRV_SUBNET_DEF_FLOW_DURATION 13

#define POLICY_ERRV_SUBNET_DEF_FLOW_RATE 21

#define POLICY_ERRV_SUBNET_DEF_PEAK_RATE 29

#define POLICY_ERRV_SUBNET_DEF_SUM_FLOW_RATE 37

#define POLICY_ERRV_SUBNET_DEF_SUM_PEAK_RATE 45

#define POLICY_ERRV_SUBNET_GRP_FLOW_COUNT 6

#define POLICY_ERRV_SUBNET_GRP_FLOW_DURATION 14

#define POLICY_ERRV_SUBNET_GRP_FLOW_RATE 22

#define POLICY_ERRV_SUBNET_GRP_PEAK_RATE 30

#define POLICY_ERRV_SUBNET_GRP_SUM_FLOW_RATE 38

#define POLICY_ERRV_SUBNET_GRP_SUM_PEAK_RATE 46

#define POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_COUNT 8

#define POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_DURATION 16

#define POLICY_ERRV_SUBNET_UNAUTH_USER_FLOW_RATE 24

#define POLICY_ERRV_SUBNET_UNAUTH_USER_PEAK_RATE 32

#define POLICY_ERRV_SUBNET_UNAUTH_USER_SUM_FLOW_RATE 40

#define POLICY_ERRV_SUBNET_UNAUTH_USER_SUM_PEAK_RATE 48

#define POLICY_ERRV_SUBNET_USER_FLOW_COUNT 7

#define POLICY_ERRV_SUBNET_USER_FLOW_DURATION 15

#define POLICY_ERRV_SUBNET_USER_FLOW_RATE 23

#define POLICY_ERRV_SUBNET_USER_PEAK_RATE 31

#define POLICY_ERRV_SUBNET_USER_SUM_FLOW_RATE 39

#define POLICY_ERRV_SUBNET_USER_SUM_PEAK_RATE 47

#define POLICY_ERRV_UNKNOWN 0

#define POLICY_ERRV_UNKNOWN_USER 49

#define POLICY_ERRV_UNSUPPORTED_CREDENTIAL_TYPE 2

#define POLICY_ERRV_USER_CHANGED 54

#define PREDICTIVE_SERV 3

#define QUALITATIVE_SERV 6

#define RCVD_PATH_TEAR 1

#define RCVD_RESV_TEAR 2

#define RESOURCES_ALLOCATED 1

#define RESOURCES_MODIFIED 2

#define RSVP_Err_ADMISSION 1

#define RSVP_Err_AMBIG_FILTER 9

#define RSVP_Err_API_ERROR 20

#define RSVP_Err_BAD_DSTPORT 7

#define RSVP_Err_BAD_SNDPORT 8

#define RSVP_Err_BAD_STYLE 5

#define RSVP_Err_NO_PATH 3

#define RSVP_Err_NO_SENDER 4

#define RSVP_Err_NONE 0

#define RSVP_Err_POLICY 2

#define RSVP_Err_PREEMPTED 12

#define RSVP_Err_RSVP_SYS_ERROR 23

#define RSVP_Err_TC_ERROR 21

#define RSVP_Err_TC_SYS_ERROR 22

#define RSVP_Err_UNKN_OBJ_CLASS 13

#define RSVP_Err_UNKNOWN_CTYPE 14

#define RSVP_Err_UNKNOWN_STYLE 6

#define RSVP_Erv_API 2

#define RSVP_Erv_Bandwidth 2

#define RSVP_Erv_Bucket_szie 32770

#define RSVP_Erv_Conflict_Serv 1

#define RSVP_Erv_Crazy_Flowspec 3

#define RSVP_Erv_Crazy_Tspec 4

#define RSVP_Erv_DelayBnd 1

#define RSVP_Erv_Flow_Rate 32769

#define RSVP_Erv_MEMORY 1

#define RSVP_Erv_Min_Policied_size 32772

#define RSVP_Erv_MTU 3

#define RSVP_Erv_No_Serv 2

#define RSVP_Erv_Nonev 0

#define RSVP_Erv_Other 0

#define RSVP_Erv_Peak_Rate 32771

#define RSVP_PATH 1

#define RSVP_PATH_ERR 3

#define RSVP_PATH_TEAR 5

#define RSVP_RESV 2

#define RSVP_RESV_ERR 4

#define RSVP_RESV_TEAR 6

#define SESSFLG_E_Police 1

#define STATE_TIMEOUT 4

#define STYLE_FF 10

#define STYLE_SE 18

#define STYLE_WF 17

#define UNSUPPORTED_CREDENTIAL_TYPE 2

typedef union _union_5986 _union_5986, *P_union_5986;

typedef struct Session_IPv4 Session_IPv4, *PSession_IPv4;

struct Session_IPv4 {
    IN_ADDR sess_destaddr;
    UCHAR sess_protid;
    UCHAR sess_flags;
    USHORT sess_destport;
};

union _union_5986 {
    struct Session_IPv4 sess_ipv4;
};

typedef union _union_5989 _union_5989, *P_union_5989;

typedef struct Rsvp_Hop_IPv4 Rsvp_Hop_IPv4, *PRsvp_Hop_IPv4;

struct Rsvp_Hop_IPv4 {
    IN_ADDR hop_ipaddr;
    ULONG hop_LIH;
};

union _union_5989 {
    struct Rsvp_Hop_IPv4 hop_ipv4;
};

typedef union _union_5994 _union_5994, *P_union_5994;

typedef struct Filter_Spec_IPv4 Filter_Spec_IPv4, *PFilter_Spec_IPv4;

typedef struct Filter_Spec_IPv4GPI Filter_Spec_IPv4GPI, *PFilter_Spec_IPv4GPI;

struct Filter_Spec_IPv4 {
    IN_ADDR filt_ipaddr;
    USHORT filt_unused;
    USHORT filt_port;
};

struct Filter_Spec_IPv4GPI {
    IN_ADDR filt_ipaddr;
    ULONG filt_gpi;
};

union _union_5994 {
    struct Filter_Spec_IPv4 filt_ipv4;
    struct Filter_Spec_IPv4GPI filt_ipv4gpi;
};

typedef union _union_5997 _union_5997, *P_union_5997;

typedef struct Scope_list_ipv4 Scope_list_ipv4, *PScope_list_ipv4;

struct Scope_list_ipv4 {
    IN_ADDR scopl_ipaddr[1];
};

union _union_5997 {
    struct Scope_list_ipv4 scopl_ipv4;
};

typedef union _union_6001 _union_6001, *P_union_6001;

typedef struct Error_Spec_IPv4 Error_Spec_IPv4, *PError_Spec_IPv4;

typedef uchar u_char;

struct Error_Spec_IPv4 {
    struct in_addr errs_errnode;
    u_char errs_flags;
    UCHAR errs_code;
    USHORT errs_value;
};

union _union_6001 {
    struct Error_Spec_IPv4 errs_ipv4;
};

typedef union _union_6013 _union_6013, *P_union_6013;

typedef struct GenTspec GenTspec, *PGenTspec;

typedef struct QualTspec QualTspec, *PQualTspec;

typedef struct IntServServiceHdr IntServServiceHdr, *PIntServServiceHdr;

typedef struct IntServParmHdr IntServParmHdr, *PIntServParmHdr;

typedef struct GenTspecParms GenTspecParms, *PGenTspecParms;

typedef struct QualTspecParms QualTspecParms, *PQualTspecParms;

struct IntServServiceHdr {
    UCHAR issh_service;
    UCHAR issh_flags;
    USHORT issh_len32b;
};

struct IntServParmHdr {
    UCHAR isph_parm_num;
    UCHAR isph_flags;
    USHORT isph_len32b;
};

struct GenTspecParms {
    FLOAT TB_Tspec_r;
    FLOAT TB_Tspec_b;
    FLOAT TB_Tspec_p;
    ULONG TB_Tspec_m;
    ULONG TB_Tspec_M;
};

struct GenTspec {
    struct IntServServiceHdr gen_Tspec_serv_hdr;
    struct IntServParmHdr gen_Tspec_parm_hdr;
    struct GenTspecParms gen_Tspec_parms;
};

struct QualTspecParms {
    ULONG TB_Tspec_M;
};

struct QualTspec {
    struct IntServServiceHdr qual_Tspec_serv_hdr;
    struct IntServParmHdr qual_Tspec_parm_hdr;
    struct QualTspecParms qual_Tspec_parms;
};

union _union_6013 {
    struct GenTspec gen_stspec;
    struct QualTspec qual_stspec;
};

typedef union _union_6020 _union_6020, *P_union_6020;

typedef struct CtrlLoadFlowspec CtrlLoadFlowspec, *PCtrlLoadFlowspec;

typedef struct GuarFlowSpec GuarFlowSpec, *PGuarFlowSpec;

typedef struct QualAppFlowSpec QualAppFlowSpec, *PQualAppFlowSpec;

typedef struct GuarRspec GuarRspec, *PGuarRspec;

struct GuarRspec {
    FLOAT Guar_R;
    ULONG Guar_S;
};

struct GuarFlowSpec {
    struct IntServServiceHdr Guar_serv_hdr;
    struct IntServParmHdr Guar_Tspec_hdr;
    struct GenTspecParms Guar_Tspec_parms;
    struct IntServParmHdr Guar_Rspec_hdr;
    struct GuarRspec Guar_Rspec;
};

struct CtrlLoadFlowspec {
    struct IntServServiceHdr CL_spec_serv_hdr;
    struct IntServParmHdr CL_spec_parm_hdr;
    struct GenTspecParms CL_spec_parms;
};

struct QualAppFlowSpec {
    struct IntServServiceHdr Q_spec_serv_hdr;
    struct IntServParmHdr Q_spec_parm_hdr;
    struct QualTspecParms Q_spec_parms;
};

union _union_6020 {
    struct CtrlLoadFlowspec CL_spec;
    struct GuarFlowSpec G_spec;
    struct QualAppFlowSpec Q_spec;
};

typedef union _union_6023 _union_6023, *P_union_6023;

typedef struct SENDER_TSPEC SENDER_TSPEC, *PSENDER_TSPEC;

typedef struct IS_FLOWSPEC IS_FLOWSPEC, *PIS_FLOWSPEC;

typedef struct RsvpObjHdr RsvpObjHdr, *PRsvpObjHdr;

typedef struct IntServTspecBody IntServTspecBody, *PIntServTspecBody;

typedef struct IntServFlowSpec IntServFlowSpec, *PIntServFlowSpec;

typedef struct IntServMainHdr IntServMainHdr, *PIntServMainHdr;

union _union_6023 {
    struct SENDER_TSPEC * stspec;
    struct IS_FLOWSPEC * isflow;
};

struct IntServMainHdr {
    UCHAR ismh_version;
    UCHAR ismh_unused;
    USHORT ismh_len32b;
};

struct IntServTspecBody {
    struct IntServMainHdr st_mh;
    union _union_6013 tspec_u;
};

struct RsvpObjHdr {
    USHORT obj_length;
    UCHAR obj_class;
    UCHAR obj_ctype;
};

struct IntServFlowSpec {
    struct IntServMainHdr spec_mh;
    union _union_6020 spec_u;
};

struct IS_FLOWSPEC {
    struct RsvpObjHdr flow_header;
    struct IntServFlowSpec flow_body;
};

struct SENDER_TSPEC {
    struct RsvpObjHdr stspec_header;
    struct IntServTspecBody stspec_body;
};

typedef union _union_6024 _union_6024, *P_union_6024;

typedef struct FILTER_SPEC FILTER_SPEC, *PFILTER_SPEC;

typedef struct FILTER_SPEC SENDER_TEMPLATE;

union _union_6024 {
    SENDER_TEMPLATE * stemp;
    struct FILTER_SPEC * fspec;
};

struct FILTER_SPEC {
    struct RsvpObjHdr filt_header;
    union _union_5994 filt_u;
};

typedef struct ADSPEC ADSPEC, *PADSPEC;

typedef struct IS_ADSPEC_BODY IS_ADSPEC_BODY, *PIS_ADSPEC_BODY;

typedef struct GenAdspecParams GenAdspecParams, *PGenAdspecParams;

struct GenAdspecParams {
    struct IntServServiceHdr gen_parm_hdr;
    struct IntServParmHdr gen_parm_hopcnt_hdr;
    ULONG gen_parm_hopcnt;
    struct IntServParmHdr gen_parm_pathbw_hdr;
    FLOAT gen_parm_path_bw;
    struct IntServParmHdr gen_parm_minlat_hdr;
    ULONG gen_parm_min_latency;
    struct IntServParmHdr gen_parm_compmtu_hdr;
    ULONG gen_parm_composed_MTU;
};

struct IS_ADSPEC_BODY {
    struct IntServMainHdr adspec_mh;
    struct GenAdspecParams adspec_genparms;
};

struct ADSPEC {
    struct RsvpObjHdr adspec_header;
    struct IS_ADSPEC_BODY adspec_body;
};

typedef struct LPM_HANDLE__ LPM_HANDLE__, *PLPM_HANDLE__;

typedef struct LPM_HANDLE__ * LPM_HANDLE;

typedef struct RHANDLE__ RHANDLE__, *PRHANDLE__;

typedef struct RHANDLE__ * RHANDLE;

typedef struct policy_decision policy_decision, *Ppolicy_decision;

typedef struct policy_decision POLICY_DECISION;

typedef ULONG * (* CBADMITRESULT)(LPM_HANDLE, RHANDLE, ULONG, int, int, POLICY_DECISION *);

typedef ULONG LPV;

struct LPM_HANDLE__ {
    int unused;
};

struct policy_decision {
    LPV lpvResult;
    WORD wPolicyErrCode;
    WORD wPolicyErrValue;
};

struct RHANDLE__ {
    int unused;
};

typedef ULONG * (* CBGETRSVPOBJECTS)(LPM_HANDLE, RHANDLE, int, int, struct RsvpObjHdr * *);

typedef enum enum_6016 {
    GUAR_ADSPARM_C=131,
    GUAR_ADSPARM_Csum=135,
    GUAR_ADSPARM_Ctot=133,
    GUAR_ADSPARM_D=132,
    GUAR_ADSPARM_Dsum=136,
    GUAR_ADSPARM_Dtot=134,
    IS_GUAR_RSPEC=130
} enum_6016;

typedef struct ERROR_SPEC ERROR_SPEC, *PERROR_SPEC;

struct ERROR_SPEC {
    struct RsvpObjHdr errs_header;
    union _union_6001 errs_u;
};

typedef struct flow_desc flow_desc, *Pflow_desc;

typedef struct flow_desc FLOW_DESC;

struct flow_desc {
    union _union_6023 u1;
    union _union_6024 u2;
};

typedef struct Gads_parms_t Gads_parms_t, *PGads_parms_t;

struct Gads_parms_t {
    struct IntServServiceHdr Gads_serv_hdr;
    struct IntServParmHdr Gads_Ctot_hdr;
    ULONG Gads_Ctot;
    struct IntServParmHdr Gads_Dtot_hdr;
    ULONG Gads_Dtot;
    struct IntServParmHdr Gads_Csum_hdr;
    ULONG Gads_Csum;
    struct IntServParmHdr Gads_Dsum_hdr;
    ULONG Gads_Dsum;
};

typedef struct ID_ERROR_OBJECT ID_ERROR_OBJECT, *PID_ERROR_OBJECT;

struct ID_ERROR_OBJECT {
    USHORT usIdErrLength;
    UCHAR ucAType;
    UCHAR ucSubType;
    USHORT usReserved;
    USHORT usIdErrorValue;
    UCHAR ucIdErrData[4];
};

typedef enum int_serv_wkp {
    IS_WKP_COMPOSED_MTU=10,
    IS_WKP_HOP_CNT=4,
    IS_WKP_MIN_LATENCY=8,
    IS_WKP_PATH_BW=6,
    IS_WKP_Q_TSPEC=128,
    IS_WKP_TB_TSPEC=127
} int_serv_wkp;

typedef struct lpminitinfo lpminitinfo, *Plpminitinfo;

typedef struct lpminitinfo LPM_INIT_INFO;

typedef void * (* PALLOCMEM)(DWORD);

typedef void (* PFREEMEM)(void *);

struct lpminitinfo {
    DWORD PcmVersionNumber;
    DWORD ResultTimeLimit;
    int ConfiguredLpmCount;
    PALLOCMEM AllocMemory;
    PFREEMEM FreeMemory;
    CBADMITRESULT PcmAdmitResultCallback;
    CBGETRSVPOBJECTS GetRsvpObjectsCallback;
};

typedef struct lpmiptable lpmiptable, *Plpmiptable;

struct lpmiptable {
    ULONG ulIfIndex;
    ULONG MediaType;
    IN_ADDR IfIpAddr;
    IN_ADDR IfNetMask;
};

typedef struct lpmiptable LPMIPTABLE;

typedef int MSG_TYPE;

typedef USHORT PETYPE;

typedef struct POLICY_DATA POLICY_DATA, *PPOLICY_DATA;

struct POLICY_DATA {
    struct RsvpObjHdr PolicyObjHdr;
    USHORT usPeOffset;
    USHORT usReserved;
};

typedef struct POLICY_ELEMENT POLICY_ELEMENT, *PPOLICY_ELEMENT;

struct POLICY_ELEMENT {
    USHORT usPeLength;
    USHORT usPeType;
    UCHAR ucPeData[4];
};

typedef struct RESV_STYLE RESV_STYLE, *PRESV_STYLE;

struct RESV_STYLE {
    struct RsvpObjHdr style_header;
    ULONG style_word;
};

typedef struct RSVP_HOP RSVP_HOP, *PRSVP_HOP;

struct RSVP_HOP {
    struct RsvpObjHdr hop_header;
    union _union_5989 hop_u;
};

typedef struct rsvpmsgobjs rsvpmsgobjs, *Prsvpmsgobjs;

typedef struct rsvpmsgobjs RSVP_MSG_OBJS;

typedef struct RSVP_SESSION RSVP_SESSION, *PRSVP_SESSION;

typedef struct RSVP_SCOPE RSVP_SCOPE, *PRSVP_SCOPE;

struct rsvpmsgobjs {
    MSG_TYPE RsvpMsgType;
    struct RSVP_SESSION * pRsvpSession;
    struct RSVP_HOP * pRsvpFromHop;
    struct RSVP_HOP * pRsvpToHop;
    struct RESV_STYLE * pResvStyle;
    struct RSVP_SCOPE * pRsvpScope;
    int FlowDescCount;
    FLOW_DESC * pFlowDescs;
    int PdObjectCount;
    struct POLICY_DATA * * ppPdObjects;
    struct ERROR_SPEC * pErrorSpec;
    struct ADSPEC * pAdspec;
};

struct RSVP_SCOPE {
    struct RsvpObjHdr scopl_header;
    union _union_5997 scope_u;
};

struct RSVP_SESSION {
    struct RsvpObjHdr sess_header;
    union _union_5986 sess_u;
};

#define LOOKUP_TRANSLATE_NAMES 2048

#define LOOKUP_VIEW_LOCAL_INFORMATION 1

typedef enum _LSA_LOOKUP_DOMAIN_INFO_CLASS {
    AccountDomainInformation=5,
    DnsDomainInformation=12
} _LSA_LOOKUP_DOMAIN_INFO_CLASS;

typedef struct _LSA_OBJECT_ATTRIBUTES _LSA_OBJECT_ATTRIBUTES, *P_LSA_OBJECT_ATTRIBUTES;

typedef struct _LSA_UNICODE_STRING _LSA_UNICODE_STRING, *P_LSA_UNICODE_STRING;

typedef struct _LSA_UNICODE_STRING * PLSA_UNICODE_STRING;

struct _LSA_OBJECT_ATTRIBUTES {
    ULONG Length;
    HANDLE RootDirectory;
    PLSA_UNICODE_STRING ObjectName;
    ULONG Attributes;
    PVOID SecurityDescriptor;
    PVOID SecurityQualityOfService;
};

struct _LSA_UNICODE_STRING {
    USHORT Length;
    USHORT MaximumLength;
    PWSTR Buffer;
};

typedef struct _LSA_REFERENCED_DOMAIN_LIST _LSA_REFERENCED_DOMAIN_LIST, *P_LSA_REFERENCED_DOMAIN_LIST;

typedef struct _LSA_TRUST_INFORMATION _LSA_TRUST_INFORMATION, *P_LSA_TRUST_INFORMATION;

typedef struct _LSA_TRUST_INFORMATION * PLSA_TRUST_INFORMATION;

typedef struct _LSA_UNICODE_STRING LSA_UNICODE_STRING;

typedef PVOID PSID;

struct _LSA_TRUST_INFORMATION {
    LSA_UNICODE_STRING Name;
    PSID Sid;
};

struct _LSA_REFERENCED_DOMAIN_LIST {
    ULONG Entries;
    PLSA_TRUST_INFORMATION Domains;
};

typedef struct _LSA_STRING _LSA_STRING, *P_LSA_STRING;

typedef CHAR * PCHAR;

struct _LSA_STRING {
    USHORT Length;
    USHORT MaximumLength;
    PCHAR Buffer;
};

typedef struct _LSA_TRANSLATED_NAME _LSA_TRANSLATED_NAME, *P_LSA_TRANSLATED_NAME;

typedef enum _SID_NAME_USE {
    SidTypeAlias=4,
    SidTypeComputer=9,
    SidTypeDeletedAccount=6,
    SidTypeDomain=3,
    SidTypeGroup=2,
    SidTypeInvalid=7,
    SidTypeLabel=10,
    SidTypeUnknown=8,
    SidTypeUser=1,
    SidTypeWellKnownGroup=5
} _SID_NAME_USE;

typedef enum _SID_NAME_USE SID_NAME_USE;

struct _LSA_TRANSLATED_NAME {
    SID_NAME_USE Use;
    LSA_UNICODE_STRING Name;
    LONG DomainIndex;
};

typedef struct _LSA_TRANSLATED_SID2 _LSA_TRANSLATED_SID2, *P_LSA_TRANSLATED_SID2;

struct _LSA_TRANSLATED_SID2 {
    SID_NAME_USE Use;
    PSID Sid;
    LONG DomainIndex;
    ULONG Flags;
};

typedef struct _POLICY_ACCOUNT_DOMAIN_INFO _POLICY_ACCOUNT_DOMAIN_INFO, *P_POLICY_ACCOUNT_DOMAIN_INFO;

struct _POLICY_ACCOUNT_DOMAIN_INFO {
    LSA_UNICODE_STRING DomainName;
    PSID DomainSid;
};

typedef struct _POLICY_DNS_DOMAIN_INFO _POLICY_DNS_DOMAIN_INFO, *P_POLICY_DNS_DOMAIN_INFO;

struct _POLICY_DNS_DOMAIN_INFO {
    LSA_UNICODE_STRING Name;
    LSA_UNICODE_STRING DnsDomainName;
    LSA_UNICODE_STRING DnsForestName;
    GUID DomainGuid;
    PSID Sid;
};

typedef enum _LSA_LOOKUP_DOMAIN_INFO_CLASS LSA_LOOKUP_DOMAIN_INFO_CLASS;

typedef PVOID LSA_LOOKUP_HANDLE;

typedef struct _LSA_OBJECT_ATTRIBUTES LSA_OBJECT_ATTRIBUTES;

typedef struct _LSA_REFERENCED_DOMAIN_LIST LSA_REFERENCED_DOMAIN_LIST;

typedef struct _LSA_STRING LSA_STRING;

typedef struct _LSA_TRANSLATED_NAME LSA_TRANSLATED_NAME;

typedef struct _LSA_TRANSLATED_SID2 LSA_TRANSLATED_SID2;

typedef struct _LSA_TRUST_INFORMATION LSA_TRUST_INFORMATION;

typedef enum _LSA_LOOKUP_DOMAIN_INFO_CLASS * PLSA_LOOKUP_DOMAIN_INFO_CLASS;

typedef PVOID * PLSA_LOOKUP_HANDLE;

typedef struct _LSA_OBJECT_ATTRIBUTES * PLSA_OBJECT_ATTRIBUTES;

typedef struct _LSA_REFERENCED_DOMAIN_LIST * PLSA_REFERENCED_DOMAIN_LIST;

typedef struct _LSA_STRING * PLSA_STRING;

typedef struct _LSA_TRANSLATED_NAME * PLSA_TRANSLATED_NAME;

typedef struct _LSA_TRANSLATED_SID2 * PLSA_TRANSLATED_SID2;

typedef struct _POLICY_ACCOUNT_DOMAIN_INFO POLICY_ACCOUNT_DOMAIN_INFO;

typedef struct _POLICY_DNS_DOMAIN_INFO POLICY_DNS_DOMAIN_INFO;

typedef struct _POLICY_ACCOUNT_DOMAIN_INFO * PPOLICY_ACCOUNT_DOMAIN_INFO;

typedef struct _POLICY_DNS_DOMAIN_INFO * PPOLICY_DNS_DOMAIN_INFO;

#define LZERROR_BADINHANDLE -1

#define LZERROR_BADOUTHANDLE -2

#define LZERROR_BADVALUE -7

#define LZERROR_GLOBALLOC -5

#define LZERROR_GLOBLOCK -6

#define LZERROR_READ -3

#define LZERROR_UNKNOWNALG -8

#define LZERROR_WRITE -4

#define _ALLOCA_S_HEAP_MARKER 56797

#define _ALLOCA_S_MARKER_SIZE 8

#define _ALLOCA_S_STACK_MARKER 52428

#define _ALLOCA_S_THRESHOLD 1024

#define _FREEENTRY 0

#define _HEAP_MAXREQ 4294967264

#define _HEAPBADBEGIN -3

#define _HEAPBADNODE -4

#define _HEAPBADPTR -6

#define _HEAPEMPTY -1

#define _HEAPEND -5

#define _HEAPOK -2

#define _MAX_WAIT_MALLOC_CRT 60000

#define _USEDENTRY 1

typedef char * __static_assert_t;

typedef struct _heapinfo _heapinfo, *P_heapinfo;

typedef struct _heapinfo _HEAPINFO;

struct _heapinfo {
    int * _pentry;
    size_t _size;
    int _useflag;
};

#define lhSessionNull 0

#define MAPI_AB_NOMODIFY 1024

#define MAPI_BCC 3

#define MAPI_BODY_AS_FILE 512

#define MAPI_CC 2

#define MAPI_DIALOG 8

#define MAPI_E_ACCESS_DENIED 6

#define MAPI_E_AMBIG_RECIP 21

#define MAPI_E_AMBIGUOUS_RECIPIENT 21

#define MAPI_E_ATTACHMENT_NOT_FOUND 11

#define MAPI_E_ATTACHMENT_OPEN_FAILURE 12

#define MAPI_E_ATTACHMENT_WRITE_FAILURE 13

#define MAPI_E_BAD_RECIPTYPE 15

#define MAPI_E_DISK_FULL 4

#define MAPI_E_FAILURE 2

#define MAPI_E_INSUFFICIENT_MEMORY 5

#define MAPI_E_INVALID_EDITFIELDS 24

#define MAPI_E_INVALID_MESSAGE 17

#define MAPI_E_INVALID_RECIPS 25

#define MAPI_E_INVALID_SESSION 19

#define MAPI_E_LOGIN_FAILURE 3

#define MAPI_E_LOGON_FAILURE 3

#define MAPI_E_MESSAGE_IN_USE 22

#define MAPI_E_NETWORK_FAILURE 23

#define MAPI_E_NO_MESSAGES 16

#define MAPI_E_NOT_SUPPORTED 26

#define MAPI_E_TEXT_TOO_LARGE 18

#define MAPI_E_TOO_MANY_FILES 9

#define MAPI_E_TOO_MANY_RECIPIENTS 10

#define MAPI_E_TOO_MANY_SESSIONS 8

#define MAPI_E_TYPE_NOT_SUPPORTED 20

#define MAPI_E_UNKNOWN_RECIPIENT 14

#define MAPI_E_USER_ABORT 1

#define MAPI_ENVELOPE_ONLY 64

#define MAPI_EXTENDED 32

#define MAPI_FORCE_DOWNLOAD 4096

#define MAPI_GUARANTEE_FIFO 256

#define MAPI_LOGON_UI 1

#define MAPI_LONG_MSGID 16384

#define MAPI_NEW_SESSION 2

#define MAPI_OLE 1

#define MAPI_OLE_STATIC 2

#define MAPI_ORIG 0

#define MAPI_PASSWORD_UI 131072

#define MAPI_PEEK 128

#define MAPI_RECEIPT_REQUESTED 2

#define MAPI_SENT 4

#define MAPI_SUPPRESS_ATTACH 2048

#define MAPI_TO 1

#define MAPI_UNREAD 1

#define MAPI_UNREAD_ONLY 32

#define MAPI_USER_ABORT 1

#define SUCCESS_SUCCESS 0

typedef ulong FLAGS;

typedef ULONG_PTR LHANDLE;


/* WARNING! conflicting data type names: /mapi.h/LPBYTE - /WinDef.h/LPBYTE */

typedef ULONG_PTR * LPLHANDLE;

typedef struct MapiRecipDesc MapiRecipDesc, *PMapiRecipDesc;

typedef struct MapiRecipDesc * lpMapiRecipDesc;

typedef ulong * LPULONG;

typedef ULONG (MAPIADDRESS)(LHANDLE, ULONG_PTR, LPSTR, ULONG, LPSTR, ULONG, lpMapiRecipDesc, FLAGS, ULONG, LPULONG, lpMapiRecipDesc *);

typedef MAPIADDRESS * LPMAPIADDRESS;

struct MapiRecipDesc {
    ULONG ulReserved;
    ULONG ulRecipClass;
    LPSTR lpszName;
    LPSTR lpszAddress;
    ULONG ulEIDSize;
    LPVOID lpEntryID;
};

typedef ULONG (MAPIDELETEMAIL)(LHANDLE, ULONG_PTR, LPSTR, FLAGS, ULONG);

typedef MAPIDELETEMAIL * LPMAPIDELETEMAIL;

typedef ULONG (MAPIDETAILS)(LHANDLE, ULONG_PTR, lpMapiRecipDesc, FLAGS, ULONG);

typedef MAPIDETAILS * LPMAPIDETAILS;

typedef struct MapiFileDesc MapiFileDesc, *PMapiFileDesc;

typedef struct MapiFileDesc * lpMapiFileDesc;

struct MapiFileDesc {
    ULONG ulReserved;
    ULONG flFlags;
    ULONG nPosition;
    LPSTR lpszPathName;
    LPSTR lpszFileName;
    LPVOID lpFileType;
};

typedef struct MapiFileTagExt MapiFileTagExt, *PMapiFileTagExt;

typedef struct MapiFileTagExt * lpMapiFileTagExt;

struct MapiFileTagExt {
    ULONG ulReserved;
    ULONG cbTag;
    LPBYTE lpTag;
    ULONG cbEncoding;
    LPBYTE lpEncoding;
};

typedef ULONG (MAPIFINDNEXT)(LHANDLE, ULONG_PTR, LPSTR, LPSTR, FLAGS, ULONG, LPSTR);

typedef MAPIFINDNEXT * LPMAPIFINDNEXT;

typedef ULONG (* LPMAPIFREEBUFFER)(LPVOID);

typedef ULONG (MAPILOGOFF)(LHANDLE, ULONG_PTR, FLAGS, ULONG);

typedef MAPILOGOFF * LPMAPILOGOFF;

typedef ULONG (MAPILOGON)(ULONG_PTR, LPSTR, LPSTR, FLAGS, ULONG, LPLHANDLE);

typedef MAPILOGON * LPMAPILOGON;

typedef struct MapiMessage MapiMessage, *PMapiMessage;

typedef struct MapiMessage * lpMapiMessage;

struct MapiMessage {
    ULONG ulReserved;
    LPSTR lpszSubject;
    LPSTR lpszNoteText;
    LPSTR lpszMessageType;
    LPSTR lpszDateReceived;
    LPSTR lpszConversationID;
    FLAGS flFlags;
    lpMapiRecipDesc lpOriginator;
    ULONG nRecipCount;
    lpMapiRecipDesc lpRecips;
    ULONG nFileCount;
    lpMapiFileDesc lpFiles;
};

typedef ULONG (MAPIREADMAIL)(LHANDLE, ULONG_PTR, LPSTR, FLAGS, ULONG, lpMapiMessage *);

typedef MAPIREADMAIL * LPMAPIREADMAIL;

typedef ULONG (MAPIRESOLVENAME)(LHANDLE, ULONG_PTR, LPSTR, FLAGS, ULONG, lpMapiRecipDesc *);

typedef MAPIRESOLVENAME * LPMAPIRESOLVENAME;

typedef ULONG (MAPISAVEMAIL)(LHANDLE, ULONG_PTR, lpMapiMessage, FLAGS, ULONG, LPSTR);

typedef MAPISAVEMAIL * LPMAPISAVEMAIL;

typedef ULONG (MAPISENDDOCUMENTS)(ULONG_PTR, LPSTR, LPSTR, LPSTR, ULONG);

typedef MAPISENDDOCUMENTS * LPMAPISENDDOCUMENTS;

typedef ULONG (MAPISENDMAIL)(LHANDLE, ULONG_PTR, lpMapiMessage, FLAGS, ULONG);

typedef MAPISENDMAIL * LPMAPISENDMAIL;

#define _DOMAIN 1

#define _OVERFLOW 3

#define _PLOSS 6

#define _SING 2

#define _TLOSS 5

#define _UNDERFLOW 4

#define DOMAIN 1

#define OVERFLOW 3

#define PLOSS 6

#define SING 2

#define TLOSS 5

#define UNDERFLOW 4

typedef struct _complex _complex, *P_complex;

struct _complex {
    double x;
    double y;
};

typedef struct _exception _exception, *P_exception;

struct _exception {
    int type;
    char * name;
    double arg1;
    double arg2;
    double retval;
};

#define _KANJI_CP 932

#define _M1 4

#define _M2 8

#define _MB_CP_ANSI -3

#define _MB_CP_LOCALE -4

#define _MB_CP_OEM -2

#define _MB_CP_SBCS 0

#define _MBC_ILLEGAL -1

#define _MBC_LEAD 1

#define _MBC_SINGLE 0

#define _MBC_TRAIL 2

#define _MP 2

#define _MS 1

#define _SBLOW 32

#define _SBUP 16

#define _MBHIRAHIGH 33521

#define _MBHIRALOW 33439

#define _MBKATAEXCEPT 33663

#define _MBKATAHIGH 33686

#define _MBKATALOW 33600

#define _MBKIGOUEXCEPT 33151

#define _MBKIGOUHIGH 33196

#define _MBKIGOULOW 33089

#define NUM_ULINFO 6

typedef struct IDummyMBNUCMExt IDummyMBNUCMExt, *PIDummyMBNUCMExt;

typedef struct IDummyMBNUCMExtVtbl IDummyMBNUCMExtVtbl, *PIDummyMBNUCMExtVtbl;

struct IDummyMBNUCMExt {
    struct IDummyMBNUCMExtVtbl * lpVtbl;
};

struct IDummyMBNUCMExtVtbl {
    HRESULT (* QueryInterface)(struct IDummyMBNUCMExt *, IID *, void * *);
    ULONG (* AddRef)(struct IDummyMBNUCMExt *);
    ULONG (* Release)(struct IDummyMBNUCMExt *);
    HRESULT (* GetTypeInfoCount)(struct IDummyMBNUCMExt *, UINT *);
    HRESULT (* GetTypeInfo)(struct IDummyMBNUCMExt *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IDummyMBNUCMExt *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IDummyMBNUCMExt *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct IMbnConnection IMbnConnection, *PIMbnConnection;

typedef struct IMbnConnectionVtbl IMbnConnectionVtbl, *PIMbnConnectionVtbl;

typedef enum MBN_CONNECTION_MODE {
    MBN_CONNECTION_MODE_PROFILE=0,
    MBN_CONNECTION_MODE_TMP_PROFILE=1
} MBN_CONNECTION_MODE;

typedef enum MBN_ACTIVATION_STATE {
    MBN_ACTIVATION_STATE_ACTIVATED=1,
    MBN_ACTIVATION_STATE_ACTIVATING=2,
    MBN_ACTIVATION_STATE_DEACTIVATED=3,
    MBN_ACTIVATION_STATE_DEACTIVATING=4,
    MBN_ACTIVATION_STATE_NONE=0
} MBN_ACTIVATION_STATE;

typedef enum MBN_VOICE_CALL_STATE {
    MBN_VOICE_CALL_STATE_HANGUP=2,
    MBN_VOICE_CALL_STATE_IN_PROGRESS=1,
    MBN_VOICE_CALL_STATE_NONE=0
} MBN_VOICE_CALL_STATE;

struct IMbnConnectionVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnection *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnection *);
    ULONG (* Release)(struct IMbnConnection *);
    HRESULT (* get_ConnectionID)(struct IMbnConnection *, BSTR *);
    HRESULT (* get_InterfaceID)(struct IMbnConnection *, BSTR *);
    HRESULT (* Connect)(struct IMbnConnection *, enum MBN_CONNECTION_MODE, LPCWSTR, ULONG *);
    HRESULT (* Disconnect)(struct IMbnConnection *, ULONG *);
    HRESULT (* GetConnectionState)(struct IMbnConnection *, enum MBN_ACTIVATION_STATE *, BSTR *);
    HRESULT (* GetVoiceCallState)(struct IMbnConnection *, enum MBN_VOICE_CALL_STATE *);
    HRESULT (* GetActivationNetworkError)(struct IMbnConnection *, ULONG *);
};

struct IMbnConnection {
    struct IMbnConnectionVtbl * lpVtbl;
};

typedef struct IMbnConnectionContext IMbnConnectionContext, *PIMbnConnectionContext;

typedef struct IMbnConnectionContextVtbl IMbnConnectionContextVtbl, *PIMbnConnectionContextVtbl;

typedef struct MBN_CONTEXT MBN_CONTEXT, *PMBN_CONTEXT;

typedef enum MBN_CONTEXT_TYPE {
    MBN_CONTEXT_TYPE_CUSTOM=5,
    MBN_CONTEXT_TYPE_INTERNET=1,
    MBN_CONTEXT_TYPE_NONE=0,
    MBN_CONTEXT_TYPE_VIDEO_SHARE=4,
    MBN_CONTEXT_TYPE_VOICE=3,
    MBN_CONTEXT_TYPE_VPN=2
} MBN_CONTEXT_TYPE;

typedef enum MBN_COMPRESSION {
    MBN_COMPRESSION_ENABLE=1,
    MBN_COMPRESSION_NONE=0
} MBN_COMPRESSION;

typedef enum MBN_AUTH_PROTOCOL {
    MBN_AUTH_PROTOCOL_CHAP=2,
    MBN_AUTH_PROTOCOL_MSCHAPV2=3,
    MBN_AUTH_PROTOCOL_NONE=0,
    MBN_AUTH_PROTOCOL_PAP=1
} MBN_AUTH_PROTOCOL;

struct IMbnConnectionContextVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionContext *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionContext *);
    ULONG (* Release)(struct IMbnConnectionContext *);
    HRESULT (* GetProvisionedContexts)(struct IMbnConnectionContext *, SAFEARRAY * *);
    HRESULT (* SetProvisionedContext)(struct IMbnConnectionContext *, struct MBN_CONTEXT, LPCWSTR, ULONG *);
};

struct MBN_CONTEXT {
    ULONG contextID;
    enum MBN_CONTEXT_TYPE contextType;
    BSTR accessString;
    BSTR userName;
    BSTR password;
    enum MBN_COMPRESSION compression;
    enum MBN_AUTH_PROTOCOL authType;
};

struct IMbnConnectionContext {
    struct IMbnConnectionContextVtbl * lpVtbl;
};

typedef struct IMbnConnectionContextEvents IMbnConnectionContextEvents, *PIMbnConnectionContextEvents;

typedef struct IMbnConnectionContextEventsVtbl IMbnConnectionContextEventsVtbl, *PIMbnConnectionContextEventsVtbl;

struct IMbnConnectionContextEvents {
    struct IMbnConnectionContextEventsVtbl * lpVtbl;
};

struct IMbnConnectionContextEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionContextEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionContextEvents *);
    ULONG (* Release)(struct IMbnConnectionContextEvents *);
    HRESULT (* OnProvisionedContextListChange)(struct IMbnConnectionContextEvents *, struct IMbnConnectionContext *);
    HRESULT (* OnSetProvisionedContextComplete)(struct IMbnConnectionContextEvents *, struct IMbnConnectionContext *, ULONG, HRESULT);
};

typedef struct IMbnConnectionEvents IMbnConnectionEvents, *PIMbnConnectionEvents;

typedef struct IMbnConnectionEventsVtbl IMbnConnectionEventsVtbl, *PIMbnConnectionEventsVtbl;

struct IMbnConnectionEvents {
    struct IMbnConnectionEventsVtbl * lpVtbl;
};

struct IMbnConnectionEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionEvents *);
    ULONG (* Release)(struct IMbnConnectionEvents *);
    HRESULT (* OnConnectComplete)(struct IMbnConnectionEvents *, struct IMbnConnection *, ULONG, HRESULT);
    HRESULT (* OnDisconnectComplete)(struct IMbnConnectionEvents *, struct IMbnConnection *, ULONG, HRESULT);
    HRESULT (* OnConnectStateChange)(struct IMbnConnectionEvents *, struct IMbnConnection *);
    HRESULT (* OnVoiceCallStateChange)(struct IMbnConnectionEvents *, struct IMbnConnection *);
};

typedef struct IMbnConnectionManager IMbnConnectionManager, *PIMbnConnectionManager;

typedef struct IMbnConnectionManagerVtbl IMbnConnectionManagerVtbl, *PIMbnConnectionManagerVtbl;

struct IMbnConnectionManagerVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionManager *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionManager *);
    ULONG (* Release)(struct IMbnConnectionManager *);
    HRESULT (* GetConnection)(struct IMbnConnectionManager *, LPCWSTR, struct IMbnConnection * *);
    HRESULT (* GetConnections)(struct IMbnConnectionManager *, SAFEARRAY * *);
};

struct IMbnConnectionManager {
    struct IMbnConnectionManagerVtbl * lpVtbl;
};

typedef struct IMbnConnectionManagerEvents IMbnConnectionManagerEvents, *PIMbnConnectionManagerEvents;

typedef struct IMbnConnectionManagerEventsVtbl IMbnConnectionManagerEventsVtbl, *PIMbnConnectionManagerEventsVtbl;

struct IMbnConnectionManagerEvents {
    struct IMbnConnectionManagerEventsVtbl * lpVtbl;
};

struct IMbnConnectionManagerEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionManagerEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionManagerEvents *);
    ULONG (* Release)(struct IMbnConnectionManagerEvents *);
    HRESULT (* OnConnectionArrival)(struct IMbnConnectionManagerEvents *, struct IMbnConnection *);
    HRESULT (* OnConnectionRemoval)(struct IMbnConnectionManagerEvents *, struct IMbnConnection *);
};

typedef struct IMbnConnectionProfile IMbnConnectionProfile, *PIMbnConnectionProfile;

typedef struct IMbnConnectionProfileVtbl IMbnConnectionProfileVtbl, *PIMbnConnectionProfileVtbl;

struct IMbnConnectionProfileVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionProfile *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionProfile *);
    ULONG (* Release)(struct IMbnConnectionProfile *);
    HRESULT (* GetProfileXmlData)(struct IMbnConnectionProfile *, BSTR *);
    HRESULT (* UpdateProfile)(struct IMbnConnectionProfile *, LPCWSTR);
    HRESULT (* Delete)(struct IMbnConnectionProfile *);
};

struct IMbnConnectionProfile {
    struct IMbnConnectionProfileVtbl * lpVtbl;
};

typedef struct IMbnConnectionProfileEvents IMbnConnectionProfileEvents, *PIMbnConnectionProfileEvents;

typedef struct IMbnConnectionProfileEventsVtbl IMbnConnectionProfileEventsVtbl, *PIMbnConnectionProfileEventsVtbl;

struct IMbnConnectionProfileEvents {
    struct IMbnConnectionProfileEventsVtbl * lpVtbl;
};

struct IMbnConnectionProfileEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionProfileEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionProfileEvents *);
    ULONG (* Release)(struct IMbnConnectionProfileEvents *);
    HRESULT (* OnProfileUpdate)(struct IMbnConnectionProfileEvents *, struct IMbnConnectionProfile *);
};

typedef struct IMbnConnectionProfileManager IMbnConnectionProfileManager, *PIMbnConnectionProfileManager;

typedef struct IMbnConnectionProfileManagerVtbl IMbnConnectionProfileManagerVtbl, *PIMbnConnectionProfileManagerVtbl;

typedef struct IMbnInterface IMbnInterface, *PIMbnInterface;

typedef struct IMbnInterfaceVtbl IMbnInterfaceVtbl, *PIMbnInterfaceVtbl;

typedef struct MBN_INTERFACE_CAPS MBN_INTERFACE_CAPS, *PMBN_INTERFACE_CAPS;

typedef struct IMbnSubscriberInformation IMbnSubscriberInformation, *PIMbnSubscriberInformation;

typedef enum MBN_READY_STATE {
    MBN_READY_STATE_BAD_SIM=3,
    MBN_READY_STATE_DEVICE_BLOCKED=7,
    MBN_READY_STATE_DEVICE_LOCKED=6,
    MBN_READY_STATE_FAILURE=4,
    MBN_READY_STATE_INITIALIZED=1,
    MBN_READY_STATE_NOT_ACTIVATED=5,
    MBN_READY_STATE_OFF=0,
    MBN_READY_STATE_SIM_NOT_INSERTED=2
} MBN_READY_STATE;

typedef struct MBN_PROVIDER MBN_PROVIDER, *PMBN_PROVIDER;

typedef enum MBN_CELLULAR_CLASS {
    MBN_CELLULAR_CLASS_CDMA=2,
    MBN_CELLULAR_CLASS_GSM=1,
    MBN_CELLULAR_CLASS_NONE=0
} MBN_CELLULAR_CLASS;

typedef enum MBN_VOICE_CLASS {
    MBN_VOICE_CLASS_NONE=0,
    MBN_VOICE_CLASS_NO_VOICE=1,
    MBN_VOICE_CLASS_SEPARATE_VOICE_DATA=2,
    MBN_VOICE_CLASS_SIMULTANEOUS_VOICE_DATA=3
} MBN_VOICE_CLASS;

typedef struct IMbnSubscriberInformationVtbl IMbnSubscriberInformationVtbl, *PIMbnSubscriberInformationVtbl;

struct IMbnConnectionProfileManagerVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionProfileManager *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionProfileManager *);
    ULONG (* Release)(struct IMbnConnectionProfileManager *);
    HRESULT (* GetConnectionProfiles)(struct IMbnConnectionProfileManager *, struct IMbnInterface *, SAFEARRAY * *);
    HRESULT (* GetConnectionProfile)(struct IMbnConnectionProfileManager *, struct IMbnInterface *, LPCWSTR, struct IMbnConnectionProfile * *);
    HRESULT (* CreateConnectionProfile)(struct IMbnConnectionProfileManager *, LPCWSTR);
};

struct MBN_INTERFACE_CAPS {
    enum MBN_CELLULAR_CLASS cellularClass;
    enum MBN_VOICE_CLASS voiceClass;
    ULONG dataClass;
    BSTR customDataClass;
    ULONG gsmBandClass;
    ULONG cdmaBandClass;
    BSTR customBandClass;
    ULONG smsCaps;
    ULONG controlCaps;
    BSTR deviceID;
    BSTR manufacturer;
    BSTR model;
    BSTR firmwareInfo;
};

struct IMbnSubscriberInformation {
    struct IMbnSubscriberInformationVtbl * lpVtbl;
};

struct IMbnSubscriberInformationVtbl {
    HRESULT (* QueryInterface)(struct IMbnSubscriberInformation *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSubscriberInformation *);
    ULONG (* Release)(struct IMbnSubscriberInformation *);
    HRESULT (* get_SubscriberID)(struct IMbnSubscriberInformation *, BSTR *);
    HRESULT (* get_SimIccID)(struct IMbnSubscriberInformation *, BSTR *);
    HRESULT (* get_TelephoneNumbers)(struct IMbnSubscriberInformation *, SAFEARRAY * *);
};

struct MBN_PROVIDER {
    BSTR providerID;
    ULONG providerState;
    BSTR providerName;
    ULONG dataClass;
};

struct IMbnInterface {
    struct IMbnInterfaceVtbl * lpVtbl;
};

struct IMbnConnectionProfileManager {
    struct IMbnConnectionProfileManagerVtbl * lpVtbl;
};

struct IMbnInterfaceVtbl {
    HRESULT (* QueryInterface)(struct IMbnInterface *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnInterface *);
    ULONG (* Release)(struct IMbnInterface *);
    HRESULT (* get_InterfaceID)(struct IMbnInterface *, BSTR *);
    HRESULT (* GetInterfaceCapability)(struct IMbnInterface *, struct MBN_INTERFACE_CAPS *);
    HRESULT (* GetSubscriberInformation)(struct IMbnInterface *, struct IMbnSubscriberInformation * *);
    HRESULT (* GetReadyState)(struct IMbnInterface *, enum MBN_READY_STATE *);
    HRESULT (* InEmergencyMode)(struct IMbnInterface *, VARIANT_BOOL *);
    HRESULT (* GetHomeProvider)(struct IMbnInterface *, struct MBN_PROVIDER *);
    HRESULT (* GetPreferredProviders)(struct IMbnInterface *, SAFEARRAY * *);
    HRESULT (* SetPreferredProviders)(struct IMbnInterface *, SAFEARRAY *, ULONG *);
    HRESULT (* GetVisibleProviders)(struct IMbnInterface *, ULONG *, SAFEARRAY * *);
    HRESULT (* ScanNetwork)(struct IMbnInterface *, ULONG *);
    HRESULT (* GetConnection)(struct IMbnInterface *, struct IMbnConnection * *);
};

typedef struct IMbnConnectionProfileManagerEvents IMbnConnectionProfileManagerEvents, *PIMbnConnectionProfileManagerEvents;

typedef struct IMbnConnectionProfileManagerEventsVtbl IMbnConnectionProfileManagerEventsVtbl, *PIMbnConnectionProfileManagerEventsVtbl;

struct IMbnConnectionProfileManagerEvents {
    struct IMbnConnectionProfileManagerEventsVtbl * lpVtbl;
};

struct IMbnConnectionProfileManagerEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnConnectionProfileManagerEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnConnectionProfileManagerEvents *);
    ULONG (* Release)(struct IMbnConnectionProfileManagerEvents *);
    HRESULT (* OnConnectionProfileArrival)(struct IMbnConnectionProfileManagerEvents *, struct IMbnConnectionProfile *);
    HRESULT (* OnConnectionProfileRemoval)(struct IMbnConnectionProfileManagerEvents *, struct IMbnConnectionProfile *);
};

typedef struct IMbnInterfaceEvents IMbnInterfaceEvents, *PIMbnInterfaceEvents;

typedef struct IMbnInterfaceEventsVtbl IMbnInterfaceEventsVtbl, *PIMbnInterfaceEventsVtbl;

struct IMbnInterfaceEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnInterfaceEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnInterfaceEvents *);
    ULONG (* Release)(struct IMbnInterfaceEvents *);
    HRESULT (* OnInterfaceCapabilityAvailable)(struct IMbnInterfaceEvents *, struct IMbnInterface *);
    HRESULT (* OnSubscriberInformationChange)(struct IMbnInterfaceEvents *, struct IMbnInterface *);
    HRESULT (* OnReadyStateChange)(struct IMbnInterfaceEvents *, struct IMbnInterface *);
    HRESULT (* OnEmergencyModeChange)(struct IMbnInterfaceEvents *, struct IMbnInterface *);
    HRESULT (* OnHomeProviderAvailable)(struct IMbnInterfaceEvents *, struct IMbnInterface *);
    HRESULT (* OnPreferredProvidersChange)(struct IMbnInterfaceEvents *, struct IMbnInterface *);
    HRESULT (* OnSetPreferredProvidersComplete)(struct IMbnInterfaceEvents *, struct IMbnInterface *, ULONG, HRESULT);
    HRESULT (* OnScanNetworkComplete)(struct IMbnInterfaceEvents *, struct IMbnInterface *, ULONG, HRESULT);
};

struct IMbnInterfaceEvents {
    struct IMbnInterfaceEventsVtbl * lpVtbl;
};

typedef struct IMbnInterfaceManager IMbnInterfaceManager, *PIMbnInterfaceManager;

typedef struct IMbnInterfaceManagerVtbl IMbnInterfaceManagerVtbl, *PIMbnInterfaceManagerVtbl;

struct IMbnInterfaceManagerVtbl {
    HRESULT (* QueryInterface)(struct IMbnInterfaceManager *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnInterfaceManager *);
    ULONG (* Release)(struct IMbnInterfaceManager *);
    HRESULT (* GetInterface)(struct IMbnInterfaceManager *, LPCWSTR, struct IMbnInterface * *);
    HRESULT (* GetInterfaces)(struct IMbnInterfaceManager *, SAFEARRAY * *);
};

struct IMbnInterfaceManager {
    struct IMbnInterfaceManagerVtbl * lpVtbl;
};

typedef struct IMbnInterfaceManagerEvents IMbnInterfaceManagerEvents, *PIMbnInterfaceManagerEvents;

typedef struct IMbnInterfaceManagerEventsVtbl IMbnInterfaceManagerEventsVtbl, *PIMbnInterfaceManagerEventsVtbl;

struct IMbnInterfaceManagerEvents {
    struct IMbnInterfaceManagerEventsVtbl * lpVtbl;
};

struct IMbnInterfaceManagerEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnInterfaceManagerEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnInterfaceManagerEvents *);
    ULONG (* Release)(struct IMbnInterfaceManagerEvents *);
    HRESULT (* OnInterfaceArrival)(struct IMbnInterfaceManagerEvents *, struct IMbnInterface *);
    HRESULT (* OnInterfaceRemoval)(struct IMbnInterfaceManagerEvents *, struct IMbnInterface *);
};

typedef struct IMbnPin IMbnPin, *PIMbnPin;

typedef struct IMbnPinVtbl IMbnPinVtbl, *PIMbnPinVtbl;

typedef enum MBN_PIN_TYPE {
    MBN_PIN_TYPE_CORPORATE_PIN=9,
    MBN_PIN_TYPE_CUSTOM=1,
    MBN_PIN_TYPE_DEVICE_FIRST_SIM_PIN=5,
    MBN_PIN_TYPE_DEVICE_SIM_PIN=4,
    MBN_PIN_TYPE_NETWORK_PIN=6,
    MBN_PIN_TYPE_NETWORK_SUBSET_PIN=7,
    MBN_PIN_TYPE_NONE=0,
    MBN_PIN_TYPE_PIN1=2,
    MBN_PIN_TYPE_PIN2=3,
    MBN_PIN_TYPE_SUBSIDY_LOCK=10,
    MBN_PIN_TYPE_SVC_PROVIDER_PIN=8
} MBN_PIN_TYPE;

typedef enum MBN_PIN_FORMAT {
    MBN_PIN_FORMAT_ALPHANUMERIC=2,
    MBN_PIN_FORMAT_NONE=0,
    MBN_PIN_FORMAT_NUMERIC=1
} MBN_PIN_FORMAT;

typedef enum MBN_PIN_MODE {
    MBN_PIN_MODE_DISABLED=2,
    MBN_PIN_MODE_ENABLED=1
} MBN_PIN_MODE;

typedef struct IMbnPinManager IMbnPinManager, *PIMbnPinManager;

typedef struct IMbnPinManagerVtbl IMbnPinManagerVtbl, *PIMbnPinManagerVtbl;

struct IMbnPinManager {
    struct IMbnPinManagerVtbl * lpVtbl;
};

struct IMbnPin {
    struct IMbnPinVtbl * lpVtbl;
};

struct IMbnPinManagerVtbl {
    HRESULT (* QueryInterface)(struct IMbnPinManager *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnPinManager *);
    ULONG (* Release)(struct IMbnPinManager *);
    HRESULT (* GetPinList)(struct IMbnPinManager *, SAFEARRAY * *);
    HRESULT (* GetPin)(struct IMbnPinManager *, enum MBN_PIN_TYPE, struct IMbnPin * *);
    HRESULT (* GetPinState)(struct IMbnPinManager *, ULONG *);
};

struct IMbnPinVtbl {
    HRESULT (* QueryInterface)(struct IMbnPin *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnPin *);
    ULONG (* Release)(struct IMbnPin *);
    HRESULT (* get_PinType)(struct IMbnPin *, enum MBN_PIN_TYPE *);
    HRESULT (* get_PinFormat)(struct IMbnPin *, enum MBN_PIN_FORMAT *);
    HRESULT (* get_PinLengthMin)(struct IMbnPin *, ULONG *);
    HRESULT (* get_PinLengthMax)(struct IMbnPin *, ULONG *);
    HRESULT (* get_PinMode)(struct IMbnPin *, enum MBN_PIN_MODE *);
    HRESULT (* Enable)(struct IMbnPin *, LPCWSTR, ULONG *);
    HRESULT (* Disable)(struct IMbnPin *, LPCWSTR, ULONG *);
    HRESULT (* Enter)(struct IMbnPin *, LPCWSTR, ULONG *);
    HRESULT (* Change)(struct IMbnPin *, LPCWSTR, LPCWSTR, ULONG *);
    HRESULT (* Unblock)(struct IMbnPin *, LPCWSTR, LPCWSTR, ULONG *);
    HRESULT (* GetPinManager)(struct IMbnPin *, struct IMbnPinManager * *);
};

typedef struct IMbnPinEvents IMbnPinEvents, *PIMbnPinEvents;

typedef struct IMbnPinEventsVtbl IMbnPinEventsVtbl, *PIMbnPinEventsVtbl;

typedef struct MBN_PIN_INFO MBN_PIN_INFO, *PMBN_PIN_INFO;

typedef enum MBN_PIN_STATE {
    MBN_PIN_STATE_ENTER=1,
    MBN_PIN_STATE_NONE=0,
    MBN_PIN_STATE_UNBLOCK=2
} MBN_PIN_STATE;

struct IMbnPinEvents {
    struct IMbnPinEventsVtbl * lpVtbl;
};

struct IMbnPinEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnPinEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnPinEvents *);
    ULONG (* Release)(struct IMbnPinEvents *);
    HRESULT (* OnEnableComplete)(struct IMbnPinEvents *, struct IMbnPin *, struct MBN_PIN_INFO *, ULONG, HRESULT);
    HRESULT (* OnDisableComplete)(struct IMbnPinEvents *, struct IMbnPin *, struct MBN_PIN_INFO *, ULONG, HRESULT);
    HRESULT (* OnEnterComplete)(struct IMbnPinEvents *, struct IMbnPin *, struct MBN_PIN_INFO *, ULONG, HRESULT);
    HRESULT (* OnChangeComplete)(struct IMbnPinEvents *, struct IMbnPin *, struct MBN_PIN_INFO *, ULONG, HRESULT);
    HRESULT (* OnUnblockComplete)(struct IMbnPinEvents *, struct IMbnPin *, struct MBN_PIN_INFO *, ULONG, HRESULT);
};

struct MBN_PIN_INFO {
    enum MBN_PIN_STATE pinState;
    enum MBN_PIN_TYPE pinType;
    ULONG attemptsRemaining;
};

typedef struct IMbnPinManagerEvents IMbnPinManagerEvents, *PIMbnPinManagerEvents;

typedef struct IMbnPinManagerEventsVtbl IMbnPinManagerEventsVtbl, *PIMbnPinManagerEventsVtbl;

struct IMbnPinManagerEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnPinManagerEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnPinManagerEvents *);
    ULONG (* Release)(struct IMbnPinManagerEvents *);
    HRESULT (* OnPinListAvailable)(struct IMbnPinManagerEvents *, struct IMbnPinManager *);
    HRESULT (* OnGetPinStateComplete)(struct IMbnPinManagerEvents *, struct IMbnPinManager *, struct MBN_PIN_INFO, ULONG, HRESULT);
};

struct IMbnPinManagerEvents {
    struct IMbnPinManagerEventsVtbl * lpVtbl;
};

typedef struct IMbnRadio IMbnRadio, *PIMbnRadio;

typedef struct IMbnRadioVtbl IMbnRadioVtbl, *PIMbnRadioVtbl;

typedef enum MBN_RADIO {
    MBN_RADIO_OFF=0,
    MBN_RADIO_ON=1
} MBN_RADIO;

struct IMbnRadioVtbl {
    HRESULT (* QueryInterface)(struct IMbnRadio *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnRadio *);
    ULONG (* Release)(struct IMbnRadio *);
    HRESULT (* get_SoftwareRadioState)(struct IMbnRadio *, enum MBN_RADIO *);
    HRESULT (* get_HardwareRadioState)(struct IMbnRadio *, enum MBN_RADIO *);
    HRESULT (* SetSoftwareRadioState)(struct IMbnRadio *, enum MBN_RADIO, ULONG *);
};

struct IMbnRadio {
    struct IMbnRadioVtbl * lpVtbl;
};

typedef struct IMbnRadioEvents IMbnRadioEvents, *PIMbnRadioEvents;

typedef struct IMbnRadioEventsVtbl IMbnRadioEventsVtbl, *PIMbnRadioEventsVtbl;

struct IMbnRadioEvents {
    struct IMbnRadioEventsVtbl * lpVtbl;
};

struct IMbnRadioEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnRadioEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnRadioEvents *);
    ULONG (* Release)(struct IMbnRadioEvents *);
    HRESULT (* OnRadioStateChange)(struct IMbnRadioEvents *, struct IMbnRadio *);
    HRESULT (* OnSetSoftwareRadioStateComplete)(struct IMbnRadioEvents *, struct IMbnRadio *, ULONG, HRESULT);
};

typedef struct IMbnRegistration IMbnRegistration, *PIMbnRegistration;

typedef struct IMbnRegistrationVtbl IMbnRegistrationVtbl, *PIMbnRegistrationVtbl;

typedef enum MBN_REGISTER_STATE {
    MBN_REGISTER_STATE_DENIED=6,
    MBN_REGISTER_STATE_DEREGISTERED=1,
    MBN_REGISTER_STATE_HOME=3,
    MBN_REGISTER_STATE_NONE=0,
    MBN_REGISTER_STATE_PARTNER=5,
    MBN_REGISTER_STATE_ROAMING=4,
    MBN_REGISTER_STATE_SEARCHING=2
} MBN_REGISTER_STATE;

typedef enum MBN_REGISTER_MODE {
    MBN_REGISTER_MODE_AUTOMATIC=1,
    MBN_REGISTER_MODE_MANUAL=2,
    MBN_REGISTER_MODE_NONE=0
} MBN_REGISTER_MODE;

struct IMbnRegistration {
    struct IMbnRegistrationVtbl * lpVtbl;
};

struct IMbnRegistrationVtbl {
    HRESULT (* QueryInterface)(struct IMbnRegistration *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnRegistration *);
    ULONG (* Release)(struct IMbnRegistration *);
    HRESULT (* GetRegisterState)(struct IMbnRegistration *, enum MBN_REGISTER_STATE *);
    HRESULT (* GetRegisterMode)(struct IMbnRegistration *, enum MBN_REGISTER_MODE *);
    HRESULT (* GetProviderID)(struct IMbnRegistration *, BSTR *);
    HRESULT (* GetProviderName)(struct IMbnRegistration *, BSTR *);
    HRESULT (* GetRoamingText)(struct IMbnRegistration *, BSTR *);
    HRESULT (* GetAvailableDataClasses)(struct IMbnRegistration *, ULONG *);
    HRESULT (* GetCurrentDataClass)(struct IMbnRegistration *, ULONG *);
    HRESULT (* GetRegistrationNetworkError)(struct IMbnRegistration *, ULONG *);
    HRESULT (* GetPacketAttachNetworkError)(struct IMbnRegistration *, ULONG *);
    HRESULT (* SetRegisterMode)(struct IMbnRegistration *, enum MBN_REGISTER_MODE, LPCWSTR, ULONG, ULONG *);
};

typedef struct IMbnRegistrationEvents IMbnRegistrationEvents, *PIMbnRegistrationEvents;

typedef struct IMbnRegistrationEventsVtbl IMbnRegistrationEventsVtbl, *PIMbnRegistrationEventsVtbl;

struct IMbnRegistrationEvents {
    struct IMbnRegistrationEventsVtbl * lpVtbl;
};

struct IMbnRegistrationEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnRegistrationEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnRegistrationEvents *);
    ULONG (* Release)(struct IMbnRegistrationEvents *);
    HRESULT (* OnRegisterModeAvailable)(struct IMbnRegistrationEvents *, struct IMbnRegistration *);
    HRESULT (* OnRegisterStateChange)(struct IMbnRegistrationEvents *, struct IMbnRegistration *);
    HRESULT (* OnPacketServiceStateChange)(struct IMbnRegistrationEvents *, struct IMbnRegistration *);
    HRESULT (* OnSetRegisterModeComplete)(struct IMbnRegistrationEvents *, struct IMbnRegistration *, ULONG, HRESULT);
};

typedef struct IMbnServiceActivation IMbnServiceActivation, *PIMbnServiceActivation;

typedef struct IMbnServiceActivationVtbl IMbnServiceActivationVtbl, *PIMbnServiceActivationVtbl;

struct IMbnServiceActivationVtbl {
    HRESULT (* QueryInterface)(struct IMbnServiceActivation *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnServiceActivation *);
    ULONG (* Release)(struct IMbnServiceActivation *);
    HRESULT (* Activate)(struct IMbnServiceActivation *, SAFEARRAY *, ULONG *);
};

struct IMbnServiceActivation {
    struct IMbnServiceActivationVtbl * lpVtbl;
};

typedef struct IMbnServiceActivationEvents IMbnServiceActivationEvents, *PIMbnServiceActivationEvents;

typedef struct IMbnServiceActivationEventsVtbl IMbnServiceActivationEventsVtbl, *PIMbnServiceActivationEventsVtbl;

struct IMbnServiceActivationEvents {
    struct IMbnServiceActivationEventsVtbl * lpVtbl;
};

struct IMbnServiceActivationEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnServiceActivationEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnServiceActivationEvents *);
    ULONG (* Release)(struct IMbnServiceActivationEvents *);
    HRESULT (* OnActivationComplete)(struct IMbnServiceActivationEvents *, struct IMbnServiceActivation *, SAFEARRAY *, ULONG, HRESULT, ULONG);
};

typedef struct IMbnSignal IMbnSignal, *PIMbnSignal;

typedef struct IMbnSignalVtbl IMbnSignalVtbl, *PIMbnSignalVtbl;

struct IMbnSignalVtbl {
    HRESULT (* QueryInterface)(struct IMbnSignal *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSignal *);
    ULONG (* Release)(struct IMbnSignal *);
    HRESULT (* GetSignalStrength)(struct IMbnSignal *, ULONG *);
    HRESULT (* GetSignalError)(struct IMbnSignal *, ULONG *);
};

struct IMbnSignal {
    struct IMbnSignalVtbl * lpVtbl;
};

typedef struct IMbnSignalEvents IMbnSignalEvents, *PIMbnSignalEvents;

typedef struct IMbnSignalEventsVtbl IMbnSignalEventsVtbl, *PIMbnSignalEventsVtbl;

struct IMbnSignalEvents {
    struct IMbnSignalEventsVtbl * lpVtbl;
};

struct IMbnSignalEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnSignalEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSignalEvents *);
    ULONG (* Release)(struct IMbnSignalEvents *);
    HRESULT (* OnSignalStateChange)(struct IMbnSignalEvents *, struct IMbnSignal *);
};

typedef struct IMbnSms IMbnSms, *PIMbnSms;

typedef struct IMbnSmsVtbl IMbnSmsVtbl, *PIMbnSmsVtbl;

typedef struct IMbnSmsConfiguration IMbnSmsConfiguration, *PIMbnSmsConfiguration;

typedef enum MBN_SMS_CDMA_ENCODING {
    MBN_SMS_CDMA_ENCODING_7BIT_ASCII=2,
    MBN_SMS_CDMA_ENCODING_EPM=1,
    MBN_SMS_CDMA_ENCODING_GSM_7BIT=9,
    MBN_SMS_CDMA_ENCODING_IA5=3,
    MBN_SMS_CDMA_ENCODING_KOREAN=6,
    MBN_SMS_CDMA_ENCODING_LATIN=8,
    MBN_SMS_CDMA_ENCODING_LATIN_HEBREW=7,
    MBN_SMS_CDMA_ENCODING_OCTET=0,
    MBN_SMS_CDMA_ENCODING_SHIFT_JIS=5,
    MBN_SMS_CDMA_ENCODING_UNICODE=4
} MBN_SMS_CDMA_ENCODING;

typedef enum MBN_SMS_CDMA_LANG {
    MBN_SMS_CDMA_LANG_CHINESE=6,
    MBN_SMS_CDMA_LANG_ENGLISH=1,
    MBN_SMS_CDMA_LANG_FRENCH=2,
    MBN_SMS_CDMA_LANG_HEBREW=7,
    MBN_SMS_CDMA_LANG_JAPANESE=4,
    MBN_SMS_CDMA_LANG_KOREAN=5,
    MBN_SMS_CDMA_LANG_NONE=0,
    MBN_SMS_CDMA_LANG_SPANISH=3
} MBN_SMS_CDMA_LANG;

typedef struct MBN_SMS_FILTER MBN_SMS_FILTER, *PMBN_SMS_FILTER;

typedef enum MBN_SMS_FORMAT {
    MBN_SMS_FORMAT_NONE=0,
    MBN_SMS_FORMAT_PDU=1,
    MBN_SMS_FORMAT_TEXT=2
} MBN_SMS_FORMAT;

typedef struct MBN_SMS_STATUS_INFO MBN_SMS_STATUS_INFO, *PMBN_SMS_STATUS_INFO;

typedef struct IMbnSmsConfigurationVtbl IMbnSmsConfigurationVtbl, *PIMbnSmsConfigurationVtbl;

typedef enum MBN_SMS_FLAG {
    MBN_SMS_FLAG_ALL=0,
    MBN_SMS_FLAG_DRAFT=5,
    MBN_SMS_FLAG_INDEX=1,
    MBN_SMS_FLAG_NEW=2,
    MBN_SMS_FLAG_OLD=3,
    MBN_SMS_FLAG_SENT=4
} MBN_SMS_FLAG;

struct MBN_SMS_FILTER {
    enum MBN_SMS_FLAG flag;
    ULONG messageIndex;
};

struct IMbnSmsConfiguration {
    struct IMbnSmsConfigurationVtbl * lpVtbl;
};

struct IMbnSmsVtbl {
    HRESULT (* QueryInterface)(struct IMbnSms *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSms *);
    ULONG (* Release)(struct IMbnSms *);
    HRESULT (* GetSmsConfiguration)(struct IMbnSms *, struct IMbnSmsConfiguration * *);
    HRESULT (* SetSmsConfiguration)(struct IMbnSms *, struct IMbnSmsConfiguration *, ULONG *);
    HRESULT (* SmsSendPdu)(struct IMbnSms *, LPCWSTR, BYTE, ULONG *);
    HRESULT (* SmsSendCdma)(struct IMbnSms *, LPCWSTR, enum MBN_SMS_CDMA_ENCODING, enum MBN_SMS_CDMA_LANG, ULONG, SAFEARRAY *, ULONG *);
    HRESULT (* SmsSendCdmaPdu)(struct IMbnSms *, SAFEARRAY *, ULONG *);
    HRESULT (* SmsRead)(struct IMbnSms *, struct MBN_SMS_FILTER *, enum MBN_SMS_FORMAT, ULONG *);
    HRESULT (* SmsDelete)(struct IMbnSms *, struct MBN_SMS_FILTER *, ULONG *);
    HRESULT (* GetSmsStatus)(struct IMbnSms *, struct MBN_SMS_STATUS_INFO *);
};

struct MBN_SMS_STATUS_INFO {
    ULONG flag;
    ULONG messageIndex;
};

struct IMbnSms {
    struct IMbnSmsVtbl * lpVtbl;
};

struct IMbnSmsConfigurationVtbl {
    HRESULT (* QueryInterface)(struct IMbnSmsConfiguration *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSmsConfiguration *);
    ULONG (* Release)(struct IMbnSmsConfiguration *);
    HRESULT (* get_ServiceCenterAddress)(struct IMbnSmsConfiguration *, BSTR *);
    HRESULT (* put_ServiceCenterAddress)(struct IMbnSmsConfiguration *, LPCWSTR);
    HRESULT (* get_MaxMessageIndex)(struct IMbnSmsConfiguration *, ULONG *);
    HRESULT (* get_CdmaShortMsgSize)(struct IMbnSmsConfiguration *, ULONG *);
    HRESULT (* get_SmsFormat)(struct IMbnSmsConfiguration *, enum MBN_SMS_FORMAT *);
    HRESULT (* put_SmsFormat)(struct IMbnSmsConfiguration *, enum MBN_SMS_FORMAT);
};

typedef struct IMbnSmsEvents IMbnSmsEvents, *PIMbnSmsEvents;

typedef struct IMbnSmsEventsVtbl IMbnSmsEventsVtbl, *PIMbnSmsEventsVtbl;

struct IMbnSmsEvents {
    struct IMbnSmsEventsVtbl * lpVtbl;
};

struct IMbnSmsEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnSmsEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSmsEvents *);
    ULONG (* Release)(struct IMbnSmsEvents *);
    HRESULT (* OnSmsConfigurationChange)(struct IMbnSmsEvents *, struct IMbnSms *);
    HRESULT (* OnSetSmsConfigurationComplete)(struct IMbnSmsEvents *, struct IMbnSms *, ULONG, HRESULT);
    HRESULT (* OnSmsSendComplete)(struct IMbnSmsEvents *, struct IMbnSms *, ULONG, HRESULT);
    HRESULT (* OnSmsReadComplete)(struct IMbnSmsEvents *, struct IMbnSms *, enum MBN_SMS_FORMAT, SAFEARRAY *, VARIANT_BOOL, ULONG, HRESULT);
    HRESULT (* OnSmsNewClass0Message)(struct IMbnSmsEvents *, struct IMbnSms *, enum MBN_SMS_FORMAT, SAFEARRAY *);
    HRESULT (* OnSmsDeleteComplete)(struct IMbnSmsEvents *, struct IMbnSms *, ULONG, HRESULT);
    HRESULT (* OnSmsStatusChange)(struct IMbnSmsEvents *, struct IMbnSms *);
};

typedef struct IMbnSmsReadMsgPdu IMbnSmsReadMsgPdu, *PIMbnSmsReadMsgPdu;

typedef struct IMbnSmsReadMsgPduVtbl IMbnSmsReadMsgPduVtbl, *PIMbnSmsReadMsgPduVtbl;

typedef enum MBN_MSG_STATUS {
    MBN_MSG_STATUS_DRAFT=2,
    MBN_MSG_STATUS_NEW=0,
    MBN_MSG_STATUS_OLD=1,
    MBN_MSG_STATUS_SENT=3
} MBN_MSG_STATUS;

struct IMbnSmsReadMsgPduVtbl {
    HRESULT (* QueryInterface)(struct IMbnSmsReadMsgPdu *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSmsReadMsgPdu *);
    ULONG (* Release)(struct IMbnSmsReadMsgPdu *);
    HRESULT (* get_Index)(struct IMbnSmsReadMsgPdu *, ULONG *);
    HRESULT (* get_Status)(struct IMbnSmsReadMsgPdu *, enum MBN_MSG_STATUS *);
    HRESULT (* get_PduData)(struct IMbnSmsReadMsgPdu *, BSTR *);
    HRESULT (* get_Message)(struct IMbnSmsReadMsgPdu *, SAFEARRAY * *);
};

struct IMbnSmsReadMsgPdu {
    struct IMbnSmsReadMsgPduVtbl * lpVtbl;
};

typedef struct IMbnSmsReadMsgTextCdma IMbnSmsReadMsgTextCdma, *PIMbnSmsReadMsgTextCdma;

typedef struct IMbnSmsReadMsgTextCdmaVtbl IMbnSmsReadMsgTextCdmaVtbl, *PIMbnSmsReadMsgTextCdmaVtbl;

struct IMbnSmsReadMsgTextCdma {
    struct IMbnSmsReadMsgTextCdmaVtbl * lpVtbl;
};

struct IMbnSmsReadMsgTextCdmaVtbl {
    HRESULT (* QueryInterface)(struct IMbnSmsReadMsgTextCdma *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnSmsReadMsgTextCdma *);
    ULONG (* Release)(struct IMbnSmsReadMsgTextCdma *);
    HRESULT (* get_Index)(struct IMbnSmsReadMsgTextCdma *, ULONG *);
    HRESULT (* get_Status)(struct IMbnSmsReadMsgTextCdma *, enum MBN_MSG_STATUS *);
    HRESULT (* get_Address)(struct IMbnSmsReadMsgTextCdma *, BSTR *);
    HRESULT (* get_Timestamp)(struct IMbnSmsReadMsgTextCdma *, BSTR *);
    HRESULT (* get_EncodingID)(struct IMbnSmsReadMsgTextCdma *, enum MBN_SMS_CDMA_ENCODING *);
    HRESULT (* get_LanguageID)(struct IMbnSmsReadMsgTextCdma *, enum MBN_SMS_CDMA_LANG *);
    HRESULT (* get_SizeInCharacters)(struct IMbnSmsReadMsgTextCdma *, ULONG *);
    HRESULT (* get_Message)(struct IMbnSmsReadMsgTextCdma *, SAFEARRAY * *);
};

typedef struct IMbnVendorSpecificEvents IMbnVendorSpecificEvents, *PIMbnVendorSpecificEvents;

typedef struct IMbnVendorSpecificEventsVtbl IMbnVendorSpecificEventsVtbl, *PIMbnVendorSpecificEventsVtbl;

typedef struct IMbnVendorSpecificOperation IMbnVendorSpecificOperation, *PIMbnVendorSpecificOperation;

typedef struct IMbnVendorSpecificOperationVtbl IMbnVendorSpecificOperationVtbl, *PIMbnVendorSpecificOperationVtbl;

struct IMbnVendorSpecificOperation {
    struct IMbnVendorSpecificOperationVtbl * lpVtbl;
};

struct IMbnVendorSpecificOperationVtbl {
    HRESULT (* QueryInterface)(struct IMbnVendorSpecificOperation *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnVendorSpecificOperation *);
    ULONG (* Release)(struct IMbnVendorSpecificOperation *);
    HRESULT (* SetVendorSpecific)(struct IMbnVendorSpecificOperation *, SAFEARRAY *, ULONG *);
};

struct IMbnVendorSpecificEventsVtbl {
    HRESULT (* QueryInterface)(struct IMbnVendorSpecificEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IMbnVendorSpecificEvents *);
    ULONG (* Release)(struct IMbnVendorSpecificEvents *);
    HRESULT (* OnEventNotification)(struct IMbnVendorSpecificEvents *, struct IMbnVendorSpecificOperation *, SAFEARRAY *);
    HRESULT (* OnSetVendorSpecificComplete)(struct IMbnVendorSpecificEvents *, struct IMbnVendorSpecificOperation *, SAFEARRAY *, ULONG);
};

struct IMbnVendorSpecificEvents {
    struct IMbnVendorSpecificEventsVtbl * lpVtbl;
};

typedef enum MBN_BAND_CLASS {
    MBN_BAND_CLASS_0=1,
    MBN_BAND_CLASS_CUSTOM=-2147483648,
    MBN_BAND_CLASS_I=2,
    MBN_BAND_CLASS_II=4,
    MBN_BAND_CLASS_III=8,
    MBN_BAND_CLASS_IV=16,
    MBN_BAND_CLASS_IX=512,
    MBN_BAND_CLASS_NONE=0,
    MBN_BAND_CLASS_V=32,
    MBN_BAND_CLASS_VI=64,
    MBN_BAND_CLASS_VII=128,
    MBN_BAND_CLASS_VIII=256,
    MBN_BAND_CLASS_X=1024,
    MBN_BAND_CLASS_XI=2048,
    MBN_BAND_CLASS_XII=4096,
    MBN_BAND_CLASS_XIII=8192,
    MBN_BAND_CLASS_XIV=16384,
    MBN_BAND_CLASS_XV=32768,
    MBN_BAND_CLASS_XVI=65536,
    MBN_BAND_CLASS_XVII=131072
} MBN_BAND_CLASS;

typedef enum MBN_CONTEXT_CONSTANTS {
    MBN_ACCESSSTRING_LEN=100,
    MBN_CONTEXT_ID_APPEND=-1,
    MBN_PASSWORD_LEN=255,
    MBN_USERNAME_LEN=255
} MBN_CONTEXT_CONSTANTS;

typedef enum MBN_CTRL_CAPS {
    MBN_CTRL_CAPS_CDMA_MOBILE_IP=4,
    MBN_CTRL_CAPS_CDMA_SIMPLE_IP=8,
    MBN_CTRL_CAPS_HW_RADIO_SWITCH=2,
    MBN_CTRL_CAPS_NONE=0,
    MBN_CTRL_CAPS_PROTECT_UNIQUEID=16,
    MBN_CTRL_CAPS_REG_MANUAL=1
} MBN_CTRL_CAPS;

typedef enum MBN_DATA_CLASS {
    MBN_DATA_CLASS_1XEVDO=131072,
    MBN_DATA_CLASS_1XEVDO_REVA=262144,
    MBN_DATA_CLASS_1XEVDO_REVB=2097152,
    MBN_DATA_CLASS_1XEVDV=524288,
    MBN_DATA_CLASS_1XRTT=65536,
    MBN_DATA_CLASS_3XRTT=1048576,
    MBN_DATA_CLASS_CUSTOM=-2147483648,
    MBN_DATA_CLASS_EDGE=2,
    MBN_DATA_CLASS_GPRS=1,
    MBN_DATA_CLASS_HSDPA=8,
    MBN_DATA_CLASS_HSUPA=16,
    MBN_DATA_CLASS_LTE=32,
    MBN_DATA_CLASS_NONE=0,
    MBN_DATA_CLASS_UMB=4194304,
    MBN_DATA_CLASS_UMTS=4
} MBN_DATA_CLASS;

typedef enum MBN_INTERFACE_CAPS_CONSTANTS {
    MBN_DEVICEID_LEN=18,
    MBN_FIRMWARE_LEN=32,
    MBN_MANUFACTURER_LEN=32,
    MBN_MODEL_LEN=32
} MBN_INTERFACE_CAPS_CONSTANTS;

typedef enum MBN_PIN_CONSTANTS {
    MBN_ATTEMPTS_REMAINING_UNKNOWN=-1,
    MBN_PIN_LENGTH_UNKNOWN=-1
} MBN_PIN_CONSTANTS;

typedef enum MBN_PROVIDER_CONSTANTS {
    MBN_PROVIDERID_LEN=6,
    MBN_PROVIDERNAME_LEN=20
} MBN_PROVIDER_CONSTANTS;

typedef enum MBN_PROVIDER_STATE {
    MBN_PROVIDER_STATE_FORBIDDEN=2,
    MBN_PROVIDER_STATE_HOME=1,
    MBN_PROVIDER_STATE_NONE=0,
    MBN_PROVIDER_STATE_PREFERRED=4,
    MBN_PROVIDER_STATE_REGISTERED=16,
    MBN_PROVIDER_STATE_VISIBLE=8
} MBN_PROVIDER_STATE;

typedef enum MBN_REGISTRATION_CONSTANTS {
    MBN_CDMA_DEFAULT_PROVIDER_ID=0,
    MBN_ROAMTEXT_LEN=64
} MBN_REGISTRATION_CONSTANTS;

typedef enum MBN_SIGNAL_CONSTANTS {
    MBN_ERROR_RATE_UNKNOWN=99,
    MBN_RSSI_DEFAULT=-1,
    MBN_RSSI_DISABLE=0,
    MBN_RSSI_UNKNOWN=99
} MBN_SIGNAL_CONSTANTS;

typedef enum MBN_SMS_CAPS {
    MBN_SMS_CAPS_NONE=0,
    MBN_SMS_CAPS_PDU_RECEIVE=1,
    MBN_SMS_CAPS_PDU_SEND=2,
    MBN_SMS_CAPS_TEXT_RECEIVE=4,
    MBN_SMS_CAPS_TEXT_SEND=8
} MBN_SMS_CAPS;

typedef enum MBN_SMS_CONSTANTS {
    MBN_CDMA_SHORT_MSG_SIZE_MAX=160,
    MBN_CDMA_SHORT_MSG_SIZE_UNKNOWN=0,
    MBN_MESSAGE_INDEX_NONE=0
} MBN_SMS_CONSTANTS;

typedef enum MBN_SMS_STATUS_FLAG {
    MBN_SMS_FLAG_MESSAGE_STORE_FULL=1,
    MBN_SMS_FLAG_NEW_MESSAGE=2,
    MBN_SMS_FLAG_NONE=0
} MBN_SMS_STATUS_FLAG;

typedef struct MbnConnectionManager MbnConnectionManager, *PMbnConnectionManager;

struct MbnConnectionManager {
};

typedef struct MbnConnectionProfileManager MbnConnectionProfileManager, *PMbnConnectionProfileManager;

struct MbnConnectionProfileManager {
};

typedef struct MbnInterfaceManager MbnInterfaceManager, *PMbnInterfaceManager;

struct MbnInterfaceManager {
};

typedef enum MBN_SMS_CONSTANTS WWAEXT_SMS_CONSTANTS;

typedef struct threadmbcinfostruct threadmbcinfo;

#define DIALOPTION_BILLING 64

#define DIALOPTION_DIALTONE 256

#define DIALOPTION_QUIET 128

#define MDM_ANALOG_RLP_OFF 1

#define MDM_ANALOG_RLP_ON 0

#define MDM_ANALOG_V34 2

#define MDM_AUTO_ML_2 2

#define MDM_AUTO_ML_DEFAULT 0

#define MDM_AUTO_ML_NONE 1

#define MDM_AUTO_SPEED_DEFAULT 0

#define MDM_BEARERMODE_ANALOG 0

#define MDM_BEARERMODE_GSM 2

#define MDM_BEARERMODE_ISDN 1

#define MDM_BLIND_DIAL 512

#define MDM_CCITT_OVERRIDE 64

#define MDM_CELLULAR 8

#define MDM_COMPRESSION 1

#define MDM_DIAGNOSTICS 2048

#define MDM_ERROR_CONTROL 2

#define MDM_FLOWCONTROL_HARD 16

#define MDM_FLOWCONTROL_SOFT 32

#define MDM_FORCED_EC 4

#define MDM_HDLCPPP_AUTH_CHAP 3

#define MDM_HDLCPPP_AUTH_DEFAULT 0

#define MDM_HDLCPPP_AUTH_MSCHAP 4

#define MDM_HDLCPPP_AUTH_NONE 1

#define MDM_HDLCPPP_AUTH_PAP 2

#define MDM_HDLCPPP_ML_2 2

#define MDM_HDLCPPP_ML_DEFAULT 0

#define MDM_HDLCPPP_ML_NONE 1

#define MDM_HDLCPPP_SPEED_56K 2

#define MDM_HDLCPPP_SPEED_64K 1

#define MDM_HDLCPPP_SPEED_DEFAULT 0

#define MDM_MASK_AUTO_ML 192

#define MDM_MASK_AUTO_SPEED 7

#define MDM_MASK_BEARERMODE 61440

#define MDM_MASK_EXTENDEDINFO 268431360

#define MDM_MASK_HDLCPPP_AUTH 56

#define MDM_MASK_HDLCPPP_ML 192

#define MDM_MASK_HDLCPPP_SPEED 7

#define MDM_MASK_PROTOCOLDATA 267386880

#define MDM_MASK_PROTOCOLID 983040

#define MDM_MASK_PROTOCOLINFO 268369920

#define MDM_MASK_V110_SPEED 15

#define MDM_MASK_V120_ML 192

#define MDM_MASK_V120_SPEED 7

#define MDM_MASK_X75_DATA 7

#define MDM_PIAFS_INCOMING 0

#define MDM_PIAFS_OUTGOING 1

#define MDM_PROTOCOLID_ANALOG 7

#define MDM_PROTOCOLID_AUTO 6

#define MDM_PROTOCOLID_DEFAULT 0

#define MDM_PROTOCOLID_GPRS 8

#define MDM_PROTOCOLID_HDLCPPP 1

#define MDM_PROTOCOLID_PIAFS 9

#define MDM_PROTOCOLID_V110 4

#define MDM_PROTOCOLID_V120 5

#define MDM_PROTOCOLID_V128 2

#define MDM_PROTOCOLID_X75 3

#define MDM_SHIFT_AUTO_ML 6

#define MDM_SHIFT_AUTO_SPEED 0

#define MDM_SHIFT_BEARERMODE 12

#define MDM_SHIFT_EXTENDEDINFO 12

#define MDM_SHIFT_HDLCPPP_AUTH 3

#define MDM_SHIFT_HDLCPPP_ML 6

#define MDM_SHIFT_HDLCPPP_SPEED 0

#define MDM_SHIFT_PROTOCOLDATA 20

#define MDM_SHIFT_PROTOCOLID 16

#define MDM_SHIFT_PROTOCOLINFO 16

#define MDM_SHIFT_V110_SPEED 0

#define MDM_SHIFT_V120_ML 6

#define MDM_SHIFT_V120_SPEED 0

#define MDM_SHIFT_X75_DATA 0

#define MDM_SPEED_ADJUST 128

#define MDM_TONE_DIAL 256

#define MDM_V110_SPEED_12DOT0K 5

#define MDM_V110_SPEED_14DOT4K 6

#define MDM_V110_SPEED_19DOT2K 7

#define MDM_V110_SPEED_1DOT2K 1

#define MDM_V110_SPEED_28DOT8K 8

#define MDM_V110_SPEED_2DOT4K 2

#define MDM_V110_SPEED_38DOT4K 9

#define MDM_V110_SPEED_4DOT8K 3

#define MDM_V110_SPEED_57DOT6K 10

#define MDM_V110_SPEED_9DOT6K 4

#define MDM_V110_SPEED_DEFAULT 0

#define MDM_V120_ML_2 2

#define MDM_V120_ML_DEFAULT 0

#define MDM_V120_ML_NONE 1

#define MDM_V120_SPEED_56K 2

#define MDM_V120_SPEED_64K 1

#define MDM_V120_SPEED_DEFAULT 0

#define MDM_V23_OVERRIDE 1024

#define MDM_X75_DATA_128K 2

#define MDM_X75_DATA_64K 1

#define MDM_X75_DATA_BTX 4

#define MDM_X75_DATA_DEFAULT 0

#define MDM_X75_DATA_T_70 3

#define MDMSPKR_CALLSETUP 3

#define MDMSPKR_DIAL 1

#define MDMSPKR_OFF 0

#define MDMSPKR_ON 2

#define MDMSPKRFLAG_CALLSETUP 8

#define MDMSPKRFLAG_DIAL 2

#define MDMSPKRFLAG_OFF 1

#define MDMSPKRFLAG_ON 4

#define MDMVOL_HIGH 2

#define MDMVOL_LOW 0

#define MDMVOL_MEDIUM 1

#define MDMVOLFLAG_HIGH 4

#define MDMVOLFLAG_LOW 1

#define MDMVOLFLAG_MEDIUM 2

typedef struct _MODEMDEVCAPS _MODEMDEVCAPS, *P_MODEMDEVCAPS;

struct _MODEMDEVCAPS {
    DWORD dwActualSize;
    DWORD dwRequiredSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDevSpecificSize;
    DWORD dwModemProviderVersion;
    DWORD dwModemManufacturerOffset;
    DWORD dwModemManufacturerSize;
    DWORD dwModemModelOffset;
    DWORD dwModemModelSize;
    DWORD dwModemVersionOffset;
    DWORD dwModemVersionSize;
    DWORD dwDialOptions;
    DWORD dwCallSetupFailTimer;
    DWORD dwInactivityTimeout;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerMode;
    DWORD dwModemOptions;
    DWORD dwMaxDTERate;
    DWORD dwMaxDCERate;
    BYTE abVariablePortion[1];
};

typedef struct _MODEMSETTINGS _MODEMSETTINGS, *P_MODEMSETTINGS;

struct _MODEMSETTINGS {
    DWORD dwActualSize;
    DWORD dwRequiredSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDevSpecificSize;
    DWORD dwCallSetupFailTimer;
    DWORD dwInactivityTimeout;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerMode;
    DWORD dwPreferredModemOptions;
    DWORD dwNegotiatedModemOptions;
    DWORD dwNegotiatedDCERate;
    BYTE abVariablePortion[1];
};

typedef struct _MODEMDEVCAPS * LPMODEMDEVCAPS;

typedef struct _MODEMSETTINGS * LPMODEMSETTINGS;

typedef struct _MODEMDEVCAPS MODEMDEVCAPS;

typedef struct _MODEMSETTINGS MODEMSETTINGS;

typedef struct _MODEMDEVCAPS * PMODEMDEVCAPS;

typedef struct _MODEMSETTINGS * PMODEMSETTINGS;

typedef enum _DMO_INPLACE_PROCESS_FLAGS {
    DMO_INPLACE_NORMAL=0,
    DMO_INPLACE_ZERO=1
} _DMO_INPLACE_PROCESS_FLAGS;

typedef enum _DMO_INPUT_DATA_BUFFER_FLAGS {
    DMO_INPUT_DATA_BUFFERF_SYNCPOINT=1,
    DMO_INPUT_DATA_BUFFERF_TIME=2,
    DMO_INPUT_DATA_BUFFERF_TIMELENGTH=4
} _DMO_INPUT_DATA_BUFFER_FLAGS;

typedef enum _DMO_INPUT_STATUS_FLAGS {
    DMO_INPUT_STATUSF_ACCEPT_DATA=1
} _DMO_INPUT_STATUS_FLAGS;

typedef enum _DMO_INPUT_STREAM_INFO_FLAGS {
    DMO_INPUT_STREAMF_FIXED_SAMPLE_SIZE=4,
    DMO_INPUT_STREAMF_HOLDS_BUFFERS=8,
    DMO_INPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER=2,
    DMO_INPUT_STREAMF_WHOLE_SAMPLES=1
} _DMO_INPUT_STREAM_INFO_FLAGS;

typedef struct _DMO_OUTPUT_DATA_BUFFER _DMO_OUTPUT_DATA_BUFFER, *P_DMO_OUTPUT_DATA_BUFFER;

typedef struct IMediaBuffer IMediaBuffer, *PIMediaBuffer;

typedef LONGLONG REFERENCE_TIME;

typedef struct IMediaBufferVtbl IMediaBufferVtbl, *PIMediaBufferVtbl;

struct IMediaBuffer {
    struct IMediaBufferVtbl * lpVtbl;
};

struct IMediaBufferVtbl {
    HRESULT (* QueryInterface)(struct IMediaBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IMediaBuffer *);
    ULONG (* Release)(struct IMediaBuffer *);
    HRESULT (* SetLength)(struct IMediaBuffer *, DWORD);
    HRESULT (* GetMaxLength)(struct IMediaBuffer *, DWORD *);
    HRESULT (* GetBufferAndLength)(struct IMediaBuffer *, BYTE * *, DWORD *);
};

struct _DMO_OUTPUT_DATA_BUFFER {
    struct IMediaBuffer * pBuffer;
    DWORD dwStatus;
    REFERENCE_TIME rtTimestamp;
    REFERENCE_TIME rtTimelength;
};

typedef enum _DMO_OUTPUT_DATA_BUFFER_FLAGS {
    DMO_OUTPUT_DATA_BUFFERF_INCOMPLETE=16777216,
    DMO_OUTPUT_DATA_BUFFERF_SYNCPOINT=1,
    DMO_OUTPUT_DATA_BUFFERF_TIME=2,
    DMO_OUTPUT_DATA_BUFFERF_TIMELENGTH=4
} _DMO_OUTPUT_DATA_BUFFER_FLAGS;

typedef enum _DMO_OUTPUT_STREAM_INFO_FLAGS {
    DMO_OUTPUT_STREAMF_DISCARDABLE=8,
    DMO_OUTPUT_STREAMF_FIXED_SAMPLE_SIZE=4,
    DMO_OUTPUT_STREAMF_OPTIONAL=16,
    DMO_OUTPUT_STREAMF_SINGLE_SAMPLE_PER_BUFFER=2,
    DMO_OUTPUT_STREAMF_WHOLE_SAMPLES=1
} _DMO_OUTPUT_STREAM_INFO_FLAGS;

typedef enum _DMO_PROCESS_OUTPUT_FLAGS {
    DMO_PROCESS_OUTPUT_DISCARD_WHEN_NO_BUFFER=1
} _DMO_PROCESS_OUTPUT_FLAGS;

typedef enum _DMO_QUALITY_STATUS_FLAGS {
    DMO_QUALITY_STATUS_ENABLED=1
} _DMO_QUALITY_STATUS_FLAGS;

typedef enum _DMO_SET_TYPE_FLAGS {
    DMO_SET_TYPEF_CLEAR=2,
    DMO_SET_TYPEF_TEST_ONLY=1
} _DMO_SET_TYPE_FLAGS;

typedef enum _DMO_VIDEO_OUTPUT_STREAM_FLAGS {
    DMO_VOSF_NEEDS_PREVIOUS_SAMPLE=1
} _DMO_VIDEO_OUTPUT_STREAM_FLAGS;

typedef struct _DMOMediaType _DMOMediaType, *P_DMOMediaType;

struct _DMOMediaType {
    GUID majortype;
    GUID subtype;
    BOOL bFixedSizeSamples;
    BOOL bTemporalCompression;
    ULONG lSampleSize;
    GUID formattype;
    struct IUnknown * pUnk;
    ULONG cbFormat;
    BYTE * pbFormat;
};

typedef struct _DMOMediaType DMO_MEDIA_TYPE;

typedef struct _DMO_OUTPUT_DATA_BUFFER DMO_OUTPUT_DATA_BUFFER;

typedef struct IDMOQualityControl IDMOQualityControl, *PIDMOQualityControl;

typedef struct IDMOQualityControlVtbl IDMOQualityControlVtbl, *PIDMOQualityControlVtbl;

struct IDMOQualityControlVtbl {
    HRESULT (* QueryInterface)(struct IDMOQualityControl *, IID *, void * *);
    ULONG (* AddRef)(struct IDMOQualityControl *);
    ULONG (* Release)(struct IDMOQualityControl *);
    HRESULT (* SetNow)(struct IDMOQualityControl *, REFERENCE_TIME);
    HRESULT (* SetStatus)(struct IDMOQualityControl *, DWORD);
    HRESULT (* GetStatus)(struct IDMOQualityControl *, DWORD *);
};

struct IDMOQualityControl {
    struct IDMOQualityControlVtbl * lpVtbl;
};

typedef struct IDMOVideoOutputOptimizations IDMOVideoOutputOptimizations, *PIDMOVideoOutputOptimizations;

typedef struct IDMOVideoOutputOptimizationsVtbl IDMOVideoOutputOptimizationsVtbl, *PIDMOVideoOutputOptimizationsVtbl;

struct IDMOVideoOutputOptimizations {
    struct IDMOVideoOutputOptimizationsVtbl * lpVtbl;
};

struct IDMOVideoOutputOptimizationsVtbl {
    HRESULT (* QueryInterface)(struct IDMOVideoOutputOptimizations *, IID *, void * *);
    ULONG (* AddRef)(struct IDMOVideoOutputOptimizations *);
    ULONG (* Release)(struct IDMOVideoOutputOptimizations *);
    HRESULT (* QueryOperationModePreferences)(struct IDMOVideoOutputOptimizations *, ULONG, DWORD *);
    HRESULT (* SetOperationMode)(struct IDMOVideoOutputOptimizations *, ULONG, DWORD);
    HRESULT (* GetCurrentOperationMode)(struct IDMOVideoOutputOptimizations *, ULONG, DWORD *);
    HRESULT (* GetCurrentSampleRequirements)(struct IDMOVideoOutputOptimizations *, ULONG, DWORD *);
};

typedef struct IEnumDMO IEnumDMO, *PIEnumDMO;

typedef struct IEnumDMOVtbl IEnumDMOVtbl, *PIEnumDMOVtbl;

struct IEnumDMO {
    struct IEnumDMOVtbl * lpVtbl;
};

struct IEnumDMOVtbl {
    HRESULT (* QueryInterface)(struct IEnumDMO *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumDMO *);
    ULONG (* Release)(struct IEnumDMO *);
    HRESULT (* Next)(struct IEnumDMO *, DWORD, CLSID *, LPWSTR *, DWORD *);
    HRESULT (* Skip)(struct IEnumDMO *, DWORD);
    HRESULT (* Reset)(struct IEnumDMO *);
    HRESULT (* Clone)(struct IEnumDMO *, struct IEnumDMO * *);
};

typedef struct IMediaObject IMediaObject, *PIMediaObject;

typedef struct IMediaObjectVtbl IMediaObjectVtbl, *PIMediaObjectVtbl;

struct IMediaObjectVtbl {
    HRESULT (* QueryInterface)(struct IMediaObject *, IID *, void * *);
    ULONG (* AddRef)(struct IMediaObject *);
    ULONG (* Release)(struct IMediaObject *);
    HRESULT (* GetStreamCount)(struct IMediaObject *, DWORD *, DWORD *);
    HRESULT (* GetInputStreamInfo)(struct IMediaObject *, DWORD, DWORD *);
    HRESULT (* GetOutputStreamInfo)(struct IMediaObject *, DWORD, DWORD *);
    HRESULT (* GetInputType)(struct IMediaObject *, DWORD, DWORD, DMO_MEDIA_TYPE *);
    HRESULT (* GetOutputType)(struct IMediaObject *, DWORD, DWORD, DMO_MEDIA_TYPE *);
    HRESULT (* SetInputType)(struct IMediaObject *, DWORD, DMO_MEDIA_TYPE *, DWORD);
    HRESULT (* SetOutputType)(struct IMediaObject *, DWORD, DMO_MEDIA_TYPE *, DWORD);
    HRESULT (* GetInputCurrentType)(struct IMediaObject *, DWORD, DMO_MEDIA_TYPE *);
    HRESULT (* GetOutputCurrentType)(struct IMediaObject *, DWORD, DMO_MEDIA_TYPE *);
    HRESULT (* GetInputSizeInfo)(struct IMediaObject *, DWORD, DWORD *, DWORD *, DWORD *);
    HRESULT (* GetOutputSizeInfo)(struct IMediaObject *, DWORD, DWORD *, DWORD *);
    HRESULT (* GetInputMaxLatency)(struct IMediaObject *, DWORD, REFERENCE_TIME *);
    HRESULT (* SetInputMaxLatency)(struct IMediaObject *, DWORD, REFERENCE_TIME);
    HRESULT (* Flush)(struct IMediaObject *);
    HRESULT (* Discontinuity)(struct IMediaObject *, DWORD);
    HRESULT (* AllocateStreamingResources)(struct IMediaObject *);
    HRESULT (* FreeStreamingResources)(struct IMediaObject *);
    HRESULT (* GetInputStatus)(struct IMediaObject *, DWORD, DWORD *);
    HRESULT (* ProcessInput)(struct IMediaObject *, DWORD, struct IMediaBuffer *, DWORD, REFERENCE_TIME, REFERENCE_TIME);
    HRESULT (* ProcessOutput)(struct IMediaObject *, DWORD, DWORD, DMO_OUTPUT_DATA_BUFFER *, DWORD *);
    HRESULT (* Lock)(struct IMediaObject *, LONG);
};

struct IMediaObject {
    struct IMediaObjectVtbl * lpVtbl;
};

typedef struct IMediaObjectInPlace IMediaObjectInPlace, *PIMediaObjectInPlace;

typedef struct IMediaObjectInPlaceVtbl IMediaObjectInPlaceVtbl, *PIMediaObjectInPlaceVtbl;

struct IMediaObjectInPlace {
    struct IMediaObjectInPlaceVtbl * lpVtbl;
};

struct IMediaObjectInPlaceVtbl {
    HRESULT (* QueryInterface)(struct IMediaObjectInPlace *, IID *, void * *);
    ULONG (* AddRef)(struct IMediaObjectInPlace *);
    ULONG (* Release)(struct IMediaObjectInPlace *);
    HRESULT (* Process)(struct IMediaObjectInPlace *, ULONG, BYTE *, REFERENCE_TIME, DWORD);
    HRESULT (* Clone)(struct IMediaObjectInPlace *, struct IMediaObjectInPlace * *);
    HRESULT (* GetLatency)(struct IMediaObjectInPlace *, REFERENCE_TIME *);
};

typedef struct _DMO_OUTPUT_DATA_BUFFER * PDMO_OUTPUT_DATA_BUFFER;

#define MF_128_BYTE_ALIGNMENT 127

#define MF_16_BYTE_ALIGNMENT 15

#define MF_1_BYTE_ALIGNMENT 0

#define MF_256_BYTE_ALIGNMENT 255

#define MF_2_BYTE_ALIGNMENT 1

#define MF_32_BYTE_ALIGNMENT 31

#define MF_4_BYTE_ALIGNMENT 3

#define MF_512_BYTE_ALIGNMENT 511

#define MF_64_BYTE_ALIGNMENT 63

#define MF_8_BYTE_ALIGNMENT 7

#define MF_API_VERSION 112

#define MF_SDK_VERSION 2

#define MF_VERSION 131184

#define MFSESSIONCAP_PAUSE 4

#define MFSESSIONCAP_RATE_FORWARD 16

#define MFSESSIONCAP_RATE_REVERSE 32

#define MFSESSIONCAP_SEEK 2

#define MFSESSIONCAP_START 1

#define MFSTARTUP_FULL 0

#define MFSTARTUP_LITE 1

#define MFSTARTUP_NOSOCKET 1

typedef struct _AMMediaType _AMMediaType, *P_AMMediaType;

struct _AMMediaType {
};

typedef enum _EAllocationType {
    eAllocationTypeDynamic=0,
    eAllocationTypeIgnore=3,
    eAllocationTypePageable=2,
    eAllocationTypeRT=1
} _EAllocationType;

typedef struct _MFFOLDDOWN_MATRIX _MFFOLDDOWN_MATRIX, *P_MFFOLDDOWN_MATRIX;

struct _MFFOLDDOWN_MATRIX {
    UINT32 cbSize;
    UINT32 cSrcChannels;
    UINT32 cDstChannels;
    UINT32 dwChannelMask;
    LONG Coeff[64];
};

typedef enum _MFT_ENUM_FLAG {
    MFT_ENUM_FLAG_ALL=63,
    MFT_ENUM_FLAG_ASYNCMFT=2,
    MFT_ENUM_FLAG_FIELDOFUSE=8,
    MFT_ENUM_FLAG_HARDWARE=4,
    MFT_ENUM_FLAG_LOCALMFT=16,
    MFT_ENUM_FLAG_SORTANDFILTER=64,
    MFT_ENUM_FLAG_SYNCMFT=1,
    MFT_ENUM_FLAG_TRANSCODE_ONLY=32
} _MFT_ENUM_FLAG;

typedef enum _MFVideoDRMFlags {
    MFVideoDRMFlag_AnalogProtected=1,
    MFVideoDRMFlag_DigitallyProtected=2,
    MFVideoDRMFlag_None=0
} _MFVideoDRMFlags;

typedef enum _MFVideoPadFlags {
    MFVideoPadFlag_PAD_TO_16x9=2,
    MFVideoPadFlag_PAD_TO_4x3=1,
    MFVideoPadFlag_PAD_TO_None=0
} _MFVideoPadFlags;

typedef enum _MFVideoSrcContentHintFlags {
    MFVideoSrcContentHintFlag_16x9=1,
    MFVideoSrcContentHintFlag_235_1=2,
    MFVideoSrcContentHintFlag_None=0
} _MFVideoSrcContentHintFlags;

typedef enum _MFWaveFormatExConvertFlags {
    MFWaveFormatExConvertFlag_ForceExtensible=1,
    MFWaveFormatExConvertFlag_Normal=0
} _MFWaveFormatExConvertFlags;

typedef struct _MT_ARBITRARY_HEADER _MT_ARBITRARY_HEADER, *P_MT_ARBITRARY_HEADER;

struct _MT_ARBITRARY_HEADER {
    GUID majortype;
    GUID subtype;
    BOOL bFixedSizeSamples;
    BOOL bTemporalCompression;
    ULONG lSampleSize;
    GUID formattype;
};

typedef struct _MT_CUSTOM_VIDEO_PRIMARIES _MT_CUSTOM_VIDEO_PRIMARIES, *P_MT_CUSTOM_VIDEO_PRIMARIES;

struct _MT_CUSTOM_VIDEO_PRIMARIES {
    float fRx;
    float fRy;
    float fGx;
    float fGy;
    float fBx;
    float fBy;
    float fWx;
    float fWy;
};

typedef struct _AMMediaType AM_MEDIA_TYPE;

typedef enum _EAllocationType EAllocationType;

typedef enum enum_6350 {
    MF_STANDARD_WORKQUEUE=0,
    MF_WINDOW_WORKQUEUE=1
} enum_6350;

typedef enum enum_6352 {
    MF_TOPOSTATUS_DYNAMIC_CHANGED=210,
    MF_TOPOSTATUS_ENDED=400,
    MF_TOPOSTATUS_INVALID=0,
    MF_TOPOSTATUS_READY=100,
    MF_TOPOSTATUS_SINK_SWITCHED=300,
    MF_TOPOSTATUS_STARTED_SOURCE=200
} enum_6352;

typedef enum enum_6352 MF_TOPOSTATUS;

typedef enum enum_6350 MFASYNC_WORKQUEUE_TYPE;

typedef struct tagMFASYNCRESULT tagMFASYNCRESULT, *PtagMFASYNCRESULT;

typedef struct tagMFASYNCRESULT MFASYNCRESULT;

typedef struct IMFAsyncResult IMFAsyncResult, *PIMFAsyncResult;

typedef struct _OVERLAPPED _OVERLAPPED, *P_OVERLAPPED;

typedef struct _OVERLAPPED OVERLAPPED;

typedef struct IMFAsyncCallback IMFAsyncCallback, *PIMFAsyncCallback;

typedef struct IMFAsyncResultVtbl IMFAsyncResultVtbl, *PIMFAsyncResultVtbl;

typedef union _union_518 _union_518, *P_union_518;

typedef struct IMFAsyncCallbackVtbl IMFAsyncCallbackVtbl, *PIMFAsyncCallbackVtbl;

typedef struct _struct_519 _struct_519, *P_struct_519;

struct IMFAsyncResultVtbl {
    HRESULT (* QueryInterface)(struct IMFAsyncResult *, IID *, void * *);
    ULONG (* AddRef)(struct IMFAsyncResult *);
    ULONG (* Release)(struct IMFAsyncResult *);
    HRESULT (* GetState)(struct IMFAsyncResult *, struct IUnknown * *);
    HRESULT (* GetStatus)(struct IMFAsyncResult *);
    HRESULT (* SetStatus)(struct IMFAsyncResult *, HRESULT);
    HRESULT (* GetObjectA)(struct IMFAsyncResult *, struct IUnknown * *);
    IUnknown * (* GetStateNoAddRef)(struct IMFAsyncResult *);
};

struct _struct_519 {
    DWORD Offset;
    DWORD OffsetHigh;
};

struct IMFAsyncCallbackVtbl {
    HRESULT (* QueryInterface)(struct IMFAsyncCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IMFAsyncCallback *);
    ULONG (* Release)(struct IMFAsyncCallback *);
    HRESULT (* GetParameters)(struct IMFAsyncCallback *, DWORD *, DWORD *);
    HRESULT (* Invoke)(struct IMFAsyncCallback *, struct IMFAsyncResult *);
};

union _union_518 {
    struct _struct_519 s;
    PVOID Pointer;
};

struct _OVERLAPPED {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union _union_518 u;
    HANDLE hEvent;
};

struct IMFAsyncCallback {
    struct IMFAsyncCallbackVtbl * lpVtbl;
};

struct IMFAsyncResult {
    struct IMFAsyncResultVtbl * lpVtbl;
};

struct tagMFASYNCRESULT {
    struct IMFAsyncResult AsyncResult;
    OVERLAPPED overlapped;
    struct IMFAsyncCallback * pCallback;
    HRESULT hrStatusResult;
    DWORD dwBytesTransferred;
    HANDLE hEvent;
};

typedef struct _MFFOLDDOWN_MATRIX MFFOLDDOWN_MATRIX;

typedef void (* MFPERIODICCALLBACK)(struct IUnknown *);

typedef enum _MFVideoDRMFlags MFVideoDRMFlags;

typedef enum _MFVideoPadFlags MFVideoPadFlags;

typedef enum _MFVideoSrcContentHintFlags MFVideoSrcContentHintFlags;

typedef enum _MFWaveFormatExConvertFlags MFWaveFormatExConvertFlags;

typedef ulonglong MFWORKITEM_KEY;

typedef struct tagMPEG1VIDEOINFO tagMPEG1VIDEOINFO, *PtagMPEG1VIDEOINFO;

typedef struct tagMPEG1VIDEOINFO MPEG1VIDEOINFO;

struct tagMPEG1VIDEOINFO {
};

typedef struct tagMPEG2VIDEOINFO tagMPEG2VIDEOINFO, *PtagMPEG2VIDEOINFO;

typedef struct tagMPEG2VIDEOINFO MPEG2VIDEOINFO;

struct tagMPEG2VIDEOINFO {
};

typedef struct _MT_ARBITRARY_HEADER MT_ARBITRARY_HEADER;

typedef struct _MT_CUSTOM_VIDEO_PRIMARIES MT_CUSTOM_VIDEO_PRIMARIES;

typedef struct tagVIDEOINFOHEADER tagVIDEOINFOHEADER, *PtagVIDEOINFOHEADER;

struct tagVIDEOINFOHEADER {
};

typedef struct tagVIDEOINFOHEADER2 tagVIDEOINFOHEADER2, *PtagVIDEOINFOHEADER2;

struct tagVIDEOINFOHEADER2 {
};

typedef struct tagVIDEOINFOHEADER VIDEOINFOHEADER;

typedef struct tagVIDEOINFOHEADER2 VIDEOINFOHEADER2;

#define MF_EVENT_FLAG_NO_WAIT 1

#define MF_MEDIATYPE_EQUAL_FORMAT_DATA 4

#define MF_MEDIATYPE_EQUAL_FORMAT_TYPES 2

#define MF_MEDIATYPE_EQUAL_FORMAT_USER_DATA 8

#define MF_MEDIATYPE_EQUAL_MAJOR_TYPES 1

#define MFASYNC_CALLBACK_QUEUE_ALL 4294967295

#define MFASYNC_CALLBACK_QUEUE_IO 3

#define MFASYNC_CALLBACK_QUEUE_LONG_FUNCTION 7

#define MFASYNC_CALLBACK_QUEUE_PRIVATE_MASK 4294901760

#define MFASYNC_CALLBACK_QUEUE_RT 2

#define MFASYNC_CALLBACK_QUEUE_STANDARD 1

#define MFASYNC_CALLBACK_QUEUE_TIMER 4

#define MFASYNC_CALLBACK_QUEUE_UNDEFINED 0

#define MFASYNC_FAST_IO_PROCESSING_CALLBACK 1

#define MFASYNC_SIGNAL_CALLBACK 2

#define MFBYTESTREAM_HAS_SLOW_SEEK 256

#define MFBYTESTREAM_IS_DIRECTORY 128

#define MFBYTESTREAM_IS_PARTIALLY_DOWNLOADED 512

#define MFBYTESTREAM_IS_READABLE 1

#define MFBYTESTREAM_IS_REMOTE 8

#define MFBYTESTREAM_IS_SEEKABLE 4

#define MFBYTESTREAM_IS_WRITABLE 2

#define MFBYTESTREAM_SEEK_FLAG_CANCEL_PENDING_IO 1

#define MFBYTESTREAM_SHARE_WRITE 1024

typedef struct __MFAYUVSample __MFAYUVSample, *P__MFAYUVSample;

struct __MFAYUVSample {
    BYTE bCrValue;
    BYTE bCbValue;
    BYTE bYValue;
    BYTE bSampleAlpha8;
};

typedef struct __MIDL___MIDL_itf_mfobjects_0000_0006_0003 __MIDL___MIDL_itf_mfobjects_0000_0006_0003, *P__MIDL___MIDL_itf_mfobjects_0000_0006_0003;

struct __MIDL___MIDL_itf_mfobjects_0000_0006_0003 {
    GUID guidMajorType;
    GUID guidSubtype;
};

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0009_0001 {
    MEAudioSessionDeviceRemoved=315,
    MEAudioSessionDisconnected=320,
    MEAudioSessionExclusiveModeOverride=321,
    MEAudioSessionFormatChanged=319,
    MEAudioSessionGroupingParamChanged=317,
    MEAudioSessionIconChanged=318,
    MEAudioSessionNameChanged=313,
    MEAudioSessionServerShutdown=316,
    MEAudioSessionVolumeChanged=314,
    MEBufferingStarted=122,
    MEBufferingStopped=123,
    MEConnectEnd=125,
    MEConnectStart=124,
    MEContentProtectionMessage=402,
    MEEnablerCompleted=119,
    MEEnablerProgress=118,
    MEEndOfPresentation=211,
    MEEndOfPresentationSegment=218,
    MEEndOfStream=212,
    MEError=1,
    MEExtendedType=2,
    MEGenericV1Anchor=4,
    MEIndividualizationCompleted=117,
    MEIndividualizationStart=116,
    MELicenseAcquisitionCompleted=115,
    MELicenseAcquisitionStart=114,
    MEMediaSample=213,
    MENewPresentation=113,
    MENewStream=205,
    MENonFatalError=3,
    MEPolicyChanged=401,
    MEPolicyError=120,
    MEPolicyReport=121,
    MEPolicySet=403,
    MEQualityNotify=311,
    MEReconnectEnd=127,
    MEReconnectStart=126,
    MERendererEvent=128,
    MEReservedMax=10000,
    MESequencerSourceTopologyUpdated=222,
    MESessionCapabilitiesChanged=110,
    MESessionClosed=106,
    MESessionEnded=107,
    MESessionNotifyPresentationTime=112,
    MESessionPaused=104,
    MESessionRateChanged=108,
    MESessionScrubSampleComplete=109,
    MESessionStarted=103,
    MESessionStopped=105,
    MESessionStreamSinkFormatChanged=129,
    MESessionTopologiesCleared=102,
    MESessionTopologySet=101,
    MESessionTopologyStatus=111,
    MESessionUnknown=100,
    MESessionV1Anchor=130,
    MESinkInvalidated=312,
    MESinkUnknown=300,
    MESinkV1Anchor=322,
    MESourceCharacteristicsChanged=219,
    MESourceMetadataChanged=221,
    MESourcePaused=209,
    MESourceRateChangeRequested=220,
    MESourceRateChanged=217,
    MESourceSeeked=203,
    MESourceStarted=201,
    MESourceStopped=207,
    MESourceUnknown=200,
    MESourceV1Anchor=223,
    MEStreamFormatChanged=216,
    MEStreamPaused=210,
    MEStreamSeeked=204,
    MEStreamSinkDeviceChanged=310,
    MEStreamSinkFormatChanged=309,
    MEStreamSinkMarker=306,
    MEStreamSinkPaused=303,
    MEStreamSinkPrerolled=307,
    MEStreamSinkRateChanged=304,
    MEStreamSinkRequestSample=305,
    MEStreamSinkScrubSampleComplete=308,
    MEStreamSinkStarted=301,
    MEStreamSinkStopped=302,
    MEStreamStarted=202,
    MEStreamStopped=208,
    MEStreamThinMode=215,
    MEStreamTick=214,
    METransformDrainComplete=603,
    METransformHaveOutput=602,
    METransformMarker=604,
    METransformNeedInput=601,
    METransformUnknown=600,
    METrustUnknown=400,
    METrustV1Anchor=404,
    MEUnknown=0,
    MEUpdatedStream=206,
    MEWMDRMIndividualizationCompleted=508,
    MEWMDRMIndividualizationProgress=513,
    MEWMDRMLicenseAcquisitionCompleted=506,
    MEWMDRMLicenseBackupCompleted=500,
    MEWMDRMLicenseBackupProgress=501,
    MEWMDRMLicenseRestoreCompleted=502,
    MEWMDRMLicenseRestoreProgress=503,
    MEWMDRMLicenseStoreCleaned=515,
    MEWMDRMProximityCompleted=514,
    MEWMDRMRevocationDownloadCompleted=516,
    MEWMDRMV1Anchor=517
} __MIDL___MIDL_itf_mfobjects_0000_0009_0001;

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0013_0001 {
    MF_ACCESSMODE_READ=1,
    MF_ACCESSMODE_READWRITE=3,
    MF_ACCESSMODE_WRITE=2
} __MIDL___MIDL_itf_mfobjects_0000_0013_0001;

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0013_0002 {
    MF_OPENMODE_APPEND_IF_EXIST=3,
    MF_OPENMODE_DELETE_IF_EXIST=4,
    MF_OPENMODE_FAIL_IF_EXIST=1,
    MF_OPENMODE_FAIL_IF_NOT_EXIST=0,
    MF_OPENMODE_RESET_IF_EXIST=2
} __MIDL___MIDL_itf_mfobjects_0000_0013_0002;

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0013_0003 {
    MF_FILEFLAGS_ALLOW_WRITE_SHARING=2,
    MF_FILEFLAGS_NOBUFFERING=1,
    MF_FILEFLAGS_NONE=0
} __MIDL___MIDL_itf_mfobjects_0000_0013_0003;

typedef enum _MF_ATTRIBUTE_TYPE {
    MF_ATTRIBUTE_BLOB=5,
    MF_ATTRIBUTE_DOUBLE=2,
    MF_ATTRIBUTE_GUID=3,
    MF_ATTRIBUTE_IUNKNOWN=6,
    MF_ATTRIBUTE_STRING=4,
    MF_ATTRIBUTE_UINT32=0,
    MF_ATTRIBUTE_UINT64=1
} _MF_ATTRIBUTE_TYPE;

typedef enum _MF_ATTRIBUTES_MATCH_TYPE {
    MF_ATTRIBUTES_MATCH_ALL_ITEMS=2,
    MF_ATTRIBUTES_MATCH_INTERSECTION=3,
    MF_ATTRIBUTES_MATCH_OUR_ITEMS=0,
    MF_ATTRIBUTES_MATCH_SMALLER=4,
    MF_ATTRIBUTES_MATCH_THEIR_ITEMS=1
} _MF_ATTRIBUTES_MATCH_TYPE;

typedef enum _MF_Plugin_Type {
    MF_Plugin_Type_MFT=0,
    MF_Plugin_Type_MediaSource=1
} _MF_Plugin_Type;

typedef struct _MFARGB _MFARGB, *P_MFARGB;

struct _MFARGB {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbAlpha;
};

typedef enum _MFBYTESTREAM_SEEK_ORIGIN {
    msoBegin=0,
    msoCurrent=1
} _MFBYTESTREAM_SEEK_ORIGIN;

typedef enum _MFNominalRange {
    MFNominalRange_0_255=1,
    MFNominalRange_16_235=2,
    MFNominalRange_48_208=3,
    MFNominalRange_64_127=4,
    MFNominalRange_ForceDWORD=2147483647,
    MFNominalRange_Last=5,
    MFNominalRange_Normal=1,
    MFNominalRange_Unknown=0,
    MFNominalRange_Wide=2
} _MFNominalRange;

typedef struct _MFOffset _MFOffset, *P_MFOffset;

struct _MFOffset {
    WORD fract;
    short value;
};

typedef union _MFPaletteEntry _MFPaletteEntry, *P_MFPaletteEntry;

typedef struct _MFARGB MFARGB;

typedef struct __MFAYUVSample MFAYUVSample;

union _MFPaletteEntry {
    MFARGB ARGB;
    MFAYUVSample AYCbCr;
};

typedef struct _MFRatio _MFRatio, *P_MFRatio;

struct _MFRatio {
    DWORD Numerator;
    DWORD Denominator;
};

typedef enum _MFStandardVideoFormat {
    MFStdVideoFormat_ATSC_HD1080i=8,
    MFStdVideoFormat_ATSC_HD720p=9,
    MFStdVideoFormat_ATSC_SD480i=7,
    MFStdVideoFormat_DVD_NTSC=3,
    MFStdVideoFormat_DVD_PAL=4,
    MFStdVideoFormat_DV_NTSC=6,
    MFStdVideoFormat_DV_PAL=5,
    MFStdVideoFormat_NTSC=1,
    MFStdVideoFormat_PAL=2,
    MFStdVideoFormat_reserved=0
} _MFStandardVideoFormat;

typedef struct _MFVideoArea _MFVideoArea, *P_MFVideoArea;

typedef struct _MFOffset MFOffset;

struct _MFVideoArea {
    MFOffset OffsetX;
    MFOffset OffsetY;
    SIZE Area;
};

typedef enum _MFVideoChromaSubsampling {
    MFVideoChromaSubsampling_Cosited=5,
    MFVideoChromaSubsampling_DV_PAL=4,
    MFVideoChromaSubsampling_ForceDWORD=2147483647,
    MFVideoChromaSubsampling_Horizontally_Cosited=4,
    MFVideoChromaSubsampling_Last=6,
    MFVideoChromaSubsampling_MPEG1=3,
    MFVideoChromaSubsampling_MPEG2=2,
    MFVideoChromaSubsampling_ProgressiveChroma=8,
    MFVideoChromaSubsampling_Unknown=0,
    MFVideoChromaSubsampling_Vertically_AlignedChromaPlanes=1,
    MFVideoChromaSubsampling_Vertically_Cosited=2
} _MFVideoChromaSubsampling;

typedef struct _MFVideoCompressedInfo _MFVideoCompressedInfo, *P_MFVideoCompressedInfo;

struct _MFVideoCompressedInfo {
    LONGLONG AvgBitrate;
    LONGLONG AvgBitErrorRate;
    DWORD MaxKeyFrameSpacing;
};

typedef enum _MFVideoFlags {
    MFVideoFlag_AnalogProtected=32,
    MFVideoFlag_BottomUpLinearRep=524288,
    MFVideoFlag_DigitallyProtected=64,
    MFVideoFlag_FieldRepeatCountMask=129,
    MFVideoFlag_FieldRepeatCountShift=8,
    MFVideoFlag_LowerFieldFirst=262144,
    MFVideoFlag_PAD_TO_16x9=2,
    MFVideoFlag_PAD_TO_4x3=1,
    MFVideoFlag_PAD_TO_Mask=0,
    MFVideoFlag_PAD_TO_None=0,
    MFVideoFlag_PanScanEnabled=131072,
    MFVideoFlag_ProgressiveContent=128,
    MFVideoFlag_ProgressiveSeqReset=2048,
    MFVideoFlag_SrcContentHint16x9=4,
    MFVideoFlag_SrcContentHint235_1=8,
    MFVideoFlag_SrcContentHintMask=3,
    MFVideoFlag_SrcContentHintNone=0,
    MFVideoFlags_DXVASurface=1048576,
    MFVideoFlags_ForceQWORD=2147483647,
    MFVideoFlags_RenderTargetSurface=4194304
} _MFVideoFlags;

typedef struct _MFVIDEOFORMAT _MFVIDEOFORMAT, *P_MFVIDEOFORMAT;

typedef struct _MFVideoInfo _MFVideoInfo, *P_MFVideoInfo;

typedef struct _MFVideoInfo MFVideoInfo;

typedef struct _MFVideoCompressedInfo MFVideoCompressedInfo;

typedef struct _MFVideoSurfaceInfo _MFVideoSurfaceInfo, *P_MFVideoSurfaceInfo;

typedef struct _MFVideoSurfaceInfo MFVideoSurfaceInfo;

typedef struct _MFRatio MFRatio;

typedef enum _MFVideoChromaSubsampling MFVideoChromaSubsampling;

typedef enum _MFVideoInterlaceMode {
    MFVideoInterlace_FieldInterleavedLowerFirst=4,
    MFVideoInterlace_FieldInterleavedUpperFirst=3,
    MFVideoInterlace_FieldSingleLower=6,
    MFVideoInterlace_FieldSingleUpper=5,
    MFVideoInterlace_ForceDWORD=2147483647,
    MFVideoInterlace_Last=8,
    MFVideoInterlace_MixedInterlaceOrProgressive=7,
    MFVideoInterlace_Progressive=2,
    MFVideoInterlace_Unknown=0
} _MFVideoInterlaceMode;

typedef enum _MFVideoInterlaceMode MFVideoInterlaceMode;

typedef enum _MFVideoTransferFunction {
    MFVideoTransFunc_10=1,
    MFVideoTransFunc_18=2,
    MFVideoTransFunc_20=3,
    MFVideoTransFunc_22=4,
    MFVideoTransFunc_240M=6,
    MFVideoTransFunc_28=8,
    MFVideoTransFunc_709=5,
    MFVideoTransFunc_709_sym=11,
    MFVideoTransFunc_ForceDWORD=2147483647,
    MFVideoTransFunc_Last=12,
    MFVideoTransFunc_Log_100=9,
    MFVideoTransFunc_Log_316=10,
    MFVideoTransFunc_Unknown=0,
    MFVideoTransFunc_sRGB=7
} _MFVideoTransferFunction;

typedef enum _MFVideoTransferFunction MFVideoTransferFunction;

typedef enum _MFVideoPrimaries {
    MFVideoPrimaries_BT470_2_SysBG=4,
    MFVideoPrimaries_BT470_2_SysM=3,
    MFVideoPrimaries_BT709=2,
    MFVideoPrimaries_EBU3213=7,
    MFVideoPrimaries_ForceDWORD=2147483647,
    MFVideoPrimaries_Last=9,
    MFVideoPrimaries_SMPTE170M=5,
    MFVideoPrimaries_SMPTE240M=6,
    MFVideoPrimaries_SMPTE_C=8,
    MFVideoPrimaries_Unknown=0,
    MFVideoPrimaries_reserved=1
} _MFVideoPrimaries;

typedef enum _MFVideoPrimaries MFVideoPrimaries;

typedef enum _MFVideoTransferMatrix {
    MFVideoTransferMatrix_BT601=2,
    MFVideoTransferMatrix_BT709=1,
    MFVideoTransferMatrix_ForceDWORD=2147483647,
    MFVideoTransferMatrix_Last=4,
    MFVideoTransferMatrix_SMPTE240M=3,
    MFVideoTransferMatrix_Unknown=0
} _MFVideoTransferMatrix;

typedef enum _MFVideoTransferMatrix MFVideoTransferMatrix;

typedef enum _MFVideoLighting {
    MFVideoLighting_ForceDWORD=2147483647,
    MFVideoLighting_Last=5,
    MFVideoLighting_Unknown=0,
    MFVideoLighting_bright=1,
    MFVideoLighting_dark=4,
    MFVideoLighting_dim=3,
    MFVideoLighting_office=2
} _MFVideoLighting;

typedef enum _MFVideoLighting MFVideoLighting;

typedef enum _MFNominalRange MFNominalRange;

typedef struct _MFVideoArea MFVideoArea;

typedef union _MFPaletteEntry MFPaletteEntry;

struct _MFVideoInfo {
    DWORD dwWidth;
    DWORD dwHeight;
    MFRatio PixelAspectRatio;
    MFVideoChromaSubsampling SourceChromaSubsampling;
    MFVideoInterlaceMode InterlaceMode;
    MFVideoTransferFunction TransferFunction;
    MFVideoPrimaries ColorPrimaries;
    MFVideoTransferMatrix TransferMatrix;
    MFVideoLighting SourceLighting;
    MFRatio FramesPerSecond;
    MFNominalRange NominalRange;
    MFVideoArea GeometricAperture;
    MFVideoArea MinimumDisplayAperture;
    MFVideoArea PanScanAperture;
    ulonglong VideoFlags;
};

struct _MFVideoSurfaceInfo {
    DWORD Format;
    DWORD PaletteEntries;
    MFPaletteEntry Palette[1];
};

struct _MFVIDEOFORMAT {
    DWORD dwSize;
    MFVideoInfo videoInfo;
    GUID guidFormat;
    MFVideoCompressedInfo compressedInfo;
    MFVideoSurfaceInfo surfaceInfo;
};

typedef struct IMF2DBuffer IMF2DBuffer, *PIMF2DBuffer;

typedef struct IMF2DBufferVtbl IMF2DBufferVtbl, *PIMF2DBufferVtbl;

struct IMF2DBufferVtbl {
    HRESULT (* QueryInterface)(struct IMF2DBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IMF2DBuffer *);
    ULONG (* Release)(struct IMF2DBuffer *);
    HRESULT (* Lock2D)(struct IMF2DBuffer *, BYTE * *, LONG *);
    HRESULT (* Unlock2D)(struct IMF2DBuffer *);
    HRESULT (* GetScanline0AndPitch)(struct IMF2DBuffer *, BYTE * *, LONG *);
    HRESULT (* IsContiguousFormat)(struct IMF2DBuffer *, BOOL *);
    HRESULT (* GetContiguousLength)(struct IMF2DBuffer *, DWORD *);
    HRESULT (* ContiguousCopyTo)(struct IMF2DBuffer *, BYTE *, DWORD);
    HRESULT (* ContiguousCopyFrom)(struct IMF2DBuffer *, BYTE *, DWORD);
};

struct IMF2DBuffer {
    struct IMF2DBufferVtbl * lpVtbl;
};

typedef struct IMFActivate IMFActivate, *PIMFActivate;

typedef struct IMFActivateVtbl IMFActivateVtbl, *PIMFActivateVtbl;

typedef enum _MF_ATTRIBUTE_TYPE MF_ATTRIBUTE_TYPE;

typedef struct IMFAttributes IMFAttributes, *PIMFAttributes;

typedef enum _MF_ATTRIBUTES_MATCH_TYPE MF_ATTRIBUTES_MATCH_TYPE;

typedef struct IMFAttributesVtbl IMFAttributesVtbl, *PIMFAttributesVtbl;

struct IMFAttributes {
    struct IMFAttributesVtbl * lpVtbl;
};

struct IMFActivate {
    struct IMFActivateVtbl * lpVtbl;
};

struct IMFActivateVtbl {
    HRESULT (* QueryInterface)(struct IMFActivate *, IID *, void * *);
    ULONG (* AddRef)(struct IMFActivate *);
    ULONG (* Release)(struct IMFActivate *);
    HRESULT (* GetItem)(struct IMFActivate *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFActivate *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFActivate *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFActivate *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFActivate *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFActivate *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFActivate *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFActivate *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFActivate *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFActivate *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFActivate *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFActivate *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFActivate *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFActivate *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFActivate *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFActivate *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFActivate *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFActivate *);
    HRESULT (* SetUINT32)(struct IMFActivate *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFActivate *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFActivate *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFActivate *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFActivate *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFActivate *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFActivate *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFActivate *);
    HRESULT (* UnlockStore)(struct IMFActivate *);
    HRESULT (* GetCount)(struct IMFActivate *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFActivate *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFActivate *, struct IMFAttributes *);
    HRESULT (* ActivateObject)(struct IMFActivate *, IID *, void * *);
    HRESULT (* ShutdownObject)(struct IMFActivate *);
    HRESULT (* DetachObject)(struct IMFActivate *);
};

struct IMFAttributesVtbl {
    HRESULT (* QueryInterface)(struct IMFAttributes *, IID *, void * *);
    ULONG (* AddRef)(struct IMFAttributes *);
    ULONG (* Release)(struct IMFAttributes *);
    HRESULT (* GetItem)(struct IMFAttributes *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFAttributes *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFAttributes *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFAttributes *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFAttributes *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFAttributes *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFAttributes *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFAttributes *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFAttributes *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFAttributes *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFAttributes *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFAttributes *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFAttributes *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFAttributes *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFAttributes *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFAttributes *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFAttributes *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFAttributes *);
    HRESULT (* SetUINT32)(struct IMFAttributes *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFAttributes *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFAttributes *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFAttributes *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFAttributes *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFAttributes *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFAttributes *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFAttributes *);
    HRESULT (* UnlockStore)(struct IMFAttributes *);
    HRESULT (* GetCount)(struct IMFAttributes *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFAttributes *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFAttributes *, struct IMFAttributes *);
};

typedef struct IMFAudioMediaType IMFAudioMediaType, *PIMFAudioMediaType;

typedef struct IMFAudioMediaTypeVtbl IMFAudioMediaTypeVtbl, *PIMFAudioMediaTypeVtbl;

typedef struct IMFMediaType IMFMediaType, *PIMFMediaType;

typedef struct tWAVEFORMATEX tWAVEFORMATEX, *PtWAVEFORMATEX;

typedef struct tWAVEFORMATEX WAVEFORMATEX;

typedef struct IMFMediaTypeVtbl IMFMediaTypeVtbl, *PIMFMediaTypeVtbl;

struct tWAVEFORMATEX {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wBitsPerSample;
    WORD cbSize;
};

struct IMFMediaTypeVtbl {
    HRESULT (* QueryInterface)(struct IMFMediaType *, IID *, void * *);
    ULONG (* AddRef)(struct IMFMediaType *);
    ULONG (* Release)(struct IMFMediaType *);
    HRESULT (* GetItem)(struct IMFMediaType *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFMediaType *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFMediaType *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFMediaType *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFMediaType *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFMediaType *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFMediaType *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFMediaType *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFMediaType *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFMediaType *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFMediaType *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFMediaType *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFMediaType *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFMediaType *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFMediaType *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFMediaType *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFMediaType *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFMediaType *);
    HRESULT (* SetUINT32)(struct IMFMediaType *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFMediaType *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFMediaType *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFMediaType *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFMediaType *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFMediaType *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFMediaType *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFMediaType *);
    HRESULT (* UnlockStore)(struct IMFMediaType *);
    HRESULT (* GetCount)(struct IMFMediaType *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFMediaType *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFMediaType *, struct IMFAttributes *);
    HRESULT (* GetMajorType)(struct IMFMediaType *, GUID *);
    HRESULT (* IsCompressedFormat)(struct IMFMediaType *, BOOL *);
    HRESULT (* IsEqual)(struct IMFMediaType *, struct IMFMediaType *, DWORD *);
    HRESULT (* GetRepresentation)(struct IMFMediaType *, GUID, LPVOID *);
    HRESULT (* FreeRepresentation)(struct IMFMediaType *, GUID, LPVOID);
};

struct IMFAudioMediaTypeVtbl {
    HRESULT (* QueryInterface)(struct IMFAudioMediaType *, IID *, void * *);
    ULONG (* AddRef)(struct IMFAudioMediaType *);
    ULONG (* Release)(struct IMFAudioMediaType *);
    HRESULT (* GetItem)(struct IMFAudioMediaType *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFAudioMediaType *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFAudioMediaType *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFAudioMediaType *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFAudioMediaType *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFAudioMediaType *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFAudioMediaType *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFAudioMediaType *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFAudioMediaType *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFAudioMediaType *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFAudioMediaType *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFAudioMediaType *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFAudioMediaType *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFAudioMediaType *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFAudioMediaType *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFAudioMediaType *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFAudioMediaType *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFAudioMediaType *);
    HRESULT (* SetUINT32)(struct IMFAudioMediaType *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFAudioMediaType *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFAudioMediaType *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFAudioMediaType *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFAudioMediaType *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFAudioMediaType *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFAudioMediaType *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFAudioMediaType *);
    HRESULT (* UnlockStore)(struct IMFAudioMediaType *);
    HRESULT (* GetCount)(struct IMFAudioMediaType *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFAudioMediaType *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFAudioMediaType *, struct IMFAttributes *);
    HRESULT (* GetMajorType)(struct IMFAudioMediaType *, GUID *);
    HRESULT (* IsCompressedFormat)(struct IMFAudioMediaType *, BOOL *);
    HRESULT (* IsEqual)(struct IMFAudioMediaType *, struct IMFMediaType *, DWORD *);
    HRESULT (* GetRepresentation)(struct IMFAudioMediaType *, GUID, LPVOID *);
    HRESULT (* FreeRepresentation)(struct IMFAudioMediaType *, GUID, LPVOID);
    WAVEFORMATEX * (* GetAudioFormat)(struct IMFAudioMediaType *);
};

struct IMFAudioMediaType {
    struct IMFAudioMediaTypeVtbl * lpVtbl;
};

struct IMFMediaType {
    struct IMFMediaTypeVtbl * lpVtbl;
};

typedef struct IMFByteStream IMFByteStream, *PIMFByteStream;

typedef struct IMFByteStreamVtbl IMFByteStreamVtbl, *PIMFByteStreamVtbl;

typedef ULONGLONG QWORD;

typedef enum _MFBYTESTREAM_SEEK_ORIGIN MFBYTESTREAM_SEEK_ORIGIN;

struct IMFByteStreamVtbl {
    HRESULT (* QueryInterface)(struct IMFByteStream *, IID *, void * *);
    ULONG (* AddRef)(struct IMFByteStream *);
    ULONG (* Release)(struct IMFByteStream *);
    HRESULT (* GetCapabilities)(struct IMFByteStream *, DWORD *);
    HRESULT (* GetLength)(struct IMFByteStream *, QWORD *);
    HRESULT (* SetLength)(struct IMFByteStream *, QWORD);
    HRESULT (* GetCurrentPosition)(struct IMFByteStream *, QWORD *);
    HRESULT (* SetCurrentPosition)(struct IMFByteStream *, QWORD);
    HRESULT (* IsEndOfStream)(struct IMFByteStream *, BOOL *);
    HRESULT (* Read)(struct IMFByteStream *, BYTE *, ULONG, ULONG *);
    HRESULT (* BeginRead)(struct IMFByteStream *, BYTE *, ULONG, struct IMFAsyncCallback *, struct IUnknown *);
    HRESULT (* EndRead)(struct IMFByteStream *, struct IMFAsyncResult *, ULONG *);
    HRESULT (* Write)(struct IMFByteStream *, BYTE *, ULONG, ULONG *);
    HRESULT (* BeginWrite)(struct IMFByteStream *, BYTE *, ULONG, struct IMFAsyncCallback *, struct IUnknown *);
    HRESULT (* EndWrite)(struct IMFByteStream *, struct IMFAsyncResult *, ULONG *);
    HRESULT (* Seek)(struct IMFByteStream *, MFBYTESTREAM_SEEK_ORIGIN, LONGLONG, DWORD, QWORD *);
    HRESULT (* Flush)(struct IMFByteStream *);
    HRESULT (* Close)(struct IMFByteStream *);
};

struct IMFByteStream {
    struct IMFByteStreamVtbl * lpVtbl;
};

typedef struct IMFCollection IMFCollection, *PIMFCollection;

typedef struct IMFCollectionVtbl IMFCollectionVtbl, *PIMFCollectionVtbl;

struct IMFCollectionVtbl {
    HRESULT (* QueryInterface)(struct IMFCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IMFCollection *);
    ULONG (* Release)(struct IMFCollection *);
    HRESULT (* GetElementCount)(struct IMFCollection *, DWORD *);
    HRESULT (* GetElement)(struct IMFCollection *, DWORD, struct IUnknown * *);
    HRESULT (* AddElement)(struct IMFCollection *, struct IUnknown *);
    HRESULT (* RemoveElement)(struct IMFCollection *, DWORD, struct IUnknown * *);
    HRESULT (* InsertElementAt)(struct IMFCollection *, DWORD, struct IUnknown *);
    HRESULT (* RemoveAllElements)(struct IMFCollection *);
};

struct IMFCollection {
    struct IMFCollectionVtbl * lpVtbl;
};

typedef struct IMFMediaBuffer IMFMediaBuffer, *PIMFMediaBuffer;

typedef struct IMFMediaBufferVtbl IMFMediaBufferVtbl, *PIMFMediaBufferVtbl;

struct IMFMediaBufferVtbl {
    HRESULT (* QueryInterface)(struct IMFMediaBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IMFMediaBuffer *);
    ULONG (* Release)(struct IMFMediaBuffer *);
    HRESULT (* Lock)(struct IMFMediaBuffer *, BYTE * *, DWORD *, DWORD *);
    HRESULT (* Unlock)(struct IMFMediaBuffer *);
    HRESULT (* GetCurrentLength)(struct IMFMediaBuffer *, DWORD *);
    HRESULT (* SetCurrentLength)(struct IMFMediaBuffer *, DWORD);
    HRESULT (* GetMaxLength)(struct IMFMediaBuffer *, DWORD *);
};

struct IMFMediaBuffer {
    struct IMFMediaBufferVtbl * lpVtbl;
};

typedef struct IMFMediaEvent IMFMediaEvent, *PIMFMediaEvent;

typedef struct IMFMediaEventVtbl IMFMediaEventVtbl, *PIMFMediaEventVtbl;

typedef DWORD MediaEventType;

struct IMFMediaEvent {
    struct IMFMediaEventVtbl * lpVtbl;
};

struct IMFMediaEventVtbl {
    HRESULT (* QueryInterface)(struct IMFMediaEvent *, IID *, void * *);
    ULONG (* AddRef)(struct IMFMediaEvent *);
    ULONG (* Release)(struct IMFMediaEvent *);
    HRESULT (* GetItem)(struct IMFMediaEvent *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFMediaEvent *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFMediaEvent *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFMediaEvent *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFMediaEvent *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFMediaEvent *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFMediaEvent *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFMediaEvent *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFMediaEvent *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFMediaEvent *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFMediaEvent *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFMediaEvent *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFMediaEvent *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFMediaEvent *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFMediaEvent *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFMediaEvent *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFMediaEvent *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFMediaEvent *);
    HRESULT (* SetUINT32)(struct IMFMediaEvent *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFMediaEvent *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFMediaEvent *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFMediaEvent *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFMediaEvent *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFMediaEvent *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFMediaEvent *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFMediaEvent *);
    HRESULT (* UnlockStore)(struct IMFMediaEvent *);
    HRESULT (* GetCount)(struct IMFMediaEvent *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFMediaEvent *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFMediaEvent *, struct IMFAttributes *);
    HRESULT (* GetType)(struct IMFMediaEvent *, MediaEventType *);
    HRESULT (* GetExtendedType)(struct IMFMediaEvent *, GUID *);
    HRESULT (* GetStatus)(struct IMFMediaEvent *, HRESULT *);
    HRESULT (* GetValue)(struct IMFMediaEvent *, PROPVARIANT *);
};

typedef struct IMFMediaEventGenerator IMFMediaEventGenerator, *PIMFMediaEventGenerator;

typedef struct IMFMediaEventGeneratorVtbl IMFMediaEventGeneratorVtbl, *PIMFMediaEventGeneratorVtbl;

struct IMFMediaEventGenerator {
    struct IMFMediaEventGeneratorVtbl * lpVtbl;
};

struct IMFMediaEventGeneratorVtbl {
    HRESULT (* QueryInterface)(struct IMFMediaEventGenerator *, IID *, void * *);
    ULONG (* AddRef)(struct IMFMediaEventGenerator *);
    ULONG (* Release)(struct IMFMediaEventGenerator *);
    HRESULT (* GetEvent)(struct IMFMediaEventGenerator *, DWORD, struct IMFMediaEvent * *);
    HRESULT (* BeginGetEvent)(struct IMFMediaEventGenerator *, struct IMFAsyncCallback *, struct IUnknown *);
    HRESULT (* EndGetEvent)(struct IMFMediaEventGenerator *, struct IMFAsyncResult *, struct IMFMediaEvent * *);
    HRESULT (* QueueEvent)(struct IMFMediaEventGenerator *, MediaEventType, GUID *, HRESULT, PROPVARIANT *);
};

typedef struct IMFMediaEventQueue IMFMediaEventQueue, *PIMFMediaEventQueue;

typedef struct IMFMediaEventQueueVtbl IMFMediaEventQueueVtbl, *PIMFMediaEventQueueVtbl;

struct IMFMediaEventQueueVtbl {
    HRESULT (* QueryInterface)(struct IMFMediaEventQueue *, IID *, void * *);
    ULONG (* AddRef)(struct IMFMediaEventQueue *);
    ULONG (* Release)(struct IMFMediaEventQueue *);
    HRESULT (* GetEvent)(struct IMFMediaEventQueue *, DWORD, struct IMFMediaEvent * *);
    HRESULT (* BeginGetEvent)(struct IMFMediaEventQueue *, struct IMFAsyncCallback *, struct IUnknown *);
    HRESULT (* EndGetEvent)(struct IMFMediaEventQueue *, struct IMFAsyncResult *, struct IMFMediaEvent * *);
    HRESULT (* QueueEvent)(struct IMFMediaEventQueue *, struct IMFMediaEvent *);
    HRESULT (* QueueEventParamVar)(struct IMFMediaEventQueue *, MediaEventType, GUID *, HRESULT, PROPVARIANT *);
    HRESULT (* QueueEventParamUnk)(struct IMFMediaEventQueue *, MediaEventType, GUID *, HRESULT, struct IUnknown *);
    HRESULT (* Shutdown)(struct IMFMediaEventQueue *);
};

struct IMFMediaEventQueue {
    struct IMFMediaEventQueueVtbl * lpVtbl;
};

typedef struct IMFPluginControl IMFPluginControl, *PIMFPluginControl;

typedef struct IMFPluginControlVtbl IMFPluginControlVtbl, *PIMFPluginControlVtbl;

struct IMFPluginControl {
    struct IMFPluginControlVtbl * lpVtbl;
};

struct IMFPluginControlVtbl {
    HRESULT (* QueryInterface)(struct IMFPluginControl *, IID *, void * *);
    ULONG (* AddRef)(struct IMFPluginControl *);
    ULONG (* Release)(struct IMFPluginControl *);
    HRESULT (* GetPreferredClsid)(struct IMFPluginControl *, DWORD, LPCWSTR, CLSID *);
    HRESULT (* GetPreferredClsidByIndex)(struct IMFPluginControl *, DWORD, DWORD, LPWSTR *, CLSID *);
    HRESULT (* SetPreferredClsid)(struct IMFPluginControl *, DWORD, LPCWSTR, CLSID *);
    HRESULT (* IsDisabled)(struct IMFPluginControl *, DWORD, IID *);
    HRESULT (* GetDisabledByIndex)(struct IMFPluginControl *, DWORD, DWORD, CLSID *);
    HRESULT (* SetDisabled)(struct IMFPluginControl *, DWORD, IID *, BOOL);
};

typedef struct IMFRemoteAsyncCallback IMFRemoteAsyncCallback, *PIMFRemoteAsyncCallback;

typedef struct IMFRemoteAsyncCallbackVtbl IMFRemoteAsyncCallbackVtbl, *PIMFRemoteAsyncCallbackVtbl;

struct IMFRemoteAsyncCallbackVtbl {
    HRESULT (* QueryInterface)(struct IMFRemoteAsyncCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IMFRemoteAsyncCallback *);
    ULONG (* Release)(struct IMFRemoteAsyncCallback *);
    HRESULT (* Invoke)(struct IMFRemoteAsyncCallback *, HRESULT, struct IUnknown *);
};

struct IMFRemoteAsyncCallback {
    struct IMFRemoteAsyncCallbackVtbl * lpVtbl;
};

typedef struct IMFSample IMFSample, *PIMFSample;

typedef struct IMFSampleVtbl IMFSampleVtbl, *PIMFSampleVtbl;

struct IMFSample {
    struct IMFSampleVtbl * lpVtbl;
};

struct IMFSampleVtbl {
    HRESULT (* QueryInterface)(struct IMFSample *, IID *, void * *);
    ULONG (* AddRef)(struct IMFSample *);
    ULONG (* Release)(struct IMFSample *);
    HRESULT (* GetItem)(struct IMFSample *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFSample *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFSample *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFSample *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFSample *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFSample *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFSample *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFSample *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFSample *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFSample *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFSample *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFSample *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFSample *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFSample *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFSample *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFSample *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFSample *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFSample *);
    HRESULT (* SetUINT32)(struct IMFSample *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFSample *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFSample *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFSample *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFSample *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFSample *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFSample *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFSample *);
    HRESULT (* UnlockStore)(struct IMFSample *);
    HRESULT (* GetCount)(struct IMFSample *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFSample *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFSample *, struct IMFAttributes *);
    HRESULT (* GetSampleFlags)(struct IMFSample *, DWORD *);
    HRESULT (* SetSampleFlags)(struct IMFSample *, DWORD);
    HRESULT (* GetSampleTime)(struct IMFSample *, LONGLONG *);
    HRESULT (* SetSampleTime)(struct IMFSample *, LONGLONG);
    HRESULT (* GetSampleDuration)(struct IMFSample *, LONGLONG *);
    HRESULT (* SetSampleDuration)(struct IMFSample *, LONGLONG);
    HRESULT (* GetBufferCount)(struct IMFSample *, DWORD *);
    HRESULT (* GetBufferByIndex)(struct IMFSample *, DWORD, struct IMFMediaBuffer * *);
    HRESULT (* ConvertToContiguousBuffer)(struct IMFSample *, struct IMFMediaBuffer * *);
    HRESULT (* AddBuffer)(struct IMFSample *, struct IMFMediaBuffer *);
    HRESULT (* RemoveBufferByIndex)(struct IMFSample *, DWORD);
    HRESULT (* RemoveAllBuffers)(struct IMFSample *);
    HRESULT (* GetTotalLength)(struct IMFSample *, DWORD *);
    HRESULT (* CopyToBuffer)(struct IMFSample *, struct IMFMediaBuffer *);
};

typedef struct IMFVideoMediaType IMFVideoMediaType, *PIMFVideoMediaType;

typedef struct IMFVideoMediaTypeVtbl IMFVideoMediaTypeVtbl, *PIMFVideoMediaTypeVtbl;

typedef struct _MFVIDEOFORMAT MFVIDEOFORMAT;

struct IMFVideoMediaType {
    struct IMFVideoMediaTypeVtbl * lpVtbl;
};

struct IMFVideoMediaTypeVtbl {
    HRESULT (* QueryInterface)(struct IMFVideoMediaType *, IID *, void * *);
    ULONG (* AddRef)(struct IMFVideoMediaType *);
    ULONG (* Release)(struct IMFVideoMediaType *);
    HRESULT (* GetItem)(struct IMFVideoMediaType *, GUID *, PROPVARIANT *);
    HRESULT (* GetItemType)(struct IMFVideoMediaType *, GUID *, MF_ATTRIBUTE_TYPE *);
    HRESULT (* CompareItem)(struct IMFVideoMediaType *, GUID *, PROPVARIANT *, BOOL *);
    HRESULT (* Compare)(struct IMFVideoMediaType *, struct IMFAttributes *, MF_ATTRIBUTES_MATCH_TYPE, BOOL *);
    HRESULT (* GetUINT32)(struct IMFVideoMediaType *, GUID *, UINT32 *);
    HRESULT (* GetUINT64)(struct IMFVideoMediaType *, GUID *, UINT64 *);
    HRESULT (* GetDouble)(struct IMFVideoMediaType *, GUID *, double *);
    HRESULT (* GetGUID)(struct IMFVideoMediaType *, GUID *, GUID *);
    HRESULT (* GetStringLength)(struct IMFVideoMediaType *, GUID *, UINT32 *);
    HRESULT (* GetString)(struct IMFVideoMediaType *, GUID *, LPWSTR, UINT32, UINT32 *);
    HRESULT (* GetAllocatedString)(struct IMFVideoMediaType *, GUID *, LPWSTR *, UINT32 *);
    HRESULT (* GetBlobSize)(struct IMFVideoMediaType *, GUID *, UINT32 *);
    HRESULT (* GetBlob)(struct IMFVideoMediaType *, GUID *, UINT8 *, UINT32, UINT32 *);
    HRESULT (* GetAllocatedBlob)(struct IMFVideoMediaType *, GUID *, UINT8 * *, UINT32 *);
    HRESULT (* GetUnknown)(struct IMFVideoMediaType *, GUID *, IID *, LPVOID *);
    HRESULT (* SetItem)(struct IMFVideoMediaType *, GUID *, PROPVARIANT *);
    HRESULT (* DeleteItem)(struct IMFVideoMediaType *, GUID *);
    HRESULT (* DeleteAllItems)(struct IMFVideoMediaType *);
    HRESULT (* SetUINT32)(struct IMFVideoMediaType *, GUID *, UINT32);
    HRESULT (* SetUINT64)(struct IMFVideoMediaType *, GUID *, UINT64);
    HRESULT (* SetDouble)(struct IMFVideoMediaType *, GUID *, double);
    HRESULT (* SetGUID)(struct IMFVideoMediaType *, GUID *, GUID *);
    HRESULT (* SetString)(struct IMFVideoMediaType *, GUID *, LPCWSTR);
    HRESULT (* SetBlob)(struct IMFVideoMediaType *, GUID *, UINT8 *, UINT32);
    HRESULT (* SetUnknown)(struct IMFVideoMediaType *, GUID *, struct IUnknown *);
    HRESULT (* LockStore)(struct IMFVideoMediaType *);
    HRESULT (* UnlockStore)(struct IMFVideoMediaType *);
    HRESULT (* GetCount)(struct IMFVideoMediaType *, UINT32 *);
    HRESULT (* GetItemByIndex)(struct IMFVideoMediaType *, UINT32, GUID *, PROPVARIANT *);
    HRESULT (* CopyAllItems)(struct IMFVideoMediaType *, struct IMFAttributes *);
    HRESULT (* GetMajorType)(struct IMFVideoMediaType *, GUID *);
    HRESULT (* IsCompressedFormat)(struct IMFVideoMediaType *, BOOL *);
    HRESULT (* IsEqual)(struct IMFVideoMediaType *, struct IMFMediaType *, DWORD *);
    HRESULT (* GetRepresentation)(struct IMFVideoMediaType *, GUID, LPVOID *);
    HRESULT (* FreeRepresentation)(struct IMFVideoMediaType *, GUID, LPVOID);
    MFVIDEOFORMAT * (* GetVideoFormat)(struct IMFVideoMediaType *);
    HRESULT (* GetVideoRepresentation)(struct IMFVideoMediaType *, GUID, LPVOID *, LONG);
};

typedef enum MF_ATTRIBUTE_SERIALIZE_OPTIONS {
    MF_ATTRIBUTE_SERIALIZE_UNKNOWN_BYREF=1
} MF_ATTRIBUTE_SERIALIZE_OPTIONS;

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0013_0001 MF_FILE_ACCESSMODE;

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0013_0003 MF_FILE_FLAGS;

typedef enum __MIDL___MIDL_itf_mfobjects_0000_0013_0002 MF_FILE_OPENMODE;

typedef enum _MF_Plugin_Type MF_Plugin_Type;

typedef enum _MFStandardVideoFormat MFStandardVideoFormat;

typedef struct __MIDL___MIDL_itf_mfobjects_0000_0006_0003 MFT_REGISTER_TYPE_INFO;

typedef enum _MFVideoFlags MFVideoFlags;

#define MGMCTL_SETAGENTPORT 1

#define SNMP_MGMTAPI_AGAIN 45

#define SNMP_MGMTAPI_INVALID_BUFFER 48

#define SNMP_MGMTAPI_INVALID_CTL 46

#define SNMP_MGMTAPI_INVALID_SESSION 47

#define SNMP_MGMTAPI_NOTRAPS 44

#define SNMP_MGMTAPI_SELECT_FDERRORS 41

#define SNMP_MGMTAPI_TIMEOUT 40

#define SNMP_MGMTAPI_TRAP_DUPINIT 43

#define SNMP_MGMTAPI_TRAP_ERRORS 42

typedef PVOID LPSNMP_MGR_SESSION;

#define DEVICE_STATE_ACTIVE 1

#define DEVICE_STATE_DISABLED 2

#define DEVICE_STATE_NOTPRESENT 4

#define DEVICE_STATE_UNPLUGGED 8

#define DEVICE_STATEMASK_ALL 15

#define ENDPOINT_SYSFX_DISABLED 1

#define ENDPOINT_SYSFX_ENABLED 0

typedef enum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0001 {
    EDataFlow_enum_count=3,
    eAll=2,
    eCapture=1,
    eRender=0
} __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0001;

typedef enum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0002 {
    ERole_enum_count=3,
    eCommunications=2,
    eConsole=0,
    eMultimedia=1
} __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0002;

typedef enum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0003 {
    DigitalAudioDisplayDevice=9,
    EndpointFormFactor_enum_count=11,
    Handset=6,
    Headphones=3,
    Headset=5,
    LineLevel=2,
    Microphone=4,
    RemoteNetworkDevice=0,
    SPDIF=8,
    Speakers=1,
    UnknownDigitalPassthrough=7,
    UnknownFormFactor=10
} __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0003;

typedef struct __MIDL___MIDL_itf_mmdeviceapi_0000_0006_0001 __MIDL___MIDL_itf_mmdeviceapi_0000_0006_0001, *P__MIDL___MIDL_itf_mmdeviceapi_0000_0006_0001;

typedef struct IMMDevice IMMDevice, *PIMMDevice;

typedef struct IMMDeviceVtbl IMMDeviceVtbl, *PIMMDeviceVtbl;

struct IMMDevice {
    struct IMMDeviceVtbl * lpVtbl;
};

struct __MIDL___MIDL_itf_mmdeviceapi_0000_0006_0001 {
    LPARAM AddPageParam;
    struct IMMDevice * pEndpoint;
    struct IMMDevice * pPnpInterface;
    struct IMMDevice * pPnpDevnode;
};

struct IMMDeviceVtbl {
    HRESULT (* QueryInterface)(struct IMMDevice *, IID *, void * *);
    ULONG (* AddRef)(struct IMMDevice *);
    ULONG (* Release)(struct IMMDevice *);
    HRESULT (* Activate)(struct IMMDevice *, IID *, DWORD, PROPVARIANT *, void * *);
    HRESULT (* OpenPropertyStore)(struct IMMDevice *, DWORD, struct IPropertyStore * *);
    HRESULT (* GetId)(struct IMMDevice *, LPWSTR *);
    HRESULT (* GetState)(struct IMMDevice *, DWORD *);
};

typedef struct __MIDL___MIDL_itf_mmdeviceapi_0000_0006_0001 AudioExtensionParams;

typedef struct tagDIRECTX_AUDIO_ACTIVATION_PARAMS tagDIRECTX_AUDIO_ACTIVATION_PARAMS, *PtagDIRECTX_AUDIO_ACTIVATION_PARAMS;

typedef struct tagDIRECTX_AUDIO_ACTIVATION_PARAMS DIRECTX_AUDIO_ACTIVATION_PARAMS;

struct tagDIRECTX_AUDIO_ACTIVATION_PARAMS {
    DWORD cbDirectXAudioActivationParams;
    GUID guidAudioSession;
    DWORD dwAudioStreamFlags;
};

typedef enum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0001 EDataFlow;

typedef enum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0003 EndpointFormFactor;

typedef enum __MIDL___MIDL_itf_mmdeviceapi_0000_0000_0002 ERole;

typedef struct IMMDeviceActivator IMMDeviceActivator, *PIMMDeviceActivator;

typedef struct IMMDeviceActivatorVtbl IMMDeviceActivatorVtbl, *PIMMDeviceActivatorVtbl;

struct IMMDeviceActivatorVtbl {
    HRESULT (* QueryInterface)(struct IMMDeviceActivator *, IID *, void * *);
    ULONG (* AddRef)(struct IMMDeviceActivator *);
    ULONG (* Release)(struct IMMDeviceActivator *);
    HRESULT (* Activate)(struct IMMDeviceActivator *, IID *, struct IMMDevice *, PROPVARIANT *, void * *);
};

struct IMMDeviceActivator {
    struct IMMDeviceActivatorVtbl * lpVtbl;
};

typedef struct IMMDeviceCollection IMMDeviceCollection, *PIMMDeviceCollection;

typedef struct IMMDeviceCollectionVtbl IMMDeviceCollectionVtbl, *PIMMDeviceCollectionVtbl;

struct IMMDeviceCollectionVtbl {
    HRESULT (* QueryInterface)(struct IMMDeviceCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IMMDeviceCollection *);
    ULONG (* Release)(struct IMMDeviceCollection *);
    HRESULT (* GetCount)(struct IMMDeviceCollection *, UINT *);
    HRESULT (* Item)(struct IMMDeviceCollection *, UINT, struct IMMDevice * *);
};

struct IMMDeviceCollection {
    struct IMMDeviceCollectionVtbl * lpVtbl;
};

typedef struct IMMDeviceEnumerator IMMDeviceEnumerator, *PIMMDeviceEnumerator;

typedef struct IMMDeviceEnumeratorVtbl IMMDeviceEnumeratorVtbl, *PIMMDeviceEnumeratorVtbl;

typedef struct IMMNotificationClient IMMNotificationClient, *PIMMNotificationClient;

typedef struct IMMNotificationClientVtbl IMMNotificationClientVtbl, *PIMMNotificationClientVtbl;

struct IMMNotificationClient {
    struct IMMNotificationClientVtbl * lpVtbl;
};

struct IMMNotificationClientVtbl {
    HRESULT (* QueryInterface)(struct IMMNotificationClient *, IID *, void * *);
    ULONG (* AddRef)(struct IMMNotificationClient *);
    ULONG (* Release)(struct IMMNotificationClient *);
    HRESULT (* OnDeviceStateChanged)(struct IMMNotificationClient *, LPCWSTR, DWORD);
    HRESULT (* OnDeviceAdded)(struct IMMNotificationClient *, LPCWSTR);
    HRESULT (* OnDeviceRemoved)(struct IMMNotificationClient *, LPCWSTR);
    HRESULT (* OnDefaultDeviceChanged)(struct IMMNotificationClient *, EDataFlow, ERole, LPCWSTR);
    HRESULT (* OnPropertyValueChanged)(struct IMMNotificationClient *, LPCWSTR, PROPERTYKEY);
};

struct IMMDeviceEnumeratorVtbl {
    HRESULT (* QueryInterface)(struct IMMDeviceEnumerator *, IID *, void * *);
    ULONG (* AddRef)(struct IMMDeviceEnumerator *);
    ULONG (* Release)(struct IMMDeviceEnumerator *);
    HRESULT (* EnumAudioEndpoints)(struct IMMDeviceEnumerator *, EDataFlow, DWORD, struct IMMDeviceCollection * *);
    HRESULT (* GetDefaultAudioEndpoint)(struct IMMDeviceEnumerator *, EDataFlow, ERole, struct IMMDevice * *);
    HRESULT (* GetDevice)(struct IMMDeviceEnumerator *, LPCWSTR, struct IMMDevice * *);
    HRESULT (* RegisterEndpointNotificationCallback)(struct IMMDeviceEnumerator *, struct IMMNotificationClient *);
    HRESULT (* UnregisterEndpointNotificationCallback)(struct IMMDeviceEnumerator *, struct IMMNotificationClient *);
};

struct IMMDeviceEnumerator {
    struct IMMDeviceEnumeratorVtbl * lpVtbl;
};

typedef struct IMMEndpoint IMMEndpoint, *PIMMEndpoint;

typedef struct IMMEndpointVtbl IMMEndpointVtbl, *PIMMEndpointVtbl;

struct IMMEndpointVtbl {
    HRESULT (* QueryInterface)(struct IMMEndpoint *, IID *, void * *);
    ULONG (* AddRef)(struct IMMEndpoint *);
    ULONG (* Release)(struct IMMEndpoint *);
    HRESULT (* GetDataFlow)(struct IMMEndpoint *, EDataFlow *);
};

struct IMMEndpoint {
    struct IMMEndpointVtbl * lpVtbl;
};

typedef struct MMDeviceEnumerator MMDeviceEnumerator, *PMMDeviceEnumerator;

struct MMDeviceEnumerator {
};

typedef struct tagDIRECTX_AUDIO_ACTIVATION_PARAMS * PDIRECTX_AUDIO_ACTIVATION_PARAMS;

typedef union __m64 __m64, *P__m64;

union __m64 {
    ulonglong m64_u64;
    float m64_f32[2];
    sbyte m64_i8[8];
    short m64_i16[4];
    int m64_i32[2];
    longlong m64_i64;
    byte m64_u8[8];
    ushort m64_u16[4];
    uint m64_u32[2];
};

#define _INC_MMREG 158

#define ACM_MPEG_COPYRIGHT 2

#define ACM_MPEG_DUALCHANNEL 4

#define ACM_MPEG_ID_MPEG1 16

#define ACM_MPEG_JOINTSTEREO 2

#define ACM_MPEG_LAYER1 1

#define ACM_MPEG_LAYER2 2

#define ACM_MPEG_LAYER3 4

#define ACM_MPEG_ORIGINALHOME 4

#define ACM_MPEG_PRIVATEBIT 1

#define ACM_MPEG_PROTECTIONBIT 8

#define ACM_MPEG_SINGLECHANNEL 8

#define ACM_MPEG_STEREO 1

#define AVIIF_CONTROLFRAME 512

#define CRYSTAL_NET_SFM_CODEC 1

#define JIFMK_00 65280

#define JIFMK_APP0 65504

#define JIFMK_APP1 65505

#define JIFMK_APP2 65506

#define JIFMK_APP3 65507

#define JIFMK_APP4 65508

#define JIFMK_APP5 65509

#define JIFMK_APP6 65510

#define JIFMK_APP7 65511

#define JIFMK_COM 65534

#define JIFMK_DAC 65484

#define JIFMK_DHP 65502

#define JIFMK_DHT 65476

#define JIFMK_DNL 65500

#define JIFMK_DQT 65499

#define JIFMK_DRI 65501

#define JIFMK_EOI 65497

#define JIFMK_EXP 65503

#define JIFMK_FF 65535

#define JIFMK_JPG 65480

#define JIFMK_JPG0 65520

#define JIFMK_JPG1 65521

#define JIFMK_JPG10 65530

#define JIFMK_JPG11 65531

#define JIFMK_JPG12 65532

#define JIFMK_JPG13 65533

#define JIFMK_JPG2 65522

#define JIFMK_JPG3 65523

#define JIFMK_JPG4 65524

#define JIFMK_JPG5 65525

#define JIFMK_JPG6 65526

#define JIFMK_JPG7 65527

#define JIFMK_JPG8 65528

#define JIFMK_JPG9 65529

#define JIFMK_RES 65282

#define JIFMK_RST0 65488

#define JIFMK_RST1 65489

#define JIFMK_RST2 65490

#define JIFMK_RST3 65491

#define JIFMK_RST4 65492

#define JIFMK_RST5 65493

#define JIFMK_RST6 65494

#define JIFMK_RST7 65495

#define JIFMK_SOF0 65472

#define JIFMK_SOF1 65473

#define JIFMK_SOF10 65482

#define JIFMK_SOF11 65483

#define JIFMK_SOF13 65485

#define JIFMK_SOF14 65486

#define JIFMK_SOF15 65487

#define JIFMK_SOF2 65474

#define JIFMK_SOF3 65475

#define JIFMK_SOF5 65477

#define JIFMK_SOF6 65478

#define JIFMK_SOF7 65479

#define JIFMK_SOF9 65481

#define JIFMK_SOI 65496

#define JIFMK_SOS 65498

#define JIFMK_TEM 65281

#define JPEG_PROCESS_BASELINE 0

#define JPEG_RGB 3

#define JPEG_Y 1

#define JPEG_YCbCr 2

#define MIXERCONTROL_CONTROLTYPE_SRS_MTS 536936454

#define MIXERCONTROL_CONTROLTYPE_SRS_ONOFF 536936455

#define MIXERCONTROL_CONTROLTYPE_SRS_SYNTHSELECT 536936456

#define MM_3COM 260

#define MM_3COM_CB_MIXER 1

#define MM_3COM_CB_WAVEIN 2

#define MM_3COM_CB_WAVEOUT 3

#define MM_3DFX 262

#define MM_AARDVARK 11

#define MM_AARDVARK_STUDIO12_WAVEIN 2

#define MM_AARDVARK_STUDIO12_WAVEOUT 1

#define MM_AARDVARK_STUDIO88_WAVEIN 4

#define MM_AARDVARK_STUDIO88_WAVEOUT 3

#define MM_ACTIVEVOICE 225

#define MM_ACTIVEVOICE_ACM_VOXADPCM 1

#define MM_ACULAB 14

#define MM_ADDX 118

#define MM_ADDX_PCTV_AUX_CD 5

#define MM_ADDX_PCTV_AUX_LINE 6

#define MM_ADDX_PCTV_DIGITALMIX 1

#define MM_ADDX_PCTV_MIXER 4

#define MM_ADDX_PCTV_WAVEIN 2

#define MM_ADDX_PCTV_WAVEOUT 3

#define MM_ADLACC 91

#define MM_ADLIB 9

#define MM_ADMOS 235

#define MM_ADMOS_FM_SYNTH 1

#define MM_ADMOS_QS3AMIDIIN 3

#define MM_ADMOS_QS3AMIDIOUT 2

#define MM_ADMOS_QS3AWAVEIN 5

#define MM_ADMOS_QS3AWAVEOUT 4

#define MM_AHEAD 77

#define MM_AHEAD_GENERIC 4

#define MM_AHEAD_MULTISOUND 1

#define MM_AHEAD_PROAUDIO 3

#define MM_AHEAD_SOUNDBLASTER 2

#define MM_ALARIS 174

#define MM_ALDIGITAL 143

#define MM_ALESIS 243

#define MM_ALGOVISION 266

#define MM_ALGOVISION_VB80AUX 4

#define MM_ALGOVISION_VB80AUX2 5

#define MM_ALGOVISION_VB80MIXER 3

#define MM_ALGOVISION_VB80WAVEIN 2

#define MM_ALGOVISION_VB80WAVEOUT 1

#define MM_AMD 146

#define MM_AMD_INTERWAVE_AUX1 10

#define MM_AMD_INTERWAVE_AUX2 11

#define MM_AMD_INTERWAVE_AUX_CD 13

#define MM_AMD_INTERWAVE_AUX_MIC 12

#define MM_AMD_INTERWAVE_EX_CD 7

#define MM_AMD_INTERWAVE_EX_TELEPHONY 16

#define MM_AMD_INTERWAVE_JOYSTICK 6

#define MM_AMD_INTERWAVE_MIDIIN 8

#define MM_AMD_INTERWAVE_MIDIOUT 9

#define MM_AMD_INTERWAVE_MIXER1 4

#define MM_AMD_INTERWAVE_MIXER2 5

#define MM_AMD_INTERWAVE_MONO_IN 14

#define MM_AMD_INTERWAVE_MONO_OUT 15

#define MM_AMD_INTERWAVE_STEREO_ENHANCED 19

#define MM_AMD_INTERWAVE_SYNTH 3

#define MM_AMD_INTERWAVE_WAVEIN 1

#define MM_AMD_INTERWAVE_WAVEOUT 2

#define MM_AMD_INTERWAVE_WAVEOUT_BASE 17

#define MM_AMD_INTERWAVE_WAVEOUT_TREBLE 18

#define MM_ANALOGDEVICES 252

#define MM_ANTEX 31

#define MM_ANTEX_AUDIOPORT22_FEEDTHRU 9

#define MM_ANTEX_AUDIOPORT22_WAVEIN 7

#define MM_ANTEX_AUDIOPORT22_WAVEOUT 8

#define MM_ANTEX_SX12_WAVEIN 1

#define MM_ANTEX_SX12_WAVEOUT 2

#define MM_ANTEX_SX15_WAVEIN 3

#define MM_ANTEX_SX15_WAVEOUT 4

#define MM_ANTEX_VP625_WAVEIN 5

#define MM_ANTEX_VP625_WAVEOUT 6

#define MM_APICOM 116

#define MM_APPLE 99

#define MM_APPS 42

#define MM_APT 56

#define MM_APT_ACE100CD 1

#define MM_ARRAY 231

#define MM_ARTISOFT 20

#define MM_ARTISOFT_SBWAVEIN 1

#define MM_ARTISOFT_SBWAVEOUT 2

#define MM_AST 64

#define MM_AST_MODEMWAVE_WAVEIN 13

#define MM_AST_MODEMWAVE_WAVEOUT 14

#define MM_ATI 27

#define MM_ATT 185

#define MM_ATT_G729A 1

#define MM_ATT_MICROELECTRONICS 139

#define MM_AU8820_AUX 21

#define MM_AU8820_MIDIIN 23

#define MM_AU8820_MIDIOUT 22

#define MM_AU8820_MIXER 20

#define MM_AU8820_SYNTH 17

#define MM_AU8820_WAVEIN 19

#define MM_AU8820_WAVEOUT 18

#define MM_AU8830_AUX 37

#define MM_AU8830_MIDIIN 39

#define MM_AU8830_MIDIOUT 38

#define MM_AU8830_MIXER 36

#define MM_AU8830_SYNTH 33

#define MM_AU8830_WAVEIN 35

#define MM_AU8830_WAVEOUT 34

#define MM_AUDIOFILE 47

#define MM_AUDIOPT 74

#define MM_AUDIOSCIENCE 217

#define MM_AURAVISION 80

#define MM_AUREAL 181

#define MM_AUREAL_AU8820 16

#define MM_AUREAL_AU8830 32

#define MM_AZTECH 52

#define MM_AZTECH_AUX 404

#define MM_AZTECH_AUX_CD 401

#define MM_AZTECH_AUX_LINE 402

#define MM_AZTECH_AUX_MIC 403

#define MM_AZTECH_DSP16_FMSYNTH 68

#define MM_AZTECH_DSP16_WAVEIN 65

#define MM_AZTECH_DSP16_WAVEOUT 66

#define MM_AZTECH_DSP16_WAVESYNTH 70

#define MM_AZTECH_FMSYNTH 20

#define MM_AZTECH_MIDIIN 4

#define MM_AZTECH_MIDIOUT 3

#define MM_AZTECH_MIXER 21

#define MM_AZTECH_NOVA16_MIXER 73

#define MM_AZTECH_NOVA16_WAVEIN 71

#define MM_AZTECH_NOVA16_WAVEOUT 72

#define MM_AZTECH_PRO16_FMSYNTH 38

#define MM_AZTECH_PRO16_WAVEIN 33

#define MM_AZTECH_PRO16_WAVEOUT 34

#define MM_AZTECH_WASH16_MIXER 76

#define MM_AZTECH_WASH16_WAVEIN 74

#define MM_AZTECH_WASH16_WAVEOUT 75

#define MM_AZTECH_WAVEIN 17

#define MM_AZTECH_WAVEOUT 18

#define MM_BCB 192

#define MM_BCB_NETBOARD_10 1

#define MM_BCB_TT75_10 2

#define MM_BECUBED 10

#define MM_BERCOS 199

#define MM_BERCOS_MIXER 2

#define MM_BERCOS_WAVEIN 1

#define MM_BERCOS_WAVEOUT 3

#define MM_BERKOM 189

#define MM_BINTEC 12

#define MM_BINTEC_TAPI_WAVE 1

#define MM_BROOKTREE 121

#define MM_BTV_AUX_CD 8

#define MM_BTV_AUX_LINE 6

#define MM_BTV_AUX_MIC 7

#define MM_BTV_DIGITALIN 9

#define MM_BTV_DIGITALOUT 10

#define MM_BTV_MIDIIN 3

#define MM_BTV_MIDIOUT 4

#define MM_BTV_MIDISYNTH 5

#define MM_BTV_MIDIWAVESTREAM 11

#define MM_BTV_MIXER 12

#define MM_BTV_WAVEIN 1

#define MM_BTV_WAVEOUT 2

#define MM_CANAM 148

#define MM_CANAM_CBXWAVEIN 2

#define MM_CANAM_CBXWAVEOUT 1

#define MM_CANOPUS 49

#define MM_CANOPUS_ACM_DVREX 1

#define MM_CASIO 162

#define MM_CASIO_LSG_MIDIOUT 3

#define MM_CASIO_WP150_MIDIIN 2

#define MM_CASIO_WP150_MIDIOUT 1

#define MM_CAT 41

#define MM_CAT_WAVEOUT 1

#define MM_CDPC_AUX 119

#define MM_CDPC_MIDIIN 114

#define MM_CDPC_MIDIOUT 113

#define MM_CDPC_MIXER 118

#define MM_CDPC_SYNTH 115

#define MM_CDPC_WAVEIN 117

#define MM_CDPC_WAVEOUT 116

#define MM_CHROMATIC 155

#define MM_CHROMATIC_M1 1

#define MM_CHROMATIC_M1_AUX 6

#define MM_CHROMATIC_M1_AUX_CD 7

#define MM_CHROMATIC_M1_FMSYNTH 4

#define MM_CHROMATIC_M1_MIDIIN 8

#define MM_CHROMATIC_M1_MIDIOUT 9

#define MM_CHROMATIC_M1_MIXER 5

#define MM_CHROMATIC_M1_MPEGWAVEIN 17

#define MM_CHROMATIC_M1_MPEGWAVEOUT 18

#define MM_CHROMATIC_M1_WAVEIN 2

#define MM_CHROMATIC_M1_WAVEOUT 3

#define MM_CHROMATIC_M1_WTSYNTH 16

#define MM_CHROMATIC_M2 19

#define MM_CHROMATIC_M2_AUX 24

#define MM_CHROMATIC_M2_AUX_CD 25

#define MM_CHROMATIC_M2_FMSYNTH 22

#define MM_CHROMATIC_M2_MIDIIN 32

#define MM_CHROMATIC_M2_MIDIOUT 33

#define MM_CHROMATIC_M2_MIXER 23

#define MM_CHROMATIC_M2_MPEGWAVEIN 35

#define MM_CHROMATIC_M2_MPEGWAVEOUT 36

#define MM_CHROMATIC_M2_WAVEIN 20

#define MM_CHROMATIC_M2_WAVEOUT 21

#define MM_CHROMATIC_M2_WTSYNTH 34

#define MM_CIRRUSLOGIC 105

#define MM_COLORGRAPH 179

#define MM_COMPAQ 92

#define MM_COMPAQ_BB_WAVEAUX 3

#define MM_COMPAQ_BB_WAVEIN 1

#define MM_COMPAQ_BB_WAVEOUT 2

#define MM_COMPUSIC 89

#define MM_COMPUTER_FRIENDS 45

#define MM_CONCEPTS 108

#define MM_CONNECTIX 158

#define MM_CONNECTIX_VIDEC_CODEC 1

#define MM_CONTROLRES 84

#define MM_COREDYNAMICS 147

#define MM_COREDYNAMICS_DYNAGRAFX_VGA 9

#define MM_COREDYNAMICS_DYNAGRAFX_WAVE_IN 10

#define MM_COREDYNAMICS_DYNAGRAFX_WAVE_OUT 11

#define MM_COREDYNAMICS_DYNAMIXHR 1

#define MM_COREDYNAMICS_DYNASONIX_AUDIO_IN 7

#define MM_COREDYNAMICS_DYNASONIX_AUDIO_OUT 8

#define MM_COREDYNAMICS_DYNASONIX_MIDI_IN 3

#define MM_COREDYNAMICS_DYNASONIX_MIDI_OUT 4

#define MM_COREDYNAMICS_DYNASONIX_SYNTH 2

#define MM_COREDYNAMICS_DYNASONIX_WAVE_IN 5

#define MM_COREDYNAMICS_DYNASONIX_WAVE_OUT 6

#define MM_CREATIVE 2

#define MM_CREATIVE_AUX_CD 401

#define MM_CREATIVE_AUX_LINE 402

#define MM_CREATIVE_AUX_MASTER 404

#define MM_CREATIVE_AUX_MIC 403

#define MM_CREATIVE_AUX_MIDI 407

#define MM_CREATIVE_AUX_PCSPK 405

#define MM_CREATIVE_AUX_WAVE 406

#define MM_CREATIVE_FMSYNTH_MONO 301

#define MM_CREATIVE_FMSYNTH_STEREO 302

#define MM_CREATIVE_MIDI_AWE32 303

#define MM_CREATIVE_MIDIIN 202

#define MM_CREATIVE_MIDIOUT 201

#define MM_CREATIVE_PHNBLST_WAVEIN 5

#define MM_CREATIVE_PHNBLST_WAVEOUT 105

#define MM_CREATIVE_SB15_WAVEIN 1

#define MM_CREATIVE_SB15_WAVEOUT 101

#define MM_CREATIVE_SB16_MIXER 409

#define MM_CREATIVE_SB20_WAVEIN 2

#define MM_CREATIVE_SB20_WAVEOUT 102

#define MM_CREATIVE_SBP16_WAVEIN 4

#define MM_CREATIVE_SBP16_WAVEOUT 104

#define MM_CREATIVE_SBPRO_MIXER 408

#define MM_CREATIVE_SBPRO_WAVEIN 3

#define MM_CREATIVE_SBPRO_WAVEOUT 103

#define MM_CRYSTAL 132

#define MM_CRYSTAL_CS4232_INPUTGAIN_AUX1 13

#define MM_CRYSTAL_CS4232_INPUTGAIN_LOOP 14

#define MM_CRYSTAL_CS4232_MIDIIN 9

#define MM_CRYSTAL_CS4232_MIDIOUT 10

#define MM_CRYSTAL_CS4232_WAVEAUX_AUX1 4

#define MM_CRYSTAL_CS4232_WAVEAUX_AUX2 5

#define MM_CRYSTAL_CS4232_WAVEAUX_LINE 6

#define MM_CRYSTAL_CS4232_WAVEAUX_MASTER 8

#define MM_CRYSTAL_CS4232_WAVEAUX_MONO 7

#define MM_CRYSTAL_CS4232_WAVEIN 1

#define MM_CRYSTAL_CS4232_WAVEMIXER 3

#define MM_CRYSTAL_CS4232_WAVEOUT 2

#define MM_CRYSTAL_NET 154

#define MM_CRYSTAL_SOUND_FUSION_JOYSTICK 26

#define MM_CRYSTAL_SOUND_FUSION_MIDIIN 24

#define MM_CRYSTAL_SOUND_FUSION_MIDIOUT 25

#define MM_CRYSTAL_SOUND_FUSION_MIXER 23

#define MM_CRYSTAL_SOUND_FUSION_WAVEIN 21

#define MM_CRYSTAL_SOUND_FUSION_WAVEOUT 22

#define MM_CS 242

#define MM_CYRIX 6

#define MM_CYRIX_XAAUX 6

#define MM_CYRIX_XAMIDIIN 2

#define MM_CYRIX_XAMIDIOUT 3

#define MM_CYRIX_XAMIXER 7

#define MM_CYRIX_XASYNTH 1

#define MM_CYRIX_XAWAVEIN 4

#define MM_CYRIX_XAWAVEOUT 5

#define MM_DATAFUSION 196

#define MM_DATARAN 232

#define MM_DDD 151

#define MM_DDD_MIDILINK_MIDIIN 1

#define MM_DDD_MIDILINK_MIDIOUT 2

#define MM_DF_ACM_G726 1

#define MM_DF_ACM_GSM610 2

#define MM_DIACOUSTICS 129

#define MM_DIACOUSTICS_DRUM_ACTION 1

#define MM_DIALOGIC 93

#define MM_DIAMONDMM 163

#define MM_DICTAPHONE 214

#define MM_DICTAPHONE_G726 1

#define MM_DIGIGRAM 227

#define MM_DIGITAL 100

#define MM_DIGITAL_ACM_G723 3

#define MM_DIGITAL_AUDIO_LABS 136

#define MM_DIGITAL_AUDIO_LABS_CDLX 19

#define MM_DIGITAL_AUDIO_LABS_CPRO 17

#define MM_DIGITAL_AUDIO_LABS_CTDIF 20

#define MM_DIGITAL_AUDIO_LABS_DOC 2

#define MM_DIGITAL_AUDIO_LABS_TC 1

#define MM_DIGITAL_AUDIO_LABS_V8 16

#define MM_DIGITAL_AUDIO_LABS_VP 18

#define MM_DIGITAL_AV320_WAVEIN 1

#define MM_DIGITAL_AV320_WAVEOUT 2

#define MM_DIGITAL_ICM_H261 5

#define MM_DIGITAL_ICM_H263 4

#define MM_DIMD_AUX_LINE 9

#define MM_DIMD_DIRSOUND 1

#define MM_DIMD_MIDIIN 7

#define MM_DIMD_MIDIOUT 8

#define MM_DIMD_MIXER 10

#define MM_DIMD_PLATFORM 0

#define MM_DIMD_VIRTJOY 4

#define MM_DIMD_VIRTMPU 2

#define MM_DIMD_VIRTSB 3

#define MM_DIMD_WAVEIN 5

#define MM_DIMD_WAVEOUT 6

#define MM_DIMD_WSS_AUX 21

#define MM_DIMD_WSS_MIXER 17

#define MM_DIMD_WSS_SYNTH 76

#define MM_DIMD_WSS_WAVEIN 14

#define MM_DIMD_WSS_WAVEOUT 15

#define MM_DOLBY 78

#define MM_DPSINC 191

#define MM_DSP_GROUP 43

#define MM_DSP_GROUP_TRUESPEECH 1

#define MM_DSP_SOLUTIONS 25

#define MM_DSP_SOLUTIONS_AUX 4

#define MM_DSP_SOLUTIONS_SYNTH 3

#define MM_DSP_SOLUTIONS_WAVEIN 2

#define MM_DSP_SOLUTIONS_WAVEOUT 1

#define MM_DTS 226

#define MM_DTS_DS 1

#define MM_DUCK 197

#define MM_DVISION 165

#define MM_ECHO 39

#define MM_ECHO_AUX 6

#define MM_ECHO_MIDIIN 5

#define MM_ECHO_MIDIOUT 4

#define MM_ECHO_SYNTH 1

#define MM_ECHO_WAVEIN 3

#define MM_ECHO_WAVEOUT 2

#define MM_ECS 145

#define MM_ECS_AADF_MIDI_IN 10

#define MM_ECS_AADF_MIDI_OUT 11

#define MM_ECS_AADF_WAVE2MIDI_IN 12

#define MM_EES 219

#define MM_EES_PCMIDI14 1

#define MM_EES_PCMIDI14_IN 2

#define MM_EES_PCMIDI14_OUT1 3

#define MM_EES_PCMIDI14_OUT2 4

#define MM_EES_PCMIDI14_OUT3 5

#define MM_EES_PCMIDI14_OUT4 6

#define MM_EMAGIC 208

#define MM_EMAGIC_UNITOR8 1

#define MM_EMU 19

#define MM_EMU_APSMIDIIN 2

#define MM_EMU_APSMIDIOUT 3

#define MM_EMU_APSSYNTH 1

#define MM_EMU_APSWAVEIN 4

#define MM_EMU_APSWAVEOUT 5

#define MM_ENET 206

#define MM_ENET_T2000_HANDSETIN 3

#define MM_ENET_T2000_HANDSETOUT 4

#define MM_ENET_T2000_LINEIN 1

#define MM_ENET_T2000_LINEOUT 2

#define MM_ENSONIQ 125

#define MM_ENSONIQ_SOUNDSCAPE 16

#define MM_EPS_FMSND 1

#define MM_EPSON 50

#define MM_ESS 46

#define MM_ESS_AMAUX 3

#define MM_ESS_AMMIDIIN 6

#define MM_ESS_AMMIDIOUT 5

#define MM_ESS_AMSYNTH 4

#define MM_ESS_AMWAVEIN 2

#define MM_ESS_AMWAVEOUT 1

#define MM_ESS_AUX_CD 8

#define MM_ESS_ES1488_MIXER 24

#define MM_ESS_ES1488_WAVEIN 23

#define MM_ESS_ES1488_WAVEOUT 22

#define MM_ESS_ES1688_MIXER 27

#define MM_ESS_ES1688_WAVEIN 26

#define MM_ESS_ES1688_WAVEOUT 25

#define MM_ESS_ES1788_MIXER 30

#define MM_ESS_ES1788_WAVEIN 29

#define MM_ESS_ES1788_WAVEOUT 28

#define MM_ESS_ES1868_MIXER 36

#define MM_ESS_ES1868_WAVEIN 35

#define MM_ESS_ES1868_WAVEOUT 34

#define MM_ESS_ES1878_MIXER 39

#define MM_ESS_ES1878_WAVEIN 38

#define MM_ESS_ES1878_WAVEOUT 37

#define MM_ESS_ES1888_MIXER 33

#define MM_ESS_ES1888_WAVEIN 32

#define MM_ESS_ES1888_WAVEOUT 31

#define MM_ESS_ES488_MIXER 18

#define MM_ESS_ES488_WAVEIN 17

#define MM_ESS_ES488_WAVEOUT 16

#define MM_ESS_ES688_MIXER 21

#define MM_ESS_ES688_WAVEIN 20

#define MM_ESS_ES688_WAVEOUT 19

#define MM_ESS_MIXER 7

#define MM_ESS_MPU401_MIDIIN 10

#define MM_ESS_MPU401_MIDIOUT 9

#define MM_ETEK 241

#define MM_ETEK_KWIKMIDI_MIDIIN 1

#define MM_ETEK_KWIKMIDI_MIDIOUT 2

#define MM_EUPHONICS 152

#define MM_EUPHONICS_AUX_CD 1

#define MM_EUPHONICS_AUX_LINE 2

#define MM_EUPHONICS_AUX_MASTER 3

#define MM_EUPHONICS_AUX_MIC 4

#define MM_EUPHONICS_AUX_MIDI 5

#define MM_EUPHONICS_AUX_WAVE 6

#define MM_EUPHONICS_EUSYNTH 14

#define MM_EUPHONICS_FMSYNTH_MONO 7

#define MM_EUPHONICS_FMSYNTH_STEREO 8

#define MM_EUPHONICS_MIDIIN 9

#define MM_EUPHONICS_MIDIOUT 10

#define MM_EUPHONICS_MIXER 11

#define MM_EUPHONICS_WAVEIN 12

#define MM_EUPHONICS_WAVEOUT 13

#define MM_EVEREX 38

#define MM_EVEREX_CARRIER 1

#define MM_EXAN 63

#define MM_FAITH 15

#define MM_FAST 126

#define MM_FHGIIS_MPEGLAYER3 10

#define MM_FLEXION 249

#define MM_FLEXION_X300_WAVEIN 1

#define MM_FLEXION_X300_WAVEOUT 2

#define MM_FORTEMEDIA 229

#define MM_FORTEMEDIA_AUX 5

#define MM_FORTEMEDIA_FMSYNC 3

#define MM_FORTEMEDIA_MIXER 4

#define MM_FORTEMEDIA_WAVEIN 1

#define MM_FORTEMEDIA_WAVEOUT 2

#define MM_FRAUNHOFER_IIS 172

#define MM_FRONTIER 160

#define MM_FRONTIER_WAVECENTER_MIDIIN 1

#define MM_FRONTIER_WAVECENTER_MIDIOUT 2

#define MM_FRONTIER_WAVECENTER_WAVEIN 3

#define MM_FRONTIER_WAVECENTER_WAVEOUT 4

#define MM_FTR 198

#define MM_FTR_ACM 2

#define MM_FTR_ENCODER_WAVEIN 1

#define MM_FUJITSU 4

#define MM_GADGETLABS 159

#define MM_GADGETLABS_WAVE42_WAVEIN 3

#define MM_GADGETLABS_WAVE42_WAVEOUT 4

#define MM_GADGETLABS_WAVE44_WAVEIN 1

#define MM_GADGETLABS_WAVE44_WAVEOUT 2

#define MM_GADGETLABS_WAVE4_MIDIIN 5

#define MM_GADGETLABS_WAVE4_MIDIOUT 6

#define MM_GRANDE 117

#define MM_GRAVIS 34

#define MM_GUILLEMOT 207

#define MM_GULBRANSEN 130

#define MM_HAFTMANN 220

#define MM_HAFTMANN_LPTDAC2 1

#define MM_HEADSPACE 222

#define MM_HEADSPACE_HAEMIXER 4

#define MM_HEADSPACE_HAESYNTH 1

#define MM_HEADSPACE_HAEWAVEIN 3

#define MM_HEADSPACE_HAEWAVEOUT 2

#define MM_HEWLETT_PACKARD 13

#define MM_HEWLETT_PACKARD_CU_CODEC 1

#define MM_HORIZONS 107

#define MM_HP 253

#define MM_HP_WAVEIN 2

#define MM_HP_WAVEOUT 1

#define MM_HYPERACTIVE 246

#define MM_I_LINK 233

#define MM_I_LINK_VOICE_CODER 1

#define MM_IBM 22

#define MM_IBM_MWAVE_AUX 23

#define MM_IBM_MWAVE_MIDIIN 21

#define MM_IBM_MWAVE_MIDIOUT 22

#define MM_IBM_MWAVE_MIXER 20

#define MM_IBM_MWAVE_WAVEIN 18

#define MM_IBM_MWAVE_WAVEOUT 19

#define MM_IBM_PCMCIA_AUX 16

#define MM_IBM_PCMCIA_MIDIIN 14

#define MM_IBM_PCMCIA_MIDIOUT 15

#define MM_IBM_PCMCIA_SYNTH 13

#define MM_IBM_PCMCIA_WAVEIN 11

#define MM_IBM_PCMCIA_WAVEOUT 12

#define MM_IBM_THINKPAD200 17

#define MM_IBM_WC_MIDIOUT 30

#define MM_IBM_WC_MIXEROUT 33

#define MM_IBM_WC_WAVEOUT 31

#define MM_ICCC 259

#define MM_ICCC_UNA3_AUX 3

#define MM_ICCC_UNA3_MIXER 4

#define MM_ICCC_UNA3_WAVEIN 1

#define MM_ICCC_UNA3_WAVEOUT 2

#define MM_ICE 239

#define MM_ICE_AUX 11

#define MM_ICE_MIDIIN1 6

#define MM_ICE_MIDIIN2 8

#define MM_ICE_MIDIOUT1 5

#define MM_ICE_MIDIOUT2 7

#define MM_ICE_MIXER 10

#define MM_ICE_MTWAVEIN 4

#define MM_ICE_MTWAVEOUT 3

#define MM_ICE_SYNTH 9

#define MM_ICE_WAVEIN 2

#define MM_ICE_WAVEOUT 1

#define MM_ICL_PS 32

#define MM_ICOM_AUX 6

#define MM_ICOM_LINE 7

#define MM_ICOM_MIXER 5

#define MM_ICOM_WAVEIN 3

#define MM_ICOM_WAVEOUT 4

#define MM_ICS 57

#define MM_ICS_2115_LITE_MIDIOUT 13

#define MM_ICS_2120_LITE_MIDIOUT 14

#define MM_ICS_WAVEDEC_SB_AUX 12

#define MM_ICS_WAVEDEC_SB_FM_MIDIOUT 8

#define MM_ICS_WAVEDEC_SB_MIXER 11

#define MM_ICS_WAVEDEC_SB_MPU401_MIDIIN 10

#define MM_ICS_WAVEDEC_SB_MPU401_MIDIOUT 9

#define MM_ICS_WAVEDEC_SB_WAVEIN 7

#define MM_ICS_WAVEDEC_SB_WAVEOUT 6

#define MM_ICS_WAVEDECK_AUX 4

#define MM_ICS_WAVEDECK_MIXER 3

#define MM_ICS_WAVEDECK_SYNTH 5

#define MM_ICS_WAVEDECK_WAVEIN 2

#define MM_ICS_WAVEDECK_WAVEOUT 1

#define MM_INSOFT 94

#define MM_INTEL 33

#define MM_INTEL_NSPMODEMLINEIN 501

#define MM_INTEL_NSPMODEMLINEOUT 502

#define MM_INTELOPD_AUX 401

#define MM_INTELOPD_WAVEIN 1

#define MM_INTELOPD_WAVEOUT 101

#define MM_INTERACTIVE 36

#define MM_INTERACTIVE_WAVEIN 69

#define MM_INTERACTIVE_WAVEOUT 69

#define MM_INTERNET 244

#define MM_INTERNET_SSW_MIDIIN 11

#define MM_INTERNET_SSW_MIDIOUT 10

#define MM_INTERNET_SSW_WAVEIN 13

#define MM_INTERNET_SSW_WAVEOUT 12

#define MM_INVISION 188

#define MM_IODD 258

#define MM_IOMAGIC 82

#define MM_IOMAGIC_TEMPO_AUXOUT 6

#define MM_IOMAGIC_TEMPO_MIDIOUT 4

#define MM_IOMAGIC_TEMPO_MXDOUT 5

#define MM_IOMAGIC_TEMPO_SYNTH 3

#define MM_IOMAGIC_TEMPO_WAVEIN 2

#define MM_IOMAGIC_TEMPO_WAVEOUT 1

#define MM_IPI 238

#define MM_IPI_ACM_HSX 1

#define MM_IPI_ACM_RPELP 2

#define MM_IPI_AT_MIXER 6

#define MM_IPI_AT_WAVEIN 5

#define MM_IPI_AT_WAVEOUT 4

#define MM_IPI_WF_ASSS 3

#define MM_ISOLUTION 106

#define MM_ISOLUTION_PASCAL 1

#define MM_ITERATEDSYS 58

#define MM_ITERATEDSYS_FUFCODEC 1

#define MM_KAY_ELEMETRICS 131

#define MM_KAY_ELEMETRICS_CSL 17152

#define MM_KAY_ELEMETRICS_CSL_4CHANNEL 17161

#define MM_KAY_ELEMETRICS_CSL_DAT 17160

#define MM_KORG 55

#define MM_KORG_1212IO_MSWAVEIN 3

#define MM_KORG_1212IO_MSWAVEOUT 4

#define MM_KORG_PCIF_MIDIIN 2

#define MM_KORG_PCIF_MIDIOUT 1

#define MM_LERNOUT_AND_HAUSPIE 97

#define MM_LERNOUT_ANDHAUSPIE_LHCODECACM 1

#define MM_LEXICON 236

#define MM_LEXICON_STUDIO_WAVE_IN 2

#define MM_LEXICON_STUDIO_WAVE_OUT 1

#define MM_LOGITECH 60

#define MM_LUCENT 184

#define MM_LUCENT_ACM_G723 0

#define MM_LUCID 221

#define MM_LUCID_PCI24WAVEIN 1

#define MM_LUCID_PCI24WAVEOUT 2

#define MM_LUMINOSITI 224

#define MM_LUMINOSITI_SCWAVEIN 1

#define MM_LUMINOSITI_SCWAVEMIX 3

#define MM_LUMINOSITI_SCWAVEOUT 2

#define MM_LYNX 212

#define MM_LYRRUS 88

#define MM_LYRRUS_BRIDGE_GUITAR 1

#define MM_MALDEN 261

#define MM_MARIAN 190

#define MM_MARIAN_ARC44WAVEIN 1

#define MM_MARIAN_ARC44WAVEOUT 2

#define MM_MARIAN_ARC88WAVEIN 5

#define MM_MARIAN_ARC88WAVEOUT 6

#define MM_MARIAN_PRODIF24WAVEIN 3

#define MM_MARIAN_PRODIF24WAVEOUT 4

#define MM_MATROX_DIV 254

#define MM_MATSUSHITA 83

#define MM_MATSUSHITA_AUX 5

#define MM_MATSUSHITA_FMSYNTH_STEREO 3

#define MM_MATSUSHITA_MIXER 4

#define MM_MATSUSHITA_WAVEIN 1

#define MM_MATSUSHITA_WAVEOUT 2

#define MM_MEDIASONIC 71

#define MM_MEDIASONIC_ACM_G723 1

#define MM_MEDIASONIC_ICOM 2

#define MM_MEDIATRIX 141

#define MM_MEDIAVISION 3

#define MM_MEDIAVISION_CDPC 112

#define MM_MEDIAVISION_OPUS1208 128

#define MM_MEDIAVISION_OPUS1216 144

#define MM_MEDIAVISION_PROAUDIO 16

#define MM_MEDIAVISION_PROAUDIO_16 96

#define MM_MEDIAVISION_PROAUDIO_PLUS 80

#define MM_MEDIAVISION_PROSTUDIO_16 96

#define MM_MEDIAVISION_THUNDER 32

#define MM_MEDIAVISION_TPORT 64

#define MM_MELABS 44

#define MM_MELABS_MIDI2GO 1

#define MM_MERGING_MPEGL3 1

#define MM_MERGING_TECHNOLOGIES 177

#define MM_METHEUS 59

#define MM_METHEUS_ZIPPER 1

#define MM_MICRONAS 251

#define MM_MICRONAS_CLP833 2

#define MM_MICRONAS_SC4 1

#define MM_MICROSOFT 1

#define MM_MIDI_MAPPER 1

#define MM_MINDMAKER 263

#define MM_MINDMAKER_GC_MIXER 3

#define MM_MINDMAKER_GC_WAVEIN 1

#define MM_MINDMAKER_GC_WAVEOUT 2

#define MM_MIRO 104

#define MM_MIRO_DC30_MIX 7

#define MM_MIRO_DC30_WAVEIN 6

#define MM_MIRO_DC30_WAVEOUT 5

#define MM_MIRO_MOVIEPRO 1

#define MM_MIRO_VIDEOD1 2

#define MM_MIRO_VIDEODC1TV 3

#define MM_MIRO_VIDEOTD 4

#define MM_MITEL 16

#define MM_MITEL_MEDIAPATH_WAVEIN 301

#define MM_MITEL_MEDIAPATH_WAVEOUT 300

#define MM_MITEL_MPA_HANDSET_WAVEIN 201

#define MM_MITEL_MPA_HANDSET_WAVEOUT 200

#define MM_MITEL_MPA_HANDSFREE_WAVEIN 203

#define MM_MITEL_MPA_HANDSFREE_WAVEOUT 202

#define MM_MITEL_MPA_LINE1_WAVEIN 205

#define MM_MITEL_MPA_LINE1_WAVEOUT 204

#define MM_MITEL_MPA_LINE2_WAVEIN 207

#define MM_MITEL_MPA_LINE2_WAVEOUT 206

#define MM_MITEL_TALKTO_BRIDGED_WAVEIN 105

#define MM_MITEL_TALKTO_BRIDGED_WAVEOUT 104

#define MM_MITEL_TALKTO_HANDSET_WAVEIN 103

#define MM_MITEL_TALKTO_HANDSET_WAVEOUT 102

#define MM_MITEL_TALKTO_LINE_WAVEIN 101

#define MM_MITEL_TALKTO_LINE_WAVEOUT 100

#define MM_MMOTION_WAVEAUX 1

#define MM_MMOTION_WAVEIN 3

#define MM_MMOTION_WAVEOUT 2

#define MM_MOSCOM 68

#define MM_MOSCOM_VPC2400_IN 1

#define MM_MOSCOM_VPC2400_OUT 2

#define MM_MOTIONPIXELS 193

#define MM_MOTIONPIXELS_MVI2 1

#define MM_MOTOROLA 48

#define MM_MOTU 101

#define MM_MOTU_DTX_MIDI_IN_A 801

#define MM_MOTU_DTX_MIDI_IN_B 802

#define MM_MOTU_DTX_MIDI_IN_SYNC 800

#define MM_MOTU_DTX_MIDI_OUT_A 801

#define MM_MOTU_DTX_MIDI_OUT_B 802

#define MM_MOTU_FLYER_MIDI_IN_A 601

#define MM_MOTU_FLYER_MIDI_IN_B 602

#define MM_MOTU_FLYER_MIDI_IN_SYNC 600

#define MM_MOTU_FLYER_MIDI_OUT_A 601

#define MM_MOTU_FLYER_MIDI_OUT_B 602

#define MM_MOTU_MTP_MIDIIN_1 101

#define MM_MOTU_MTP_MIDIIN_2 102

#define MM_MOTU_MTP_MIDIIN_3 103

#define MM_MOTU_MTP_MIDIIN_4 104

#define MM_MOTU_MTP_MIDIIN_5 105

#define MM_MOTU_MTP_MIDIIN_6 106

#define MM_MOTU_MTP_MIDIIN_7 107

#define MM_MOTU_MTP_MIDIIN_8 108

#define MM_MOTU_MTP_MIDIOUT_1 101

#define MM_MOTU_MTP_MIDIOUT_2 102

#define MM_MOTU_MTP_MIDIOUT_3 103

#define MM_MOTU_MTP_MIDIOUT_4 104

#define MM_MOTU_MTP_MIDIOUT_5 105

#define MM_MOTU_MTP_MIDIOUT_6 106

#define MM_MOTU_MTP_MIDIOUT_7 107

#define MM_MOTU_MTP_MIDIOUT_8 108

#define MM_MOTU_MTP_MIDIOUT_ALL 100

#define MM_MOTU_MTPAV_MIDIIN_1 901

#define MM_MOTU_MTPAV_MIDIIN_2 902

#define MM_MOTU_MTPAV_MIDIIN_3 903

#define MM_MOTU_MTPAV_MIDIIN_4 904

#define MM_MOTU_MTPAV_MIDIIN_5 905

#define MM_MOTU_MTPAV_MIDIIN_6 906

#define MM_MOTU_MTPAV_MIDIIN_7 907

#define MM_MOTU_MTPAV_MIDIIN_8 908

#define MM_MOTU_MTPAV_MIDIIN_ADAT 917

#define MM_MOTU_MTPAV_MIDIIN_SYNC 900

#define MM_MOTU_MTPAV_MIDIOUT_1 901

#define MM_MOTU_MTPAV_MIDIOUT_2 902

#define MM_MOTU_MTPAV_MIDIOUT_3 903

#define MM_MOTU_MTPAV_MIDIOUT_4 904

#define MM_MOTU_MTPAV_MIDIOUT_5 905

#define MM_MOTU_MTPAV_MIDIOUT_6 906

#define MM_MOTU_MTPAV_MIDIOUT_7 907

#define MM_MOTU_MTPAV_MIDIOUT_8 908

#define MM_MOTU_MTPAV_MIDIOUT_ADAT 917

#define MM_MOTU_MTPAV_MIDIOUT_ALL 900

#define MM_MOTU_MTPAV_NET_MIDIIN_1 909

#define MM_MOTU_MTPAV_NET_MIDIIN_2 910

#define MM_MOTU_MTPAV_NET_MIDIIN_3 911

#define MM_MOTU_MTPAV_NET_MIDIIN_4 912

#define MM_MOTU_MTPAV_NET_MIDIIN_5 913

#define MM_MOTU_MTPAV_NET_MIDIIN_6 914

#define MM_MOTU_MTPAV_NET_MIDIIN_7 915

#define MM_MOTU_MTPAV_NET_MIDIIN_8 916

#define MM_MOTU_MTPAV_NET_MIDIOUT_1 909

#define MM_MOTU_MTPAV_NET_MIDIOUT_2 910

#define MM_MOTU_MTPAV_NET_MIDIOUT_3 911

#define MM_MOTU_MTPAV_NET_MIDIOUT_4 912

#define MM_MOTU_MTPAV_NET_MIDIOUT_5 913

#define MM_MOTU_MTPAV_NET_MIDIOUT_6 914

#define MM_MOTU_MTPAV_NET_MIDIOUT_7 915

#define MM_MOTU_MTPAV_NET_MIDIOUT_8 916

#define MM_MOTU_MTPII_MIDIIN_1 201

#define MM_MOTU_MTPII_MIDIIN_2 202

#define MM_MOTU_MTPII_MIDIIN_3 203

#define MM_MOTU_MTPII_MIDIIN_4 204

#define MM_MOTU_MTPII_MIDIIN_5 205

#define MM_MOTU_MTPII_MIDIIN_6 206

#define MM_MOTU_MTPII_MIDIIN_7 207

#define MM_MOTU_MTPII_MIDIIN_8 208

#define MM_MOTU_MTPII_MIDIIN_SYNC 200

#define MM_MOTU_MTPII_MIDIOUT_1 201

#define MM_MOTU_MTPII_MIDIOUT_2 202

#define MM_MOTU_MTPII_MIDIOUT_3 203

#define MM_MOTU_MTPII_MIDIOUT_4 204

#define MM_MOTU_MTPII_MIDIOUT_5 205

#define MM_MOTU_MTPII_MIDIOUT_6 206

#define MM_MOTU_MTPII_MIDIOUT_7 207

#define MM_MOTU_MTPII_MIDIOUT_8 208

#define MM_MOTU_MTPII_MIDIOUT_ALL 200

#define MM_MOTU_MTPII_NET_MIDIIN_1 209

#define MM_MOTU_MTPII_NET_MIDIIN_2 210

#define MM_MOTU_MTPII_NET_MIDIIN_3 211

#define MM_MOTU_MTPII_NET_MIDIIN_4 212

#define MM_MOTU_MTPII_NET_MIDIIN_5 213

#define MM_MOTU_MTPII_NET_MIDIIN_6 214

#define MM_MOTU_MTPII_NET_MIDIIN_7 215

#define MM_MOTU_MTPII_NET_MIDIIN_8 216

#define MM_MOTU_MTPII_NET_MIDIOUT_1 209

#define MM_MOTU_MTPII_NET_MIDIOUT_2 210

#define MM_MOTU_MTPII_NET_MIDIOUT_3 211

#define MM_MOTU_MTPII_NET_MIDIOUT_4 212

#define MM_MOTU_MTPII_NET_MIDIOUT_5 213

#define MM_MOTU_MTPII_NET_MIDIOUT_6 214

#define MM_MOTU_MTPII_NET_MIDIOUT_7 215

#define MM_MOTU_MTPII_NET_MIDIOUT_8 216

#define MM_MOTU_MXN_MIDIIN_1 501

#define MM_MOTU_MXN_MIDIIN_2 502

#define MM_MOTU_MXN_MIDIIN_3 503

#define MM_MOTU_MXN_MIDIIN_4 504

#define MM_MOTU_MXN_MIDIIN_SYNC 500

#define MM_MOTU_MXN_MIDIOUT_1 501

#define MM_MOTU_MXN_MIDIOUT_2 502

#define MM_MOTU_MXN_MIDIOUT_3 503

#define MM_MOTU_MXN_MIDIOUT_4 504

#define MM_MOTU_MXN_MIDIOUT_ALL 500

#define MM_MOTU_MXP_MIDIIN_MIDIIN_1 301

#define MM_MOTU_MXP_MIDIIN_MIDIIN_2 302

#define MM_MOTU_MXP_MIDIIN_MIDIIN_3 303

#define MM_MOTU_MXP_MIDIIN_MIDIIN_4 304

#define MM_MOTU_MXP_MIDIIN_MIDIIN_5 305

#define MM_MOTU_MXP_MIDIIN_MIDIIN_6 306

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_1 301

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_2 302

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_3 303

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_4 304

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_5 305

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_6 306

#define MM_MOTU_MXP_MIDIIN_MIDIOUT_ALL 300

#define MM_MOTU_MXP_MIDIIN_SYNC 300

#define MM_MOTU_MXPMPU_MIDIIN_1 401

#define MM_MOTU_MXPMPU_MIDIIN_2 402

#define MM_MOTU_MXPMPU_MIDIIN_3 403

#define MM_MOTU_MXPMPU_MIDIIN_4 404

#define MM_MOTU_MXPMPU_MIDIIN_5 405

#define MM_MOTU_MXPMPU_MIDIIN_6 406

#define MM_MOTU_MXPMPU_MIDIIN_SYNC 400

#define MM_MOTU_MXPMPU_MIDIOUT_1 401

#define MM_MOTU_MXPMPU_MIDIOUT_2 402

#define MM_MOTU_MXPMPU_MIDIOUT_3 403

#define MM_MOTU_MXPMPU_MIDIOUT_4 404

#define MM_MOTU_MXPMPU_MIDIOUT_5 405

#define MM_MOTU_MXPMPU_MIDIOUT_6 406

#define MM_MOTU_MXPMPU_MIDIOUT_ALL 400

#define MM_MOTU_MXPXT_MIDIIN_1 1001

#define MM_MOTU_MXPXT_MIDIIN_2 1002

#define MM_MOTU_MXPXT_MIDIIN_3 1003

#define MM_MOTU_MXPXT_MIDIIN_4 1004

#define MM_MOTU_MXPXT_MIDIIN_5 1005

#define MM_MOTU_MXPXT_MIDIIN_6 1006

#define MM_MOTU_MXPXT_MIDIIN_7 1007

#define MM_MOTU_MXPXT_MIDIIN_8 1008

#define MM_MOTU_MXPXT_MIDIIN_SYNC 1000

#define MM_MOTU_MXPXT_MIDIOUT_1 1001

#define MM_MOTU_MXPXT_MIDIOUT_2 1002

#define MM_MOTU_MXPXT_MIDIOUT_3 1003

#define MM_MOTU_MXPXT_MIDIOUT_4 1004

#define MM_MOTU_MXPXT_MIDIOUT_5 1005

#define MM_MOTU_MXPXT_MIDIOUT_6 1006

#define MM_MOTU_MXPXT_MIDIOUT_7 1007

#define MM_MOTU_MXPXT_MIDIOUT_8 1008

#define MM_MOTU_MXPXT_MIDIOUT_ALL 1000

#define MM_MOTU_PKX_MIDI_IN_A 701

#define MM_MOTU_PKX_MIDI_IN_B 702

#define MM_MOTU_PKX_MIDI_IN_SYNC 700

#define MM_MOTU_PKX_MIDI_OUT_A 701

#define MM_MOTU_PKX_MIDI_OUT_B 702

#define MM_MPTUS 95

#define MM_MPTUS_SPWAVEOUT 1

#define MM_MPU401_MIDIIN 11

#define MM_MPU401_MIDIOUT 10

#define MM_MSFT_ACM_G711 37

#define MM_MSFT_ACM_GSM610 36

#define MM_MSFT_ACM_IMAADPCM 34

#define MM_MSFT_ACM_MSADPCM 33

#define MM_MSFT_ACM_MSAUDIO1 39

#define MM_MSFT_ACM_MSFILTER 35

#define MM_MSFT_ACM_MSG723 92

#define MM_MSFT_ACM_MSNAUDIO 91

#define MM_MSFT_ACM_MSRT24 93

#define MM_MSFT_ACM_PCM 38

#define MM_MSFT_ACM_WMAUDIO 39

#define MM_MSFT_ACM_WMAUDIO2 101

#define MM_MSFT_GENERIC_AUX_CD 30

#define MM_MSFT_GENERIC_AUX_LINE 28

#define MM_MSFT_GENERIC_AUX_MIC 29

#define MM_MSFT_GENERIC_MIDIIN 25

#define MM_MSFT_GENERIC_MIDIOUT 26

#define MM_MSFT_GENERIC_MIDISYNTH 27

#define MM_MSFT_GENERIC_WAVEIN 23

#define MM_MSFT_GENERIC_WAVEOUT 24

#define MM_MSFT_MSACM 32

#define MM_MSFT_MSOPL_SYNTH 76

#define MM_MSFT_SB16_AUX_CD 66

#define MM_MSFT_SB16_AUX_LINE 65

#define MM_MSFT_SB16_MIDIIN 62

#define MM_MSFT_SB16_MIDIOUT 63

#define MM_MSFT_SB16_MIXER 67

#define MM_MSFT_SB16_SYNTH 64

#define MM_MSFT_SB16_WAVEIN 60

#define MM_MSFT_SB16_WAVEOUT 61

#define MM_MSFT_SBPRO_AUX_CD 74

#define MM_MSFT_SBPRO_AUX_LINE 73

#define MM_MSFT_SBPRO_MIDIIN 70

#define MM_MSFT_SBPRO_MIDIOUT 71

#define MM_MSFT_SBPRO_MIXER 75

#define MM_MSFT_SBPRO_SYNTH 72

#define MM_MSFT_SBPRO_WAVEIN 68

#define MM_MSFT_SBPRO_WAVEOUT 69

#define MM_MSFT_VMDM_GAME_WAVEIN 90

#define MM_MSFT_VMDM_GAME_WAVEOUT 89

#define MM_MSFT_VMDMS_HANDSET_WAVEIN 82

#define MM_MSFT_VMDMS_HANDSET_WAVEOUT 83

#define MM_MSFT_VMDMS_LINE_WAVEIN 80

#define MM_MSFT_VMDMS_LINE_WAVEOUT 81

#define MM_MSFT_VMDMW_HANDSET_WAVEIN 86

#define MM_MSFT_VMDMW_HANDSET_WAVEOUT 87

#define MM_MSFT_VMDMW_LINE_WAVEIN 84

#define MM_MSFT_VMDMW_LINE_WAVEOUT 85

#define MM_MSFT_VMDMW_MIXER 88

#define MM_MSFT_WDMAUDIO_AUX 105

#define MM_MSFT_WDMAUDIO_MIDIIN 103

#define MM_MSFT_WDMAUDIO_MIDIOUT 102

#define MM_MSFT_WDMAUDIO_MIXER 104

#define MM_MSFT_WDMAUDIO_WAVEIN 101

#define MM_MSFT_WDMAUDIO_WAVEOUT 100

#define MM_MSFT_WSS_AUX 21

#define MM_MSFT_WSS_FMSYNTH_STEREO 16

#define MM_MSFT_WSS_MIXER 17

#define MM_MSFT_WSS_NT_AUX 59

#define MM_MSFT_WSS_NT_FMSYNTH_STEREO 57

#define MM_MSFT_WSS_NT_MIXER 58

#define MM_MSFT_WSS_NT_WAVEIN 55

#define MM_MSFT_WSS_NT_WAVEOUT 56

#define MM_MSFT_WSS_OEM_AUX 22

#define MM_MSFT_WSS_OEM_FMSYNTH_STEREO 20

#define MM_MSFT_WSS_OEM_MIXER 31

#define MM_MSFT_WSS_OEM_WAVEIN 18

#define MM_MSFT_WSS_OEM_WAVEOUT 19

#define MM_MSFT_WSS_WAVEIN 14

#define MM_MSFT_WSS_WAVEOUT 15

#define MM_MWM 209

#define MM_NCR 62

#define MM_NCR_BA_AUX 4

#define MM_NCR_BA_MIXER 5

#define MM_NCR_BA_SYNTH 3

#define MM_NCR_BA_WAVEIN 1

#define MM_NCR_BA_WAVEOUT 2

#define MM_NEC 26

#define MM_NEC_26_SYNTH 9

#define MM_NEC_73_86_SYNTH 5

#define MM_NEC_73_86_WAVEIN 7

#define MM_NEC_73_86_WAVEOUT 6

#define MM_NEC_JOYSTICK 12

#define MM_NEC_MPU401_MIDIIN 11

#define MM_NEC_MPU401_MIDIOUT 10

#define MM_NEOMAGIC 176

#define MM_NEOMAGIC_AUX 6

#define MM_NEOMAGIC_MIDIIN 5

#define MM_NEOMAGIC_MIDIOUT 4

#define MM_NEOMAGIC_MW3DX_AUX 17

#define MM_NEOMAGIC_MW3DX_FMSYNTH 14

#define MM_NEOMAGIC_MW3DX_GMSYNTH 15

#define MM_NEOMAGIC_MW3DX_MIDIIN 13

#define MM_NEOMAGIC_MW3DX_MIDIOUT 12

#define MM_NEOMAGIC_MW3DX_MIXER 16

#define MM_NEOMAGIC_MW3DX_WAVEIN 11

#define MM_NEOMAGIC_MW3DX_WAVEOUT 10

#define MM_NEOMAGIC_MWAVE_AUX 25

#define MM_NEOMAGIC_MWAVE_MIDIIN 23

#define MM_NEOMAGIC_MWAVE_MIDIOUT 22

#define MM_NEOMAGIC_MWAVE_MIXER 24

#define MM_NEOMAGIC_MWAVE_WAVEIN 21

#define MM_NEOMAGIC_MWAVE_WAVEOUT 20

#define MM_NEOMAGIC_SYNTH 1

#define MM_NEOMAGIC_WAVEIN 3

#define MM_NEOMAGIC_WAVEOUT 2

#define MM_NETSCAPE 166

#define MM_NETXL 8

#define MM_NETXL_XLVIDEO 1

#define MM_NEWMEDIA 86

#define MM_NEWMEDIA_WAVJAMMER 1

#define MM_NMP 195

#define MM_NMP_ACM_AMR 10

#define MM_NMP_CCP_WAVEIN 1

#define MM_NMP_CCP_WAVEOUT 2

#define MM_NMS 87

#define MM_NOGATECH 75

#define MM_NORRIS 150

#define MM_NORRIS_VOICELINK 1

#define MM_NORTEL_MPXAC_WAVEIN 1

#define MM_NORTEL_MPXAC_WAVEOUT 2

#define MM_NORTHERN_TELECOM 115

#define MM_NVIDIA 127

#define MM_NVIDIA_AUX 7

#define MM_NVIDIA_GAMEPORT 5

#define MM_NVIDIA_MIDIIN 4

#define MM_NVIDIA_MIDIOUT 3

#define MM_NVIDIA_MIXER 6

#define MM_NVIDIA_WAVEIN 2

#define MM_NVIDIA_WAVEOUT 1

#define MM_OKI 79

#define MM_OKSORI 128

#define MM_OKSORI_BASE 0

#define MM_OKSORI_EXT_MIC1 13

#define MM_OKSORI_EXT_MIC2 14

#define MM_OKSORI_FM_OPL4 5

#define MM_OKSORI_MIDIIN 18

#define MM_OKSORI_MIDIOUT 15

#define MM_OKSORI_MIX_AUX1 11

#define MM_OKSORI_MIX_CD 8

#define MM_OKSORI_MIX_ECHO 10

#define MM_OKSORI_MIX_FM 8

#define MM_OKSORI_MIX_LINE 9

#define MM_OKSORI_MIX_LINE1 12

#define MM_OKSORI_MIX_MASTER 6

#define MM_OKSORI_MIX_MIC 9

#define MM_OKSORI_MIX_WAVE 7

#define MM_OKSORI_MPEG_CDVISION 19

#define MM_OKSORI_OSR16_WAVEIN 4

#define MM_OKSORI_OSR16_WAVEOUT 3

#define MM_OKSORI_OSR8_WAVEIN 2

#define MM_OKSORI_OSR8_WAVEOUT 1

#define MM_OLIVETTI 81

#define MM_OLIVETTI_ACM_ADPCM 10

#define MM_OLIVETTI_ACM_CELP 11

#define MM_OLIVETTI_ACM_GSM 9

#define MM_OLIVETTI_ACM_OPR 13

#define MM_OLIVETTI_ACM_SBC 12

#define MM_OLIVETTI_AUX 4

#define MM_OLIVETTI_JOYSTICK 8

#define MM_OLIVETTI_MIDIIN 5

#define MM_OLIVETTI_MIDIOUT 6

#define MM_OLIVETTI_MIXER 3

#define MM_OLIVETTI_SYNTH 7

#define MM_OLIVETTI_WAVEIN 1

#define MM_OLIVETTI_WAVEOUT 2

#define MM_ONLIVE 200

#define MM_ONLIVE_MPCODEC 1

#define MM_OPCODE 113

#define MM_OPTI 90

#define MM_OPTI_M16_AUX 7

#define MM_OPTI_M16_FMSYNTH_STEREO 1

#define MM_OPTI_M16_MIDIIN 2

#define MM_OPTI_M16_MIDIOUT 3

#define MM_OPTI_M16_MIXER 6

#define MM_OPTI_M16_WAVEIN 4

#define MM_OPTI_M16_WAVEOUT 5

#define MM_OPTI_M32_AUX 38

#define MM_OPTI_M32_MIDIIN 34

#define MM_OPTI_M32_MIDIOUT 35

#define MM_OPTI_M32_MIXER 37

#define MM_OPTI_M32_SYNTH_STEREO 36

#define MM_OPTI_M32_WAVEIN 32

#define MM_OPTI_M32_WAVEOUT 33

#define MM_OPTI_P16_AUX 22

#define MM_OPTI_P16_FMSYNTH_STEREO 16

#define MM_OPTI_P16_MIDIIN 17

#define MM_OPTI_P16_MIDIOUT 18

#define MM_OPTI_P16_MIXER 21

#define MM_OPTI_P16_WAVEIN 19

#define MM_OPTI_P16_WAVEOUT 20

#define MM_OPUS1208_AUX 135

#define MM_OPUS1208_MIXER 134

#define MM_OPUS1208_SYNTH 131

#define MM_OPUS1208_WAVEIN 133

#define MM_OPUS1208_WAVEOUT 132

#define MM_OPUS1216_AUX 151

#define MM_OPUS1216_MIDIIN 146

#define MM_OPUS1216_MIDIOUT 145

#define MM_OPUS1216_MIXER 150

#define MM_OPUS1216_SYNTH 147

#define MM_OPUS1216_WAVEIN 149

#define MM_OPUS1216_WAVEOUT 148

#define MM_OPUS401_MIDIIN 130

#define MM_OPUS401_MIDIOUT 129

#define MM_OSITECH 103

#define MM_OSITECH_TRUMPCARD 1

#define MM_OSPREY 140

#define MM_OSPREY_1000WAVEIN 1

#define MM_OSPREY_1000WAVEOUT 2

#define MM_OTI 180

#define MM_OTI_611MIDIN 18

#define MM_OTI_611MIDIOUT 19

#define MM_OTI_611MIXER 7

#define MM_OTI_611WAVEIN 5

#define MM_OTI_611WAVEOUT 6

#define MM_PACIFICRESEARCH 210

#define MM_PC_JOYSTICK 12

#define MM_PCSPEAKER_WAVEOUT 13

#define MM_PHILIPS_ACM_LPCBB 1

#define MM_PHILIPS_SPEECH_PROCESSING 7

#define MM_PHONET 203

#define MM_PHONET_PP_MIXER 3

#define MM_PHONET_PP_WAVEIN 2

#define MM_PHONET_PP_WAVEOUT 1

#define MM_PICTURETEL 138

#define MM_PID_UNMAPPED 65535

#define MM_PINNACLE 218

#define MM_PRAGMATRAX 5

#define MM_PRECEPT 153

#define MM_PROAUD_16_AUX 103

#define MM_PROAUD_16_MIDIIN 98

#define MM_PROAUD_16_MIDIOUT 97

#define MM_PROAUD_16_MIXER 102

#define MM_PROAUD_16_SYNTH 99

#define MM_PROAUD_16_WAVEIN 101

#define MM_PROAUD_16_WAVEOUT 100

#define MM_PROAUD_AUX 23

#define MM_PROAUD_MIDIIN 18

#define MM_PROAUD_MIDIOUT 17

#define MM_PROAUD_MIXER 22

#define MM_PROAUD_PLUS_AUX 87

#define MM_PROAUD_PLUS_MIDIIN 82

#define MM_PROAUD_PLUS_MIDIOUT 81

#define MM_PROAUD_PLUS_MIXER 86

#define MM_PROAUD_PLUS_SYNTH 83

#define MM_PROAUD_PLUS_WAVEIN 85

#define MM_PROAUD_PLUS_WAVEOUT 84

#define MM_PROAUD_SYNTH 19

#define MM_PROAUD_WAVEIN 21

#define MM_PROAUD_WAVEOUT 20

#define MM_QCIAR 98

#define MM_QDESIGN 194

#define MM_QDESIGN_ACM_MPEG 1

#define MM_QDESIGN_ACM_QDESIGN_MUSIC 2

#define MM_QTEAM 169

#define MM_QUALCOMM 215

#define MM_QUANTUM3D 17

#define MM_QUARTERDECK 134

#define MM_QUARTERDECK_LHWAVEIN 0

#define MM_QUARTERDECK_LHWAVEOUT 1

#define MM_QUICKAUDIO 255

#define MM_QUICKAUDIO_MAXIMIDI 2

#define MM_QUICKAUDIO_MINIMIDI 1

#define MM_QUICKNET 173

#define MM_QUICKNET_PJWAVEIN 1

#define MM_QUICKNET_PJWAVEOUT 2

#define MM_RADIUS 110

#define MM_RHETOREX 120

#define MM_RHETOREX_WAVEIN 1

#define MM_RHETOREX_WAVEOUT 2

#define MM_RICHMOND 257

#define MM_ROCKWELL 111

#define MM_ROLAND 24

#define MM_ROLAND_MPU401_MIDIIN 16

#define MM_ROLAND_MPU401_MIDIOUT 15

#define MM_ROLAND_RAP10_MIDIIN 11

#define MM_ROLAND_RAP10_MIDIOUT 10

#define MM_ROLAND_RAP10_SYNTH 12

#define MM_ROLAND_RAP10_WAVEIN 14

#define MM_ROLAND_RAP10_WAVEOUT 13

#define MM_ROLAND_SC7_MIDIIN 22

#define MM_ROLAND_SC7_MIDIOUT 21

#define MM_ROLAND_SCP_AUX 48

#define MM_ROLAND_SCP_MIDIIN 39

#define MM_ROLAND_SCP_MIDIOUT 38

#define MM_ROLAND_SCP_MIXER 42

#define MM_ROLAND_SCP_WAVEIN 41

#define MM_ROLAND_SCP_WAVEOUT 40

#define MM_ROLAND_SERIAL_MIDIIN 24

#define MM_ROLAND_SERIAL_MIDIOUT 23

#define MM_ROLAND_SMPU_MIDIINA 19

#define MM_ROLAND_SMPU_MIDIINB 20

#define MM_ROLAND_SMPU_MIDIOUTA 17

#define MM_ROLAND_SMPU_MIDIOUTB 18

#define MM_RZS 216

#define MM_RZS_ACM_TUBGSM 1

#define MM_S3 164

#define MM_S3_AUX 7

#define MM_S3_FMSYNTH 5

#define MM_S3_MIDIIN 4

#define MM_S3_MIDIOUT 3

#define MM_S3_MIXER 6

#define MM_S3_WAVEIN 2

#define MM_S3_WAVEOUT 1

#define MM_SANYO 72

#define MM_SANYO_ACM_LD_ADPCM 1

#define MM_SCALACS 54

#define MM_SEERSYS 137

#define MM_SEERSYS_REALITY 6

#define MM_SEERSYS_SEERMIX 3

#define MM_SEERSYS_SEERSYNTH 1

#define MM_SEERSYS_SEERWAVE 2

#define MM_SEERSYS_WAVESYNTH 4

#define MM_SEERSYS_WAVESYNTH_WG 5

#define MM_SELSIUS_SYSTEMS 234

#define MM_SELSIUS_SYSTEMS_RTPWAVEIN 2

#define MM_SELSIUS_SYSTEMS_RTPWAVEOUT 1

#define MM_SGI 237

#define MM_SGI_320_MIXER 3

#define MM_SGI_320_WAVEIN 1

#define MM_SGI_320_WAVEOUT 2

#define MM_SGI_540_MIXER 6

#define MM_SGI_540_WAVEIN 4

#define MM_SGI_540_WAVEOUT 5

#define MM_SGI_RAD_ADAT8CHAN_WAVEIN 19

#define MM_SGI_RAD_ADAT8CHAN_WAVEOUT 32

#define MM_SGI_RAD_ADATMONO1_WAVEIN 7

#define MM_SGI_RAD_ADATMONO1_WAVEOUT 20

#define MM_SGI_RAD_ADATMONO2_WAVEIN 8

#define MM_SGI_RAD_ADATMONO2_WAVEOUT 21

#define MM_SGI_RAD_ADATMONO3_WAVEIN 9

#define MM_SGI_RAD_ADATMONO3_WAVEOUT 22

#define MM_SGI_RAD_ADATMONO4_WAVEIN 10

#define MM_SGI_RAD_ADATMONO4_WAVEOUT 23

#define MM_SGI_RAD_ADATMONO5_WAVEIN 11

#define MM_SGI_RAD_ADATMONO5_WAVEOUT 24

#define MM_SGI_RAD_ADATMONO6_WAVEIN 12

#define MM_SGI_RAD_ADATMONO6_WAVEOUT 25

#define MM_SGI_RAD_ADATMONO7_WAVEIN 13

#define MM_SGI_RAD_ADATMONO7_WAVEOUT 26

#define MM_SGI_RAD_ADATMONO8_WAVEIN 14

#define MM_SGI_RAD_ADATMONO8_WAVEOUT 27

#define MM_SGI_RAD_ADATSTEREO12_WAVEIN 15

#define MM_SGI_RAD_ADATSTEREO12_WAVEOUT 28

#define MM_SGI_RAD_ADATSTEREO32_WAVEOUT 29

#define MM_SGI_RAD_ADATSTEREO34_WAVEIN 16

#define MM_SGI_RAD_ADATSTEREO56_WAVEIN 17

#define MM_SGI_RAD_ADATSTEREO56_WAVEOUT 30

#define MM_SGI_RAD_ADATSTEREO78_WAVEIN 18

#define MM_SGI_RAD_ADATSTEREO78_WAVEOUT 31

#define MM_SGI_RAD_AESMONO1_WAVEIN 33

#define MM_SGI_RAD_AESMONO1_WAVEOUT 36

#define MM_SGI_RAD_AESMONO2_WAVEIN 34

#define MM_SGI_RAD_AESMONO2_WAVEOUT 37

#define MM_SGI_RAD_AESSTEREO_WAVEIN 35

#define MM_SGI_RAD_AESSTEREO_WAVEOUT 38

#define MM_SHARP 183

#define MM_SHARP_MDC_AUX 6

#define MM_SHARP_MDC_AUX_BASS 101

#define MM_SHARP_MDC_AUX_CHR 109

#define MM_SHARP_MDC_AUX_MASTER 100

#define MM_SHARP_MDC_AUX_MIDI_VOL 103

#define MM_SHARP_MDC_AUX_RVB 108

#define MM_SHARP_MDC_AUX_TREBLE 102

#define MM_SHARP_MDC_AUX_VOL 107

#define MM_SHARP_MDC_AUX_WAVE_CHR 106

#define MM_SHARP_MDC_AUX_WAVE_RVB 105

#define MM_SHARP_MDC_AUX_WAVE_VOL 104

#define MM_SHARP_MDC_MIDI_IN 2

#define MM_SHARP_MDC_MIDI_OUT 3

#define MM_SHARP_MDC_MIDI_SYNTH 1

#define MM_SHARP_MDC_MIXER 10

#define MM_SHARP_MDC_WAVE_IN 4

#define MM_SHARP_MDC_WAVE_OUT 5

#define MM_SICRESOURCE 175

#define MM_SICRESOURCE_SSO3D 2

#define MM_SICRESOURCE_SSOW3DI 3

#define MM_SIEMENS_SBC 201

#define MM_SIERRA 40

#define MM_SIERRA_ARIA_AUX 25

#define MM_SIERRA_ARIA_AUX2 32

#define MM_SIERRA_ARIA_MIDIIN 21

#define MM_SIERRA_ARIA_MIDIOUT 20

#define MM_SIERRA_ARIA_SYNTH 22

#define MM_SIERRA_ARIA_WAVEIN 24

#define MM_SIERRA_ARIA_WAVEOUT 23

#define MM_SIERRA_QUARTET_AUX_CD 85

#define MM_SIERRA_QUARTET_AUX_LINE 86

#define MM_SIERRA_QUARTET_AUX_MODEM 87

#define MM_SIERRA_QUARTET_MIDIIN 82

#define MM_SIERRA_QUARTET_MIDIOUT 83

#define MM_SIERRA_QUARTET_MIXER 88

#define MM_SIERRA_QUARTET_SYNTH 84

#define MM_SIERRA_QUARTET_WAVEIN 80

#define MM_SIERRA_QUARTET_WAVEOUT 81

#define MM_SILICONSOFT 69

#define MM_SILICONSOFT_SC1_WAVEIN 1

#define MM_SILICONSOFT_SC1_WAVEOUT 2

#define MM_SILICONSOFT_SC2_WAVEIN 3

#define MM_SILICONSOFT_SC2_WAVEOUT 4

#define MM_SILICONSOFT_SOUNDJR2_WAVEOUT 5

#define MM_SILICONSOFT_SOUNDJR2PR_WAVEIN 6

#define MM_SILICONSOFT_SOUNDJR2PR_WAVEOUT 7

#define MM_SILICONSOFT_SOUNDJR3_WAVEOUT 8

#define MM_SIPROLAB 211

#define MM_SIPROLAB_ACELPNET 1

#define MM_SNDBLST_MIDIIN 4

#define MM_SNDBLST_MIDIOUT 3

#define MM_SNDBLST_SYNTH 5

#define MM_SNDBLST_WAVEIN 7

#define MM_SNDBLST_WAVEOUT 6

#define MM_SNI 18

#define MM_SNI_ACM_G721 1

#define MM_SOFTLAB_NSK 228

#define MM_SOFTLAB_NSK_FRW_AUX 4

#define MM_SOFTLAB_NSK_FRW_MIXER 3

#define MM_SOFTLAB_NSK_FRW_WAVEIN 1

#define MM_SOFTLAB_NSK_FRW_WAVEOUT 2

#define MM_SOFTSOUND 149

#define MM_SOFTSOUND_CODEC 1

#define MM_SONICFOUNDRY 66

#define MM_SONORUS 230

#define MM_SONORUS_STUDIO 1

#define MM_SONY 245

#define MM_SONY_ACM_SCX 1

#define MM_SORVIS 187

#define MM_SOUNDESIGNS 142

#define MM_SOUNDESIGNS_WAVEIN 1

#define MM_SOUNDESIGNS_WAVEOUT 2

#define MM_SOUNDSCAPE_AUX 24

#define MM_SOUNDSCAPE_MIDIIN 21

#define MM_SOUNDSCAPE_MIDIOUT 20

#define MM_SOUNDSCAPE_MIXER 23

#define MM_SOUNDSCAPE_SYNTH 22

#define MM_SOUNDSCAPE_WAVEIN 19

#define MM_SOUNDSCAPE_WAVEOUT 17

#define MM_SOUNDSCAPE_WAVEOUT_AUX 18

#define MM_SOUNDSPACE 167

#define MM_SPECTRUM_PRODUCTIONS 213

#define MM_SPECTRUM_SIGNAL_PROCESSING 144

#define MM_SPEECHCOMP 76

#define MM_SPLASH_STUDIOS 133

#define MM_SSP_SNDFESAUX 7

#define MM_SSP_SNDFESMIDIIN 3

#define MM_SSP_SNDFESMIDIOUT 4

#define MM_SSP_SNDFESMIX 6

#define MM_SSP_SNDFESSYNTH 5

#define MM_SSP_SNDFESWAVEIN 1

#define MM_SSP_SNDFESWAVEOUT 2

#define MM_ST_MICROELECTRONICS 265

#define MM_STUDER 171

#define MM_STUDIO_16_AUX 103

#define MM_STUDIO_16_MIDIIN 98

#define MM_STUDIO_16_MIDIOUT 97

#define MM_STUDIO_16_MIXER 102

#define MM_STUDIO_16_SYNTH 99

#define MM_STUDIO_16_WAVEIN 101

#define MM_STUDIO_16_WAVEOUT 100

#define MM_SUNCOM 186

#define MM_SUPERMAC 73

#define MM_SYDEC_NV 248

#define MM_SYDEC_NV_WAVEIN 1

#define MM_SYDEC_NV_WAVEOUT 2

#define MM_TANDY 29

#define MM_TANDY_PSSJWAVEIN 9

#define MM_TANDY_PSSJWAVEOUT 10

#define MM_TANDY_SENS_MMAMIDIIN 6

#define MM_TANDY_SENS_MMAMIDIOUT 7

#define MM_TANDY_SENS_MMAWAVEIN 4

#define MM_TANDY_SENS_MMAWAVEOUT 5

#define MM_TANDY_SENS_VISWAVEOUT 8

#define MM_TANDY_VISBIOSSYNTH 3

#define MM_TANDY_VISWAVEIN 1

#define MM_TANDY_VISWAVEOUT 2

#define MM_TBS_TROPEZ_AUX1 39

#define MM_TBS_TROPEZ_AUX2 40

#define MM_TBS_TROPEZ_LINE 41

#define MM_TBS_TROPEZ_WAVEIN 37

#define MM_TBS_TROPEZ_WAVEOUT 38

#define MM_TDK 135

#define MM_TDK_MW_AUX 6

#define MM_TDK_MW_AUX_BASS 101

#define MM_TDK_MW_AUX_CHR 109

#define MM_TDK_MW_AUX_MASTER 100

#define MM_TDK_MW_AUX_MIDI_VOL 103

#define MM_TDK_MW_AUX_RVB 108

#define MM_TDK_MW_AUX_TREBLE 102

#define MM_TDK_MW_AUX_VOL 107

#define MM_TDK_MW_AUX_WAVE_CHR 106

#define MM_TDK_MW_AUX_WAVE_RVB 105

#define MM_TDK_MW_AUX_WAVE_VOL 104

#define MM_TDK_MW_MIDI_IN 2

#define MM_TDK_MW_MIDI_OUT 3

#define MM_TDK_MW_MIDI_SYNTH 1

#define MM_TDK_MW_MIXER 10

#define MM_TDK_MW_WAVE_IN 4

#define MM_TDK_MW_WAVE_OUT 5

#define MM_TELEKOL 264

#define MM_TELEKOL_WAVEIN 2

#define MM_TELEKOL_WAVEOUT 1

#define MM_TERALOGIC 202

#define MM_TERRATEC 70

#define MM_THUNDER_AUX 39

#define MM_THUNDER_SYNTH 35

#define MM_THUNDER_WAVEIN 37

#define MM_THUNDER_WAVEOUT 36

#define MM_TPORT_SYNTH 67

#define MM_TPORT_WAVEIN 66

#define MM_TPORT_WAVEOUT 65

#define MM_TRUEVISION 51

#define MM_TRUEVISION_WAVEIN1 1

#define MM_TRUEVISION_WAVEOUT1 2

#define MM_TTEWS_AUX 9

#define MM_TTEWS_MIDIIN 3

#define MM_TTEWS_MIDIMONITOR 6

#define MM_TTEWS_MIDIOUT 4

#define MM_TTEWS_MIDISYNTH 5

#define MM_TTEWS_MIXER 10

#define MM_TTEWS_VMIDIIN 7

#define MM_TTEWS_VMIDIOUT 8

#define MM_TTEWS_WAVEIN 1

#define MM_TTEWS_WAVEOUT 2

#define MM_TURTLE_BEACH 21

#define MM_UH_ACM_ADPCM 1

#define MM_UHER_INFORMATIC 247

#define MM_UNISYS 223

#define MM_UNISYS_ACM_NAP 1

#define MM_UNMAPPED 65535

#define MM_VAL 35

#define MM_VAL_MICROKEY_AP_WAVEIN 1

#define MM_VAL_MICROKEY_AP_WAVEOUT 2

#define MM_VANKOEVERING 168

#define MM_VIA 250

#define MM_VIA_AUX 4

#define MM_VIA_MIXER 3

#define MM_VIA_MPU401_MIDIIN 6

#define MM_VIA_MPU401_MIDIOUT 5

#define MM_VIA_SWFM_SYNTH 7

#define MM_VIA_WAVEIN 2

#define MM_VIA_WAVEOUT 1

#define MM_VIA_WDM_MIXER 10

#define MM_VIA_WDM_MPU401_MIDIIN 12

#define MM_VIA_WDM_MPU401_MIDIOUT 11

#define MM_VIA_WDM_WAVEIN 9

#define MM_VIA_WDM_WAVEOUT 8

#define MM_VIDEOLOGIC 53

#define MM_VIDEOLOGIC_MSWAVEIN 1

#define MM_VIDEOLOGIC_MSWAVEOUT 2

#define MM_VIENNASYS 157

#define MM_VIENNASYS_TSP_WAVE_DRIVER 1

#define MM_VIONA 161

#define MM_VIONA_BUSTER_MIXER 4

#define MM_VIONA_CINEMASTER_MIXER 5

#define MM_VIONA_CONCERTO_MIXER 6

#define MM_VIONA_QVINPCI_MIXER 1

#define MM_VIONA_QVINPCI_WAVEIN 2

#define MM_VIONAQVINPCI_WAVEOUT 3

#define MM_VIRTUALMUSIC 205

#define MM_VITEC 67

#define MM_VITEC_VMAKER 1

#define MM_VITEC_VMPRO 2

#define MM_VIVO 182

#define MM_VIVO_AUDIO_CODEC 1

#define MM_VKC_MPU401_MIDIIN 256

#define MM_VKC_MPU401_MIDIOUT 512

#define MM_VKC_SERIAL_MIDIIN 257

#define MM_VKC_SERIAL_MIDIOUT 513

#define MM_VOCALTEC 23

#define MM_VOCALTEC_WAVEIN 2

#define MM_VOCALTEC_WAVEOUT 1

#define MM_VOICEINFO 156

#define MM_VOICEMIXER 1

#define MM_VOXWARE 114

#define MM_VOXWARE_CODEC 1

#define MM_VOYETRA 30

#define MM_VQST 240

#define MM_VQST_VQC1 1

#define MM_VQST_VQC2 2

#define MM_VTG 109

#define MM_WANGLABS 28

#define MM_WANGLABS_WAVEIN1 1

#define MM_WANGLABS_WAVEOUT1 2

#define MM_WAVE_MAPPER 2

#define MM_WEITEK 96

#define MM_WILDCAT 119

#define MM_WILDCAT_AUTOSCOREMIDIIN 1

#define MM_WILLOPOND_SNDCOMM_WAVEIN 108

#define MM_WILLOWPOND 65

#define MM_WILLOWPOND_FMSYNTH_STEREO 20

#define MM_WILLOWPOND_GENERIC_AUX 115

#define MM_WILLOWPOND_GENERIC_MIXER 114

#define MM_WILLOWPOND_GENERIC_WAVEIN 112

#define MM_WILLOWPOND_GENERIC_WAVEOUT 113

#define MM_WILLOWPOND_MPU401 21

#define MM_WILLOWPOND_PH_AUX 107

#define MM_WILLOWPOND_PH_MIXER 106

#define MM_WILLOWPOND_PH_WAVEIN 104

#define MM_WILLOWPOND_PH_WAVEOUT 105

#define MM_WILLOWPOND_SNDCOMM_AUX 111

#define MM_WILLOWPOND_SNDCOMM_MIXER 110

#define MM_WILLOWPOND_SNDCOMM_WAVEOUT 109

#define MM_WILLOWPOND_SNDPORT_AUX 103

#define MM_WILLOWPOND_SNDPORT_MIXER 102

#define MM_WILLOWPOND_SNDPORT_WAVEIN 100

#define MM_WILLOWPOND_SNDPORT_WAVEOUT 101

#define MM_WINBOND 204

#define MM_WINNOV 61

#define MM_WINNOV_CAVIAR_CHAMPAGNE 4

#define MM_WINNOV_CAVIAR_VIDC 3

#define MM_WINNOV_CAVIAR_WAVEIN 1

#define MM_WINNOV_CAVIAR_WAVEOUT 2

#define MM_WINNOV_CAVIAR_YUV8 5

#define MM_WORKBIT 102

#define MM_WORKBIT_AUX 7

#define MM_WORKBIT_FMSYNTH 6

#define MM_WORKBIT_JOYSTICK 8

#define MM_WORKBIT_MIDIIN 4

#define MM_WORKBIT_MIDIOUT 5

#define MM_WORKBIT_MIXER 1

#define MM_WORKBIT_WAVEIN 3

#define MM_WORKBIT_WAVEOUT 2

#define MM_WSS_SB16_AUX_CD 45

#define MM_WSS_SB16_AUX_LINE 44

#define MM_WSS_SB16_MIDIIN 41

#define MM_WSS_SB16_MIDIOUT 42

#define MM_WSS_SB16_MIXER 46

#define MM_WSS_SB16_SYNTH 43

#define MM_WSS_SB16_WAVEIN 39

#define MM_WSS_SB16_WAVEOUT 40

#define MM_WSS_SBPRO_AUX_CD 53

#define MM_WSS_SBPRO_AUX_LINE 52

#define MM_WSS_SBPRO_MIDIIN 49

#define MM_WSS_SBPRO_MIDIOUT 50

#define MM_WSS_SBPRO_MIXER 54

#define MM_WSS_SBPRO_SYNTH 51

#define MM_WSS_SBPRO_WAVEIN 47

#define MM_WSS_SBPRO_WAVEOUT 48

#define MM_XEBEC 85

#define MM_XIRLINK 178

#define MM_XIRLINK_VISIONLINK 1

#define MM_XYZ 112

#define MM_YAMAHA 37

#define MM_YAMAHA_ACXG_AUX 41

#define MM_YAMAHA_ACXG_MIDIOUT 39

#define MM_YAMAHA_ACXG_MIXER 40

#define MM_YAMAHA_ACXG_WAVEIN 37

#define MM_YAMAHA_ACXG_WAVEOUT 38

#define MM_YAMAHA_GSS_AUX 6

#define MM_YAMAHA_GSS_MIDIIN 5

#define MM_YAMAHA_GSS_MIDIOUT 4

#define MM_YAMAHA_GSS_SYNTH 1

#define MM_YAMAHA_GSS_WAVEIN 3

#define MM_YAMAHA_GSS_WAVEOUT 2

#define MM_YAMAHA_OPL3SA_FMSYNTH 18

#define MM_YAMAHA_OPL3SA_JOYSTICK 24

#define MM_YAMAHA_OPL3SA_MIDIIN 21

#define MM_YAMAHA_OPL3SA_MIDIOUT 20

#define MM_YAMAHA_OPL3SA_MIXER 23

#define MM_YAMAHA_OPL3SA_WAVEIN 17

#define MM_YAMAHA_OPL3SA_WAVEOUT 16

#define MM_YAMAHA_OPL3SA_YSYNTH 19

#define MM_YAMAHA_SERIAL_MIDIIN 8

#define MM_YAMAHA_SERIAL_MIDIOUT 7

#define MM_YAMAHA_SXG_MIDIOUT 34

#define MM_YAMAHA_SXG_MIXER 36

#define MM_YAMAHA_SXG_WAVEOUT 35

#define MM_YAMAHA_YMF724_AUX 30

#define MM_YAMAHA_YMF724_MIDIOUT 29

#define MM_YAMAHA_YMF724_MIXER 31

#define MM_YAMAHA_YMF724_WAVEIN 28

#define MM_YAMAHA_YMF724_WAVEOUT 27

#define MM_YAMAHA_YMF724LEG_FMSYNTH 32

#define MM_YAMAHA_YMF724LEG_MIDIIN 26

#define MM_YAMAHA_YMF724LEG_MIDIOUT 25

#define MM_YAMAHA_YMF724LEG_MIXER 33

#define MM_YOUCOM 256

#define MM_ZEFIRO 170

#define MM_ZEFIRO_ZA2 2

#define MM_ZYXEL 9

#define MM_ZYXEL_ACM_ADPCM 1

#define MPEGLAYER3_FLAG_PADDING_ISO 0

#define MPEGLAYER3_FLAG_PADDING_OFF 2

#define MPEGLAYER3_FLAG_PADDING_ON 1

#define MPEGLAYER3_ID_CONSTANTFRAMESIZE 2

#define MPEGLAYER3_ID_MPEG 1

#define MPEGLAYER3_ID_UNKNOWN 0

#define MPEGLAYER3_WFX_EXTRA_BYTES 12

#define MSAUDIO1_BITS_PER_SAMPLE 16

#define MSAUDIO1_MAX_CHANNELS 2

#define ROCKWELL_WA1_MIXER 103

#define ROCKWELL_WA1_MPU401_IN 104

#define ROCKWELL_WA1_MPU401_OUT 105

#define ROCKWELL_WA1_SYNTH 102

#define ROCKWELL_WA1_WAVEIN 100

#define ROCKWELL_WA1_WAVEOUT 101

#define ROCKWELL_WA2_MIXER 203

#define ROCKWELL_WA2_MPU401_IN 204

#define ROCKWELL_WA2_MPU401_OUT 205

#define ROCKWELL_WA2_SYNTH 202

#define ROCKWELL_WA2_WAVEIN 200

#define ROCKWELL_WA2_WAVEOUT 201

#define SPEAKER_ALL 2147483648

#define SPEAKER_BACK_CENTER 256

#define SPEAKER_BACK_LEFT 16

#define SPEAKER_BACK_RIGHT 32

#define SPEAKER_FRONT_CENTER 4

#define SPEAKER_FRONT_LEFT 1

#define SPEAKER_FRONT_LEFT_OF_CENTER 64

#define SPEAKER_FRONT_RIGHT 2

#define SPEAKER_FRONT_RIGHT_OF_CENTER 128

#define SPEAKER_LOW_FREQUENCY 8

#define SPEAKER_RESERVED 2147221504

#define SPEAKER_SIDE_LEFT 512

#define SPEAKER_SIDE_RIGHT 1024

#define SPEAKER_TOP_BACK_CENTER 65536

#define SPEAKER_TOP_BACK_LEFT 32768

#define SPEAKER_TOP_BACK_RIGHT 131072

#define SPEAKER_TOP_CENTER 2048

#define SPEAKER_TOP_FRONT_CENTER 8192

#define SPEAKER_TOP_FRONT_LEFT 4096

#define SPEAKER_TOP_FRONT_RIGHT 16384

#define WAVE_FILTER_DEVELOPMENT 65535

#define WAVE_FILTER_ECHO 2

#define WAVE_FILTER_UNKNOWN 0

#define WAVE_FILTER_VOLUME 1

#define WAVE_FORMAT_ADPCM 2

#define WAVE_FORMAT_ALAW 6

#define WAVE_FORMAT_ANTEX_ADPCME 51

#define WAVE_FORMAT_APTX 37

#define WAVE_FORMAT_AUDIOFILE_AF10 38

#define WAVE_FORMAT_AUDIOFILE_AF36 36

#define WAVE_FORMAT_BTV_DIGITAL 1024

#define WAVE_FORMAT_CANOPUS_ATRAC 99

#define WAVE_FORMAT_CIRRUS 96

#define WAVE_FORMAT_CONTROL_RES_CR10 55

#define WAVE_FORMAT_CONTROL_RES_VQLPC 52

#define WAVE_FORMAT_CREATIVE_ADPCM 512

#define WAVE_FORMAT_CREATIVE_FASTSPEECH10 515

#define WAVE_FORMAT_CREATIVE_FASTSPEECH8 514

#define WAVE_FORMAT_CS2 608

#define WAVE_FORMAT_CS_IMAADPCM 57

#define WAVE_FORMAT_CU_CODEC 25

#define WAVE_FORMAT_DEVELOPMENT 65535

#define WAVE_FORMAT_DF_G726 133

#define WAVE_FORMAT_DF_GSM610 134

#define WAVE_FORMAT_DIALOGIC_OKI_ADPCM 23

#define WAVE_FORMAT_DIGIADPCM 54

#define WAVE_FORMAT_DIGIFIX 22

#define WAVE_FORMAT_DIGIREAL 53

#define WAVE_FORMAT_DIGISTD 21

#define WAVE_FORMAT_DIGITAL_G723 291

#define WAVE_FORMAT_DOLBY_AC2 48

#define WAVE_FORMAT_DOLBY_AC3_SPDIF 146

#define WAVE_FORMAT_DRM 9

#define WAVE_FORMAT_DSAT_DISPLAY 103

#define WAVE_FORMAT_DSPGROUP_TRUESPEECH 34

#define WAVE_FORMAT_DTS 8

#define WAVE_FORMAT_DTS2 8193

#define WAVE_FORMAT_DVI_ADPCM 17

#define WAVE_FORMAT_DVM 8192

#define WAVE_FORMAT_ECHOSC1 35

#define WAVE_FORMAT_ECHOSC3 58

#define WAVE_FORMAT_ESPCM 97

#define WAVE_FORMAT_ESST_AC3 577

#define WAVE_FORMAT_EXTENSIBLE 65534

#define WAVE_FORMAT_FM_TOWNS_SND 768

#define WAVE_FORMAT_G721_ADPCM 64

#define WAVE_FORMAT_G722_ADPCM 101

#define WAVE_FORMAT_G723_ADPCM 20

#define WAVE_FORMAT_G726_ADPCM 100

#define WAVE_FORMAT_G726ADPCM 320

#define WAVE_FORMAT_G728_CELP 65

#define WAVE_FORMAT_G729A 131

#define WAVE_FORMAT_GENERIC_PASSTHRU 585

#define WAVE_FORMAT_GSM610 49

#define WAVE_FORMAT_IBM_CVSD 5

#define WAVE_FORMAT_IEEE_FLOAT 3

#define WAVE_FORMAT_ILINK_VC 560

#define WAVE_FORMAT_IMA_ADPCM 17

#define WAVE_FORMAT_IPI_HSX 592

#define WAVE_FORMAT_IPI_RPELP 593

#define WAVE_FORMAT_IRAT 257

#define WAVE_FORMAT_ISIAUDIO 136

#define WAVE_FORMAT_LH_CODEC 4352

#define WAVE_FORMAT_LRC 40

#define WAVE_FORMAT_LUCENT_G723 89

#define WAVE_FORMAT_MALDEN_PHONYTALK 160

#define WAVE_FORMAT_MEDIASONIC_G723 147

#define WAVE_FORMAT_MEDIASPACE_ADPCM 18

#define WAVE_FORMAT_MEDIAVISION_ADPCM 24

#define WAVE_FORMAT_MPEG 80

#define WAVE_FORMAT_MPEG_ADTS_AAC 5632

#define WAVE_FORMAT_MPEG_HEAAC 5648

#define WAVE_FORMAT_MPEG_LOAS 5634

#define WAVE_FORMAT_MPEG_RAW_AAC 5633

#define WAVE_FORMAT_MPEGLAYER3 85

#define WAVE_FORMAT_MSAUDIO1 352

#define WAVE_FORMAT_MSG723 66

#define WAVE_FORMAT_MSNAUDIO 50

#define WAVE_FORMAT_MSRT24 130

#define WAVE_FORMAT_MULAW 7

#define WAVE_FORMAT_MVI_MVI2 132

#define WAVE_FORMAT_NMS_VBXADPCM 56

#define WAVE_FORMAT_NOKIA_MPEG_ADTS_AAC 5640

#define WAVE_FORMAT_NOKIA_MPEG_RAW_AAC 5641

#define WAVE_FORMAT_NORRIS 5120

#define WAVE_FORMAT_OKI_ADPCM 16

#define WAVE_FORMAT_OLIADPCM 4097

#define WAVE_FORMAT_OLICELP 4098

#define WAVE_FORMAT_OLIGSM 4096

#define WAVE_FORMAT_OLIOPR 4100

#define WAVE_FORMAT_OLISBC 4099

#define WAVE_FORMAT_ONLIVE 137

#define WAVE_FORMAT_PAC 83

#define WAVE_FORMAT_PACKED 153

#define WAVE_FORMAT_PHILIPS_LPCBB 152

#define WAVE_FORMAT_PROSODY_1612 39

#define WAVE_FORMAT_PROSODY_8KBPS 148

#define WAVE_FORMAT_QDESIGN_MUSIC 1104

#define WAVE_FORMAT_QUALCOMM_HALFRATE 337

#define WAVE_FORMAT_QUALCOMM_PUREVOICE 336

#define WAVE_FORMAT_QUARTERDECK 544

#define WAVE_FORMAT_RAW_AAC1 255

#define WAVE_FORMAT_RAW_SPORT 576

#define WAVE_FORMAT_RHETOREX_ADPCM 256

#define WAVE_FORMAT_ROCKWELL_ADPCM 59

#define WAVE_FORMAT_ROCKWELL_DIGITALK 60

#define WAVE_FORMAT_RT24 82

#define WAVE_FORMAT_SANYO_LD_ADPCM 293

#define WAVE_FORMAT_SBC24 145

#define WAVE_FORMAT_SIERRA_ADPCM 19

#define WAVE_FORMAT_SIPROLAB_ACELP4800 305

#define WAVE_FORMAT_SIPROLAB_ACELP8V3 306

#define WAVE_FORMAT_SIPROLAB_ACEPLNET 304

#define WAVE_FORMAT_SIPROLAB_G729 307

#define WAVE_FORMAT_SIPROLAB_G729A 308

#define WAVE_FORMAT_SIPROLAB_KELVIN 309

#define WAVE_FORMAT_SOFTSOUND 128

#define WAVE_FORMAT_SONARC 33

#define WAVE_FORMAT_SONY_SCX 624

#define WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS 5376

#define WAVE_FORMAT_TPC 1665

#define WAVE_FORMAT_TUBGSM 341

#define WAVE_FORMAT_UHER_ADPCM 528

#define WAVE_FORMAT_UNISYS_NAP_16K 371

#define WAVE_FORMAT_UNISYS_NAP_ADPCM 368

#define WAVE_FORMAT_UNISYS_NAP_ALAW 370

#define WAVE_FORMAT_UNISYS_NAP_ULAW 369

#define WAVE_FORMAT_UNKNOWN 0

#define WAVE_FORMAT_VIVO_G723 273

#define WAVE_FORMAT_VIVO_SIREN 274

#define WAVE_FORMAT_VME_VMPCM 1664

#define WAVE_FORMAT_VODAFONE_MPEG_ADTS_AAC 5642

#define WAVE_FORMAT_VODAFONE_MPEG_RAW_AAC 5643

#define WAVE_FORMAT_VOXWARE 98

#define WAVE_FORMAT_VOXWARE_AC10 113

#define WAVE_FORMAT_VOXWARE_AC16 114

#define WAVE_FORMAT_VOXWARE_AC20 115

#define WAVE_FORMAT_VOXWARE_AC8 112

#define WAVE_FORMAT_VOXWARE_BYTE_ALIGNED 105

#define WAVE_FORMAT_VOXWARE_RT24 116

#define WAVE_FORMAT_VOXWARE_RT29 117

#define WAVE_FORMAT_VOXWARE_RT29HW 118

#define WAVE_FORMAT_VOXWARE_TQ40 121

#define WAVE_FORMAT_VOXWARE_TQ60 129

#define WAVE_FORMAT_VOXWARE_VR12 119

#define WAVE_FORMAT_VOXWARE_VR18 120

#define WAVE_FORMAT_VSELP 4

#define WAVE_FORMAT_WMASPDIF 356

#define WAVE_FORMAT_WMAUDIO2 353

#define WAVE_FORMAT_WMAUDIO3 354

#define WAVE_FORMAT_WMAUDIO_LOSSLESS 355

#define WAVE_FORMAT_WMAVOICE10 11

#define WAVE_FORMAT_WMAVOICE9 10

#define WAVE_FORMAT_XEBEC 61

#define WAVE_FORMAT_YAMAHA_ADPCM 32

#define WAVE_FORMAT_ZYXEL_ADPCM 151

#define WMAUDIO2_BITS_PER_SAMPLE 16

#define WMAUDIO2_MAX_CHANNELS 2

#define WMAUDIO_BITS_PER_SAMPLE 16

#define WMAUDIO_MAX_CHANNELS 2

typedef union _union_6236 _union_6236, *P_union_6236;

union _union_6236 {
    WORD wValidBitsPerSample;
    WORD wSamplesPerBlock;
    WORD wReserved;
};

typedef struct adpcmcoef_tag adpcmcoef_tag, *Padpcmcoef_tag;

struct adpcmcoef_tag {
    short iCoef1;
    short iCoef2;
};

typedef struct adpcmcoef_tag ADPCMCOEFSET;

typedef struct adpcmewaveformat_tag adpcmewaveformat_tag, *Padpcmewaveformat_tag;

typedef struct adpcmewaveformat_tag ADPCMEWAVEFORMAT;

struct adpcmewaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct adpcmwaveformat_tag adpcmwaveformat_tag, *Padpcmwaveformat_tag;

typedef struct adpcmwaveformat_tag ADPCMWAVEFORMAT;

struct adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
    WORD wNumCoef;
    ADPCMCOEFSET * aCoef;
};

typedef struct aptxwaveformat_tag aptxwaveformat_tag, *Paptxwaveformat_tag;

typedef struct aptxwaveformat_tag APTXWAVEFORMAT;

struct aptxwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct audiofile_af10waveformat_tag audiofile_af10waveformat_tag, *Paudiofile_af10waveformat_tag;

typedef struct audiofile_af10waveformat_tag AUDIOFILE_AF10WAVEFORMAT;

struct audiofile_af10waveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct audiofile_af36waveformat_tag audiofile_af36waveformat_tag, *Paudiofile_af36waveformat_tag;

typedef struct audiofile_af36waveformat_tag AUDIOFILE_AF36WAVEFORMAT;

struct audiofile_af36waveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct contres_cr10waveformat_tag contres_cr10waveformat_tag, *Pcontres_cr10waveformat_tag;

struct contres_cr10waveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct contres_vqlpcwaveformat_tag contres_vqlpcwaveformat_tag, *Pcontres_vqlpcwaveformat_tag;

struct contres_vqlpcwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct contres_cr10waveformat_tag CONTRESCR10WAVEFORMAT;

typedef struct contres_vqlpcwaveformat_tag CONTRESVQLPCWAVEFORMAT;

typedef struct creative_adpcmwaveformat_tag creative_adpcmwaveformat_tag, *Pcreative_adpcmwaveformat_tag;

struct creative_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
};

typedef struct creative_fastspeech10format_tag creative_fastspeech10format_tag, *Pcreative_fastspeech10format_tag;

struct creative_fastspeech10format_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
};

typedef struct creative_fastspeech8format_tag creative_fastspeech8format_tag, *Pcreative_fastspeech8format_tag;

struct creative_fastspeech8format_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
};

typedef struct creative_fastspeechformat_tag creative_fastspeechformat_tag, *Pcreative_fastspeechformat_tag;

struct creative_fastspeechformat_tag {
    WAVEFORMATEX ewf;
};

typedef struct creative_adpcmwaveformat_tag CREATIVEADPCMWAVEFORMAT;

typedef struct creative_fastspeech10format_tag CREATIVEFASTSPEECH10WAVEFORMAT;

typedef struct creative_fastspeech8format_tag CREATIVEFASTSPEECH8WAVEFORMAT;

typedef struct csimaadpcmwaveformat_tag csimaadpcmwaveformat_tag, *Pcsimaadpcmwaveformat_tag;

typedef struct csimaadpcmwaveformat_tag CSIMAADPCMWAVEFORMAT;

struct csimaadpcmwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct creative_fastspeechformat_tag DIALOGICOKIADPCMWAVEFORMAT;

typedef struct digiadpcmmwaveformat_tag digiadpcmmwaveformat_tag, *Pdigiadpcmmwaveformat_tag;

struct digiadpcmmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct digiadpcmmwaveformat_tag DIGIADPCMWAVEFORMAT;

typedef struct digifixwaveformat_tag digifixwaveformat_tag, *Pdigifixwaveformat_tag;

typedef struct digifixwaveformat_tag DIGIFIXWAVEFORMAT;

struct digifixwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct digirealwaveformat_tag digirealwaveformat_tag, *Pdigirealwaveformat_tag;

typedef struct digirealwaveformat_tag DIGIREALWAVEFORMAT;

struct digirealwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct digistdwaveformat_tag digistdwaveformat_tag, *Pdigistdwaveformat_tag;

typedef struct digistdwaveformat_tag DIGISTDWAVEFORMAT;

struct digistdwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct dolbyac2waveformat_tag dolbyac2waveformat_tag, *Pdolbyac2waveformat_tag;

typedef struct dolbyac2waveformat_tag DOLBYAC2WAVEFORMAT;

struct dolbyac2waveformat_tag {
    WAVEFORMATEX wfx;
    WORD nAuxBitsCode;
};

typedef struct drmwaveformat_tag drmwaveformat_tag, *Pdrmwaveformat_tag;

typedef struct drmwaveformat_tag DRMWAVEFORMAT;

struct drmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wReserved;
    ULONG ulContentId;
    WAVEFORMATEX wfxSecure;
};

typedef struct dvi_adpcmwaveformat_tag dvi_adpcmwaveformat_tag, *Pdvi_adpcmwaveformat_tag;

struct dvi_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct dvi_adpcmwaveformat_tag DVIADPCMWAVEFORMAT;

typedef struct echosc1waveformat_tag echosc1waveformat_tag, *Pechosc1waveformat_tag;

typedef struct echosc1waveformat_tag ECHOSC1WAVEFORMAT;

struct echosc1waveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct wavefilter_echo_tag wavefilter_echo_tag, *Pwavefilter_echo_tag;

typedef struct wavefilter_echo_tag ECHOWAVEFILTER;

typedef struct wavefilter_tag wavefilter_tag, *Pwavefilter_tag;

typedef struct wavefilter_tag WAVEFILTER;

struct wavefilter_tag {
    DWORD cbStruct;
    DWORD dwFilterTag;
    DWORD fdwFilter;
    DWORD dwReserved[5];
};

struct wavefilter_echo_tag {
    WAVEFILTER wfltr;
    DWORD dwVolume;
    DWORD dwDelay;
};

typedef struct tagEXBMINFOHEADER tagEXBMINFOHEADER, *PtagEXBMINFOHEADER;

typedef struct tagEXBMINFOHEADER EXBMINFOHEADER;

typedef struct tagBITMAPINFOHEADER tagBITMAPINFOHEADER, *PtagBITMAPINFOHEADER;

typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

struct tagBITMAPINFOHEADER {
    DWORD biSize;
    LONG biWidth;
    LONG biHeight;
    WORD biPlanes;
    WORD biBitCount;
    DWORD biCompression;
    DWORD biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    DWORD biClrUsed;
    DWORD biClrImportant;
};

struct tagEXBMINFOHEADER {
    BITMAPINFOHEADER bmi;
    DWORD biExtDataOffset;
};

typedef struct fmtowns_snd_waveformat_tag fmtowns_snd_waveformat_tag, *Pfmtowns_snd_waveformat_tag;

typedef struct fmtowns_snd_waveformat_tag FMTOWNS_SND_WAVEFORMAT;

struct fmtowns_snd_waveformat_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
};

typedef struct g721_adpcmwaveformat_tag g721_adpcmwaveformat_tag, *Pg721_adpcmwaveformat_tag;

typedef struct g721_adpcmwaveformat_tag G721_ADPCMWAVEFORMAT;

struct g721_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD nAuxBlockSize;
};

typedef struct g723_adpcmwaveformat_tag g723_adpcmwaveformat_tag, *Pg723_adpcmwaveformat_tag;

typedef struct g723_adpcmwaveformat_tag G723_ADPCMWAVEFORMAT;

struct g723_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD cbExtraSize;
    WORD nAuxBlockSize;
};

typedef struct gsm610waveformat_tag gsm610waveformat_tag, *Pgsm610waveformat_tag;

typedef struct gsm610waveformat_tag GSM610WAVEFORMAT;

struct gsm610waveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct heaacwaveformat_tag heaacwaveformat_tag, *Pheaacwaveformat_tag;

typedef struct heaacwaveformat_tag HEAACWAVEFORMAT;

typedef struct heaacwaveinfo_tag heaacwaveinfo_tag, *Pheaacwaveinfo_tag;

typedef struct heaacwaveinfo_tag HEAACWAVEINFO;

struct heaacwaveinfo_tag {
    WAVEFORMATEX wfx;
    WORD wPayloadType;
    WORD wAudioProfileLevelIndication;
    WORD wStructType;
    WORD wReserved1;
    DWORD dwReserved2;
};

struct heaacwaveformat_tag {
    HEAACWAVEINFO wfInfo;
    BYTE pbAudioSpecificConfig[1];
};

typedef struct ima_adpcmwaveformat_tag ima_adpcmwaveformat_tag, *Pima_adpcmwaveformat_tag;

struct ima_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct ima_adpcmwaveformat_tag IMAADPCMWAVEFORMAT;

typedef struct tagJPEGINFOHEADER tagJPEGINFOHEADER, *PtagJPEGINFOHEADER;

typedef struct tagJPEGINFOHEADER JPEGINFOHEADER;

struct tagJPEGINFOHEADER {
    DWORD JPEGSize;
    DWORD JPEGProcess;
    DWORD JPEGColorSpaceID;
    DWORD JPEGBitsPerSample;
    DWORD JPEGHSubSampling;
    DWORD JPEGVSubSampling;
};

typedef ADPCMCOEFSET * LPADPCMCOEFSET;

typedef ADPCMEWAVEFORMAT * LPADPCMEWAVEFORMAT;

typedef ADPCMWAVEFORMAT * LPADPCMWAVEFORMAT;

typedef APTXWAVEFORMAT * LPAPTXWAVEFORMAT;

typedef AUDIOFILE_AF10WAVEFORMAT * LPAUDIOFILE_AF10WAVEFORMAT;

typedef AUDIOFILE_AF36WAVEFORMAT * LPAUDIOFILE_AF36WAVEFORMAT;

typedef CONTRESCR10WAVEFORMAT * LPCONTRESCR10WAVEFORMAT;

typedef CONTRESVQLPCWAVEFORMAT * LPCONTRESVQLPCWAVEFORMAT;

typedef CREATIVEADPCMWAVEFORMAT * LPCREATIVEADPCMWAVEFORMAT;

typedef CREATIVEFASTSPEECH10WAVEFORMAT * LPCREATIVEFASTSPEECH10WAVEFORMAT;

typedef CREATIVEFASTSPEECH8WAVEFORMAT * LPCREATIVEFASTSPEECH8WAVEFORMAT;

typedef CSIMAADPCMWAVEFORMAT * LPCSIMAADPCMWAVEFORMAT;

typedef DIALOGICOKIADPCMWAVEFORMAT * LPDIALOGICOKIADPCMWAVEFORMAT;

typedef DIGIADPCMWAVEFORMAT * LPDIGIADPCMWAVEFORMAT;

typedef DIGIFIXWAVEFORMAT * LPDIGIFIXWAVEFORMAT;

typedef DIGIREALWAVEFORMAT * LPDIGIREALWAVEFORMAT;

typedef DIGISTDWAVEFORMAT * LPDIGISTDWAVEFORMAT;

typedef DRMWAVEFORMAT * LPDRMWAVEFORMAT;

typedef DVIADPCMWAVEFORMAT * LPDVIADPCMWAVEFORMAT;

typedef ECHOSC1WAVEFORMAT * LPECHOSC1WAVEFORMAT;

typedef ECHOWAVEFILTER * LPECHOWAVEFILTER;

typedef FMTOWNS_SND_WAVEFORMAT * LPFMTOWNS_SND_WAVEFORMAT;

typedef G721_ADPCMWAVEFORMAT * LPG721_ADPCMWAVEFORMAT;

typedef G723_ADPCMWAVEFORMAT * LPG723_ADPCMWAVEFORMAT;

typedef GSM610WAVEFORMAT * LPGSM610WAVEFORMAT;

typedef HEAACWAVEFORMAT * LPHEAACWAVEFORMAT;

typedef HEAACWAVEINFO * LPHEAACWAVEINFO;

typedef IMAADPCMWAVEFORMAT * LPIMAADPCMWAVEFORMAT;

typedef struct mediaspace_adpcmwaveformat_tag mediaspace_adpcmwaveformat_tag, *Pmediaspace_adpcmwaveformat_tag;

typedef struct mediaspace_adpcmwaveformat_tag MEDIASPACEADPCMWAVEFORMAT;

typedef MEDIASPACEADPCMWAVEFORMAT * LPMEDIASPACEADPCMWAVEFORMAT;

struct mediaspace_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
};

typedef struct mpeg1waveformat_tag mpeg1waveformat_tag, *Pmpeg1waveformat_tag;

typedef struct mpeg1waveformat_tag MPEG1WAVEFORMAT;

typedef MPEG1WAVEFORMAT * LPMPEG1WAVEFORMAT;

struct mpeg1waveformat_tag {
    WAVEFORMATEX wfx;
    WORD fwHeadLayer;
    DWORD dwHeadBitrate;
    WORD fwHeadMode;
    WORD fwHeadModeExt;
    WORD wHeadEmphasis;
    WORD fwHeadFlags;
    DWORD dwPTSLow;
    DWORD dwPTSHigh;
};

typedef struct mpeglayer3waveformat_tag mpeglayer3waveformat_tag, *Pmpeglayer3waveformat_tag;

typedef struct mpeglayer3waveformat_tag MPEGLAYER3WAVEFORMAT;

typedef MPEGLAYER3WAVEFORMAT * LPMPEGLAYER3WAVEFORMAT;

struct mpeglayer3waveformat_tag {
    WAVEFORMATEX wfx;
    WORD wID;
    DWORD fdwFlags;
    WORD nBlockSize;
    WORD nFramesPerBlock;
    WORD nCodecDelay;
};

typedef struct msaudio1waveformat_tag msaudio1waveformat_tag, *Pmsaudio1waveformat_tag;

typedef struct msaudio1waveformat_tag MSAUDIO1WAVEFORMAT;

typedef MSAUDIO1WAVEFORMAT * LPMSAUDIO1WAVEFORMAT;

struct msaudio1waveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
    WORD wEncodeOptions;
};

typedef struct nms_vbxadpcmmwaveformat_tag nms_vbxadpcmmwaveformat_tag, *Pnms_vbxadpcmmwaveformat_tag;

typedef struct nms_vbxadpcmmwaveformat_tag NMS_VBXADPCMWAVEFORMAT;

typedef NMS_VBXADPCMWAVEFORMAT * LPNMS_VBXADPCMWAVEFORMAT;

struct nms_vbxadpcmmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wSamplesPerBlock;
};

typedef struct oliadpcmwaveformat_tag oliadpcmwaveformat_tag, *Poliadpcmwaveformat_tag;

typedef struct oliadpcmwaveformat_tag OLIADPCMWAVEFORMAT;

typedef OLIADPCMWAVEFORMAT * LPOLIADPCMWAVEFORMAT;

struct oliadpcmwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct olicelpwaveformat_tag olicelpwaveformat_tag, *Policelpwaveformat_tag;

typedef struct olicelpwaveformat_tag OLICELPWAVEFORMAT;

typedef OLICELPWAVEFORMAT * LPOLICELPWAVEFORMAT;

struct olicelpwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct oligsmwaveformat_tag oligsmwaveformat_tag, *Poligsmwaveformat_tag;

typedef struct oligsmwaveformat_tag OLIGSMWAVEFORMAT;

typedef OLIGSMWAVEFORMAT * LPOLIGSMWAVEFORMAT;

struct oligsmwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct olioprwaveformat_tag olioprwaveformat_tag, *Polioprwaveformat_tag;

typedef struct olioprwaveformat_tag OLIOPRWAVEFORMAT;

typedef OLIOPRWAVEFORMAT * LPOLIOPRWAVEFORMAT;

struct olioprwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct olisbcwaveformat_tag olisbcwaveformat_tag, *Polisbcwaveformat_tag;

typedef struct olisbcwaveformat_tag OLISBCWAVEFORMAT;

typedef OLISBCWAVEFORMAT * LPOLISBCWAVEFORMAT;

struct olisbcwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef struct sierra_adpcmwaveformat_tag sierra_adpcmwaveformat_tag, *Psierra_adpcmwaveformat_tag;

typedef struct sierra_adpcmwaveformat_tag SIERRAADPCMWAVEFORMAT;

typedef SIERRAADPCMWAVEFORMAT * LPSIERRAADPCMWAVEFORMAT;

struct sierra_adpcmwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
};

typedef struct sonarcwaveformat_tag sonarcwaveformat_tag, *Psonarcwaveformat_tag;

typedef struct sonarcwaveformat_tag SONARCWAVEFORMAT;

typedef SONARCWAVEFORMAT * LPSONARCWAVEFORMAT;

struct sonarcwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wCompType;
};

typedef struct truespeechwaveformat_tag truespeechwaveformat_tag, *Ptruespeechwaveformat_tag;

typedef struct truespeechwaveformat_tag TRUESPEECHWAVEFORMAT;

typedef TRUESPEECHWAVEFORMAT * LPTRUESPEECHWAVEFORMAT;

struct truespeechwaveformat_tag {
    WAVEFORMATEX wfx;
    WORD wRevision;
    WORD nSamplesPerBlock;
    BYTE abReserved[28];
};

typedef struct wavefilter_volume_tag wavefilter_volume_tag, *Pwavefilter_volume_tag;

typedef struct wavefilter_volume_tag VOLUMEWAVEFILTER;

typedef VOLUMEWAVEFILTER * LPVOLUMEWAVEFILTER;

struct wavefilter_volume_tag {
    WAVEFILTER wfltr;
    DWORD dwVolume;
};

typedef WAVEFILTER * LPWAVEFILTER;

typedef struct WAVEFORMATEXTENSIBLE WAVEFORMATEXTENSIBLE, *PWAVEFORMATEXTENSIBLE;

typedef struct WAVEFORMATEXTENSIBLE WAVEFORMATIEEEFLOATEX;

typedef WAVEFORMATIEEEFLOATEX * LPWAVEFORMATIEEEFLOATEX;

struct WAVEFORMATEXTENSIBLE {
    WAVEFORMATEX Format;
    union _union_6236 Samples;
    DWORD dwChannelMask;
    GUID SubFormat;
};

typedef struct WAVEFORMATEXTENSIBLE WAVEFORMATPCMEX;

typedef WAVEFORMATPCMEX * LPWAVEFORMATPCMEX;

typedef struct wmaudio2waveformat_tag wmaudio2waveformat_tag, *Pwmaudio2waveformat_tag;

typedef struct wmaudio2waveformat_tag WMAUDIO2WAVEFORMAT;

typedef WMAUDIO2WAVEFORMAT * LPWMAUDIO2WAVEFORMAT;

struct wmaudio2waveformat_tag {
    WAVEFORMATEX wfx;
    DWORD dwSamplesPerBlock;
    WORD wEncodeOptions;
    DWORD dwSuperBlockAlign;
};

typedef struct wmaudio3waveformat_tag wmaudio3waveformat_tag, *Pwmaudio3waveformat_tag;

typedef struct wmaudio3waveformat_tag WMAUDIO3WAVEFORMAT;

typedef WMAUDIO3WAVEFORMAT * LPWMAUDIO3WAVEFORMAT;

struct wmaudio3waveformat_tag {
    WAVEFORMATEX wfx;
    WORD wValidBitsPerSample;
    DWORD dwChannelMask;
    DWORD dwReserved1;
    DWORD dwReserved2;
    WORD wEncodeOptions;
    WORD wReserved3;
};

typedef struct yamaha_adpmcwaveformat_tag yamaha_adpmcwaveformat_tag, *Pyamaha_adpmcwaveformat_tag;

typedef struct yamaha_adpmcwaveformat_tag YAMAHA_ADPCMWAVEFORMAT;

typedef YAMAHA_ADPCMWAVEFORMAT * LPYAMAHA_ADPCMWAVEFORMAT;

struct yamaha_adpmcwaveformat_tag {
    WAVEFORMATEX wfx;
};

typedef ADPCMCOEFSET * NPADPCMCOEFSET;

typedef ADPCMEWAVEFORMAT * NPADPCMEWAVEFORMAT;

typedef ADPCMWAVEFORMAT * NPADPCMWAVEFORMAT;

typedef APTXWAVEFORMAT * NPAPTXWAVEFORMAT;

typedef AUDIOFILE_AF10WAVEFORMAT * NPAUDIOFILE_AF10WAVEFORMAT;

typedef AUDIOFILE_AF36WAVEFORMAT * NPAUDIOFILE_AF36WAVEFORMAT;

typedef CONTRESCR10WAVEFORMAT * NPCONTRESCR10WAVEFORMAT;

typedef CONTRESVQLPCWAVEFORMAT * NPCONTRESVQLPCWAVEFORMAT;

typedef CREATIVEADPCMWAVEFORMAT * NPCREATIVEADPCMWAVEFORMAT;

typedef CREATIVEFASTSPEECH10WAVEFORMAT * NPCREATIVEFASTSPEECH10WAVEFORMAT;

typedef CREATIVEFASTSPEECH8WAVEFORMAT * NPCREATIVEFASTSPEECH8WAVEFORMAT;

typedef CSIMAADPCMWAVEFORMAT * NPCSIMAADPCMWAVEFORMAT;

typedef DIALOGICOKIADPCMWAVEFORMAT * NPDIALOGICOKIADPCMWAVEFORMAT;

typedef DIGIADPCMWAVEFORMAT * NPDIGIADPCMWAVEFORMAT;

typedef DIGIFIXWAVEFORMAT * NPDIGIFIXWAVEFORMAT;

typedef DIGIREALWAVEFORMAT * NPDIGIREALWAVEFORMAT;

typedef DIGISTDWAVEFORMAT * NPDIGISTDWAVEFORMAT;

typedef DRMWAVEFORMAT * NPDRMWAVEFORMAT;

typedef DVIADPCMWAVEFORMAT * NPDVIADPCMWAVEFORMAT;

typedef ECHOSC1WAVEFORMAT * NPECHOSC1WAVEFORMAT;

typedef ECHOWAVEFILTER * NPECHOWAVEFILTER;

typedef FMTOWNS_SND_WAVEFORMAT * NPFMTOWNS_SND_WAVEFORMAT;

typedef G721_ADPCMWAVEFORMAT * NPG721_ADPCMWAVEFORMAT;

typedef G723_ADPCMWAVEFORMAT * NPG723_ADPCMWAVEFORMAT;

typedef GSM610WAVEFORMAT * NPGSM610WAVEFORMAT;

typedef HEAACWAVEFORMAT * NPHEAACWAVEFORMAT;

typedef HEAACWAVEINFO * NPHEAACWAVEINFO;

typedef IMAADPCMWAVEFORMAT * NPIMAADPCMWAVEFORMAT;

typedef MEDIASPACEADPCMWAVEFORMAT * NPMEDIASPACEADPCMWAVEFORMAT;

typedef MPEG1WAVEFORMAT * NPMPEG1WAVEFORMAT;

typedef MPEGLAYER3WAVEFORMAT * NPMPEGLAYER3WAVEFORMAT;

typedef NMS_VBXADPCMWAVEFORMAT * NPNMS_VBXADPCMWAVEFORMAT;

typedef OLIADPCMWAVEFORMAT * NPOLIADPCMWAVEFORMAT;

typedef OLICELPWAVEFORMAT * NPOLICELPWAVEFORMAT;

typedef OLIGSMWAVEFORMAT * NPOLIGSMWAVEFORMAT;

typedef OLIOPRWAVEFORMAT * NPOLIOPRWAVEFORMAT;

typedef OLISBCWAVEFORMAT * NPOLISBCWAVEFORMAT;

typedef SIERRAADPCMWAVEFORMAT * NPSIERRAADPCMWAVEFORMAT;

typedef SONARCWAVEFORMAT * NPSONARCWAVEFORMAT;

typedef TRUESPEECHWAVEFORMAT * NPTRUESPEECHWAVEFORMAT;

typedef VOLUMEWAVEFILTER * NPVOLUMEWAVEFILTER;

typedef WAVEFILTER * NPWAVEFILTER;

typedef WAVEFORMATIEEEFLOATEX * NPWAVEFORMATIEEEFLOATEX;

typedef WAVEFORMATPCMEX * NPWAVEFORMATPCMEX;

typedef YAMAHA_ADPCMWAVEFORMAT * NPYAMAHA_ADPCMWAVEFORMAT;

typedef ADPCMCOEFSET * PADPCMCOEFSET;

typedef ADPCMEWAVEFORMAT * PADPCMEWAVEFORMAT;

typedef ADPCMWAVEFORMAT * PADPCMWAVEFORMAT;

typedef APTXWAVEFORMAT * PAPTXWAVEFORMAT;

typedef AUDIOFILE_AF10WAVEFORMAT * PAUDIOFILE_AF10WAVEFORMAT;

typedef AUDIOFILE_AF36WAVEFORMAT * PAUDIOFILE_AF36WAVEFORMAT;

typedef CONTRESCR10WAVEFORMAT * PCONTRESCR10WAVEFORMAT;

typedef CONTRESVQLPCWAVEFORMAT * PCONTRESVQLPCWAVEFORMAT;

typedef CREATIVEADPCMWAVEFORMAT * PCREATIVEADPCMWAVEFORMAT;

typedef CREATIVEFASTSPEECH10WAVEFORMAT * PCREATIVEFASTSPEECH10WAVEFORMAT;

typedef CREATIVEFASTSPEECH8WAVEFORMAT * PCREATIVEFASTSPEECH8WAVEFORMAT;

typedef CSIMAADPCMWAVEFORMAT * PCSIMAADPCMWAVEFORMAT;

typedef DIALOGICOKIADPCMWAVEFORMAT * PDIALOGICOKIADPCMWAVEFORMAT;

typedef DIGIADPCMWAVEFORMAT * PDIGIADPCMWAVEFORMAT;

typedef DIGIFIXWAVEFORMAT * PDIGIFIXWAVEFORMAT;

typedef DIGIREALWAVEFORMAT * PDIGIREALWAVEFORMAT;

typedef DIGISTDWAVEFORMAT * PDIGISTDWAVEFORMAT;

typedef DRMWAVEFORMAT * PDRMWAVEFORMAT;

typedef DVIADPCMWAVEFORMAT * PDVIADPCMWAVEFORMAT;

typedef ECHOSC1WAVEFORMAT * PECHOSC1WAVEFORMAT;

typedef ECHOWAVEFILTER * PECHOWAVEFILTER;

typedef FMTOWNS_SND_WAVEFORMAT * PFMTOWNS_SND_WAVEFORMAT;

typedef G721_ADPCMWAVEFORMAT * PG721_ADPCMWAVEFORMAT;

typedef G723_ADPCMWAVEFORMAT * PG723_ADPCMWAVEFORMAT;

typedef GSM610WAVEFORMAT * PGSM610WAVEFORMAT;

typedef HEAACWAVEFORMAT * PHEAACWAVEFORMAT;

typedef HEAACWAVEINFO * PHEAACWAVEINFO;

typedef IMAADPCMWAVEFORMAT * PIMAADPCMWAVEFORMAT;

typedef MEDIASPACEADPCMWAVEFORMAT * PMEDIASPACEADPCMWAVEFORMAT;

typedef MPEG1WAVEFORMAT * PMPEG1WAVEFORMAT;

typedef MPEGLAYER3WAVEFORMAT * PMPEGLAYER3WAVEFORMAT;

typedef NMS_VBXADPCMWAVEFORMAT * PNMS_VBXADPCMWAVEFORMAT;

typedef OLIADPCMWAVEFORMAT * POLIADPCMWAVEFORMAT;

typedef OLICELPWAVEFORMAT * POLICELPWAVEFORMAT;

typedef OLIGSMWAVEFORMAT * POLIGSMWAVEFORMAT;

typedef OLIOPRWAVEFORMAT * POLIOPRWAVEFORMAT;

typedef OLISBCWAVEFORMAT * POLISBCWAVEFORMAT;

typedef SIERRAADPCMWAVEFORMAT * PSIERRAADPCMWAVEFORMAT;

typedef SONARCWAVEFORMAT * PSONARCWAVEFORMAT;

typedef TRUESPEECHWAVEFORMAT * PTRUESPEECHWAVEFORMAT;

typedef VOLUMEWAVEFILTER * PVOLUMEWAVEFILTER;

typedef WAVEFILTER * PWAVEFILTER;

typedef WAVEFORMATIEEEFLOATEX * PWAVEFORMATIEEEFLOATEX;

typedef WAVEFORMATPCMEX * PWAVEFORMATPCMEX;

typedef YAMAHA_ADPCMWAVEFORMAT * PYAMAHA_ADPCMWAVEFORMAT;

typedef struct tag_s_RIFFWAVE_INST tag_s_RIFFWAVE_INST, *Ptag_s_RIFFWAVE_INST;

typedef struct tag_s_RIFFWAVE_INST s_RIFFWAVE_inst;

struct tag_s_RIFFWAVE_INST {
};

typedef struct tag_s_RIFFWAVE_inst tag_s_RIFFWAVE_inst, *Ptag_s_RIFFWAVE_inst;

struct tag_s_RIFFWAVE_inst {
    BYTE bUnshiftedNote;
    char chFineTune;
    char chGain;
    BYTE bLowNote;
    BYTE bHighNote;
    BYTE bLowVelocity;
    BYTE bHighVelocity;
};

#define AUX_MAPPER -1

#define AUXCAPS_AUXIN 2

#define AUXCAPS_CDAUDIO 1

#define AUXCAPS_LRVOLUME 2

#define AUXCAPS_VOLUME 1

#define CALLBACK_EVENT 327680

#define CALLBACK_FUNCTION 196608

#define CALLBACK_NULL 0

#define CALLBACK_TASK 131072

#define CALLBACK_THREAD 131072

#define CALLBACK_TYPEMASK 458752

#define CALLBACK_WINDOW 65536

#define DRV_CANCEL 0

#define DRV_CLOSE 4

#define DRV_CONFIGURE 7

#define DRV_DISABLE 5

#define DRV_ENABLE 2

#define DRV_EXITSESSION 11

#define DRV_FREE 6

#define DRV_INSTALL 9

#define DRV_LOAD 1

#define DRV_MCI_FIRST 2048

#define DRV_MCI_LAST 6143

#define DRV_OK 1

#define DRV_OPEN 3

#define DRV_POWER 15

#define DRV_QUERYCONFIGURE 8

#define DRV_REMOVE 10

#define DRV_RESERVED 2048

#define DRV_RESTART 2

#define DRV_USER 16384

#define DRVCNF_CANCEL 0

#define DRVCNF_OK 1

#define DRVCNF_RESTART 2

#define JOY_BUTTON1 1

#define JOY_BUTTON10 512

#define JOY_BUTTON11 1024

#define JOY_BUTTON12 2048

#define JOY_BUTTON13 4096

#define JOY_BUTTON14 8192

#define JOY_BUTTON15 16384

#define JOY_BUTTON16 32768

#define JOY_BUTTON17 65536

#define JOY_BUTTON18 131072

#define JOY_BUTTON19 262144

#define JOY_BUTTON1CHG 256

#define JOY_BUTTON2 2

#define JOY_BUTTON20 524288

#define JOY_BUTTON21 1048576

#define JOY_BUTTON22 2097152

#define JOY_BUTTON23 4194304

#define JOY_BUTTON24 8388608

#define JOY_BUTTON25 16777216

#define JOY_BUTTON26 33554432

#define JOY_BUTTON27 67108864

#define JOY_BUTTON28 134217728

#define JOY_BUTTON29 268435456

#define JOY_BUTTON2CHG 512

#define JOY_BUTTON3 4

#define JOY_BUTTON30 536870912

#define JOY_BUTTON31 1073741824

#define JOY_BUTTON32 2147483648

#define JOY_BUTTON3CHG 1024

#define JOY_BUTTON4 8

#define JOY_BUTTON4CHG 2048

#define JOY_BUTTON5 16

#define JOY_BUTTON6 32

#define JOY_BUTTON7 64

#define JOY_BUTTON8 128

#define JOY_BUTTON9 256

#define JOY_CAL_READ3 262144

#define JOY_CAL_READ4 524288

#define JOY_CAL_READ5 4194304

#define JOY_CAL_READ6 8388608

#define JOY_CAL_READALWAYS 65536

#define JOY_CAL_READRONLY 33554432

#define JOY_CAL_READUONLY 67108864

#define JOY_CAL_READVONLY 134217728

#define JOY_CAL_READXONLY 1048576

#define JOY_CAL_READXYONLY 131072

#define JOY_CAL_READYONLY 2097152

#define JOY_CAL_READZONLY 16777216

#define JOY_POVBACKWARD 18000

#define JOY_POVCENTERED -1

#define JOY_POVFORWARD 0

#define JOY_POVLEFT 27000

#define JOY_POVRIGHT 9000

#define JOY_RETURNBUTTONS 128

#define JOY_RETURNCENTERED 1024

#define JOY_RETURNPOV 64

#define JOY_RETURNPOVCTS 512

#define JOY_RETURNR 8

#define JOY_RETURNRAWDATA 256

#define JOY_RETURNU 16

#define JOY_RETURNV 32

#define JOY_RETURNX 1

#define JOY_RETURNY 2

#define JOY_RETURNZ 4

#define JOY_USEDEADZONE 2048

#define JOYCAPS_HASPOV 16

#define JOYCAPS_HASR 2

#define JOYCAPS_HASU 4

#define JOYCAPS_HASV 8

#define JOYCAPS_HASZ 1

#define JOYCAPS_POV4DIR 32

#define JOYCAPS_POVCTS 64

#define JOYERR_BASE 160

#define JOYERR_NOCANDO 166

#define JOYERR_NOERROR 0

#define JOYERR_PARMS 165

#define JOYERR_UNPLUGGED 167

#define JOYSTICKID1 0

#define JOYSTICKID2 1

#define MAX_JOYSTICKOEMVXDNAME 260

#define MAXERRORLENGTH 256

#define MAXPNAMELEN 32

#define MCI_ALL_DEVICE_ID -1

#define MCI_ANIM_GETDEVCAPS_CAN_REVERSE 16385

#define MCI_ANIM_GETDEVCAPS_CAN_STRETCH 16391

#define MCI_ANIM_GETDEVCAPS_FAST_RATE 16386

#define MCI_ANIM_GETDEVCAPS_MAX_WINDOWS 16392

#define MCI_ANIM_GETDEVCAPS_NORMAL_RATE 16388

#define MCI_ANIM_GETDEVCAPS_PALETTES 16390

#define MCI_ANIM_GETDEVCAPS_SLOW_RATE 16387

#define MCI_ANIM_INFO_TEXT 65536

#define MCI_ANIM_OPEN_NOSTATIC 262144

#define MCI_ANIM_OPEN_PARENT 131072

#define MCI_ANIM_OPEN_WS 65536

#define MCI_ANIM_PLAY_FAST 262144

#define MCI_ANIM_PLAY_REVERSE 131072

#define MCI_ANIM_PLAY_SCAN 1048576

#define MCI_ANIM_PLAY_SLOW 524288

#define MCI_ANIM_PLAY_SPEED 65536

#define MCI_ANIM_PUT_DESTINATION 262144

#define MCI_ANIM_PUT_SOURCE 131072

#define MCI_ANIM_REALIZE_BKGD 131072

#define MCI_ANIM_REALIZE_NORM 65536

#define MCI_ANIM_RECT 65536

#define MCI_ANIM_STATUS_FORWARD 16386

#define MCI_ANIM_STATUS_HPAL 16388

#define MCI_ANIM_STATUS_HWND 16387

#define MCI_ANIM_STATUS_SPEED 16385

#define MCI_ANIM_STATUS_STRETCH 16389

#define MCI_ANIM_STEP_FRAMES 131072

#define MCI_ANIM_STEP_REVERSE 65536

#define MCI_ANIM_UPDATE_HDC 131072

#define MCI_ANIM_WHERE_DESTINATION 262144

#define MCI_ANIM_WHERE_SOURCE 131072

#define MCI_ANIM_WINDOW_DEFAULT 0

#define MCI_ANIM_WINDOW_DISABLE_STRETCH 2097152

#define MCI_ANIM_WINDOW_ENABLE_STRETCH 1048576

#define MCI_ANIM_WINDOW_HWND 65536

#define MCI_ANIM_WINDOW_STATE 262144

#define MCI_ANIM_WINDOW_TEXT 524288

#define MCI_BREAK 2065

#define MCI_BREAK_HWND 512

#define MCI_BREAK_KEY 256

#define MCI_BREAK_OFF 1024

#define MCI_CD_OFFSET 1088

#define MCI_CDA_STATUS_TYPE_TRACK 16385

#define MCI_CDA_TRACK_AUDIO 1088

#define MCI_CDA_TRACK_OTHER 1089

#define MCI_CLOSE 2052

#define MCI_COPY 2130

#define MCI_CUE 2096

#define MCI_CUT 2129

#define MCI_DELETE 2134

#define MCI_DEVTYPE_ANIMATION 519

#define MCI_DEVTYPE_CD_AUDIO 516

#define MCI_DEVTYPE_DAT 517

#define MCI_DEVTYPE_DIGITAL_VIDEO 520

#define MCI_DEVTYPE_FIRST 513

#define MCI_DEVTYPE_FIRST_USER 4096

#define MCI_DEVTYPE_LAST 523

#define MCI_DEVTYPE_OTHER 521

#define MCI_DEVTYPE_OVERLAY 515

#define MCI_DEVTYPE_SCANNER 518

#define MCI_DEVTYPE_SEQUENCER 523

#define MCI_DEVTYPE_VCR 513

#define MCI_DEVTYPE_VIDEODISC 514

#define MCI_DEVTYPE_WAVEFORM_AUDIO 522

#define MCI_ESCAPE 2053

#define MCI_FIRST 2048

#define MCI_FORMAT_BYTES 8

#define MCI_FORMAT_FRAMES 3

#define MCI_FORMAT_HMS 1

#define MCI_FORMAT_MILLISECONDS 0

#define MCI_FORMAT_MSF 2

#define MCI_FORMAT_SAMPLES 9

#define MCI_FORMAT_SMPTE_24 4

#define MCI_FORMAT_SMPTE_25 5

#define MCI_FORMAT_SMPTE_30 6

#define MCI_FORMAT_SMPTE_30DROP 7

#define MCI_FORMAT_TMSF 10

#define MCI_FREEZE 2116

#define MCI_FROM 4

#define MCI_GETDEVCAPS 2059

#define MCI_GETDEVCAPS_CAN_EJECT 7

#define MCI_GETDEVCAPS_CAN_PLAY 8

#define MCI_GETDEVCAPS_CAN_RECORD 1

#define MCI_GETDEVCAPS_CAN_SAVE 9

#define MCI_GETDEVCAPS_COMPOUND_DEVICE 6

#define MCI_GETDEVCAPS_DEVICE_TYPE 4

#define MCI_GETDEVCAPS_HAS_AUDIO 2

#define MCI_GETDEVCAPS_HAS_VIDEO 3

#define MCI_GETDEVCAPS_ITEM 256

#define MCI_GETDEVCAPS_USES_FILES 5

#define MCI_INFO 2058

#define MCI_INFO_COPYRIGHT 8192

#define MCI_INFO_FILE 512

#define MCI_INFO_MEDIA_IDENTITY 2048

#define MCI_INFO_MEDIA_UPC 1024

#define MCI_INFO_NAME 4096

#define MCI_INFO_PRODUCT 256

#define MCI_LAST 4095

#define MCI_LOAD 2128

#define MCI_LOAD_FILE 256

#define MCI_MODE_NOT_READY 524

#define MCI_MODE_OPEN 530

#define MCI_MODE_PAUSE 529

#define MCI_MODE_PLAY 526

#define MCI_MODE_RECORD 527

#define MCI_MODE_SEEK 528

#define MCI_MODE_STOP 525

#define MCI_NOTIFY 1

#define MCI_NOTIFY_ABORTED 4

#define MCI_NOTIFY_FAILURE 8

#define MCI_NOTIFY_SUCCESSFUL 1

#define MCI_NOTIFY_SUPERSEDED 2

#define MCI_OPEN 2051

#define MCI_OPEN_ALIAS 1024

#define MCI_OPEN_ELEMENT 512

#define MCI_OPEN_ELEMENT_ID 2048

#define MCI_OPEN_SHAREABLE 256

#define MCI_OPEN_TYPE 8192

#define MCI_OPEN_TYPE_ID 4096

#define MCI_OVLY_GETDEVCAPS_CAN_FREEZE 16386

#define MCI_OVLY_GETDEVCAPS_CAN_STRETCH 16385

#define MCI_OVLY_GETDEVCAPS_MAX_WINDOWS 16387

#define MCI_OVLY_INFO_TEXT 65536

#define MCI_OVLY_OPEN_PARENT 131072

#define MCI_OVLY_OPEN_WS 65536

#define MCI_OVLY_PUT_DESTINATION 262144

#define MCI_OVLY_PUT_FRAME 524288

#define MCI_OVLY_PUT_SOURCE 131072

#define MCI_OVLY_PUT_VIDEO 1048576

#define MCI_OVLY_RECT 65536

#define MCI_OVLY_STATUS_HWND 16385

#define MCI_OVLY_STATUS_STRETCH 16386

#define MCI_OVLY_WHERE_DESTINATION 262144

#define MCI_OVLY_WHERE_FRAME 524288

#define MCI_OVLY_WHERE_SOURCE 131072

#define MCI_OVLY_WHERE_VIDEO 1048576

#define MCI_OVLY_WINDOW_DEFAULT 0

#define MCI_OVLY_WINDOW_DISABLE_STRETCH 2097152

#define MCI_OVLY_WINDOW_ENABLE_STRETCH 1048576

#define MCI_OVLY_WINDOW_HWND 65536

#define MCI_OVLY_WINDOW_STATE 262144

#define MCI_OVLY_WINDOW_TEXT 524288

#define MCI_PASTE 2131

#define MCI_PAUSE 2057

#define MCI_PLAY 2054

#define MCI_PUT 2114

#define MCI_REALIZE 2112

#define MCI_RECORD 2063

#define MCI_RECORD_INSERT 256

#define MCI_RECORD_OVERWRITE 512

#define MCI_RESUME 2133

#define MCI_SAVE 2067

#define MCI_SAVE_FILE 256

#define MCI_SEEK 2055

#define MCI_SEEK_TO_END 512

#define MCI_SEEK_TO_START 256

#define MCI_SEQ_DIV_PPQN 1216

#define MCI_SEQ_DIV_SMPTE_24 1217

#define MCI_SEQ_DIV_SMPTE_25 1218

#define MCI_SEQ_DIV_SMPTE_30 1220

#define MCI_SEQ_DIV_SMPTE_30DROP 1219

#define MCI_SEQ_FILE 16386

#define MCI_SEQ_FORMAT_SONGPTR 16385

#define MCI_SEQ_MAPPER 65535

#define MCI_SEQ_MIDI 16387

#define MCI_SEQ_NONE 65533

#define MCI_SEQ_OFFSET 1216

#define MCI_SEQ_SET_MASTER 524288

#define MCI_SEQ_SET_OFFSET 16777216

#define MCI_SEQ_SET_PORT 131072

#define MCI_SEQ_SET_SLAVE 262144

#define MCI_SEQ_SET_TEMPO 65536

#define MCI_SEQ_SMPTE 16388

#define MCI_SEQ_STATUS_COPYRIGHT 16396

#define MCI_SEQ_STATUS_DIVTYPE 16394

#define MCI_SEQ_STATUS_MASTER 16392

#define MCI_SEQ_STATUS_NAME 16395

#define MCI_SEQ_STATUS_OFFSET 16393

#define MCI_SEQ_STATUS_PORT 16387

#define MCI_SEQ_STATUS_SLAVE 16391

#define MCI_SEQ_STATUS_TEMPO 16386

#define MCI_SET 2061

#define MCI_SET_AUDIO 2048

#define MCI_SET_AUDIO_ALL 0

#define MCI_SET_AUDIO_LEFT 1

#define MCI_SET_AUDIO_RIGHT 2

#define MCI_SET_DOOR_CLOSED 512

#define MCI_SET_DOOR_OPEN 256

#define MCI_SET_OFF 16384

#define MCI_SET_ON 8192

#define MCI_SET_TIME_FORMAT 1024

#define MCI_SET_VIDEO 4096

#define MCI_SPIN 2060

#define MCI_STATUS 2068

#define MCI_STATUS_CURRENT_TRACK 8

#define MCI_STATUS_ITEM 256

#define MCI_STATUS_LENGTH 1

#define MCI_STATUS_MEDIA_PRESENT 5

#define MCI_STATUS_MODE 4

#define MCI_STATUS_NUMBER_OF_TRACKS 3

#define MCI_STATUS_POSITION 2

#define MCI_STATUS_READY 7

#define MCI_STATUS_START 512

#define MCI_STATUS_TIME_FORMAT 6

#define MCI_STEP 2062

#define MCI_STOP 2056

#define MCI_STRING_OFFSET 512

#define MCI_SYSINFO 2064

#define MCI_SYSINFO_INSTALLNAME 2048

#define MCI_SYSINFO_NAME 1024

#define MCI_SYSINFO_OPEN 512

#define MCI_SYSINFO_QUANTITY 256

#define MCI_TO 8

#define MCI_TRACK 16

#define MCI_UNFREEZE 2117

#define MCI_UPDATE 2132

#define MCI_USER_MESSAGES 3072

#define MCI_VD_ESCAPE_STRING 256

#define MCI_VD_FORMAT_TRACK 16385

#define MCI_VD_GETDEVCAPS_CAN_REVERSE 16386

#define MCI_VD_GETDEVCAPS_CAV 131072

#define MCI_VD_GETDEVCAPS_CLV 65536

#define MCI_VD_GETDEVCAPS_FAST_RATE 16387

#define MCI_VD_GETDEVCAPS_NORMAL_RATE 16389

#define MCI_VD_GETDEVCAPS_SLOW_RATE 16388

#define MCI_VD_MEDIA_CAV 1027

#define MCI_VD_MEDIA_CLV 1026

#define MCI_VD_MEDIA_OTHER 1028

#define MCI_VD_MODE_PARK 1025

#define MCI_VD_OFFSET 1024

#define MCI_VD_PLAY_FAST 131072

#define MCI_VD_PLAY_REVERSE 65536

#define MCI_VD_PLAY_SCAN 524288

#define MCI_VD_PLAY_SLOW 1048576

#define MCI_VD_PLAY_SPEED 262144

#define MCI_VD_SEEK_REVERSE 65536

#define MCI_VD_SPIN_DOWN 131072

#define MCI_VD_SPIN_UP 65536

#define MCI_VD_STATUS_DISC_SIZE 16390

#define MCI_VD_STATUS_FORWARD 16387

#define MCI_VD_STATUS_MEDIA_TYPE 16388

#define MCI_VD_STATUS_SIDE 16389

#define MCI_VD_STATUS_SPEED 16386

#define MCI_VD_STEP_FRAMES 65536

#define MCI_VD_STEP_REVERSE 131072

#define MCI_WAIT 2

#define MCI_WAVE_GETDEVCAPS_INPUTS 16385

#define MCI_WAVE_GETDEVCAPS_OUTPUTS 16386

#define MCI_WAVE_INPUT 4194304

#define MCI_WAVE_MAPPER 1153

#define MCI_WAVE_OFFSET 1152

#define MCI_WAVE_OPEN_BUFFER 65536

#define MCI_WAVE_OUTPUT 8388608

#define MCI_WAVE_PCM 1152

#define MCI_WAVE_SET_ANYINPUT 67108864

#define MCI_WAVE_SET_ANYOUTPUT 134217728

#define MCI_WAVE_SET_AVGBYTESPERSEC 524288

#define MCI_WAVE_SET_BITSPERSAMPLE 2097152

#define MCI_WAVE_SET_BLOCKALIGN 1048576

#define MCI_WAVE_SET_CHANNELS 131072

#define MCI_WAVE_SET_FORMATTAG 65536

#define MCI_WAVE_SET_SAMPLESPERSEC 262144

#define MCI_WAVE_STATUS_AVGBYTESPERSEC 16388

#define MCI_WAVE_STATUS_BITSPERSAMPLE 16390

#define MCI_WAVE_STATUS_BLOCKALIGN 16389

#define MCI_WAVE_STATUS_CHANNELS 16386

#define MCI_WAVE_STATUS_FORMATTAG 16385

#define MCI_WAVE_STATUS_LEVEL 16391

#define MCI_WAVE_STATUS_SAMPLESPERSEC 16387

#define MCI_WHERE 2115

#define MCI_WINDOW 2113

#define MCIERR_BAD_CONSTANT 290

#define MCIERR_BAD_INTEGER 270

#define MCIERR_BAD_TIME_FORMAT 293

#define MCIERR_BASE 256

#define MCIERR_CANNOT_LOAD_DRIVER 266

#define MCIERR_CANNOT_USE_ALL 279

#define MCIERR_CREATEWINDOW 347

#define MCIERR_CUSTOM_DRIVER_BASE 512

#define MCIERR_DEVICE_LENGTH 310

#define MCIERR_DEVICE_LOCKED 288

#define MCIERR_DEVICE_NOT_INSTALLED 306

#define MCIERR_DEVICE_NOT_READY 276

#define MCIERR_DEVICE_OPEN 265

#define MCIERR_DEVICE_ORD_LENGTH 311

#define MCIERR_DEVICE_TYPE_REQUIRED 287

#define MCIERR_DRIVER 278

#define MCIERR_DRIVER_INTERNAL 272

#define MCIERR_DUPLICATE_ALIAS 289

#define MCIERR_DUPLICATE_FLAGS 295

#define MCIERR_EXTENSION_NOT_FOUND 281

#define MCIERR_EXTRA_CHARACTERS 305

#define MCIERR_FILE_NOT_FOUND 275

#define MCIERR_FILE_NOT_SAVED 286

#define MCIERR_FILE_READ 348

#define MCIERR_FILE_WRITE 349

#define MCIERR_FILENAME_REQUIRED 304

#define MCIERR_FLAGS_NOT_COMPATIBLE 284

#define MCIERR_GET_CD 307

#define MCIERR_HARDWARE 262

#define MCIERR_ILLEGAL_FOR_AUTO_OPEN 303

#define MCIERR_INTERNAL 277

#define MCIERR_INVALID_DEVICE_ID 257

#define MCIERR_INVALID_DEVICE_NAME 263

#define MCIERR_INVALID_FILE 296

#define MCIERR_MISSING_COMMAND_STRING 267

#define MCIERR_MISSING_DEVICE_NAME 292

#define MCIERR_MISSING_PARAMETER 273

#define MCIERR_MISSING_STRING_ARGUMENT 269

#define MCIERR_MULTIPLE 280

#define MCIERR_MUST_USE_SHAREABLE 291

#define MCIERR_NEW_REQUIRES_ALIAS 299

#define MCIERR_NO_CLOSING_QUOTE 294

#define MCIERR_NO_ELEMENT_ALLOWED 301

#define MCIERR_NO_IDENTITY 350

#define MCIERR_NO_INTEGER 312

#define MCIERR_NO_WINDOW 346

#define MCIERR_NONAPPLICABLE_FUNCTION 302

#define MCIERR_NOTIFY_ON_AUTO_OPEN 300

#define MCIERR_NULL_PARAMETER_BLOCK 297

#define MCIERR_OUT_OF_MEMORY 264

#define MCIERR_OUTOFRANGE 282

#define MCIERR_PARAM_OVERFLOW 268

#define MCIERR_PARSER_INTERNAL 271

#define MCIERR_SEQ_DIV_INCOMPATIBLE 336

#define MCIERR_SEQ_NOMIDIPRESENT 343

#define MCIERR_SEQ_PORT_INUSE 337

#define MCIERR_SEQ_PORT_MAPNODEVICE 339

#define MCIERR_SEQ_PORT_MISCERROR 340

#define MCIERR_SEQ_PORT_NONEXISTENT 338

#define MCIERR_SEQ_PORTUNSPECIFIED 342

#define MCIERR_SEQ_TIMER 341

#define MCIERR_SET_CD 308

#define MCIERR_SET_DRIVE 309

#define MCIERR_UNNAMED_RESOURCE 298

#define MCIERR_UNRECOGNIZED_COMMAND 261

#define MCIERR_UNRECOGNIZED_KEYWORD 259

#define MCIERR_UNSUPPORTED_FUNCTION 274

#define MCIERR_WAVE_INPUTSINUSE 322

#define MCIERR_WAVE_INPUTSUNSUITABLE 328

#define MCIERR_WAVE_INPUTUNSPECIFIED 325

#define MCIERR_WAVE_OUTPUTSINUSE 320

#define MCIERR_WAVE_OUTPUTSUNSUITABLE 326

#define MCIERR_WAVE_OUTPUTUNSPECIFIED 324

#define MCIERR_WAVE_SETINPUTINUSE 323

#define MCIERR_WAVE_SETINPUTUNSUITABLE 329

#define MCIERR_WAVE_SETOUTPUTINUSE 321

#define MCIERR_WAVE_SETOUTPUTUNSUITABLE 327

#define MEVT_COMMENT 130

#define MEVT_F_CALLBACK 1073741824

#define MEVT_F_LONG 2147483648

#define MEVT_F_SHORT 0

#define MEVT_LONGMSG 128

#define MEVT_NOP 2

#define MEVT_SHORTMSG 0

#define MEVT_TEMPO 1

#define MEVT_VERSION 132

#define MHDR_DONE 1

#define MHDR_INQUEUE 4

#define MHDR_ISSTRM 8

#define MHDR_PREPARED 2

#define MIDI_CACHE_ALL 1

#define MIDI_CACHE_BESTFIT 2

#define MIDI_CACHE_QUERY 3

#define MIDI_IO_STATUS 32

#define MIDI_MAPPER -1

#define MIDI_UNCACHE 4

#define MIDICAPS_CACHE 4

#define MIDICAPS_LRVOLUME 2

#define MIDICAPS_STREAM 8

#define MIDICAPS_VOLUME 1

#define MIDIERR_BADOPENMODE 70

#define MIDIERR_BASE 64

#define MIDIERR_DONT_CONTINUE 71

#define MIDIERR_INVALIDSETUP 69

#define MIDIERR_LASTERROR 71

#define MIDIERR_NODEVICE 68

#define MIDIERR_NOMAP 66

#define MIDIERR_NOTREADY 67

#define MIDIERR_STILLPLAYING 65

#define MIDIERR_UNPREPARED 64

#define MIDIMAPPER -1

#define MIDIPATCHSIZE 128

#define MIDIPROP_GET 1073741824

#define MIDIPROP_SET 2147483648

#define MIDIPROP_TEMPO 2

#define MIDIPROP_TIMEDIV 1

#define MIDISTRM_ERROR -2

#define MIM_CLOSE 962

#define MIM_DATA 963

#define MIM_ERROR 965

#define MIM_LONGDATA 964

#define MIM_LONGERROR 966

#define MIM_MOREDATA 972

#define MIM_OPEN 961

#define MIXER_GETCONTROLDETAILSF_LISTTEXT 1

#define MIXER_GETCONTROLDETAILSF_QUERYMASK 15

#define MIXER_GETCONTROLDETAILSF_VALUE 0

#define MIXER_GETLINECONTROLSF_ALL 0

#define MIXER_GETLINECONTROLSF_ONEBYID 1

#define MIXER_GETLINECONTROLSF_ONEBYTYPE 2

#define MIXER_GETLINECONTROLSF_QUERYMASK 15

#define MIXER_GETLINEINFOF_COMPONENTTYPE 3

#define MIXER_GETLINEINFOF_DESTINATION 0

#define MIXER_GETLINEINFOF_LINEID 2

#define MIXER_GETLINEINFOF_QUERYMASK 15

#define MIXER_GETLINEINFOF_SOURCE 1

#define MIXER_GETLINEINFOF_TARGETTYPE 4

#define MIXER_LONG_NAME_CHARS 64

#define MIXER_OBJECTF_AUX 1342177280

#define MIXER_OBJECTF_HANDLE 2147483648

#define MIXER_OBJECTF_HMIDIIN 3221225472

#define MIXER_OBJECTF_HMIDIOUT 2952790016

#define MIXER_OBJECTF_HMIXER 2147483648

#define MIXER_OBJECTF_HWAVEIN 2684354560

#define MIXER_OBJECTF_HWAVEOUT 2415919104

#define MIXER_OBJECTF_MIDIIN 1073741824

#define MIXER_OBJECTF_MIDIOUT 805306368

#define MIXER_OBJECTF_MIXER 0

#define MIXER_OBJECTF_WAVEIN 536870912

#define MIXER_OBJECTF_WAVEOUT 268435456

#define MIXER_SETCONTROLDETAILSF_CUSTOM 1

#define MIXER_SETCONTROLDETAILSF_QUERYMASK 15

#define MIXER_SETCONTROLDETAILSF_VALUE 0

#define MIXER_SHORT_NAME_CHARS 16

#define MIXERCONTROL_CONTROLF_DISABLED 2147483648

#define MIXERCONTROL_CONTROLF_MULTIPLE 2

#define MIXERCONTROL_CONTROLF_UNIFORM 1

#define MIXERCONTROL_CONTROLTYPE_BASS 1342373890

#define MIXERCONTROL_CONTROLTYPE_BASS_BOOST 536945271

#define MIXERCONTROL_CONTROLTYPE_BOOLEAN 536936448

#define MIXERCONTROL_CONTROLTYPE_BOOLEANMETER 268500992

#define MIXERCONTROL_CONTROLTYPE_BUTTON 553713664

#define MIXERCONTROL_CONTROLTYPE_CUSTOM 0

#define MIXERCONTROL_CONTROLTYPE_DECIBELS 805568512

#define MIXERCONTROL_CONTROLTYPE_EQUALIZER 1342373892

#define MIXERCONTROL_CONTROLTYPE_FADER 1342373888

#define MIXERCONTROL_CONTROLTYPE_LOUDNESS 536936452

#define MIXERCONTROL_CONTROLTYPE_MICROTIME 1610809344

#define MIXERCONTROL_CONTROLTYPE_MILLITIME 1627586560

#define MIXERCONTROL_CONTROLTYPE_MIXER 1895890945

#define MIXERCONTROL_CONTROLTYPE_MONO 536936451

#define MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT 1895890944

#define MIXERCONTROL_CONTROLTYPE_MUTE 536936450

#define MIXERCONTROL_CONTROLTYPE_MUX 1879113729

#define MIXERCONTROL_CONTROLTYPE_ONOFF 536936449

#define MIXERCONTROL_CONTROLTYPE_PAN 1073872897

#define MIXERCONTROL_CONTROLTYPE_PEAKMETER 268566529

#define MIXERCONTROL_CONTROLTYPE_PERCENT 805634048

#define MIXERCONTROL_CONTROLTYPE_QSOUNDPAN 1073872898

#define MIXERCONTROL_CONTROLTYPE_SIGNED 805437440

#define MIXERCONTROL_CONTROLTYPE_SIGNEDMETER 268566528

#define MIXERCONTROL_CONTROLTYPE_SINGLESELECT 1879113728

#define MIXERCONTROL_CONTROLTYPE_SLIDER 1073872896

#define MIXERCONTROL_CONTROLTYPE_STEREOENH 536936453

#define MIXERCONTROL_CONTROLTYPE_TREBLE 1342373891

#define MIXERCONTROL_CONTROLTYPE_UNSIGNED 805502976

#define MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER 268632064

#define MIXERCONTROL_CONTROLTYPE_VOLUME 1342373889

#define MIXERCONTROL_CT_CLASS_CUSTOM 0

#define MIXERCONTROL_CT_CLASS_FADER 1342177280

#define MIXERCONTROL_CT_CLASS_LIST 1879048192

#define MIXERCONTROL_CT_CLASS_MASK 4026531840

#define MIXERCONTROL_CT_CLASS_METER 268435456

#define MIXERCONTROL_CT_CLASS_NUMBER 805306368

#define MIXERCONTROL_CT_CLASS_SLIDER 1073741824

#define MIXERCONTROL_CT_CLASS_SWITCH 536870912

#define MIXERCONTROL_CT_CLASS_TIME 1610612736

#define MIXERCONTROL_CT_SC_LIST_MULTIPLE 16777216

#define MIXERCONTROL_CT_SC_LIST_SINGLE 0

#define MIXERCONTROL_CT_SC_METER_POLLED 0

#define MIXERCONTROL_CT_SC_SWITCH_BOOLEAN 0

#define MIXERCONTROL_CT_SC_SWITCH_BUTTON 16777216

#define MIXERCONTROL_CT_SC_TIME_MICROSECS 0

#define MIXERCONTROL_CT_SC_TIME_MILLISECS 16777216

#define MIXERCONTROL_CT_SUBCLASS_MASK 251658240

#define MIXERCONTROL_CT_UNITS_BOOLEAN 65536

#define MIXERCONTROL_CT_UNITS_CUSTOM 0

#define MIXERCONTROL_CT_UNITS_DECIBELS 262144

#define MIXERCONTROL_CT_UNITS_MASK 16711680

#define MIXERCONTROL_CT_UNITS_PERCENT 327680

#define MIXERCONTROL_CT_UNITS_SIGNED 131072

#define MIXERCONTROL_CT_UNITS_UNSIGNED 196608

#define MIXERLINE_COMPONENTTYPE_DST_DIGITAL 1

#define MIXERLINE_COMPONENTTYPE_DST_FIRST 0

#define MIXERLINE_COMPONENTTYPE_DST_HEADPHONES 5

#define MIXERLINE_COMPONENTTYPE_DST_LAST 8

#define MIXERLINE_COMPONENTTYPE_DST_LINE 2

#define MIXERLINE_COMPONENTTYPE_DST_MONITOR 3

#define MIXERLINE_COMPONENTTYPE_DST_SPEAKERS 4

#define MIXERLINE_COMPONENTTYPE_DST_TELEPHONE 6

#define MIXERLINE_COMPONENTTYPE_DST_UNDEFINED 0

#define MIXERLINE_COMPONENTTYPE_DST_VOICEIN 8

#define MIXERLINE_COMPONENTTYPE_DST_WAVEIN 7

#define MIXERLINE_COMPONENTTYPE_SRC_ANALOG 4106

#define MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY 4105

#define MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC 4101

#define MIXERLINE_COMPONENTTYPE_SRC_DIGITAL 4097

#define MIXERLINE_COMPONENTTYPE_SRC_FIRST 4096

#define MIXERLINE_COMPONENTTYPE_SRC_LAST 4106

#define MIXERLINE_COMPONENTTYPE_SRC_LINE 4098

#define MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE 4099

#define MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER 4103

#define MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER 4100

#define MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE 4102

#define MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED 4096

#define MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT 4104

#define MIXERLINE_LINEF_ACTIVE 1

#define MIXERLINE_LINEF_DISCONNECTED 32768

#define MIXERLINE_LINEF_SOURCE 2147483648

#define MIXERLINE_TARGETTYPE_AUX 5

#define MIXERLINE_TARGETTYPE_MIDIIN 4

#define MIXERLINE_TARGETTYPE_MIDIOUT 3

#define MIXERLINE_TARGETTYPE_UNDEFINED 0

#define MIXERLINE_TARGETTYPE_WAVEIN 2

#define MIXERLINE_TARGETTYPE_WAVEOUT 1

#define MIXERR_BASE 1024

#define MIXERR_INVALCONTROL 1025

#define MIXERR_INVALLINE 1024

#define MIXERR_INVALVALUE 1026

#define MIXERR_LASTERROR 1026

#define MM_DRVM_CLOSE 977

#define MM_DRVM_DATA 978

#define MM_DRVM_ERROR 979

#define MM_DRVM_OPEN 976

#define MM_JOY1BUTTONDOWN 949

#define MM_JOY1BUTTONUP 951

#define MM_JOY1MOVE 928

#define MM_JOY1ZMOVE 930

#define MM_JOY2BUTTONDOWN 950

#define MM_JOY2BUTTONUP 952

#define MM_JOY2MOVE 929

#define MM_JOY2ZMOVE 931

#define MM_MCINOTIFY 953

#define MM_MCISIGNAL 971

#define MM_MIM_CLOSE 962

#define MM_MIM_DATA 963

#define MM_MIM_ERROR 965

#define MM_MIM_LONGDATA 964

#define MM_MIM_LONGERROR 966

#define MM_MIM_MOREDATA 972

#define MM_MIM_OPEN 961

#define MM_MIXM_CONTROL_CHANGE 977

#define MM_MIXM_LINE_CHANGE 976

#define MM_MOM_CLOSE 968

#define MM_MOM_DONE 969

#define MM_MOM_OPEN 967

#define MM_MOM_POSITIONCB 970

#define MM_STREAM_CLOSE 981

#define MM_STREAM_DONE 982

#define MM_STREAM_ERROR 983

#define MM_STREAM_OPEN 980

#define MM_WIM_CLOSE 959

#define MM_WIM_DATA 960

#define MM_WIM_OPEN 958

#define MM_WOM_CLOSE 956

#define MM_WOM_DONE 957

#define MM_WOM_OPEN 955

#define MMIO_ALLOCBUF 65536

#define MMIO_COMPAT 0

#define MMIO_CREATE 4096

#define MMIO_CREATELIST 64

#define MMIO_CREATERIFF 32

#define MMIO_DEFAULTBUFFER 8192

#define MMIO_DELETE 512

#define MMIO_DENYNONE 64

#define MMIO_DENYREAD 48

#define MMIO_DENYWRITE 32

#define MMIO_DIRTY 268435456

#define MMIO_EMPTYBUF 16

#define MMIO_EXCLUSIVE 16

#define MMIO_EXIST 16384

#define MMIO_FHOPEN 16

#define MMIO_FINDCHUNK 16

#define MMIO_FINDLIST 64

#define MMIO_FINDPROC 262144

#define MMIO_FINDRIFF 32

#define MMIO_GETTEMP 131072

#define MMIO_GLOBALPROC 268435456

#define MMIO_INSTALLPROC 65536

#define MMIO_PARSE 256

#define MMIO_READ 0

#define MMIO_READWRITE 2

#define MMIO_REMOVEPROC 131072

#define MMIO_RWMODE 3

#define MMIO_SHAREMODE 112

#define MMIO_TOUPPER 16

#define MMIO_UNICODEPROC 16777216

#define MMIO_WRITE 1

#define MMIOERR_ACCESSDENIED 268

#define MMIOERR_BASE 256

#define MMIOERR_CANNOTCLOSE 260

#define MMIOERR_CANNOTEXPAND 264

#define MMIOERR_CANNOTOPEN 259

#define MMIOERR_CANNOTREAD 261

#define MMIOERR_CANNOTSEEK 263

#define MMIOERR_CANNOTWRITE 262

#define MMIOERR_CHUNKNOTFOUND 265

#define MMIOERR_FILENOTFOUND 257

#define MMIOERR_INVALIDFILE 272

#define MMIOERR_NETWORKERROR 270

#define MMIOERR_OUTOFMEMORY 258

#define MMIOERR_PATHNOTFOUND 267

#define MMIOERR_SHARINGVIOLATION 269

#define MMIOERR_TOOMANYOPENFILES 271

#define MMIOERR_UNBUFFERED 266

#define MMIOM_CLOSE 4

#define MMIOM_OPEN 3

#define MMIOM_READ 0

#define MMIOM_RENAME 6

#define MMIOM_SEEK 2

#define MMIOM_USER 32768

#define MMIOM_WRITE 1

#define MMIOM_WRITEFLUSH 5

#define MMSYSERR_ALLOCATED 4

#define MMSYSERR_BADDB 14

#define MMSYSERR_BADDEVICEID 2

#define MMSYSERR_BADERRNUM 9

#define MMSYSERR_BASE 0

#define MMSYSERR_DELETEERROR 18

#define MMSYSERR_ERROR 1

#define MMSYSERR_HANDLEBUSY 12

#define MMSYSERR_INVALFLAG 10

#define MMSYSERR_INVALHANDLE 5

#define MMSYSERR_INVALIDALIAS 13

#define MMSYSERR_INVALPARAM 11

#define MMSYSERR_KEYNOTFOUND 15

#define MMSYSERR_LASTERROR 21

#define MMSYSERR_MOREDATA 21

#define MMSYSERR_NODRIVER 6

#define MMSYSERR_NODRIVERCB 20

#define MMSYSERR_NOERROR 0

#define MMSYSERR_NOMEM 7

#define MMSYSERR_NOTENABLED 3

#define MMSYSERR_NOTSUPPORTED 8

#define MMSYSERR_READERROR 16

#define MMSYSERR_VALNOTFOUND 19

#define MMSYSERR_WRITEERROR 17

#define MOD_FMSYNTH 4

#define MOD_MAPPER 5

#define MOD_MIDIPORT 1

#define MOD_SQSYNTH 3

#define MOD_SWSYNTH 7

#define MOD_SYNTH 2

#define MOD_WAVETABLE 6

#define MOM_CLOSE 968

#define MOM_DONE 969

#define MOM_OPEN 967

#define MOM_POSITIONCB 970

#define NEWTRANSPARENT 3

#define QUERYROPSUPPORT 40

#define SEEK_CUR 1

#define SEEK_END 2

#define SEEK_SET 0

#define SELECTDIB 41

#define SND_ALIAS 65536

#define SND_ALIAS_ID 1114112

#define SND_ALIAS_START 0

#define SND_APPLICATION 128

#define SND_ASYNC 1

#define SND_FILENAME 131072

#define SND_LOOP 8

#define SND_MEMORY 4

#define SND_NODEFAULT 2

#define SND_NOSTOP 16

#define SND_NOWAIT 8192

#define SND_PURGE 64

#define SND_RESOURCE 262148

#define SND_RING 1048576

#define SND_SENTRY 524288

#define SND_SYNC 0

#define SND_SYSTEM 2097152

#define TIME_BYTES 4

#define TIME_CALLBACK_EVENT_PULSE 32

#define TIME_CALLBACK_EVENT_SET 16

#define TIME_CALLBACK_FUNCTION 0

#define TIME_KILL_SYNCHRONOUS 256

#define TIME_MIDI 16

#define TIME_MS 1

#define TIME_ONESHOT 0

#define TIME_PERIODIC 1

#define TIME_SAMPLES 2

#define TIME_SMPTE 8

#define TIME_TICKS 32

#define TIMERR_BASE 96

#define TIMERR_NOCANDO 97

#define TIMERR_NOERROR 0

#define TIMERR_STRUCT 129

#define WAVE_ALLOWSYNC 2

#define WAVE_FORMAT_1M08 1

#define WAVE_FORMAT_1M16 4

#define WAVE_FORMAT_1S08 2

#define WAVE_FORMAT_1S16 8

#define WAVE_FORMAT_2M08 16

#define WAVE_FORMAT_2M16 64

#define WAVE_FORMAT_2S08 32

#define WAVE_FORMAT_2S16 128

#define WAVE_FORMAT_44M08 256

#define WAVE_FORMAT_44M16 1024

#define WAVE_FORMAT_44S08 512

#define WAVE_FORMAT_44S16 2048

#define WAVE_FORMAT_48M08 4096

#define WAVE_FORMAT_48M16 16384

#define WAVE_FORMAT_48S08 8192

#define WAVE_FORMAT_48S16 32768

#define WAVE_FORMAT_4M08 256

#define WAVE_FORMAT_4M16 1024

#define WAVE_FORMAT_4S08 512

#define WAVE_FORMAT_4S16 2048

#define WAVE_FORMAT_96M08 65536

#define WAVE_FORMAT_96M16 262144

#define WAVE_FORMAT_96S08 131072

#define WAVE_FORMAT_96S16 524288

#define WAVE_FORMAT_DIRECT 8

#define WAVE_FORMAT_DIRECT_QUERY 9

#define WAVE_FORMAT_PCM 1

#define WAVE_FORMAT_QUERY 1

#define WAVE_INVALIDFORMAT 0

#define WAVE_MAPPED 4

#define WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE 16

#define WAVE_MAPPER -1

#define WAVECAPS_LRVOLUME 8

#define WAVECAPS_PITCH 1

#define WAVECAPS_PLAYBACKRATE 2

#define WAVECAPS_SAMPLEACCURATE 32

#define WAVECAPS_SYNC 16

#define WAVECAPS_VOLUME 4

#define WAVERR_BADFORMAT 32

#define WAVERR_BASE 32

#define WAVERR_LASTERROR 35

#define WAVERR_STILLPLAYING 33

#define WAVERR_SYNC 35

#define WAVERR_UNPREPARED 34

#define WHDR_BEGINLOOP 4

#define WHDR_DONE 1

#define WHDR_ENDLOOP 8

#define WHDR_INQUEUE 16

#define WHDR_PREPARED 2

#define WIM_CLOSE 959

#define WIM_DATA 960

#define WIM_OPEN 958

#define WOM_CLOSE 956

#define WOM_DONE 957

#define WOM_OPEN 955

typedef struct _MMCKINFO _MMCKINFO, *P_MMCKINFO;

typedef DWORD FOURCC;

struct _MMCKINFO {
    FOURCC ckid;
    DWORD cksize;
    FOURCC fccType;
    DWORD dwDataOffset;
    DWORD dwFlags;
};

typedef struct _MMIOINFO _MMIOINFO, *P_MMIOINFO;

typedef LRESULT (MMIOPROC)(LPSTR, UINT, LPARAM, LPARAM);

typedef MMIOPROC * LPMMIOPROC;

typedef struct HTASK__ HTASK__, *PHTASK__;

typedef struct HTASK__ * HTASK;

typedef char * HPSTR;

typedef struct HMMIO__ HMMIO__, *PHMMIO__;

typedef struct HMMIO__ * HMMIO;

struct HMMIO__ {
    int unused;
};

struct _MMIOINFO {
    DWORD dwFlags;
    FOURCC fccIOProc;
    LPMMIOPROC pIOProc;
    UINT wErrorRet;
    HTASK htask;
    LONG cchBuffer;
    HPSTR pchBuffer;
    HPSTR pchNext;
    HPSTR pchEndRead;
    HPSTR pchEndWrite;
    LONG lBufOffset;
    LONG lDiskOffset;
    DWORD adwInfo[3];
    DWORD dwReserved1;
    DWORD dwReserved2;
    HMMIO hmmio;
};

struct HTASK__ {
    int unused;
};

typedef struct _struct_1021 _struct_1021, *P_struct_1021;

struct _struct_1021 {
    BYTE hour;
    BYTE min;
    BYTE sec;
    BYTE frame;
    BYTE fps;
    BYTE dummy;
    BYTE pad[2];
};

typedef struct _struct_1022 _struct_1022, *P_struct_1022;

struct _struct_1022 {
    DWORD songptrpos;
};

typedef struct _struct_1081 _struct_1081, *P_struct_1081;

typedef UINT MMVERSION;

struct _struct_1081 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
};

typedef struct _struct_1083 _struct_1083, *P_struct_1083;

struct _struct_1083 {
    DWORD dwType;
    DWORD dwDeviceID;
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
};

typedef struct _struct_1086 _struct_1086, *P_struct_1086;

struct _struct_1086 {
    LONG lMinimum;
    LONG lMaximum;
};

typedef struct _struct_1087 _struct_1087, *P_struct_1087;

struct _struct_1087 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

typedef struct _struct_1091 _struct_1091, *P_struct_1091;

struct _struct_1091 {
    LONG lMinimum;
    LONG lMaximum;
};

typedef struct _struct_1092 _struct_1092, *P_struct_1092;

struct _struct_1092 {
    DWORD dwMinimum;
    DWORD dwMaximum;
};

typedef union _union_1020 _union_1020, *P_union_1020;

union _union_1020 {
    DWORD ms;
    DWORD sample;
    DWORD cb;
    DWORD ticks;
    struct _struct_1021 smpte;
    struct _struct_1022 midi;
};

typedef union _union_1085 _union_1085, *P_union_1085;

union _union_1085 {
    struct _struct_1086 s;
    struct _struct_1087 s2;
    DWORD dwReserved[6];
};

typedef union _union_1088 _union_1088, *P_union_1088;

union _union_1088 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

typedef union _union_1090 _union_1090, *P_union_1090;

union _union_1090 {
    struct _struct_1091 s;
    struct _struct_1092 s2;
    DWORD dwReserved[6];
};

typedef union _union_1093 _union_1093, *P_union_1093;

union _union_1093 {
    DWORD cSteps;
    DWORD cbCustomData;
    DWORD dwReserved[6];
};

typedef union _union_1095 _union_1095, *P_union_1095;

union _union_1095 {
    DWORD dwControlID;
    DWORD dwControlType;
};

typedef union _union_1097 _union_1097, *P_union_1097;

union _union_1097 {
    DWORD dwControlID;
    DWORD dwControlType;
};

typedef union _union_1099 _union_1099, *P_union_1099;

union _union_1099 {
    HWND hwndOwner;
    DWORD cMultipleItems;
};

typedef struct tagAUXCAPSA tagAUXCAPSA, *PtagAUXCAPSA;

typedef struct tagAUXCAPSA AUXCAPSA;

typedef AUXCAPSA AUXCAPS;

struct tagAUXCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagAUXCAPS2A tagAUXCAPS2A, *PtagAUXCAPS2A;

typedef struct tagAUXCAPS2A AUXCAPS2A;

typedef AUXCAPS2A AUXCAPS2;

struct tagAUXCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagAUXCAPS2W tagAUXCAPS2W, *PtagAUXCAPS2W;

typedef struct tagAUXCAPS2W AUXCAPS2W;

struct tagAUXCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagAUXCAPSW tagAUXCAPSW, *PtagAUXCAPSW;

typedef struct tagAUXCAPSW AUXCAPSW;

struct tagAUXCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct HDRVR__ HDRVR__, *PHDRVR__;

typedef struct HDRVR__ * HDRVR;

typedef LRESULT (* DRIVERPROC)(DWORD_PTR, HDRVR, UINT, LPARAM, LPARAM);

struct HDRVR__ {
    int unused;
};

typedef void (DRVCALLBACK)(HDRVR, UINT, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef struct tagDRVCONFIGINFO tagDRVCONFIGINFO, *PtagDRVCONFIGINFO;

typedef struct tagDRVCONFIGINFO DRVCONFIGINFO;

struct tagDRVCONFIGINFO {
    DWORD dwDCISize;
    LPCWSTR lpszDCISectionName;
    LPCWSTR lpszDCIAliasName;
};

typedef struct DRVCONFIGINFOEX DRVCONFIGINFOEX, *PDRVCONFIGINFOEX;

struct DRVCONFIGINFOEX {
    DWORD dwDCISize;
    LPCWSTR lpszDCISectionName;
    LPCWSTR lpszDCIAliasName;
    DWORD dnDevNode;
};

typedef struct HMIDI__ HMIDI__, *PHMIDI__;

typedef struct HMIDI__ * HMIDI;

struct HMIDI__ {
    int unused;
};

typedef struct HMIDIIN__ HMIDIIN__, *PHMIDIIN__;

typedef struct HMIDIIN__ * HMIDIIN;

struct HMIDIIN__ {
    int unused;
};

typedef struct HMIDIOUT__ HMIDIOUT__, *PHMIDIOUT__;

typedef struct HMIDIOUT__ * HMIDIOUT;

struct HMIDIOUT__ {
    int unused;
};

typedef struct HMIDISTRM__ HMIDISTRM__, *PHMIDISTRM__;

typedef struct HMIDISTRM__ * HMIDISTRM;

struct HMIDISTRM__ {
    int unused;
};

typedef struct HMIXER__ HMIXER__, *PHMIXER__;

typedef struct HMIXER__ * HMIXER;

struct HMIXER__ {
    int unused;
};

typedef struct HMIXEROBJ__ HMIXEROBJ__, *PHMIXEROBJ__;

typedef struct HMIXEROBJ__ * HMIXEROBJ;

struct HMIXEROBJ__ {
    int unused;
};

typedef struct HWAVE__ HWAVE__, *PHWAVE__;

typedef struct HWAVE__ * HWAVE;

struct HWAVE__ {
    int unused;
};

typedef struct HWAVEIN__ HWAVEIN__, *PHWAVEIN__;

typedef struct HWAVEIN__ * HWAVEIN;

struct HWAVEIN__ {
    int unused;
};

typedef struct HWAVEOUT__ HWAVEOUT__, *PHWAVEOUT__;

typedef struct HWAVEOUT__ * HWAVEOUT;

struct HWAVEOUT__ {
    int unused;
};

typedef struct tagJOYCAPSA tagJOYCAPSA, *PtagJOYCAPSA;

typedef struct tagJOYCAPSA JOYCAPSA;

typedef JOYCAPSA JOYCAPS;

struct tagJOYCAPSA {
    WORD wMid;
    WORD wPid;
    CHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
};

typedef struct tagJOYCAPS2A tagJOYCAPS2A, *PtagJOYCAPS2A;

typedef struct tagJOYCAPS2A JOYCAPS2A;

typedef JOYCAPS2A JOYCAPS2;

struct tagJOYCAPS2A {
    WORD wMid;
    WORD wPid;
    CHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    CHAR szRegKey[32];
    CHAR szOEMVxD[260];
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagJOYCAPS2W tagJOYCAPS2W, *PtagJOYCAPS2W;

typedef struct tagJOYCAPS2W JOYCAPS2W;

struct tagJOYCAPS2W {
    WORD wMid;
    WORD wPid;
    WCHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagJOYCAPSW tagJOYCAPSW, *PtagJOYCAPSW;

typedef struct tagJOYCAPSW JOYCAPSW;

struct tagJOYCAPSW {
    WORD wMid;
    WORD wPid;
    WCHAR szPname[32];
    UINT wXmin;
    UINT wXmax;
    UINT wYmin;
    UINT wYmax;
    UINT wZmin;
    UINT wZmax;
    UINT wNumButtons;
    UINT wPeriodMin;
    UINT wPeriodMax;
    UINT wRmin;
    UINT wRmax;
    UINT wUmin;
    UINT wUmax;
    UINT wVmin;
    UINT wVmax;
    UINT wCaps;
    UINT wMaxAxes;
    UINT wNumAxes;
    UINT wMaxButtons;
    WCHAR szRegKey[32];
    WCHAR szOEMVxD[260];
};

typedef struct joyinfo_tag joyinfo_tag, *Pjoyinfo_tag;

typedef struct joyinfo_tag JOYINFO;

struct joyinfo_tag {
    UINT wXpos;
    UINT wYpos;
    UINT wZpos;
    UINT wButtons;
};

typedef struct joyinfoex_tag joyinfoex_tag, *Pjoyinfoex_tag;

typedef struct joyinfoex_tag JOYINFOEX;

struct joyinfoex_tag {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwXpos;
    DWORD dwYpos;
    DWORD dwZpos;
    DWORD dwRpos;
    DWORD dwUpos;
    DWORD dwVpos;
    DWORD dwButtons;
    DWORD dwButtonNumber;
    DWORD dwPOV;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef WORD KEYARRAY[128];

typedef struct tagAUXCAPSA * LPAUXCAPSA;

typedef LPAUXCAPSA LPAUXCAPS;

typedef struct tagAUXCAPS2A * LPAUXCAPS2A;

typedef LPAUXCAPS2A LPAUXCAPS2;

typedef struct tagAUXCAPS2W * LPAUXCAPS2W;

typedef struct tagAUXCAPSW * LPAUXCAPSW;

typedef struct _MMCKINFO MMCKINFO;

typedef MMCKINFO * LPCMMCKINFO;

typedef struct _MMIOINFO MMIOINFO;

typedef MMIOINFO * LPCMMIOINFO;

typedef WAVEFORMATEX * LPCWAVEFORMATEX;

typedef DRVCALLBACK * LPDRVCALLBACK;

typedef struct tagDRVCONFIGINFO * LPDRVCONFIGINFO;

typedef struct DRVCONFIGINFOEX * LPDRVCONFIGINFOEX;

typedef HMIDI * LPHMIDI;

typedef HMIDIIN * LPHMIDIIN;

typedef HMIDIOUT * LPHMIDIOUT;

typedef HMIDISTRM * LPHMIDISTRM;

typedef HMIXER * LPHMIXER;

typedef HMIXEROBJ * LPHMIXEROBJ;

typedef HWAVEIN * LPHWAVEIN;

typedef HWAVEOUT * LPHWAVEOUT;

typedef struct tagJOYCAPSA * LPJOYCAPSA;

typedef LPJOYCAPSA LPJOYCAPS;

typedef struct tagJOYCAPS2A * LPJOYCAPS2A;

typedef LPJOYCAPS2A LPJOYCAPS2;

typedef struct tagJOYCAPS2W * LPJOYCAPS2W;

typedef struct tagJOYCAPSW * LPJOYCAPSW;

typedef struct joyinfo_tag * LPJOYINFO;

typedef struct joyinfoex_tag * LPJOYINFOEX;

typedef WORD * LPKEYARRAY;

typedef struct tagMCI_ANIM_OPEN_PARMSA tagMCI_ANIM_OPEN_PARMSA, *PtagMCI_ANIM_OPEN_PARMSA;

typedef struct tagMCI_ANIM_OPEN_PARMSA * LPMCI_ANIM_OPEN_PARMSA;

typedef LPMCI_ANIM_OPEN_PARMSA LPMCI_ANIM_OPEN_PARMS;

typedef UINT MCIDEVICEID;

struct tagMCI_ANIM_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMCI_ANIM_OPEN_PARMSW tagMCI_ANIM_OPEN_PARMSW, *PtagMCI_ANIM_OPEN_PARMSW;

typedef struct tagMCI_ANIM_OPEN_PARMSW * LPMCI_ANIM_OPEN_PARMSW;

struct tagMCI_ANIM_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMCI_ANIM_PLAY_PARMS tagMCI_ANIM_PLAY_PARMS, *PtagMCI_ANIM_PLAY_PARMS;

typedef struct tagMCI_ANIM_PLAY_PARMS * LPMCI_ANIM_PLAY_PARMS;

struct tagMCI_ANIM_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
    DWORD dwSpeed;
};

typedef struct tagMCI_ANIM_RECT_PARMS tagMCI_ANIM_RECT_PARMS, *PtagMCI_ANIM_RECT_PARMS;

typedef struct tagMCI_ANIM_RECT_PARMS MCI_ANIM_RECT_PARMS;

typedef MCI_ANIM_RECT_PARMS * LPMCI_ANIM_RECT_PARMS;

struct tagMCI_ANIM_RECT_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
};

typedef struct tagMCI_ANIM_STEP_PARMS tagMCI_ANIM_STEP_PARMS, *PtagMCI_ANIM_STEP_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS * LPMCI_ANIM_STEP_PARMS;

struct tagMCI_ANIM_STEP_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrames;
};

typedef struct tagMCI_ANIM_UPDATE_PARMS tagMCI_ANIM_UPDATE_PARMS, *PtagMCI_ANIM_UPDATE_PARMS;

typedef struct tagMCI_ANIM_UPDATE_PARMS * LPMCI_ANIM_UPDATE_PARMS;

struct tagMCI_ANIM_UPDATE_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
    HDC hDC;
};

typedef struct tagMCI_ANIM_WINDOW_PARMSA tagMCI_ANIM_WINDOW_PARMSA, *PtagMCI_ANIM_WINDOW_PARMSA;

typedef struct tagMCI_ANIM_WINDOW_PARMSA * LPMCI_ANIM_WINDOW_PARMSA;

typedef LPMCI_ANIM_WINDOW_PARMSA LPMCI_ANIM_WINDOW_PARMS;

struct tagMCI_ANIM_WINDOW_PARMSA {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCSTR lpstrText;
};

typedef struct tagMCI_ANIM_WINDOW_PARMSW tagMCI_ANIM_WINDOW_PARMSW, *PtagMCI_ANIM_WINDOW_PARMSW;

typedef struct tagMCI_ANIM_WINDOW_PARMSW * LPMCI_ANIM_WINDOW_PARMSW;

struct tagMCI_ANIM_WINDOW_PARMSW {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCWSTR lpstrText;
};

typedef struct tagMCI_BREAK_PARMS tagMCI_BREAK_PARMS, *PtagMCI_BREAK_PARMS;

typedef struct tagMCI_BREAK_PARMS * LPMCI_BREAK_PARMS;

struct tagMCI_BREAK_PARMS {
    DWORD_PTR dwCallback;
    int nVirtKey;
    HWND hwndBreak;
};

typedef struct tagMCI_GENERIC_PARMS tagMCI_GENERIC_PARMS, *PtagMCI_GENERIC_PARMS;

typedef struct tagMCI_GENERIC_PARMS * LPMCI_GENERIC_PARMS;

struct tagMCI_GENERIC_PARMS {
    DWORD_PTR dwCallback;
};

typedef struct tagMCI_GETDEVCAPS_PARMS tagMCI_GETDEVCAPS_PARMS, *PtagMCI_GETDEVCAPS_PARMS;

typedef struct tagMCI_GETDEVCAPS_PARMS * LPMCI_GETDEVCAPS_PARMS;

struct tagMCI_GETDEVCAPS_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwReturn;
    DWORD dwItem;
};

typedef struct tagMCI_INFO_PARMSA tagMCI_INFO_PARMSA, *PtagMCI_INFO_PARMSA;

typedef struct tagMCI_INFO_PARMSA * LPMCI_INFO_PARMSA;

typedef LPMCI_INFO_PARMSA LPMCI_INFO_PARMS;

struct tagMCI_INFO_PARMSA {
    DWORD_PTR dwCallback;
    LPSTR lpstrReturn;
    DWORD dwRetSize;
};

typedef struct tagMCI_INFO_PARMSW tagMCI_INFO_PARMSW, *PtagMCI_INFO_PARMSW;

typedef struct tagMCI_INFO_PARMSW * LPMCI_INFO_PARMSW;

struct tagMCI_INFO_PARMSW {
    DWORD_PTR dwCallback;
    LPWSTR lpstrReturn;
    DWORD dwRetSize;
};

typedef struct tagMCI_LOAD_PARMSA tagMCI_LOAD_PARMSA, *PtagMCI_LOAD_PARMSA;

typedef struct tagMCI_LOAD_PARMSA * LPMCI_LOAD_PARMSA;

typedef LPMCI_LOAD_PARMSA LPMCI_LOAD_PARMS;

struct tagMCI_LOAD_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
};

typedef struct tagMCI_LOAD_PARMSW tagMCI_LOAD_PARMSW, *PtagMCI_LOAD_PARMSW;

typedef struct tagMCI_LOAD_PARMSW * LPMCI_LOAD_PARMSW;

struct tagMCI_LOAD_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
};

typedef struct tagMCI_OPEN_PARMSA tagMCI_OPEN_PARMSA, *PtagMCI_OPEN_PARMSA;

typedef struct tagMCI_OPEN_PARMSA * LPMCI_OPEN_PARMSA;

typedef LPMCI_OPEN_PARMSA LPMCI_OPEN_PARMS;

struct tagMCI_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
};

typedef struct tagMCI_OPEN_PARMSW tagMCI_OPEN_PARMSW, *PtagMCI_OPEN_PARMSW;

typedef struct tagMCI_OPEN_PARMSW * LPMCI_OPEN_PARMSW;

struct tagMCI_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
};

typedef struct tagMCI_OVLY_LOAD_PARMSA tagMCI_OVLY_LOAD_PARMSA, *PtagMCI_OVLY_LOAD_PARMSA;

typedef struct tagMCI_OVLY_LOAD_PARMSA * LPMCI_OVLY_LOAD_PARMSA;

typedef LPMCI_OVLY_LOAD_PARMSA LPMCI_OVLY_LOAD_PARMS;

struct tagMCI_OVLY_LOAD_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_LOAD_PARMSW tagMCI_OVLY_LOAD_PARMSW, *PtagMCI_OVLY_LOAD_PARMSW;

typedef struct tagMCI_OVLY_LOAD_PARMSW * LPMCI_OVLY_LOAD_PARMSW;

struct tagMCI_OVLY_LOAD_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_OPEN_PARMSA tagMCI_OVLY_OPEN_PARMSA, *PtagMCI_OVLY_OPEN_PARMSA;

typedef struct tagMCI_OVLY_OPEN_PARMSA * LPMCI_OVLY_OPEN_PARMSA;

typedef LPMCI_OVLY_OPEN_PARMSA LPMCI_OVLY_OPEN_PARMS;

struct tagMCI_OVLY_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMCI_OVLY_OPEN_PARMSW tagMCI_OVLY_OPEN_PARMSW, *PtagMCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_OPEN_PARMSW * LPMCI_OVLY_OPEN_PARMSW;

struct tagMCI_OVLY_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwStyle;
    HWND hWndParent;
};

typedef struct tagMCI_OVLY_RECT_PARMS tagMCI_OVLY_RECT_PARMS, *PtagMCI_OVLY_RECT_PARMS;

typedef struct tagMCI_OVLY_RECT_PARMS * LPMCI_OVLY_RECT_PARMS;

struct tagMCI_OVLY_RECT_PARMS {
    DWORD_PTR dwCallback;
    RECT rc;
};

typedef struct tagMCI_OVLY_SAVE_PARMSA tagMCI_OVLY_SAVE_PARMSA, *PtagMCI_OVLY_SAVE_PARMSA;

typedef struct tagMCI_OVLY_SAVE_PARMSA * LPMCI_OVLY_SAVE_PARMSA;

typedef LPMCI_OVLY_SAVE_PARMSA LPMCI_OVLY_SAVE_PARMS;

struct tagMCI_OVLY_SAVE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_SAVE_PARMSW tagMCI_OVLY_SAVE_PARMSW, *PtagMCI_OVLY_SAVE_PARMSW;

typedef struct tagMCI_OVLY_SAVE_PARMSW * LPMCI_OVLY_SAVE_PARMSW;

struct tagMCI_OVLY_SAVE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
    RECT rc;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSA tagMCI_OVLY_WINDOW_PARMSA, *PtagMCI_OVLY_WINDOW_PARMSA;

typedef struct tagMCI_OVLY_WINDOW_PARMSA * LPMCI_OVLY_WINDOW_PARMSA;

typedef LPMCI_OVLY_WINDOW_PARMSA LPMCI_OVLY_WINDOW_PARMS;

struct tagMCI_OVLY_WINDOW_PARMSA {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCSTR lpstrText;
};

typedef struct tagMCI_OVLY_WINDOW_PARMSW tagMCI_OVLY_WINDOW_PARMSW, *PtagMCI_OVLY_WINDOW_PARMSW;

typedef struct tagMCI_OVLY_WINDOW_PARMSW * LPMCI_OVLY_WINDOW_PARMSW;

struct tagMCI_OVLY_WINDOW_PARMSW {
    DWORD_PTR dwCallback;
    HWND hWnd;
    UINT nCmdShow;
    LPCWSTR lpstrText;
};

typedef struct tagMCI_PLAY_PARMS tagMCI_PLAY_PARMS, *PtagMCI_PLAY_PARMS;

typedef struct tagMCI_PLAY_PARMS * LPMCI_PLAY_PARMS;

struct tagMCI_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMCI_RECORD_PARMS tagMCI_RECORD_PARMS, *PtagMCI_RECORD_PARMS;

typedef struct tagMCI_RECORD_PARMS * LPMCI_RECORD_PARMS;

struct tagMCI_RECORD_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMCI_SAVE_PARMSA tagMCI_SAVE_PARMSA, *PtagMCI_SAVE_PARMSA;

typedef struct tagMCI_SAVE_PARMSA * LPMCI_SAVE_PARMSA;

typedef LPMCI_SAVE_PARMSA LPMCI_SAVE_PARMS;

struct tagMCI_SAVE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpfilename;
};

typedef struct tagMCI_SAVE_PARMSW tagMCI_SAVE_PARMSW, *PtagMCI_SAVE_PARMSW;

typedef struct tagMCI_SAVE_PARMSW * LPMCI_SAVE_PARMSW;

struct tagMCI_SAVE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpfilename;
};

typedef struct tagMCI_SEEK_PARMS tagMCI_SEEK_PARMS, *PtagMCI_SEEK_PARMS;

typedef struct tagMCI_SEEK_PARMS * LPMCI_SEEK_PARMS;

struct tagMCI_SEEK_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTo;
};

typedef struct tagMCI_SEQ_SET_PARMS tagMCI_SEQ_SET_PARMS, *PtagMCI_SEQ_SET_PARMS;

typedef struct tagMCI_SEQ_SET_PARMS * LPMCI_SEQ_SET_PARMS;

struct tagMCI_SEQ_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
    DWORD dwTempo;
    DWORD dwPort;
    DWORD dwSlave;
    DWORD dwMaster;
    DWORD dwOffset;
};

typedef struct tagMCI_SET_PARMS tagMCI_SET_PARMS, *PtagMCI_SET_PARMS;

typedef struct tagMCI_SET_PARMS * LPMCI_SET_PARMS;

struct tagMCI_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
};

typedef struct tagMCI_STATUS_PARMS tagMCI_STATUS_PARMS, *PtagMCI_STATUS_PARMS;

typedef struct tagMCI_STATUS_PARMS * LPMCI_STATUS_PARMS;

struct tagMCI_STATUS_PARMS {
    DWORD_PTR dwCallback;
    DWORD_PTR dwReturn;
    DWORD dwItem;
    DWORD dwTrack;
};

typedef struct tagMCI_SYSINFO_PARMSA tagMCI_SYSINFO_PARMSA, *PtagMCI_SYSINFO_PARMSA;

typedef struct tagMCI_SYSINFO_PARMSA * LPMCI_SYSINFO_PARMSA;

typedef LPMCI_SYSINFO_PARMSA LPMCI_SYSINFO_PARMS;

struct tagMCI_SYSINFO_PARMSA {
    DWORD_PTR dwCallback;
    LPSTR lpstrReturn;
    DWORD dwRetSize;
    DWORD dwNumber;
    UINT wDeviceType;
};

typedef struct tagMCI_SYSINFO_PARMSW tagMCI_SYSINFO_PARMSW, *PtagMCI_SYSINFO_PARMSW;

typedef struct tagMCI_SYSINFO_PARMSW * LPMCI_SYSINFO_PARMSW;

struct tagMCI_SYSINFO_PARMSW {
    DWORD_PTR dwCallback;
    LPWSTR lpstrReturn;
    DWORD dwRetSize;
    DWORD dwNumber;
    UINT wDeviceType;
};

typedef struct tagMCI_VD_ESCAPE_PARMSA tagMCI_VD_ESCAPE_PARMSA, *PtagMCI_VD_ESCAPE_PARMSA;

typedef struct tagMCI_VD_ESCAPE_PARMSA * LPMCI_VD_ESCAPE_PARMSA;

typedef LPMCI_VD_ESCAPE_PARMSA LPMCI_VD_ESCAPE_PARMS;

struct tagMCI_VD_ESCAPE_PARMSA {
    DWORD_PTR dwCallback;
    LPCSTR lpstrCommand;
};

typedef struct tagMCI_VD_ESCAPE_PARMSW tagMCI_VD_ESCAPE_PARMSW, *PtagMCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_VD_ESCAPE_PARMSW * LPMCI_VD_ESCAPE_PARMSW;

struct tagMCI_VD_ESCAPE_PARMSW {
    DWORD_PTR dwCallback;
    LPCWSTR lpstrCommand;
};

typedef struct tagMCI_VD_PLAY_PARMS tagMCI_VD_PLAY_PARMS, *PtagMCI_VD_PLAY_PARMS;

typedef struct tagMCI_VD_PLAY_PARMS * LPMCI_VD_PLAY_PARMS;

struct tagMCI_VD_PLAY_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
    DWORD dwSpeed;
};

typedef struct tagMCI_VD_STEP_PARMS tagMCI_VD_STEP_PARMS, *PtagMCI_VD_STEP_PARMS;

typedef struct tagMCI_VD_STEP_PARMS * LPMCI_VD_STEP_PARMS;

struct tagMCI_VD_STEP_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrames;
};

typedef struct tagMCI_WAVE_DELETE_PARMS tagMCI_WAVE_DELETE_PARMS, *PtagMCI_WAVE_DELETE_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS * LPMCI_WAVE_DELETE_PARMS;

struct tagMCI_WAVE_DELETE_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwFrom;
    DWORD dwTo;
};

typedef struct tagMCI_WAVE_OPEN_PARMSA tagMCI_WAVE_OPEN_PARMSA, *PtagMCI_WAVE_OPEN_PARMSA;

typedef struct tagMCI_WAVE_OPEN_PARMSA * LPMCI_WAVE_OPEN_PARMSA;

typedef LPMCI_WAVE_OPEN_PARMSA LPMCI_WAVE_OPEN_PARMS;

struct tagMCI_WAVE_OPEN_PARMSA {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCSTR lpstrDeviceType;
    LPCSTR lpstrElementName;
    LPCSTR lpstrAlias;
    DWORD dwBufferSeconds;
};

typedef struct tagMCI_WAVE_OPEN_PARMSW tagMCI_WAVE_OPEN_PARMSW, *PtagMCI_WAVE_OPEN_PARMSW;

typedef struct tagMCI_WAVE_OPEN_PARMSW * LPMCI_WAVE_OPEN_PARMSW;

struct tagMCI_WAVE_OPEN_PARMSW {
    DWORD_PTR dwCallback;
    MCIDEVICEID wDeviceID;
    LPCWSTR lpstrDeviceType;
    LPCWSTR lpstrElementName;
    LPCWSTR lpstrAlias;
    DWORD dwBufferSeconds;
};

typedef struct tagMCI_WAVE_SET_PARMS tagMCI_WAVE_SET_PARMS, *PtagMCI_WAVE_SET_PARMS;

typedef struct tagMCI_WAVE_SET_PARMS * LPMCI_WAVE_SET_PARMS;

struct tagMCI_WAVE_SET_PARMS {
    DWORD_PTR dwCallback;
    DWORD dwTimeFormat;
    DWORD dwAudio;
    UINT wInput;
    UINT wOutput;
    WORD wFormatTag;
    WORD wReserved2;
    WORD nChannels;
    WORD wReserved3;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
    WORD wReserved4;
    WORD wBitsPerSample;
    WORD wReserved5;
};

typedef DRVCALLBACK MIDICALLBACK;

typedef MIDICALLBACK * LPMIDICALLBACK;

typedef struct midihdr_tag midihdr_tag, *Pmidihdr_tag;

typedef struct midihdr_tag * LPMIDIHDR;

struct midihdr_tag {
    LPSTR lpData;
    DWORD dwBufferLength;
    DWORD dwBytesRecorded;
    DWORD_PTR dwUser;
    DWORD dwFlags;
    struct midihdr_tag * lpNext;
    DWORD_PTR reserved;
    DWORD dwOffset;
    DWORD_PTR dwReserved[8];
};

typedef struct tagMIDIINCAPSA tagMIDIINCAPSA, *PtagMIDIINCAPSA;

typedef struct tagMIDIINCAPSA * LPMIDIINCAPSA;

typedef LPMIDIINCAPSA LPMIDIINCAPS;

struct tagMIDIINCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwSupport;
};

typedef struct tagMIDIINCAPS2A tagMIDIINCAPS2A, *PtagMIDIINCAPS2A;

typedef struct tagMIDIINCAPS2A * LPMIDIINCAPS2A;

typedef LPMIDIINCAPS2A LPMIDIINCAPS2;

struct tagMIDIINCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIDIINCAPS2W tagMIDIINCAPS2W, *PtagMIDIINCAPS2W;

typedef struct tagMIDIINCAPS2W * LPMIDIINCAPS2W;

struct tagMIDIINCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIDIINCAPSW tagMIDIINCAPSW, *PtagMIDIINCAPSW;

typedef struct tagMIDIINCAPSW * LPMIDIINCAPSW;

struct tagMIDIINCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwSupport;
};

typedef struct tagMIDIOUTCAPSA tagMIDIOUTCAPSA, *PtagMIDIOUTCAPSA;

typedef struct tagMIDIOUTCAPSA * LPMIDIOUTCAPSA;

typedef LPMIDIOUTCAPSA LPMIDIOUTCAPS;

struct tagMIDIOUTCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
};

typedef struct tagMIDIOUTCAPS2A tagMIDIOUTCAPS2A, *PtagMIDIOUTCAPS2A;

typedef struct tagMIDIOUTCAPS2A * LPMIDIOUTCAPS2A;

typedef LPMIDIOUTCAPS2A LPMIDIOUTCAPS2;

struct tagMIDIOUTCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIDIOUTCAPS2W tagMIDIOUTCAPS2W, *PtagMIDIOUTCAPS2W;

typedef struct tagMIDIOUTCAPS2W * LPMIDIOUTCAPS2W;

struct tagMIDIOUTCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIDIOUTCAPSW tagMIDIOUTCAPSW, *PtagMIDIOUTCAPSW;

typedef struct tagMIDIOUTCAPSW * LPMIDIOUTCAPSW;

struct tagMIDIOUTCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    WORD wTechnology;
    WORD wVoices;
    WORD wNotes;
    WORD wChannelMask;
    DWORD dwSupport;
};

typedef struct midiproptempo_tag midiproptempo_tag, *Pmidiproptempo_tag;

typedef struct midiproptempo_tag * LPMIDIPROPTEMPO;

struct midiproptempo_tag {
    DWORD cbStruct;
    DWORD dwTempo;
};

typedef struct midiproptimediv_tag midiproptimediv_tag, *Pmidiproptimediv_tag;

typedef struct midiproptimediv_tag * LPMIDIPROPTIMEDIV;

struct midiproptimediv_tag {
    DWORD cbStruct;
    DWORD dwTimeDiv;
};

typedef struct tagMIXERCAPSA tagMIXERCAPSA, *PtagMIXERCAPSA;

typedef struct tagMIXERCAPSA * LPMIXERCAPSA;

typedef LPMIXERCAPSA LPMIXERCAPS;

struct tagMIXERCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
};

typedef struct tagMIXERCAPS2A tagMIXERCAPS2A, *PtagMIXERCAPS2A;

typedef struct tagMIXERCAPS2A * LPMIXERCAPS2A;

typedef LPMIXERCAPS2A LPMIXERCAPS2;

struct tagMIXERCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIXERCAPS2W tagMIXERCAPS2W, *PtagMIXERCAPS2W;

typedef struct tagMIXERCAPS2W * LPMIXERCAPS2W;

struct tagMIXERCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagMIXERCAPSW tagMIXERCAPSW, *PtagMIXERCAPSW;

typedef struct tagMIXERCAPSW * LPMIXERCAPSW;

struct tagMIXERCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD fdwSupport;
    DWORD cDestinations;
};

typedef struct tagMIXERCONTROLA tagMIXERCONTROLA, *PtagMIXERCONTROLA;

typedef struct tagMIXERCONTROLA * LPMIXERCONTROLA;

typedef LPMIXERCONTROLA LPMIXERCONTROL;

struct tagMIXERCONTROLA {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD dwControlType;
    DWORD fdwControl;
    DWORD cMultipleItems;
    CHAR szShortName[16];
    CHAR szName[64];
    union _union_1085 Bounds;
    union _union_1088 Metrics;
};

typedef struct tMIXERCONTROLDETAILS tMIXERCONTROLDETAILS, *PtMIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS * LPMIXERCONTROLDETAILS;

struct tMIXERCONTROLDETAILS {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD cChannels;
    union _union_1099 u;
    DWORD cbDetails;
    LPVOID paDetails;
};

typedef struct tMIXERCONTROLDETAILS_BOOLEAN tMIXERCONTROLDETAILS_BOOLEAN, *PtMIXERCONTROLDETAILS_BOOLEAN;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN * LPMIXERCONTROLDETAILS_BOOLEAN;

struct tMIXERCONTROLDETAILS_BOOLEAN {
    LONG fValue;
};

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA tagMIXERCONTROLDETAILS_LISTTEXTA, *PtagMIXERCONTROLDETAILS_LISTTEXTA;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA * LPMIXERCONTROLDETAILS_LISTTEXTA;

typedef LPMIXERCONTROLDETAILS_LISTTEXTA LPMIXERCONTROLDETAILS_LISTTEXT;

struct tagMIXERCONTROLDETAILS_LISTTEXTA {
    DWORD dwParam1;
    DWORD dwParam2;
    CHAR szName[64];
};

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW tagMIXERCONTROLDETAILS_LISTTEXTW, *PtagMIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW * LPMIXERCONTROLDETAILS_LISTTEXTW;

struct tagMIXERCONTROLDETAILS_LISTTEXTW {
    DWORD dwParam1;
    DWORD dwParam2;
    WCHAR szName[64];
};

typedef struct tMIXERCONTROLDETAILS_SIGNED tMIXERCONTROLDETAILS_SIGNED, *PtMIXERCONTROLDETAILS_SIGNED;

typedef struct tMIXERCONTROLDETAILS_SIGNED * LPMIXERCONTROLDETAILS_SIGNED;

struct tMIXERCONTROLDETAILS_SIGNED {
    LONG lValue;
};

typedef struct tMIXERCONTROLDETAILS_UNSIGNED tMIXERCONTROLDETAILS_UNSIGNED, *PtMIXERCONTROLDETAILS_UNSIGNED;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED * LPMIXERCONTROLDETAILS_UNSIGNED;

struct tMIXERCONTROLDETAILS_UNSIGNED {
    DWORD dwValue;
};

typedef struct tagMIXERCONTROLW tagMIXERCONTROLW, *PtagMIXERCONTROLW;

typedef struct tagMIXERCONTROLW * LPMIXERCONTROLW;

struct tagMIXERCONTROLW {
    DWORD cbStruct;
    DWORD dwControlID;
    DWORD dwControlType;
    DWORD fdwControl;
    DWORD cMultipleItems;
    WCHAR szShortName[16];
    WCHAR szName[64];
    union _union_1090 Bounds;
    union _union_1093 Metrics;
};

typedef struct tagMIXERLINEA tagMIXERLINEA, *PtagMIXERLINEA;

typedef struct tagMIXERLINEA * LPMIXERLINEA;

typedef LPMIXERLINEA LPMIXERLINE;

struct tagMIXERLINEA {
    DWORD cbStruct;
    DWORD dwDestination;
    DWORD dwSource;
    DWORD dwLineID;
    DWORD fdwLine;
    DWORD_PTR dwUser;
    DWORD dwComponentType;
    DWORD cChannels;
    DWORD cConnections;
    DWORD cControls;
    CHAR szShortName[16];
    CHAR szName[64];
    struct _struct_1081 Target;
};

typedef struct tagMIXERLINECONTROLSA tagMIXERLINECONTROLSA, *PtagMIXERLINECONTROLSA;

typedef struct tagMIXERLINECONTROLSA * LPMIXERLINECONTROLSA;

typedef LPMIXERLINECONTROLSA LPMIXERLINECONTROLS;

struct tagMIXERLINECONTROLSA {
    DWORD cbStruct;
    DWORD dwLineID;
    union _union_1095 u;
    DWORD cControls;
    DWORD cbmxctrl;
    LPMIXERCONTROLA pamxctrl;
};

typedef struct tagMIXERLINECONTROLSW tagMIXERLINECONTROLSW, *PtagMIXERLINECONTROLSW;

typedef struct tagMIXERLINECONTROLSW * LPMIXERLINECONTROLSW;

struct tagMIXERLINECONTROLSW {
    DWORD cbStruct;
    DWORD dwLineID;
    union _union_1097 u;
    DWORD cControls;
    DWORD cbmxctrl;
    LPMIXERCONTROLW pamxctrl;
};

typedef struct tagMIXERLINEW tagMIXERLINEW, *PtagMIXERLINEW;

typedef struct tagMIXERLINEW * LPMIXERLINEW;

struct tagMIXERLINEW {
    DWORD cbStruct;
    DWORD dwDestination;
    DWORD dwSource;
    DWORD dwLineID;
    DWORD fdwLine;
    DWORD_PTR dwUser;
    DWORD dwComponentType;
    DWORD cChannels;
    DWORD cConnections;
    DWORD cControls;
    WCHAR szShortName[16];
    WCHAR szName[64];
    struct _struct_1083 Target;
};

typedef struct _MMCKINFO * LPMMCKINFO;

typedef struct _MMIOINFO * LPMMIOINFO;

typedef struct mmtime_tag mmtime_tag, *Pmmtime_tag;

typedef struct mmtime_tag * LPMMTIME;

struct mmtime_tag {
    UINT wType;
    union _union_1020 u;
};

typedef WORD * LPPATCHARRAY;

typedef struct pcmwaveformat_tag pcmwaveformat_tag, *Ppcmwaveformat_tag;

typedef struct pcmwaveformat_tag * LPPCMWAVEFORMAT;

typedef struct waveformat_tag waveformat_tag, *Pwaveformat_tag;

typedef struct waveformat_tag WAVEFORMAT;

struct waveformat_tag {
    WORD wFormatTag;
    WORD nChannels;
    DWORD nSamplesPerSec;
    DWORD nAvgBytesPerSec;
    WORD nBlockAlign;
};

struct pcmwaveformat_tag {
    WAVEFORMAT wf;
    WORD wBitsPerSample;
};

typedef void (TIMECALLBACK)(UINT, UINT, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef TIMECALLBACK * LPTIMECALLBACK;

typedef struct timecaps_tag timecaps_tag, *Ptimecaps_tag;

typedef struct timecaps_tag * LPTIMECAPS;

struct timecaps_tag {
    UINT wPeriodMin;
    UINT wPeriodMax;
};

typedef UINT * LPUINT;

typedef DRVCALLBACK WAVECALLBACK;

typedef WAVECALLBACK * LPWAVECALLBACK;

typedef struct waveformat_tag * LPWAVEFORMAT;

typedef struct tWAVEFORMATEX * LPWAVEFORMATEX;

typedef struct wavehdr_tag wavehdr_tag, *Pwavehdr_tag;

typedef struct wavehdr_tag * LPWAVEHDR;

struct wavehdr_tag {
    LPSTR lpData;
    DWORD dwBufferLength;
    DWORD dwBytesRecorded;
    DWORD_PTR dwUser;
    DWORD dwFlags;
    DWORD dwLoops;
    struct wavehdr_tag * lpNext;
    DWORD_PTR reserved;
};

typedef struct tagWAVEINCAPSA tagWAVEINCAPSA, *PtagWAVEINCAPSA;

typedef struct tagWAVEINCAPSA * LPWAVEINCAPSA;

typedef LPWAVEINCAPSA LPWAVEINCAPS;

struct tagWAVEINCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
};

typedef struct tagWAVEINCAPS2A tagWAVEINCAPS2A, *PtagWAVEINCAPS2A;

typedef struct tagWAVEINCAPS2A * LPWAVEINCAPS2A;

typedef LPWAVEINCAPS2A LPWAVEINCAPS2;

struct tagWAVEINCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEINCAPS2W tagWAVEINCAPS2W, *PtagWAVEINCAPS2W;

typedef struct tagWAVEINCAPS2W * LPWAVEINCAPS2W;

struct tagWAVEINCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEINCAPSW tagWAVEINCAPSW, *PtagWAVEINCAPSW;

typedef struct tagWAVEINCAPSW * LPWAVEINCAPSW;

struct tagWAVEINCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
};

typedef struct tagWAVEOUTCAPSA tagWAVEOUTCAPSA, *PtagWAVEOUTCAPSA;

typedef struct tagWAVEOUTCAPSA * LPWAVEOUTCAPSA;

typedef LPWAVEOUTCAPSA LPWAVEOUTCAPS;

struct tagWAVEOUTCAPSA {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagWAVEOUTCAPS2A tagWAVEOUTCAPS2A, *PtagWAVEOUTCAPS2A;

typedef struct tagWAVEOUTCAPS2A * LPWAVEOUTCAPS2A;

typedef LPWAVEOUTCAPS2A LPWAVEOUTCAPS2;

struct tagWAVEOUTCAPS2A {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    CHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEOUTCAPS2W tagWAVEOUTCAPS2W, *PtagWAVEOUTCAPS2W;

typedef struct tagWAVEOUTCAPS2W * LPWAVEOUTCAPS2W;

struct tagWAVEOUTCAPS2W {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
    GUID ManufacturerGuid;
    GUID ProductGuid;
    GUID NameGuid;
};

typedef struct tagWAVEOUTCAPSW tagWAVEOUTCAPSW, *PtagWAVEOUTCAPSW;

typedef struct tagWAVEOUTCAPSW * LPWAVEOUTCAPSW;

struct tagWAVEOUTCAPSW {
    WORD wMid;
    WORD wPid;
    MMVERSION vDriverVersion;
    WCHAR szPname[32];
    DWORD dwFormats;
    WORD wChannels;
    WORD wReserved1;
    DWORD dwSupport;
};

typedef struct tagMCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMSA;

typedef MCI_ANIM_OPEN_PARMSA MCI_ANIM_OPEN_PARMS;

typedef struct tagMCI_ANIM_OPEN_PARMSW MCI_ANIM_OPEN_PARMSW;

typedef struct tagMCI_ANIM_PLAY_PARMS MCI_ANIM_PLAY_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS MCI_ANIM_STEP_PARMS;

typedef struct tagMCI_ANIM_UPDATE_PARMS MCI_ANIM_UPDATE_PARMS;

typedef struct tagMCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMSA;

typedef MCI_ANIM_WINDOW_PARMSA MCI_ANIM_WINDOW_PARMS;

typedef struct tagMCI_ANIM_WINDOW_PARMSW MCI_ANIM_WINDOW_PARMSW;

typedef struct tagMCI_BREAK_PARMS MCI_BREAK_PARMS;

typedef struct tagMCI_GENERIC_PARMS MCI_GENERIC_PARMS;

typedef struct tagMCI_GETDEVCAPS_PARMS MCI_GETDEVCAPS_PARMS;

typedef struct tagMCI_INFO_PARMSA MCI_INFO_PARMSA;

typedef MCI_INFO_PARMSA MCI_INFO_PARMS;

typedef struct tagMCI_INFO_PARMSW MCI_INFO_PARMSW;

typedef struct tagMCI_LOAD_PARMSA MCI_LOAD_PARMSA;

typedef MCI_LOAD_PARMSA MCI_LOAD_PARMS;

typedef struct tagMCI_LOAD_PARMSW MCI_LOAD_PARMSW;

typedef struct tagMCI_OPEN_PARMSA MCI_OPEN_PARMSA;

typedef MCI_OPEN_PARMSA MCI_OPEN_PARMS;

typedef struct tagMCI_OPEN_PARMSW MCI_OPEN_PARMSW;

typedef struct tagMCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMSA;

typedef MCI_OVLY_LOAD_PARMSA MCI_OVLY_LOAD_PARMS;

typedef struct tagMCI_OVLY_LOAD_PARMSW MCI_OVLY_LOAD_PARMSW;

typedef struct tagMCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMSA;

typedef MCI_OVLY_OPEN_PARMSA MCI_OVLY_OPEN_PARMS;

typedef struct tagMCI_OVLY_OPEN_PARMSW MCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_RECT_PARMS MCI_OVLY_RECT_PARMS;

typedef struct tagMCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMSA;

typedef MCI_OVLY_SAVE_PARMSA MCI_OVLY_SAVE_PARMS;

typedef struct tagMCI_OVLY_SAVE_PARMSW MCI_OVLY_SAVE_PARMSW;

typedef struct tagMCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMSA;

typedef MCI_OVLY_WINDOW_PARMSA MCI_OVLY_WINDOW_PARMS;

typedef struct tagMCI_OVLY_WINDOW_PARMSW MCI_OVLY_WINDOW_PARMSW;

typedef struct tagMCI_PLAY_PARMS MCI_PLAY_PARMS;

typedef struct tagMCI_RECORD_PARMS MCI_RECORD_PARMS;

typedef struct tagMCI_SAVE_PARMSA MCI_SAVE_PARMSA;

typedef MCI_SAVE_PARMSA MCI_SAVE_PARMS;

typedef struct tagMCI_SAVE_PARMSW MCI_SAVE_PARMSW;

typedef struct tagMCI_SEEK_PARMS MCI_SEEK_PARMS;

typedef struct tagMCI_SEQ_SET_PARMS MCI_SEQ_SET_PARMS;

typedef struct tagMCI_SET_PARMS MCI_SET_PARMS;

typedef struct tagMCI_STATUS_PARMS MCI_STATUS_PARMS;

typedef struct tagMCI_SYSINFO_PARMSA MCI_SYSINFO_PARMSA;

typedef MCI_SYSINFO_PARMSA MCI_SYSINFO_PARMS;

typedef struct tagMCI_SYSINFO_PARMSW MCI_SYSINFO_PARMSW;

typedef struct tagMCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMSA;

typedef MCI_VD_ESCAPE_PARMSA MCI_VD_ESCAPE_PARMS;

typedef struct tagMCI_VD_ESCAPE_PARMSW MCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_VD_PLAY_PARMS MCI_VD_PLAY_PARMS;

typedef struct tagMCI_VD_STEP_PARMS MCI_VD_STEP_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS MCI_WAVE_DELETE_PARMS;

typedef struct tagMCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMSA;

typedef MCI_WAVE_OPEN_PARMSA MCI_WAVE_OPEN_PARMS;

typedef struct tagMCI_WAVE_OPEN_PARMSW MCI_WAVE_OPEN_PARMSW;

typedef struct tagMCI_WAVE_SET_PARMS MCI_WAVE_SET_PARMS;

typedef DWORD MCIERROR;

typedef struct midievent_tag midievent_tag, *Pmidievent_tag;

typedef struct midievent_tag MIDIEVENT;

struct midievent_tag {
    DWORD dwDeltaTime;
    DWORD dwStreamID;
    DWORD dwEvent;
    DWORD dwParms[1];
};

typedef struct midihdr_tag MIDIHDR;

typedef struct tagMIDIINCAPSA MIDIINCAPSA;

typedef MIDIINCAPSA MIDIINCAPS;

typedef struct tagMIDIINCAPS2A MIDIINCAPS2A;

typedef MIDIINCAPS2A MIDIINCAPS2;

typedef struct tagMIDIINCAPS2W MIDIINCAPS2W;

typedef struct tagMIDIINCAPSW MIDIINCAPSW;

typedef struct tagMIDIOUTCAPSA MIDIOUTCAPSA;

typedef MIDIOUTCAPSA MIDIOUTCAPS;

typedef struct tagMIDIOUTCAPS2A MIDIOUTCAPS2A;

typedef MIDIOUTCAPS2A MIDIOUTCAPS2;

typedef struct tagMIDIOUTCAPS2W MIDIOUTCAPS2W;

typedef struct tagMIDIOUTCAPSW MIDIOUTCAPSW;

typedef struct midiproptempo_tag MIDIPROPTEMPO;

typedef struct midiproptimediv_tag MIDIPROPTIMEDIV;

typedef struct midistrmbuffver_tag midistrmbuffver_tag, *Pmidistrmbuffver_tag;

typedef struct midistrmbuffver_tag MIDISTRMBUFFVER;

struct midistrmbuffver_tag {
    DWORD dwVersion;
    DWORD dwMid;
    DWORD dwOEMVersion;
};

typedef struct tagMIXERCAPSA MIXERCAPSA;

typedef MIXERCAPSA MIXERCAPS;

typedef struct tagMIXERCAPS2A MIXERCAPS2A;

typedef MIXERCAPS2A MIXERCAPS2;

typedef struct tagMIXERCAPS2W MIXERCAPS2W;

typedef struct tagMIXERCAPSW MIXERCAPSW;

typedef struct tagMIXERCONTROLA MIXERCONTROLA;

typedef MIXERCONTROLA MIXERCONTROL;

typedef struct tMIXERCONTROLDETAILS MIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN MIXERCONTROLDETAILS_BOOLEAN;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXTA;

typedef MIXERCONTROLDETAILS_LISTTEXTA MIXERCONTROLDETAILS_LISTTEXT;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW MIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tMIXERCONTROLDETAILS_SIGNED MIXERCONTROLDETAILS_SIGNED;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED MIXERCONTROLDETAILS_UNSIGNED;

typedef struct tagMIXERCONTROLW MIXERCONTROLW;

typedef struct tagMIXERLINEA MIXERLINEA;

typedef MIXERLINEA MIXERLINE;

typedef struct tagMIXERLINECONTROLSA MIXERLINECONTROLSA;

typedef MIXERLINECONTROLSA MIXERLINECONTROLS;

typedef struct tagMIXERLINECONTROLSW MIXERLINECONTROLSW;

typedef struct tagMIXERLINEW MIXERLINEW;

typedef UINT MMRESULT;

typedef struct mmtime_tag MMTIME;

typedef struct tagAUXCAPSA * NPAUXCAPSA;

typedef NPAUXCAPSA NPAUXCAPS;

typedef struct tagAUXCAPS2A * NPAUXCAPS2A;

typedef NPAUXCAPS2A NPAUXCAPS2;

typedef struct tagAUXCAPS2W * NPAUXCAPS2W;

typedef struct tagAUXCAPSW * NPAUXCAPSW;

typedef struct tagDRVCONFIGINFO * NPDRVCONFIGINFO;

typedef struct DRVCONFIGINFOEX * NPDRVCONFIGINFOEX;

typedef struct tagJOYCAPSA * NPJOYCAPSA;

typedef NPJOYCAPSA NPJOYCAPS;

typedef struct tagJOYCAPS2A * NPJOYCAPS2A;

typedef NPJOYCAPS2A NPJOYCAPS2;

typedef struct tagJOYCAPS2W * NPJOYCAPS2W;

typedef struct tagJOYCAPSW * NPJOYCAPSW;

typedef struct joyinfo_tag * NPJOYINFO;

typedef struct joyinfoex_tag * NPJOYINFOEX;

typedef struct midihdr_tag * NPMIDIHDR;

typedef struct tagMIDIINCAPSA * NPMIDIINCAPSA;

typedef NPMIDIINCAPSA NPMIDIINCAPS;

typedef struct tagMIDIINCAPS2A * NPMIDIINCAPS2A;

typedef NPMIDIINCAPS2A NPMIDIINCAPS2;

typedef struct tagMIDIINCAPS2W * NPMIDIINCAPS2W;

typedef struct tagMIDIINCAPSW * NPMIDIINCAPSW;

typedef struct tagMIDIOUTCAPSA * NPMIDIOUTCAPSA;

typedef NPMIDIOUTCAPSA NPMIDIOUTCAPS;

typedef struct tagMIDIOUTCAPS2A * NPMIDIOUTCAPS2A;

typedef NPMIDIOUTCAPS2A NPMIDIOUTCAPS2;

typedef struct tagMIDIOUTCAPS2W * NPMIDIOUTCAPS2W;

typedef struct tagMIDIOUTCAPSW * NPMIDIOUTCAPSW;

typedef struct _MMCKINFO * NPMMCKINFO;

typedef struct _MMIOINFO * NPMMIOINFO;

typedef struct mmtime_tag * NPMMTIME;

typedef struct pcmwaveformat_tag * NPPCMWAVEFORMAT;

typedef struct timecaps_tag * NPTIMECAPS;

typedef struct waveformat_tag * NPWAVEFORMAT;

typedef struct tWAVEFORMATEX * NPWAVEFORMATEX;

typedef struct wavehdr_tag * NPWAVEHDR;

typedef struct tagWAVEINCAPSA * NPWAVEINCAPSA;

typedef NPWAVEINCAPSA NPWAVEINCAPS;

typedef struct tagWAVEINCAPS2A * NPWAVEINCAPS2A;

typedef NPWAVEINCAPS2A NPWAVEINCAPS2;

typedef struct tagWAVEINCAPS2W * NPWAVEINCAPS2W;

typedef struct tagWAVEINCAPSW * NPWAVEINCAPSW;

typedef struct tagWAVEOUTCAPSA * NPWAVEOUTCAPSA;

typedef NPWAVEOUTCAPSA NPWAVEOUTCAPS;

typedef struct tagWAVEOUTCAPS2A * NPWAVEOUTCAPS2A;

typedef NPWAVEOUTCAPS2A NPWAVEOUTCAPS2;

typedef struct tagWAVEOUTCAPS2W * NPWAVEOUTCAPS2W;

typedef struct tagWAVEOUTCAPSW * NPWAVEOUTCAPSW;

typedef WORD PATCHARRAY[128];

typedef struct tagAUXCAPSA * PAUXCAPSA;

typedef PAUXCAPSA PAUXCAPS;

typedef struct tagAUXCAPS2A * PAUXCAPS2A;

typedef PAUXCAPS2A PAUXCAPS2;

typedef struct tagAUXCAPS2W * PAUXCAPS2W;

typedef struct tagAUXCAPSW * PAUXCAPSW;

typedef struct pcmwaveformat_tag PCMWAVEFORMAT;

typedef DRVCALLBACK * PDRVCALLBACK;

typedef struct tagDRVCONFIGINFO * PDRVCONFIGINFO;

typedef struct tagJOYCAPSA * PJOYCAPSA;

typedef PJOYCAPSA PJOYCAPS;

typedef struct tagJOYCAPS2A * PJOYCAPS2A;

typedef PJOYCAPS2A PJOYCAPS2;

typedef struct tagJOYCAPS2W * PJOYCAPS2W;

typedef struct tagJOYCAPSW * PJOYCAPSW;

typedef struct joyinfo_tag * PJOYINFO;

typedef struct joyinfoex_tag * PJOYINFOEX;

typedef struct tagMCI_ANIM_OPEN_PARMSA * PMCI_ANIM_OPEN_PARMSA;

typedef PMCI_ANIM_OPEN_PARMSA PMCI_ANIM_OPEN_PARMS;

typedef struct tagMCI_ANIM_OPEN_PARMSW * PMCI_ANIM_OPEN_PARMSW;

typedef struct tagMCI_ANIM_PLAY_PARMS * PMCI_ANIM_PLAY_PARMS;

typedef MCI_ANIM_RECT_PARMS * PMCI_ANIM_RECT_PARMS;

typedef struct tagMCI_ANIM_STEP_PARMS * PMCI_ANIM_STEP_PARMS;

typedef struct tagMCI_ANIM_UPDATE_PARMS * PMCI_ANIM_UPDATE_PARMS;

typedef struct tagMCI_ANIM_WINDOW_PARMSA * PMCI_ANIM_WINDOW_PARMSA;

typedef PMCI_ANIM_WINDOW_PARMSA PMCI_ANIM_WINDOW_PARMS;

typedef struct tagMCI_ANIM_WINDOW_PARMSW * PMCI_ANIM_WINDOW_PARMSW;

typedef struct tagMCI_BREAK_PARMS * PMCI_BREAK_PARMS;

typedef struct tagMCI_GENERIC_PARMS * PMCI_GENERIC_PARMS;

typedef struct tagMCI_GETDEVCAPS_PARMS * PMCI_GETDEVCAPS_PARMS;

typedef struct tagMCI_LOAD_PARMSA * PMCI_LOAD_PARMSA;

typedef PMCI_LOAD_PARMSA PMCI_LOAD_PARMS;

typedef struct tagMCI_LOAD_PARMSW * PMCI_LOAD_PARMSW;

typedef struct tagMCI_OPEN_PARMSA * PMCI_OPEN_PARMSA;

typedef PMCI_OPEN_PARMSA PMCI_OPEN_PARMS;

typedef struct tagMCI_OPEN_PARMSW * PMCI_OPEN_PARMSW;

typedef struct tagMCI_OVLY_LOAD_PARMSA * PMCI_OVLY_LOAD_PARMSA;

typedef PMCI_OVLY_LOAD_PARMSA PMCI_OVLY_LOAD_PARMS;

typedef struct tagMCI_OVLY_LOAD_PARMSW * PMCI_OVLY_LOAD_PARMSW;

typedef struct tagMCI_OVLY_OPEN_PARMSA * PMCI_OVLY_OPEN_PARMSA;

typedef PMCI_OVLY_OPEN_PARMSA PMCI_OVLY_OPEN_PARMS;

typedef struct tagMCI_OVLY_OPEN_PARMSW * PMCI_OVLY_OPEN_PARMSW;

typedef struct tagMCI_OVLY_RECT_PARMS * PMCI_OVLY_RECT_PARMS;

typedef struct tagMCI_OVLY_SAVE_PARMSA * PMCI_OVLY_SAVE_PARMSA;

typedef PMCI_OVLY_SAVE_PARMSA PMCI_OVLY_SAVE_PARMS;

typedef struct tagMCI_OVLY_SAVE_PARMSW * PMCI_OVLY_SAVE_PARMSW;

typedef struct tagMCI_OVLY_WINDOW_PARMSA * PMCI_OVLY_WINDOW_PARMSA;

typedef PMCI_OVLY_WINDOW_PARMSA PMCI_OVLY_WINDOW_PARMS;

typedef struct tagMCI_OVLY_WINDOW_PARMSW * PMCI_OVLY_WINDOW_PARMSW;

typedef struct tagMCI_PLAY_PARMS * PMCI_PLAY_PARMS;

typedef struct tagMCI_SAVE_PARMSA * PMCI_SAVE_PARMSA;

typedef PMCI_SAVE_PARMSA PMCI_SAVE_PARMS;

typedef struct tagMCI_SAVE_PARMSW * PMCI_SAVE_PARMSW;

typedef struct tagMCI_SEEK_PARMS * PMCI_SEEK_PARMS;

typedef struct tagMCI_SEQ_SET_PARMS * PMCI_SEQ_SET_PARMS;

typedef struct tagMCI_SET_PARMS * PMCI_SET_PARMS;

typedef struct tagMCI_STATUS_PARMS * PMCI_STATUS_PARMS;

typedef struct tagMCI_SYSINFO_PARMSA * PMCI_SYSINFO_PARMSA;

typedef PMCI_SYSINFO_PARMSA PMCI_SYSINFO_PARMS;

typedef struct tagMCI_SYSINFO_PARMSW * PMCI_SYSINFO_PARMSW;

typedef struct tagMCI_VD_ESCAPE_PARMSA * PMCI_VD_ESCAPE_PARMSA;

typedef PMCI_VD_ESCAPE_PARMSA PMCI_VD_ESCAPE_PARMS;

typedef struct tagMCI_VD_ESCAPE_PARMSW * PMCI_VD_ESCAPE_PARMSW;

typedef struct tagMCI_VD_PLAY_PARMS * PMCI_VD_PLAY_PARMS;

typedef struct tagMCI_VD_STEP_PARMS * PMCI_VD_STEP_PARMS;

typedef struct tagMCI_WAVE_DELETE_PARMS * PMCI_WAVE_DELETE_PARMS;

typedef struct tagMCI_WAVE_OPEN_PARMSA * PMCI_WAVE_OPEN_PARMSA;

typedef PMCI_WAVE_OPEN_PARMSA PMCI_WAVE_OPEN_PARMS;

typedef struct tagMCI_WAVE_OPEN_PARMSW * PMCI_WAVE_OPEN_PARMSW;

typedef struct tagMCI_WAVE_SET_PARMS * PMCI_WAVE_SET_PARMS;

typedef struct midihdr_tag * PMIDIHDR;

typedef struct tagMIDIINCAPSA * PMIDIINCAPSA;

typedef PMIDIINCAPSA PMIDIINCAPS;

typedef struct tagMIDIINCAPS2A * PMIDIINCAPS2A;

typedef PMIDIINCAPS2A PMIDIINCAPS2;

typedef struct tagMIDIINCAPS2W * PMIDIINCAPS2W;

typedef struct tagMIDIINCAPSW * PMIDIINCAPSW;

typedef struct tagMIDIOUTCAPSA * PMIDIOUTCAPSA;

typedef PMIDIOUTCAPSA PMIDIOUTCAPS;

typedef struct tagMIDIOUTCAPS2A * PMIDIOUTCAPS2A;

typedef PMIDIOUTCAPS2A PMIDIOUTCAPS2;

typedef struct tagMIDIOUTCAPS2W * PMIDIOUTCAPS2W;

typedef struct tagMIDIOUTCAPSW * PMIDIOUTCAPSW;

typedef struct tagMIXERCAPSA * PMIXERCAPSA;

typedef PMIXERCAPSA PMIXERCAPS;

typedef struct tagMIXERCAPS2A * PMIXERCAPS2A;

typedef PMIXERCAPS2A PMIXERCAPS2;

typedef struct tagMIXERCAPS2W * PMIXERCAPS2W;

typedef struct tagMIXERCAPSW * PMIXERCAPSW;

typedef struct tagMIXERCONTROLA * PMIXERCONTROLA;

typedef PMIXERCONTROLA PMIXERCONTROL;

typedef struct tMIXERCONTROLDETAILS * PMIXERCONTROLDETAILS;

typedef struct tMIXERCONTROLDETAILS_BOOLEAN * PMIXERCONTROLDETAILS_BOOLEAN;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTA * PMIXERCONTROLDETAILS_LISTTEXTA;

typedef PMIXERCONTROLDETAILS_LISTTEXTA PMIXERCONTROLDETAILS_LISTTEXT;

typedef struct tagMIXERCONTROLDETAILS_LISTTEXTW * PMIXERCONTROLDETAILS_LISTTEXTW;

typedef struct tMIXERCONTROLDETAILS_SIGNED * PMIXERCONTROLDETAILS_SIGNED;

typedef struct tMIXERCONTROLDETAILS_UNSIGNED * PMIXERCONTROLDETAILS_UNSIGNED;

typedef struct tagMIXERCONTROLW * PMIXERCONTROLW;

typedef struct tagMIXERLINEA * PMIXERLINEA;

typedef PMIXERLINEA PMIXERLINE;

typedef struct tagMIXERLINECONTROLSA * PMIXERLINECONTROLSA;

typedef PMIXERLINECONTROLSA PMIXERLINECONTROLS;

typedef struct tagMIXERLINECONTROLSW * PMIXERLINECONTROLSW;

typedef struct tagMIXERLINEW * PMIXERLINEW;

typedef struct _MMCKINFO * PMMCKINFO;

typedef struct _MMIOINFO * PMMIOINFO;

typedef struct mmtime_tag * PMMTIME;

typedef struct pcmwaveformat_tag * PPCMWAVEFORMAT;

typedef struct timecaps_tag * PTIMECAPS;

typedef struct waveformat_tag * PWAVEFORMAT;

typedef struct tWAVEFORMATEX * PWAVEFORMATEX;

typedef struct wavehdr_tag * PWAVEHDR;

typedef struct tagWAVEINCAPSA * PWAVEINCAPSA;

typedef PWAVEINCAPSA PWAVEINCAPS;

typedef struct tagWAVEINCAPS2A * PWAVEINCAPS2A;

typedef PWAVEINCAPS2A PWAVEINCAPS2;

typedef struct tagWAVEINCAPS2W * PWAVEINCAPS2W;

typedef struct tagWAVEINCAPSW * PWAVEINCAPSW;

typedef struct tagWAVEOUTCAPSA * PWAVEOUTCAPSA;

typedef PWAVEOUTCAPSA PWAVEOUTCAPS;

typedef struct tagWAVEOUTCAPS2A * PWAVEOUTCAPS2A;

typedef PWAVEOUTCAPS2A PWAVEOUTCAPS2;

typedef struct tagWAVEOUTCAPS2W * PWAVEOUTCAPS2W;

typedef struct tagWAVEOUTCAPSW * PWAVEOUTCAPSW;

typedef struct timecaps_tag TIMECAPS;

typedef struct wavehdr_tag WAVEHDR;

typedef struct tagWAVEINCAPSA WAVEINCAPSA;

typedef WAVEINCAPSA WAVEINCAPS;

typedef struct tagWAVEINCAPS2A WAVEINCAPS2A;

typedef WAVEINCAPS2A WAVEINCAPS2;

typedef struct tagWAVEINCAPS2W WAVEINCAPS2W;

typedef struct tagWAVEINCAPSW WAVEINCAPSW;

typedef struct tagWAVEOUTCAPSA WAVEOUTCAPSA;

typedef WAVEOUTCAPSA WAVEOUTCAPS;

typedef struct tagWAVEOUTCAPS2A WAVEOUTCAPS2A;

typedef WAVEOUTCAPS2A WAVEOUTCAPS2;

typedef struct tagWAVEOUTCAPS2W WAVEOUTCAPS2W;

typedef struct tagWAVEOUTCAPSW WAVEOUTCAPSW;

typedef UINT (* YIELDPROC)(MCIDEVICEID, DWORD);

#define ALLOW_NO_AUTH 1

#define ATADDRESSLEN 32

#define DO_NOT_ALLOW_NO_AUTH 0

#define IPADDRESSLEN 15

#define IPXADDRESSLEN 22

#define MAX_DEVICE_NAME 128

#define MAX_DEVICETYPE_NAME 16

#define MAX_INTERFACE_NAME_LEN 256

#define MAX_MEDIA_NAME 16

#define MAX_PHONE_NUMBER_LEN 128

#define MAX_PORT_NAME 16

#define MAX_SSTP_HASH_SIZE 32

#define MAX_TRANSPORT_NAME_LEN 40

#define MAXIPADRESSLEN 64

#define MPR_ENABLE_RAS_ON_DEVICE 1

#define MPR_ENABLE_ROUTING_ON_DEVICE 2

#define MPR_ET_None 0

#define MPR_ET_Optional 3

#define MPR_ET_Require 1

#define MPR_ET_RequireMax 2

#define MPR_INTERFACE_ADMIN_DISABLED 2

#define MPR_INTERFACE_CONNECTION_FAILURE 4

#define MPR_INTERFACE_DIALOUT_HOURS_RESTRICTION 16

#define MPR_INTERFACE_NO_DEVICE 64

#define MPR_INTERFACE_NO_MEDIA_SENSE 32

#define MPR_INTERFACE_OUT_OF_RESOURCES 1

#define MPR_INTERFACE_SERVICE_PAUSED 8

#define MPR_MaxAreaCode 10

#define MPR_MaxCallbackNumber 128

#define MPR_MaxDeviceName 128

#define MPR_MaxDeviceType 16

#define MPR_MaxEntryName 256

#define MPR_MaxFacilities 200

#define MPR_MaxIpAddress 15

#define MPR_MaxIpxAddress 21

#define MPR_MaxPadType 32

#define MPR_MaxPhoneNumber 128

#define MPR_MaxUserData 200

#define MPR_MaxX25Address 200

#define MPR_VS_Default 0

#define MPR_VS_L2tpFirst 4

#define MPR_VS_L2tpOnly 3

#define MPR_VS_PptpFirst 2

#define MPR_VS_PptpOnly 1

#define MPRAPI_ADMIN_DLL_VERSION_1 1

#define MPRAPI_ADMIN_DLL_VERSION_2 2

#define MPRAPI_IKEV2_AUTH_USING_CERT 1

#define MPRAPI_IKEV2_AUTH_USING_EAP 2

#define MPRAPI_IKEV2_PROJECTION_INFO_TYPE 2

#define MPRAPI_IKEV2_SET_TUNNEL_CONFIG_PARAMS 1

#define MPRAPI_MPR_SERVER_OBJECT_REVISION_1 1

#define MPRAPI_MPR_SERVER_SET_CONFIG_OBJECT_REVISION_1 1

#define MPRAPI_PPP_PROJECTION_INFO_TYPE 1

#define MPRAPI_RAS_CONNECTION_OBJECT_REVISION_1 1

#define MPRAPI_RAS_UPDATE_CONNECTION_OBJECT_REVISION_1 1

#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_IKEV2 8

#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_L2TP 2

#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_PPTP 1

#define MPRAPI_SET_CONFIG_PROTOCOL_FOR_SSTP 4

#define MPRDM_DialAll 1

#define MPRDM_DialAsNeeded 2

#define MPRDM_DialFirst 0

#define MPRET_Phone 1

#define MPRET_Vpn 2

#define MPRIDS_Disabled 4294967295

#define MPRIDS_UseGlobalValue 0

#define MPRIO_DisableLcpExtensions 32

#define MPRIO_IpHeaderCompression 8

#define MPRIO_IpSecPreSharedKey 2147483648

#define MPRIO_NetworkLogon 8192

#define MPRIO_PromoteAlternates 32768

#define MPRIO_RemoteDefaultGateway 16

#define MPRIO_RequireCHAP 134217728

#define MPRIO_RequireDataEncryption 4096

#define MPRIO_RequireEAP 131072

#define MPRIO_RequireEncryptedPw 1024

#define MPRIO_RequireMsCHAP 268435456

#define MPRIO_RequireMsCHAP2 536870912

#define MPRIO_RequireMsEncryptedPw 2048

#define MPRIO_RequirePAP 262144

#define MPRIO_RequireSPAP 524288

#define MPRIO_SecureLocalFiles 65536

#define MPRIO_SharedPhoneNumbers 8388608

#define MPRIO_SpecificIpAddr 2

#define MPRIO_SpecificNameServers 4

#define MPRIO_SwCompression 512

#define MPRNP_Ip 4

#define MPRNP_Ipv6 8

#define MPRNP_Ipx 2

#define PID_ATALK 41

#define PID_IP 33

#define PID_IPV6 87

#define PID_IPX 43

#define PID_NBF 63

#define PPP_CCP_COMPRESSION 1

#define PPP_CCP_ENCRYPTION128BIT 64

#define PPP_CCP_ENCRYPTION40BIT 32

#define PPP_CCP_ENCRYPTION40BITOLD 16

#define PPP_CCP_ENCRYPTION56BIT 128

#define PPP_CCP_HISTORYLESS 16777216

#define PPP_IPCP_VJ 1

#define PPP_LCP_3_DES 32

#define PPP_LCP_ACFC 4

#define PPP_LCP_AES_128 64

#define PPP_LCP_AES_256 128

#define PPP_LCP_CHAP 49699

#define PPP_LCP_CHAP_MD5 5

#define PPP_LCP_CHAP_MS 128

#define PPP_LCP_CHAP_MSV2 129

#define PPP_LCP_DES_56 16

#define PPP_LCP_EAP 49703

#define PPP_LCP_MULTILINK_FRAMING 1

#define PPP_LCP_PAP 49187

#define PPP_LCP_PFC 2

#define PPP_LCP_SPAP 49191

#define PPP_LCP_SSHF 8

#define RAS_FLAGS_DORMANT 32

#define RAS_FLAGS_MESSENGER_PRESENT 2

#define RAS_FLAGS_PPP_CONNECTION 1

#define RAS_FLAGS_QUARANTINE_PRESENT 8

#define RASPRIV2_DialinPolicy 1

#define RASPRIV_AdminSetCallback 2

#define RASPRIV_CallerSetCallback 4

#define RASPRIV_DialinPrivilege 8

#define RASPRIV_NoCallback 1

typedef struct _AUTH_VALIDATION_EX _AUTH_VALIDATION_EX, *P_AUTH_VALIDATION_EX;

typedef struct _MPRAPI_OBJECT_HEADER _MPRAPI_OBJECT_HEADER, *P_MPRAPI_OBJECT_HEADER;

typedef struct _MPRAPI_OBJECT_HEADER MPRAPI_OBJECT_HEADER;

struct _MPRAPI_OBJECT_HEADER {
    UCHAR revision;
    UCHAR type;
    USHORT size;
};

struct _AUTH_VALIDATION_EX {
    MPRAPI_OBJECT_HEADER Header;
    HANDLE hRasConnection;
    WCHAR wszUserName[257];
    WCHAR wszLogonDomain[16];
    DWORD AuthInfoSize;
    BYTE AuthInfo[1];
};

typedef struct _IKEV2_CONFIG_PARAMS _IKEV2_CONFIG_PARAMS, *P_IKEV2_CONFIG_PARAMS;

typedef struct _IKEV2_TUNNEL_CONFIG_PARAMS _IKEV2_TUNNEL_CONFIG_PARAMS, *P_IKEV2_TUNNEL_CONFIG_PARAMS;

typedef struct _IKEV2_TUNNEL_CONFIG_PARAMS IKEV2_TUNNEL_CONFIG_PARAMS;

struct _IKEV2_TUNNEL_CONFIG_PARAMS {
    DWORD dwIdleTimeout;
    DWORD dwNetworkBlackoutTime;
    DWORD dwSaLifeTime;
    DWORD dwSaDataSizeForRenegotiation;
    DWORD dwConfigOptions;
    DWORD dwTotalCertificates;
    CERT_NAME_BLOB * certificateNames;
};

struct _IKEV2_CONFIG_PARAMS {
    DWORD dwNumPorts;
    DWORD dwPortFlags;
    DWORD dwTunnelConfigParamFlags;
    IKEV2_TUNNEL_CONFIG_PARAMS TunnelConfigParams;
};

typedef struct _IKEV2_PROJECTION_INFO _IKEV2_PROJECTION_INFO, *P_IKEV2_PROJECTION_INFO;

struct _IKEV2_PROJECTION_INFO {
    DWORD dwIPv4NegotiationError;
    WCHAR wszAddress[16];
    WCHAR wszRemoteAddress[16];
    ULONG64 IPv4SubInterfaceIndex;
    DWORD dwIPv6NegotiationError;
    BYTE bInterfaceIdentifier[8];
    BYTE bRemoteInterfaceIdentifier[8];
    BYTE bPrefix[8];
    DWORD dwPrefixLength;
    ULONG64 IPv6SubInterfaceIndex;
    DWORD dwOptions;
    DWORD dwAuthenticationProtocol;
    DWORD dwEapTypeId;
    DWORD dwCompressionAlgorithm;
    DWORD dwEncryptionMethod;
};

typedef struct _L2TP_CONFIG_PARAMS _L2TP_CONFIG_PARAMS, *P_L2TP_CONFIG_PARAMS;

struct _L2TP_CONFIG_PARAMS {
    DWORD dwNumPorts;
    DWORD dwPortFlags;
};

typedef struct _MPR_CREDENTIALSEX_0 _MPR_CREDENTIALSEX_0, *P_MPR_CREDENTIALSEX_0;

struct _MPR_CREDENTIALSEX_0 {
    DWORD dwSize;
    LPBYTE lpbCredentialsInfo;
};

typedef struct _MPR_CREDENTIALSEX_1 _MPR_CREDENTIALSEX_1, *P_MPR_CREDENTIALSEX_1;

struct _MPR_CREDENTIALSEX_1 {
    DWORD dwSize;
    LPBYTE lpbCredentialsInfo;
};

typedef struct _MPR_DEVICE_0 _MPR_DEVICE_0, *P_MPR_DEVICE_0;

struct _MPR_DEVICE_0 {
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
};

typedef struct _MPR_DEVICE_1 _MPR_DEVICE_1, *P_MPR_DEVICE_1;

typedef WCHAR * PWCHAR;

struct _MPR_DEVICE_1 {
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szLocalPhoneNumber[129];
    PWCHAR szAlternates;
};

typedef struct _MPR_FILTER_0 _MPR_FILTER_0, *P_MPR_FILTER_0;

struct _MPR_FILTER_0 {
    BOOL fEnable;
};

typedef struct _MPR_IFTRANSPORT_0 _MPR_IFTRANSPORT_0, *P_MPR_IFTRANSPORT_0;

struct _MPR_IFTRANSPORT_0 {
    DWORD dwTransportId;
    HANDLE hIfTransport;
    WCHAR wszIfTransportName[41];
};

typedef struct _MPR_INTERFACE_0 _MPR_INTERFACE_0, *P_MPR_INTERFACE_0;

typedef enum _ROUTER_INTERFACE_TYPE {
    ROUTER_IF_TYPE_CLIENT=0,
    ROUTER_IF_TYPE_DEDICATED=3,
    ROUTER_IF_TYPE_DIALOUT=7,
    ROUTER_IF_TYPE_FULL_ROUTER=2,
    ROUTER_IF_TYPE_HOME_ROUTER=1,
    ROUTER_IF_TYPE_INTERNAL=4,
    ROUTER_IF_TYPE_LOOPBACK=5,
    ROUTER_IF_TYPE_MAX=8,
    ROUTER_IF_TYPE_TUNNEL1=6
} _ROUTER_INTERFACE_TYPE;

typedef enum _ROUTER_INTERFACE_TYPE ROUTER_INTERFACE_TYPE;

typedef enum _ROUTER_CONNECTION_STATE {
    ROUTER_IF_STATE_CONNECTED=3,
    ROUTER_IF_STATE_CONNECTING=2,
    ROUTER_IF_STATE_DISCONNECTED=1,
    ROUTER_IF_STATE_UNREACHABLE=0
} _ROUTER_CONNECTION_STATE;

typedef enum _ROUTER_CONNECTION_STATE ROUTER_CONNECTION_STATE;

struct _MPR_INTERFACE_0 {
    WCHAR wszInterfaceName[257];
    HANDLE hInterface;
    BOOL fEnabled;
    ROUTER_INTERFACE_TYPE dwIfType;
    ROUTER_CONNECTION_STATE dwConnectionState;
    DWORD fUnReachabilityReasons;
    DWORD dwLastError;
};

typedef struct _MPR_INTERFACE_1 _MPR_INTERFACE_1, *P_MPR_INTERFACE_1;

struct _MPR_INTERFACE_1 {
    WCHAR wszInterfaceName[257];
    HANDLE hInterface;
    BOOL fEnabled;
    ROUTER_INTERFACE_TYPE dwIfType;
    ROUTER_CONNECTION_STATE dwConnectionState;
    DWORD fUnReachabilityReasons;
    DWORD dwLastError;
    LPWSTR lpwsDialoutHoursRestriction;
};

typedef struct _MPR_INTERFACE_2 _MPR_INTERFACE_2, *P_MPR_INTERFACE_2;

struct _MPR_INTERFACE_2 {
    WCHAR wszInterfaceName[257];
    HANDLE hInterface;
    BOOL fEnabled;
    ROUTER_INTERFACE_TYPE dwIfType;
    ROUTER_CONNECTION_STATE dwConnectionState;
    DWORD fUnReachabilityReasons;
    DWORD dwLastError;
    DWORD dwfOptions;
    WCHAR szLocalPhoneNumber[129];
    PWCHAR szAlternates;
    DWORD ipaddr;
    DWORD ipaddrDns;
    DWORD ipaddrDnsAlt;
    DWORD ipaddrWins;
    DWORD ipaddrWinsAlt;
    DWORD dwfNetProtocols;
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szX25PadType[33];
    WCHAR szX25Address[201];
    WCHAR szX25Facilities[201];
    WCHAR szX25UserData[201];
    DWORD dwChannels;
    DWORD dwSubEntries;
    DWORD dwDialMode;
    DWORD dwDialExtraPercent;
    DWORD dwDialExtraSampleSeconds;
    DWORD dwHangUpExtraPercent;
    DWORD dwHangUpExtraSampleSeconds;
    DWORD dwIdleDisconnectSeconds;
    DWORD dwType;
    DWORD dwEncryptionType;
    DWORD dwCustomAuthKey;
    DWORD dwCustomAuthDataSize;
    LPBYTE lpbCustomAuthData;
    GUID guidId;
    DWORD dwVpnStrategy;
};

typedef struct _MPR_INTERFACE_3 _MPR_INTERFACE_3, *P_MPR_INTERFACE_3;

struct _MPR_INTERFACE_3 {
    WCHAR wszInterfaceName[257];
    HANDLE hInterface;
    BOOL fEnabled;
    ROUTER_INTERFACE_TYPE dwIfType;
    ROUTER_CONNECTION_STATE dwConnectionState;
    DWORD fUnReachabilityReasons;
    DWORD dwLastError;
    DWORD dwfOptions;
    WCHAR szLocalPhoneNumber[129];
    PWCHAR szAlternates;
    DWORD ipaddr;
    DWORD ipaddrDns;
    DWORD ipaddrDnsAlt;
    DWORD ipaddrWins;
    DWORD ipaddrWinsAlt;
    DWORD dwfNetProtocols;
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szX25PadType[33];
    WCHAR szX25Address[201];
    WCHAR szX25Facilities[201];
    WCHAR szX25UserData[201];
    DWORD dwChannels;
    DWORD dwSubEntries;
    DWORD dwDialMode;
    DWORD dwDialExtraPercent;
    DWORD dwDialExtraSampleSeconds;
    DWORD dwHangUpExtraPercent;
    DWORD dwHangUpExtraSampleSeconds;
    DWORD dwIdleDisconnectSeconds;
    DWORD dwType;
    DWORD dwEncryptionType;
    DWORD dwCustomAuthKey;
    DWORD dwCustomAuthDataSize;
    LPBYTE lpbCustomAuthData;
    GUID guidId;
    DWORD dwVpnStrategy;
    ULONG AddressCount;
    IN6_ADDR ipv6addrDns;
    IN6_ADDR ipv6addrDnsAlt;
    IN6_ADDR * ipv6addr;
};

typedef struct _MPR_IPINIP_INTERFACE_0 _MPR_IPINIP_INTERFACE_0, *P_MPR_IPINIP_INTERFACE_0;

struct _MPR_IPINIP_INTERFACE_0 {
    WCHAR wszFriendlyName[257];
    GUID Guid;
};

typedef struct _MPR_SERVER_0 _MPR_SERVER_0, *P_MPR_SERVER_0;

struct _MPR_SERVER_0 {
    BOOL fLanOnlyMode;
    DWORD dwUpTime;
    DWORD dwTotalPorts;
    DWORD dwPortsInUse;
};

typedef struct _MPR_SERVER_1 _MPR_SERVER_1, *P_MPR_SERVER_1;

struct _MPR_SERVER_1 {
    DWORD dwNumPptpPorts;
    DWORD dwPptpPortFlags;
    DWORD dwNumL2tpPorts;
    DWORD dwL2tpPortFlags;
};

typedef struct _MPR_SERVER_2 _MPR_SERVER_2, *P_MPR_SERVER_2;

struct _MPR_SERVER_2 {
    DWORD dwNumPptpPorts;
    DWORD dwPptpPortFlags;
    DWORD dwNumL2tpPorts;
    DWORD dwL2tpPortFlags;
    DWORD dwNumSstpPorts;
    DWORD dwSstpPortFlags;
};

typedef struct _MPR_SERVER_EX _MPR_SERVER_EX, *P_MPR_SERVER_EX;

typedef struct _MPRAPI_TUNNEL_CONFIG_PARAMS _MPRAPI_TUNNEL_CONFIG_PARAMS, *P_MPRAPI_TUNNEL_CONFIG_PARAMS;

typedef struct _MPRAPI_TUNNEL_CONFIG_PARAMS MPRAPI_TUNNEL_CONFIG_PARAMS;

typedef struct _IKEV2_CONFIG_PARAMS IKEV2_CONFIG_PARAMS;

typedef struct _PPTP_CONFIG_PARAMS _PPTP_CONFIG_PARAMS, *P_PPTP_CONFIG_PARAMS;

typedef struct _PPTP_CONFIG_PARAMS PPTP_CONFIG_PARAMS;

typedef struct _L2TP_CONFIG_PARAMS L2TP_CONFIG_PARAMS;

typedef struct _SSTP_CONFIG_PARAMS _SSTP_CONFIG_PARAMS, *P_SSTP_CONFIG_PARAMS;

typedef struct _SSTP_CONFIG_PARAMS SSTP_CONFIG_PARAMS;

typedef struct _SSTP_CERT_INFO _SSTP_CERT_INFO, *P_SSTP_CERT_INFO;

typedef struct _SSTP_CERT_INFO SSTP_CERT_INFO;

struct _SSTP_CERT_INFO {
    BOOL isDefault;
    CRYPT_HASH_BLOB certBlob;
};

struct _SSTP_CONFIG_PARAMS {
    DWORD dwNumPorts;
    DWORD dwPortFlags;
    BOOL isUseHttps;
    DWORD certAlgorithm;
    SSTP_CERT_INFO sstpCertDetails;
};

struct _PPTP_CONFIG_PARAMS {
    DWORD dwNumPorts;
    DWORD dwPortFlags;
};

struct _MPRAPI_TUNNEL_CONFIG_PARAMS {
    IKEV2_CONFIG_PARAMS IkeConfigParams;
    PPTP_CONFIG_PARAMS PptpConfigParams;
    L2TP_CONFIG_PARAMS L2tpConfigParams;
    SSTP_CONFIG_PARAMS SstpConfigParams;
};

struct _MPR_SERVER_EX {
    MPRAPI_OBJECT_HEADER Header;
    DWORD fLanOnlyMode;
    DWORD dwUpTime;
    DWORD dwTotalPorts;
    DWORD dwPortsInUse;
    DWORD Reserved;
    MPRAPI_TUNNEL_CONFIG_PARAMS ConfigParams;
};

typedef struct _MPR_SERVER_SET_CONFIG_EX _MPR_SERVER_SET_CONFIG_EX, *P_MPR_SERVER_SET_CONFIG_EX;

struct _MPR_SERVER_SET_CONFIG_EX {
    MPRAPI_OBJECT_HEADER Header;
    DWORD setConfigForProtocols;
    MPRAPI_TUNNEL_CONFIG_PARAMS ConfigParams;
};

typedef struct _MPR_TRANSPORT_0 _MPR_TRANSPORT_0, *P_MPR_TRANSPORT_0;

struct _MPR_TRANSPORT_0 {
    DWORD dwTransportId;
    HANDLE hTransport;
    WCHAR wszTransportName[41];
};

typedef struct _MPRAPI_ADMIN_DLL_CALLBACKS _MPRAPI_ADMIN_DLL_CALLBACKS, *P_MPRAPI_ADMIN_DLL_CALLBACKS;

typedef DWORD (* PMPRADMINGETIPADDRESSFORUSER)(WCHAR *, WCHAR *, DWORD *, BOOL *);

typedef void (* PMPRADMINRELEASEIPADRESS)(WCHAR *, WCHAR *, DWORD *);

typedef DWORD (* PMPRADMINGETIPV6ADDRESSFORUSER)(WCHAR *, WCHAR *, IN6_ADDR *, BOOL *);

typedef void (* PMPRADMINRELEASEIPV6ADDRESSFORUSER)(WCHAR *, WCHAR *, IN6_ADDR *);

typedef struct _RAS_PORT_0 _RAS_PORT_0, *P_RAS_PORT_0;

typedef struct _RAS_PORT_0 RAS_PORT_0;

typedef struct _RAS_PORT_1 _RAS_PORT_1, *P_RAS_PORT_1;

typedef struct _RAS_PORT_1 RAS_PORT_1;

typedef BOOL (* PMPRADMINACCEPTNEWLINK)(RAS_PORT_0 *, RAS_PORT_1 *);

typedef void (* PMPRADMINLINKHANGUPNOTIFICATION)(RAS_PORT_0 *, RAS_PORT_1 *);

typedef DWORD (* PMPRADMINTERMINATEDLL)(void);

typedef struct _RAS_CONNECTION_EX _RAS_CONNECTION_EX, *P_RAS_CONNECTION_EX;

typedef struct _RAS_CONNECTION_EX RAS_CONNECTION_EX;

typedef BOOL (* PMPRADMINACCEPTNEWCONNECTIONEX)(RAS_CONNECTION_EX *);

typedef BOOL (* PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX)(RAS_CONNECTION_EX *);

typedef BOOL (* PMPRADMINACCEPTREAUTHENTICATIONEX)(RAS_CONNECTION_EX *);

typedef void (* PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX)(RAS_CONNECTION_EX *);

typedef struct _AUTH_VALIDATION_EX AUTH_VALIDATION_EX;

typedef DWORD (* PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX)(AUTH_VALIDATION_EX *);

typedef enum _RAS_PORT_CONDITION {
    RAS_PORT_AUTHENTICATED=5,
    RAS_PORT_AUTHENTICATING=4,
    RAS_PORT_CALLING_BACK=2,
    RAS_PORT_DISCONNECTED=1,
    RAS_PORT_INITIALIZING=6,
    RAS_PORT_LISTENING=3,
    RAS_PORT_NON_OPERATIONAL=0
} _RAS_PORT_CONDITION;

typedef enum _RAS_PORT_CONDITION RAS_PORT_CONDITION;

typedef enum _RAS_HARDWARE_CONDITION {
    RAS_HARDWARE_FAILURE=1,
    RAS_HARDWARE_OPERATIONAL=0
} _RAS_HARDWARE_CONDITION;

typedef enum _RAS_HARDWARE_CONDITION RAS_HARDWARE_CONDITION;

typedef enum _RAS_QUARANTINE_STATE {
    RAS_QUAR_STATE_NORMAL=0,
    RAS_QUAR_STATE_NOT_CAPABLE=3,
    RAS_QUAR_STATE_PROBATION=2,
    RAS_QUAR_STATE_QUARANTINE=1
} _RAS_QUARANTINE_STATE;

typedef enum _RAS_QUARANTINE_STATE RAS_QUARANTINE_STATE;

typedef struct _PROJECTION_INFO _PROJECTION_INFO, *P_PROJECTION_INFO;

typedef struct _PROJECTION_INFO PROJECTION_INFO;

typedef union _union_6553 _union_6553, *P_union_6553;

typedef struct _PPP_PROJECTION_INFO _PPP_PROJECTION_INFO, *P_PPP_PROJECTION_INFO;

typedef struct _PPP_PROJECTION_INFO PPP_PROJECTION_INFO;

typedef struct _IKEV2_PROJECTION_INFO IKEV2_PROJECTION_INFO;

struct _MPRAPI_ADMIN_DLL_CALLBACKS {
    UCHAR revision;
    PMPRADMINGETIPADDRESSFORUSER lpfnMprAdminGetIpAddressForUser;
    PMPRADMINRELEASEIPADRESS lpfnMprAdminReleaseIpAddress;
    PMPRADMINGETIPV6ADDRESSFORUSER lpfnMprAdminGetIpv6AddressForUser;
    PMPRADMINRELEASEIPV6ADDRESSFORUSER lpfnMprAdminReleaseIpV6AddressForUser;
    PMPRADMINACCEPTNEWLINK lpfnRasAdminAcceptNewLink;
    PMPRADMINLINKHANGUPNOTIFICATION lpfnRasAdminLinkHangupNotification;
    PMPRADMINTERMINATEDLL lpfnRasAdminTerminateDll;
    PMPRADMINACCEPTNEWCONNECTIONEX lpfnRasAdminAcceptNewConnectionEx;
    PMPRADMINACCEPTTUNNELENDPOINTCHANGEEX lpfnRasAdminAcceptEndpointChangeEx;
    PMPRADMINACCEPTREAUTHENTICATIONEX lpfnRasAdminAcceptReauthenticationEx;
    PMPRADMINCONNECTIONHANGUPNOTIFICATIONEX lpfnRasAdminConnectionHangupNotificationEx;
    PMPRADMINRASVALIDATEPREAUTHENTICATEDCONNECTIONEX lpfnRASValidatePreAuthenticatedConnectionEx;
};

struct _PPP_PROJECTION_INFO {
    DWORD dwIPv4NegotiationError;
    WCHAR wszAddress[16];
    WCHAR wszRemoteAddress[16];
    DWORD dwIPv4Options;
    DWORD dwIPv4RemoteOptions;
    ULONG64 IPv4SubInterfaceIndex;
    DWORD dwIPv6NegotiationError;
    BYTE bInterfaceIdentifier[8];
    BYTE bRemoteInterfaceIdentifier[8];
    BYTE bPrefix[8];
    DWORD dwPrefixLength;
    ULONG64 IPv6SubInterfaceIndex;
    DWORD dwLcpError;
    DWORD dwAuthenticationProtocol;
    DWORD dwAuthenticationData;
    DWORD dwRemoteAuthenticationProtocol;
    DWORD dwRemoteAuthenticationData;
    DWORD dwLcpTerminateReason;
    DWORD dwLcpRemoteTerminateReason;
    DWORD dwLcpOptions;
    DWORD dwLcpRemoteOptions;
    DWORD dwEapTypeId;
    DWORD dwRemoteEapTypeId;
    DWORD dwCcpError;
    DWORD dwCompressionAlgorithm;
    DWORD dwCcpOptions;
    DWORD dwRemoteCompressionAlgorithm;
    DWORD dwCcpRemoteOptions;
};

union _union_6553 {
    PPP_PROJECTION_INFO PppProjectionInfo;
    IKEV2_PROJECTION_INFO Ikev2ProjectionInfo;
};

struct _PROJECTION_INFO {
    UCHAR projectionInfoType;
    union _union_6553 field_0x1;
};

struct _RAS_PORT_1 {
    HANDLE hPort;
    HANDLE hConnection;
    RAS_HARDWARE_CONDITION dwHardwareCondition;
    DWORD dwLineSpeed;
    DWORD dwBytesXmited;
    DWORD dwBytesRcved;
    DWORD dwFramesXmited;
    DWORD dwFramesRcved;
    DWORD dwCrcErr;
    DWORD dwTimeoutErr;
    DWORD dwAlignmentErr;
    DWORD dwHardwareOverrunErr;
    DWORD dwFramingErr;
    DWORD dwBufferOverrunErr;
    DWORD dwCompressionRatioIn;
    DWORD dwCompressionRatioOut;
};

struct _RAS_CONNECTION_EX {
    MPRAPI_OBJECT_HEADER Header;
    DWORD dwConnectDuration;
    ROUTER_INTERFACE_TYPE dwInterfaceType;
    DWORD dwConnectionFlags;
    WCHAR wszInterfaceName[257];
    WCHAR wszUserName[257];
    WCHAR wszLogonDomain[16];
    WCHAR wszRemoteComputer[17];
    GUID guid;
    RAS_QUARANTINE_STATE rasQuarState;
    FILETIME probationTime;
    DWORD dwBytesXmited;
    DWORD dwBytesRcved;
    DWORD dwFramesXmited;
    DWORD dwFramesRcved;
    DWORD dwCrcErr;
    DWORD dwTimeoutErr;
    DWORD dwAlignmentErr;
    DWORD dwHardwareOverrunErr;
    DWORD dwFramingErr;
    DWORD dwBufferOverrunErr;
    DWORD dwCompressionRatioIn;
    DWORD dwCompressionRatioOut;
    DWORD dwNumSwitchOvers;
    WCHAR wszRemoteEndpointAddress[65];
    WCHAR wszLocalEndpointAddress[65];
    PROJECTION_INFO ProjectionInfo;
    HANDLE hConnection;
    HANDLE hInterface;
};

struct _RAS_PORT_0 {
    HANDLE hPort;
    HANDLE hConnection;
    RAS_PORT_CONDITION dwPortCondition;
    DWORD dwTotalNumberOfCalls;
    DWORD dwConnectDuration;
    WCHAR wszPortName[17];
    WCHAR wszMediaName[17];
    WCHAR wszDeviceName[129];
    WCHAR wszDeviceType[17];
};

typedef enum _MPRAPI_OBJECT_TYPE {
    MPRAPI_OBJECT_TYPE_AUTH_VALIDATION_OBJECT=4,
    MPRAPI_OBJECT_TYPE_MPR_SERVER_OBJECT=2,
    MPRAPI_OBJECT_TYPE_MPR_SERVER_SET_CONFIG_OBJECT=3,
    MPRAPI_OBJECT_TYPE_RAS_CONNECTION_OBJECT=1,
    MPRAPI_OBJECT_TYPE_UPDATE_CONNECTION_OBJECT=5
} _MPRAPI_OBJECT_TYPE;

typedef struct _PPP_ATCP_INFO _PPP_ATCP_INFO, *P_PPP_ATCP_INFO;

struct _PPP_ATCP_INFO {
    DWORD dwError;
    WCHAR wszAddress[33];
};

typedef struct _PPP_CCP_INFO _PPP_CCP_INFO, *P_PPP_CCP_INFO;

struct _PPP_CCP_INFO {
    DWORD dwError;
    DWORD dwCompressionAlgorithm;
    DWORD dwOptions;
    DWORD dwRemoteCompressionAlgorithm;
    DWORD dwRemoteOptions;
};

typedef struct _PPP_INFO _PPP_INFO, *P_PPP_INFO;

typedef struct _PPP_NBFCP_INFO _PPP_NBFCP_INFO, *P_PPP_NBFCP_INFO;

typedef struct _PPP_NBFCP_INFO PPP_NBFCP_INFO;

typedef struct _PPP_IPCP_INFO _PPP_IPCP_INFO, *P_PPP_IPCP_INFO;

typedef struct _PPP_IPCP_INFO PPP_IPCP_INFO;

typedef struct _PPP_IPXCP_INFO _PPP_IPXCP_INFO, *P_PPP_IPXCP_INFO;

typedef struct _PPP_IPXCP_INFO PPP_IPXCP_INFO;

typedef struct _PPP_ATCP_INFO PPP_ATCP_INFO;

struct _PPP_NBFCP_INFO {
    DWORD dwError;
    WCHAR wszWksta[17];
};

struct _PPP_IPCP_INFO {
    DWORD dwError;
    WCHAR wszAddress[16];
    WCHAR wszRemoteAddress[16];
};

struct _PPP_IPXCP_INFO {
    DWORD dwError;
    WCHAR wszAddress[23];
};

struct _PPP_INFO {
    PPP_NBFCP_INFO nbf;
    PPP_IPCP_INFO ip;
    PPP_IPXCP_INFO ipx;
    PPP_ATCP_INFO at;
};

typedef struct _PPP_INFO_2 _PPP_INFO_2, *P_PPP_INFO_2;

typedef struct _PPP_IPCP_INFO2 _PPP_IPCP_INFO2, *P_PPP_IPCP_INFO2;

typedef struct _PPP_IPCP_INFO2 PPP_IPCP_INFO2;

typedef struct _PPP_CCP_INFO PPP_CCP_INFO;

typedef struct _PPP_LCP_INFO _PPP_LCP_INFO, *P_PPP_LCP_INFO;

typedef struct _PPP_LCP_INFO PPP_LCP_INFO;

struct _PPP_IPCP_INFO2 {
    DWORD dwError;
    WCHAR wszAddress[16];
    WCHAR wszRemoteAddress[16];
    DWORD dwOptions;
    DWORD dwRemoteOptions;
};

struct _PPP_LCP_INFO {
    DWORD dwError;
    DWORD dwAuthenticationProtocol;
    DWORD dwAuthenticationData;
    DWORD dwRemoteAuthenticationProtocol;
    DWORD dwRemoteAuthenticationData;
    DWORD dwTerminateReason;
    DWORD dwRemoteTerminateReason;
    DWORD dwOptions;
    DWORD dwRemoteOptions;
    DWORD dwEapTypeId;
    DWORD dwRemoteEapTypeId;
};

struct _PPP_INFO_2 {
    PPP_NBFCP_INFO nbf;
    PPP_IPCP_INFO2 ip;
    PPP_IPXCP_INFO ipx;
    PPP_ATCP_INFO at;
    PPP_CCP_INFO ccp;
    PPP_LCP_INFO lcp;
};

typedef struct _PPP_INFO_3 _PPP_INFO_3, *P_PPP_INFO_3;

typedef struct _PPP_IPV6_CP_INFO _PPP_IPV6_CP_INFO, *P_PPP_IPV6_CP_INFO;

typedef struct _PPP_IPV6_CP_INFO PPP_IPV6_CP_INFO;

struct _PPP_IPV6_CP_INFO {
    DWORD dwVersion;
    DWORD dwSize;
    DWORD dwError;
    BYTE bInterfaceIdentifier[8];
    BYTE bRemoteInterfaceIdentifier[8];
    DWORD dwOptions;
    DWORD dwRemoteOptions;
    BYTE bPrefix[8];
    DWORD dwPrefixLength;
};

struct _PPP_INFO_3 {
    PPP_NBFCP_INFO nbf;
    PPP_IPCP_INFO2 ip;
    PPP_IPV6_CP_INFO ipv6;
    PPP_CCP_INFO ccp;
    PPP_LCP_INFO lcp;
};

typedef struct _RAS_CONNECTION_0 _RAS_CONNECTION_0, *P_RAS_CONNECTION_0;

struct _RAS_CONNECTION_0 {
    HANDLE hConnection;
    HANDLE hInterface;
    DWORD dwConnectDuration;
    ROUTER_INTERFACE_TYPE dwInterfaceType;
    DWORD dwConnectionFlags;
    WCHAR wszInterfaceName[257];
    WCHAR wszUserName[257];
    WCHAR wszLogonDomain[16];
    WCHAR wszRemoteComputer[17];
};

typedef struct _RAS_CONNECTION_1 _RAS_CONNECTION_1, *P_RAS_CONNECTION_1;

typedef struct _PPP_INFO PPP_INFO;

struct _RAS_CONNECTION_1 {
    HANDLE hConnection;
    HANDLE hInterface;
    PPP_INFO PppInfo;
    DWORD dwBytesXmited;
    DWORD dwBytesRcved;
    DWORD dwFramesXmited;
    DWORD dwFramesRcved;
    DWORD dwCrcErr;
    DWORD dwTimeoutErr;
    DWORD dwAlignmentErr;
    DWORD dwHardwareOverrunErr;
    DWORD dwFramingErr;
    DWORD dwBufferOverrunErr;
    DWORD dwCompressionRatioIn;
    DWORD dwCompressionRatioOut;
};

typedef struct _RAS_CONNECTION_2 _RAS_CONNECTION_2, *P_RAS_CONNECTION_2;

typedef struct _PPP_INFO_2 PPP_INFO_2;

struct _RAS_CONNECTION_2 {
    HANDLE hConnection;
    WCHAR wszUserName[257];
    ROUTER_INTERFACE_TYPE dwInterfaceType;
    GUID guid;
    PPP_INFO_2 PppInfo2;
};

typedef struct _RAS_CONNECTION_3 _RAS_CONNECTION_3, *P_RAS_CONNECTION_3;

typedef struct _PPP_INFO_3 PPP_INFO_3;

struct _RAS_CONNECTION_3 {
    DWORD dwVersion;
    DWORD dwSize;
    HANDLE hConnection;
    WCHAR wszUserName[257];
    ROUTER_INTERFACE_TYPE dwInterfaceType;
    GUID guid;
    PPP_INFO_3 PppInfo3;
    RAS_QUARANTINE_STATE rasQuarState;
    FILETIME timer;
};

typedef struct _RAS_USER_0 _RAS_USER_0, *P_RAS_USER_0;

struct _RAS_USER_0 {
    BYTE bfPrivilege;
    WCHAR wszPhoneNumber[129];
};

typedef struct _RAS_USER_1 _RAS_USER_1, *P_RAS_USER_1;

struct _RAS_USER_1 {
    BYTE bfPrivilege;
    WCHAR wszPhoneNumber[129];
    BYTE bfPrivilege2;
};

typedef HANDLE MIB_SERVER_HANDLE;

typedef struct _MPR_CREDENTIALSEX_0 MPR_CREDENTIALSEX_0;

typedef struct _MPR_CREDENTIALSEX_1 MPR_CREDENTIALSEX_1;

typedef struct _MPR_DEVICE_0 MPR_DEVICE_0;

typedef struct _MPR_DEVICE_1 MPR_DEVICE_1;

typedef struct _MPR_FILTER_0 MPR_FILTER_0;

typedef struct _MPR_IFTRANSPORT_0 MPR_IFTRANSPORT_0;

typedef struct _MPR_INTERFACE_0 MPR_INTERFACE_0;

typedef struct _MPR_INTERFACE_1 MPR_INTERFACE_1;

typedef struct _MPR_INTERFACE_2 MPR_INTERFACE_2;

typedef struct _MPR_INTERFACE_3 MPR_INTERFACE_3;

typedef struct _MPR_IPINIP_INTERFACE_0 MPR_IPINIP_INTERFACE_0;

typedef struct _MPR_SERVER_0 MPR_SERVER_0;

typedef struct _MPR_SERVER_1 MPR_SERVER_1;

typedef struct _MPR_SERVER_2 MPR_SERVER_2;

typedef struct _MPR_SERVER_EX MPR_SERVER_EX;

typedef HANDLE MPR_SERVER_HANDLE;

typedef struct _MPR_SERVER_SET_CONFIG_EX MPR_SERVER_SET_CONFIG_EX;

typedef struct _MPR_TRANSPORT_0 MPR_TRANSPORT_0;

typedef struct _MPRAPI_ADMIN_DLL_CALLBACKS MPRAPI_ADMIN_DLL_CALLBACKS;

typedef enum _MPRAPI_OBJECT_TYPE MPRAPI_OBJECT_TYPE;

typedef struct _IKEV2_CONFIG_PARAMS * PIKEV2_CONFIG_PARAMS;

typedef struct _IKEV2_PROJECTION_INFO * PIKEV2_PROJECTION_INFO;

typedef struct _IKEV2_TUNNEL_CONFIG_PARAMS * PIKEV2_TUNNEL_CONFIG_PARAMS;

typedef struct _L2TP_CONFIG_PARAMS * PL2TP_CONFIG_PARAMS;

typedef struct _MPR_CREDENTIALSEX_0 * PMPR_CREDENTIALSEX_0;

typedef struct _MPR_CREDENTIALSEX_1 * PMPR_CREDENTIALSEX_1;

typedef struct _MPR_DEVICE_0 * PMPR_DEVICE_0;

typedef struct _MPR_DEVICE_1 * PMPR_DEVICE_1;

typedef struct _MPR_FILTER_0 * PMPR_FILTER_0;

typedef struct _MPR_IFTRANSPORT_0 * PMPR_IFTRANSPORT_0;

typedef struct _MPR_INTERFACE_0 * PMPR_INTERFACE_0;

typedef struct _MPR_INTERFACE_1 * PMPR_INTERFACE_1;

typedef struct _MPR_INTERFACE_2 * PMPR_INTERFACE_2;

typedef struct _MPR_INTERFACE_3 * PMPR_INTERFACE_3;

typedef struct _MPR_IPINIP_INTERFACE_0 * PMPR_IPINIP_INTERFACE_0;

typedef struct _MPR_SERVER_0 * PMPR_SERVER_0;

typedef struct _MPR_SERVER_1 * PMPR_SERVER_1;

typedef struct _MPR_SERVER_2 * PMPR_SERVER_2;

typedef struct _MPR_SERVER_EX * PMPR_SERVER_EX;

typedef struct _MPR_SERVER_SET_CONFIG_EX * PMPR_SERVER_SET_CONFIG_EX;

typedef struct _MPR_TRANSPORT_0 * PMPR_TRANSPORT_0;

typedef struct _RAS_CONNECTION_0 RAS_CONNECTION_0;

typedef struct _RAS_CONNECTION_1 RAS_CONNECTION_1;

typedef BOOL (* PMPRADMINACCEPTNEWCONNECTION)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *);

typedef struct _RAS_CONNECTION_2 RAS_CONNECTION_2;

typedef BOOL (* PMPRADMINACCEPTNEWCONNECTION2)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *, RAS_CONNECTION_2 *);

typedef struct _RAS_CONNECTION_3 RAS_CONNECTION_3;

typedef BOOL (* PMPRADMINACCEPTNEWCONNECTION3)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *, RAS_CONNECTION_2 *, RAS_CONNECTION_3 *);

typedef BOOL (* PMPRADMINACCEPTREAUTHENTICATION)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *, RAS_CONNECTION_2 *, RAS_CONNECTION_3 *);

typedef void (* PMPRADMINCONNECTIONHANGUPNOTIFICATION)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *);

typedef void (* PMPRADMINCONNECTIONHANGUPNOTIFICATION2)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *, RAS_CONNECTION_2 *);

typedef void (* PMPRADMINCONNECTIONHANGUPNOTIFICATION3)(RAS_CONNECTION_0 *, RAS_CONNECTION_1 *, RAS_CONNECTION_2 *, RAS_CONNECTION_3);

typedef struct _MPRAPI_ADMIN_DLL_CALLBACKS * PMPRAPI_ADMIN_DLL_CALLBACKS;

typedef struct _MPRAPI_OBJECT_HEADER * PMPRAPI_OBJECT_HEADER;

typedef enum _MPRAPI_OBJECT_TYPE * PMPRAPI_OBJECT_TYPE;

typedef struct _MPRAPI_TUNNEL_CONFIG_PARAMS * PMPRAPI_TUNNEL_CONFIG_PARAMS;

typedef struct _PPP_PROJECTION_INFO * PPPP_PROJECTION_INFO;

typedef struct _PPTP_CONFIG_PARAMS * PPPTP_CONFIG_PARAMS;

typedef struct _PROJECTION_INFO * PPROJECTION_INFO;

typedef struct _RAS_CONNECTION_0 * PRAS_CONNECTION_0;

typedef struct _RAS_CONNECTION_1 * PRAS_CONNECTION_1;

typedef struct _RAS_CONNECTION_2 * PRAS_CONNECTION_2;

typedef struct _RAS_CONNECTION_3 * PRAS_CONNECTION_3;

typedef struct _RAS_CONNECTION_EX * PRAS_CONNECTION_EX;

typedef struct _RAS_PORT_0 * PRAS_PORT_0;

typedef struct _RAS_PORT_1 * PRAS_PORT_1;

typedef struct RAS_UPDATE_CONNECTION_ RAS_UPDATE_CONNECTION_, *PRAS_UPDATE_CONNECTION_;

typedef struct RAS_UPDATE_CONNECTION_ * PRAS_UPDATE_CONNECTION;

struct RAS_UPDATE_CONNECTION_ {
    MPRAPI_OBJECT_HEADER Header;
    DWORD dwIfIndex;
    WCHAR wszLocalEndpointAddress[65];
    WCHAR wszRemoteEndpointAddress[65];
};

typedef struct _RAS_USER_0 * PRAS_USER_0;

typedef struct _RAS_USER_1 * PRAS_USER_1;

typedef struct _SSTP_CERT_INFO * PSSTP_CERT_INFO;

typedef struct _SSTP_CONFIG_PARAMS * PSSTP_CONFIG_PARAMS;

typedef HANDLE RAS_SERVER_HANDLE;

typedef struct RAS_UPDATE_CONNECTION_ RAS_UPDATE_CONNECTION;

typedef struct _RAS_USER_0 RAS_USER_0;

typedef struct _RAS_USER_1 RAS_USER_1;

#define CRYPTCAT_ATTR_AUTHENTICATED 268435456

#define CRYPTCAT_ATTR_DATAASCII 65536

#define CRYPTCAT_ATTR_DATABASE64 131072

#define CRYPTCAT_ATTR_DATAREPLACE 262144

#define CRYPTCAT_ATTR_NAMEASCII 1

#define CRYPTCAT_ATTR_NAMEOBJID 2

#define CRYPTCAT_ATTR_UNAUTHENTICATED 536870912

#define CRYPTCAT_E_AREA_ATTRIBUTE 131072

#define CRYPTCAT_E_AREA_HEADER 0

#define CRYPTCAT_E_AREA_MEMBER 65536

#define CRYPTCAT_E_CDF_ATTR_TOOFEWVALUES 131074

#define CRYPTCAT_E_CDF_ATTR_TYPECOMBO 131076

#define CRYPTCAT_E_CDF_BAD_GUID_CONV 131073

#define CRYPTCAT_E_CDF_DUPLICATE 2

#define CRYPTCAT_E_CDF_MEMBER_FILE_PATH 65537

#define CRYPTCAT_E_CDF_MEMBER_FILENOTFOUND 65540

#define CRYPTCAT_E_CDF_MEMBER_INDIRECTDATA 65538

#define CRYPTCAT_E_CDF_TAGNOTFOUND 4

#define CRYPTCAT_E_CDF_UNSUPPORTED 1

#define CRYPTCAT_MAX_MEMBERTAG 64

#define CRYPTCAT_MEMBER_SORTED 1073741824

#define CRYPTCAT_OPEN_ALWAYS 2

#define CRYPTCAT_OPEN_CREATENEW 1

#define CRYPTCAT_OPEN_EXCLUDE_PAGE_HASHES 65536

#define CRYPTCAT_OPEN_EXISTING 4

#define CRYPTCAT_OPEN_FLAGS_MASK 4294901760

#define CRYPTCAT_OPEN_INCLUDE_PAGE_HASHES 131072

#define CRYPTCAT_OPEN_NO_CONTENT_HCRYPTMSG 536870912

#define CRYPTCAT_OPEN_SORTED 1073741824

#define CRYPTCAT_OPEN_VERIFYSIGHASH 268435456

typedef struct CATALOG_INFO_ CATALOG_INFO_, *PCATALOG_INFO_;

typedef struct CATALOG_INFO_ CATALOG_INFO;

struct CATALOG_INFO_ {
    DWORD cbStruct;
    WCHAR wszCatalogFile[260];
};

typedef struct CRYPTCATATTRIBUTE_ CRYPTCATATTRIBUTE_, *PCRYPTCATATTRIBUTE_;

typedef struct CRYPTCATATTRIBUTE_ CRYPTCATATTRIBUTE;

struct CRYPTCATATTRIBUTE_ {
    DWORD cbStruct;
    LPWSTR pwszReferenceTag;
    DWORD dwAttrTypeAndAction;
    DWORD cbValue;
    BYTE * pbValue;
    DWORD dwReserved;
};

typedef struct CRYPTCATCDF_ CRYPTCATCDF_, *PCRYPTCATCDF_;

typedef struct CRYPTCATCDF_ CRYPTCATCDF;

struct CRYPTCATCDF_ {
    DWORD cbStruct;
    HANDLE hFile;
    DWORD dwCurFilePos;
    DWORD dwLastMemberOffset;
    BOOL fEOF;
    LPWSTR pwszResultDir;
    HANDLE hCATStore;
};

typedef struct CRYPTCATMEMBER_ CRYPTCATMEMBER;

typedef struct CRYPTCATSTORE_ CRYPTCATSTORE;

typedef HANDLE HCATADMIN;

typedef HANDLE HCATINFO;

typedef void (* PFN_CDF_PARSE_ERROR_CALLBACK)(DWORD, DWORD, WCHAR *);

#define DCM_FLAGS_CTFMON 2

#define DCM_FLAGS_LOCALTHREADTSF 4

#define DCM_FLAGS_TASKENG 1

#define ILMCM_CHECKLAYOUTANDTIPENABLED 1

#define _STACKSLOP 1024

#define A_A 32

#define A_D 16

#define A_H 2

#define A_MOD 39

#define A_RO 1

#define A_S 4

#define A_V 8

#define E_access 5

#define E_arena 7

#define E_badenv 10

#define E_badfmt 11

#define E_curdir 16

#define E_difdev 17

#define E_iaccess 12

#define E_iblock 9

#define E_idata 13

#define E_idrive 15

#define E_ifunc 1

#define E_ihandle 6

#define E_lockerr 33

#define E_maxerr2 19

#define E_maxerr3 34

#define E_nofile 2

#define E_nomem 8

#define E_nomore 18

#define E_nopath 3

#define E_sharerr 32

#define E_toomany 4

#define E_unknown 14

#define FAPPEND 32

#define FCRLF 4

#define FDEV 64

#define FEOFLAG 2

#define FNOINHERIT 16

#define FOPEN 1

#define FPIPE 8

#define FTEXT 128

#define MSSIP_ADDINFO_BLOB 3

#define MSSIP_ADDINFO_CATMEMBER 2

#define MSSIP_ADDINFO_FLAT 1

#define MSSIP_ADDINFO_NONE 0

#define MSSIP_ADDINFO_NONMSSIP 500

#define MSSIP_FLAGS_PROHIBIT_RESIZE_ON_CREATE 65536

#define MSSIP_FLAGS_USE_CATALOG 131072

#define SIP_MAX_MAGIC_NUMBER 4

#define SPC_EXC_PE_PAGE_HASHES_FLAG 16

#define SPC_INC_PE_DEBUG_INFO_FLAG 64

#define SPC_INC_PE_IMPORT_ADDR_TABLE_FLAG 32

#define SPC_INC_PE_PAGE_HASHES_FLAG 256

#define SPC_INC_PE_RESOURCES_FLAG 128

typedef CRYPT_HASH_BLOB CRYPT_DIGEST_DATA;

typedef struct SIP_DISPATCH_INFO_ * LPSIP_DISPATCH_INFO;

typedef struct SIP_SUBJECTINFO_ * LPSIP_SUBJECTINFO;

typedef struct MS_ADDINFO_BLOB_ MS_ADDINFO_BLOB;

typedef struct MS_ADDINFO_CATALOGMEMBER_ MS_ADDINFO_CATALOGMEMBER;

typedef struct MS_ADDINFO_FLAT_ MS_ADDINFO_FLAT;

typedef BOOL (* pfnIsFileSupported)(HANDLE, GUID *);

typedef BOOL (* pfnIsFileSupportedName)(WCHAR *, GUID *);

typedef struct MS_ADDINFO_BLOB_ * PMS_ADDINFO_BLOB;

typedef struct MS_ADDINFO_CATALOGMEMBER_ * PMS_ADDINFO_CATALOGMEMBER;

typedef struct MS_ADDINFO_FLAT_ * PMS_ADDINFO_FLAT;

typedef struct SIP_ADD_NEWPROVIDER_ SIP_ADD_NEWPROVIDER_, *PSIP_ADD_NEWPROVIDER_;

typedef struct SIP_ADD_NEWPROVIDER_ * PSIP_ADD_NEWPROVIDER;

struct SIP_ADD_NEWPROVIDER_ {
    DWORD cbStruct;
    GUID * pgSubject;
    WCHAR * pwszDLLFileName;
    WCHAR * pwszMagicNumber;
    WCHAR * pwszIsFunctionName;
    WCHAR * pwszGetFuncName;
    WCHAR * pwszPutFuncName;
    WCHAR * pwszCreateFuncName;
    WCHAR * pwszVerifyFuncName;
    WCHAR * pwszRemoveFuncName;
    WCHAR * pwszIsFunctionNameFmt2;
};

typedef struct SIP_INDIRECT_DATA_ * PSIP_INDIRECT_DATA;

typedef struct SIP_ADD_NEWPROVIDER_ SIP_ADD_NEWPROVIDER;

typedef struct SIP_DISPATCH_INFO_ SIP_DISPATCH_INFO;

typedef struct _xml_error _xml_error, *P_xml_error;

struct _xml_error {
    uint _nLine;
    BSTR _pchBuf;
    uint _cchBuf;
    uint _ich;
    BSTR _pszFound;
    BSTR _pszExpected;
    DWORD _reserved1;
    DWORD _reserved2;
};

typedef struct DOMDocument DOMDocument, *PDOMDocument;

struct DOMDocument {
};

typedef struct DOMFreeThreadedDocument DOMFreeThreadedDocument, *PDOMFreeThreadedDocument;

struct DOMFreeThreadedDocument {
};

typedef enum tagDOMNodeType {
    NODE_ATTRIBUTE=2,
    NODE_CDATA_SECTION=4,
    NODE_COMMENT=8,
    NODE_DOCUMENT=9,
    NODE_DOCUMENT_FRAGMENT=11,
    NODE_DOCUMENT_TYPE=10,
    NODE_ELEMENT=1,
    NODE_ENTITY=6,
    NODE_ENTITY_REFERENCE=5,
    NODE_INVALID=0,
    NODE_NOTATION=12,
    NODE_PROCESSING_INSTRUCTION=7,
    NODE_TEXT=3
} tagDOMNodeType;

typedef enum tagDOMNodeType DOMNodeType;

typedef struct IXMLAttribute IXMLAttribute, *PIXMLAttribute;

typedef struct IXMLAttributeVtbl IXMLAttributeVtbl, *PIXMLAttributeVtbl;

struct IXMLAttribute {
    struct IXMLAttributeVtbl * lpVtbl;
};

struct IXMLAttributeVtbl {
    HRESULT (* QueryInterface)(struct IXMLAttribute *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLAttribute *);
    ULONG (* Release)(struct IXMLAttribute *);
    HRESULT (* GetTypeInfoCount)(struct IXMLAttribute *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLAttribute *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLAttribute *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLAttribute *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_name)(struct IXMLAttribute *, BSTR *);
    HRESULT (* get_value)(struct IXMLAttribute *, BSTR *);
};

typedef struct IXMLDocument IXMLDocument, *PIXMLDocument;

typedef struct IXMLDocumentVtbl IXMLDocumentVtbl, *PIXMLDocumentVtbl;

typedef struct IXMLElement IXMLElement, *PIXMLElement;

typedef struct IXMLElementVtbl IXMLElementVtbl, *PIXMLElementVtbl;

typedef struct IXMLElementCollection IXMLElementCollection, *PIXMLElementCollection;

typedef struct IXMLElementCollectionVtbl IXMLElementCollectionVtbl, *PIXMLElementCollectionVtbl;

struct IXMLElementCollection {
    struct IXMLElementCollectionVtbl * lpVtbl;
};

struct IXMLElementCollectionVtbl {
    HRESULT (* QueryInterface)(struct IXMLElementCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLElementCollection *);
    ULONG (* Release)(struct IXMLElementCollection *);
    HRESULT (* GetTypeInfoCount)(struct IXMLElementCollection *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLElementCollection *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLElementCollection *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLElementCollection *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* put_length)(struct IXMLElementCollection *, long);
    HRESULT (* get_length)(struct IXMLElementCollection *, long *);
    HRESULT (* get__newEnum)(struct IXMLElementCollection *, struct IUnknown * *);
    HRESULT (* item)(struct IXMLElementCollection *, VARIANT, VARIANT, struct IDispatch * *);
};

struct IXMLElement {
    struct IXMLElementVtbl * lpVtbl;
};

struct IXMLDocumentVtbl {
    HRESULT (* QueryInterface)(struct IXMLDocument *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDocument *);
    ULONG (* Release)(struct IXMLDocument *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDocument *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDocument *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDocument *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDocument *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_root)(struct IXMLDocument *, struct IXMLElement * *);
    HRESULT (* get_fileSize)(struct IXMLDocument *, BSTR *);
    HRESULT (* get_fileModifiedDate)(struct IXMLDocument *, BSTR *);
    HRESULT (* get_fileUpdatedDate)(struct IXMLDocument *, BSTR *);
    HRESULT (* get_URL)(struct IXMLDocument *, BSTR *);
    HRESULT (* put_URL)(struct IXMLDocument *, BSTR);
    HRESULT (* get_mimeType)(struct IXMLDocument *, BSTR *);
    HRESULT (* get_readyState)(struct IXMLDocument *, long *);
    HRESULT (* get_charset)(struct IXMLDocument *, BSTR *);
    HRESULT (* put_charset)(struct IXMLDocument *, BSTR);
    HRESULT (* get_version)(struct IXMLDocument *, BSTR *);
    HRESULT (* get_doctype)(struct IXMLDocument *, BSTR *);
    HRESULT (* get_dtdURL)(struct IXMLDocument *, BSTR *);
    HRESULT (* createElement)(struct IXMLDocument *, VARIANT, VARIANT, struct IXMLElement * *);
};

struct IXMLDocument {
    struct IXMLDocumentVtbl * lpVtbl;
};

struct IXMLElementVtbl {
    HRESULT (* QueryInterface)(struct IXMLElement *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLElement *);
    ULONG (* Release)(struct IXMLElement *);
    HRESULT (* GetTypeInfoCount)(struct IXMLElement *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLElement *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_tagName)(struct IXMLElement *, BSTR *);
    HRESULT (* put_tagName)(struct IXMLElement *, BSTR);
    HRESULT (* get_parent)(struct IXMLElement *, struct IXMLElement * *);
    HRESULT (* setAttribute)(struct IXMLElement *, BSTR, VARIANT);
    HRESULT (* getAttribute)(struct IXMLElement *, BSTR, VARIANT *);
    HRESULT (* removeAttribute)(struct IXMLElement *, BSTR);
    HRESULT (* get_children)(struct IXMLElement *, struct IXMLElementCollection * *);
    HRESULT (* get_type)(struct IXMLElement *, long *);
    HRESULT (* get_text)(struct IXMLElement *, BSTR *);
    HRESULT (* put_text)(struct IXMLElement *, BSTR);
    HRESULT (* addChild)(struct IXMLElement *, struct IXMLElement *, long, long);
    HRESULT (* removeChild)(struct IXMLElement *, struct IXMLElement *);
};

typedef struct IXMLDocument2 IXMLDocument2, *PIXMLDocument2;

typedef struct IXMLDocument2Vtbl IXMLDocument2Vtbl, *PIXMLDocument2Vtbl;

typedef struct IXMLElement2 IXMLElement2, *PIXMLElement2;

typedef struct IXMLElement2Vtbl IXMLElement2Vtbl, *PIXMLElement2Vtbl;

struct IXMLElement2 {
    struct IXMLElement2Vtbl * lpVtbl;
};

struct IXMLDocument2Vtbl {
    HRESULT (* QueryInterface)(struct IXMLDocument2 *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDocument2 *);
    ULONG (* Release)(struct IXMLDocument2 *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDocument2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDocument2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDocument2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDocument2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_root)(struct IXMLDocument2 *, struct IXMLElement2 * *);
    HRESULT (* get_fileSize)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* get_fileModifiedDate)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* get_fileUpdatedDate)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* get_URL)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* put_URL)(struct IXMLDocument2 *, BSTR);
    HRESULT (* get_mimeType)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* get_readyState)(struct IXMLDocument2 *, long *);
    HRESULT (* get_charset)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* put_charset)(struct IXMLDocument2 *, BSTR);
    HRESULT (* get_version)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* get_doctype)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* get_dtdURL)(struct IXMLDocument2 *, BSTR *);
    HRESULT (* createElement)(struct IXMLDocument2 *, VARIANT, VARIANT, struct IXMLElement2 * *);
    HRESULT (* get_async)(struct IXMLDocument2 *, VARIANT_BOOL *);
    HRESULT (* put_async)(struct IXMLDocument2 *, VARIANT_BOOL);
};

struct IXMLElement2Vtbl {
    HRESULT (* QueryInterface)(struct IXMLElement2 *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLElement2 *);
    ULONG (* Release)(struct IXMLElement2 *);
    HRESULT (* GetTypeInfoCount)(struct IXMLElement2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLElement2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLElement2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLElement2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_tagName)(struct IXMLElement2 *, BSTR *);
    HRESULT (* put_tagName)(struct IXMLElement2 *, BSTR);
    HRESULT (* get_parent)(struct IXMLElement2 *, struct IXMLElement2 * *);
    HRESULT (* setAttribute)(struct IXMLElement2 *, BSTR, VARIANT);
    HRESULT (* getAttribute)(struct IXMLElement2 *, BSTR, VARIANT *);
    HRESULT (* removeAttribute)(struct IXMLElement2 *, BSTR);
    HRESULT (* get_children)(struct IXMLElement2 *, struct IXMLElementCollection * *);
    HRESULT (* get_type)(struct IXMLElement2 *, long *);
    HRESULT (* get_text)(struct IXMLElement2 *, BSTR *);
    HRESULT (* put_text)(struct IXMLElement2 *, BSTR);
    HRESULT (* addChild)(struct IXMLElement2 *, struct IXMLElement2 *, long, long);
    HRESULT (* removeChild)(struct IXMLElement2 *, struct IXMLElement2 *);
    HRESULT (* get_attributes)(struct IXMLElement2 *, struct IXMLElementCollection * *);
};

struct IXMLDocument2 {
    struct IXMLDocument2Vtbl * lpVtbl;
};

typedef struct IXMLDOMAttribute IXMLDOMAttribute, *PIXMLDOMAttribute;

typedef struct IXMLDOMAttributeVtbl IXMLDOMAttributeVtbl, *PIXMLDOMAttributeVtbl;

typedef struct IXMLDOMNode IXMLDOMNode, *PIXMLDOMNode;

typedef struct IXMLDOMNodeList IXMLDOMNodeList, *PIXMLDOMNodeList;

typedef struct IXMLDOMNamedNodeMap IXMLDOMNamedNodeMap, *PIXMLDOMNamedNodeMap;

typedef struct IXMLDOMDocument IXMLDOMDocument, *PIXMLDOMDocument;

typedef struct IXMLDOMNodeVtbl IXMLDOMNodeVtbl, *PIXMLDOMNodeVtbl;

typedef struct IXMLDOMNodeListVtbl IXMLDOMNodeListVtbl, *PIXMLDOMNodeListVtbl;

typedef struct IXMLDOMNamedNodeMapVtbl IXMLDOMNamedNodeMapVtbl, *PIXMLDOMNamedNodeMapVtbl;

typedef struct IXMLDOMDocumentVtbl IXMLDOMDocumentVtbl, *PIXMLDOMDocumentVtbl;

typedef struct IXMLDOMDocumentType IXMLDOMDocumentType, *PIXMLDOMDocumentType;

typedef struct IXMLDOMImplementation IXMLDOMImplementation, *PIXMLDOMImplementation;

typedef struct IXMLDOMElement IXMLDOMElement, *PIXMLDOMElement;

typedef struct IXMLDOMDocumentFragment IXMLDOMDocumentFragment, *PIXMLDOMDocumentFragment;

typedef struct IXMLDOMText IXMLDOMText, *PIXMLDOMText;

typedef struct IXMLDOMComment IXMLDOMComment, *PIXMLDOMComment;

typedef struct IXMLDOMCDATASection IXMLDOMCDATASection, *PIXMLDOMCDATASection;

typedef struct IXMLDOMProcessingInstruction IXMLDOMProcessingInstruction, *PIXMLDOMProcessingInstruction;

typedef struct IXMLDOMEntityReference IXMLDOMEntityReference, *PIXMLDOMEntityReference;

typedef struct IXMLDOMParseError IXMLDOMParseError, *PIXMLDOMParseError;

typedef struct IXMLDOMDocumentTypeVtbl IXMLDOMDocumentTypeVtbl, *PIXMLDOMDocumentTypeVtbl;

typedef struct IXMLDOMImplementationVtbl IXMLDOMImplementationVtbl, *PIXMLDOMImplementationVtbl;

typedef struct IXMLDOMElementVtbl IXMLDOMElementVtbl, *PIXMLDOMElementVtbl;

typedef struct IXMLDOMDocumentFragmentVtbl IXMLDOMDocumentFragmentVtbl, *PIXMLDOMDocumentFragmentVtbl;

typedef struct IXMLDOMTextVtbl IXMLDOMTextVtbl, *PIXMLDOMTextVtbl;

typedef struct IXMLDOMCommentVtbl IXMLDOMCommentVtbl, *PIXMLDOMCommentVtbl;

typedef struct IXMLDOMCDATASectionVtbl IXMLDOMCDATASectionVtbl, *PIXMLDOMCDATASectionVtbl;

typedef struct IXMLDOMProcessingInstructionVtbl IXMLDOMProcessingInstructionVtbl, *PIXMLDOMProcessingInstructionVtbl;

typedef struct IXMLDOMEntityReferenceVtbl IXMLDOMEntityReferenceVtbl, *PIXMLDOMEntityReferenceVtbl;

typedef struct IXMLDOMParseErrorVtbl IXMLDOMParseErrorVtbl, *PIXMLDOMParseErrorVtbl;

struct IXMLDOMDocumentFragment {
    struct IXMLDOMDocumentFragmentVtbl * lpVtbl;
};

struct IXMLDOMProcessingInstruction {
    struct IXMLDOMProcessingInstructionVtbl * lpVtbl;
};

struct IXMLDOMCommentVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMComment *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMComment *);
    ULONG (* Release)(struct IXMLDOMComment *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMComment *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMComment *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMComment *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMComment *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMComment *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMComment *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMComment *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMComment *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMComment *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMComment *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMComment *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMComment *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMComment *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMComment *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMComment *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMComment *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMComment *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMComment *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMComment *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMComment *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMComment *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMComment *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMComment *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMComment *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMComment *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMComment *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMComment *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_data)(struct IXMLDOMComment *, BSTR *);
    HRESULT (* put_data)(struct IXMLDOMComment *, BSTR);
    HRESULT (* get_length)(struct IXMLDOMComment *, long *);
    HRESULT (* substringData)(struct IXMLDOMComment *, long, long, BSTR *);
    HRESULT (* appendData)(struct IXMLDOMComment *, BSTR);
    HRESULT (* insertData)(struct IXMLDOMComment *, long, BSTR);
    HRESULT (* deleteData)(struct IXMLDOMComment *, long, long);
    HRESULT (* replaceData)(struct IXMLDOMComment *, long, long, BSTR);
};

struct IXMLDOMNamedNodeMapVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMNamedNodeMap *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMNamedNodeMap *);
    ULONG (* Release)(struct IXMLDOMNamedNodeMap *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMNamedNodeMap *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMNamedNodeMap *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMNamedNodeMap *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMNamedNodeMap *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* getNamedItem)(struct IXMLDOMNamedNodeMap *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* setNamedItem)(struct IXMLDOMNamedNodeMap *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeNamedItem)(struct IXMLDOMNamedNodeMap *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_item)(struct IXMLDOMNamedNodeMap *, long, struct IXMLDOMNode * *);
    HRESULT (* get_length)(struct IXMLDOMNamedNodeMap *, long *);
    HRESULT (* getQualifiedItem)(struct IXMLDOMNamedNodeMap *, BSTR, BSTR, struct IXMLDOMNode * *);
    HRESULT (* removeQualifiedItem)(struct IXMLDOMNamedNodeMap *, BSTR, BSTR, struct IXMLDOMNode * *);
    HRESULT (* nextNode)(struct IXMLDOMNamedNodeMap *, struct IXMLDOMNode * *);
    HRESULT (* reset)(struct IXMLDOMNamedNodeMap *);
    HRESULT (* get__newEnum)(struct IXMLDOMNamedNodeMap *, struct IUnknown * *);
};

struct IXMLDOMNode {
    struct IXMLDOMNodeVtbl * lpVtbl;
};

struct IXMLDOMParseError {
    struct IXMLDOMParseErrorVtbl * lpVtbl;
};

struct IXMLDOMNodeList {
    struct IXMLDOMNodeListVtbl * lpVtbl;
};

struct IXMLDOMImplementationVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMImplementation *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMImplementation *);
    ULONG (* Release)(struct IXMLDOMImplementation *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMImplementation *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMImplementation *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMImplementation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMImplementation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* hasFeature)(struct IXMLDOMImplementation *, BSTR, BSTR, VARIANT_BOOL *);
};

struct IXMLDOMProcessingInstructionVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMProcessingInstruction *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMProcessingInstruction *);
    ULONG (* Release)(struct IXMLDOMProcessingInstruction *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMProcessingInstruction *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMProcessingInstruction *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMProcessingInstruction *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMProcessingInstruction *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMProcessingInstruction *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMProcessingInstruction *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMProcessingInstruction *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMProcessingInstruction *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMProcessingInstruction *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMProcessingInstruction *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMProcessingInstruction *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMProcessingInstruction *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMProcessingInstruction *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMProcessingInstruction *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_target)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* get_data)(struct IXMLDOMProcessingInstruction *, BSTR *);
    HRESULT (* put_data)(struct IXMLDOMProcessingInstruction *, BSTR);
};

struct IXMLDOMNodeListVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMNodeList *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMNodeList *);
    ULONG (* Release)(struct IXMLDOMNodeList *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMNodeList *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMNodeList *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMNodeList *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMNodeList *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_item)(struct IXMLDOMNodeList *, long, struct IXMLDOMNode * *);
    HRESULT (* get_length)(struct IXMLDOMNodeList *, long *);
    HRESULT (* nextNode)(struct IXMLDOMNodeList *, struct IXMLDOMNode * *);
    HRESULT (* reset)(struct IXMLDOMNodeList *);
    HRESULT (* get__newEnum)(struct IXMLDOMNodeList *, struct IUnknown * *);
};

struct IXMLDOMDocumentType {
    struct IXMLDOMDocumentTypeVtbl * lpVtbl;
};

struct IXMLDOMElement {
    struct IXMLDOMElementVtbl * lpVtbl;
};

struct IXMLDOMAttribute {
    struct IXMLDOMAttributeVtbl * lpVtbl;
};

struct IXMLDOMDocumentTypeVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMDocumentType *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMDocumentType *);
    ULONG (* Release)(struct IXMLDOMDocumentType *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMDocumentType *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMDocumentType *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMDocumentType *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMDocumentType *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMDocumentType *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMDocumentType *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMDocumentType *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMDocumentType *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMDocumentType *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMDocumentType *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMDocumentType *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMDocumentType *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMDocumentType *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMDocumentType *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMDocumentType *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMDocumentType *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMDocumentType *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMDocumentType *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMDocumentType *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMDocumentType *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMDocumentType *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_name)(struct IXMLDOMDocumentType *, BSTR *);
    HRESULT (* get_entities)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* get_notations)(struct IXMLDOMDocumentType *, struct IXMLDOMNamedNodeMap * *);
};

struct IXMLDOMText {
    struct IXMLDOMTextVtbl * lpVtbl;
};

struct IXMLDOMNodeVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMNode *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMNode *);
    ULONG (* Release)(struct IXMLDOMNode *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMNode *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMNode *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMNode *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMNode *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMNode *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMNode *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMNode *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMNode *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMNode *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMNode *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMNode *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMNode *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMNode *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMNode *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMNode *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMNode *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMNode *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMNode *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMNode *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMEntityReference {
    struct IXMLDOMEntityReferenceVtbl * lpVtbl;
};

struct IXMLDOMCDATASectionVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMCDATASection *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMCDATASection *);
    ULONG (* Release)(struct IXMLDOMCDATASection *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMCDATASection *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMCDATASection *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMCDATASection *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMCDATASection *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMCDATASection *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMCDATASection *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMCDATASection *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMCDATASection *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMCDATASection *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMCDATASection *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMCDATASection *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMCDATASection *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMCDATASection *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMCDATASection *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMCDATASection *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMCDATASection *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMCDATASection *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMCDATASection *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMCDATASection *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMCDATASection *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_data)(struct IXMLDOMCDATASection *, BSTR *);
    HRESULT (* put_data)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (* get_length)(struct IXMLDOMCDATASection *, long *);
    HRESULT (* substringData)(struct IXMLDOMCDATASection *, long, long, BSTR *);
    HRESULT (* appendData)(struct IXMLDOMCDATASection *, BSTR);
    HRESULT (* insertData)(struct IXMLDOMCDATASection *, long, BSTR);
    HRESULT (* deleteData)(struct IXMLDOMCDATASection *, long, long);
    HRESULT (* replaceData)(struct IXMLDOMCDATASection *, long, long, BSTR);
    HRESULT (* splitText)(struct IXMLDOMCDATASection *, long, struct IXMLDOMText * *);
};

struct IXMLDOMAttributeVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMAttribute *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMAttribute *);
    ULONG (* Release)(struct IXMLDOMAttribute *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMAttribute *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMAttribute *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMAttribute *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMAttribute *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMAttribute *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMAttribute *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMAttribute *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMAttribute *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMAttribute *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMAttribute *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMAttribute *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMAttribute *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMAttribute *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMAttribute *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMAttribute *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMAttribute *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMAttribute *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMAttribute *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMAttribute *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMAttribute *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMAttribute *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_name)(struct IXMLDOMAttribute *, BSTR *);
    HRESULT (* get_value)(struct IXMLDOMAttribute *, VARIANT *);
    HRESULT (* put_value)(struct IXMLDOMAttribute *, VARIANT);
};

struct IXMLDOMDocument {
    struct IXMLDOMDocumentVtbl * lpVtbl;
};

struct IXMLDOMDocumentFragmentVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMDocumentFragment *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMDocumentFragment *);
    ULONG (* Release)(struct IXMLDOMDocumentFragment *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMDocumentFragment *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMDocumentFragment *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMDocumentFragment *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMDocumentFragment *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMDocumentFragment *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMDocumentFragment *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMDocumentFragment *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMDocumentFragment *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMDocumentFragment *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMDocumentFragment *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMDocumentFragment *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMDocumentFragment *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMDocumentFragment *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMDocumentFragment *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMDocumentFragment *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMDocumentFragment *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMImplementation {
    struct IXMLDOMImplementationVtbl * lpVtbl;
};

struct IXMLDOMElementVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMElement *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMElement *);
    ULONG (* Release)(struct IXMLDOMElement *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMElement *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMElement *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMElement *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMElement *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMElement *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMElement *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMElement *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMElement *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMElement *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMElement *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMElement *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMElement *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMElement *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMElement *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMElement *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMElement *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMElement *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMElement *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMElement *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMElement *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMElement *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMElement *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMElement *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_tagName)(struct IXMLDOMElement *, BSTR *);
    HRESULT (* getAttribute)(struct IXMLDOMElement *, BSTR, VARIANT *);
    HRESULT (* setAttribute)(struct IXMLDOMElement *, BSTR, VARIANT);
    HRESULT (* removeAttribute)(struct IXMLDOMElement *, BSTR);
    HRESULT (* getAttributeNode)(struct IXMLDOMElement *, BSTR, struct IXMLDOMAttribute * *);
    HRESULT (* setAttributeNode)(struct IXMLDOMElement *, struct IXMLDOMAttribute *, struct IXMLDOMAttribute * *);
    HRESULT (* removeAttributeNode)(struct IXMLDOMElement *, struct IXMLDOMAttribute *, struct IXMLDOMAttribute * *);
    HRESULT (* getElementsByTagName)(struct IXMLDOMElement *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* normalize)(struct IXMLDOMElement *);
};

struct IXMLDOMNamedNodeMap {
    struct IXMLDOMNamedNodeMapVtbl * lpVtbl;
};

struct IXMLDOMTextVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMText *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMText *);
    ULONG (* Release)(struct IXMLDOMText *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMText *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMText *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMText *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMText *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMText *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMText *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMText *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMText *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMText *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMText *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMText *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMText *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMText *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMText *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMText *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMText *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMText *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMText *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMText *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMText *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMText *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMText *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMText *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMText *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMText *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMText *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMText *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMText *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMText *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMText *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMText *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMText *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMText *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMText *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMText *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMText *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_data)(struct IXMLDOMText *, BSTR *);
    HRESULT (* put_data)(struct IXMLDOMText *, BSTR);
    HRESULT (* get_length)(struct IXMLDOMText *, long *);
    HRESULT (* substringData)(struct IXMLDOMText *, long, long, BSTR *);
    HRESULT (* appendData)(struct IXMLDOMText *, BSTR);
    HRESULT (* insertData)(struct IXMLDOMText *, long, BSTR);
    HRESULT (* deleteData)(struct IXMLDOMText *, long, long);
    HRESULT (* replaceData)(struct IXMLDOMText *, long, long, BSTR);
    HRESULT (* splitText)(struct IXMLDOMText *, long, struct IXMLDOMText * *);
};

struct IXMLDOMDocumentVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMDocument *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMDocument *);
    ULONG (* Release)(struct IXMLDOMDocument *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMDocument *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMDocument *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMDocument *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMDocument *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMDocument *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMDocument *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMDocument *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMDocument *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMDocument *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMDocument *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMDocument *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMDocument *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMDocument *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMDocument *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMDocument *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMDocument *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMDocument *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMDocument *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMDocument *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMDocument *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMDocument *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMDocument *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_doctype)(struct IXMLDOMDocument *, struct IXMLDOMDocumentType * *);
    HRESULT (* get_implementation)(struct IXMLDOMDocument *, struct IXMLDOMImplementation * *);
    HRESULT (* get_documentElement)(struct IXMLDOMDocument *, struct IXMLDOMElement * *);
    HRESULT (* putref_documentElement)(struct IXMLDOMDocument *, struct IXMLDOMElement *);
    HRESULT (* createElement)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMElement * *);
    HRESULT (* createDocumentFragment)(struct IXMLDOMDocument *, struct IXMLDOMDocumentFragment * *);
    HRESULT (* createTextNode)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMText * *);
    HRESULT (* createComment)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMComment * *);
    HRESULT (* createCDATASection)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMCDATASection * *);
    HRESULT (* createProcessingInstruction)(struct IXMLDOMDocument *, BSTR, BSTR, struct IXMLDOMProcessingInstruction * *);
    HRESULT (* createAttribute)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMAttribute * *);
    HRESULT (* createEntityReference)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMEntityReference * *);
    HRESULT (* getElementsByTagName)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* createNode)(struct IXMLDOMDocument *, VARIANT, BSTR, BSTR, struct IXMLDOMNode * *);
    HRESULT (* nodeFromID)(struct IXMLDOMDocument *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* load)(struct IXMLDOMDocument *, VARIANT, VARIANT_BOOL *);
    HRESULT (* get_readyState)(struct IXMLDOMDocument *, long *);
    HRESULT (* get_parseError)(struct IXMLDOMDocument *, struct IXMLDOMParseError * *);
    HRESULT (* get_url)(struct IXMLDOMDocument *, BSTR *);
    HRESULT (* get_async)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* put_async)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (* abort)(struct IXMLDOMDocument *);
    HRESULT (* loadXML)(struct IXMLDOMDocument *, BSTR, VARIANT_BOOL *);
    HRESULT (* save)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (* get_validateOnParse)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* put_validateOnParse)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (* get_resolveExternals)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* put_resolveExternals)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (* get_preserveWhiteSpace)(struct IXMLDOMDocument *, VARIANT_BOOL *);
    HRESULT (* put_preserveWhiteSpace)(struct IXMLDOMDocument *, VARIANT_BOOL);
    HRESULT (* put_onreadystatechange)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (* put_ondataavailable)(struct IXMLDOMDocument *, VARIANT);
    HRESULT (* put_ontransformnode)(struct IXMLDOMDocument *, VARIANT);
};

struct IXMLDOMCDATASection {
    struct IXMLDOMCDATASectionVtbl * lpVtbl;
};

struct IXMLDOMEntityReferenceVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMEntityReference *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMEntityReference *);
    ULONG (* Release)(struct IXMLDOMEntityReference *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMEntityReference *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMEntityReference *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMEntityReference *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMEntityReference *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMEntityReference *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMEntityReference *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMEntityReference *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMEntityReference *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMEntityReference *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMEntityReference *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMEntityReference *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMEntityReference *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMEntityReference *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMEntityReference *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMEntityReference *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMEntityReference *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMEntityReference *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMEntityReference *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMEntityReference *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMEntityReference *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMEntityReference *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMEntityReference *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMEntityReference *, struct IXMLDOMNode *, VARIANT);
};

struct IXMLDOMParseErrorVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMParseError *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMParseError *);
    ULONG (* Release)(struct IXMLDOMParseError *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMParseError *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMParseError *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMParseError *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMParseError *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_errorCode)(struct IXMLDOMParseError *, long *);
    HRESULT (* get_url)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (* get_reason)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (* get_srcText)(struct IXMLDOMParseError *, BSTR *);
    HRESULT (* get_line)(struct IXMLDOMParseError *, long *);
    HRESULT (* get_linepos)(struct IXMLDOMParseError *, long *);
    HRESULT (* get_filepos)(struct IXMLDOMParseError *, long *);
};

struct IXMLDOMComment {
    struct IXMLDOMCommentVtbl * lpVtbl;
};

typedef struct IXMLDOMCharacterData IXMLDOMCharacterData, *PIXMLDOMCharacterData;

typedef struct IXMLDOMCharacterDataVtbl IXMLDOMCharacterDataVtbl, *PIXMLDOMCharacterDataVtbl;

struct IXMLDOMCharacterData {
    struct IXMLDOMCharacterDataVtbl * lpVtbl;
};

struct IXMLDOMCharacterDataVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMCharacterData *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMCharacterData *);
    ULONG (* Release)(struct IXMLDOMCharacterData *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMCharacterData *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMCharacterData *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMCharacterData *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMCharacterData *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMCharacterData *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMCharacterData *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMCharacterData *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMCharacterData *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMCharacterData *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMCharacterData *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMCharacterData *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMCharacterData *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMCharacterData *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMCharacterData *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMCharacterData *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMCharacterData *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMCharacterData *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMCharacterData *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMCharacterData *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMCharacterData *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_data)(struct IXMLDOMCharacterData *, BSTR *);
    HRESULT (* put_data)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (* get_length)(struct IXMLDOMCharacterData *, long *);
    HRESULT (* substringData)(struct IXMLDOMCharacterData *, long, long, BSTR *);
    HRESULT (* appendData)(struct IXMLDOMCharacterData *, BSTR);
    HRESULT (* insertData)(struct IXMLDOMCharacterData *, long, BSTR);
    HRESULT (* deleteData)(struct IXMLDOMCharacterData *, long, long);
    HRESULT (* replaceData)(struct IXMLDOMCharacterData *, long, long, BSTR);
};

typedef struct IXMLDOMEntity IXMLDOMEntity, *PIXMLDOMEntity;

typedef struct IXMLDOMEntityVtbl IXMLDOMEntityVtbl, *PIXMLDOMEntityVtbl;

struct IXMLDOMEntity {
    struct IXMLDOMEntityVtbl * lpVtbl;
};

struct IXMLDOMEntityVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMEntity *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMEntity *);
    ULONG (* Release)(struct IXMLDOMEntity *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMEntity *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMEntity *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMEntity *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMEntity *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMEntity *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMEntity *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMEntity *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMEntity *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMEntity *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMEntity *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMEntity *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMEntity *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMEntity *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMEntity *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMEntity *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMEntity *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMEntity *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMEntity *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMEntity *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMEntity *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMEntity *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMEntity *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMEntity *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMEntity *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMEntity *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMEntity *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMEntity *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_publicId)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (* get_systemId)(struct IXMLDOMEntity *, VARIANT *);
    HRESULT (* get_notationName)(struct IXMLDOMEntity *, BSTR *);
};

typedef struct IXMLDOMNotation IXMLDOMNotation, *PIXMLDOMNotation;

typedef struct IXMLDOMNotationVtbl IXMLDOMNotationVtbl, *PIXMLDOMNotationVtbl;

struct IXMLDOMNotationVtbl {
    HRESULT (* QueryInterface)(struct IXMLDOMNotation *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDOMNotation *);
    ULONG (* Release)(struct IXMLDOMNotation *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDOMNotation *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDOMNotation *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDOMNotation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDOMNotation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXMLDOMNotation *, VARIANT);
    HRESULT (* get_nodeType)(struct IXMLDOMNotation *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXMLDOMNotation *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXMLDOMNotation *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXMLDOMNotation *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXMLDOMNotation *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXMLDOMNotation *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXMLDOMNotation *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXMLDOMNotation *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXMLDOMNotation *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXMLDOMNotation *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXMLDOMNotation *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXMLDOMNotation *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* get_text)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* put_text)(struct IXMLDOMNotation *, BSTR);
    HRESULT (* get_specified)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXMLDOMNotation *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXMLDOMNotation *, VARIANT);
    HRESULT (* get_dataType)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (* put_dataType)(struct IXMLDOMNotation *, BSTR);
    HRESULT (* get_xml)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* transformNode)(struct IXMLDOMNotation *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXMLDOMNotation *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXMLDOMNotation *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXMLDOMNotation *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* get_prefix)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* get_baseName)(struct IXMLDOMNotation *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXMLDOMNotation *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* get_publicId)(struct IXMLDOMNotation *, VARIANT *);
    HRESULT (* get_systemId)(struct IXMLDOMNotation *, VARIANT *);
};

struct IXMLDOMNotation {
    struct IXMLDOMNotationVtbl * lpVtbl;
};

typedef struct IXMLDSOControl IXMLDSOControl, *PIXMLDSOControl;

typedef struct IXMLDSOControlVtbl IXMLDSOControlVtbl, *PIXMLDSOControlVtbl;

struct IXMLDSOControl {
    struct IXMLDSOControlVtbl * lpVtbl;
};

struct IXMLDSOControlVtbl {
    HRESULT (* QueryInterface)(struct IXMLDSOControl *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLDSOControl *);
    ULONG (* Release)(struct IXMLDSOControl *);
    HRESULT (* GetTypeInfoCount)(struct IXMLDSOControl *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLDSOControl *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLDSOControl *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLDSOControl *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_XMLDocument)(struct IXMLDSOControl *, struct IXMLDOMDocument * *);
    HRESULT (* put_XMLDocument)(struct IXMLDSOControl *, struct IXMLDOMDocument *);
    HRESULT (* get_JavaDSOCompatible)(struct IXMLDSOControl *, BOOL *);
    HRESULT (* put_JavaDSOCompatible)(struct IXMLDSOControl *, BOOL);
    HRESULT (* get_readyState)(struct IXMLDSOControl *, long *);
};

typedef struct IXMLError IXMLError, *PIXMLError;

typedef struct IXMLErrorVtbl IXMLErrorVtbl, *PIXMLErrorVtbl;

typedef struct _xml_error XML_ERROR;

struct IXMLError {
    struct IXMLErrorVtbl * lpVtbl;
};

struct IXMLErrorVtbl {
    HRESULT (* QueryInterface)(struct IXMLError *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLError *);
    ULONG (* Release)(struct IXMLError *);
    HRESULT (* GetErrorInfo)(struct IXMLError *, XML_ERROR *);
};

typedef struct IXMLHttpRequest IXMLHttpRequest, *PIXMLHttpRequest;

typedef struct IXMLHttpRequestVtbl IXMLHttpRequestVtbl, *PIXMLHttpRequestVtbl;

struct IXMLHttpRequestVtbl {
    HRESULT (* QueryInterface)(struct IXMLHttpRequest *, IID *, void * *);
    ULONG (* AddRef)(struct IXMLHttpRequest *);
    ULONG (* Release)(struct IXMLHttpRequest *);
    HRESULT (* GetTypeInfoCount)(struct IXMLHttpRequest *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXMLHttpRequest *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXMLHttpRequest *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXMLHttpRequest *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* open)(struct IXMLHttpRequest *, BSTR, BSTR, VARIANT, VARIANT, VARIANT);
    HRESULT (* setRequestHeader)(struct IXMLHttpRequest *, BSTR, BSTR);
    HRESULT (* getResponseHeader)(struct IXMLHttpRequest *, BSTR, BSTR *);
    HRESULT (* getAllResponseHeaders)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (* send)(struct IXMLHttpRequest *, VARIANT);
    HRESULT (* abort)(struct IXMLHttpRequest *);
    HRESULT (* get_status)(struct IXMLHttpRequest *, long *);
    HRESULT (* get_statusText)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (* get_responseXML)(struct IXMLHttpRequest *, struct IDispatch * *);
    HRESULT (* get_responseText)(struct IXMLHttpRequest *, BSTR *);
    HRESULT (* get_responseBody)(struct IXMLHttpRequest *, VARIANT *);
    HRESULT (* get_responseStream)(struct IXMLHttpRequest *, VARIANT *);
    HRESULT (* get_readyState)(struct IXMLHttpRequest *, long *);
    HRESULT (* put_onreadystatechange)(struct IXMLHttpRequest *, struct IDispatch *);
};

struct IXMLHttpRequest {
    struct IXMLHttpRequestVtbl * lpVtbl;
};

typedef struct IXTLRuntime IXTLRuntime, *PIXTLRuntime;

typedef struct IXTLRuntimeVtbl IXTLRuntimeVtbl, *PIXTLRuntimeVtbl;

struct IXTLRuntime {
    struct IXTLRuntimeVtbl * lpVtbl;
};

struct IXTLRuntimeVtbl {
    HRESULT (* QueryInterface)(struct IXTLRuntime *, IID *, void * *);
    ULONG (* AddRef)(struct IXTLRuntime *);
    ULONG (* Release)(struct IXTLRuntime *);
    HRESULT (* GetTypeInfoCount)(struct IXTLRuntime *, UINT *);
    HRESULT (* GetTypeInfo)(struct IXTLRuntime *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IXTLRuntime *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IXTLRuntime *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_nodeName)(struct IXTLRuntime *, BSTR *);
    HRESULT (* get_nodeValue)(struct IXTLRuntime *, VARIANT *);
    HRESULT (* put_nodeValue)(struct IXTLRuntime *, VARIANT);
    HRESULT (* get_nodeType)(struct IXTLRuntime *, DOMNodeType *);
    HRESULT (* get_parentNode)(struct IXTLRuntime *, struct IXMLDOMNode * *);
    HRESULT (* get_childNodes)(struct IXTLRuntime *, struct IXMLDOMNodeList * *);
    HRESULT (* get_firstChild)(struct IXTLRuntime *, struct IXMLDOMNode * *);
    HRESULT (* get_lastChild)(struct IXTLRuntime *, struct IXMLDOMNode * *);
    HRESULT (* get_previousSibling)(struct IXTLRuntime *, struct IXMLDOMNode * *);
    HRESULT (* get_nextSibling)(struct IXTLRuntime *, struct IXMLDOMNode * *);
    HRESULT (* get_attributes)(struct IXTLRuntime *, struct IXMLDOMNamedNodeMap * *);
    HRESULT (* insertBefore)(struct IXTLRuntime *, struct IXMLDOMNode *, VARIANT, struct IXMLDOMNode * *);
    HRESULT (* replaceChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* removeChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* appendChild)(struct IXTLRuntime *, struct IXMLDOMNode *, struct IXMLDOMNode * *);
    HRESULT (* hasChildNodes)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (* get_ownerDocument)(struct IXTLRuntime *, struct IXMLDOMDocument * *);
    HRESULT (* cloneNode)(struct IXTLRuntime *, VARIANT_BOOL, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypeString)(struct IXTLRuntime *, BSTR *);
    HRESULT (* get_text)(struct IXTLRuntime *, BSTR *);
    HRESULT (* put_text)(struct IXTLRuntime *, BSTR);
    HRESULT (* get_specified)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (* get_definition)(struct IXTLRuntime *, struct IXMLDOMNode * *);
    HRESULT (* get_nodeTypedValue)(struct IXTLRuntime *, VARIANT *);
    HRESULT (* put_nodeTypedValue)(struct IXTLRuntime *, VARIANT);
    HRESULT (* get_dataType)(struct IXTLRuntime *, VARIANT *);
    HRESULT (* put_dataType)(struct IXTLRuntime *, BSTR);
    HRESULT (* get_xml)(struct IXTLRuntime *, BSTR *);
    HRESULT (* transformNode)(struct IXTLRuntime *, struct IXMLDOMNode *, BSTR *);
    HRESULT (* selectNodes)(struct IXTLRuntime *, BSTR, struct IXMLDOMNodeList * *);
    HRESULT (* selectSingleNode)(struct IXTLRuntime *, BSTR, struct IXMLDOMNode * *);
    HRESULT (* get_parsed)(struct IXTLRuntime *, VARIANT_BOOL *);
    HRESULT (* get_namespaceURI)(struct IXTLRuntime *, BSTR *);
    HRESULT (* get_prefix)(struct IXTLRuntime *, BSTR *);
    HRESULT (* get_baseName)(struct IXTLRuntime *, BSTR *);
    HRESULT (* transformNodeToObject)(struct IXTLRuntime *, struct IXMLDOMNode *, VARIANT);
    HRESULT (* uniqueID)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (* depth)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (* childNumber)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (* ancestorChildNumber)(struct IXTLRuntime *, BSTR, struct IXMLDOMNode *, long *);
    HRESULT (* absoluteChildNumber)(struct IXTLRuntime *, struct IXMLDOMNode *, long *);
    HRESULT (* formatIndex)(struct IXTLRuntime *, long, BSTR, BSTR *);
    HRESULT (* formatNumber)(struct IXTLRuntime *, double, BSTR, BSTR *);
    HRESULT (* formatDate)(struct IXTLRuntime *, VARIANT, BSTR, VARIANT, BSTR *);
    HRESULT (* formatTime)(struct IXTLRuntime *, VARIANT, BSTR, VARIANT, BSTR *);
};

typedef enum tagXMLEMEM_TYPE {
    XMLELEMTYPE_COMMENT=2,
    XMLELEMTYPE_DOCUMENT=3,
    XMLELEMTYPE_DTD=4,
    XMLELEMTYPE_ELEMENT=0,
    XMLELEMTYPE_OTHER=6,
    XMLELEMTYPE_PI=5,
    XMLELEMTYPE_TEXT=1
} tagXMLEMEM_TYPE;

typedef struct XMLDocument XMLDocument, *PXMLDocument;

struct XMLDocument {
};

typedef struct XMLDOMDocumentEvents XMLDOMDocumentEvents, *PXMLDOMDocumentEvents;

typedef struct XMLDOMDocumentEventsVtbl XMLDOMDocumentEventsVtbl, *PXMLDOMDocumentEventsVtbl;

struct XMLDOMDocumentEventsVtbl {
    HRESULT (* QueryInterface)(struct XMLDOMDocumentEvents *, IID *, void * *);
    ULONG (* AddRef)(struct XMLDOMDocumentEvents *);
    ULONG (* Release)(struct XMLDOMDocumentEvents *);
    HRESULT (* GetTypeInfoCount)(struct XMLDOMDocumentEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct XMLDOMDocumentEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct XMLDOMDocumentEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct XMLDOMDocumentEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct XMLDOMDocumentEvents {
    struct XMLDOMDocumentEventsVtbl * lpVtbl;
};

typedef struct XMLDSOControl XMLDSOControl, *PXMLDSOControl;

struct XMLDSOControl {
};

typedef enum tagXMLEMEM_TYPE XMLELEM_TYPE;

typedef struct XMLHTTPRequest XMLHTTPRequest, *PXMLHTTPRequest;

struct XMLHTTPRequest {
};

#define _CONIO_LOCK 3

#define _DEBUG_LOCK 15

#define _ENV_LOCK 7

#define _EXIT_LOCK1 8

#define _HEAP_LOCK 4

#define _IOB_SCAN_LOCK 1

#define _LAST_STREAM_LOCK 35

#define _LOCKTAB_LOCK 10

#define _MB_CP_LOCK 13

#define _OSFHND_LOCK 11

#define _POPEN_LOCK 9

#define _SETLOCALE_LOCK 12

#define _SIGNAL_LOCK 0

#define _STREAM_LOCKS 16

#define _TIME_LOCK 6

#define _TMPNAM_LOCK 2

#define _TOTAL_LOCKS 36

#define _TYPEINFO_LOCK 14

#define _UNDNAME_LOCK 5

#define CATNAMES_LEN 57

#define LC_INT_TYPE 0

#define LC_STR_TYPE 1

#define LC_WSTR_TYPE 2

#define MAX_CP_LEN 16

#define MAX_CTRY_LEN 64

#define MAX_LANG_LEN 64

#define MAX_LC_LEN 131

#define MAX_MODIFIER_LEN 0

typedef struct _is_ctype_compatible _is_ctype_compatible, *P_is_ctype_compatible;

struct _is_ctype_compatible {
    ulong id;
    int is_clike;
};

typedef struct setloc_struct setloc_struct, *Psetloc_struct;

typedef struct setloc_struct * _psetloc_struct;

struct setloc_struct {
    wchar_t * pchLanguage;
    wchar_t * pchCountry;
    int iLocState;
    int iPrimaryLen;
    BOOL bAbbrevLanguage;
    BOOL bAbbrevCountry;
    UINT _cachecp;
    wchar_t _cachein[131];
    wchar_t _cacheout[131];
    struct _is_ctype_compatible _Loc_c[5];
    wchar_t _cacheLocaleName[85];
};

typedef struct _tiddata _tiddata, *P_tiddata;

typedef struct _tiddata * _ptiddata;

typedef uint uintptr_t;

typedef struct setloc_struct _setloc_struct;

struct _tiddata {
    ulong _tid;
    uintptr_t _thandle;
    int _terrno;
    ulong _tdoserrno;
    uint _fpds;
    ulong _holdrand;
    char * _token;
    wchar_t * _wtoken;
    uchar * _mtoken;
    char * _errmsg;
    wchar_t * _werrmsg;
    char * _namebuf0;
    wchar_t * _wnamebuf0;
    char * _namebuf1;
    wchar_t * _wnamebuf1;
    char * _asctimebuf;
    wchar_t * _wasctimebuf;
    void * _gmtimebuf;
    char * _cvtbuf;
    uchar _con_ch_buf[5];
    ushort _ch_buf_used;
    void * _initaddr;
    void * _initarg;
    void * _pxcptacttab;
    void * _tpxcptinfoptrs;
    int _tfpecode;
    pthreadmbcinfo ptmbcinfo;
    pthreadlocinfo ptlocinfo;
    int _ownlocale;
    ulong _NLG_dwCode;
    void * _terminate;
    void * _unexpected;
    void * _translator;
    void * _purecall;
    void * _curexception;
    void * _curcontext;
    int _ProcessingThrow;
    void * _curexcspec;
    void * _pFrameInfoChain;
    _setloc_struct _setloc_data;
    void * _reserved1;
    void * _reserved2;
    void * _reserved3;
    void * _reserved4;
    void * _reserved5;
    int _cxxReThrow;
    ulong __initDomain;
    int _initapartment;
};

#define ASYNCH 128

#define CALL_PENDING 2

#define DEREGISTERED 5

#define DUPLICATE 6

#define DUPLICATE_DEREG 7

#define GROUP_NAME 128

#define HANGUP_COMPLETE 5

#define HANGUP_PENDING 4

#define LISTEN_OUTSTANDING 1

#define MAX_LANA 254

#define NAME_FLAGS_MASK 135

#define NCBACTION 119

#define NCBADDGRNAME 54

#define NCBADDNAME 48

#define NCBASTAT 51

#define NCBCALL 16

#define NCBCANCEL 53

#define NCBCHAINSEND 23

#define NCBCHAINSENDNA 114

#define NCBDELNAME 49

#define NCBDGRECV 33

#define NCBDGRECVBC 35

#define NCBDGSEND 32

#define NCBDGSENDBC 34

#define NCBENUM 55

#define NCBFINDNAME 120

#define NCBHANGUP 18

#define NCBLANSTALERT 115

#define NCBLISTEN 17

#define NCBNAMSZ 16

#define NCBRECV 21

#define NCBRECVANY 22

#define NCBRESET 50

#define NCBSEND 20

#define NCBSENDNA 113

#define NCBSSTAT 52

#define NCBTRACE 121

#define NCBUNLINK 112

#define NRC_ACTSES 15

#define NRC_BADDR 7

#define NRC_BRIDGE 35

#define NRC_BUFLEN 1

#define NRC_CANCEL 38

#define NRC_CANOCCR 36

#define NRC_CMDCAN 11

#define NRC_CMDTMO 5

#define NRC_DUPENV 48

#define NRC_DUPNAME 13

#define NRC_ENVNOTDEF 52

#define NRC_GOODRET 0

#define NRC_IFBUSY 33

#define NRC_ILLCMD 3

#define NRC_ILLNN 19

#define NRC_INCOMP 6

#define NRC_INUSE 22

#define NRC_INVADDRESS 57

#define NRC_INVDDID 59

#define NRC_LOCKFAIL 60

#define NRC_LOCTFUL 17

#define NRC_MAXAPPS 54

#define NRC_NAMCONF 25

#define NRC_NAMERR 23

#define NRC_NAMTFUL 14

#define NRC_NOCALL 20

#define NRC_NORES 9

#define NRC_NORESOURCES 56

#define NRC_NOSAPS 55

#define NRC_NOWILD 21

#define NRC_OPENERR 63

#define NRC_OSRESNOTAV 53

#define NRC_PENDING 255

#define NRC_REMTFUL 18

#define NRC_SABORT 24

#define NRC_SCLOSED 10

#define NRC_SNUMOUT 8

#define NRC_SYSTEM 64

#define NRC_TOOMANY 34

#define REGISTERED 4

#define REGISTERING 0

#define SESSION_ABORTED 6

#define SESSION_ESTABLISHED 3

#define UNIQUE_NAME 0

typedef struct _ACTION_HEADER _ACTION_HEADER, *P_ACTION_HEADER;

struct _ACTION_HEADER {
    ULONG transport_id;
    USHORT action_code;
    USHORT reserved;
};

typedef struct _ADAPTER_STATUS _ADAPTER_STATUS, *P_ADAPTER_STATUS;

struct _ADAPTER_STATUS {
    UCHAR adapter_address[6];
    UCHAR rev_major;
    UCHAR reserved0;
    UCHAR adapter_type;
    UCHAR rev_minor;
    WORD duration;
    WORD frmr_recv;
    WORD frmr_xmit;
    WORD iframe_recv_err;
    WORD xmit_aborts;
    DWORD xmit_success;
    DWORD recv_success;
    WORD iframe_xmit_err;
    WORD recv_buff_unavail;
    WORD t1_timeouts;
    WORD ti_timeouts;
    DWORD reserved1;
    WORD free_ncbs;
    WORD max_cfg_ncbs;
    WORD max_ncbs;
    WORD xmit_buf_unavail;
    WORD max_dgram_size;
    WORD pending_sess;
    WORD max_cfg_sess;
    WORD max_sess;
    WORD max_sess_pkt_size;
    WORD name_count;
};

typedef struct _FIND_NAME_BUFFER _FIND_NAME_BUFFER, *P_FIND_NAME_BUFFER;

struct _FIND_NAME_BUFFER {
    UCHAR length;
    UCHAR access_control;
    UCHAR frame_control;
    UCHAR destination_addr[6];
    UCHAR source_addr[6];
    UCHAR routing_info[18];
};

typedef struct _FIND_NAME_HEADER _FIND_NAME_HEADER, *P_FIND_NAME_HEADER;

struct _FIND_NAME_HEADER {
    WORD node_count;
    UCHAR reserved;
    UCHAR unique_group;
};

typedef struct _LANA_ENUM _LANA_ENUM, *P_LANA_ENUM;

struct _LANA_ENUM {
    UCHAR length;
    UCHAR lana[255];
};

typedef struct _NAME_BUFFER _NAME_BUFFER, *P_NAME_BUFFER;

struct _NAME_BUFFER {
    UCHAR name[16];
    UCHAR name_num;
    UCHAR name_flags;
};

typedef struct _NCB _NCB, *P_NCB;

struct _NCB {
    UCHAR ncb_command;
    UCHAR ncb_retcode;
    UCHAR ncb_lsn;
    UCHAR ncb_num;
    PUCHAR ncb_buffer;
    WORD ncb_length;
    UCHAR ncb_callname[16];
    UCHAR ncb_name[16];
    UCHAR ncb_rto;
    UCHAR ncb_sto;
    void (* ncb_post)(struct _NCB *);
    UCHAR ncb_lana_num;
    UCHAR ncb_cmd_cplt;
    UCHAR ncb_reserve[10];
    HANDLE ncb_event;
};

typedef struct _SESSION_BUFFER _SESSION_BUFFER, *P_SESSION_BUFFER;

struct _SESSION_BUFFER {
    UCHAR lsn;
    UCHAR state;
    UCHAR local_name[16];
    UCHAR remote_name[16];
    UCHAR rcvs_outstanding;
    UCHAR sends_outstanding;
};

typedef struct _SESSION_HEADER _SESSION_HEADER, *P_SESSION_HEADER;

struct _SESSION_HEADER {
    UCHAR sess_name;
    UCHAR num_sess;
    UCHAR rcv_dg_outstanding;
    UCHAR rcv_any_outstanding;
};

typedef struct _ACTION_HEADER ACTION_HEADER;

typedef struct _ADAPTER_STATUS ADAPTER_STATUS;

typedef struct _FIND_NAME_BUFFER FIND_NAME_BUFFER;

typedef struct _FIND_NAME_HEADER FIND_NAME_HEADER;

typedef struct _LANA_ENUM LANA_ENUM;

typedef struct _NAME_BUFFER NAME_BUFFER;

typedef struct _NCB NCB;

typedef struct _ACTION_HEADER * PACTION_HEADER;

typedef struct _ADAPTER_STATUS * PADAPTER_STATUS;

typedef struct _FIND_NAME_BUFFER * PFIND_NAME_BUFFER;

typedef struct _FIND_NAME_HEADER * PFIND_NAME_HEADER;

typedef struct _LANA_ENUM * PLANA_ENUM;

typedef struct _NAME_BUFFER * PNAME_BUFFER;

typedef struct _NCB * PNCB;

typedef struct _SESSION_BUFFER * PSESSION_BUFFER;

typedef struct _SESSION_HEADER * PSESSION_HEADER;

typedef struct _SESSION_BUFFER SESSION_BUFFER;

typedef struct _SESSION_HEADER SESSION_HEADER;

#define NCRYPT_ALLOW_ALL_USAGES 16777215

#define NCRYPT_ALLOW_ARCHIVING_FLAG 4

#define NCRYPT_ALLOW_DECRYPT_FLAG 1

#define NCRYPT_ALLOW_EXPORT_FLAG 1

#define NCRYPT_ALLOW_KEY_AGREEMENT_FLAG 4

#define NCRYPT_ALLOW_PLAINTEXT_ARCHIVING_FLAG 8

#define NCRYPT_ALLOW_PLAINTEXT_EXPORT_FLAG 2

#define NCRYPT_ALLOW_SIGNING_FLAG 2

#define NCRYPT_ASYMMETRIC_ENCRYPTION_INTERFACE 3

#define NCRYPT_ASYMMETRIC_ENCRYPTION_OPERATION 4

#define NCRYPT_CIPHER_OPERATION 1

#define NCRYPT_DO_NOT_FINALIZE_FLAG 1024

#define NCRYPT_EXPORT_LEGACY_FLAG 2048

#define NCRYPT_HASH_INTERFACE 2

#define NCRYPT_HASH_OPERATION 2

#define NCRYPT_IMPL_HARDWARE_FLAG 1

#define NCRYPT_IMPL_HARDWARE_RNG_FLAG 16

#define NCRYPT_IMPL_REMOVABLE_FLAG 8

#define NCRYPT_IMPL_SOFTWARE_FLAG 2

#define NCRYPT_KEY_STORAGE_INTERFACE 65537

#define NCRYPT_MACHINE_KEY_FLAG 32

#define NCRYPT_MAX_PROPERTY_DATA 1048576

#define NCRYPT_MAX_PROPERTY_NAME 64

#define NCRYPT_NO_KEY_VALIDATION 8

#define NCRYPT_NO_PADDING_FLAG 1

#define NCRYPT_OVERWRITE_KEY_FLAG 128

#define NCRYPT_PAD_OAEP_FLAG 4

#define NCRYPT_PAD_PKCS1_FLAG 2

#define NCRYPT_PAD_PSS_FLAG 8

#define NCRYPT_PERSIST_FLAG 2147483648

#define NCRYPT_PERSIST_ONLY_FLAG 1073741824

#define NCRYPT_REGISTER_NOTIFY_FLAG 1

#define NCRYPT_RNG_OPERATION 32

#define NCRYPT_SCHANNEL_INTERFACE 65538

#define NCRYPT_SCHANNEL_SIGNATURE_INTERFACE 65539

#define NCRYPT_SECRET_AGREEMENT_INTERFACE 4

#define NCRYPT_SECRET_AGREEMENT_OPERATION 8

#define NCRYPT_SIGNATURE_INTERFACE 5

#define NCRYPT_SIGNATURE_OPERATION 16

#define NCRYPT_SILENT_FLAG 64

#define NCRYPT_UI_FORCE_HIGH_PROTECTION_FLAG 2

#define NCRYPT_UI_PROTECT_KEY_FLAG 1

#define NCRYPT_UNREGISTER_NOTIFY_FLAG 2

#define NCRYPT_WRITE_KEY_TO_LEGACY_STORE_FLAG 512

#define NCRYPTBUFFER_CERT_BLOB 47

#define NCRYPTBUFFER_DATA 1

#define NCRYPTBUFFER_EMPTY 0

#define NCRYPTBUFFER_PKCS_ALG_ID 43

#define NCRYPTBUFFER_PKCS_ALG_OID 41

#define NCRYPTBUFFER_PKCS_ALG_PARAM 42

#define NCRYPTBUFFER_PKCS_ATTRS 44

#define NCRYPTBUFFER_PKCS_KEY_NAME 45

#define NCRYPTBUFFER_PKCS_OID 40

#define NCRYPTBUFFER_PKCS_SECRET 46

#define NCRYPTBUFFER_SSL_CLEAR_KEY 23

#define NCRYPTBUFFER_SSL_CLIENT_RANDOM 20

#define NCRYPTBUFFER_SSL_HIGHEST_VERSION 22

#define NCRYPTBUFFER_SSL_KEY_ARG_DATA 24

#define NCRYPTBUFFER_SSL_SERVER_RANDOM 21

#define NCRYPTBUFFER_VERSION 0

typedef struct __NCRYPT_SUPPORTED_LENGTHS __NCRYPT_SUPPORTED_LENGTHS, *P__NCRYPT_SUPPORTED_LENGTHS;

struct __NCRYPT_SUPPORTED_LENGTHS {
    DWORD dwMinLength;
    DWORD dwMaxLength;
    DWORD dwIncrement;
    DWORD dwDefaultLength;
};

typedef struct __NCRYPT_UI_POLICY __NCRYPT_UI_POLICY, *P__NCRYPT_UI_POLICY;

struct __NCRYPT_UI_POLICY {
    DWORD dwVersion;
    DWORD dwFlags;
    LPCWSTR pszCreationTitle;
    LPCWSTR pszFriendlyName;
    LPCWSTR pszDescription;
};

typedef struct __NCRYPT_UI_POLICY_BLOB __NCRYPT_UI_POLICY_BLOB, *P__NCRYPT_UI_POLICY_BLOB;

struct __NCRYPT_UI_POLICY_BLOB {
    DWORD dwVersion;
    DWORD dwFlags;
    DWORD cbCreationTitle;
    DWORD cbFriendlyName;
    DWORD cbDescription;
};

typedef struct _NCryptAlgorithmName _NCryptAlgorithmName, *P_NCryptAlgorithmName;

struct _NCryptAlgorithmName {
    LPWSTR pszName;
    DWORD dwClass;
    DWORD dwAlgOperations;
    DWORD dwFlags;
};

typedef ULONG_PTR NCRYPT_HANDLE;

typedef ULONG_PTR NCRYPT_HASH_HANDLE;

typedef ULONG_PTR NCRYPT_KEY_HANDLE;

typedef ULONG_PTR NCRYPT_PROV_HANDLE;

typedef ULONG_PTR NCRYPT_SECRET_HANDLE;

typedef struct __NCRYPT_SUPPORTED_LENGTHS NCRYPT_SUPPORTED_LENGTHS;

typedef struct __NCRYPT_UI_POLICY NCRYPT_UI_POLICY;

typedef struct __NCRYPT_UI_POLICY_BLOB NCRYPT_UI_POLICY_BLOB;

typedef struct _NCryptAlgorithmName NCryptAlgorithmName;

typedef BCryptBuffer NCryptBuffer;

typedef BCryptBufferDesc NCryptBufferDesc;

typedef struct NCryptKeyName NCryptKeyName, *PNCryptKeyName;

struct NCryptKeyName {
    LPWSTR pszName;
    LPWSTR pszAlgid;
    DWORD dwLegacyKeySpec;
    DWORD dwFlags;
};

typedef struct NCryptProviderName NCryptProviderName, *PNCryptProviderName;

struct NCryptProviderName {
    LPWSTR pszName;
    LPWSTR pszComment;
};

typedef BCryptBuffer * PNCryptBuffer;

typedef BCryptBufferDesc * PNCryptBufferDesc;

typedef LONG SECURITY_STATUS;

#define NDF_E_BAD_PARAM 2148071685

#define NDF_E_CANCELLED 2148071682

#define NDF_E_DISABLED 2148071684

#define NDF_E_LENGTH_EXCEEDED 2148071680

#define NDF_E_NOHELPERCLASS 2148071681

#define NDF_E_PROBLEM_PRESENT 2148071688

#define NDF_E_UNKNOWN 2148071687

#define NDF_E_VALIDATION 2148071686

#define NDF_ERROR_START 63744

#define RCF_ISCONFIRMED 2

#define RCF_ISLEAF 1

#define RCF_ISTHIRDPARTY 4

#define RF_CONTACT_ADMIN 131072

#define RF_INFORMATION_ONLY 33554432

#define RF_REPRO 2097152

#define RF_RESERVED 1073741824

#define RF_RESERVED_CA 2147483648

#define RF_RESERVED_LNI 65536

#define RF_SHOW_EVENTS 8388608

#define RF_UI_ONLY 16777216

#define RF_USER_ACTION 268435456

#define RF_USER_CONFIRMATION 134217728

#define RF_VALIDATE_HELPTOPIC 4194304

#define RF_WORKAROUND 536870912

typedef enum __MIDL___MIDL_itf_ndattrib_0000_0000_0002 {
    RR_NORISK=2,
    RR_NOROLLBACK=0,
    RR_ROLLBACK=1
} __MIDL___MIDL_itf_ndattrib_0000_0000_0002;

typedef enum __MIDL___MIDL_itf_ndattrib_0000_0000_0003 {
    UIT_DUI=4,
    UIT_HELP_PANE=3,
    UIT_INVALID=0,
    UIT_NONE=1,
    UIT_SHELL_COMMAND=2
} __MIDL___MIDL_itf_ndattrib_0000_0000_0003;

typedef union _union_6574 _union_6574, *P_union_6574;

typedef struct tagLIFE_TIME tagLIFE_TIME, *PtagLIFE_TIME;

typedef struct tagLIFE_TIME LIFE_TIME;

typedef struct tagSOCK_ADDR tagSOCK_ADDR, *PtagSOCK_ADDR;

typedef struct tagSOCK_ADDR DIAG_SOCKADDR;

typedef struct tagOCTET_STRING tagOCTET_STRING, *PtagOCTET_STRING;

typedef struct tagOCTET_STRING OCTET_STRING;

struct tagSOCK_ADDR {
    USHORT family;
    CHAR data[126];
};

struct tagLIFE_TIME {
    FILETIME startTime;
    FILETIME endTime;
};

struct tagOCTET_STRING {
    DWORD dwLength;
    BYTE * lpValue;
};

union _union_6574 {
    BOOL Boolean;
    char Char;
    byte Byte;
    short Short;
    WORD Word;
    int Int;
    DWORD DWord;
    LONGLONG Int64;
    ULONGLONG UInt64;
    LPWSTR PWStr;
    GUID Guid;
    LIFE_TIME LifeTime;
    DIAG_SOCKADDR Address;
    OCTET_STRING OctetString;
};

typedef union _union_6579 _union_6579, *P_union_6579;

typedef struct tagShellCommandInfo tagShellCommandInfo, *PtagShellCommandInfo;

typedef struct tagShellCommandInfo ShellCommandInfo;

struct tagShellCommandInfo {
    LPWSTR pwszOperation;
    LPWSTR pwszFile;
    LPWSTR pwszParameters;
    LPWSTR pwszDirectory;
    ULONG nShowCmd;
};

union _union_6579 {
    LPWSTR pwzNull;
    ShellCommandInfo ShellInfo;
    LPWSTR pwzHelpUrl;
    LPWSTR pwzDui;
};

typedef enum tagATTRIBUTE_TYPE {
    AT_BOOLEAN=1,
    AT_GUID=11,
    AT_INT16=4,
    AT_INT32=6,
    AT_INT64=8,
    AT_INT8=2,
    AT_INVALID=0,
    AT_LIFE_TIME=12,
    AT_OCTET_STRING=14,
    AT_SOCKADDR=13,
    AT_STRING=10,
    AT_UINT16=5,
    AT_UINT32=7,
    AT_UINT64=9,
    AT_UINT8=3
} tagATTRIBUTE_TYPE;

typedef enum tagATTRIBUTE_TYPE ATTRIBUTE_TYPE;

typedef struct tagHELPER_ATTRIBUTE tagHELPER_ATTRIBUTE, *PtagHELPER_ATTRIBUTE;

typedef struct tagHELPER_ATTRIBUTE HELPER_ATTRIBUTE;

struct tagHELPER_ATTRIBUTE {
    LPWSTR pwszName;
    ATTRIBUTE_TYPE type;
    union _union_6574 field_0x8;
};

typedef struct tagSOCK_ADDR * PDIAG_SOCK_ADDR;

typedef struct tagHELPER_ATTRIBUTE * PHELPER_ATTRIBUTE;

typedef struct tagLIFE_TIME * PLIFE_TIME;

typedef struct tagOCTET_STRING * POCTET_STRING;

typedef enum tagREPAIR_SCOPE {
    RS_APPLICATION=2,
    RS_PROCESS=3,
    RS_SYSTEM=0,
    RS_USER=1
} tagREPAIR_SCOPE;

typedef enum tagREPAIR_SCOPE * PREPAIR_SCOPE;

typedef struct tagRepairInfo tagRepairInfo, *PtagRepairInfo;

typedef struct tagRepairInfo * PRepairInfo;

typedef enum tagREPAIR_SCOPE REPAIR_SCOPE;

typedef enum __MIDL___MIDL_itf_ndattrib_0000_0000_0002 REPAIR_RISK;

typedef struct tagUiInfo tagUiInfo, *PtagUiInfo;

typedef struct tagUiInfo UiInfo;

typedef enum __MIDL___MIDL_itf_ndattrib_0000_0000_0003 UI_INFO_TYPE;

struct tagUiInfo {
    UI_INFO_TYPE type;
    union _union_6579 field_0x4;
};

struct tagRepairInfo {
    GUID guid;
    LPWSTR pwszClassName;
    LPWSTR pwszDescription;
    DWORD sidType;
    long cost;
    ULONG flags;
    REPAIR_SCOPE scope;
    REPAIR_RISK risk;
    UiInfo UiInfo;
    int rootCauseIndex;
};

typedef struct tagRepairInfoEx tagRepairInfoEx, *PtagRepairInfoEx;

typedef struct tagRepairInfoEx * PRepairInfoEx;

typedef struct tagRepairInfo RepairInfo;

struct tagRepairInfoEx {
    RepairInfo repair;
    USHORT repairRank;
};

typedef struct tagRootCauseInfo tagRootCauseInfo, *PtagRootCauseInfo;

typedef struct tagRootCauseInfo * PRootCauseInfo;

typedef struct tagRepairInfoEx RepairInfoEx;

struct tagRootCauseInfo {
    LPWSTR pwszDescription;
    GUID rootCauseID;
    DWORD rootCauseFlags;
    GUID networkInterfaceID;
    RepairInfoEx * pRepairs;
    USHORT repairCount;
};

typedef struct tagShellCommandInfo * PShellCommandInfo;

typedef struct tagUiInfo * PUiInfo;

typedef struct tagRootCauseInfo RootCauseInfo;

#define NDF_ADD_CAPTURE_TRACE 1

#define NDF_INBOUND_FLAG_EDGETRAVERSAL 1

#define NDF_INBOUND_FLAG_HEALTHCHECK 2

typedef PVOID NDFHANDLE;

typedef struct SOCKET_ADDRESS_LIST SOCKET_ADDRESS_LIST, *PSOCKET_ADDRESS_LIST;

struct SOCKET_ADDRESS_LIST {
};

#define ANY_SIZE 1

#define MIB_INVALID_TEREDO_PORT_NUMBER 0

typedef struct _IP_ADDRESS_PREFIX _IP_ADDRESS_PREFIX, *P_IP_ADDRESS_PREFIX;

typedef union _SOCKADDR_INET _SOCKADDR_INET, *P_SOCKADDR_INET;

typedef union _SOCKADDR_INET SOCKADDR_INET;

typedef struct sockaddr_in sockaddr_in, *Psockaddr_in;

typedef struct sockaddr_in SOCKADDR_IN;

typedef struct sockaddr_in6 sockaddr_in6, *Psockaddr_in6;

typedef struct sockaddr_in6 SOCKADDR_IN6_LH;

typedef SOCKADDR_IN6_LH SOCKADDR_IN6;

typedef USHORT ADDRESS_FAMILY;

typedef union _union_6624 _union_6624, *P_union_6624;

typedef struct SCOPE_ID SCOPE_ID, *PSCOPE_ID;

typedef union _union_6597 _union_6597, *P_union_6597;

typedef struct _struct_6598 _struct_6598, *P_struct_6598;

typedef union anon__struct_6598_bitfield_1 anon__struct_6598_bitfield_1, *Panon__struct_6598_bitfield_1;

union anon__struct_6598_bitfield_1 {
    ULONG Zone:28; /* : bits 0-27 */
    ULONG Level:4; /* : bits 28-31 */
};

struct _struct_6598 {
    union anon__struct_6598_bitfield_1 field_0x0;
};

union _union_6597 {
    struct _struct_6598 field0;
    ULONG Value;
};

struct SCOPE_ID {
    union _union_6597 field_0x0;
};

union _union_6624 {
    ULONG sin6_scope_id;
    struct SCOPE_ID sin6_scope_struct;
};

struct sockaddr_in6 {
    ADDRESS_FAMILY sin6_family;
    USHORT sin6_port;
    ULONG sin6_flowinfo;
    IN6_ADDR sin6_addr;
    union _union_6624 field_0x18;
};

struct sockaddr_in {
    ADDRESS_FAMILY sin_family;
    USHORT sin_port;
    IN_ADDR sin_addr;
    CHAR sin_zero[8];
};

union _SOCKADDR_INET {
    SOCKADDR_IN Ipv4;
    SOCKADDR_IN6 Ipv6;
    ADDRESS_FAMILY si_family;
};

struct _IP_ADDRESS_PREFIX {
    SOCKADDR_INET Prefix;
    UINT8 PrefixLength;
};

typedef struct _MIB_ANYCASTIPADDRESS_ROW _MIB_ANYCASTIPADDRESS_ROW, *P_MIB_ANYCASTIPADDRESS_ROW;

struct _MIB_ANYCASTIPADDRESS_ROW {
    SOCKADDR_INET Address;
    NET_LUID InterfaceLuid;
    NET_IFINDEX InterfaceIndex;
    struct SCOPE_ID ScopeId;
};

typedef struct _MIB_ANYCASTIPADDRESS_TABLE _MIB_ANYCASTIPADDRESS_TABLE, *P_MIB_ANYCASTIPADDRESS_TABLE;

typedef struct _MIB_ANYCASTIPADDRESS_ROW MIB_ANYCASTIPADDRESS_ROW;

struct _MIB_ANYCASTIPADDRESS_TABLE {
    ULONG NumEntries;
    MIB_ANYCASTIPADDRESS_ROW Table[1];
};

typedef struct _MIB_IF_ROW2 _MIB_IF_ROW2, *P_MIB_IF_ROW2;

typedef enum _NDIS_MEDIUM {
    NdisMedium1394=13,
    NdisMedium802_3=0,
    NdisMedium802_5=1,
    NdisMediumArcnet878_2=7,
    NdisMediumArcnetRaw=6,
    NdisMediumAtm=8,
    NdisMediumBpc=11,
    NdisMediumCoWan=12,
    NdisMediumDix=5,
    NdisMediumFddi=2,
    NdisMediumInfiniBand=14,
    NdisMediumIrda=10,
    NdisMediumLocalTalk=4,
    NdisMediumMax=15,
    NdisMediumWan=3,
    NdisMediumWirelessWan=9
} _NDIS_MEDIUM;

typedef enum _NDIS_MEDIUM NDIS_MEDIUM;

typedef enum _NDIS_PHYSICAL_MEDIUM {
    NdisPhysicalMedium1394=7,
    NdisPhysicalMedium802_3=14,
    NdisPhysicalMedium802_5=15,
    NdisPhysicalMediumBluetooth=10,
    NdisPhysicalMediumCableModem=2,
    NdisPhysicalMediumDSL=5,
    NdisPhysicalMediumFibreChannel=6,
    NdisPhysicalMediumInfiniband=11,
    NdisPhysicalMediumIrda=16,
    NdisPhysicalMediumMax=20,
    NdisPhysicalMediumNative802_11=9,
    NdisPhysicalMediumOther=19,
    NdisPhysicalMediumPhoneLine=3,
    NdisPhysicalMediumPowerLine=4,
    NdisPhysicalMediumUWB=13,
    NdisPhysicalMediumUnspecified=0,
    NdisPhysicalMediumWiMax=12,
    NdisPhysicalMediumWiredCoWan=18,
    NdisPhysicalMediumWiredWAN=17,
    NdisPhysicalMediumWirelessLan=1,
    NdisPhysicalMediumWirelessWan=8
} _NDIS_PHYSICAL_MEDIUM;

typedef enum _NDIS_PHYSICAL_MEDIUM NDIS_PHYSICAL_MEDIUM;

typedef struct _struct_6709 _struct_6709, *P_struct_6709;

typedef union anon__struct_6709_bitfield_1 anon__struct_6709_bitfield_1, *Panon__struct_6709_bitfield_1;

union anon__struct_6709_bitfield_1 {
    BOOLEAN HardwareInterface:1; /* : bits 0 */
    BOOLEAN FilterInterface:1; /* : bits 1 */
    BOOLEAN ConnectorPresent:1; /* : bits 2 */
    BOOLEAN NotAuthenticated:1; /* : bits 3 */
    BOOLEAN NotMediaConnected:1; /* : bits 4 */
    BOOLEAN Paused:1; /* : bits 5 */
    BOOLEAN LowPower:1; /* : bits 6 */
    BOOLEAN EndPointInterface:1; /* : bits 7 */
};

struct _struct_6709 {
    union anon__struct_6709_bitfield_1 field_0x0;
};

struct _MIB_IF_ROW2 {
    NET_LUID InterfaceLuid;
    NET_IFINDEX InterfaceIndex;
    GUID InterfaceGuid;
    WCHAR Alias[257];
    WCHAR Description[257];
    ULONG PhysicalAddressLength;
    UCHAR PhysicalAddress[32];
    UCHAR PermanentPhysicalAddress[32];
    ULONG Mtu;
    IFTYPE Type;
    TUNNEL_TYPE TunnelType;
    NDIS_MEDIUM MediaType;
    NDIS_PHYSICAL_MEDIUM PhysicalMediumType;
    NET_IF_ACCESS_TYPE AccessType;
    NET_IF_DIRECTION_TYPE DirectionType;
    struct _struct_6709 InterfaceAndOperStatusFlags;
    IF_OPER_STATUS OperStatus;
    NET_IF_ADMIN_STATUS AdminStatus;
    NET_IF_MEDIA_CONNECT_STATE MediaConnectState;
    NET_IF_NETWORK_GUID NetworkGuid;
    NET_IF_CONNECTION_TYPE ConnectionType;
    ULONG64 TransmitLinkSpeed;
    ULONG64 ReceiveLinkSpeed;
    ULONG64 InOctets;
    ULONG64 InUcastPkts;
    ULONG64 InNUcastPkts;
    ULONG64 InDiscards;
    ULONG64 InErrors;
    ULONG64 InUnknownProtos;
    ULONG64 InUcastOctets;
    ULONG64 InMulticastOctets;
    ULONG64 InBroadcastOctets;
    ULONG64 OutOctets;
    ULONG64 OutUcastPkts;
    ULONG64 OutNUcastPkts;
    ULONG64 OutDiscards;
    ULONG64 OutErrors;
    ULONG64 OutUcastOctets;
    ULONG64 OutMulticastOctets;
    ULONG64 OutBroadcastOctets;
    ULONG64 OutQLen;
};

typedef struct _MIB_IF_TABLE2 _MIB_IF_TABLE2, *P_MIB_IF_TABLE2;

typedef struct _MIB_IF_ROW2 MIB_IF_ROW2;

struct _MIB_IF_TABLE2 {
    ULONG NumEntries;
    MIB_IF_ROW2 Table[1];
};

typedef enum _MIB_IF_TABLE_LEVEL {
    MibIfTableNormal=0,
    MibIfTableRaw=1
} _MIB_IF_TABLE_LEVEL;

typedef struct _MIB_IFSTACK_ROW _MIB_IFSTACK_ROW, *P_MIB_IFSTACK_ROW;

struct _MIB_IFSTACK_ROW {
    NET_IFINDEX HigherLayerInterfaceIndex;
    NET_IFINDEX LowerLayerInterfaceIndex;
};

typedef struct _MIB_IFSTACK_TABLE _MIB_IFSTACK_TABLE, *P_MIB_IFSTACK_TABLE;

typedef struct _MIB_IFSTACK_ROW MIB_IFSTACK_ROW;

struct _MIB_IFSTACK_TABLE {
    ULONG NumEntries;
    MIB_IFSTACK_ROW Table[1];
};

typedef struct _MIB_INVERTEDIFSTACK_ROW _MIB_INVERTEDIFSTACK_ROW, *P_MIB_INVERTEDIFSTACK_ROW;

struct _MIB_INVERTEDIFSTACK_ROW {
    NET_IFINDEX LowerLayerInterfaceIndex;
    NET_IFINDEX HigherLayerInterfaceIndex;
};

typedef struct _MIB_INVERTEDIFSTACK_TABLE _MIB_INVERTEDIFSTACK_TABLE, *P_MIB_INVERTEDIFSTACK_TABLE;

typedef struct _MIB_INVERTEDIFSTACK_ROW MIB_INVERTEDIFSTACK_ROW;

struct _MIB_INVERTEDIFSTACK_TABLE {
    ULONG NumEntries;
    MIB_INVERTEDIFSTACK_ROW Table[1];
};

typedef struct _MIB_IPFORWARD_ROW2 _MIB_IPFORWARD_ROW2, *P_MIB_IPFORWARD_ROW2;

typedef struct _IP_ADDRESS_PREFIX IP_ADDRESS_PREFIX;

typedef enum enum_6649 {
    MIB_IPPROTO_BBN=12,
    MIB_IPPROTO_BGP=14,
    MIB_IPPROTO_CISCO=11,
    MIB_IPPROTO_EGP=5,
    MIB_IPPROTO_ES_IS=10,
    MIB_IPPROTO_GGP=6,
    MIB_IPPROTO_HELLO=7,
    MIB_IPPROTO_ICMP=4,
    MIB_IPPROTO_IS_IS=9,
    MIB_IPPROTO_LOCAL=2,
    MIB_IPPROTO_NETMGMT=3,
    MIB_IPPROTO_NT_AUTOSTATIC=10002,
    MIB_IPPROTO_NT_STATIC=10006,
    MIB_IPPROTO_NT_STATIC_NON_DOD=10007,
    MIB_IPPROTO_OSPF=13,
    MIB_IPPROTO_OTHER=1,
    MIB_IPPROTO_RIP=8,
    PROTO_IP_BBN=12,
    PROTO_IP_BGP=14,
    PROTO_IP_CISCO=11,
    PROTO_IP_EGP=5,
    PROTO_IP_ES_IS=10,
    PROTO_IP_GGP=6,
    PROTO_IP_HELLO=7,
    PROTO_IP_ICMP=4,
    PROTO_IP_IS_IS=9,
    PROTO_IP_LOCAL=2,
    PROTO_IP_NETMGMT=3,
    PROTO_IP_NT_AUTOSTATIC=10002,
    PROTO_IP_NT_STATIC=10006,
    PROTO_IP_NT_STATIC_NON_DOD=10007,
    PROTO_IP_OSPF=13,
    PROTO_IP_OTHER=1,
    PROTO_IP_RIP=8,
    RouteProtocolBbn=12,
    RouteProtocolBgp=14,
    RouteProtocolCisco=11,
    RouteProtocolEgp=5,
    RouteProtocolEsIs=10,
    RouteProtocolGgp=6,
    RouteProtocolHello=7,
    RouteProtocolIcmp=4,
    RouteProtocolIsIs=9,
    RouteProtocolLocal=2,
    RouteProtocolNetMgmt=3,
    RouteProtocolOspf=13,
    RouteProtocolOther=1,
    RouteProtocolRip=8
} enum_6649;

typedef enum enum_6649 NL_ROUTE_PROTOCOL;

typedef enum _NL_ROUTE_ORIGIN {
    Nlro6to4=4,
    NlroDHCP=2,
    NlroManual=0,
    NlroRouterAdvertisement=3,
    NlroWellKnown=1
} _NL_ROUTE_ORIGIN;

typedef enum _NL_ROUTE_ORIGIN NL_ROUTE_ORIGIN;

struct _MIB_IPFORWARD_ROW2 {
    NET_LUID InterfaceLuid;
    NET_IFINDEX InterfaceIndex;
    IP_ADDRESS_PREFIX DestinationPrefix;
    SOCKADDR_INET NextHop;
    UCHAR SitePrefixLength;
    ULONG ValidLifetime;
    ULONG PreferredLifetime;
    ULONG Metric;
    NL_ROUTE_PROTOCOL Protocol;
    BOOLEAN Loopback;
    BOOLEAN AutoconfigureAddress;
    BOOLEAN Publish;
    BOOLEAN Immortal;
    ULONG Age;
    NL_ROUTE_ORIGIN Origin;
};

typedef struct _MIB_IPFORWARD_TABLE2 _MIB_IPFORWARD_TABLE2, *P_MIB_IPFORWARD_TABLE2;

typedef struct _MIB_IPFORWARD_ROW2 MIB_IPFORWARD_ROW2;

struct _MIB_IPFORWARD_TABLE2 {
    ULONG NumEntries;
    MIB_IPFORWARD_ROW2 Table[1];
};

typedef struct _MIB_IPINTERFACE_ROW _MIB_IPINTERFACE_ROW, *P_MIB_IPINTERFACE_ROW;

typedef enum _NL_ROUTER_DISCOVERY_BEHAVIOR {
    RouterDiscoveryDhcp=2,
    RouterDiscoveryDisabled=0,
    RouterDiscoveryEnabled=1,
    RouterDiscoveryUnchanged=3
} _NL_ROUTER_DISCOVERY_BEHAVIOR;

typedef enum _NL_ROUTER_DISCOVERY_BEHAVIOR NL_ROUTER_DISCOVERY_BEHAVIOR;

typedef enum _NL_LINK_LOCAL_ADDRESS_BEHAVIOR {
    LinkLocalAlwaysOff=0,
    LinkLocalAlwaysOn=2,
    LinkLocalDelayed=1,
    LinkLocalUnchanged=3
} _NL_LINK_LOCAL_ADDRESS_BEHAVIOR;

typedef enum _NL_LINK_LOCAL_ADDRESS_BEHAVIOR NL_LINK_LOCAL_ADDRESS_BEHAVIOR;

typedef struct _NL_INTERFACE_OFFLOAD_ROD _NL_INTERFACE_OFFLOAD_ROD, *P_NL_INTERFACE_OFFLOAD_ROD;

typedef struct _NL_INTERFACE_OFFLOAD_ROD NL_INTERFACE_OFFLOAD_ROD;

typedef union anon__struct_6651_bitfield_1 anon__struct_6651_bitfield_1, *Panon__struct_6651_bitfield_1;

union anon__struct_6651_bitfield_1 {
    BOOLEAN NlChecksumSupported:1; /* : bits 0 */
    BOOLEAN NlOptionsSupported:1; /* : bits 1 */
    BOOLEAN TlDatagramChecksumSupported:1; /* : bits 2 */
    BOOLEAN TlStreamChecksumSupported:1; /* : bits 3 */
    BOOLEAN TlStreamOptionsSupported:1; /* : bits 4 */
    BOOLEAN FastPathCompatible:1; /* : bits 5 */
    BOOLEAN TlLargeSendOffloadSupported:1; /* : bits 6 */
    BOOLEAN TlGiantSendOffloadSupported:1; /* : bits 7 */
};

struct _NL_INTERFACE_OFFLOAD_ROD {
    union anon__struct_6651_bitfield_1 field_0x0;
};

struct _MIB_IPINTERFACE_ROW {
    ADDRESS_FAMILY Family;
    NET_LUID InterfaceLuid;
    NET_IFINDEX InterfaceIndex;
    ULONG MaxReassemblySize;
    ULONG64 InterfaceIdentifier;
    ULONG MinRouterAdvertisementInterval;
    ULONG MaxRouterAdvertisementInterval;
    BOOLEAN AdvertisingEnabled;
    BOOLEAN ForwardingEnabled;
    BOOLEAN WeakHostSend;
    BOOLEAN WeakHostReceive;
    BOOLEAN UseAutomaticMetric;
    BOOLEAN UseNeighborUnreachabilityDetection;
    BOOLEAN ManagedAddressConfigurationSupported;
    BOOLEAN OtherStatefulConfigurationSupported;
    BOOLEAN AdvertiseDefaultRoute;
    NL_ROUTER_DISCOVERY_BEHAVIOR RouterDiscoveryBehavior;
    ULONG DadTransmits;
    ULONG BaseReachableTime;
    ULONG RetransmitTime;
    ULONG PathMtuDiscoveryTimeout;
    NL_LINK_LOCAL_ADDRESS_BEHAVIOR LinkLocalAddressBehavior;
    ULONG LinkLocalAddressTimeout;
    ULONG SitePrefixLength;
    ULONG Metric;
    ULONG NlMtu;
    BOOLEAN Connected;
    BOOLEAN SupportsWakeUpPatterns;
    BOOLEAN SupportsNeighborDiscovery;
    BOOLEAN SupportsRouterDiscovery;
    ULONG ReachableTime;
    NL_INTERFACE_OFFLOAD_ROD TransmitOffload;
    NL_INTERFACE_OFFLOAD_ROD ReceiveOffload;
    BOOLEAN DisableDefaultRoutes;
};

typedef struct _MIB_IPINTERFACE_TABLE _MIB_IPINTERFACE_TABLE, *P_MIB_IPINTERFACE_TABLE;

typedef struct _MIB_IPINTERFACE_ROW MIB_IPINTERFACE_ROW;

struct _MIB_IPINTERFACE_TABLE {
    ULONG NumEntries;
    MIB_IPINTERFACE_ROW Table[1];
};

typedef struct _MIB_IPNET_ROW2 _MIB_IPNET_ROW2, *P_MIB_IPNET_ROW2;

typedef enum _NL_NEIGHBOR_STATE {
    NlnsDelay=3,
    NlnsIncomplete=1,
    NlnsMaximum=7,
    NlnsPermanent=6,
    NlnsProbe=2,
    NlnsReachable=5,
    NlnsStale=4,
    NlnsUnreachable=0
} _NL_NEIGHBOR_STATE;

typedef enum _NL_NEIGHBOR_STATE NL_NEIGHBOR_STATE;

typedef union _union_6730 _union_6730, *P_union_6730;

typedef union _union_6732 _union_6732, *P_union_6732;

typedef struct _struct_6731 _struct_6731, *P_struct_6731;

typedef union anon__struct_6731_bitfield_1 anon__struct_6731_bitfield_1, *Panon__struct_6731_bitfield_1;

union anon__struct_6731_bitfield_1 {
    BOOLEAN IsRouter:1; /* : bits 0 */
    BOOLEAN IsUnreachable:1; /* : bits 1 */
};

union _union_6732 {
    ULONG LastReachable;
    ULONG LastUnreachable;
};

struct _struct_6731 {
    union anon__struct_6731_bitfield_1 field_0x0;
};

union _union_6730 {
    struct _struct_6731 field0;
    UCHAR Flags;
};

struct _MIB_IPNET_ROW2 {
    SOCKADDR_INET Address;
    NET_IFINDEX InterfaceIndex;
    NET_LUID InterfaceLuid;
    UCHAR PhysicalAddress[32];
    ULONG PhysicalAddressLength;
    NL_NEIGHBOR_STATE State;
    union _union_6730 field_0x50;
    union _union_6732 ReachabilityTime;
};

typedef struct _MIB_IPNET_TABLE2 _MIB_IPNET_TABLE2, *P_MIB_IPNET_TABLE2;

typedef struct _MIB_IPNET_ROW2 MIB_IPNET_ROW2;

struct _MIB_IPNET_TABLE2 {
    ULONG NumEntries;
    MIB_IPNET_ROW2 Table[1];
};

typedef struct _MIB_IPPATH_ROW _MIB_IPPATH_ROW, *P_MIB_IPPATH_ROW;

typedef union _union_6727 _union_6727, *P_union_6727;

union _union_6727 {
    ULONG LastReachable;
    ULONG LastUnreachable;
};

struct _MIB_IPPATH_ROW {
    SOCKADDR_INET Source;
    SOCKADDR_INET Destination;
    NET_LUID InterfaceLuid;
    NET_IFINDEX InterfaceIndex;
    SOCKADDR_INET CurrentNextHop;
    ULONG PathMtu;
    ULONG RttMean;
    ULONG RttDeviation;
    union _union_6727 field_0x6c;
    BOOLEAN IsReachable;
    ULONG64 LinkTransmitSpeed;
    ULONG64 LinkReceiveSpeed;
};

typedef struct _MIB_IPPATH_TABLE _MIB_IPPATH_TABLE, *P_MIB_IPPATH_TABLE;

typedef struct _MIB_IPPATH_ROW MIB_IPPATH_ROW;

struct _MIB_IPPATH_TABLE {
    ULONG NumEntries;
    MIB_IPPATH_ROW Table[1];
};

typedef struct _MIB_MULTICASTIPADDRESS_ROW _MIB_MULTICASTIPADDRESS_ROW, *P_MIB_MULTICASTIPADDRESS_ROW;

struct _MIB_MULTICASTIPADDRESS_ROW {
    SOCKADDR_INET Address;
    NET_IFINDEX InterfaceIndex;
    NET_LUID InterfaceLuid;
    struct SCOPE_ID ScopeId;
};

typedef struct _MIB_MULTICASTIPADDRESS_TABLE _MIB_MULTICASTIPADDRESS_TABLE, *P_MIB_MULTICASTIPADDRESS_TABLE;

typedef struct _MIB_MULTICASTIPADDRESS_ROW MIB_MULTICASTIPADDRESS_ROW;

struct _MIB_MULTICASTIPADDRESS_TABLE {
    ULONG NumEntries;
    MIB_MULTICASTIPADDRESS_ROW Table[1];
};

typedef enum _MIB_NOTIFICATION_TYPE {
    MibAddInstance=1,
    MibDeleteInstance=2,
    MibInitialNotification=3,
    MibParameterNotification=0
} _MIB_NOTIFICATION_TYPE;

typedef struct _MIB_UNICASTIPADDRESS_ROW _MIB_UNICASTIPADDRESS_ROW, *P_MIB_UNICASTIPADDRESS_ROW;

typedef enum enum_6646 {
    IpPrefixOriginDhcp=3,
    IpPrefixOriginManual=1,
    IpPrefixOriginOther=0,
    IpPrefixOriginRouterAdvertisement=4,
    IpPrefixOriginUnchanged=16,
    IpPrefixOriginWellKnown=2
} enum_6646;

typedef enum enum_6646 NL_PREFIX_ORIGIN;

typedef enum enum_6647 {
    IpSuffixOriginDhcp=3,
    IpSuffixOriginLinkLayerAddress=4,
    IpSuffixOriginManual=1,
    IpSuffixOriginOther=0,
    IpSuffixOriginRandom=5,
    IpSuffixOriginUnchanged=16,
    IpSuffixOriginWellKnown=2,
    NlsoDhcp=3,
    NlsoLinkLayerAddress=4,
    NlsoManual=1,
    NlsoOther=0,
    NlsoRandom=5,
    NlsoWellKnown=2
} enum_6647;

typedef enum enum_6647 NL_SUFFIX_ORIGIN;

typedef enum enum_6648 {
    IpDadStateDeprecated=3,
    IpDadStateDuplicate=2,
    IpDadStateInvalid=0,
    IpDadStatePreferred=4,
    IpDadStateTentative=1,
    NldsDeprecated=3,
    NldsDuplicate=2,
    NldsInvalid=0,
    NldsPreferred=4,
    NldsTentative=1
} enum_6648;

typedef enum enum_6648 NL_DAD_STATE;

struct _MIB_UNICASTIPADDRESS_ROW {
    SOCKADDR_INET Address;
    NET_LUID InterfaceLuid;
    NET_IFINDEX InterfaceIndex;
    NL_PREFIX_ORIGIN PrefixOrigin;
    NL_SUFFIX_ORIGIN SuffixOrigin;
    ULONG ValidLifetime;
    ULONG PreferredLifetime;
    UINT8 OnLinkPrefixLength;
    BOOLEAN SkipAsSource;
    NL_DAD_STATE DadState;
    struct SCOPE_ID ScopeId;
    LARGE_INTEGER CreationTimeStamp;
};

typedef struct _MIB_UNICASTIPADDRESS_TABLE _MIB_UNICASTIPADDRESS_TABLE, *P_MIB_UNICASTIPADDRESS_TABLE;

typedef struct _MIB_UNICASTIPADDRESS_ROW MIB_UNICASTIPADDRESS_ROW;

struct _MIB_UNICASTIPADDRESS_TABLE {
    ULONG NumEntries;
    MIB_UNICASTIPADDRESS_ROW Table[1];
};

typedef struct _MIB_ANYCASTIPADDRESS_TABLE MIB_ANYCASTIPADDRESS_TABLE;

typedef struct _MIB_IF_TABLE2 MIB_IF_TABLE2;

typedef enum _MIB_IF_TABLE_LEVEL MIB_IF_TABLE_LEVEL;

typedef struct _MIB_IFSTACK_TABLE MIB_IFSTACK_TABLE;

typedef struct _MIB_INVERTEDIFSTACK_TABLE MIB_INVERTEDIFSTACK_TABLE;

typedef struct _MIB_IPFORWARD_TABLE2 MIB_IPFORWARD_TABLE2;

typedef struct _MIB_IPINTERFACE_TABLE MIB_IPINTERFACE_TABLE;

typedef struct _MIB_IPNET_TABLE2 MIB_IPNET_TABLE2;

typedef struct _MIB_IPPATH_TABLE MIB_IPPATH_TABLE;

typedef struct _MIB_MULTICASTIPADDRESS_TABLE MIB_MULTICASTIPADDRESS_TABLE;

typedef enum _MIB_NOTIFICATION_TYPE MIB_NOTIFICATION_TYPE;

typedef struct _MIB_UNICASTIPADDRESS_TABLE MIB_UNICASTIPADDRESS_TABLE;

typedef struct _IP_ADDRESS_PREFIX * PIP_ADDRESS_PREFIX;

typedef struct _MIB_IPFORWARD_ROW2 * PMIB_IPFORWARD_ROW2;

typedef void (* PIPFORWARD_CHANGE_CALLBACK)(PVOID, PMIB_IPFORWARD_ROW2, MIB_NOTIFICATION_TYPE);

typedef struct _MIB_IPINTERFACE_ROW * PMIB_IPINTERFACE_ROW;

typedef void (* PIPINTERFACE_CHANGE_CALLBACK)(PVOID, PMIB_IPINTERFACE_ROW, MIB_NOTIFICATION_TYPE);

typedef struct _MIB_ANYCASTIPADDRESS_ROW * PMIB_ANYCASTIPADDRESS_ROW;

typedef struct _MIB_ANYCASTIPADDRESS_TABLE * PMIB_ANYCASTIPADDRESS_TABLE;

typedef struct _MIB_IF_ROW2 * PMIB_IF_ROW2;

typedef struct _MIB_IF_TABLE2 * PMIB_IF_TABLE2;

typedef enum _MIB_IF_TABLE_LEVEL * PMIB_IF_TABLE_LEVEL;

typedef struct _MIB_IFSTACK_ROW * PMIB_IFSTACK_ROW;

typedef struct _MIB_IFSTACK_TABLE * PMIB_IFSTACK_TABLE;

typedef struct _MIB_INVERTEDIFSTACK_ROW * PMIB_INVERTEDIFSTACK_ROW;

typedef struct _MIB_INVERTEDIFSTACK_TABLE * PMIB_INVERTEDIFSTACK_TABLE;

typedef struct _MIB_IPFORWARD_TABLE2 * PMIB_IPFORWARD_TABLE2;

typedef struct _MIB_IPINTERFACE_TABLE * PMIB_IPINTERFACE_TABLE;

typedef struct _MIB_IPNET_ROW2 * PMIB_IPNET_ROW2;

typedef struct _MIB_IPNET_TABLE2 * PMIB_IPNET_TABLE2;

typedef struct _MIB_IPPATH_ROW * PMIB_IPPATH_ROW;

typedef struct _MIB_IPPATH_TABLE * PMIB_IPPATH_TABLE;

typedef struct _MIB_MULTICASTIPADDRESS_ROW * PMIB_MULTICASTIPADDRESS_ROW;

typedef struct _MIB_MULTICASTIPADDRESS_TABLE * PMIB_MULTICASTIPADDRESS_TABLE;

typedef enum _MIB_NOTIFICATION_TYPE * PMIB_NOTIFICATION_TYPE;

typedef struct _MIB_UNICASTIPADDRESS_ROW * PMIB_UNICASTIPADDRESS_ROW;

typedef struct _MIB_UNICASTIPADDRESS_TABLE * PMIB_UNICASTIPADDRESS_TABLE;

typedef void (* PSTABLE_UNICAST_IPADDRESS_TABLE_CALLBACK)(PVOID, PMIB_UNICASTIPADDRESS_TABLE);

typedef void (* PTEREDO_PORT_CHANGE_CALLBACK)(PVOID, USHORT, MIB_NOTIFICATION_TYPE);

typedef void (* PUNICAST_IPADDRESS_CHANGE_CALLBACK)(PVOID, PMIB_UNICASTIPADDRESS_ROW, MIB_NOTIFICATION_TYPE);

#define NET_IF_CURRENT_SESSION -1

#define NL_MAX_METRIC_COMPONENT 2147483647

typedef enum _NL_BANDWIDTH_FLAG {
    NlbwDisabled=0,
    NlbwEnabled=1,
    NlbwUnchanged=2
} _NL_BANDWIDTH_FLAG;

typedef enum _NL_NETWORK_CATEGORY {
    NetworkCategoryDomainAuthenticated=2,
    NetworkCategoryPrivate=1,
    NetworkCategoryPublic=0,
    NetworkCategoryUnchanged=3,
    NetworkCategoryUnknown=4
} _NL_NETWORK_CATEGORY;

typedef struct _NL_PATH_BANDWIDTH_ROD _NL_PATH_BANDWIDTH_ROD, *P_NL_PATH_BANDWIDTH_ROD;

struct _NL_PATH_BANDWIDTH_ROD {
    ULONG64 Bandwidth;
    ULONG64 Instability;
    BOOLEAN BandwidthPeaked;
};

typedef enum enum_6650 {
    NlatAnycast=2,
    NlatBroadcast=4,
    NlatInvalid=5,
    NlatMulticast=3,
    NlatUnicast=1,
    NlatUnspecified=0
} enum_6650;

typedef enum enum_6650 NL_ADDRESS_TYPE;

typedef enum _NL_BANDWIDTH_FLAG NL_BANDWIDTH_FLAG;

typedef enum _NL_NETWORK_CATEGORY NL_NETWORK_CATEGORY;

typedef struct _NL_PATH_BANDWIDTH_ROD NL_PATH_BANDWIDTH_ROD;

typedef enum enum_6650 * PNL_ADDRESS_TYPE;

typedef enum _NL_BANDWIDTH_FLAG * PNL_BANDWIDTH_FLAG;

typedef struct _NL_INTERFACE_OFFLOAD_ROD * PNL_INTERFACE_OFFLOAD_ROD;

typedef enum _NL_NEIGHBOR_STATE * PNL_NEIGHBOR_STATE;

typedef enum _NL_NETWORK_CATEGORY * PNL_NETWORK_CATEGORY;

typedef struct _NL_PATH_BANDWIDTH_ROD * PNL_PATH_BANDWIDTH_ROD;

typedef enum _NL_ROUTE_ORIGIN * PNL_ROUTE_ORIGIN;

typedef enum enum_6649 * PNL_ROUTE_PROTOCOL;

#define _SIDD_BIT_MASK 0

#define _SIDD_CMP_EQUAL_ANY 0

#define _SIDD_CMP_EQUAL_EACH 8

#define _SIDD_CMP_EQUAL_ORDERED 12

#define _SIDD_CMP_RANGES 4

#define _SIDD_LEAST_SIGNIFICANT 0

#define _SIDD_MASKED_NEGATIVE_POLARITY 48

#define _SIDD_MASKED_POSITIVE_POLARITY 32

#define _SIDD_MOST_SIGNIFICANT 64

#define _SIDD_NEGATIVE_POLARITY 16

#define _SIDD_POSITIVE_POLARITY 0

#define _SIDD_SBYTE_OPS 2

#define _SIDD_SWORD_OPS 3

#define _SIDD_UBYTE_OPS 0

#define _SIDD_UNIT_MASK 64

#define _SIDD_UWORD_OPS 1

#define NOTIFY_POST 2

#define NOTIFY_PRE 1

#define WN_CREDENTIAL_CLASS 2

#define WN_NETWORK_CLASS 1

#define WN_NT_PASSWORD_CHANGED 2

#define WN_PRIMARY_AUTHENT_CLASS 4

#define WN_SERVICE_CLASS 8

#define WN_VALID_LOGON_ACCOUNT 1

#define WNDN_MKDIR 1

#define WNDN_MVDIR 3

#define WNDN_RMDIR 2

#define WNDT_NETWORK 1

#define WNDT_NORMAL 0

#define WNGETCON_CONNECTED 0

#define WNGETCON_DISCONNECTED 1

#define WNNC_ADM_DIRECTORYNOTIFY 2

#define WNNC_ADM_GETDIRECTORYTYPE 1

#define WNNC_ADMIN 9

#define WNNC_CF_DEFAULT 28

#define WNNC_CF_MAXIMUM 15388

#define WNNC_CON_ADDCONNECTION 1

#define WNNC_CON_ADDCONNECTION3 8

#define WNNC_CON_CANCELCONNECTION 2

#define WNNC_CON_DEFER 128

#define WNNC_CON_GETCONNECTIONS 4

#define WNNC_CON_GETPERFORMANCE 64

#define WNNC_CONNECTION 6

#define WNNC_CONNECTION_FLAGS 13

#define WNNC_DIALOG 8

#define WNNC_DLG_DEVICEMODE 1

#define WNNC_DLG_FORMATNETWORKNAME 128

#define WNNC_DLG_GETRESOURCEINFORMATION 2048

#define WNNC_DLG_GETRESOURCEPARENT 512

#define WNNC_DLG_PERMISSIONEDITOR 256

#define WNNC_DLG_PROPERTYDIALOG 32

#define WNNC_DLG_SEARCHDIALOG 64

#define WNNC_DRIVER_VERSION 3

#define WNNC_ENUM_CONTEXT 4

#define WNNC_ENUM_GLOBAL 1

#define WNNC_ENUM_LOCAL 2

#define WNNC_ENUM_SHAREABLE 8

#define WNNC_ENUMERATION 11

#define WNNC_NET_NONE 0

#define WNNC_NET_TYPE 2

#define WNNC_SPEC_VERSION 1

#define WNNC_SPEC_VERSION51 327681

#define WNNC_START 12

#define WNNC_USER 4

#define WNNC_USR_GETUSER 1

#define WNNC_WAIT_FOR_START 1

#define WNPERM_DLG_AUDIT 1

#define WNPERM_DLG_OWNER 2

#define WNPERM_DLG_PERM 0

#define WNPERMC_AUDIT 2

#define WNPERMC_OWNER 4

#define WNPERMC_PERM 1

#define WNPS_DIR 1

#define WNPS_FILE 0

#define WNPS_MULT 2

#define WNSRCH_REFRESH_FIRST_LEVEL 1

#define WNTYPE_COMM 4

#define WNTYPE_DRIVE 1

#define WNTYPE_FILE 2

#define WNTYPE_PRINTER 3

typedef struct _NOTIFYADD _NOTIFYADD, *P_NOTIFYADD;

typedef struct _NETRESOURCEA _NETRESOURCEA, *P_NETRESOURCEA;

typedef struct _NETRESOURCEA NETRESOURCEA;

typedef NETRESOURCEA NETRESOURCE;

struct _NETRESOURCEA {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwDisplayType;
    DWORD dwUsage;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    LPSTR lpComment;
    LPSTR lpProvider;
};

struct _NOTIFYADD {
    HWND hwndOwner;
    NETRESOURCE NetResource;
    DWORD dwAddFlags;
};

typedef struct _NOTIFYCANCEL _NOTIFYCANCEL, *P_NOTIFYCANCEL;

struct _NOTIFYCANCEL {
    LPWSTR lpName;
    LPWSTR lpProvider;
    DWORD dwFlags;
    BOOL fForce;
};

typedef struct _NOTIFYINFO _NOTIFYINFO, *P_NOTIFYINFO;

struct _NOTIFYINFO {
    DWORD dwNotifyStatus;
    DWORD dwOperationStatus;
    LPVOID lpContext;
};

typedef struct _NOTIFYADD * LPNOTIFYADD;

typedef struct _NOTIFYCANCEL * LPNOTIFYCANCEL;

typedef struct _NOTIFYINFO * LPNOTIFYINFO;

typedef struct _NOTIFYADD NOTIFYADD;

typedef struct _NOTIFYCANCEL NOTIFYCANCEL;

typedef struct _NOTIFYINFO NOTIFYINFO;

typedef DWORD (* PF_AddConnectNotify)(LPNOTIFYINFO, LPNOTIFYADD);

typedef DWORD (* PF_CancelConnectNotify)(LPNOTIFYINFO, LPNOTIFYCANCEL);

typedef struct _NETRESOURCEW _NETRESOURCEW, *P_NETRESOURCEW;

typedef struct _NETRESOURCEW * LPNETRESOURCEW;

typedef DWORD (* PF_NPAddConnection)(LPNETRESOURCEW, LPWSTR, LPWSTR);

struct _NETRESOURCEW {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwDisplayType;
    DWORD dwUsage;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    LPWSTR lpComment;
    LPWSTR lpProvider;
};

typedef DWORD (* PF_NPAddConnection3)(HWND, LPNETRESOURCEW, LPWSTR, LPWSTR, DWORD);

typedef DWORD (* PF_NPCancelConnection)(LPWSTR, BOOL);

typedef DWORD (* PF_NPCloseEnum)(HANDLE);

typedef DWORD (* PF_NPDeviceMode)(HWND);

typedef DWORD (* PF_NPDirectoryNotify)(HWND, LPWSTR, DWORD);

typedef DWORD (* PF_NPEnumResource)(HANDLE, LPDWORD, LPVOID, LPDWORD);

typedef DWORD (* PF_NPFMXEditPerm)(LPWSTR, HWND, DWORD);

typedef DWORD (* PF_NPFMXGetPermCaps)(LPWSTR);

typedef DWORD (* PF_NPFMXGetPermHelp)(LPWSTR, DWORD, BOOL, LPVOID, LPDWORD, LPDWORD);

typedef DWORD (* PF_NPFormatNetworkName)(LPWSTR, LPWSTR, LPDWORD, DWORD, DWORD);

typedef DWORD (* PF_NPGetCaps)(DWORD);

typedef DWORD (* PF_NPGetConnection)(LPWSTR, LPWSTR, LPDWORD);

typedef DWORD (* PF_NPGetConnection3)(LPCWSTR, DWORD, LPVOID, LPDWORD);

typedef struct _NETCONNECTINFOSTRUCT _NETCONNECTINFOSTRUCT, *P_NETCONNECTINFOSTRUCT;

typedef struct _NETCONNECTINFOSTRUCT * LPNETCONNECTINFOSTRUCT;

typedef DWORD (* PF_NPGetConnectionPerformance)(LPCWSTR, LPNETCONNECTINFOSTRUCT);

struct _NETCONNECTINFOSTRUCT {
    DWORD cbStructure;
    DWORD dwFlags;
    DWORD dwSpeed;
    DWORD dwDelay;
    DWORD dwOptDataSize;
};

typedef int * LPINT;

typedef DWORD (* PF_NPGetDirectoryType)(LPWSTR, LPINT, BOOL);

typedef DWORD (* PF_NPGetPropertyText)(DWORD, DWORD, LPWSTR, LPWSTR, DWORD, DWORD);

typedef DWORD (* PF_NPGetResourceInformation)(LPNETRESOURCEW, LPVOID, LPDWORD, LPWSTR *);

typedef DWORD (* PF_NPGetResourceParent)(LPNETRESOURCEW, LPVOID, LPDWORD);

typedef DWORD (* PF_NPGetUniversalName)(LPCWSTR, DWORD, LPVOID, LPDWORD);

typedef DWORD (* PF_NPGetUser)(LPWSTR, LPWSTR, LPDWORD);

typedef struct _LUID _LUID, *P_LUID;

typedef struct _LUID * PLUID;

typedef DWORD (* PF_NPLogonNotify)(PLUID, LPCWSTR, LPVOID, LPCWSTR, LPVOID, LPWSTR, LPVOID, LPWSTR *);

struct _LUID {
    DWORD LowPart;
    LONG HighPart;
};

typedef HANDLE * LPHANDLE;

typedef DWORD (* PF_NPOpenEnum)(DWORD, DWORD, DWORD, LPNETRESOURCEW, LPHANDLE);

typedef DWORD (* PF_NPPasswordChangeNotify)(LPCWSTR, LPVOID, LPCWSTR, LPVOID, LPWSTR, LPVOID, DWORD);

typedef DWORD (* PF_NPPropertyDialog)(HWND, DWORD, DWORD, LPWSTR, DWORD);

typedef DWORD (* PF_NPSearchDialog)(HWND, LPNETRESOURCEW, LPVOID, DWORD, LPDWORD);

#define NS_DEFAULT 0

#define NS_VNS 50

#define NSTYPE_DYNAMIC 2

#define NSTYPE_ENUMERABLE 4

#define NSTYPE_HIERARCHICAL 1

#define NSTYPE_WORKGROUP 8

#define PROP_ADDRESSES 256

#define PROP_ALL 2147483648

#define PROP_COMMENT 1

#define PROP_DISPLAY_HINT 4

#define PROP_LOCALE 2

#define PROP_MACHINE 32

#define PROP_SD 512

#define PROP_START_TIME 16

#define PROP_VERSION 8

#define RES_FIND_MULTIPLE 2

#define RES_SERVICE 4

#define RES_SOFT_SEARCH 1

#define SERVICE_ADD_TYPE 4

#define SERVICE_ADDRESS_FLAG_RPC_CN 1

#define SERVICE_ADDRESS_FLAG_RPC_DG 2

#define SERVICE_ADDRESS_FLAG_RPC_NB 4

#define SERVICE_DELETE_TYPE 5

#define SERVICE_DEREGISTER 2

#define SERVICE_FLAG_DEFER 1

#define SERVICE_FLAG_HARD 2

#define SERVICE_FLUSH 3

#define SERVICE_LOCAL 4

#define SERVICE_REGISTER 1

#define SERVICE_RESOURCE 1

#define SERVICE_SERVICE 2

#define SET_SERVICE_PARTIAL_SUCCESS 1

#define XP_BANDWIDTH_ALLOCATION 2048

#define XP_CONNECT_DATA 128

#define XP_CONNECTIONLESS 1

#define XP_DISCONNECT_DATA 256

#define XP_ENCRYPTS 8192

#define XP_EXPEDITED_DATA 64

#define XP_FRAGMENTATION 4096

#define XP_GRACEFUL_CLOSE 32

#define XP_GUARANTEED_DELIVERY 2

#define XP_GUARANTEED_ORDER 4

#define XP_MESSAGE_ORIENTED 8

#define XP_PSEUDO_STREAM 16

#define XP_SUPPORTS_BROADCAST 512

#define XP_SUPPORTS_MULTICAST 1024

typedef struct _NETRESOURCE2A _NETRESOURCE2A, *P_NETRESOURCE2A;

typedef struct _NS_INFOA _NS_INFOA, *P_NS_INFOA;

typedef struct _NS_INFOA NS_INFOA;

typedef NS_INFOA NS_INFO;

struct _NS_INFOA {
    DWORD dwNameSpace;
    DWORD dwNameSpaceFlags;
    LPSTR lpNameSpace;
};

struct _NETRESOURCE2A {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwUsage;
    DWORD dwDisplayType;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    LPSTR lpComment;
    NS_INFO ns_info;
    GUID ServiceType;
    DWORD dwProtocols;
    LPINT lpiProtocols;
};

typedef struct _NETRESOURCE2W _NETRESOURCE2W, *P_NETRESOURCE2W;

struct _NETRESOURCE2W {
    DWORD dwScope;
    DWORD dwType;
    DWORD dwUsage;
    DWORD dwDisplayType;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    LPWSTR lpComment;
    NS_INFO ns_info;
    GUID ServiceType;
    DWORD dwProtocols;
    LPINT lpiProtocols;
};

typedef struct _NS_INFOW _NS_INFOW, *P_NS_INFOW;

struct _NS_INFOW {
    DWORD dwNameSpace;
    DWORD dwNameSpaceFlags;
    LPWSTR lpNameSpace;
};

typedef struct _NS_SERVICE_INFOA _NS_SERVICE_INFOA, *P_NS_SERVICE_INFOA;

typedef struct _SERVICE_INFOA _SERVICE_INFOA, *P_SERVICE_INFOA;

typedef struct _SERVICE_INFOA SERVICE_INFOA;

typedef struct _SERVICE_ADDRESSES _SERVICE_ADDRESSES, *P_SERVICE_ADDRESSES;

typedef struct _SERVICE_ADDRESSES * LPSERVICE_ADDRESSES;

typedef struct tagBLOB tagBLOB, *PtagBLOB;

typedef struct tagBLOB BLOB;

typedef struct _SERVICE_ADDRESS _SERVICE_ADDRESS, *P_SERVICE_ADDRESS;

typedef struct _SERVICE_ADDRESS SERVICE_ADDRESS;

struct _SERVICE_ADDRESS {
    DWORD dwAddressType;
    DWORD dwAddressFlags;
    DWORD dwAddressLength;
    DWORD dwPrincipalLength;
    BYTE * lpAddress;
    BYTE * lpPrincipal;
};

struct _SERVICE_ADDRESSES {
    DWORD dwAddressCount;
    SERVICE_ADDRESS Addresses[1];
};

struct tagBLOB {
    ULONG cbSize;
    BYTE * pBlobData;
};

struct _SERVICE_INFOA {
    LPGUID lpServiceType;
    LPSTR lpServiceName;
    LPSTR lpComment;
    LPSTR lpLocale;
    DWORD dwDisplayHint;
    DWORD dwVersion;
    DWORD dwTime;
    LPSTR lpMachineName;
    LPSERVICE_ADDRESSES lpServiceAddress;
    BLOB ServiceSpecificInfo;
};

struct _NS_SERVICE_INFOA {
    DWORD dwNameSpace;
    SERVICE_INFOA ServiceInfo;
};

typedef struct _NS_SERVICE_INFOW _NS_SERVICE_INFOW, *P_NS_SERVICE_INFOW;

typedef struct _SERVICE_INFOW _SERVICE_INFOW, *P_SERVICE_INFOW;

typedef struct _SERVICE_INFOW SERVICE_INFOW;

struct _SERVICE_INFOW {
    LPGUID lpServiceType;
    LPWSTR lpServiceName;
    LPWSTR lpComment;
    LPWSTR lpLocale;
    DWORD dwDisplayHint;
    DWORD dwVersion;
    DWORD dwTime;
    LPWSTR lpMachineName;
    LPSERVICE_ADDRESSES lpServiceAddress;
    BLOB ServiceSpecificInfo;
};

struct _NS_SERVICE_INFOW {
    DWORD dwNameSpace;
    SERVICE_INFOW ServiceInfo;
};

typedef struct _PROTOCOL_INFOA _PROTOCOL_INFOA, *P_PROTOCOL_INFOA;

struct _PROTOCOL_INFOA {
    DWORD dwServiceFlags;
    INT iAddressFamily;
    INT iMaxSockAddr;
    INT iMinSockAddr;
    INT iSocketType;
    INT iProtocol;
    DWORD dwMessageSize;
    LPSTR lpProtocol;
};

typedef struct _PROTOCOL_INFOW _PROTOCOL_INFOW, *P_PROTOCOL_INFOW;

struct _PROTOCOL_INFOW {
    DWORD dwServiceFlags;
    INT iAddressFamily;
    INT iMaxSockAddr;
    INT iMinSockAddr;
    INT iSocketType;
    INT iProtocol;
    DWORD dwMessageSize;
    LPWSTR lpProtocol;
};

typedef struct _SERVICE_ASYNC_INFO _SERVICE_ASYNC_INFO, *P_SERVICE_ASYNC_INFO;

typedef void (* LPSERVICE_CALLBACK_PROC)(LPARAM, HANDLE);

struct _SERVICE_ASYNC_INFO {
    LPSERVICE_CALLBACK_PROC lpServiceCallbackProc;
    LPARAM lParam;
    HANDLE hAsyncTaskHandle;
};

typedef struct _SERVICE_TYPE_INFO _SERVICE_TYPE_INFO, *P_SERVICE_TYPE_INFO;

typedef struct _SERVICE_TYPE_VALUE _SERVICE_TYPE_VALUE, *P_SERVICE_TYPE_VALUE;

typedef struct _SERVICE_TYPE_VALUE SERVICE_TYPE_VALUE;

struct _SERVICE_TYPE_VALUE {
    DWORD dwNameSpace;
    DWORD dwValueType;
    DWORD dwValueSize;
    DWORD dwValueNameOffset;
    DWORD dwValueOffset;
};

struct _SERVICE_TYPE_INFO {
    DWORD dwTypeNameOffset;
    DWORD dwValueCount;
    SERVICE_TYPE_VALUE Values[1];
};

typedef struct _SERVICE_TYPE_INFO_ABSA _SERVICE_TYPE_INFO_ABSA, *P_SERVICE_TYPE_INFO_ABSA;

typedef struct _SERVICE_TYPE_VALUE_ABSA _SERVICE_TYPE_VALUE_ABSA, *P_SERVICE_TYPE_VALUE_ABSA;

typedef struct _SERVICE_TYPE_VALUE_ABSA SERVICE_TYPE_VALUE_ABSA;

struct _SERVICE_TYPE_VALUE_ABSA {
    DWORD dwNameSpace;
    DWORD dwValueType;
    DWORD dwValueSize;
    LPSTR lpValueName;
    PVOID lpValue;
};

struct _SERVICE_TYPE_INFO_ABSA {
    LPSTR lpTypeName;
    DWORD dwValueCount;
    SERVICE_TYPE_VALUE_ABSA Values[1];
};

typedef struct _SERVICE_TYPE_INFO_ABSW _SERVICE_TYPE_INFO_ABSW, *P_SERVICE_TYPE_INFO_ABSW;

typedef struct _SERVICE_TYPE_VALUE_ABSW _SERVICE_TYPE_VALUE_ABSW, *P_SERVICE_TYPE_VALUE_ABSW;

typedef struct _SERVICE_TYPE_VALUE_ABSW SERVICE_TYPE_VALUE_ABSW;

struct _SERVICE_TYPE_VALUE_ABSW {
    DWORD dwNameSpace;
    DWORD dwValueType;
    DWORD dwValueSize;
    LPWSTR lpValueName;
    PVOID lpValue;
};

struct _SERVICE_TYPE_INFO_ABSW {
    LPWSTR lpTypeName;
    DWORD dwValueCount;
    SERVICE_TYPE_VALUE_ABSW Values[1];
};

typedef DWORD (* LPFN_NSPAPI)(void);

typedef struct _NETRESOURCE2A * LPNETRESOURCE2A;

typedef LPNETRESOURCE2A LPNETRESOURCE2;

typedef struct _NETRESOURCE2W * LPNETRESOURCE2W;

typedef struct _NS_INFOA * LPNS_INFOA;

typedef LPNS_INFOA LPNS_INFO;

typedef struct _NS_INFOW * LPNS_INFOW;

typedef struct _NS_SERVICE_INFOA * LPNS_SERVICE_INFOA;

typedef LPNS_SERVICE_INFOA LPNS_SERVICE_INFO;

typedef struct _NS_SERVICE_INFOW * LPNS_SERVICE_INFOW;

typedef struct _PROTOCOL_INFOA * LPPROTOCOL_INFOA;

typedef LPPROTOCOL_INFOA LPPROTOCOL_INFO;

typedef struct _PROTOCOL_INFOW * LPPROTOCOL_INFOW;

typedef struct _SERVICE_ADDRESS * LPSERVICE_ADDRESS;

typedef struct _SERVICE_ASYNC_INFO * LPSERVICE_ASYNC_INFO;

typedef struct _SERVICE_INFOA * LPSERVICE_INFOA;

typedef LPSERVICE_INFOA LPSERVICE_INFO;

typedef struct _SERVICE_INFOW * LPSERVICE_INFOW;

typedef struct _SERVICE_TYPE_INFO * LPSERVICE_TYPE_INFO;

typedef struct _SERVICE_TYPE_INFO_ABSA * LPSERVICE_TYPE_INFO_ABSA;

typedef LPSERVICE_TYPE_INFO_ABSA LPSERVICE_TYPE_INFO_ABS;

typedef struct _SERVICE_TYPE_INFO_ABSW * LPSERVICE_TYPE_INFO_ABSW;

typedef struct _SERVICE_TYPE_VALUE * LPSERVICE_TYPE_VALUE;

typedef struct _SERVICE_TYPE_VALUE_ABSA * LPSERVICE_TYPE_VALUE_ABSA;

typedef LPSERVICE_TYPE_VALUE_ABSA LPSERVICE_TYPE_VALUE_ABS;

typedef struct _SERVICE_TYPE_VALUE_ABSW * LPSERVICE_TYPE_VALUE_ABSW;

typedef struct _NETRESOURCE2A NETRESOURCE2A;

typedef NETRESOURCE2A NETRESOURCE2;

typedef struct _NETRESOURCE2W NETRESOURCE2W;

typedef struct _NS_INFOW NS_INFOW;

typedef struct _NS_SERVICE_INFOA NS_SERVICE_INFOA;

typedef NS_SERVICE_INFOA NS_SERVICE_INFO;

typedef struct _NS_SERVICE_INFOW NS_SERVICE_INFOW;

typedef struct _NETRESOURCE2A * PNETRESOURCE2A;

typedef PNETRESOURCE2A PNETRESOURCE2;

typedef struct _NETRESOURCE2W * PNETRESOURCE2W;

typedef struct _NS_INFOA * PNS_INFOA;

typedef PNS_INFOA PNS_INFO;

typedef struct _NS_INFOW * PNS_INFOW;

typedef struct _NS_SERVICE_INFOA * PNS_SERVICE_INFOA;

typedef PNS_SERVICE_INFOA PNS_SERVICE_INFO;

typedef struct _NS_SERVICE_INFOW * PNS_SERVICE_INFOW;

typedef struct _PROTOCOL_INFOA * PPROTOCOL_INFOA;

typedef PPROTOCOL_INFOA PPROTOCOL_INFO;

typedef struct _PROTOCOL_INFOW * PPROTOCOL_INFOW;

typedef struct _PROTOCOL_INFOA PROTOCOL_INFOA;

typedef PROTOCOL_INFOA PROTOCOL_INFO;

typedef struct _PROTOCOL_INFOW PROTOCOL_INFOW;

typedef struct _SERVICE_ADDRESS * PSERVICE_ADDRESS;

typedef struct _SERVICE_ADDRESSES * PSERVICE_ADDRESSES;

typedef struct _SERVICE_ASYNC_INFO * PSERVICE_ASYNC_INFO;

typedef struct _SERVICE_INFOA * PSERVICE_INFOA;

typedef PSERVICE_INFOA PSERVICE_INFO;

typedef struct _SERVICE_INFOW * PSERVICE_INFOW;

typedef struct _SERVICE_TYPE_INFO * PSERVICE_TYPE_INFO;

typedef struct _SERVICE_TYPE_INFO_ABSA * PSERVICE_TYPE_INFO_ABSA;

typedef PSERVICE_TYPE_INFO_ABSA PSERVICE_TYPE_INFO_ABS;

typedef struct _SERVICE_TYPE_INFO_ABSW * PSERVICE_TYPE_INFO_ABSW;

typedef struct _SERVICE_TYPE_VALUE * PSERVICE_TYPE_VALUE;

typedef struct _SERVICE_TYPE_VALUE_ABSA * PSERVICE_TYPE_VALUE_ABSA;

typedef PSERVICE_TYPE_VALUE_ABSA PSERVICE_TYPE_VALUE_ABS;

typedef struct _SERVICE_TYPE_VALUE_ABSW * PSERVICE_TYPE_VALUE_ABSW;

typedef struct _SERVICE_ADDRESSES SERVICE_ADDRESSES;

typedef struct _SERVICE_ASYNC_INFO SERVICE_ASYNC_INFO;

typedef SERVICE_INFOA SERVICE_INFO;

typedef struct _SERVICE_TYPE_INFO SERVICE_TYPE_INFO;

typedef struct _SERVICE_TYPE_INFO_ABSA SERVICE_TYPE_INFO_ABSA;

typedef SERVICE_TYPE_INFO_ABSA SERVICE_TYPE_INFO_ABS;

typedef struct _SERVICE_TYPE_INFO_ABSW SERVICE_TYPE_INFO_ABSW;

typedef SERVICE_TYPE_VALUE_ABSA SERVICE_TYPE_VALUE_ABS;

#define CLOCK_NETWORK_DERIVED 2

#define CLOCK_PRECISION 4

#define fNDIS_GUID_ALLOW_READ 32

#define fNDIS_GUID_ALLOW_WRITE 64

#define fNDIS_GUID_ANSI_STRING 4

#define fNDIS_GUID_ARRAY 16

#define fNDIS_GUID_METHOD 128

#define fNDIS_GUID_NDIS_RESERVED 256

#define fNDIS_GUID_SUPPORT_COMMON_HEADER 512

#define fNDIS_GUID_TO_OID 1

#define fNDIS_GUID_TO_STATUS 2

#define fNDIS_GUID_UNICODE_STRING 8

#define IOCTL_NDIS_ADD_TDI_DEVICE 1507348

#define IOCTL_NDIS_DO_PNP_OPERATION 1507336

#define IOCTL_NDIS_ENUMERATE_INTERFACES 1507344

#define IOCTL_NDIS_GET_LOG_DATA 1507358

#define IOCTL_NDIS_GET_VERSION 1507360

#define IOCTL_NDIS_QUERY_ALL_STATS 1507334

#define IOCTL_NDIS_QUERY_GLOBAL_STATS 1507330

#define IOCTL_NDIS_QUERY_SELECTED_STATS 1507342

#define IOCTL_NDIS_RESERVED1 1507364

#define IOCTL_NDIS_RESERVED10 1507400

#define IOCTL_NDIS_RESERVED11 1507404

#define IOCTL_NDIS_RESERVED12 1507408

#define IOCTL_NDIS_RESERVED13 1507412

#define IOCTL_NDIS_RESERVED14 1507416

#define IOCTL_NDIS_RESERVED15 1507420

#define IOCTL_NDIS_RESERVED16 1507424

#define IOCTL_NDIS_RESERVED17 1507428

#define IOCTL_NDIS_RESERVED18 1507432

#define IOCTL_NDIS_RESERVED19 1507436

#define IOCTL_NDIS_RESERVED2 1507368

#define IOCTL_NDIS_RESERVED20 1507440

#define IOCTL_NDIS_RESERVED21 1507444

#define IOCTL_NDIS_RESERVED22 1507448

#define IOCTL_NDIS_RESERVED3 1507372

#define IOCTL_NDIS_RESERVED4 1507376

#define IOCTL_NDIS_RESERVED5 1507380

#define IOCTL_NDIS_RESERVED6 1540152

#define IOCTL_NDIS_RESERVED7 1507390

#define IOCTL_NDIS_RESERVED8 1507392

#define IOCTL_NDIS_RESERVED9 1507396

#define NDIS_802_11_AI_REQFI_CAPABILITIES 1

#define NDIS_802_11_AI_REQFI_CURRENTAPADDRESS 4

#define NDIS_802_11_AI_REQFI_LISTENINTERVAL 2

#define NDIS_802_11_AI_RESFI_ASSOCIATIONID 4

#define NDIS_802_11_AI_RESFI_CAPABILITIES 1

#define NDIS_802_11_AI_RESFI_STATUSCODE 2

#define NDIS_802_11_AUTH_REQUEST_AUTH_FIELDS 15

#define NDIS_802_11_AUTH_REQUEST_GROUP_ERROR 14

#define NDIS_802_11_AUTH_REQUEST_KEYUPDATE 2

#define NDIS_802_11_AUTH_REQUEST_PAIRWISE_ERROR 6

#define NDIS_802_11_AUTH_REQUEST_REAUTH 1

#define NDIS_802_11_LENGTH_RATES 8

#define NDIS_802_11_LENGTH_RATES_EX 16

#define NDIS_802_11_LENGTH_SSID 32

#define NDIS_802_11_PMKID_CANDIDATE_PREAUTH_ENABLED 1

#define NDIS_802_3_MAC_OPTION_PRIORITY 1

#define NDIS_CO_MAC_OPTION_DYNAMIC_LINK_SPEED 1

#define NDIS_DEVICE_WAKE_ON_MAGIC_PACKET_ENABLE 4

#define NDIS_DEVICE_WAKE_ON_PATTERN_MATCH_ENABLE 2

#define NDIS_DEVICE_WAKE_UP_ENABLE 1

#define NDIS_ETH_TYPE_802_1Q 33024

#define NDIS_ETH_TYPE_802_1X 34958

#define NDIS_ETH_TYPE_ARP 2054

#define NDIS_ETH_TYPE_IPV4 2048

#define NDIS_ETH_TYPE_IPV6 34525

#define NDIS_ETH_TYPE_SLOW_PROTOCOL 34825

#define NDIS_MAC_OPTION_8021P_PRIORITY 64

#define NDIS_MAC_OPTION_8021Q_VLAN 512

#define NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA 1

#define NDIS_MAC_OPTION_EOTX_INDICATION 32

#define NDIS_MAC_OPTION_FULL_DUPLEX 16

#define NDIS_MAC_OPTION_NO_LOOPBACK 8

#define NDIS_MAC_OPTION_RECEIVE_AT_DPC 256

#define NDIS_MAC_OPTION_RECEIVE_SERIALIZED 2

#define NDIS_MAC_OPTION_RESERVED 2147483648

#define NDIS_MAC_OPTION_SUPPORTS_MAC_ADDRESS_OVERWRITE 128

#define NDIS_MAC_OPTION_TRANSFERS_NOT_PEND 4

#define NDIS_MEDIA_CAP_RECEIVE 2

#define NDIS_MEDIA_CAP_TRANSMIT 1

#define NDIS_OBJECT_REVISION_1 1

#define NDIS_OBJECT_TYPE_BIND_PARAMETERS 134

#define NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_CHARACTERISTICS 147

#define NDIS_OBJECT_TYPE_CLIENT_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS 142

#define NDIS_OBJECT_TYPE_CO_CALL_MANAGER_OPTIONAL_HANDLERS 165

#define NDIS_OBJECT_TYPE_CO_CLIENT_OPTIONAL_HANDLERS 166

#define NDIS_OBJECT_TYPE_CO_MINIPORT_CHARACTERISTICS 145

#define NDIS_OBJECT_TYPE_CO_PROTOCOL_CHARACTERISTICS 144

#define NDIS_OBJECT_TYPE_CONFIGURATION_OBJECT 169

#define NDIS_OBJECT_TYPE_DEFAULT 128

#define NDIS_OBJECT_TYPE_DEVICE_OBJECT_ATTRIBUTES 133

#define NDIS_OBJECT_TYPE_DRIVER_WRAPPER_OBJECT 170

#define NDIS_OBJECT_TYPE_FILTER_ATTACH_PARAMETERS 153

#define NDIS_OBJECT_TYPE_FILTER_ATTRIBUTES 141

#define NDIS_OBJECT_TYPE_FILTER_DRIVER_CHARACTERISTICS 139

#define NDIS_OBJECT_TYPE_FILTER_PARTIAL_CHARACTERISTICS 140

#define NDIS_OBJECT_TYPE_FILTER_PAUSE_PARAMETERS 154

#define NDIS_OBJECT_TYPE_FILTER_RESTART_PARAMETERS 155

#define NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_GENERAL_ATTRIBUTES 159

#define NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_NATIVE_802_11_ATTRIBUTES 161

#define NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_OFFLOAD_ATTRIBUTES 160

#define NDIS_OBJECT_TYPE_MINIPORT_ADAPTER_REGISTRATION_ATTRIBUTES 158

#define NDIS_OBJECT_TYPE_MINIPORT_ADD_DEVICE_REGISTRATION_ATTRIBUTES 164

#define NDIS_OBJECT_TYPE_MINIPORT_DRIVER_CHARACTERISTICS 138

#define NDIS_OBJECT_TYPE_MINIPORT_INIT_PARAMETERS 129

#define NDIS_OBJECT_TYPE_MINIPORT_INTERRUPT 132

#define NDIS_OBJECT_TYPE_MINIPORT_PNP_CHARACTERISTICS 146

#define NDIS_OBJECT_TYPE_NSI_COMPARTMENT_RW_STRUCT 173

#define NDIS_OBJECT_TYPE_NSI_INTERFACE_PERSIST_RW_STRUCT 174

#define NDIS_OBJECT_TYPE_NSI_NETWORK_RW_STRUCT 172

#define NDIS_OBJECT_TYPE_OFFLOAD 167

#define NDIS_OBJECT_TYPE_OFFLOAD_ENCAPSULATION 168

#define NDIS_OBJECT_TYPE_OID_REQUEST 150

#define NDIS_OBJECT_TYPE_OPEN_PARAMETERS 135

#define NDIS_OBJECT_TYPE_PORT_CHARACTERISTICS 156

#define NDIS_OBJECT_TYPE_PORT_STATE 157

#define NDIS_OBJECT_TYPE_PROTOCOL_DRIVER_CHARACTERISTICS 149

#define NDIS_OBJECT_TYPE_PROTOCOL_RESTART_PARAMETERS 163

#define NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_CHARACTERISTICS 148

#define NDIS_OBJECT_TYPE_PROVIDER_CHIMNEY_OFFLOAD_GENERIC_CHARACTERISTICS 143

#define NDIS_OBJECT_TYPE_REQUEST_EX 150

#define NDIS_OBJECT_TYPE_RESTART_GENERAL_ATTRIBUTES 162

#define NDIS_OBJECT_TYPE_RSS_CAPABILITIES 136

#define NDIS_OBJECT_TYPE_RSS_PARAMETERS 137

#define NDIS_OBJECT_TYPE_SG_DMA_DESCRIPTION 131

#define NDIS_OBJECT_TYPE_STATUS_INDICATION 152

#define NDIS_OBJECT_TYPE_TIMER_CHARACTERISTICS 151

#define NDIS_PACKET_TYPE_ALL_FUNCTIONAL 8192

#define NDIS_PACKET_TYPE_ALL_LOCAL 128

#define NDIS_PACKET_TYPE_ALL_MULTICAST 4

#define NDIS_PACKET_TYPE_BROADCAST 8

#define NDIS_PACKET_TYPE_DIRECTED 1

#define NDIS_PACKET_TYPE_FUNCTIONAL 16384

#define NDIS_PACKET_TYPE_GROUP 4096

#define NDIS_PACKET_TYPE_MAC_FRAME 32768

#define NDIS_PACKET_TYPE_MULTICAST 2

#define NDIS_PACKET_TYPE_NO_LOCAL 65536

#define NDIS_PACKET_TYPE_PROMISCUOUS 32

#define NDIS_PACKET_TYPE_SMT 64

#define NDIS_PACKET_TYPE_SOURCE_ROUTING 16

#define NDIS_PNP_WAKE_UP_LINK_CHANGE 4

#define NDIS_PNP_WAKE_UP_MAGIC_PACKET 1

#define NDIS_PNP_WAKE_UP_PATTERN_MATCH 2

#define NDIS_PROT_OPTION_ESTIMATED_LENGTH 1

#define NDIS_PROT_OPTION_NO_LOOPBACK 2

#define NDIS_PROT_OPTION_NO_RSVD_ON_RCVPKT 4

#define NDIS_PROT_OPTION_SEND_RESTRICTED 8

#define NDIS_PROTOCOL_ID_DEFAULT 0

#define NDIS_PROTOCOL_ID_IPX 6

#define NDIS_PROTOCOL_ID_MASK 15

#define NDIS_PROTOCOL_ID_MAX 15

#define NDIS_PROTOCOL_ID_NBF 7

#define NDIS_PROTOCOL_ID_TCP_IP 2

#define NDIS_RING_AUTO_REMOVAL_ERROR 1024

#define NDIS_RING_COUNTER_OVERFLOW 256

#define NDIS_RING_HARD_ERROR 16384

#define NDIS_RING_LOBE_WIRE_FAULT 2048

#define NDIS_RING_REMOVE_RECEIVED 512

#define NDIS_RING_RING_RECOVERY 64

#define NDIS_RING_SIGNAL_LOSS 32768

#define NDIS_RING_SINGLE_STATION 128

#define NDIS_RING_SOFT_ERROR 8192

#define NDIS_RING_TRANSMIT_BEACON 4096

#define NDIS_SUPPORT_NDIS61 0

#define NDIS_SUPPORT_NDIS620 0

#define OFFLOAD_INBOUND_SA 1

#define OFFLOAD_MAX_SAS 3

#define OFFLOAD_OUTBOUND_SA 2

#define OID_1394_LOCAL_NODE_INFO 201392385

#define OID_1394_VC_INFO 201392386

#define OID_802_11_ADD_KEY 218169629

#define OID_802_11_ADD_WEP 218169619

#define OID_802_11_ASSOCIATION_INFORMATION 218169631

#define OID_802_11_AUTHENTICATION_MODE 218169624

#define OID_802_11_BSSID 218169601

#define OID_802_11_BSSID_LIST 218169879

#define OID_802_11_BSSID_LIST_SCAN 218169626

#define OID_802_11_CAPABILITY 218169634

#define OID_802_11_CONFIGURATION 218169873

#define OID_802_11_DESIRED_RATES 218169872

#define OID_802_11_DISASSOCIATE 218169621

#define OID_802_11_ENCRYPTION_STATUS 218169627

#define OID_802_11_FRAGMENTATION_THRESHOLD 218169865

#define OID_802_11_INFRASTRUCTURE_MODE 218169608

#define OID_802_11_MEDIA_STREAM_MODE 218169633

#define OID_802_11_NETWORK_TYPE_IN_USE 218169860

#define OID_802_11_NETWORK_TYPES_SUPPORTED 218169859

#define OID_802_11_NON_BCAST_SSID_LIST 218169636

#define OID_802_11_NUMBER_OF_ANTENNAS 218169867

#define OID_802_11_PMKID 218169635

#define OID_802_11_POWER_MODE 218169878

#define OID_802_11_PRIVACY_FILTER 218169625

#define OID_802_11_RADIO_STATUS 218169637

#define OID_802_11_RELOAD_DEFAULTS 218169628

#define OID_802_11_REMOVE_KEY 218169630

#define OID_802_11_REMOVE_WEP 218169620

#define OID_802_11_RSSI 218169862

#define OID_802_11_RSSI_TRIGGER 218169863

#define OID_802_11_RTS_THRESHOLD 218169866

#define OID_802_11_RX_ANTENNA_SELECTED 218169868

#define OID_802_11_SSID 218169602

#define OID_802_11_STATISTICS 218235410

#define OID_802_11_SUPPORTED_RATES 218169870

#define OID_802_11_TEST 218169632

#define OID_802_11_TX_ANTENNA_SELECTED 218169869

#define OID_802_11_TX_POWER_LEVEL 218169861

#define OID_802_11_WEP_STATUS 218169627

#define OID_802_3_CURRENT_ADDRESS 16843010

#define OID_802_3_MAC_OPTIONS 16843013

#define OID_802_3_MAXIMUM_LIST_SIZE 16843012

#define OID_802_3_MULTICAST_LIST 16843011

#define OID_802_3_PERMANENT_ADDRESS 16843009

#define OID_802_3_RCV_ERROR_ALIGNMENT 16908545

#define OID_802_3_RCV_OVERRUN 16908803

#define OID_802_3_XMIT_DEFERRED 16908801

#define OID_802_3_XMIT_HEARTBEAT_FAILURE 16908805

#define OID_802_3_XMIT_LATE_COLLISIONS 16908807

#define OID_802_3_XMIT_MAX_COLLISIONS 16908802

#define OID_802_3_XMIT_MORE_COLLISIONS 16908547

#define OID_802_3_XMIT_ONE_COLLISION 16908546

#define OID_802_3_XMIT_TIMES_CRS_LOST 16908806

#define OID_802_3_XMIT_UNDERRUN 16908804

#define OID_802_5_ABORT_DELIMETERS 33686019

#define OID_802_5_AC_ERRORS 33686018

#define OID_802_5_BURST_ERRORS 33686017

#define OID_802_5_CURRENT_ADDRESS 33620226

#define OID_802_5_CURRENT_FUNCTIONAL 33620227

#define OID_802_5_CURRENT_GROUP 33620228

#define OID_802_5_CURRENT_RING_STATE 33620231

#define OID_802_5_CURRENT_RING_STATUS 33620230

#define OID_802_5_FRAME_COPIED_ERRORS 33686020

#define OID_802_5_FREQUENCY_ERRORS 33686021

#define OID_802_5_INTERNAL_ERRORS 33686023

#define OID_802_5_LAST_OPEN_STATUS 33620229

#define OID_802_5_LINE_ERRORS 33685761

#define OID_802_5_LOST_FRAMES 33685762

#define OID_802_5_PERMANENT_ADDRESS 33620225

#define OID_802_5_TOKEN_ERRORS 33686022

#define OID_ARCNET_CURRENT_ADDRESS 100729090

#define OID_ARCNET_PERMANENT_ADDRESS 100729089

#define OID_ARCNET_RECONFIGURATIONS 100794881

#define OID_ATM_ACQUIRE_ACCESS_NET_RESOURCES 134283779

#define OID_ATM_ALIGNMENT_REQUIRED 134283784

#define OID_ATM_ASSIGNED_VPI 134283778

#define OID_ATM_CALL_ALERTING 134283788

#define OID_ATM_CALL_NOTIFY 134283790

#define OID_ATM_CALL_PROCEEDING 134283787

#define OID_ATM_CELLS_HEC_ERROR 134349314

#define OID_ATM_DIGITAL_BROADCAST_VPIVCI 134283782

#define OID_ATM_GET_NEAREST_FLOW 134283783

#define OID_ATM_HW_CURRENT_ADDRESS 134283524

#define OID_ATM_ILMI_VPIVCI 134283781

#define OID_ATM_LECS_ADDRESS 134283785

#define OID_ATM_MAX_AAL0_PACKET_SIZE 134283528

#define OID_ATM_MAX_AAL1_PACKET_SIZE 134283529

#define OID_ATM_MAX_AAL34_PACKET_SIZE 134283530

#define OID_ATM_MAX_AAL5_PACKET_SIZE 134283531

#define OID_ATM_MAX_ACTIVE_VCI_BITS 134283526

#define OID_ATM_MAX_ACTIVE_VCS 134283525

#define OID_ATM_MAX_ACTIVE_VPI_BITS 134283527

#define OID_ATM_MY_IP_NM_ADDRESS 134283791

#define OID_ATM_PARTY_ALERTING 134283789

#define OID_ATM_RCV_CELLS_DROPPED 134349059

#define OID_ATM_RCV_CELLS_OK 134349057

#define OID_ATM_RCV_INVALID_VPI_VCI 134349313

#define OID_ATM_RCV_REASSEMBLY_ERROR 134349315

#define OID_ATM_RELEASE_ACCESS_NET_RESOURCES 134283780

#define OID_ATM_SERVICE_ADDRESS 134283786

#define OID_ATM_SIGNALING_VPIVCI 134283777

#define OID_ATM_SUPPORTED_AAL_TYPES 134283523

#define OID_ATM_SUPPORTED_SERVICE_CATEGORY 134283522

#define OID_ATM_SUPPORTED_VC_RATES 134283521

#define OID_ATM_XMIT_CELLS_OK 134349058

#define OID_CO_ADD_ADDRESS 4261412868

#define OID_CO_ADD_PVC 4261412865

#define OID_CO_ADDRESS_CHANGE 4261412871

#define OID_CO_AF_CLOSE 4261412874

#define OID_CO_DELETE_ADDRESS 4261412869

#define OID_CO_DELETE_PVC 4261412866

#define OID_CO_GET_ADDRESSES 4261412870

#define OID_CO_GET_CALL_INFORMATION 4261412867

#define OID_CO_SIGNALING_DISABLED 4261412873

#define OID_CO_SIGNALING_ENABLED 4261412872

#define OID_CO_TAPI_ADDRESS_CAPS 4261416963

#define OID_CO_TAPI_CM_CAPS 4261416961

#define OID_CO_TAPI_DONT_REPORT_DIGITS 4261416969

#define OID_CO_TAPI_GET_CALL_DIAGNOSTICS 4261416967

#define OID_CO_TAPI_LINE_CAPS 4261416962

#define OID_CO_TAPI_REPORT_DIGITS 4261416968

#define OID_CO_TAPI_TRANSLATE_NDIS_CALLPARAMS 4261416965

#define OID_CO_TAPI_TRANSLATE_TAPI_CALLPARAMS 4261416964

#define OID_CO_TAPI_TRANSLATE_TAPI_SAP 4261416966

#define OID_FDDI_ATTACHMENT_TYPE 50462977

#define OID_FDDI_DOWNSTREAM_NODE_LONG 50462979

#define OID_FDDI_FRAME_ERRORS 50462980

#define OID_FDDI_FRAMES_LOST 50462981

#define OID_FDDI_IF_ADMIN_STATUS 50528894

#define OID_FDDI_IF_DESCR 50528889

#define OID_FDDI_IF_IN_DISCARDS 50528900

#define OID_FDDI_IF_IN_ERRORS 50528901

#define OID_FDDI_IF_IN_NUCAST_PKTS 50528899

#define OID_FDDI_IF_IN_OCTETS 50528897

#define OID_FDDI_IF_IN_UCAST_PKTS 50528898

#define OID_FDDI_IF_IN_UNKNOWN_PROTOS 50528902

#define OID_FDDI_IF_LAST_CHANGE 50528896

#define OID_FDDI_IF_MTU 50528891

#define OID_FDDI_IF_OPER_STATUS 50528895

#define OID_FDDI_IF_OUT_DISCARDS 50528906

#define OID_FDDI_IF_OUT_ERRORS 50528907

#define OID_FDDI_IF_OUT_NUCAST_PKTS 50528905

#define OID_FDDI_IF_OUT_OCTETS 50528903

#define OID_FDDI_IF_OUT_QLEN 50528908

#define OID_FDDI_IF_OUT_UCAST_PKTS 50528904

#define OID_FDDI_IF_PHYS_ADDRESS 50528893

#define OID_FDDI_IF_SPECIFIC 50528909

#define OID_FDDI_IF_SPEED 50528892

#define OID_FDDI_IF_TYPE 50528890

#define OID_FDDI_LCONNECTION_STATE 50462985

#define OID_FDDI_LCT_FAILURES 50462983

#define OID_FDDI_LEM_REJECTS 50462984

#define OID_FDDI_LONG_CURRENT_ADDR 50397442

#define OID_FDDI_LONG_MAX_LIST_SIZE 50397444

#define OID_FDDI_LONG_MULTICAST_LIST 50397443

#define OID_FDDI_LONG_PERMANENT_ADDR 50397441

#define OID_FDDI_MAC_AVAILABLE_PATHS 50528803

#define OID_FDDI_MAC_BRIDGE_FUNCTIONS 50528800

#define OID_FDDI_MAC_COPIED_CT 50528828

#define OID_FDDI_MAC_CURRENT_PATH 50528804

#define OID_FDDI_MAC_DA_FLAG 50528842

#define OID_FDDI_MAC_DOWNSTREAM_NBR 50528806

#define OID_FDDI_MAC_DOWNSTREAM_PORT_TYPE 50528811

#define OID_FDDI_MAC_DUP_ADDRESS_TEST 50528809

#define OID_FDDI_MAC_ERROR_CT 50528831

#define OID_FDDI_MAC_FRAME_CT 50528827

#define OID_FDDI_MAC_FRAME_ERROR_FLAG 50528844

#define OID_FDDI_MAC_FRAME_ERROR_RATIO 50528838

#define OID_FDDI_MAC_FRAME_ERROR_THRESHOLD 50528837

#define OID_FDDI_MAC_FRAME_STATUS_FUNCTIONS 50528799

#define OID_FDDI_MAC_HARDWARE_PRESENT 50528847

#define OID_FDDI_MAC_INDEX 50528812

#define OID_FDDI_MAC_LATE_CT 50528835

#define OID_FDDI_MAC_LONG_GRP_ADDRESS 50528814

#define OID_FDDI_MAC_LOST_CT 50528832

#define OID_FDDI_MAC_MA_UNITDATA_AVAILABLE 50528846

#define OID_FDDI_MAC_MA_UNITDATA_ENABLE 50528848

#define OID_FDDI_MAC_NOT_COPIED_CT 50528834

#define OID_FDDI_MAC_NOT_COPIED_FLAG 50528845

#define OID_FDDI_MAC_NOT_COPIED_RATIO 50528840

#define OID_FDDI_MAC_NOT_COPIED_THRESHOLD 50528839

#define OID_FDDI_MAC_OLD_DOWNSTREAM_NBR 50528808

#define OID_FDDI_MAC_OLD_UPSTREAM_NBR 50528807

#define OID_FDDI_MAC_REQUESTED_PATHS 50528810

#define OID_FDDI_MAC_RING_OP_CT 50528836

#define OID_FDDI_MAC_RMT_STATE 50528841

#define OID_FDDI_MAC_SHORT_GRP_ADDRESS 50528815

#define OID_FDDI_MAC_SMT_ADDRESS 50528813

#define OID_FDDI_MAC_T_MAX 50528818

#define OID_FDDI_MAC_T_MAX_CAPABILITY 50528801

#define OID_FDDI_MAC_T_NEG 50528817

#define OID_FDDI_MAC_T_PRI0 50528820

#define OID_FDDI_MAC_T_PRI1 50528821

#define OID_FDDI_MAC_T_PRI2 50528822

#define OID_FDDI_MAC_T_PRI3 50528823

#define OID_FDDI_MAC_T_PRI4 50528824

#define OID_FDDI_MAC_T_PRI5 50528825

#define OID_FDDI_MAC_T_PRI6 50528826

#define OID_FDDI_MAC_T_REQ 50528816

#define OID_FDDI_MAC_TOKEN_CT 50528830

#define OID_FDDI_MAC_TRANSMIT_CT 50528829

#define OID_FDDI_MAC_TVX_CAPABILITY 50528802

#define OID_FDDI_MAC_TVX_EXPIRED_CT 50528833

#define OID_FDDI_MAC_TVX_VALUE 50528819

#define OID_FDDI_MAC_UNDA_FLAG 50528843

#define OID_FDDI_MAC_UPSTREAM_NBR 50528805

#define OID_FDDI_PATH_CONFIGURATION 50528854

#define OID_FDDI_PATH_INDEX 50528849

#define OID_FDDI_PATH_MAX_T_REQ 50528859

#define OID_FDDI_PATH_RING_LATENCY 50528850

#define OID_FDDI_PATH_SBA_AVAILABLE 50528856

#define OID_FDDI_PATH_SBA_OVERHEAD 50528853

#define OID_FDDI_PATH_SBA_PAYLOAD 50528852

#define OID_FDDI_PATH_T_MAX_LOWER_BOUND 50528858

#define OID_FDDI_PATH_T_R_MODE 50528855

#define OID_FDDI_PATH_TRACE_STATUS 50528851

#define OID_FDDI_PATH_TVX_LOWER_BOUND 50528857

#define OID_FDDI_PORT_ACTION 50528888

#define OID_FDDI_PORT_AVAILABLE_PATHS 50528867

#define OID_FDDI_PORT_BS_FLAG 50528873

#define OID_FDDI_PORT_CONNECTION_CAPABILITIES 50528870

#define OID_FDDI_PORT_CONNECTION_POLICIES 50528862

#define OID_FDDI_PORT_CONNNECT_STATE 50528882

#define OID_FDDI_PORT_CURRENT_PATH 50528864

#define OID_FDDI_PORT_EB_ERROR_CT 50528875

#define OID_FDDI_PORT_HARDWARE_PRESENT 50528886

#define OID_FDDI_PORT_INDEX 50528871

#define OID_FDDI_PORT_LCT_FAIL_CT 50528876

#define OID_FDDI_PORT_LEM_CT 50528879

#define OID_FDDI_PORT_LEM_REJECT_CT 50528878

#define OID_FDDI_PORT_LER_ALARM 50528881

#define OID_FDDI_PORT_LER_CUTOFF 50528880

#define OID_FDDI_PORT_LER_ESTIMATE 50528877

#define OID_FDDI_PORT_LER_FLAG 50528885

#define OID_FDDI_PORT_MAC_INDICATED 50528863

#define OID_FDDI_PORT_MAC_LOOP_TIME 50528868

#define OID_FDDI_PORT_MAC_PLACEMENT 50528866

#define OID_FDDI_PORT_MAINT_LS 50528872

#define OID_FDDI_PORT_MY_TYPE 50528860

#define OID_FDDI_PORT_NEIGHBOR_TYPE 50528861

#define OID_FDDI_PORT_PC_LS 50528874

#define OID_FDDI_PORT_PC_WITHHOLD 50528884

#define OID_FDDI_PORT_PCM_STATE 50528883

#define OID_FDDI_PORT_PMD_CLASS 50528869

#define OID_FDDI_PORT_REQUESTED_PATHS 50528865

#define OID_FDDI_RING_MGT_STATE 50462982

#define OID_FDDI_SHORT_CURRENT_ADDR 50397446

#define OID_FDDI_SHORT_MAX_LIST_SIZE 50397448

#define OID_FDDI_SHORT_MULTICAST_LIST 50397447

#define OID_FDDI_SHORT_PERMANENT_ADDR 50397445

#define OID_FDDI_SMT_AVAILABLE_PATHS 50528779

#define OID_FDDI_SMT_BYPASS_PRESENT 50528788

#define OID_FDDI_SMT_CF_STATE 50528790

#define OID_FDDI_SMT_CONFIG_CAPABILITIES 50528780

#define OID_FDDI_SMT_CONFIG_POLICY 50528781

#define OID_FDDI_SMT_CONNECTION_POLICY 50528782

#define OID_FDDI_SMT_ECM_STATE 50528789

#define OID_FDDI_SMT_HI_VERSION_ID 50528771

#define OID_FDDI_SMT_HOLD_STATE 50528791

#define OID_FDDI_SMT_LAST_SET_STATION_ID 50528798

#define OID_FDDI_SMT_LO_VERSION_ID 50528772

#define OID_FDDI_SMT_MAC_CT 50528776

#define OID_FDDI_SMT_MAC_INDEXES 50528787

#define OID_FDDI_SMT_MANUFACTURER_DATA 50528773

#define OID_FDDI_SMT_MASTER_CT 50528778

#define OID_FDDI_SMT_MIB_VERSION_ID 50528775

#define OID_FDDI_SMT_MSG_TIME_STAMP 50528795

#define OID_FDDI_SMT_NON_MASTER_CT 50528777

#define OID_FDDI_SMT_OP_VERSION_ID 50528770

#define OID_FDDI_SMT_PEER_WRAP_FLAG 50528794

#define OID_FDDI_SMT_PORT_INDEXES 50528786

#define OID_FDDI_SMT_REMOTE_DISCONNECT_FLAG 50528792

#define OID_FDDI_SMT_SET_COUNT 50528797

#define OID_FDDI_SMT_STAT_RPT_POLICY 50528784

#define OID_FDDI_SMT_STATION_ACTION 50528887

#define OID_FDDI_SMT_STATION_ID 50528769

#define OID_FDDI_SMT_STATION_STATUS 50528793

#define OID_FDDI_SMT_T_NOTIFY 50528783

#define OID_FDDI_SMT_TRACE_MAX_EXPIRATION 50528785

#define OID_FDDI_SMT_TRANSITION_TIME_STAMP 50528796

#define OID_FDDI_SMT_USER_DATA 50528774

#define OID_FDDI_UPSTREAM_NODE_LONG 50462978

#define OID_FFP_ADAPTER_STATS 4227990033

#define OID_FFP_CONTROL 4227924498

#define OID_FFP_DATA 4227924500

#define OID_FFP_DRIVER_STATS 4227990032

#define OID_FFP_FLUSH 4227924497

#define OID_FFP_PARAMS 4227924499

#define OID_FFP_SUPPORT 4227924496

#define OID_GEN_BROADCAST_BYTES_RCV 131595

#define OID_GEN_BROADCAST_BYTES_XMIT 131589

#define OID_GEN_BROADCAST_FRAMES_RCV 131596

#define OID_GEN_BROADCAST_FRAMES_XMIT 131590

#define OID_GEN_CO_BYTES_RCV 131591

#define OID_GEN_CO_BYTES_XMIT 131585

#define OID_GEN_CO_BYTES_XMIT_OUTSTANDING 131617

#define OID_GEN_CO_DEVICE_PROFILE 131602

#define OID_GEN_CO_DRIVER_VERSION 65808

#define OID_GEN_CO_GET_NETCARD_TIME 131600

#define OID_GEN_CO_GET_TIME_CAPS 131599

#define OID_GEN_CO_HARDWARE_STATUS 65794

#define OID_GEN_CO_LINK_SPEED 65799

#define OID_GEN_CO_MAC_OPTIONS 65811

#define OID_GEN_CO_MEDIA_CONNECT_STATUS 65812

#define OID_GEN_CO_MEDIA_IN_USE 65796

#define OID_GEN_CO_MEDIA_SUPPORTED 65795

#define OID_GEN_CO_MINIMUM_LINK_SPEED 131360

#define OID_GEN_CO_NETCARD_LOAD 131601

#define OID_GEN_CO_PROTOCOL_OPTIONS 65810

#define OID_GEN_CO_RCV_CRC_ERROR 131597

#define OID_GEN_CO_RCV_PDUS_ERROR 131332

#define OID_GEN_CO_RCV_PDUS_NO_BUFFER 131333

#define OID_GEN_CO_RCV_PDUS_OK 131330

#define OID_GEN_CO_SUPPORTED_GUIDS 65815

#define OID_GEN_CO_SUPPORTED_LIST 65793

#define OID_GEN_CO_TRANSMIT_QUEUE_LENGTH 131598

#define OID_GEN_CO_VENDOR_DESCRIPTION 65805

#define OID_GEN_CO_VENDOR_DRIVER_VERSION 65814

#define OID_GEN_CO_VENDOR_ID 65804

#define OID_GEN_CO_XMIT_PDUS_ERROR 131331

#define OID_GEN_CO_XMIT_PDUS_OK 131329

#define OID_GEN_CURRENT_LOOKAHEAD 65807

#define OID_GEN_CURRENT_PACKET_FILTER 65806

#define OID_GEN_DEVICE_PROFILE 131602

#define OID_GEN_DIRECTED_BYTES_RCV 131591

#define OID_GEN_DIRECTED_BYTES_XMIT 131585

#define OID_GEN_DIRECTED_FRAMES_RCV 131592

#define OID_GEN_DIRECTED_FRAMES_XMIT 131586

#define OID_GEN_DRIVER_VERSION 65808

#define OID_GEN_FRIENDLY_NAME 131606

#define OID_GEN_GET_NETCARD_TIME 131600

#define OID_GEN_GET_TIME_CAPS 131599

#define OID_GEN_HARDWARE_STATUS 65794

#define OID_GEN_INIT_TIME_MS 131603

#define OID_GEN_LINK_SPEED 65799

#define OID_GEN_MAC_OPTIONS 65811

#define OID_GEN_MACHINE_NAME 66074

#define OID_GEN_MAXIMUM_FRAME_SIZE 65798

#define OID_GEN_MAXIMUM_LOOKAHEAD 65797

#define OID_GEN_MAXIMUM_SEND_PACKETS 65813

#define OID_GEN_MAXIMUM_TOTAL_SIZE 65809

#define OID_GEN_MEDIA_CAPABILITIES 66049

#define OID_GEN_MEDIA_CONNECT_STATUS 65812

#define OID_GEN_MEDIA_IN_USE 65796

#define OID_GEN_MEDIA_SENSE_COUNTS 131605

#define OID_GEN_MEDIA_SUPPORTED 65795

#define OID_GEN_MULTICAST_BYTES_RCV 131593

#define OID_GEN_MULTICAST_BYTES_XMIT 131587

#define OID_GEN_MULTICAST_FRAMES_RCV 131594

#define OID_GEN_MULTICAST_FRAMES_XMIT 131588

#define OID_GEN_NDIS_RESERVED_1 131607

#define OID_GEN_NDIS_RESERVED_2 131608

#define OID_GEN_NDIS_RESERVED_5 66060

#define OID_GEN_NETCARD_LOAD 131601

#define OID_GEN_NETWORK_LAYER_ADDRESSES 65816

#define OID_GEN_PHYSICAL_MEDIUM 66050

#define OID_GEN_PROTOCOL_OPTIONS 65810

#define OID_GEN_RCV_CRC_ERROR 131597

#define OID_GEN_RCV_ERROR 131332

#define OID_GEN_RCV_NO_BUFFER 131333

#define OID_GEN_RCV_OK 131330

#define OID_GEN_RECEIVE_BLOCK_SIZE 65803

#define OID_GEN_RECEIVE_BUFFER_SPACE 65801

#define OID_GEN_RESET_COUNTS 131604

#define OID_GEN_RNDIS_CONFIG_PARAMETER 66075

#define OID_GEN_SUPPORTED_GUIDS 65815

#define OID_GEN_SUPPORTED_LIST 65793

#define OID_GEN_TRANSMIT_BLOCK_SIZE 65802

#define OID_GEN_TRANSMIT_BUFFER_SPACE 65800

#define OID_GEN_TRANSMIT_QUEUE_LENGTH 131598

#define OID_GEN_TRANSPORT_HEADER_OFFSET 65817

#define OID_GEN_VENDOR_DESCRIPTION 65805

#define OID_GEN_VENDOR_DRIVER_VERSION 65814

#define OID_GEN_VENDOR_ID 65804

#define OID_GEN_VLAN_ID 66076

#define OID_GEN_XMIT_ERROR 131331

#define OID_GEN_XMIT_OK 131329

#define OID_IP4_OFFLOAD_STATS 4227924489

#define OID_IP6_OFFLOAD_STATS 4227924490

#define OID_IRDA_EXTRA_RCV_BOFS 167838208

#define OID_IRDA_LINK_SPEED 167837955

#define OID_IRDA_MAX_RECEIVE_WINDOW_SIZE 167838212

#define OID_IRDA_MAX_SEND_WINDOW_SIZE 167838213

#define OID_IRDA_MAX_UNICAST_LIST_SIZE 167838211

#define OID_IRDA_MEDIA_BUSY 167837956

#define OID_IRDA_RATE_SNIFF 167838209

#define OID_IRDA_RECEIVING 167837952

#define OID_IRDA_RESERVED1 167838218

#define OID_IRDA_RESERVED2 167838223

#define OID_IRDA_SUPPORTED_SPEEDS 167837954

#define OID_IRDA_TURNAROUND_TIME 167837953

#define OID_IRDA_UNICAST_LIST 167838210

#define OID_LTALK_COLLISIONS 84017666

#define OID_LTALK_CURRENT_NODE_ID 83951874

#define OID_LTALK_DEFERS 84017667

#define OID_LTALK_FCS_ERRORS 84017670

#define OID_LTALK_IN_BROADCASTS 84017409

#define OID_LTALK_IN_LENGTH_ERRORS 84017410

#define OID_LTALK_NO_DATA_ERRORS 84017668

#define OID_LTALK_OUT_NO_HANDLERS 84017665

#define OID_LTALK_RANDOM_CTS_ERRORS 84017669

#define OID_OFFLOAD_ENCAPSULATION 16843018

#define OID_PNP_ADD_WAKE_UP_PATTERN 4244701443

#define OID_PNP_CAPABILITIES 4244701440

#define OID_PNP_ENABLE_WAKE_UP 4244701446

#define OID_PNP_QUERY_POWER 4244701442

#define OID_PNP_REMOVE_WAKE_UP_PATTERN 4244701444

#define OID_PNP_SET_POWER 4244701441

#define OID_PNP_WAKE_UP_ERROR 4244767233

#define OID_PNP_WAKE_UP_OK 4244767232

#define OID_PNP_WAKE_UP_PATTERN_LIST 4244701445

#define OID_QOS_RESERVED1 4211147008

#define OID_QOS_RESERVED10 4211147017

#define OID_QOS_RESERVED11 4211147018

#define OID_QOS_RESERVED12 4211147019

#define OID_QOS_RESERVED13 4211147020

#define OID_QOS_RESERVED14 4211147021

#define OID_QOS_RESERVED15 4211147022

#define OID_QOS_RESERVED16 4211147023

#define OID_QOS_RESERVED17 4211147024

#define OID_QOS_RESERVED18 4211147025

#define OID_QOS_RESERVED19 4211147026

#define OID_QOS_RESERVED2 4211147009

#define OID_QOS_RESERVED20 4211147027

#define OID_QOS_RESERVED3 4211147010

#define OID_QOS_RESERVED4 4211147011

#define OID_QOS_RESERVED5 4211147012

#define OID_QOS_RESERVED6 4211147013

#define OID_QOS_RESERVED7 4211147014

#define OID_QOS_RESERVED8 4211147015

#define OID_QOS_RESERVED9 4211147016

#define OID_TAPI_ACCEPT 117637377

#define OID_TAPI_ANSWER 117637378

#define OID_TAPI_CLOSE 117637379

#define OID_TAPI_CLOSE_CALL 117637380

#define OID_TAPI_CONDITIONAL_MEDIA_DETECTION 117637381

#define OID_TAPI_CONFIG_DIALOG 117637382

#define OID_TAPI_DEV_SPECIFIC 117637383

#define OID_TAPI_DIAL 117637384

#define OID_TAPI_DROP 117637385

#define OID_TAPI_GATHER_DIGITS 117637411

#define OID_TAPI_GET_ADDRESS_CAPS 117637386

#define OID_TAPI_GET_ADDRESS_ID 117637387

#define OID_TAPI_GET_ADDRESS_STATUS 117637388

#define OID_TAPI_GET_CALL_ADDRESS_ID 117637389

#define OID_TAPI_GET_CALL_INFO 117637390

#define OID_TAPI_GET_CALL_STATUS 117637391

#define OID_TAPI_GET_DEV_CAPS 117637392

#define OID_TAPI_GET_DEV_CONFIG 117637393

#define OID_TAPI_GET_EXTENSION_ID 117637394

#define OID_TAPI_GET_ID 117637395

#define OID_TAPI_GET_LINE_DEV_STATUS 117637396

#define OID_TAPI_MAKE_CALL 117637397

#define OID_TAPI_MONITOR_DIGITS 117637412

#define OID_TAPI_NEGOTIATE_EXT_VERSION 117637398

#define OID_TAPI_OPEN 117637399

#define OID_TAPI_PROVIDER_INITIALIZE 117637400

#define OID_TAPI_PROVIDER_SHUTDOWN 117637401

#define OID_TAPI_SECURE_CALL 117637402

#define OID_TAPI_SELECT_EXT_VERSION 117637403

#define OID_TAPI_SEND_USER_USER_INFO 117637404

#define OID_TAPI_SET_APP_SPECIFIC 117637405

#define OID_TAPI_SET_CALL_PARAMS 117637406

#define OID_TAPI_SET_DEFAULT_MEDIA_DETECTION 117637407

#define OID_TAPI_SET_DEV_CONFIG 117637408

#define OID_TAPI_SET_MEDIA_MODE 117637409

#define OID_TAPI_SET_STATUS_MESSAGES 117637410

#define OID_TCP4_OFFLOAD_STATS 4227924487

#define OID_TCP6_OFFLOAD_STATS 4227924488

#define OID_TCP_CONNECTION_OFFLOAD_CURRENT_CONFIG 4227924494

#define OID_TCP_CONNECTION_OFFLOAD_HARDWARE_CAPABILITIES 4227924495

#define OID_TCP_CONNECTION_OFFLOAD_PARAMETERS 4228055553

#define OID_TCP_OFFLOAD_CURRENT_CONFIG 4227924491

#define OID_TCP_OFFLOAD_HARDWARE_CAPABILITIES 4227924493

#define OID_TCP_OFFLOAD_PARAMETERS 4227924492

#define OID_TCP_SAN_SUPPORT 4227924484

#define OID_TCP_TASK_IPSEC_ADD_SA 4227924482

#define OID_TCP_TASK_IPSEC_ADD_UDPESP_SA 4227924485

#define OID_TCP_TASK_IPSEC_DELETE_SA 4227924483

#define OID_TCP_TASK_IPSEC_DELETE_UDPESP_SA 4227924486

#define OID_TCP_TASK_OFFLOAD 4227924481

#define OID_WAN_CO_GET_COMP_INFO 67175040

#define OID_WAN_CO_GET_INFO 67174784

#define OID_WAN_CO_GET_LINK_INFO 67174786

#define OID_WAN_CO_GET_STATS_INFO 67175042

#define OID_WAN_CO_SET_COMP_INFO 67175041

#define OID_WAN_CO_SET_LINK_INFO 67174785

#define OID_WAN_CURRENT_ADDRESS 67174658

#define OID_WAN_GET_BRIDGE_INFO 67174922

#define OID_WAN_GET_COMP_INFO 67174924

#define OID_WAN_GET_INFO 67174663

#define OID_WAN_GET_LINK_INFO 67174665

#define OID_WAN_GET_STATS_INFO 67174926

#define OID_WAN_HEADER_FORMAT 67174662

#define OID_WAN_LINE_COUNT 67174666

#define OID_WAN_MEDIUM_SUBTYPE 67174661

#define OID_WAN_PERMANENT_ADDRESS 67174657

#define OID_WAN_PROTOCOL_CAPS 67174667

#define OID_WAN_PROTOCOL_TYPE 67174660

#define OID_WAN_QUALITY_OF_SERVICE 67174659

#define OID_WAN_SET_BRIDGE_INFO 67174923

#define OID_WAN_SET_COMP_INFO 67174925

#define OID_WAN_SET_LINK_INFO 67174664

#define READABLE_LOCAL_CLOCK 1

#define RECEIVE_TIME_INDICATION_CAPABLE 8

#define TIME_STAMP_CAPABLE 32

#define TIMED_SEND_CAPABLE 16

#define WAN_PROTOCOL_KEEPS_STATS 1

typedef struct _BSSID_INFO _BSSID_INFO, *P_BSSID_INFO;

typedef UCHAR NDIS_802_11_MAC_ADDRESS[6];

typedef UCHAR NDIS_802_11_PMKID_VALUE[16];

struct _BSSID_INFO {
    NDIS_802_11_MAC_ADDRESS BSSID;
    NDIS_802_11_PMKID_VALUE PMKID;
};

typedef struct _GEN_GET_NETCARD_TIME _GEN_GET_NETCARD_TIME, *P_GEN_GET_NETCARD_TIME;

struct _GEN_GET_NETCARD_TIME {
    ULONGLONG ReadTime;
};

typedef struct _GEN_GET_TIME_CAPS _GEN_GET_TIME_CAPS, *P_GEN_GET_TIME_CAPS;

struct _GEN_GET_TIME_CAPS {
    ULONG Flags;
    ULONG ClockPrecision;
};

typedef struct _NDIS_802_11_AI_REQFI _NDIS_802_11_AI_REQFI, *P_NDIS_802_11_AI_REQFI;

struct _NDIS_802_11_AI_REQFI {
    USHORT Capabilities;
    USHORT ListenInterval;
    NDIS_802_11_MAC_ADDRESS CurrentAPAddress;
};

typedef struct _NDIS_802_11_AI_RESFI _NDIS_802_11_AI_RESFI, *P_NDIS_802_11_AI_RESFI;

struct _NDIS_802_11_AI_RESFI {
    USHORT Capabilities;
    USHORT StatusCode;
    USHORT AssociationId;
};

typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION _NDIS_802_11_ASSOCIATION_INFORMATION, *P_NDIS_802_11_ASSOCIATION_INFORMATION;

typedef struct _NDIS_802_11_AI_REQFI NDIS_802_11_AI_REQFI;

typedef struct _NDIS_802_11_AI_RESFI NDIS_802_11_AI_RESFI;

struct _NDIS_802_11_ASSOCIATION_INFORMATION {
    ULONG Length;
    USHORT AvailableRequestFixedIEs;
    NDIS_802_11_AI_REQFI RequestFixedIEs;
    ULONG RequestIELength;
    ULONG OffsetRequestIEs;
    USHORT AvailableResponseFixedIEs;
    NDIS_802_11_AI_RESFI ResponseFixedIEs;
    ULONG ResponseIELength;
    ULONG OffsetResponseIEs;
};

typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION _NDIS_802_11_AUTHENTICATION_ENCRYPTION, *P_NDIS_802_11_AUTHENTICATION_ENCRYPTION;

typedef enum _NDIS_802_11_AUTHENTICATION_MODE {
    Ndis802_11AuthModeAutoSwitch=2,
    Ndis802_11AuthModeMax=8,
    Ndis802_11AuthModeOpen=0,
    Ndis802_11AuthModeShared=1,
    Ndis802_11AuthModeWPA=3,
    Ndis802_11AuthModeWPA2=6,
    Ndis802_11AuthModeWPA2PSK=7,
    Ndis802_11AuthModeWPANone=5,
    Ndis802_11AuthModeWPAPSK=4
} _NDIS_802_11_AUTHENTICATION_MODE;

typedef enum _NDIS_802_11_AUTHENTICATION_MODE NDIS_802_11_AUTHENTICATION_MODE;

typedef enum _NDIS_802_11_WEP_STATUS {
    Ndis802_11Encryption1Enabled=1,
    Ndis802_11Encryption1KeyAbsent=5,
    Ndis802_11Encryption2Enabled=8,
    Ndis802_11Encryption2KeyAbsent=9,
    Ndis802_11Encryption3Enabled=10,
    Ndis802_11Encryption3KeyAbsent=11,
    Ndis802_11EncryptionDisabled=3,
    Ndis802_11EncryptionNotSupported=7,
    Ndis802_11WEPDisabled=2,
    Ndis802_11WEPEnabled=0,
    Ndis802_11WEPKeyAbsent=4,
    Ndis802_11WEPNotSupported=6
} _NDIS_802_11_WEP_STATUS;

typedef enum _NDIS_802_11_WEP_STATUS NDIS_802_11_ENCRYPTION_STATUS;

struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION {
    NDIS_802_11_AUTHENTICATION_MODE AuthModeSupported;
    NDIS_802_11_ENCRYPTION_STATUS EncryptStatusSupported;
};

typedef struct _NDIS_802_11_AUTHENTICATION_EVENT _NDIS_802_11_AUTHENTICATION_EVENT, *P_NDIS_802_11_AUTHENTICATION_EVENT;

typedef struct _NDIS_802_11_STATUS_INDICATION _NDIS_802_11_STATUS_INDICATION, *P_NDIS_802_11_STATUS_INDICATION;

typedef struct _NDIS_802_11_STATUS_INDICATION NDIS_802_11_STATUS_INDICATION;

typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST _NDIS_802_11_AUTHENTICATION_REQUEST, *P_NDIS_802_11_AUTHENTICATION_REQUEST;

typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST NDIS_802_11_AUTHENTICATION_REQUEST;

typedef enum _NDIS_802_11_STATUS_TYPE {
    Ndis802_11StatusTypeMax=3,
    Ndis802_11StatusType_Authentication=0,
    Ndis802_11StatusType_MediaStreamMode=1,
    Ndis802_11StatusType_PMKID_CandidateList=2
} _NDIS_802_11_STATUS_TYPE;

typedef enum _NDIS_802_11_STATUS_TYPE NDIS_802_11_STATUS_TYPE;

struct _NDIS_802_11_AUTHENTICATION_REQUEST {
    ULONG Length;
    NDIS_802_11_MAC_ADDRESS Bssid;
    ULONG Flags;
};

struct _NDIS_802_11_STATUS_INDICATION {
    NDIS_802_11_STATUS_TYPE StatusType;
};

struct _NDIS_802_11_AUTHENTICATION_EVENT {
    NDIS_802_11_STATUS_INDICATION Status;
    NDIS_802_11_AUTHENTICATION_REQUEST Request[1];
};

typedef struct _NDIS_802_11_BSSID_LIST _NDIS_802_11_BSSID_LIST, *P_NDIS_802_11_BSSID_LIST;

typedef struct _NDIS_WLAN_BSSID _NDIS_WLAN_BSSID, *P_NDIS_WLAN_BSSID;

typedef struct _NDIS_WLAN_BSSID NDIS_WLAN_BSSID;

typedef struct _NDIS_802_11_SSID _NDIS_802_11_SSID, *P_NDIS_802_11_SSID;

typedef struct _NDIS_802_11_SSID NDIS_802_11_SSID;

typedef LONG NDIS_802_11_RSSI;

typedef enum _NDIS_802_11_NETWORK_TYPE {
    Ndis802_11Automode=4,
    Ndis802_11DS=1,
    Ndis802_11FH=0,
    Ndis802_11NetworkTypeMax=5,
    Ndis802_11OFDM24=3,
    Ndis802_11OFDM5=2
} _NDIS_802_11_NETWORK_TYPE;

typedef enum _NDIS_802_11_NETWORK_TYPE NDIS_802_11_NETWORK_TYPE;

typedef struct _NDIS_802_11_CONFIGURATION _NDIS_802_11_CONFIGURATION, *P_NDIS_802_11_CONFIGURATION;

typedef struct _NDIS_802_11_CONFIGURATION NDIS_802_11_CONFIGURATION;

typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE {
    Ndis802_11AutoUnknown=2,
    Ndis802_11IBSS=0,
    Ndis802_11Infrastructure=1,
    Ndis802_11InfrastructureMax=3
} _NDIS_802_11_NETWORK_INFRASTRUCTURE;

typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE NDIS_802_11_NETWORK_INFRASTRUCTURE;

typedef UCHAR NDIS_802_11_RATES[8];

typedef struct _NDIS_802_11_CONFIGURATION_FH _NDIS_802_11_CONFIGURATION_FH, *P_NDIS_802_11_CONFIGURATION_FH;

typedef struct _NDIS_802_11_CONFIGURATION_FH NDIS_802_11_CONFIGURATION_FH;

struct _NDIS_802_11_CONFIGURATION_FH {
    ULONG Length;
    ULONG HopPattern;
    ULONG HopSet;
    ULONG DwellTime;
};

struct _NDIS_802_11_CONFIGURATION {
    ULONG Length;
    ULONG BeaconPeriod;
    ULONG ATIMWindow;
    ULONG DSConfig;
    NDIS_802_11_CONFIGURATION_FH FHConfig;
};

struct _NDIS_802_11_SSID {
    ULONG SsidLength;
    UCHAR Ssid[32];
};

struct _NDIS_WLAN_BSSID {
    ULONG Length;
    NDIS_802_11_MAC_ADDRESS MacAddress;
    UCHAR Reserved[2];
    NDIS_802_11_SSID Ssid;
    ULONG Privacy;
    NDIS_802_11_RSSI Rssi;
    NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;
    NDIS_802_11_CONFIGURATION Configuration;
    NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;
    NDIS_802_11_RATES SupportedRates;
};

struct _NDIS_802_11_BSSID_LIST {
    ULONG NumberOfItems;
    NDIS_WLAN_BSSID Bssid[1];
};

typedef struct _NDIS_802_11_BSSID_LIST_EX _NDIS_802_11_BSSID_LIST_EX, *P_NDIS_802_11_BSSID_LIST_EX;

typedef struct _NDIS_WLAN_BSSID_EX _NDIS_WLAN_BSSID_EX, *P_NDIS_WLAN_BSSID_EX;

typedef struct _NDIS_WLAN_BSSID_EX NDIS_WLAN_BSSID_EX;

typedef UCHAR NDIS_802_11_RATES_EX[16];

struct _NDIS_WLAN_BSSID_EX {
    ULONG Length;
    NDIS_802_11_MAC_ADDRESS MacAddress;
    UCHAR Reserved[2];
    NDIS_802_11_SSID Ssid;
    ULONG Privacy;
    NDIS_802_11_RSSI Rssi;
    NDIS_802_11_NETWORK_TYPE NetworkTypeInUse;
    NDIS_802_11_CONFIGURATION Configuration;
    NDIS_802_11_NETWORK_INFRASTRUCTURE InfrastructureMode;
    NDIS_802_11_RATES_EX SupportedRates;
    ULONG IELength;
    UCHAR IEs[1];
};

struct _NDIS_802_11_BSSID_LIST_EX {
    ULONG NumberOfItems;
    NDIS_WLAN_BSSID_EX Bssid[1];
};

typedef struct _NDIS_802_11_CAPABILITY _NDIS_802_11_CAPABILITY, *P_NDIS_802_11_CAPABILITY;

typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION NDIS_802_11_AUTHENTICATION_ENCRYPTION;

struct _NDIS_802_11_CAPABILITY {
    ULONG Length;
    ULONG Version;
    ULONG NoOfPMKIDs;
    ULONG NoOfAuthEncryptPairsSupported;
    NDIS_802_11_AUTHENTICATION_ENCRYPTION AuthenticationEncryptionSupported[1];
};

typedef struct _NDIS_802_11_FIXED_IEs _NDIS_802_11_FIXED_IEs, *P_NDIS_802_11_FIXED_IEs;

struct _NDIS_802_11_FIXED_IEs {
    UCHAR Timestamp[8];
    USHORT BeaconInterval;
    USHORT Capabilities;
};

typedef struct _NDIS_802_11_KEY _NDIS_802_11_KEY, *P_NDIS_802_11_KEY;

typedef ULONGLONG NDIS_802_11_KEY_RSC;

struct _NDIS_802_11_KEY {
    ULONG Length;
    ULONG KeyIndex;
    ULONG KeyLength;
    NDIS_802_11_MAC_ADDRESS BSSID;
    NDIS_802_11_KEY_RSC KeyRSC;
    UCHAR KeyMaterial[1];
};

typedef enum _NDIS_802_11_MEDIA_STREAM_MODE {
    Ndis802_11MediaStreamOff=0,
    Ndis802_11MediaStreamOn=1
} _NDIS_802_11_MEDIA_STREAM_MODE;

typedef struct _NDIS_802_11_NETWORK_TYPE_LIST _NDIS_802_11_NETWORK_TYPE_LIST, *P_NDIS_802_11_NETWORK_TYPE_LIST;

struct _NDIS_802_11_NETWORK_TYPE_LIST {
    ULONG NumberOfItems;
    NDIS_802_11_NETWORK_TYPE NetworkType[1];
};

typedef struct _NDIS_802_11_NON_BCAST_SSID_LIST _NDIS_802_11_NON_BCAST_SSID_LIST, *P_NDIS_802_11_NON_BCAST_SSID_LIST;

struct _NDIS_802_11_NON_BCAST_SSID_LIST {
    ULONG NumberOfItems;
    NDIS_802_11_SSID Non_Bcast_Ssid[1];
};

typedef struct _NDIS_802_11_PMKID _NDIS_802_11_PMKID, *P_NDIS_802_11_PMKID;

typedef struct _BSSID_INFO BSSID_INFO;

struct _NDIS_802_11_PMKID {
    ULONG Length;
    ULONG BSSIDInfoCount;
    BSSID_INFO BSSIDInfo[1];
};

typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST _NDIS_802_11_PMKID_CANDIDATE_LIST, *P_NDIS_802_11_PMKID_CANDIDATE_LIST;

typedef struct _PMKID_CANDIDATE _PMKID_CANDIDATE, *P_PMKID_CANDIDATE;

typedef struct _PMKID_CANDIDATE PMKID_CANDIDATE;

struct _PMKID_CANDIDATE {
    NDIS_802_11_MAC_ADDRESS BSSID;
    ULONG Flags;
};

struct _NDIS_802_11_PMKID_CANDIDATE_LIST {
    ULONG Version;
    ULONG NumCandidates;
    PMKID_CANDIDATE CandidateList[1];
};

typedef enum _NDIS_802_11_POWER_MODE {
    Ndis802_11PowerModeCAM=0,
    Ndis802_11PowerModeFast_PSP=2,
    Ndis802_11PowerModeMAX_PSP=1,
    Ndis802_11PowerModeMax=3
} _NDIS_802_11_POWER_MODE;

typedef enum _NDIS_802_11_PRIVACY_FILTER {
    Ndis802_11PrivFilter8021xWEP=1,
    Ndis802_11PrivFilterAcceptAll=0
} _NDIS_802_11_PRIVACY_FILTER;

typedef enum _NDIS_802_11_RADIO_STATUS {
    Ndis802_11RadioStatusHardwareOff=1,
    Ndis802_11RadioStatusHardwareSoftwareOff=3,
    Ndis802_11RadioStatusMax=4,
    Ndis802_11RadioStatusOn=0,
    Ndis802_11RadioStatusSoftwareOff=2
} _NDIS_802_11_RADIO_STATUS;

typedef enum _NDIS_802_11_RELOAD_DEFAULTS {
    Ndis802_11ReloadWEPKeys=0
} _NDIS_802_11_RELOAD_DEFAULTS;

typedef struct _NDIS_802_11_REMOVE_KEY _NDIS_802_11_REMOVE_KEY, *P_NDIS_802_11_REMOVE_KEY;

struct _NDIS_802_11_REMOVE_KEY {
    ULONG Length;
    ULONG KeyIndex;
    NDIS_802_11_MAC_ADDRESS BSSID;
};

typedef struct _NDIS_802_11_STATISTICS _NDIS_802_11_STATISTICS, *P_NDIS_802_11_STATISTICS;

struct _NDIS_802_11_STATISTICS {
    ULONG Length;
    LARGE_INTEGER TransmittedFragmentCount;
    LARGE_INTEGER MulticastTransmittedFrameCount;
    LARGE_INTEGER FailedCount;
    LARGE_INTEGER RetryCount;
    LARGE_INTEGER MultipleRetryCount;
    LARGE_INTEGER RTSSuccessCount;
    LARGE_INTEGER RTSFailureCount;
    LARGE_INTEGER ACKFailureCount;
    LARGE_INTEGER FrameDuplicateCount;
    LARGE_INTEGER ReceivedFragmentCount;
    LARGE_INTEGER MulticastReceivedFrameCount;
    LARGE_INTEGER FCSErrorCount;
    LARGE_INTEGER TKIPLocalMICFailures;
    LARGE_INTEGER TKIPICVErrorCount;
    LARGE_INTEGER TKIPCounterMeasuresInvoked;
    LARGE_INTEGER TKIPReplays;
    LARGE_INTEGER CCMPFormatErrors;
    LARGE_INTEGER CCMPReplays;
    LARGE_INTEGER CCMPDecryptErrors;
    LARGE_INTEGER FourWayHandshakeFailures;
    LARGE_INTEGER WEPUndecryptableCount;
    LARGE_INTEGER WEPICVErrorCount;
    LARGE_INTEGER DecryptSuccessCount;
    LARGE_INTEGER DecryptFailureCount;
};

typedef struct _NDIS_802_11_TEST _NDIS_802_11_TEST, *P_NDIS_802_11_TEST;

typedef union _union_6679 _union_6679, *P_union_6679;

typedef struct _NDIS_802_11_AUTHENTICATION_EVENT NDIS_802_11_AUTHENTICATION_EVENT;

union _union_6679 {
    NDIS_802_11_AUTHENTICATION_EVENT AuthenticationEvent;
    NDIS_802_11_RSSI RssiTrigger;
};

struct _NDIS_802_11_TEST {
    ULONG Length;
    ULONG Type;
    union _union_6679 field_0x8;
};

typedef struct _NDIS_802_11_VARIABLE_IEs _NDIS_802_11_VARIABLE_IEs, *P_NDIS_802_11_VARIABLE_IEs;

struct _NDIS_802_11_VARIABLE_IEs {
    UCHAR ElementID;
    UCHAR Length;
    UCHAR data[1];
};

typedef struct _NDIS_802_11_WEP _NDIS_802_11_WEP, *P_NDIS_802_11_WEP;

struct _NDIS_802_11_WEP {
    ULONG Length;
    ULONG KeyIndex;
    ULONG KeyLength;
    UCHAR KeyMaterial[1];
};

typedef enum _NDIS_802_5_RING_STATE {
    NdisRingStateClosed=2,
    NdisRingStateClosing=4,
    NdisRingStateOpenFailure=5,
    NdisRingStateOpened=1,
    NdisRingStateOpening=3,
    NdisRingStateRingFailure=6
} _NDIS_802_5_RING_STATE;

typedef struct _NDIS_CO_LINK_SPEED _NDIS_CO_LINK_SPEED, *P_NDIS_CO_LINK_SPEED;

struct _NDIS_CO_LINK_SPEED {
    ULONG Outbound;
    ULONG Inbound;
};

typedef enum _NDIS_DEVICE_POWER_STATE {
    NdisDeviceStateD0=1,
    NdisDeviceStateD1=2,
    NdisDeviceStateD2=3,
    NdisDeviceStateD3=4,
    NdisDeviceStateMaximum=5,
    NdisDeviceStateUnspecified=0
} _NDIS_DEVICE_POWER_STATE;

typedef enum _NDIS_FDDI_ATTACHMENT_TYPE {
    NdisFddiTypeCWrapA=10,
    NdisFddiTypeCWrapB=11,
    NdisFddiTypeCWrapS=12,
    NdisFddiTypeIsolated=1,
    NdisFddiTypeLocalA=2,
    NdisFddiTypeLocalAB=4,
    NdisFddiTypeLocalB=3,
    NdisFddiTypeLocalS=5,
    NdisFddiTypeThrough=13,
    NdisFddiTypeWrapA=6,
    NdisFddiTypeWrapAB=8,
    NdisFddiTypeWrapB=7,
    NdisFddiTypeWrapS=9
} _NDIS_FDDI_ATTACHMENT_TYPE;

typedef enum _NDIS_FDDI_LCONNECTION_STATE {
    NdisFddiStateActive=9,
    NdisFddiStateBreak=2,
    NdisFddiStateConnect=4,
    NdisFddiStateJoin=7,
    NdisFddiStateMaintenance=10,
    NdisFddiStateNext=5,
    NdisFddiStateOff=1,
    NdisFddiStateSignal=6,
    NdisFddiStateTrace=3,
    NdisFddiStateVerify=8
} _NDIS_FDDI_LCONNECTION_STATE;

typedef enum _NDIS_FDDI_RING_MGT_STATE {
    NdisFddiRingDetect=4,
    NdisFddiRingDirected=7,
    NdisFddiRingIsolated=1,
    NdisFddiRingNonOperational=2,
    NdisFddiRingNonOperationalDup=5,
    NdisFddiRingOperational=3,
    NdisFddiRingOperationalDup=6,
    NdisFddiRingTrace=8
} _NDIS_FDDI_RING_MGT_STATE;

typedef struct _NDIS_GUID _NDIS_GUID, *P_NDIS_GUID;

typedef union _union_6706 _union_6706, *P_union_6706;

typedef ULONG NDIS_OID;

typedef int NDIS_STATUS;

union _union_6706 {
    NDIS_OID Oid;
    NDIS_STATUS Status;
};

struct _NDIS_GUID {
    GUID Guid;
    union _union_6706 field_0x10;
    ULONG Size;
    ULONG Flags;
};

typedef enum _NDIS_HARDWARE_STATUS {
    NdisHardwareStatusClosing=3,
    NdisHardwareStatusInitializing=1,
    NdisHardwareStatusNotReady=4,
    NdisHardwareStatusReady=0,
    NdisHardwareStatusReset=2
} _NDIS_HARDWARE_STATUS;

typedef struct _NDIS_IRDA_PACKET_INFO _NDIS_IRDA_PACKET_INFO, *P_NDIS_IRDA_PACKET_INFO;

struct _NDIS_IRDA_PACKET_INFO {
    ULONG ExtraBOFs;
    ULONG MinTurnAroundTime;
};

typedef enum _NDIS_MEDIA_STATE {
    NdisMediaStateConnected=0,
    NdisMediaStateDisconnected=1
} _NDIS_MEDIA_STATE;

typedef struct _NDIS_OBJECT_HEADER _NDIS_OBJECT_HEADER, *P_NDIS_OBJECT_HEADER;

struct _NDIS_OBJECT_HEADER {
    UCHAR Type;
    UCHAR Revision;
    USHORT Size;
};

typedef struct _NDIS_PM_PACKET_PATTERN _NDIS_PM_PACKET_PATTERN, *P_NDIS_PM_PACKET_PATTERN;

struct _NDIS_PM_PACKET_PATTERN {
    ULONG Priority;
    ULONG Reserved;
    ULONG MaskSize;
    ULONG PatternOffset;
    ULONG PatternSize;
    ULONG PatternFlags;
};

typedef struct _NDIS_PM_WAKE_UP_CAPABILITIES _NDIS_PM_WAKE_UP_CAPABILITIES, *P_NDIS_PM_WAKE_UP_CAPABILITIES;

typedef enum _NDIS_DEVICE_POWER_STATE NDIS_DEVICE_POWER_STATE;

struct _NDIS_PM_WAKE_UP_CAPABILITIES {
    NDIS_DEVICE_POWER_STATE MinMagicPacketWakeUp;
    NDIS_DEVICE_POWER_STATE MinPatternWakeUp;
    NDIS_DEVICE_POWER_STATE MinLinkChangeWakeUp;
};

typedef struct _NDIS_PNP_CAPABILITIES _NDIS_PNP_CAPABILITIES, *P_NDIS_PNP_CAPABILITIES;

typedef struct _NDIS_PM_WAKE_UP_CAPABILITIES NDIS_PM_WAKE_UP_CAPABILITIES;

struct _NDIS_PNP_CAPABILITIES {
    ULONG Flags;
    NDIS_PM_WAKE_UP_CAPABILITIES WakeUpCapabilities;
};

typedef struct _NDIS_STATISTICS_VALUE _NDIS_STATISTICS_VALUE, *P_NDIS_STATISTICS_VALUE;

struct _NDIS_STATISTICS_VALUE {
    NDIS_OID Oid;
    ULONG DataLength;
    UCHAR Data[1];
};

typedef struct _NDIS_VAR_DATA_DESC _NDIS_VAR_DATA_DESC, *P_NDIS_VAR_DATA_DESC;

struct _NDIS_VAR_DATA_DESC {
    USHORT Length;
    USHORT MaximumLength;
    ULONG_PTR Offset;
};

typedef enum _NDIS_WAN_HEADER_FORMAT {
    NdisWanHeaderEthernet=1,
    NdisWanHeaderNative=0
} _NDIS_WAN_HEADER_FORMAT;

typedef enum _NDIS_WAN_MEDIUM_SUBTYPE {
    NdisWanMediumAtm=5,
    NdisWanMediumFrameRelay=4,
    NdisWanMediumHub=0,
    NdisWanMediumIrda=10,
    NdisWanMediumIsdn=2,
    NdisWanMediumL2TP=9,
    NdisWanMediumPPTP=8,
    NdisWanMediumParallel=11,
    NdisWanMediumPppoe=12,
    NdisWanMediumSW56K=7,
    NdisWanMediumSerial=3,
    NdisWanMediumSonet=6,
    NdisWanMediumX_25=1
} _NDIS_WAN_MEDIUM_SUBTYPE;

typedef struct _NDIS_WAN_PROTOCOL_CAPS _NDIS_WAN_PROTOCOL_CAPS, *P_NDIS_WAN_PROTOCOL_CAPS;

struct _NDIS_WAN_PROTOCOL_CAPS {
    ULONG Flags;
    ULONG Reserved;
};

typedef enum _NDIS_WAN_QUALITY {
    NdisWanErrorControl=1,
    NdisWanRaw=0,
    NdisWanReliable=2
} _NDIS_WAN_QUALITY;

typedef struct _NETWORK_ADDRESS _NETWORK_ADDRESS, *P_NETWORK_ADDRESS;

struct _NETWORK_ADDRESS {
    USHORT AddressLength;
    USHORT AddressType;
    UCHAR Address[1];
};

typedef struct _NETWORK_ADDRESS_IP _NETWORK_ADDRESS_IP, *P_NETWORK_ADDRESS_IP;

struct _NETWORK_ADDRESS_IP {
    USHORT sin_port;
    ULONG in_addr;
    UCHAR sin_zero[8];
};

typedef struct _NETWORK_ADDRESS_IPX _NETWORK_ADDRESS_IPX, *P_NETWORK_ADDRESS_IPX;

struct _NETWORK_ADDRESS_IPX {
    ULONG NetworkAddress;
    UCHAR NodeAddress[6];
    USHORT Socket;
};

typedef struct _NETWORK_ADDRESS_LIST _NETWORK_ADDRESS_LIST, *P_NETWORK_ADDRESS_LIST;

typedef struct _NETWORK_ADDRESS NETWORK_ADDRESS;

struct _NETWORK_ADDRESS_LIST {
    LONG AddressCount;
    USHORT AddressType;
    NETWORK_ADDRESS Address[1];
};

typedef struct _OFFLOAD_ALGO_INFO _OFFLOAD_ALGO_INFO, *P_OFFLOAD_ALGO_INFO;

struct _OFFLOAD_ALGO_INFO {
    ULONG algoIdentifier;
    ULONG algoKeylen;
    ULONG algoRounds;
};

typedef enum _OFFLOAD_CONF_ALGO {
    OFFLOAD_IPSEC_CONF_3_DES=3,
    OFFLOAD_IPSEC_CONF_DES=1,
    OFFLOAD_IPSEC_CONF_MAX=4,
    OFFLOAD_IPSEC_CONF_NONE=0,
    OFFLOAD_IPSEC_CONF_RESERVED=2
} _OFFLOAD_CONF_ALGO;

typedef enum _OFFLOAD_INTEGRITY_ALGO {
    OFFLOAD_IPSEC_INTEGRITY_MAX=3,
    OFFLOAD_IPSEC_INTEGRITY_MD5=1,
    OFFLOAD_IPSEC_INTEGRITY_NONE=0,
    OFFLOAD_IPSEC_INTEGRITY_SHA=2
} _OFFLOAD_INTEGRITY_ALGO;

typedef struct _OFFLOAD_IPSEC_ADD_SA _OFFLOAD_IPSEC_ADD_SA, *P_OFFLOAD_IPSEC_ADD_SA;

typedef struct _OFFLOAD_SECURITY_ASSOCIATION _OFFLOAD_SECURITY_ASSOCIATION, *P_OFFLOAD_SECURITY_ASSOCIATION;

typedef struct _OFFLOAD_SECURITY_ASSOCIATION OFFLOAD_SECURITY_ASSOCIATION;

typedef enum _OFFLOAD_OPERATION_E {
    AUTHENTICATE=1,
    ENCRYPT=2
} _OFFLOAD_OPERATION_E;

typedef enum _OFFLOAD_OPERATION_E OFFLOAD_OPERATION_E;

typedef ULONG SPI_TYPE;

typedef struct _OFFLOAD_ALGO_INFO OFFLOAD_ALGO_INFO;

struct _OFFLOAD_SECURITY_ASSOCIATION {
    OFFLOAD_OPERATION_E Operation;
    SPI_TYPE SPI;
    OFFLOAD_ALGO_INFO IntegrityAlgo;
    OFFLOAD_ALGO_INFO ConfAlgo;
    OFFLOAD_ALGO_INFO Reserved;
};

struct _OFFLOAD_IPSEC_ADD_SA {
    IPAddr SrcAddr;
    IPMask SrcMask;
    IPAddr DestAddr;
    IPMask DestMask;
    ULONG Protocol;
    USHORT SrcPort;
    USHORT DestPort;
    IPAddr SrcTunnelAddr;
    IPAddr DestTunnelAddr;
    USHORT Flags;
    SHORT NumSAs;
    OFFLOAD_SECURITY_ASSOCIATION SecAssoc[3];
    HANDLE OffloadHandle;
    ULONG KeyLen;
    UCHAR KeyMat[1];
};

typedef struct _OFFLOAD_IPSEC_ADD_UDPESP_SA _OFFLOAD_IPSEC_ADD_UDPESP_SA, *P_OFFLOAD_IPSEC_ADD_UDPESP_SA;

typedef struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY, *P_OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY;

typedef struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY;

typedef enum _UDP_ENCAP_TYPE {
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_IKE=0,
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_OTHER=1
} _UDP_ENCAP_TYPE;

typedef enum _UDP_ENCAP_TYPE UDP_ENCAP_TYPE;

struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY {
    UDP_ENCAP_TYPE UdpEncapType;
    USHORT DstEncapPort;
};

struct _OFFLOAD_IPSEC_ADD_UDPESP_SA {
    IPAddr SrcAddr;
    IPMask SrcMask;
    IPAddr DstAddr;
    IPMask DstMask;
    ULONG Protocol;
    USHORT SrcPort;
    USHORT DstPort;
    IPAddr SrcTunnelAddr;
    IPAddr DstTunnelAddr;
    USHORT Flags;
    SHORT NumSAs;
    OFFLOAD_SECURITY_ASSOCIATION SecAssoc[3];
    HANDLE OffloadHandle;
    OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY EncapTypeEntry;
    HANDLE EncapTypeEntryOffldHandle;
    ULONG KeyLen;
    UCHAR KeyMat[1];
};

typedef struct _OFFLOAD_IPSEC_DELETE_SA _OFFLOAD_IPSEC_DELETE_SA, *P_OFFLOAD_IPSEC_DELETE_SA;

struct _OFFLOAD_IPSEC_DELETE_SA {
    HANDLE OffloadHandle;
};

typedef struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA _OFFLOAD_IPSEC_DELETE_UDPESP_SA, *P_OFFLOAD_IPSEC_DELETE_UDPESP_SA;

struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA {
    HANDLE OffloadHandle;
    HANDLE EncapTypeEntryOffldHandle;
};

typedef struct _TRANSPORT_HEADER_OFFSET _TRANSPORT_HEADER_OFFSET, *P_TRANSPORT_HEADER_OFFSET;

struct _TRANSPORT_HEADER_OFFSET {
    USHORT ProtocolType;
    USHORT HeaderOffset;
};

typedef struct _GEN_GET_NETCARD_TIME GEN_GET_NETCARD_TIME;

typedef struct _GEN_GET_TIME_CAPS GEN_GET_TIME_CAPS;

typedef ULONG NDIS_802_11_ANTENNA;

typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION NDIS_802_11_ASSOCIATION_INFORMATION;

typedef struct _NDIS_802_11_BSSID_LIST NDIS_802_11_BSSID_LIST;

typedef struct _NDIS_802_11_BSSID_LIST_EX NDIS_802_11_BSSID_LIST_EX;

typedef struct _NDIS_802_11_CAPABILITY NDIS_802_11_CAPABILITY;

typedef struct _NDIS_802_11_FIXED_IEs NDIS_802_11_FIXED_IEs;

typedef ULONG NDIS_802_11_FRAGMENTATION_THRESHOLD;

typedef struct _NDIS_802_11_KEY NDIS_802_11_KEY;

typedef ULONG NDIS_802_11_KEY_INDEX;

typedef enum _NDIS_802_11_MEDIA_STREAM_MODE NDIS_802_11_MEDIA_STREAM_MODE;

typedef struct _NDIS_802_11_NETWORK_TYPE_LIST NDIS_802_11_NETWORK_TYPE_LIST;

typedef struct _NDIS_802_11_NON_BCAST_SSID_LIST NDIS_802_11_NON_BCAST_SSID_LIST;

typedef struct _NDIS_802_11_PMKID NDIS_802_11_PMKID;

typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST NDIS_802_11_PMKID_CANDIDATE_LIST;

typedef enum _NDIS_802_11_POWER_MODE NDIS_802_11_POWER_MODE;

typedef enum _NDIS_802_11_PRIVACY_FILTER NDIS_802_11_PRIVACY_FILTER;

typedef enum _NDIS_802_11_RADIO_STATUS NDIS_802_11_RADIO_STATUS;

typedef enum _NDIS_802_11_RELOAD_DEFAULTS NDIS_802_11_RELOAD_DEFAULTS;

typedef struct _NDIS_802_11_REMOVE_KEY NDIS_802_11_REMOVE_KEY;

typedef ULONG NDIS_802_11_RTS_THRESHOLD;

typedef struct _NDIS_802_11_STATISTICS NDIS_802_11_STATISTICS;

typedef struct _NDIS_802_11_TEST NDIS_802_11_TEST;

typedef ULONG NDIS_802_11_TX_POWER_LEVEL;

typedef struct _NDIS_802_11_VARIABLE_IEs NDIS_802_11_VARIABLE_IEs;

typedef struct _NDIS_802_11_WEP NDIS_802_11_WEP;

typedef enum _NDIS_802_11_WEP_STATUS NDIS_802_11_WEP_STATUS;

typedef enum _NDIS_802_5_RING_STATE NDIS_802_5_RING_STATE;

typedef struct NDIS_CO_DEVICE_PROFILE NDIS_CO_DEVICE_PROFILE, *PNDIS_CO_DEVICE_PROFILE;

typedef struct _NDIS_VAR_DATA_DESC NDIS_VAR_DATA_DESC;

struct NDIS_CO_DEVICE_PROFILE {
    NDIS_VAR_DATA_DESC DeviceDescription;
    NDIS_VAR_DATA_DESC DevSpecificInfo;
    ULONG ulTAPISupplementaryPassThru;
    ULONG ulAddressModes;
    ULONG ulNumAddresses;
    ULONG ulBearerModes;
    ULONG ulMaxTxRate;
    ULONG ulMinTxRate;
    ULONG ulMaxRxRate;
    ULONG ulMinRxRate;
    ULONG ulMediaModes;
    ULONG ulGenerateToneModes;
    ULONG ulGenerateToneMaxNumFreq;
    ULONG ulGenerateDigitModes;
    ULONG ulMonitorToneMaxNumFreq;
    ULONG ulMonitorToneMaxNumEntries;
    ULONG ulMonitorDigitModes;
    ULONG ulGatherDigitsMinTimeout;
    ULONG ulGatherDigitsMaxTimeout;
    ULONG ulDevCapFlags;
    ULONG ulMaxNumActiveCalls;
    ULONG ulAnswerMode;
    ULONG ulUUIAcceptSize;
    ULONG ulUUIAnswerSize;
    ULONG ulUUIMakeCallSize;
    ULONG ulUUIDropSize;
    ULONG ulUUISendUserUserInfoSize;
    ULONG ulUUICallInfoSize;
};

typedef struct _NDIS_CO_LINK_SPEED NDIS_CO_LINK_SPEED;

typedef enum _NDIS_FDDI_ATTACHMENT_TYPE NDIS_FDDI_ATTACHMENT_TYPE;

typedef enum _NDIS_FDDI_LCONNECTION_STATE NDIS_FDDI_LCONNECTION_STATE;

typedef enum _NDIS_FDDI_RING_MGT_STATE NDIS_FDDI_RING_MGT_STATE;

typedef struct _NDIS_GUID NDIS_GUID;

typedef enum _NDIS_HARDWARE_STATUS NDIS_HARDWARE_STATUS;

typedef struct _NDIS_IRDA_PACKET_INFO NDIS_IRDA_PACKET_INFO;

typedef enum _NDIS_MEDIA_STATE NDIS_MEDIA_STATE;

typedef struct _NDIS_OBJECT_HEADER NDIS_OBJECT_HEADER;

typedef struct _NDIS_PM_PACKET_PATTERN NDIS_PM_PACKET_PATTERN;

typedef struct _NDIS_PNP_CAPABILITIES NDIS_PNP_CAPABILITIES;

typedef struct _NDIS_STATISTICS_VALUE NDIS_STATISTICS_VALUE;

typedef ULONG NDIS_VLAN_ID;

typedef enum _NDIS_WAN_HEADER_FORMAT NDIS_WAN_HEADER_FORMAT;

typedef enum _NDIS_WAN_MEDIUM_SUBTYPE NDIS_WAN_MEDIUM_SUBTYPE;

typedef struct _NDIS_WAN_PROTOCOL_CAPS NDIS_WAN_PROTOCOL_CAPS;

typedef enum _NDIS_WAN_QUALITY NDIS_WAN_QUALITY;

typedef struct _NETWORK_ADDRESS_IP NETWORK_ADDRESS_IP;

typedef struct _NETWORK_ADDRESS_IPX NETWORK_ADDRESS_IPX;

typedef struct _NETWORK_ADDRESS_LIST NETWORK_ADDRESS_LIST;

typedef enum _OFFLOAD_CONF_ALGO OFFLOAD_CONF_ALGO;

typedef enum _OFFLOAD_INTEGRITY_ALGO OFFLOAD_INTEGRITY_ALGO;

typedef struct _OFFLOAD_IPSEC_ADD_SA OFFLOAD_IPSEC_ADD_SA;

typedef struct _OFFLOAD_IPSEC_ADD_UDPESP_SA OFFLOAD_IPSEC_ADD_UDPESP_SA;

typedef struct _OFFLOAD_IPSEC_DELETE_SA OFFLOAD_IPSEC_DELETE_SA;

typedef struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA OFFLOAD_IPSEC_DELETE_UDPESP_SA;

typedef struct _BSSID_INFO * PBSSID_INFO;

typedef struct _GEN_GET_NETCARD_TIME * PGEN_GET_NETCARD_TIME;

typedef struct _GEN_GET_TIME_CAPS * PGEN_GET_TIME_CAPS;

typedef struct _NDIS_802_11_AI_REQFI * PNDIS_802_11_AI_REQFI;

typedef struct _NDIS_802_11_AI_RESFI * PNDIS_802_11_AI_RESFI;

typedef struct _NDIS_802_11_ASSOCIATION_INFORMATION * PNDIS_802_11_ASSOCIATION_INFORMATION;

typedef struct _NDIS_802_11_AUTHENTICATION_ENCRYPTION * PNDIS_802_11_AUTHENTICATION_ENCRYPTION;

typedef struct _NDIS_802_11_AUTHENTICATION_EVENT * PNDIS_802_11_AUTHENTICATION_EVENT;

typedef enum _NDIS_802_11_AUTHENTICATION_MODE * PNDIS_802_11_AUTHENTICATION_MODE;

typedef struct _NDIS_802_11_AUTHENTICATION_REQUEST * PNDIS_802_11_AUTHENTICATION_REQUEST;

typedef struct _NDIS_802_11_BSSID_LIST * PNDIS_802_11_BSSID_LIST;

typedef struct _NDIS_802_11_BSSID_LIST_EX * PNDIS_802_11_BSSID_LIST_EX;

typedef struct _NDIS_802_11_CAPABILITY * PNDIS_802_11_CAPABILITY;

typedef struct _NDIS_802_11_CONFIGURATION * PNDIS_802_11_CONFIGURATION;

typedef struct _NDIS_802_11_CONFIGURATION_FH * PNDIS_802_11_CONFIGURATION_FH;

typedef enum _NDIS_802_11_WEP_STATUS * PNDIS_802_11_ENCRYPTION_STATUS;

typedef struct _NDIS_802_11_FIXED_IEs * PNDIS_802_11_FIXED_IEs;

typedef struct _NDIS_802_11_KEY * PNDIS_802_11_KEY;

typedef enum _NDIS_802_11_MEDIA_STREAM_MODE * PNDIS_802_11_MEDIA_STREAM_MODE;

typedef enum _NDIS_802_11_NETWORK_INFRASTRUCTURE * PNDIS_802_11_NETWORK_INFRASTRUCTURE;

typedef enum _NDIS_802_11_NETWORK_TYPE * PNDIS_802_11_NETWORK_TYPE;

typedef struct _NDIS_802_11_NETWORK_TYPE_LIST * PNDIS_802_11_NETWORK_TYPE_LIST;

typedef struct _NDIS_802_11_NON_BCAST_SSID_LIST * PNDIS_802_11_NON_BCAST_SSID_LIST;

typedef struct _NDIS_802_11_PMKID * PNDIS_802_11_PMKID;

typedef struct _NDIS_802_11_PMKID_CANDIDATE_LIST * PNDIS_802_11_PMKID_CANDIDATE_LIST;

typedef enum _NDIS_802_11_POWER_MODE * PNDIS_802_11_POWER_MODE;

typedef enum _NDIS_802_11_PRIVACY_FILTER * PNDIS_802_11_PRIVACY_FILTER;

typedef enum _NDIS_802_11_RADIO_STATUS * PNDIS_802_11_RADIO_STATUS;

typedef enum _NDIS_802_11_RELOAD_DEFAULTS * PNDIS_802_11_RELOAD_DEFAULTS;

typedef struct _NDIS_802_11_REMOVE_KEY * PNDIS_802_11_REMOVE_KEY;

typedef struct _NDIS_802_11_SSID * PNDIS_802_11_SSID;

typedef struct _NDIS_802_11_STATISTICS * PNDIS_802_11_STATISTICS;

typedef struct _NDIS_802_11_STATUS_INDICATION * PNDIS_802_11_STATUS_INDICATION;

typedef enum _NDIS_802_11_STATUS_TYPE * PNDIS_802_11_STATUS_TYPE;

typedef struct _NDIS_802_11_TEST * PNDIS_802_11_TEST;

typedef struct _NDIS_802_11_VARIABLE_IEs * PNDIS_802_11_VARIABLE_IEs;

typedef struct _NDIS_802_11_WEP * PNDIS_802_11_WEP;

typedef enum _NDIS_802_11_WEP_STATUS * PNDIS_802_11_WEP_STATUS;

typedef enum _NDIS_802_5_RING_STATE * PNDIS_802_5_RING_STATE;

typedef struct _NDIS_CO_LINK_SPEED * PNDIS_CO_LINK_SPEED;

typedef enum _NDIS_DEVICE_POWER_STATE * PNDIS_DEVICE_POWER_STATE;

typedef enum _NDIS_FDDI_ATTACHMENT_TYPE * PNDIS_FDDI_ATTACHMENT_TYPE;

typedef enum _NDIS_FDDI_LCONNECTION_STATE * PNDIS_FDDI_LCONNECTION_STATE;

typedef enum _NDIS_FDDI_RING_MGT_STATE * PNDIS_FDDI_RING_MGT_STATE;

typedef struct _NDIS_GUID * PNDIS_GUID;

typedef enum _NDIS_HARDWARE_STATUS * PNDIS_HARDWARE_STATUS;

typedef struct _NDIS_IRDA_PACKET_INFO * PNDIS_IRDA_PACKET_INFO;

typedef enum _NDIS_MEDIA_STATE * PNDIS_MEDIA_STATE;

typedef enum _NDIS_MEDIUM * PNDIS_MEDIUM;

typedef struct _NDIS_OBJECT_HEADER * PNDIS_OBJECT_HEADER;

typedef ULONG * PNDIS_OID;

typedef enum _NDIS_PHYSICAL_MEDIUM * PNDIS_PHYSICAL_MEDIUM;

typedef struct _NDIS_PM_PACKET_PATTERN * PNDIS_PM_PACKET_PATTERN;

typedef struct _NDIS_PM_WAKE_UP_CAPABILITIES * PNDIS_PM_WAKE_UP_CAPABILITIES;

typedef struct _NDIS_PNP_CAPABILITIES * PNDIS_PNP_CAPABILITIES;

typedef NDIS_STATISTICS_VALUE * PNDIS_STATISTICS_VALUE;

typedef int * PNDIS_STATUS;

typedef struct _NDIS_VAR_DATA_DESC * PNDIS_VAR_DATA_DESC;

typedef enum _NDIS_WAN_HEADER_FORMAT * PNDIS_WAN_HEADER_FORMAT;

typedef enum _NDIS_WAN_MEDIUM_SUBTYPE * PNDIS_WAN_MEDIUM_SUBTYPE;

typedef struct _NDIS_WAN_PROTOCOL_CAPS * PNDIS_WAN_PROTOCOL_CAPS;

typedef enum _NDIS_WAN_QUALITY * PNDIS_WAN_QUALITY;

typedef struct _NDIS_WLAN_BSSID * PNDIS_WLAN_BSSID;

typedef struct _NDIS_WLAN_BSSID_EX * PNDIS_WLAN_BSSID_EX;

typedef struct _NETWORK_ADDRESS * PNETWORK_ADDRESS;

typedef struct _NETWORK_ADDRESS_IP * PNETWORK_ADDRESS_IP;

typedef struct _NETWORK_ADDRESS_IPX * PNETWORK_ADDRESS_IPX;

typedef struct _NETWORK_ADDRESS_LIST * PNETWORK_ADDRESS_LIST;

typedef struct _OFFLOAD_ALGO_INFO * POFFLOAD_ALGO_INFO;

typedef struct _OFFLOAD_IPSEC_ADD_SA * POFFLOAD_IPSEC_ADD_SA;

typedef struct _OFFLOAD_IPSEC_ADD_UDPESP_SA * POFFLOAD_IPSEC_ADD_UDPESP_SA;

typedef struct _OFFLOAD_IPSEC_DELETE_SA * POFFLOAD_IPSEC_DELETE_SA;

typedef struct _OFFLOAD_IPSEC_DELETE_UDPESP_SA * POFFLOAD_IPSEC_DELETE_UDPESP_SA;

typedef struct _OFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY * POFFLOAD_IPSEC_UDPESP_ENCAPTYPE_ENTRY;

typedef struct _OFFLOAD_SECURITY_ASSOCIATION * POFFLOAD_SECURITY_ASSOCIATION;

typedef struct _PMKID_CANDIDATE * PPMKID_CANDIDATE;

typedef ULONG Priority_802_3;

typedef struct _TRANSPORT_HEADER_OFFSET * PTRANSPORT_HEADER_OFFSET;

typedef enum _UDP_ENCAP_TYPE * PUDP_ENCAP_TYPE;

typedef struct _TRANSPORT_HEADER_OFFSET TRANSPORT_HEADER_OFFSET;

#define ADAM_REPL_AUTHENTICATION_MODE_MUTUAL_AUTH_REQUIRED 2

#define ADAM_REPL_AUTHENTICATION_MODE_NEGOTIATE 1

#define ADAM_REPL_AUTHENTICATION_MODE_NEGOTIATE_PASS_THROUGH 0

#define DS_BEHAVIOR_LONGHORN 3

#define DS_BEHAVIOR_WIN2000 0

#define DS_BEHAVIOR_WIN2003 2

#define DS_BEHAVIOR_WIN2003_WITH_MIXED_DOMAINS 1

#define DS_BEHAVIOR_WIN2008 3

#define DS_BEHAVIOR_WIN2008R2 4

#define DS_BEHAVIOR_WIN7 4

#define DS_EXIST_ADVISORY_MODE 1

#define DS_INSTANCETYPE_IS_NC_HEAD 1

#define DS_INSTANCETYPE_NC_COMING 16

#define DS_INSTANCETYPE_NC_GOING 32

#define DS_INSTANCETYPE_NC_IS_WRITEABLE 4

#define DS_KCC_FLAG_ASYNC_OP 1

#define DS_KCC_FLAG_DAMPED 2

#define DS_LIST_ACCOUNT_OBJECT_FOR_SERVER 2

#define DS_LIST_DNS_HOST_NAME_FOR_SERVER 1

#define DS_LIST_DSA_OBJECT_FOR_SERVER 0

#define DS_REPADD_ASYNCHRONOUS_OPERATION 1

#define DS_REPADD_ASYNCHRONOUS_REPLICA 32

#define DS_REPADD_CRITICAL 2048

#define DS_REPADD_DISABLE_NOTIFICATION 64

#define DS_REPADD_DISABLE_PERIODIC 128

#define DS_REPADD_INITIAL 4

#define DS_REPADD_INTERSITE_MESSAGING 16

#define DS_REPADD_NEVER_NOTIFY 512

#define DS_REPADD_NONGC_RO_REPLICA 16777216

#define DS_REPADD_PERIODIC 8

#define DS_REPADD_SELECT_SECRETS 4096

#define DS_REPADD_TWO_WAY 1024

#define DS_REPADD_USE_COMPRESSION 256

#define DS_REPADD_WRITEABLE 2

#define DS_REPDEL_ASYNCHRONOUS_OPERATION 1

#define DS_REPDEL_IGNORE_ERRORS 8

#define DS_REPDEL_INTERSITE_MESSAGING 4

#define DS_REPDEL_LOCAL_ONLY 16

#define DS_REPDEL_NO_SOURCE 32

#define DS_REPDEL_REF_OK 64

#define DS_REPDEL_WRITEABLE 2

#define DS_REPL_INFO_FLAG_IMPROVE_LINKED_ATTRS 1

#define DS_REPL_NBR_COMPRESS_CHANGES 268435456

#define DS_REPL_NBR_DISABLE_SCHEDULED_SYNC 134217728

#define DS_REPL_NBR_DO_SCHEDULED_SYNCS 64

#define DS_REPL_NBR_FULL_SYNC_IN_PROGRESS 65536

#define DS_REPL_NBR_FULL_SYNC_NEXT_PACKET 131072

#define DS_REPL_NBR_GCSPN 1048576

#define DS_REPL_NBR_IGNORE_CHANGE_NOTIFICATIONS 67108864

#define DS_REPL_NBR_NEVER_SYNCED 2097152

#define DS_REPL_NBR_NO_CHANGE_NOTIFICATIONS 536870912

#define DS_REPL_NBR_NONGC_RO_REPLICA 1024

#define DS_REPL_NBR_PARTIAL_ATTRIBUTE_SET 1073741824

#define DS_REPL_NBR_PREEMPTED 16777216

#define DS_REPL_NBR_RETURN_OBJECT_PARENTS 2048

#define DS_REPL_NBR_SELECT_SECRETS 4096

#define DS_REPL_NBR_SYNC_ON_STARTUP 32

#define DS_REPL_NBR_TWO_WAY_SYNC 512

#define DS_REPL_NBR_USE_ASYNC_INTERSITE_TRANSPORT 128

#define DS_REPL_NBR_WRITEABLE 16

#define DS_REPMOD_ASYNCHRONOUS_OPERATION 1

#define DS_REPMOD_UPDATE_ADDRESS 2

#define DS_REPMOD_UPDATE_FLAGS 1

#define DS_REPMOD_UPDATE_INSTANCE 2

#define DS_REPMOD_UPDATE_RESULT 8

#define DS_REPMOD_UPDATE_SCHEDULE 4

#define DS_REPMOD_UPDATE_TRANSPORT 16

#define DS_REPMOD_WRITEABLE 2

#define DS_REPSYNC_ABANDONED 32768

#define DS_REPSYNC_ADD_REFERENCE 512

#define DS_REPSYNC_ASYNCHRONOUS_OPERATION 1

#define DS_REPSYNC_ASYNCHRONOUS_REPLICA 1048576

#define DS_REPSYNC_CRITICAL 2097152

#define DS_REPSYNC_FORCE 256

#define DS_REPSYNC_FULL 32

#define DS_REPSYNC_FULL_IN_PROGRESS 4194304

#define DS_REPSYNC_INITIAL 8192

#define DS_REPSYNC_INITIAL_IN_PROGRESS 65536

#define DS_REPSYNC_INTERSITE_MESSAGING 8

#define DS_REPSYNC_NEVER_COMPLETED 1024

#define DS_REPSYNC_NEVER_NOTIFY 4096

#define DS_REPSYNC_NO_DISCARD 128

#define DS_REPSYNC_NONGC_RO_REPLICA 16777216

#define DS_REPSYNC_NOTIFICATION 524288

#define DS_REPSYNC_PARTIAL_ATTRIBUTE_SET 131072

#define DS_REPSYNC_PERIODIC 4

#define DS_REPSYNC_PREEMPTED 8388608

#define DS_REPSYNC_REQUEUE 262144

#define DS_REPSYNC_SELECT_SECRETS 32768

#define DS_REPSYNC_TWO_WAY 2048

#define DS_REPSYNC_URGENT 64

#define DS_REPSYNC_USE_COMPRESSION 16384

#define DS_REPSYNC_WRITEABLE 2

#define DS_REPSYNCALL_ABORT_IF_SERVER_UNAVAILABLE 1

#define DS_REPSYNCALL_CROSS_SITE_BOUNDARIES 64

#define DS_REPSYNCALL_DO_NOT_SYNC 8

#define DS_REPSYNCALL_ID_SERVERS_BY_DN 4

#define DS_REPSYNCALL_NO_OPTIONS 0

#define DS_REPSYNCALL_PUSH_CHANGES_OUTWARD 32

#define DS_REPSYNCALL_SKIP_INITIAL_CHECK 16

#define DS_REPSYNCALL_SYNC_ADJACENT_SERVERS_ONLY 2

#define DS_REPUPD_ADD_REFERENCE 4

#define DS_REPUPD_ASYNCHRONOUS_OPERATION 1

#define DS_REPUPD_DELETE_REFERENCE 8

#define DS_REPUPD_REFERENCE_GCSPN 16

#define DS_REPUPD_WRITEABLE 2

#define DS_ROLE_DOMAIN_OWNER 1

#define DS_ROLE_INFRASTRUCTURE_OWNER 4

#define DS_ROLE_PDC_OWNER 2

#define DS_ROLE_RID_OWNER 3

#define DS_ROLE_SCHEMA_OWNER 0

#define DS_SCHEMA_GUID_ATTR 1

#define DS_SCHEMA_GUID_ATTR_SET 2

#define DS_SCHEMA_GUID_CLASS 3

#define DS_SCHEMA_GUID_CONTROL_RIGHT 4

#define DS_SCHEMA_GUID_NOT_FOUND 0

#define FLAG_DISABLABLE_OPTIONAL_FEATURE 4

#define FLAG_DOMAIN_OPTIONAL_FEATURE 2

#define FLAG_FOREST_OPTIONAL_FEATURE 1

#define FRSCONN_MAX_PRIORITY 8

#define FRSCONN_PRIORITY_MASK 1879048192

#define NTDSAPI_BIND_ALLOW_DELEGATION 1

#define NTDSAPI_BIND_FIND_BINDING 2

#define NTDSAPI_BIND_FORCE_KERBEROS 4

#define NTDSCONN_KCC_GC_TOPOLOGY 1

#define NTDSCONN_KCC_INTERSITE_GC_TOPOLOGY 32

#define NTDSCONN_KCC_INTERSITE_TOPOLOGY 64

#define NTDSCONN_KCC_MINIMIZE_HOPS_TOPOLOGY 4

#define NTDSCONN_KCC_NO_REASON 0

#define NTDSCONN_KCC_OSCILLATING_CONNECTION_TOPOLOGY 16

#define NTDSCONN_KCC_REDUNDANT_SERVER_TOPOLOGY 512

#define NTDSCONN_KCC_RING_TOPOLOGY 2

#define NTDSCONN_KCC_SERVER_FAILOVER_TOPOLOGY 128

#define NTDSCONN_KCC_SITE_FAILOVER_TOPOLOGY 256

#define NTDSCONN_KCC_STALE_SERVERS_TOPOLOGY 8

#define NTDSCONN_OPT_DISABLE_INTERSITE_COMPRESSION 16

#define NTDSCONN_OPT_IGNORE_SCHEDULE_MASK 2147483648

#define NTDSCONN_OPT_IS_GENERATED 1

#define NTDSCONN_OPT_OVERRIDE_NOTIFY_DEFAULT 4

#define NTDSCONN_OPT_RODC_TOPOLOGY 64

#define NTDSCONN_OPT_TWOWAY_SYNC 2

#define NTDSCONN_OPT_USE_NOTIFY 8

#define NTDSCONN_OPT_USER_OWNED_SCHEDULE 32

#define NTDSDSA_OPT_DISABLE_INBOUND_REPL 2

#define NTDSDSA_OPT_DISABLE_NTDSCONN_XLATE 8

#define NTDSDSA_OPT_DISABLE_OUTBOUND_REPL 4

#define NTDSDSA_OPT_DISABLE_SPN_REGISTRATION 16

#define NTDSDSA_OPT_GENERATE_OWN_TOPO 32

#define NTDSDSA_OPT_IS_GC 1

#define NTDSSETTINGS_DEFAULT_SERVER_REDUNDANCY 2

#define NTDSSETTINGS_OPT_FORCE_KCC_W2K_ELECTION 128

#define NTDSSETTINGS_OPT_FORCE_KCC_WHISTLER_BEHAVIOR 64

#define NTDSSETTINGS_OPT_IS_AUTO_TOPOLOGY_DISABLED 1

#define NTDSSETTINGS_OPT_IS_GROUP_CACHING_ENABLED 32

#define NTDSSETTINGS_OPT_IS_INTER_SITE_AUTO_TOPOLOGY_DISABLED 16

#define NTDSSETTINGS_OPT_IS_RAND_BH_SELECTION_DISABLED 256

#define NTDSSETTINGS_OPT_IS_REDUNDANT_SERVER_TOPOLOGY_ENABLED 1024

#define NTDSSETTINGS_OPT_IS_SCHEDULE_HASHING_ENABLED 512

#define NTDSSETTINGS_OPT_IS_TOPL_CLEANUP_DISABLED 2

#define NTDSSETTINGS_OPT_IS_TOPL_DETECT_STALE_DISABLED 8

#define NTDSSETTINGS_OPT_IS_TOPL_MIN_HOPS_DISABLED 4

#define NTDSSETTINGS_OPT_W2K3_BRIDGES_REQUIRED 4096

#define NTDSSETTINGS_OPT_W2K3_IGNORE_SCHEDULES 2048

#define NTDSSITECONN_OPT_DISABLE_COMPRESSION 4

#define NTDSSITECONN_OPT_TWOWAY_SYNC 2

#define NTDSSITECONN_OPT_USE_NOTIFY 1

#define NTDSSITELINK_OPT_DISABLE_COMPRESSION 4

#define NTDSSITELINK_OPT_TWOWAY_SYNC 2

#define NTDSSITELINK_OPT_USE_NOTIFY 1

#define NTDSTRANSPORT_OPT_BRIDGES_REQUIRED 2

#define NTDSTRANSPORT_OPT_IGNORE_SCHEDULES 1

typedef enum _DS_MANGLE_FOR {
    DS_MANGLE_OBJECT_RDN_FOR_DELETION=1,
    DS_MANGLE_OBJECT_RDN_FOR_NAME_CONFLICT=2,
    DS_MANGLE_UNKNOWN=0
} _DS_MANGLE_FOR;

typedef struct _DS_REPL_ATTR_META_DATA _DS_REPL_ATTR_META_DATA, *P_DS_REPL_ATTR_META_DATA;

typedef GUID UUID;

typedef LONGLONG USN;

struct _DS_REPL_ATTR_META_DATA {
    LPWSTR pszAttributeName;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
};

typedef struct _DS_REPL_ATTR_META_DATA_2 _DS_REPL_ATTR_META_DATA_2, *P_DS_REPL_ATTR_META_DATA_2;

struct _DS_REPL_ATTR_META_DATA_2 {
    LPWSTR pszAttributeName;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
    LPWSTR pszLastOriginatingDsaDN;
};

typedef struct _DS_REPL_ATTR_META_DATA_BLOB _DS_REPL_ATTR_META_DATA_BLOB, *P_DS_REPL_ATTR_META_DATA_BLOB;

struct _DS_REPL_ATTR_META_DATA_BLOB {
    DWORD oszAttributeName;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
    DWORD oszLastOriginatingDsaDN;
};

typedef struct _DS_REPL_ATTR_VALUE_META_DATA _DS_REPL_ATTR_VALUE_META_DATA, *P_DS_REPL_ATTR_VALUE_META_DATA;

typedef struct _DS_REPL_VALUE_META_DATA _DS_REPL_VALUE_META_DATA, *P_DS_REPL_VALUE_META_DATA;

typedef struct _DS_REPL_VALUE_META_DATA DS_REPL_VALUE_META_DATA;

struct _DS_REPL_VALUE_META_DATA {
    LPWSTR pszAttributeName;
    LPWSTR pszObjectDn;
    DWORD cbData;
    BYTE * pbData;
    FILETIME ftimeDeleted;
    FILETIME ftimeCreated;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
};

struct _DS_REPL_ATTR_VALUE_META_DATA {
    DWORD cNumEntries;
    DWORD dwEnumerationContext;
    DS_REPL_VALUE_META_DATA rgMetaData[1];
};

typedef struct _DS_REPL_ATTR_VALUE_META_DATA_2 _DS_REPL_ATTR_VALUE_META_DATA_2, *P_DS_REPL_ATTR_VALUE_META_DATA_2;

typedef struct _DS_REPL_VALUE_META_DATA_2 _DS_REPL_VALUE_META_DATA_2, *P_DS_REPL_VALUE_META_DATA_2;

typedef struct _DS_REPL_VALUE_META_DATA_2 DS_REPL_VALUE_META_DATA_2;

struct _DS_REPL_VALUE_META_DATA_2 {
    LPWSTR pszAttributeName;
    LPWSTR pszObjectDn;
    DWORD cbData;
    BYTE * pbData;
    FILETIME ftimeDeleted;
    FILETIME ftimeCreated;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
    LPWSTR pszLastOriginatingDsaDN;
};

struct _DS_REPL_ATTR_VALUE_META_DATA_2 {
    DWORD cNumEntries;
    DWORD dwEnumerationContext;
    DS_REPL_VALUE_META_DATA_2 rgMetaData[1];
};

typedef struct _DS_REPL_CURSOR _DS_REPL_CURSOR, *P_DS_REPL_CURSOR;

struct _DS_REPL_CURSOR {
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
};

typedef struct _DS_REPL_CURSOR_2 _DS_REPL_CURSOR_2, *P_DS_REPL_CURSOR_2;

struct _DS_REPL_CURSOR_2 {
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
};

typedef struct _DS_REPL_CURSOR_3W _DS_REPL_CURSOR_3W, *P_DS_REPL_CURSOR_3W;

struct _DS_REPL_CURSOR_3W {
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
    LPWSTR pszSourceDsaDN;
};

typedef struct _DS_REPL_CURSOR_BLOB _DS_REPL_CURSOR_BLOB, *P_DS_REPL_CURSOR_BLOB;

struct _DS_REPL_CURSOR_BLOB {
    UUID uuidSourceDsaInvocationID;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
    DWORD oszSourceDsaDN;
};

typedef struct _DS_REPL_CURSORS _DS_REPL_CURSORS, *P_DS_REPL_CURSORS;

typedef struct _DS_REPL_CURSOR DS_REPL_CURSOR;

struct _DS_REPL_CURSORS {
    DWORD cNumCursors;
    DWORD dwReserved;
    DS_REPL_CURSOR rgCursor[1];
};

typedef struct _DS_REPL_CURSORS_2 _DS_REPL_CURSORS_2, *P_DS_REPL_CURSORS_2;

typedef struct _DS_REPL_CURSOR_2 DS_REPL_CURSOR_2;

struct _DS_REPL_CURSORS_2 {
    DWORD cNumCursors;
    DWORD dwEnumerationContext;
    DS_REPL_CURSOR_2 rgCursor[1];
};

typedef struct _DS_REPL_CURSORS_3W _DS_REPL_CURSORS_3W, *P_DS_REPL_CURSORS_3W;

typedef struct _DS_REPL_CURSOR_3W DS_REPL_CURSOR_3W;

struct _DS_REPL_CURSORS_3W {
    DWORD cNumCursors;
    DWORD dwEnumerationContext;
    DS_REPL_CURSOR_3W rgCursor[1];
};

typedef enum _DS_REPL_INFO_TYPE {
    DS_REPL_INFO_CURSORS_2_FOR_NC=7,
    DS_REPL_INFO_CURSORS_3_FOR_NC=8,
    DS_REPL_INFO_CURSORS_FOR_NC=1,
    DS_REPL_INFO_KCC_DSA_CONNECT_FAILURES=3,
    DS_REPL_INFO_KCC_DSA_LINK_FAILURES=4,
    DS_REPL_INFO_METADATA_2_FOR_ATTR_VALUE=10,
    DS_REPL_INFO_METADATA_2_FOR_OBJ=9,
    DS_REPL_INFO_METADATA_FOR_ATTR_VALUE=6,
    DS_REPL_INFO_METADATA_FOR_OBJ=2,
    DS_REPL_INFO_NEIGHBORS=0,
    DS_REPL_INFO_PENDING_OPS=5,
    DS_REPL_INFO_TYPE_MAX=11
} _DS_REPL_INFO_TYPE;

typedef struct _DS_REPL_KCC_DSA_FAILURESW _DS_REPL_KCC_DSA_FAILURESW, *P_DS_REPL_KCC_DSA_FAILURESW;

typedef struct _DS_REPL_KCC_DSA_FAILUREW _DS_REPL_KCC_DSA_FAILUREW, *P_DS_REPL_KCC_DSA_FAILUREW;

typedef struct _DS_REPL_KCC_DSA_FAILUREW DS_REPL_KCC_DSA_FAILUREW;

struct _DS_REPL_KCC_DSA_FAILUREW {
    LPWSTR pszDsaDN;
    UUID uuidDsaObjGuid;
    FILETIME ftimeFirstFailure;
    DWORD cNumFailures;
    DWORD dwLastResult;
};

struct _DS_REPL_KCC_DSA_FAILURESW {
    DWORD cNumEntries;
    DWORD dwReserved;
    DS_REPL_KCC_DSA_FAILUREW rgDsaFailure[1];
};

typedef struct _DS_REPL_KCC_DSA_FAILUREW_BLOB _DS_REPL_KCC_DSA_FAILUREW_BLOB, *P_DS_REPL_KCC_DSA_FAILUREW_BLOB;

struct _DS_REPL_KCC_DSA_FAILUREW_BLOB {
    DWORD oszDsaDN;
    UUID uuidDsaObjGuid;
    FILETIME ftimeFirstFailure;
    DWORD cNumFailures;
    DWORD dwLastResult;
};

typedef struct _DS_REPL_NEIGHBORSW _DS_REPL_NEIGHBORSW, *P_DS_REPL_NEIGHBORSW;

typedef struct _DS_REPL_NEIGHBORW _DS_REPL_NEIGHBORW, *P_DS_REPL_NEIGHBORW;

typedef struct _DS_REPL_NEIGHBORW DS_REPL_NEIGHBORW;

struct _DS_REPL_NEIGHBORW {
    LPWSTR pszNamingContext;
    LPWSTR pszSourceDsaDN;
    LPWSTR pszSourceDsaAddress;
    LPWSTR pszAsyncIntersiteTransportDN;
    DWORD dwReplicaFlags;
    DWORD dwReserved;
    UUID uuidNamingContextObjGuid;
    UUID uuidSourceDsaObjGuid;
    UUID uuidSourceDsaInvocationID;
    UUID uuidAsyncIntersiteTransportObjGuid;
    USN usnLastObjChangeSynced;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
    FILETIME ftimeLastSyncAttempt;
    DWORD dwLastSyncResult;
    DWORD cNumConsecutiveSyncFailures;
};

struct _DS_REPL_NEIGHBORSW {
    DWORD cNumNeighbors;
    DWORD dwReserved;
    DS_REPL_NEIGHBORW rgNeighbor[1];
};

typedef struct _DS_REPL_NEIGHBORW_BLOB _DS_REPL_NEIGHBORW_BLOB, *P_DS_REPL_NEIGHBORW_BLOB;

struct _DS_REPL_NEIGHBORW_BLOB {
    DWORD oszNamingContext;
    DWORD oszSourceDsaDN;
    DWORD oszSourceDsaAddress;
    DWORD oszAsyncIntersiteTransportDN;
    DWORD dwReplicaFlags;
    DWORD dwReserved;
    UUID uuidNamingContextObjGuid;
    UUID uuidSourceDsaObjGuid;
    UUID uuidSourceDsaInvocationID;
    UUID uuidAsyncIntersiteTransportObjGuid;
    USN usnLastObjChangeSynced;
    USN usnAttributeFilter;
    FILETIME ftimeLastSyncSuccess;
    FILETIME ftimeLastSyncAttempt;
    DWORD dwLastSyncResult;
    DWORD cNumConsecutiveSyncFailures;
};

typedef struct _DS_REPL_OBJ_META_DATA _DS_REPL_OBJ_META_DATA, *P_DS_REPL_OBJ_META_DATA;

typedef struct _DS_REPL_ATTR_META_DATA DS_REPL_ATTR_META_DATA;

struct _DS_REPL_OBJ_META_DATA {
    DWORD cNumEntries;
    DWORD dwReserved;
    DS_REPL_ATTR_META_DATA rgMetaData[1];
};

typedef struct _DS_REPL_OBJ_META_DATA_2 _DS_REPL_OBJ_META_DATA_2, *P_DS_REPL_OBJ_META_DATA_2;

typedef struct _DS_REPL_ATTR_META_DATA_2 DS_REPL_ATTR_META_DATA_2;

struct _DS_REPL_OBJ_META_DATA_2 {
    DWORD cNumEntries;
    DWORD dwReserved;
    DS_REPL_ATTR_META_DATA_2 rgMetaData[1];
};

typedef enum _DS_REPL_OP_TYPE {
    DS_REPL_OP_TYPE_ADD=1,
    DS_REPL_OP_TYPE_DELETE=2,
    DS_REPL_OP_TYPE_MODIFY=3,
    DS_REPL_OP_TYPE_SYNC=0,
    DS_REPL_OP_TYPE_UPDATE_REFS=4
} _DS_REPL_OP_TYPE;

typedef struct _DS_REPL_OPW _DS_REPL_OPW, *P_DS_REPL_OPW;

typedef enum _DS_REPL_OP_TYPE DS_REPL_OP_TYPE;

struct _DS_REPL_OPW {
    FILETIME ftimeEnqueued;
    ULONG ulSerialNumber;
    ULONG ulPriority;
    DS_REPL_OP_TYPE OpType;
    ULONG ulOptions;
    LPWSTR pszNamingContext;
    LPWSTR pszDsaDN;
    LPWSTR pszDsaAddress;
    UUID uuidNamingContextObjGuid;
    UUID uuidDsaObjGuid;
};

typedef struct _DS_REPL_OPW_BLOB _DS_REPL_OPW_BLOB, *P_DS_REPL_OPW_BLOB;

struct _DS_REPL_OPW_BLOB {
    FILETIME ftimeEnqueued;
    ULONG ulSerialNumber;
    ULONG ulPriority;
    DS_REPL_OP_TYPE OpType;
    ULONG ulOptions;
    DWORD oszNamingContext;
    DWORD oszDsaDN;
    DWORD oszDsaAddress;
    UUID uuidNamingContextObjGuid;
    UUID uuidDsaObjGuid;
};

typedef struct _DS_REPL_PENDING_OPSW _DS_REPL_PENDING_OPSW, *P_DS_REPL_PENDING_OPSW;

typedef struct _DS_REPL_OPW DS_REPL_OPW;

struct _DS_REPL_PENDING_OPSW {
    FILETIME ftimeCurrentOpStarted;
    DWORD cNumPendingOps;
    DS_REPL_OPW rgPendingOp[1];
};

typedef struct _DS_REPL_QUEUE_STATISTICSW _DS_REPL_QUEUE_STATISTICSW, *P_DS_REPL_QUEUE_STATISTICSW;

struct _DS_REPL_QUEUE_STATISTICSW {
    FILETIME ftimeCurrentOpStarted;
    DWORD cNumPendingOps;
    FILETIME ftimeOldestSync;
    FILETIME ftimeOldestAdd;
    FILETIME ftimeOldestMod;
    FILETIME ftimeOldestDel;
    FILETIME ftimeOldestUpdRefs;
};

typedef struct _DS_REPL_VALUE_META_DATA_BLOB _DS_REPL_VALUE_META_DATA_BLOB, *P_DS_REPL_VALUE_META_DATA_BLOB;

struct _DS_REPL_VALUE_META_DATA_BLOB {
    DWORD oszAttributeName;
    DWORD oszObjectDn;
    DWORD cbData;
    DWORD obData;
    FILETIME ftimeDeleted;
    FILETIME ftimeCreated;
    DWORD dwVersion;
    FILETIME ftimeLastOriginatingChange;
    UUID uuidLastOriginatingDsaInvocationID;
    USN usnOriginatingChange;
    USN usnLocalChange;
    DWORD oszLastOriginatingDsaDN;
};

typedef struct DS_DOMAIN_CONTROLLER_INFO_1A DS_DOMAIN_CONTROLLER_INFO_1A, *PDS_DOMAIN_CONTROLLER_INFO_1A;

struct DS_DOMAIN_CONTROLLER_INFO_1A {
    LPSTR NetbiosName;
    LPSTR DnsHostName;
    LPSTR SiteName;
    LPSTR ComputerObjectName;
    LPSTR ServerObjectName;
    BOOL fIsPdc;
    BOOL fDsEnabled;
};

typedef struct DS_DOMAIN_CONTROLLER_INFO_1W DS_DOMAIN_CONTROLLER_INFO_1W, *PDS_DOMAIN_CONTROLLER_INFO_1W;

struct DS_DOMAIN_CONTROLLER_INFO_1W {
    LPWSTR NetbiosName;
    LPWSTR DnsHostName;
    LPWSTR SiteName;
    LPWSTR ComputerObjectName;
    LPWSTR ServerObjectName;
    BOOL fIsPdc;
    BOOL fDsEnabled;
};

typedef struct DS_DOMAIN_CONTROLLER_INFO_2A DS_DOMAIN_CONTROLLER_INFO_2A, *PDS_DOMAIN_CONTROLLER_INFO_2A;

struct DS_DOMAIN_CONTROLLER_INFO_2A {
    LPSTR NetbiosName;
    LPSTR DnsHostName;
    LPSTR SiteName;
    LPSTR SiteObjectName;
    LPSTR ComputerObjectName;
    LPSTR ServerObjectName;
    LPSTR NtdsDsaObjectName;
    BOOL fIsPdc;
    BOOL fDsEnabled;
    BOOL fIsGc;
    GUID SiteObjectGuid;
    GUID ComputerObjectGuid;
    GUID ServerObjectGuid;
    GUID NtdsDsaObjectGuid;
};

typedef struct DS_DOMAIN_CONTROLLER_INFO_2W DS_DOMAIN_CONTROLLER_INFO_2W, *PDS_DOMAIN_CONTROLLER_INFO_2W;

struct DS_DOMAIN_CONTROLLER_INFO_2W {
    LPWSTR NetbiosName;
    LPWSTR DnsHostName;
    LPWSTR SiteName;
    LPWSTR SiteObjectName;
    LPWSTR ComputerObjectName;
    LPWSTR ServerObjectName;
    LPWSTR NtdsDsaObjectName;
    BOOL fIsPdc;
    BOOL fDsEnabled;
    BOOL fIsGc;
    GUID SiteObjectGuid;
    GUID ComputerObjectGuid;
    GUID ServerObjectGuid;
    GUID NtdsDsaObjectGuid;
};

typedef struct DS_DOMAIN_CONTROLLER_INFO_3A DS_DOMAIN_CONTROLLER_INFO_3A, *PDS_DOMAIN_CONTROLLER_INFO_3A;

struct DS_DOMAIN_CONTROLLER_INFO_3A {
    LPSTR NetbiosName;
    LPSTR DnsHostName;
    LPSTR SiteName;
    LPSTR SiteObjectName;
    LPSTR ComputerObjectName;
    LPSTR ServerObjectName;
    LPSTR NtdsDsaObjectName;
    BOOL fIsPdc;
    BOOL fDsEnabled;
    BOOL fIsGc;
    BOOL fIsRodc;
    GUID SiteObjectGuid;
    GUID ComputerObjectGuid;
    GUID ServerObjectGuid;
    GUID NtdsDsaObjectGuid;
};

typedef struct DS_DOMAIN_CONTROLLER_INFO_3W DS_DOMAIN_CONTROLLER_INFO_3W, *PDS_DOMAIN_CONTROLLER_INFO_3W;

struct DS_DOMAIN_CONTROLLER_INFO_3W {
    LPWSTR NetbiosName;
    LPWSTR DnsHostName;
    LPWSTR SiteName;
    LPWSTR SiteObjectName;
    LPWSTR ComputerObjectName;
    LPWSTR ServerObjectName;
    LPWSTR NtdsDsaObjectName;
    BOOL fIsPdc;
    BOOL fDsEnabled;
    BOOL fIsGc;
    BOOL fIsRodc;
    GUID SiteObjectGuid;
    GUID ComputerObjectGuid;
    GUID ServerObjectGuid;
    GUID NtdsDsaObjectGuid;
};

typedef enum enum_6784 {
    DS_KCC_TASKID_UPDATE_TOPOLOGY=0
} enum_6784;

typedef enum enum_6784 DS_KCC_TASKID;

typedef enum _DS_MANGLE_FOR DS_MANGLE_FOR;

typedef enum enum_6760 {
    DS_NAME_ERROR_DOMAIN_ONLY=5,
    DS_NAME_ERROR_NOT_FOUND=2,
    DS_NAME_ERROR_NOT_UNIQUE=3,
    DS_NAME_ERROR_NO_MAPPING=4,
    DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING=6,
    DS_NAME_ERROR_RESOLVING=1,
    DS_NAME_ERROR_TRUST_REFERRAL=7,
    DS_NAME_NO_ERROR=0
} enum_6760;

typedef enum enum_6760 DS_NAME_ERROR;

typedef enum enum_6759 {
    DS_NAME_FLAG_EVAL_AT_DC=2,
    DS_NAME_FLAG_GCVERIFY=4,
    DS_NAME_FLAG_SYNTACTICAL_ONLY=1,
    DS_NAME_FLAG_TRUST_REFERRAL=8,
    DS_NAME_NO_FLAGS=0
} enum_6759;

typedef enum enum_6759 DS_NAME_FLAGS;

typedef enum enum_6758 {
    DS_CANONICAL_NAME=7,
    DS_CANONICAL_NAME_EX=9,
    DS_DISPLAY_NAME=3,
    DS_DNS_DOMAIN_NAME=12,
    DS_FQDN_1779_NAME=1,
    DS_NT4_ACCOUNT_NAME=2,
    DS_SERVICE_PRINCIPAL_NAME=10,
    DS_SID_OR_SID_HISTORY_NAME=11,
    DS_UNIQUE_ID_NAME=6,
    DS_UNKNOWN_NAME=0,
    DS_USER_PRINCIPAL_NAME=8
} enum_6758;

typedef enum enum_6758 DS_NAME_FORMAT;

typedef struct DS_NAME_RESULT_ITEMA DS_NAME_RESULT_ITEMA, *PDS_NAME_RESULT_ITEMA;

struct DS_NAME_RESULT_ITEMA {
    DWORD status;
    LPSTR pDomain;
    LPSTR pName;
};

typedef struct DS_NAME_RESULT_ITEMW DS_NAME_RESULT_ITEMW, *PDS_NAME_RESULT_ITEMW;

struct DS_NAME_RESULT_ITEMW {
    DWORD status;
    LPWSTR pDomain;
    LPWSTR pName;
};

typedef struct DS_NAME_RESULTA DS_NAME_RESULTA, *PDS_NAME_RESULTA;

struct DS_NAME_RESULTA {
    DWORD cItems;
    PDS_NAME_RESULT_ITEMA rItems;
};

typedef struct DS_NAME_RESULTW DS_NAME_RESULTW, *PDS_NAME_RESULTW;

struct DS_NAME_RESULTW {
    DWORD cItems;
    PDS_NAME_RESULT_ITEMW rItems;
};

typedef struct _DS_REPL_ATTR_META_DATA_BLOB DS_REPL_ATTR_META_DATA_BLOB;

typedef struct _DS_REPL_ATTR_VALUE_META_DATA DS_REPL_ATTR_VALUE_META_DATA;

typedef struct _DS_REPL_ATTR_VALUE_META_DATA_2 DS_REPL_ATTR_VALUE_META_DATA_2;

typedef struct _DS_REPL_CURSOR_BLOB DS_REPL_CURSOR_BLOB;

typedef struct _DS_REPL_CURSORS DS_REPL_CURSORS;

typedef struct _DS_REPL_CURSORS_2 DS_REPL_CURSORS_2;

typedef struct _DS_REPL_CURSORS_3W DS_REPL_CURSORS_3W;

typedef enum _DS_REPL_INFO_TYPE DS_REPL_INFO_TYPE;

typedef struct _DS_REPL_KCC_DSA_FAILURESW DS_REPL_KCC_DSA_FAILURESW;

typedef struct _DS_REPL_KCC_DSA_FAILUREW_BLOB DS_REPL_KCC_DSA_FAILUREW_BLOB;

typedef struct _DS_REPL_NEIGHBORSW DS_REPL_NEIGHBORSW;

typedef struct _DS_REPL_NEIGHBORW_BLOB DS_REPL_NEIGHBORW_BLOB;

typedef struct _DS_REPL_OBJ_META_DATA DS_REPL_OBJ_META_DATA;

typedef struct _DS_REPL_OBJ_META_DATA_2 DS_REPL_OBJ_META_DATA_2;

typedef struct _DS_REPL_OPW_BLOB DS_REPL_OPW_BLOB;

typedef struct _DS_REPL_PENDING_OPSW DS_REPL_PENDING_OPSW;

typedef struct _DS_REPL_QUEUE_STATISTICSW DS_REPL_QUEUE_STATISTICSW;

typedef struct _DS_REPL_QUEUE_STATISTICSW DS_REPL_QUEUE_STATISTICSW_BLOB;

typedef struct _DS_REPL_VALUE_META_DATA_BLOB DS_REPL_VALUE_META_DATA_BLOB;

typedef struct DS_REPSYNCALL_ERRINFOA DS_REPSYNCALL_ERRINFOA, *PDS_REPSYNCALL_ERRINFOA;

typedef enum enum_6767 {
    DS_REPSYNCALL_SERVER_UNREACHABLE=2,
    DS_REPSYNCALL_WIN32_ERROR_CONTACTING_SERVER=0,
    DS_REPSYNCALL_WIN32_ERROR_REPLICATING=1
} enum_6767;

typedef enum enum_6767 DS_REPSYNCALL_ERROR;

struct DS_REPSYNCALL_ERRINFOA {
    LPSTR pszSvrId;
    DS_REPSYNCALL_ERROR error;
    DWORD dwWin32Err;
    LPSTR pszSrcId;
};

typedef struct DS_REPSYNCALL_ERRINFOW DS_REPSYNCALL_ERRINFOW, *PDS_REPSYNCALL_ERRINFOW;

struct DS_REPSYNCALL_ERRINFOW {
    LPWSTR pszSvrId;
    DS_REPSYNCALL_ERROR error;
    DWORD dwWin32Err;
    LPWSTR pszSrcId;
};

typedef enum enum_6768 {
    DS_REPSYNCALL_EVENT_ERROR=0,
    DS_REPSYNCALL_EVENT_FINISHED=3,
    DS_REPSYNCALL_EVENT_SYNC_COMPLETED=2,
    DS_REPSYNCALL_EVENT_SYNC_STARTED=1
} enum_6768;

typedef enum enum_6768 DS_REPSYNCALL_EVENT;

typedef struct DS_REPSYNCALL_SYNCA DS_REPSYNCALL_SYNCA, *PDS_REPSYNCALL_SYNCA;

struct DS_REPSYNCALL_SYNCA {
    LPSTR pszSrcId;
    LPSTR pszDstId;
    LPSTR pszNC;
    GUID * pguidSrc;
    GUID * pguidDst;
};

typedef struct DS_REPSYNCALL_SYNCW DS_REPSYNCALL_SYNCW, *PDS_REPSYNCALL_SYNCW;

struct DS_REPSYNCALL_SYNCW {
    LPWSTR pszSrcId;
    LPWSTR pszDstId;
    LPWSTR pszNC;
    GUID * pguidSrc;
    GUID * pguidDst;
};

typedef struct DS_REPSYNCALL_UPDATEA DS_REPSYNCALL_UPDATEA, *PDS_REPSYNCALL_UPDATEA;

struct DS_REPSYNCALL_UPDATEA {
    DS_REPSYNCALL_EVENT event;
    struct DS_REPSYNCALL_ERRINFOA * pErrInfo;
    struct DS_REPSYNCALL_SYNCA * pSync;
};

typedef struct DS_REPSYNCALL_UPDATEW DS_REPSYNCALL_UPDATEW, *PDS_REPSYNCALL_UPDATEW;

struct DS_REPSYNCALL_UPDATEW {
    DS_REPSYNCALL_EVENT event;
    struct DS_REPSYNCALL_ERRINFOW * pErrInfo;
    struct DS_REPSYNCALL_SYNCW * pSync;
};

typedef struct DS_SCHEMA_GUID_MAPA DS_SCHEMA_GUID_MAPA, *PDS_SCHEMA_GUID_MAPA;

struct DS_SCHEMA_GUID_MAPA {
    GUID guid;
    DWORD guidType;
    LPSTR pName;
};

typedef struct DS_SCHEMA_GUID_MAPW DS_SCHEMA_GUID_MAPW, *PDS_SCHEMA_GUID_MAPW;

struct DS_SCHEMA_GUID_MAPW {
    GUID guid;
    DWORD guidType;
    LPWSTR pName;
};

typedef struct DS_SITE_COST_INFO DS_SITE_COST_INFO, *PDS_SITE_COST_INFO;

struct DS_SITE_COST_INFO {
    DWORD errorCode;
    DWORD cost;
};

typedef enum enum_6761 {
    DS_SPN_DNS_HOST=0,
    DS_SPN_DN_HOST=1,
    DS_SPN_DOMAIN=3,
    DS_SPN_NB_DOMAIN=4,
    DS_SPN_NB_HOST=2,
    DS_SPN_SERVICE=5
} enum_6761;

typedef enum enum_6761 DS_SPN_NAME_TYPE;

typedef enum enum_6762 {
    DS_SPN_ADD_SPN_OP=0,
    DS_SPN_DELETE_SPN_OP=2,
    DS_SPN_REPLACE_SPN_OP=1
} enum_6762;

typedef enum enum_6762 DS_SPN_WRITE_OP;

#define NTMS_APPLICATIONNAME_LENGTH 64

#define NTMS_BARCODE_LENGTH 64

#define NTMS_COMPUTERNAME_LENGTH 64

#define NTMS_DESCRIPTION_LENGTH 127

#define NTMS_DEVICENAME_LENGTH 64

#define NTMS_I1_MESSAGE_LENGTH 127

#define NTMS_MAXATTR_LENGTH 65536

#define NTMS_MAXATTR_NAMELEN 32

#define NTMS_MESSAGE_LENGTH 256

#define NTMS_OBJECTNAME_LENGTH 64

#define NTMS_OMID_TYPE_FILESYSTEM_INFO 2

#define NTMS_OMID_TYPE_RAW_LABEL 1

#define NTMS_OMIDLABELID_LENGTH 255

#define NTMS_OMIDLABELINFO_LENGTH 256

#define NTMS_OMIDLABELTYPE_LENGTH 64

#define NTMS_POOLHIERARCHY_LENGTH 512

#define NTMS_PRODUCTNAME_LENGTH 128

#define NTMS_REVISION_LENGTH 32

#define NTMS_SEQUENCE_LENGTH 32

#define NTMS_SERIALNUMBER_LENGTH 32

#define NTMS_USERNAME_LENGTH 64

#define NTMS_VENDORNAME_LENGTH 128

typedef struct _NTMS_ALLOCATION_INFORMATION _NTMS_ALLOCATION_INFORMATION, *P_NTMS_ALLOCATION_INFORMATION;

typedef GUID NTMS_GUID;

struct _NTMS_ALLOCATION_INFORMATION {
    DWORD dwSize;
    LPVOID lpReserved;
    NTMS_GUID AllocatedFrom;
};

typedef struct _NTMS_ASYNC_IO _NTMS_ASYNC_IO, *P_NTMS_ASYNC_IO;

struct _NTMS_ASYNC_IO {
    NTMS_GUID OperationId;
    NTMS_GUID EventId;
    DWORD dwOperationType;
    DWORD dwResult;
    DWORD dwAsyncState;
    HANDLE hEvent;
    BOOL bOnStateChange;
};

typedef struct _NTMS_CHANGERINFORMATIONA _NTMS_CHANGERINFORMATIONA, *P_NTMS_CHANGERINFORMATIONA;

struct _NTMS_CHANGERINFORMATIONA {
    DWORD Number;
    NTMS_GUID ChangerType;
    CHAR szSerialNumber[32];
    CHAR szRevision[32];
    CHAR szDeviceName[64];
    WORD ScsiPort;
    WORD ScsiBus;
    WORD ScsiTarget;
    WORD ScsiLun;
    NTMS_GUID Library;
};

typedef struct _NTMS_CHANGERINFORMATIONW _NTMS_CHANGERINFORMATIONW, *P_NTMS_CHANGERINFORMATIONW;

struct _NTMS_CHANGERINFORMATIONW {
    DWORD Number;
    NTMS_GUID ChangerType;
    WCHAR szSerialNumber[32];
    WCHAR szRevision[32];
    WCHAR szDeviceName[64];
    WORD ScsiPort;
    WORD ScsiBus;
    WORD ScsiTarget;
    WORD ScsiLun;
    NTMS_GUID Library;
};

typedef struct _NTMS_CHANGERTYPEINFORMATIONA _NTMS_CHANGERTYPEINFORMATIONA, *P_NTMS_CHANGERTYPEINFORMATIONA;

struct _NTMS_CHANGERTYPEINFORMATIONA {
    CHAR szVendor[128];
    CHAR szProduct[128];
    DWORD DeviceType;
};

typedef struct _NTMS_CHANGERTYPEINFORMATIONW _NTMS_CHANGERTYPEINFORMATIONW, *P_NTMS_CHANGERTYPEINFORMATIONW;

struct _NTMS_CHANGERTYPEINFORMATIONW {
    WCHAR szVendor[128];
    WCHAR szProduct[128];
    DWORD DeviceType;
};

typedef struct _NTMS_COMPUTERINFORMATION _NTMS_COMPUTERINFORMATION, *P_NTMS_COMPUTERINFORMATION;

struct _NTMS_COMPUTERINFORMATION {
    DWORD dwLibRequestPurgeTime;
    DWORD dwOpRequestPurgeTime;
    DWORD dwLibRequestFlags;
    DWORD dwOpRequestFlags;
    DWORD dwMediaPoolPolicy;
};

typedef struct _NTMS_DRIVEINFORMATIONA _NTMS_DRIVEINFORMATIONA, *P_NTMS_DRIVEINFORMATIONA;

struct _NTMS_DRIVEINFORMATIONA {
    DWORD Number;
    DWORD State;
    NTMS_GUID DriveType;
    CHAR szDeviceName[64];
    CHAR szSerialNumber[32];
    CHAR szRevision[32];
    WORD ScsiPort;
    WORD ScsiBus;
    WORD ScsiTarget;
    WORD ScsiLun;
    DWORD dwMountCount;
    SYSTEMTIME LastCleanedTs;
    NTMS_GUID SavedPartitionId;
    NTMS_GUID Library;
    GUID Reserved;
    DWORD dwDeferDismountDelay;
};

typedef struct _NTMS_DRIVEINFORMATIONW _NTMS_DRIVEINFORMATIONW, *P_NTMS_DRIVEINFORMATIONW;

struct _NTMS_DRIVEINFORMATIONW {
    DWORD Number;
    DWORD State;
    NTMS_GUID DriveType;
    WCHAR szDeviceName[64];
    WCHAR szSerialNumber[32];
    WCHAR szRevision[32];
    WORD ScsiPort;
    WORD ScsiBus;
    WORD ScsiTarget;
    WORD ScsiLun;
    DWORD dwMountCount;
    SYSTEMTIME LastCleanedTs;
    NTMS_GUID SavedPartitionId;
    NTMS_GUID Library;
    GUID Reserved;
    DWORD dwDeferDismountDelay;
};

typedef struct _NTMS_DRIVETYPEINFORMATIONA _NTMS_DRIVETYPEINFORMATIONA, *P_NTMS_DRIVETYPEINFORMATIONA;

struct _NTMS_DRIVETYPEINFORMATIONA {
    CHAR szVendor[128];
    CHAR szProduct[128];
    DWORD NumberOfHeads;
    DWORD DeviceType;
};

typedef struct _NTMS_DRIVETYPEINFORMATIONW _NTMS_DRIVETYPEINFORMATIONW, *P_NTMS_DRIVETYPEINFORMATIONW;

struct _NTMS_DRIVETYPEINFORMATIONW {
    WCHAR szVendor[128];
    WCHAR szProduct[128];
    DWORD NumberOfHeads;
    DWORD DeviceType;
};

typedef struct _NTMS_I1_LIBRARYINFORMATION _NTMS_I1_LIBRARYINFORMATION, *P_NTMS_I1_LIBRARYINFORMATION;

struct _NTMS_I1_LIBRARYINFORMATION {
    DWORD LibraryType;
    NTMS_GUID CleanerSlot;
    NTMS_GUID CleanerSlotDefault;
    BOOL LibrarySupportsDriveCleaning;
    BOOL BarCodeReaderInstalled;
    DWORD InventoryMethod;
    DWORD dwCleanerUsesRemaining;
    DWORD FirstDriveNumber;
    DWORD dwNumberOfDrives;
    DWORD FirstSlotNumber;
    DWORD dwNumberOfSlots;
    DWORD FirstDoorNumber;
    DWORD dwNumberOfDoors;
    DWORD FirstPortNumber;
    DWORD dwNumberOfPorts;
    DWORD FirstChangerNumber;
    DWORD dwNumberOfChangers;
    DWORD dwNumberOfMedia;
    DWORD dwNumberOfMediaTypes;
    DWORD dwNumberOfLibRequests;
    GUID Reserved;
};

typedef struct _NTMS_I1_LIBREQUESTINFORMATIONA _NTMS_I1_LIBREQUESTINFORMATIONA, *P_NTMS_I1_LIBREQUESTINFORMATIONA;

struct _NTMS_I1_LIBREQUESTINFORMATIONA {
    DWORD OperationCode;
    DWORD OperationOption;
    DWORD State;
    NTMS_GUID PartitionId;
    NTMS_GUID DriveId;
    NTMS_GUID PhysMediaId;
    NTMS_GUID Library;
    NTMS_GUID SlotId;
    SYSTEMTIME TimeQueued;
    SYSTEMTIME TimeCompleted;
    CHAR szApplication[64];
    CHAR szUser[64];
    CHAR szComputer[64];
};

typedef struct _NTMS_I1_LIBREQUESTINFORMATIONW _NTMS_I1_LIBREQUESTINFORMATIONW, *P_NTMS_I1_LIBREQUESTINFORMATIONW;

struct _NTMS_I1_LIBREQUESTINFORMATIONW {
    DWORD OperationCode;
    DWORD OperationOption;
    DWORD State;
    NTMS_GUID PartitionId;
    NTMS_GUID DriveId;
    NTMS_GUID PhysMediaId;
    NTMS_GUID Library;
    NTMS_GUID SlotId;
    SYSTEMTIME TimeQueued;
    SYSTEMTIME TimeCompleted;
    WCHAR szApplication[64];
    WCHAR szUser[64];
    WCHAR szComputer[64];
};

typedef struct _NTMS_I1_OBJECTINFORMATIONA _NTMS_I1_OBJECTINFORMATIONA, *P_NTMS_I1_OBJECTINFORMATIONA;

typedef union _union_6854 _union_6854, *P_union_6854;

typedef struct _NTMS_DRIVEINFORMATIONA NTMS_DRIVEINFORMATIONA;

typedef struct _NTMS_DRIVETYPEINFORMATIONA NTMS_DRIVETYPEINFORMATIONA;

typedef struct _NTMS_I1_LIBRARYINFORMATION NTMS_I1_LIBRARYINFORMATION;

typedef struct _NTMS_CHANGERINFORMATIONA NTMS_CHANGERINFORMATIONA;

typedef struct _NTMS_CHANGERTYPEINFORMATIONA NTMS_CHANGERTYPEINFORMATIONA;

typedef struct _NTMS_STORAGESLOTINFORMATION _NTMS_STORAGESLOTINFORMATION, *P_NTMS_STORAGESLOTINFORMATION;

typedef struct _NTMS_STORAGESLOTINFORMATION NTMS_STORAGESLOTINFORMATION;

typedef struct _NTMS_IEDOORINFORMATION _NTMS_IEDOORINFORMATION, *P_NTMS_IEDOORINFORMATION;

typedef struct _NTMS_IEDOORINFORMATION NTMS_IEDOORINFORMATION;

typedef struct _NTMS_IEPORTINFORMATION _NTMS_IEPORTINFORMATION, *P_NTMS_IEPORTINFORMATION;

typedef struct _NTMS_IEPORTINFORMATION NTMS_IEPORTINFORMATION;

typedef struct _NTMS_I1_PMIDINFORMATIONA _NTMS_I1_PMIDINFORMATIONA, *P_NTMS_I1_PMIDINFORMATIONA;

typedef struct _NTMS_I1_PMIDINFORMATIONA NTMS_I1_PMIDINFORMATIONA;

typedef struct _NTMS_LMIDINFORMATION _NTMS_LMIDINFORMATION, *P_NTMS_LMIDINFORMATION;

typedef struct _NTMS_LMIDINFORMATION NTMS_LMIDINFORMATION;

typedef struct _NTMS_I1_PARTITIONINFORMATIONA _NTMS_I1_PARTITIONINFORMATIONA, *P_NTMS_I1_PARTITIONINFORMATIONA;

typedef struct _NTMS_I1_PARTITIONINFORMATIONA NTMS_I1_PARTITIONINFORMATIONA;

typedef struct _NTMS_MEDIAPOOLINFORMATION _NTMS_MEDIAPOOLINFORMATION, *P_NTMS_MEDIAPOOLINFORMATION;

typedef struct _NTMS_MEDIAPOOLINFORMATION NTMS_MEDIAPOOLINFORMATION;

typedef struct _NTMS_MEDIATYPEINFORMATION _NTMS_MEDIATYPEINFORMATION, *P_NTMS_MEDIATYPEINFORMATION;

typedef struct _NTMS_MEDIATYPEINFORMATION NTMS_MEDIATYPEINFORMATION;

typedef struct _NTMS_I1_LIBREQUESTINFORMATIONA NTMS_I1_LIBREQUESTINFORMATIONA;

typedef struct _NTMS_I1_OPREQUESTINFORMATIONA _NTMS_I1_OPREQUESTINFORMATIONA, *P_NTMS_I1_OPREQUESTINFORMATIONA;

typedef struct _NTMS_I1_OPREQUESTINFORMATIONA NTMS_I1_OPREQUESTINFORMATIONA;

struct _NTMS_I1_PARTITIONINFORMATIONA {
    NTMS_GUID PhysicalMedia;
    NTMS_GUID LogicalMedia;
    DWORD State;
    WORD Side;
    DWORD dwOmidLabelIdLength;
    BYTE OmidLabelId[255];
    CHAR szOmidLabelType[64];
    CHAR szOmidLabelInfo[256];
    DWORD dwMountCount;
    DWORD dwAllocateCount;
};

struct _NTMS_IEPORTINFORMATION {
    DWORD Number;
    DWORD Content;
    DWORD Position;
    WORD MaxExtendSecs;
    NTMS_GUID Library;
};

struct _NTMS_IEDOORINFORMATION {
    DWORD Number;
    DWORD State;
    WORD MaxOpenSecs;
    NTMS_GUID Library;
};

struct _NTMS_MEDIATYPEINFORMATION {
    DWORD MediaType;
    DWORD NumberOfSides;
    DWORD ReadWriteCharacteristics;
    DWORD DeviceType;
};

struct _NTMS_LMIDINFORMATION {
    NTMS_GUID MediaPool;
    DWORD dwNumberOfPartitions;
};

struct _NTMS_STORAGESLOTINFORMATION {
    DWORD Number;
    DWORD State;
    NTMS_GUID Library;
};

struct _NTMS_I1_OPREQUESTINFORMATIONA {
    DWORD Request;
    SYSTEMTIME Submitted;
    DWORD State;
    CHAR szMessage[127];
    DWORD Arg1Type;
    NTMS_GUID Arg1;
    DWORD Arg2Type;
    NTMS_GUID Arg2;
    CHAR szApplication[64];
    CHAR szUser[64];
    CHAR szComputer[64];
};

struct _NTMS_MEDIAPOOLINFORMATION {
    DWORD PoolType;
    NTMS_GUID MediaType;
    NTMS_GUID Parent;
    DWORD AllocationPolicy;
    DWORD DeallocationPolicy;
    DWORD dwMaxAllocates;
    DWORD dwNumberOfPhysicalMedia;
    DWORD dwNumberOfLogicalMedia;
    DWORD dwNumberOfMediaPools;
};

struct _NTMS_I1_PMIDINFORMATIONA {
    NTMS_GUID CurrentLibrary;
    NTMS_GUID MediaPool;
    NTMS_GUID Location;
    DWORD LocationType;
    NTMS_GUID MediaType;
    NTMS_GUID HomeSlot;
    CHAR szBarCode[64];
    DWORD BarCodeState;
    CHAR szSequenceNumber[32];
    DWORD MediaState;
    DWORD dwNumberOfPartitions;
};

union _union_6854 {
    NTMS_DRIVEINFORMATIONA Drive;
    NTMS_DRIVETYPEINFORMATIONA DriveType;
    NTMS_I1_LIBRARYINFORMATION Library;
    NTMS_CHANGERINFORMATIONA Changer;
    NTMS_CHANGERTYPEINFORMATIONA ChangerType;
    NTMS_STORAGESLOTINFORMATION StorageSlot;
    NTMS_IEDOORINFORMATION IEDoor;
    NTMS_IEPORTINFORMATION IEPort;
    NTMS_I1_PMIDINFORMATIONA PhysicalMedia;
    NTMS_LMIDINFORMATION LogicalMedia;
    NTMS_I1_PARTITIONINFORMATIONA Partition;
    NTMS_MEDIAPOOLINFORMATION MediaPool;
    NTMS_MEDIATYPEINFORMATION MediaType;
    NTMS_I1_LIBREQUESTINFORMATIONA LibRequest;
    NTMS_I1_OPREQUESTINFORMATIONA OpRequest;
};

struct _NTMS_I1_OBJECTINFORMATIONA {
    DWORD dwSize;
    DWORD dwType;
    SYSTEMTIME Created;
    SYSTEMTIME Modified;
    NTMS_GUID ObjectGuid;
    BOOL Enabled;
    DWORD dwOperationalState;
    CHAR szName[64];
    CHAR szDescription[127];
    union _union_6854 Info;
};

typedef struct _NTMS_I1_OBJECTINFORMATIONW _NTMS_I1_OBJECTINFORMATIONW, *P_NTMS_I1_OBJECTINFORMATIONW;

typedef union _union_6856 _union_6856, *P_union_6856;

typedef struct _NTMS_DRIVEINFORMATIONW NTMS_DRIVEINFORMATIONW;

typedef struct _NTMS_DRIVETYPEINFORMATIONW NTMS_DRIVETYPEINFORMATIONW;

typedef struct _NTMS_CHANGERINFORMATIONW NTMS_CHANGERINFORMATIONW;

typedef struct _NTMS_CHANGERTYPEINFORMATIONW NTMS_CHANGERTYPEINFORMATIONW;

typedef struct _NTMS_I1_PMIDINFORMATIONW _NTMS_I1_PMIDINFORMATIONW, *P_NTMS_I1_PMIDINFORMATIONW;

typedef struct _NTMS_I1_PMIDINFORMATIONW NTMS_I1_PMIDINFORMATIONW;

typedef struct _NTMS_I1_PARTITIONINFORMATIONW _NTMS_I1_PARTITIONINFORMATIONW, *P_NTMS_I1_PARTITIONINFORMATIONW;

typedef struct _NTMS_I1_PARTITIONINFORMATIONW NTMS_I1_PARTITIONINFORMATIONW;

typedef struct _NTMS_I1_LIBREQUESTINFORMATIONW NTMS_I1_LIBREQUESTINFORMATIONW;

typedef struct _NTMS_I1_OPREQUESTINFORMATIONW _NTMS_I1_OPREQUESTINFORMATIONW, *P_NTMS_I1_OPREQUESTINFORMATIONW;

typedef struct _NTMS_I1_OPREQUESTINFORMATIONW NTMS_I1_OPREQUESTINFORMATIONW;

struct _NTMS_I1_PMIDINFORMATIONW {
    NTMS_GUID CurrentLibrary;
    NTMS_GUID MediaPool;
    NTMS_GUID Location;
    DWORD LocationType;
    NTMS_GUID MediaType;
    NTMS_GUID HomeSlot;
    WCHAR szBarCode[64];
    DWORD BarCodeState;
    WCHAR szSequenceNumber[32];
    DWORD MediaState;
    DWORD dwNumberOfPartitions;
};

struct _NTMS_I1_OPREQUESTINFORMATIONW {
    DWORD Request;
    SYSTEMTIME Submitted;
    DWORD State;
    WCHAR szMessage[127];
    DWORD Arg1Type;
    NTMS_GUID Arg1;
    DWORD Arg2Type;
    NTMS_GUID Arg2;
    WCHAR szApplication[64];
    WCHAR szUser[64];
    WCHAR szComputer[64];
};

struct _NTMS_I1_PARTITIONINFORMATIONW {
    NTMS_GUID PhysicalMedia;
    NTMS_GUID LogicalMedia;
    DWORD State;
    WORD Side;
    DWORD dwOmidLabelIdLength;
    BYTE OmidLabelId[255];
    WCHAR szOmidLabelType[64];
    WCHAR szOmidLabelInfo[256];
    DWORD dwMountCount;
    DWORD dwAllocateCount;
};

union _union_6856 {
    NTMS_DRIVEINFORMATIONW Drive;
    NTMS_DRIVETYPEINFORMATIONW DriveType;
    NTMS_I1_LIBRARYINFORMATION Library;
    NTMS_CHANGERINFORMATIONW Changer;
    NTMS_CHANGERTYPEINFORMATIONW ChangerType;
    NTMS_STORAGESLOTINFORMATION StorageSlot;
    NTMS_IEDOORINFORMATION IEDoor;
    NTMS_IEPORTINFORMATION IEPort;
    NTMS_I1_PMIDINFORMATIONW PhysicalMedia;
    NTMS_LMIDINFORMATION LogicalMedia;
    NTMS_I1_PARTITIONINFORMATIONW Partition;
    NTMS_MEDIAPOOLINFORMATION MediaPool;
    NTMS_MEDIATYPEINFORMATION MediaType;
    NTMS_I1_LIBREQUESTINFORMATIONW LibRequest;
    NTMS_I1_OPREQUESTINFORMATIONW OpRequest;
};

struct _NTMS_I1_OBJECTINFORMATIONW {
    DWORD dwSize;
    DWORD dwType;
    SYSTEMTIME Created;
    SYSTEMTIME Modified;
    NTMS_GUID ObjectGuid;
    BOOL Enabled;
    DWORD dwOperationalState;
    WCHAR szName[64];
    WCHAR szDescription[127];
    union _union_6856 Info;
};

typedef struct _NTMS_LIBRARYINFORMATION _NTMS_LIBRARYINFORMATION, *P_NTMS_LIBRARYINFORMATION;

struct _NTMS_LIBRARYINFORMATION {
    DWORD LibraryType;
    NTMS_GUID CleanerSlot;
    NTMS_GUID CleanerSlotDefault;
    BOOL LibrarySupportsDriveCleaning;
    BOOL BarCodeReaderInstalled;
    DWORD InventoryMethod;
    DWORD dwCleanerUsesRemaining;
    DWORD FirstDriveNumber;
    DWORD dwNumberOfDrives;
    DWORD FirstSlotNumber;
    DWORD dwNumberOfSlots;
    DWORD FirstDoorNumber;
    DWORD dwNumberOfDoors;
    DWORD FirstPortNumber;
    DWORD dwNumberOfPorts;
    DWORD FirstChangerNumber;
    DWORD dwNumberOfChangers;
    DWORD dwNumberOfMedia;
    DWORD dwNumberOfMediaTypes;
    DWORD dwNumberOfLibRequests;
    GUID Reserved;
    BOOL AutoRecovery;
    DWORD dwFlags;
};

typedef struct _NTMS_LIBREQUESTINFORMATIONA _NTMS_LIBREQUESTINFORMATIONA, *P_NTMS_LIBREQUESTINFORMATIONA;

struct _NTMS_LIBREQUESTINFORMATIONA {
    DWORD OperationCode;
    DWORD OperationOption;
    DWORD State;
    NTMS_GUID PartitionId;
    NTMS_GUID DriveId;
    NTMS_GUID PhysMediaId;
    NTMS_GUID Library;
    NTMS_GUID SlotId;
    SYSTEMTIME TimeQueued;
    SYSTEMTIME TimeCompleted;
    CHAR szApplication[64];
    CHAR szUser[64];
    CHAR szComputer[64];
    DWORD dwErrorCode;
    NTMS_GUID WorkItemId;
    DWORD dwPriority;
};

typedef struct _NTMS_LIBREQUESTINFORMATIONW _NTMS_LIBREQUESTINFORMATIONW, *P_NTMS_LIBREQUESTINFORMATIONW;

struct _NTMS_LIBREQUESTINFORMATIONW {
    DWORD OperationCode;
    DWORD OperationOption;
    DWORD State;
    NTMS_GUID PartitionId;
    NTMS_GUID DriveId;
    NTMS_GUID PhysMediaId;
    NTMS_GUID Library;
    NTMS_GUID SlotId;
    SYSTEMTIME TimeQueued;
    SYSTEMTIME TimeCompleted;
    WCHAR szApplication[64];
    WCHAR szUser[64];
    WCHAR szComputer[64];
    DWORD dwErrorCode;
    NTMS_GUID WorkItemId;
    DWORD dwPriority;
};

typedef struct _NTMS_MOUNT_INFORMATION _NTMS_MOUNT_INFORMATION, *P_NTMS_MOUNT_INFORMATION;

struct _NTMS_MOUNT_INFORMATION {
    DWORD dwSize;
    LPVOID lpReserved;
};

typedef struct _NTMS_NOTIFICATIONINFORMATION _NTMS_NOTIFICATIONINFORMATION, *P_NTMS_NOTIFICATIONINFORMATION;

struct _NTMS_NOTIFICATIONINFORMATION {
    DWORD dwOperation;
    NTMS_GUID ObjectId;
};

typedef struct _NTMS_OBJECTINFORMATIONA _NTMS_OBJECTINFORMATIONA, *P_NTMS_OBJECTINFORMATIONA;

typedef union _union_6841 _union_6841, *P_union_6841;

typedef struct _NTMS_LIBRARYINFORMATION NTMS_LIBRARYINFORMATION;

typedef struct _NTMS_PMIDINFORMATIONA _NTMS_PMIDINFORMATIONA, *P_NTMS_PMIDINFORMATIONA;

typedef struct _NTMS_PMIDINFORMATIONA NTMS_PMIDINFORMATIONA;

typedef struct _NTMS_PARTITIONINFORMATIONA _NTMS_PARTITIONINFORMATIONA, *P_NTMS_PARTITIONINFORMATIONA;

typedef struct _NTMS_PARTITIONINFORMATIONA NTMS_PARTITIONINFORMATIONA;

typedef struct _NTMS_LIBREQUESTINFORMATIONA NTMS_LIBREQUESTINFORMATIONA;

typedef struct _NTMS_OPREQUESTINFORMATIONA _NTMS_OPREQUESTINFORMATIONA, *P_NTMS_OPREQUESTINFORMATIONA;

typedef struct _NTMS_OPREQUESTINFORMATIONA NTMS_OPREQUESTINFORMATIONA;

typedef struct _NTMS_COMPUTERINFORMATION NTMS_COMPUTERINFORMATION;

struct _NTMS_PARTITIONINFORMATIONA {
    NTMS_GUID PhysicalMedia;
    NTMS_GUID LogicalMedia;
    DWORD State;
    WORD Side;
    DWORD dwOmidLabelIdLength;
    BYTE OmidLabelId[255];
    CHAR szOmidLabelType[64];
    CHAR szOmidLabelInfo[256];
    DWORD dwMountCount;
    DWORD dwAllocateCount;
    LARGE_INTEGER Capacity;
};

struct _NTMS_PMIDINFORMATIONA {
    NTMS_GUID CurrentLibrary;
    NTMS_GUID MediaPool;
    NTMS_GUID Location;
    DWORD LocationType;
    NTMS_GUID MediaType;
    NTMS_GUID HomeSlot;
    CHAR szBarCode[64];
    DWORD BarCodeState;
    CHAR szSequenceNumber[32];
    DWORD MediaState;
    DWORD dwNumberOfPartitions;
    DWORD dwMediaTypeCode;
    DWORD dwDensityCode;
    NTMS_GUID MountedPartition;
};

struct _NTMS_OPREQUESTINFORMATIONA {
    DWORD Request;
    SYSTEMTIME Submitted;
    DWORD State;
    CHAR szMessage[256];
    DWORD Arg1Type;
    NTMS_GUID Arg1;
    DWORD Arg2Type;
    NTMS_GUID Arg2;
    CHAR szApplication[64];
    CHAR szUser[64];
    CHAR szComputer[64];
};

union _union_6841 {
    NTMS_DRIVEINFORMATIONA Drive;
    NTMS_DRIVETYPEINFORMATIONA DriveType;
    NTMS_LIBRARYINFORMATION Library;
    NTMS_CHANGERINFORMATIONA Changer;
    NTMS_CHANGERTYPEINFORMATIONA ChangerType;
    NTMS_STORAGESLOTINFORMATION StorageSlot;
    NTMS_IEDOORINFORMATION IEDoor;
    NTMS_IEPORTINFORMATION IEPort;
    NTMS_PMIDINFORMATIONA PhysicalMedia;
    NTMS_LMIDINFORMATION LogicalMedia;
    NTMS_PARTITIONINFORMATIONA Partition;
    NTMS_MEDIAPOOLINFORMATION MediaPool;
    NTMS_MEDIATYPEINFORMATION MediaType;
    NTMS_LIBREQUESTINFORMATIONA LibRequest;
    NTMS_OPREQUESTINFORMATIONA OpRequest;
    NTMS_COMPUTERINFORMATION Computer;
};

struct _NTMS_OBJECTINFORMATIONA {
    DWORD dwSize;
    DWORD dwType;
    SYSTEMTIME Created;
    SYSTEMTIME Modified;
    NTMS_GUID ObjectGuid;
    BOOL Enabled;
    DWORD dwOperationalState;
    CHAR szName[64];
    CHAR szDescription[127];
    union _union_6841 Info;
};

typedef struct _NTMS_OBJECTINFORMATIONW _NTMS_OBJECTINFORMATIONW, *P_NTMS_OBJECTINFORMATIONW;

typedef union _union_6843 _union_6843, *P_union_6843;

typedef struct _NTMS_PMIDINFORMATIONW _NTMS_PMIDINFORMATIONW, *P_NTMS_PMIDINFORMATIONW;

typedef struct _NTMS_PMIDINFORMATIONW NTMS_PMIDINFORMATIONW;

typedef struct _NTMS_PARTITIONINFORMATIONW _NTMS_PARTITIONINFORMATIONW, *P_NTMS_PARTITIONINFORMATIONW;

typedef struct _NTMS_PARTITIONINFORMATIONW NTMS_PARTITIONINFORMATIONW;

typedef struct _NTMS_LIBREQUESTINFORMATIONW NTMS_LIBREQUESTINFORMATIONW;

typedef struct _NTMS_OPREQUESTINFORMATIONW _NTMS_OPREQUESTINFORMATIONW, *P_NTMS_OPREQUESTINFORMATIONW;

typedef struct _NTMS_OPREQUESTINFORMATIONW NTMS_OPREQUESTINFORMATIONW;

struct _NTMS_OPREQUESTINFORMATIONW {
    DWORD Request;
    SYSTEMTIME Submitted;
    DWORD State;
    WCHAR szMessage[256];
    DWORD Arg1Type;
    NTMS_GUID Arg1;
    DWORD Arg2Type;
    NTMS_GUID Arg2;
    WCHAR szApplication[64];
    WCHAR szUser[64];
    WCHAR szComputer[64];
};

struct _NTMS_PARTITIONINFORMATIONW {
    NTMS_GUID PhysicalMedia;
    NTMS_GUID LogicalMedia;
    DWORD State;
    WORD Side;
    DWORD dwOmidLabelIdLength;
    BYTE OmidLabelId[255];
    WCHAR szOmidLabelType[64];
    WCHAR szOmidLabelInfo[256];
    DWORD dwMountCount;
    DWORD dwAllocateCount;
    LARGE_INTEGER Capacity;
};

struct _NTMS_PMIDINFORMATIONW {
    NTMS_GUID CurrentLibrary;
    NTMS_GUID MediaPool;
    NTMS_GUID Location;
    DWORD LocationType;
    NTMS_GUID MediaType;
    NTMS_GUID HomeSlot;
    WCHAR szBarCode[64];
    DWORD BarCodeState;
    WCHAR szSequenceNumber[32];
    DWORD MediaState;
    DWORD dwNumberOfPartitions;
    DWORD dwMediaTypeCode;
    DWORD dwDensityCode;
    NTMS_GUID MountedPartition;
};

union _union_6843 {
    NTMS_DRIVEINFORMATIONW Drive;
    NTMS_DRIVETYPEINFORMATIONW DriveType;
    NTMS_LIBRARYINFORMATION Library;
    NTMS_CHANGERINFORMATIONW Changer;
    NTMS_CHANGERTYPEINFORMATIONW ChangerType;
    NTMS_STORAGESLOTINFORMATION StorageSlot;
    NTMS_IEDOORINFORMATION IEDoor;
    NTMS_IEPORTINFORMATION IEPort;
    NTMS_PMIDINFORMATIONW PhysicalMedia;
    NTMS_LMIDINFORMATION LogicalMedia;
    NTMS_PARTITIONINFORMATIONW Partition;
    NTMS_MEDIAPOOLINFORMATION MediaPool;
    NTMS_MEDIATYPEINFORMATION MediaType;
    NTMS_LIBREQUESTINFORMATIONW LibRequest;
    NTMS_OPREQUESTINFORMATIONW OpRequest;
    NTMS_COMPUTERINFORMATION Computer;
};

struct _NTMS_OBJECTINFORMATIONW {
    DWORD dwSize;
    DWORD dwType;
    SYSTEMTIME Created;
    SYSTEMTIME Modified;
    NTMS_GUID ObjectGuid;
    BOOL Enabled;
    DWORD dwOperationalState;
    WCHAR szName[64];
    WCHAR szDescription[127];
    union _union_6843 Info;
};

typedef struct _NTMS_ALLOCATION_INFORMATION * LPNTMS_ALLOCATION_INFORMATION;

typedef struct _NTMS_ASYNC_IO * LPNTMS_ASYNC_IO;

typedef GUID * LPNTMS_GUID;

typedef struct _NTMS_I1_OBJECTINFORMATIONA * LPNTMS_I1_OBJECTINFORMATIONA;

typedef struct _NTMS_I1_OBJECTINFORMATIONW * LPNTMS_I1_OBJECTINFORMATIONW;

typedef struct _NTMS_MOUNT_INFORMATION * LPNTMS_MOUNT_INFORMATION;

typedef struct _NTMS_NOTIFICATIONINFORMATION * LPNTMS_NOTIFICATIONINFORMATION;

typedef struct _NTMS_OBJECTINFORMATIONA * LPNTMS_OBJECTINFORMATIONA;

typedef struct _NTMS_OBJECTINFORMATIONW * LPNTMS_OBJECTINFORMATIONW;

typedef struct _NTMS_ALLOCATION_INFORMATION NTMS_ALLOCATION_INFORMATION;

typedef struct _NTMS_ASYNC_IO NTMS_ASYNC_IO;

typedef struct NTMS_FILESYSTEM_INFO NTMS_FILESYSTEM_INFO, *PNTMS_FILESYSTEM_INFO;

struct NTMS_FILESYSTEM_INFO {
    WCHAR FileSystemType[64];
    WCHAR VolumeName[256];
    DWORD SerialNumber;
};

typedef struct _NTMS_I1_OBJECTINFORMATIONA NTMS_I1_OBJECTINFORMATIONA;

typedef struct _NTMS_I1_OBJECTINFORMATIONW NTMS_I1_OBJECTINFORMATIONW;

typedef struct _NTMS_MOUNT_INFORMATION NTMS_MOUNT_INFORMATION;

typedef struct _NTMS_NOTIFICATIONINFORMATION NTMS_NOTIFICATIONINFORMATION;

typedef struct _NTMS_OBJECTINFORMATIONA NTMS_OBJECTINFORMATIONA;

typedef struct _NTMS_OBJECTINFORMATIONW NTMS_OBJECTINFORMATIONW;

typedef enum NtmsAccessMask {
    NTMS_CONTROL_ACCESS=4,
    NTMS_MODIFY_ACCESS=2,
    NTMS_USE_ACCESS=1
} NtmsAccessMask;

typedef enum NtmsAllocateOptions {
    NTMS_ALLOCATE_ERROR_IF_UNAVAILABLE=4,
    NTMS_ALLOCATE_NEW=1,
    NTMS_ALLOCATE_NEXT=2
} NtmsAllocateOptions;

typedef enum NtmsAllocationPolicy {
    NTMS_ALLOCATE_FROMSCRATCH=1
} NtmsAllocationPolicy;

typedef enum NtmsAsyncOperations {
    NTMS_ASYNCOP_MOUNT=1
} NtmsAsyncOperations;

typedef enum NtmsAsyncStatus {
    NTMS_ASYNCSTATE_COMPLETE=4,
    NTMS_ASYNCSTATE_INPROCESS=3,
    NTMS_ASYNCSTATE_QUEUED=0,
    NTMS_ASYNCSTATE_WAIT_OPERATOR=2,
    NTMS_ASYNCSTATE_WAIT_RESOURCE=1
} NtmsAsyncStatus;

typedef enum NtmsBarCodeState {
    NTMS_BARCODESTATE_OK=1,
    NTMS_BARCODESTATE_UNREADABLE=2
} NtmsBarCodeState;

typedef enum NtmsCreateNtmsMediaOptions {
    NTMS_ERROR_ON_DUPLICATE=1
} NtmsCreateNtmsMediaOptions;

typedef enum NtmsCreateOptions {
    NTMS_CREATE_NEW=2,
    NTMS_OPEN_ALWAYS=3,
    NTMS_OPEN_EXISTING=1
} NtmsCreateOptions;

typedef enum NtmsDeallocationPolicy {
    NTMS_DEALLOCATE_TOSCRATCH=1
} NtmsDeallocationPolicy;

typedef enum NtmsDismountOptions {
    NTMS_DISMOUNT_DEFERRED=1,
    NTMS_DISMOUNT_IMMEDIATE=2
} NtmsDismountOptions;

typedef enum NtmsDoorState {
    NTMS_DOORSTATE_CLOSED=1,
    NTMS_DOORSTATE_OPEN=2,
    NTMS_DOORSTATE_UNKNOWN=0
} NtmsDoorState;

typedef enum NtmsDriveState {
    NTMS_DRIVESTATE_BEING_CLEANED=6,
    NTMS_DRIVESTATE_DISMOUNTABLE=7,
    NTMS_DRIVESTATE_DISMOUNTED=0,
    NTMS_DRIVESTATE_LOADED=2,
    NTMS_DRIVESTATE_MOUNTED=1,
    NTMS_DRIVESTATE_UNLOADED=5
} NtmsDriveState;

typedef enum NtmsDriveType {
    NTMS_UNKNOWN_DRIVE=0
} NtmsDriveType;

typedef enum NtmsEjectOperation {
    NTMS_EJECT_ASK_USER=5,
    NTMS_EJECT_FORCE=3,
    NTMS_EJECT_IMMEDIATE=4,
    NTMS_EJECT_QUEUE=2,
    NTMS_EJECT_START=0,
    NTMS_EJECT_STOP=1
} NtmsEjectOperation;

typedef enum NtmsEnumerateOption {
    NTMS_ENUM_DEFAULT=0,
    NTMS_ENUM_ROOTPOOL=1
} NtmsEnumerateOption;

typedef enum NtmsInjectOperation {
    NTMS_INJECT_RETRACT=2,
    NTMS_INJECT_START=0,
    NTMS_INJECT_STARTMANY=3,
    NTMS_INJECT_STOP=1
} NtmsInjectOperation;

typedef enum NtmsInventoryMethod {
    NTMS_INVENTORY_DEFAULT=3,
    NTMS_INVENTORY_FAST=1,
    NTMS_INVENTORY_MAX=6,
    NTMS_INVENTORY_NONE=0,
    NTMS_INVENTORY_OMID=2,
    NTMS_INVENTORY_SLOT=4,
    NTMS_INVENTORY_STOP=5
} NtmsInventoryMethod;

typedef enum NtmsLibraryFlags {
    NTMS_LIBRARYFLAG_AUTODETECTCHANGE=4,
    NTMS_LIBRARYFLAG_CLEANERPRESENT=2,
    NTMS_LIBRARYFLAG_FIXEDOFFLINE=1,
    NTMS_LIBRARYFLAG_IGNORECLEANERUSESREMAINING=8,
    NTMS_LIBRARYFLAG_RECOGNIZECLEANERBARCODE=16
} NtmsLibraryFlags;

typedef enum NtmsLibraryType {
    NTMS_LIBRARYTYPE_OFFLINE=1,
    NTMS_LIBRARYTYPE_ONLINE=2,
    NTMS_LIBRARYTYPE_STANDALONE=3,
    NTMS_LIBRARYTYPE_UNKNOWN=0
} NtmsLibraryType;

typedef enum NtmsLibRequestFlags {
    NTMS_LIBREQFLAGS_NOAUTOPURGE=1,
    NTMS_LIBREQFLAGS_NOFAILEDPURGE=2
} NtmsLibRequestFlags;

typedef enum NtmsLmOperation {
    NTMS_LM_CLASSIFY=19,
    NTMS_LM_CLEANDRIVE=15,
    NTMS_LM_DISABLECHANGER=1,
    NTMS_LM_DISABLEDRIVE=3,
    NTMS_LM_DISABLELIBRARY=1,
    NTMS_LM_DISABLEMEDIA=5,
    NTMS_LM_DISMOUNT=16,
    NTMS_LM_DOORACCESS=9,
    NTMS_LM_EJECT=10,
    NTMS_LM_EJECTCLEANER=11,
    NTMS_LM_ENABLECHANGER=2,
    NTMS_LM_ENABLEDRIVE=4,
    NTMS_LM_ENABLELIBRARY=2,
    NTMS_LM_ENABLEMEDIA=6,
    NTMS_LM_INJECT=12,
    NTMS_LM_INJECTCLEANER=13,
    NTMS_LM_INVENTORY=8,
    NTMS_LM_MAXWORKITEM=22,
    NTMS_LM_MOUNT=17,
    NTMS_LM_PROCESSOMID=14,
    NTMS_LM_RELEASECLEANER=21,
    NTMS_LM_REMOVE=0,
    NTMS_LM_RESERVECLEANER=20,
    NTMS_LM_UPDATEOMID=7,
    NTMS_LM_WRITESCRATCH=18
} NtmsLmOperation;

typedef enum NtmsLmState {
    NTMS_LM_CANCELLED=7,
    NTMS_LM_DEFERRED=6,
    NTMS_LM_DEFFERED=6,
    NTMS_LM_FAILED=3,
    NTMS_LM_INPROCESS=1,
    NTMS_LM_INVALID=4,
    NTMS_LM_PASSED=2,
    NTMS_LM_QUEUED=0,
    NTMS_LM_STOPPED=8,
    NTMS_LM_WAITING=5
} NtmsLmState;

typedef enum NtmsMediaPoolPolicy {
    NTMS_POOLPOLICY_KEEPOFFLINEIMPORT=2,
    NTMS_POOLPOLICY_PURGEOFFLINESCRATCH=1
} NtmsMediaPoolPolicy;

typedef enum NtmsMediaState {
    NTMS_MEDIASTATE_IDLE=0,
    NTMS_MEDIASTATE_INUSE=1,
    NTMS_MEDIASTATE_LOADED=3,
    NTMS_MEDIASTATE_MOUNTED=2,
    NTMS_MEDIASTATE_OPERROR=5,
    NTMS_MEDIASTATE_OPREQ=6,
    NTMS_MEDIASTATE_UNLOADED=4
} NtmsMediaState;

typedef enum NtmsMountOptions {
    NTMS_MOUNT_ERROR_IF_OFFLINE=8,
    NTMS_MOUNT_ERROR_IF_UNAVAILABLE=4,
    NTMS_MOUNT_ERROR_NOT_AVAILABLE=4,
    NTMS_MOUNT_ERROR_OFFLINE=8,
    NTMS_MOUNT_NOWAIT=32,
    NTMS_MOUNT_READ=1,
    NTMS_MOUNT_SPECIFIC_DRIVE=16,
    NTMS_MOUNT_WRITE=2
} NtmsMountOptions;

typedef enum NtmsMountPriority {
    NTMS_PRIORITY_DEFAULT=0,
    NTMS_PRIORITY_HIGH=7,
    NTMS_PRIORITY_HIGHEST=15,
    NTMS_PRIORITY_LOW=1,
    NTMS_PRIORITY_LOWEST=2,
    NTMS_PRIORITY_NORMAL=0
} NtmsMountPriority;

typedef enum NtmsNotificationOperations {
    NTMS_EVENT_COMPLETE=5,
    NTMS_EVENT_SIGNAL=4,
    NTMS_OBJ_DELETE=3,
    NTMS_OBJ_INSERT=2,
    NTMS_OBJ_UPDATE=1
} NtmsNotificationOperations;

typedef enum NtmsObjectsTypes {
    NTMS_CHANGER=2,
    NTMS_CHANGER_TYPE=3,
    NTMS_COMPUTER=4,
    NTMS_DRIVE=5,
    NTMS_DRIVE_TYPE=6,
    NTMS_IEDOOR=7,
    NTMS_IEPORT=8,
    NTMS_LIBRARY=9,
    NTMS_LIBREQUEST=10,
    NTMS_LOGICAL_MEDIA=11,
    NTMS_MEDIA_POOL=12,
    NTMS_MEDIA_TYPE=13,
    NTMS_NUMBER_OF_OBJECT_TYPES=19,
    NTMS_OBJECT=1,
    NTMS_OPREQUEST=17,
    NTMS_PARTITION=14,
    NTMS_PHYSICAL_MEDIA=15,
    NTMS_STORAGESLOT=16,
    NTMS_UI_DESTINATION=18,
    NTMS_UNKNOWN=0
} NtmsObjectsTypes;

typedef enum NtmsOperationalState {
    NTMS_INITIALIZING=10,
    NTMS_NEEDS_SERVICE=20,
    NTMS_NOT_PRESENT=21,
    NTMS_READY=0
} NtmsOperationalState;

typedef enum NtmsOpreqCommand {
    NTMS_OPREQ_CLEANER=2,
    NTMS_OPREQ_DEVICESERVICE=3,
    NTMS_OPREQ_MESSAGE=5,
    NTMS_OPREQ_MOVEMEDIA=4,
    NTMS_OPREQ_NEWMEDIA=1,
    NTMS_OPREQ_UNKNOWN=0
} NtmsOpreqCommand;

typedef enum NtmsOpreqState {
    NTMS_OPSTATE_ACTIVE=2,
    NTMS_OPSTATE_COMPLETE=5,
    NTMS_OPSTATE_INPROGRESS=3,
    NTMS_OPSTATE_REFUSED=4,
    NTMS_OPSTATE_SUBMITTED=1,
    NTMS_OPSTATE_UNKNOWN=0
} NtmsOpreqState;

typedef enum NtmsOpRequestFlags {
    NTMS_OPREQFLAGS_NOALERTS=16,
    NTMS_OPREQFLAGS_NOAUTOPURGE=1,
    NTMS_OPREQFLAGS_NOFAILEDPURGE=2,
    NTMS_OPREQFLAGS_NOTRAYICON=32
} NtmsOpRequestFlags;

typedef enum NtmsPartitionState {
    NTMS_PARTSTATE_ALLOCATED=5,
    NTMS_PARTSTATE_AVAILABLE=4,
    NTMS_PARTSTATE_COMPLETE=6,
    NTMS_PARTSTATE_DECOMMISSIONED=3,
    NTMS_PARTSTATE_FOREIGN=7,
    NTMS_PARTSTATE_IMPORT=8,
    NTMS_PARTSTATE_INCOMPATIBLE=2,
    NTMS_PARTSTATE_RESERVED=9,
    NTMS_PARTSTATE_UNKNOWN=0,
    NTMS_PARTSTATE_UNPREPARED=1
} NtmsPartitionState;

typedef enum NtmsPoolType {
    NTMS_POOLTYPE_APPLICATION=1000,
    NTMS_POOLTYPE_FOREIGN=2,
    NTMS_POOLTYPE_IMPORT=3,
    NTMS_POOLTYPE_SCRATCH=1,
    NTMS_POOLTYPE_UNKNOWN=0
} NtmsPoolType;

typedef enum NtmsPortContent {
    NTMS_PORTCONTENT_EMPTY=2,
    NTMS_PORTCONTENT_FULL=1,
    NTMS_PORTCONTENT_UNKNOWN=0
} NtmsPortContent;

typedef enum NtmsPortPosition {
    NTMS_PORTPOSITION_EXTENDED=1,
    NTMS_PORTPOSITION_RETRACTED=2,
    NTMS_PORTPOSITION_UNKNOWN=0
} NtmsPortPosition;

typedef enum NtmsReadWriteCharacteristics {
    NTMS_MEDIARW_READONLY=3,
    NTMS_MEDIARW_REWRITABLE=1,
    NTMS_MEDIARW_UNKNOWN=0,
    NTMS_MEDIARW_WRITEONCE=2
} NtmsReadWriteCharacteristics;

typedef enum NtmsSessionOptions {
    NTMS_SESSION_QUERYEXPEDITE=1
} NtmsSessionOptions;

typedef enum NtmsSlotState {
    NTMS_SLOTSTATE_EMPTY=2,
    NTMS_SLOTSTATE_FULL=1,
    NTMS_SLOTSTATE_NEEDSINVENTORY=4,
    NTMS_SLOTSTATE_NOTPRESENT=3,
    NTMS_SLOTSTATE_UNKNOWN=0
} NtmsSlotState;

typedef enum NtmsUIOperations {
    NTMS_UIDEST_ADD=1,
    NTMS_UIDEST_DELETE=2,
    NTMS_UIDEST_DELETEALL=3,
    NTMS_UIOPERATION_MAX=4
} NtmsUIOperations;

typedef enum NtmsUITypes {
    NTMS_UITYPE_ERR=3,
    NTMS_UITYPE_INFO=1,
    NTMS_UITYPE_INVALID=0,
    NTMS_UITYPE_MAX=4,
    NTMS_UITYPE_REQ=2
} NtmsUITypes;

#define AUDIT_ENUMERATE_USERS 16

#define AUDIT_GENERIC_EXECUTE 131072

#define AUDIT_QUERY_MISC_POLICY 64

#define AUDIT_QUERY_SYSTEM_POLICY 2

#define AUDIT_QUERY_USER_POLICY 8

#define AUDIT_SET_MISC_POLICY 32

#define AUDIT_SET_SYSTEM_POLICY 1

#define AUDIT_SET_USER_POLICY 4

#define AUTH_REQ_ALLOW_ENC_TKT_IN_SKEY 32

#define AUTH_REQ_ALLOW_FORWARDABLE 1

#define AUTH_REQ_ALLOW_NOADDRESS 16

#define AUTH_REQ_ALLOW_POSTDATE 4

#define AUTH_REQ_ALLOW_PROXIABLE 2

#define AUTH_REQ_ALLOW_RENEWABLE 8

#define AUTH_REQ_ALLOW_S4U_DELEGATE 2048

#define AUTH_REQ_ALLOW_VALIDATE 64

#define AUTH_REQ_OK_AS_DELEGATE 256

#define AUTH_REQ_PREAUTH_REQUIRED 512

#define AUTH_REQ_TRANSITIVE_TRUST 1024

#define AUTH_REQ_VALIDATE_CLIENT 128

#define DOMAIN_LOCKOUT_ADMINS 8

#define DOMAIN_NO_LM_OWF_CHANGE 64

#define DOMAIN_PASSWORD_COMPLEX 1

#define DOMAIN_PASSWORD_NO_ANON_CHANGE 2

#define DOMAIN_PASSWORD_NO_CLEAR_CHANGE 4

#define DOMAIN_PASSWORD_STORE_CLEARTEXT 16

#define DOMAIN_REFUSE_PASSWORD_CHANGE 32

#define DS_UNKNOWN_ADDRESS_TYPE 0

#define KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES 1

#define KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_DUPLICATES 1

#define KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_LOGONHOURS 2

#define KERB_CERTIFICATE_S4U_LOGON_FLAG_FAIL_IF_NT_AUTH_POLICY_REQUIRED 4

#define KERB_CHECKSUM_CRC32 1

#define KERB_CHECKSUM_DES_MAC -133

#define KERB_CHECKSUM_DES_MAC_MD5 -134

#define KERB_CHECKSUM_HMAC_MD5 -138

#define KERB_CHECKSUM_HMAC_SHA1_96_AES128 15

#define KERB_CHECKSUM_HMAC_SHA1_96_AES128_Ki -150

#define KERB_CHECKSUM_HMAC_SHA1_96_AES256 16

#define KERB_CHECKSUM_HMAC_SHA1_96_AES256_Ki -151

#define KERB_CHECKSUM_KRB_DES_MAC 4

#define KERB_CHECKSUM_KRB_DES_MAC_K 5

#define KERB_CHECKSUM_LM -130

#define KERB_CHECKSUM_MD25 -135

#define KERB_CHECKSUM_MD4 2

#define KERB_CHECKSUM_MD5 7

#define KERB_CHECKSUM_MD5_DES 8

#define KERB_CHECKSUM_MD5_HMAC -137

#define KERB_CHECKSUM_NONE 0

#define KERB_CHECKSUM_RC4_MD5 -136

#define KERB_CHECKSUM_REAL_CRC32 -132

#define KERB_CHECKSUM_SHA1 -131

#define KERB_CHECKSUM_SHA1_NEW 14

#define KERB_DECRYPT_FLAG_DEFAULT_KEY 1

#define KERB_ETYPE_AES128_CTS_HMAC_SHA1_96 17

#define KERB_ETYPE_AES128_CTS_HMAC_SHA1_96_PLAIN -148

#define KERB_ETYPE_AES256_CTS_HMAC_SHA1_96 18

#define KERB_ETYPE_AES256_CTS_HMAC_SHA1_96_PLAIN -149

#define KERB_ETYPE_DEFAULT 0

#define KERB_ETYPE_DES3_CBC_MD5 5

#define KERB_ETYPE_DES3_CBC_SHA1 7

#define KERB_ETYPE_DES3_CBC_SHA1_KD 16

#define KERB_ETYPE_DES_CBC_CRC 1

#define KERB_ETYPE_DES_CBC_MD4 2

#define KERB_ETYPE_DES_CBC_MD5 3

#define KERB_ETYPE_DES_CBC_MD5_NT 20

#define KERB_ETYPE_DES_EDE3_CBC_ENV 15

#define KERB_ETYPE_DES_PLAIN -132

#define KERB_ETYPE_DSA_SHA1_CMS 9

#define KERB_ETYPE_DSA_SIGN 8

#define KERB_ETYPE_NULL 0

#define KERB_ETYPE_PKCS7_PUB 13

#define KERB_ETYPE_RC2_CBC_ENV 12

#define KERB_ETYPE_RC4_HMAC_NT 23

#define KERB_ETYPE_RC4_HMAC_NT_EXP 24

#define KERB_ETYPE_RC4_HMAC_OLD -133

#define KERB_ETYPE_RC4_HMAC_OLD_EXP -135

#define KERB_ETYPE_RC4_LM -130

#define KERB_ETYPE_RC4_MD4 -128

#define KERB_ETYPE_RC4_PLAIN -140

#define KERB_ETYPE_RC4_PLAIN2 -129

#define KERB_ETYPE_RC4_PLAIN_EXP -141

#define KERB_ETYPE_RC4_PLAIN_OLD -134

#define KERB_ETYPE_RC4_PLAIN_OLD_EXP -136

#define KERB_ETYPE_RC4_SHA -131

#define KERB_ETYPE_RSA_ENV 13

#define KERB_ETYPE_RSA_ES_OEAP_ENV 14

#define KERB_ETYPE_RSA_MD5_CMS 10

#define KERB_ETYPE_RSA_PRIV 9

#define KERB_ETYPE_RSA_PUB 10

#define KERB_ETYPE_RSA_PUB_MD5 11

#define KERB_ETYPE_RSA_PUB_SHA1 12

#define KERB_ETYPE_RSA_SHA1_CMS 11

#define KERB_LOGON_FLAG_ALLOW_EXPIRED_TICKET 1

#define KERB_PURGE_ALL_TICKETS 1

#define KERB_REFRESH_SCCRED_GETTGT 1

#define KERB_REFRESH_SCCRED_RELEASE 0

#define KERB_REQUEST_ADD_CREDENTIAL 1

#define KERB_REQUEST_REMOVE_CREDENTIAL 4

#define KERB_REQUEST_REPLACE_CREDENTIAL 2

#define KERB_RETRIEVE_TICKET_AS_KERB_CRED 8

#define KERB_RETRIEVE_TICKET_CACHE_TICKET 32

#define KERB_RETRIEVE_TICKET_DEFAULT 0

#define KERB_RETRIEVE_TICKET_DONT_USE_CACHE 1

#define KERB_RETRIEVE_TICKET_MAX_LIFETIME 64

#define KERB_RETRIEVE_TICKET_USE_CACHE_ONLY 2

#define KERB_RETRIEVE_TICKET_USE_CREDHANDLE 4

#define KERB_RETRIEVE_TICKET_WITH_SEC_CRED 16

#define KERB_S4U_LOGON_FLAG_CHECK_LOGONHOURS 2

#define KERB_SETPASS_USE_CREDHANDLE 2

#define KERB_SETPASS_USE_LOGONID 1

#define KERB_TICKET_FLAGS_forwardable 1073741824

#define KERB_TICKET_FLAGS_forwarded 536870912

#define KERB_TICKET_FLAGS_hw_authent 1048576

#define KERB_TICKET_FLAGS_initial 4194304

#define KERB_TICKET_FLAGS_invalid 16777216

#define KERB_TICKET_FLAGS_may_postdate 67108864

#define KERB_TICKET_FLAGS_name_canonicalize 65536

#define KERB_TICKET_FLAGS_ok_as_delegate 262144

#define KERB_TICKET_FLAGS_postdated 33554432

#define KERB_TICKET_FLAGS_pre_authent 2097152

#define KERB_TICKET_FLAGS_proxiable 268435456

#define KERB_TICKET_FLAGS_proxy 134217728

#define KERB_TICKET_FLAGS_renewable 8388608

#define KERB_TICKET_FLAGS_reserved 2147483648

#define KERB_TICKET_FLAGS_reserved1 1

#define KERB_TRANSFER_CRED_WITH_TICKETS 1

#define KERB_USE_DEFAULT_TICKET_FLAGS 0

#define KERB_WRAP_NO_ENCRYPT 2147483649

#define KERBEROS_REVISION 6

#define KERBEROS_VERSION 5

#define KRB_NT_ENT_PRINCIPAL_AND_ID -130

#define KRB_NT_ENTERPRISE_PRINCIPAL 10

#define KRB_NT_MS_BRANCH_ID -133

#define KRB_NT_MS_PRINCIPAL -128

#define KRB_NT_MS_PRINCIPAL_AND_ID -129

#define KRB_NT_PRINCIPAL 1

#define KRB_NT_PRINCIPAL_AND_ID -131

#define KRB_NT_SRV_HST 3

#define KRB_NT_SRV_INST 2

#define KRB_NT_SRV_INST_AND_ID -132

#define KRB_NT_SRV_XHST 4

#define KRB_NT_UID 5

#define KRB_NT_UNKNOWN 0

#define KRB_NT_X500_PRINCIPAL 6

#define LOGON_CACHED_ACCOUNT 4

#define LOGON_EXTRA_SIDS 32

#define LOGON_GRACE_LOGON 16777216

#define LOGON_GUEST 1

#define LOGON_LM_V2 4096

#define LOGON_NO_OPTIMIZED 131072

#define LOGON_NOENCRYPTION 2

#define LOGON_NT_V2 2048

#define LOGON_NTLM_V2 8192

#define LOGON_NTLMV2_ENABLED 256

#define LOGON_OPTIMIZED 16384

#define LOGON_PKINIT 65536

#define LOGON_PROFILE_PATH_RETURNED 1024

#define LOGON_RESOURCE_GROUPS 512

#define LOGON_SERVER_TRUST_ACCOUNT 128

#define LOGON_SUBAUTH_SESSION_KEY 64

#define LOGON_USED_LM_PASSWORD 8

#define LOGON_WINLOGON 32768

#define LSA_FTRECORD_DISABLED_REASONS 65535

#define LSA_MODE_INDIVIDUAL_ACCOUNTS 2

#define LSA_MODE_LOG_FULL 8

#define LSA_MODE_MANDATORY_ACCESS 4

#define LSA_MODE_PASSWORD_PROTECTED 1

#define LSA_NB_DISABLED_ADMIN 4

#define LSA_NB_DISABLED_CONFLICT 8

#define LSA_SID_DISABLED_ADMIN 1

#define LSA_SID_DISABLED_CONFLICT 2

#define LSA_TLN_DISABLED_ADMIN 2

#define LSA_TLN_DISABLED_CONFLICT 4

#define LSA_TLN_DISABLED_NEW 1

#define MAX_FOREST_TRUST_BINARY_DATA_SIZE 131072

#define MAX_RECORDS_IN_FOREST_TRUST_INFO 4000

#define MSV1_0_ALLOW_FORCE_GUEST 8192

#define MSV1_0_ALLOW_MSVCHAPV2 65536

#define MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT 32

#define MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT 2048

#define MSV1_0_AV_FLAG_FORCE_GUEST 1

#define MSV1_0_AV_FLAG_MIC_HANDSHAKE_MESSAGES 2

#define MSV1_0_CHALLENGE_LENGTH 8

#define MSV1_0_CHECK_LOGONHOURS_FOR_S4U 262144

#define MSV1_0_CLEARTEXT_PASSWORD_ALLOWED 2

#define MSV1_0_CLEARTEXT_PASSWORD_SUPPLIED 16384

#define MSV1_0_CRED_LM_PRESENT 1

#define MSV1_0_CRED_NT_PRESENT 2

#define MSV1_0_CRED_VERSION 0

#define MSV1_0_DISABLE_PERSONAL_FALLBACK 4096

#define MSV1_0_DONT_TRY_GUEST_ACCOUNT 16

#define MSV1_0_LANMAN_SESSION_KEY_LENGTH 8

#define MSV1_0_MAX_AVL_SIZE 64000

#define MSV1_0_MAX_NTLM3_LIFE 129600

#define MSV1_0_MNS_LOGON 16777216

#define MSV1_0_NTLM3_OWF_LENGTH 16

#define MSV1_0_NTLM3_RESPONSE_LENGTH 16

#define MSV1_0_OWF_PASSWORD_LENGTH 16

#define MSV1_0_RETURN_PASSWORD_EXPIRY 64

#define MSV1_0_RETURN_PROFILE_PATH 512

#define MSV1_0_RETURN_USER_PARAMETERS 8

#define MSV1_0_S4U2SELF 131072

#define MSV1_0_S4U_LOGON_FLAG_CHECK_LOGONHOURS 2

#define MSV1_0_SUBAUTHENTICATION_DLL 4278190080

#define MSV1_0_SUBAUTHENTICATION_DLL_EX 1048576

#define MSV1_0_SUBAUTHENTICATION_DLL_IIS 132

#define MSV1_0_SUBAUTHENTICATION_DLL_RAS 2

#define MSV1_0_SUBAUTHENTICATION_DLL_SHIFT 24

#define MSV1_0_SUBAUTHENTICATION_FLAGS 4278190080

#define MSV1_0_TRY_GUEST_ACCOUNT_ONLY 256

#define MSV1_0_TRY_SPECIFIED_DOMAIN_ONLY 1024

#define MSV1_0_UPDATE_LOGON_STATISTICS 4

#define MSV1_0_USE_CLIENT_CHALLENGE 128

#define MSV1_0_USE_DOMAIN_FOR_ROUTING_ONLY 32768

#define MSV1_0_USER_SESSION_KEY_LENGTH 16

#define NEGOTIATE_MAX_PREFIX 32

#define PER_USER_AUDIT_FAILURE_EXCLUDE 8

#define PER_USER_AUDIT_FAILURE_INCLUDE 4

#define PER_USER_AUDIT_NONE 16

#define PER_USER_AUDIT_SUCCESS_EXCLUDE 2

#define PER_USER_AUDIT_SUCCESS_INCLUDE 1

#define PER_USER_POLICY_UNCHANGED 0

#define POLICY_AUDIT_EVENT_FAILURE 2

#define POLICY_AUDIT_EVENT_NONE 4

#define POLICY_AUDIT_EVENT_SUCCESS 1

#define POLICY_AUDIT_EVENT_UNCHANGED 0

#define POLICY_AUDIT_LOG_ADMIN 512

#define POLICY_CREATE_ACCOUNT 16

#define POLICY_CREATE_PRIVILEGE 64

#define POLICY_CREATE_SECRET 32

#define POLICY_GET_PRIVATE_INFORMATION 4

#define POLICY_KERBEROS_VALIDATE_CLIENT 128

#define POLICY_LOOKUP_NAMES 2048

#define POLICY_NOTIFICATION 4096

#define POLICY_SERVER_ADMIN 1024

#define POLICY_SET_AUDIT_REQUIREMENTS 256

#define POLICY_SET_DEFAULT_QUOTA_LIMITS 128

#define POLICY_TRUST_ADMIN 8

#define POLICY_VIEW_AUDIT_INFORMATION 2

#define POLICY_VIEW_LOCAL_INFORMATION 1

#define RTL_ENCRYPT_MEMORY_SIZE 8

#define RTL_ENCRYPT_OPTION_CROSS_PROCESS 1

#define RTL_ENCRYPT_OPTION_SAME_LOGON 2

#define SE_ADT_OBJECT_ONLY 1

#define SE_ADT_PARAMETER_EXTENSIBLE_AUDIT 4

#define SE_ADT_PARAMETER_GENERIC_AUDIT 8

#define SE_ADT_PARAMETER_WRITE_SYNCHRONOUS 16

#define SE_ADT_PARAMETERS_SELF_RELATIVE 1

#define SE_ADT_PARAMETERS_SEND_TO_LSA 2

#define SE_MAX_AUDIT_PARAMETERS 32

#define SE_MAX_GENERIC_AUDIT_PARAMETERS 28

#define TRUST_ATTRIBUTE_CROSS_ORGANIZATION 16

#define TRUST_ATTRIBUTE_FOREST_TRANSITIVE 8

#define TRUST_ATTRIBUTE_NON_TRANSITIVE 1

#define TRUST_ATTRIBUTE_QUARANTINED_DOMAIN 4

#define TRUST_ATTRIBUTE_TREAT_AS_EXTERNAL 64

#define TRUST_ATTRIBUTE_TRUST_USES_AES_KEYS 256

#define TRUST_ATTRIBUTE_TRUST_USES_RC4_ENCRYPTION 128

#define TRUST_ATTRIBUTE_UPLEVEL_ONLY 2

#define TRUST_ATTRIBUTE_WITHIN_FOREST 32

#define TRUST_ATTRIBUTES_USER 4278190080

#define TRUST_ATTRIBUTES_VALID 4278452223

#define TRUST_AUTH_TYPE_CLEAR 2

#define TRUST_AUTH_TYPE_NONE 0

#define TRUST_AUTH_TYPE_NT4OWF 1

#define TRUST_AUTH_TYPE_VERSION 3

#define TRUST_DIRECTION_BIDIRECTIONAL 3

#define TRUST_DIRECTION_DISABLED 0

#define TRUST_DIRECTION_INBOUND 1

#define TRUST_DIRECTION_OUTBOUND 2

#define TRUST_TYPE_DOWNLEVEL 1

#define TRUST_TYPE_MIT 3

#define TRUST_TYPE_UPLEVEL 2

typedef struct _AUDIT_POLICY_INFORMATION _AUDIT_POLICY_INFORMATION, *P_AUDIT_POLICY_INFORMATION;

struct _AUDIT_POLICY_INFORMATION {
    GUID AuditSubCategoryGuid;
    ULONG AuditingInformation;
    GUID AuditCategoryGuid;
};

typedef struct _DOMAIN_PASSWORD_INFORMATION _DOMAIN_PASSWORD_INFORMATION, *P_DOMAIN_PASSWORD_INFORMATION;

struct _DOMAIN_PASSWORD_INFORMATION {
    USHORT MinPasswordLength;
    USHORT PasswordHistoryLength;
    ULONG PasswordProperties;
    LARGE_INTEGER MaxPasswordAge;
    LARGE_INTEGER MinPasswordAge;
};

typedef struct _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST, *P_KERB_ADD_BINDING_CACHE_ENTRY_REQUEST;

typedef enum _KERB_PROTOCOL_MESSAGE_TYPE {
    KerbAddBindingCacheEntryMessage=10,
    KerbAddExtraCredentialsExMessage=22,
    KerbAddExtraCredentialsMessage=17,
    KerbChangeMachinePasswordMessage=2,
    KerbChangePasswordMessage=7,
    KerbDebugRequestMessage=0,
    KerbDecryptDataMessage=9,
    KerbPurgeTicketCacheExMessage=15,
    KerbPurgeTicketCacheMessage=6,
    KerbQuerySupplementalCredentialsMessage=18,
    KerbQueryTicketCacheEx2Message=20,
    KerbQueryTicketCacheExMessage=14,
    KerbQueryTicketCacheMessage=1,
    KerbRefreshSmartcardCredentialsMessage=16,
    KerbRetrieveEncodedTicketMessage=8,
    KerbRetrieveTicketMessage=4,
    KerbSetPasswordExMessage=12,
    KerbSetPasswordMessage=11,
    KerbSubmitTicketMessage=21,
    KerbTransferCredentialsMessage=19,
    KerbUpdateAddressesMessage=5,
    KerbVerifyCredentialsMessage=13,
    KerbVerifyPacMessage=3
} _KERB_PROTOCOL_MESSAGE_TYPE;

typedef enum _KERB_PROTOCOL_MESSAGE_TYPE KERB_PROTOCOL_MESSAGE_TYPE;

typedef LSA_UNICODE_STRING UNICODE_STRING;

struct _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    UNICODE_STRING RealmName;
    UNICODE_STRING KdcAddress;
    ULONG AddressType;
};

typedef struct _KERB_ADD_CREDENTIALS_REQUEST _KERB_ADD_CREDENTIALS_REQUEST, *P_KERB_ADD_CREDENTIALS_REQUEST;

typedef struct _LUID LUID;

struct _KERB_ADD_CREDENTIALS_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    UNICODE_STRING UserName;
    UNICODE_STRING DomainName;
    UNICODE_STRING Password;
    LUID LogonId;
    ULONG Flags;
};

typedef struct _KERB_ADD_CREDENTIALS_REQUEST_EX _KERB_ADD_CREDENTIALS_REQUEST_EX, *P_KERB_ADD_CREDENTIALS_REQUEST_EX;

typedef struct _KERB_ADD_CREDENTIALS_REQUEST KERB_ADD_CREDENTIALS_REQUEST;

struct _KERB_ADD_CREDENTIALS_REQUEST_EX {
    KERB_ADD_CREDENTIALS_REQUEST Credentials;
    ULONG PrincipalNameCount;
    UNICODE_STRING PrincipalNames[1];
};

typedef struct _KERB_AUTH_DATA _KERB_AUTH_DATA, *P_KERB_AUTH_DATA;

struct _KERB_AUTH_DATA {
    ULONG Type;
    ULONG Length;
    PUCHAR Data;
};

typedef struct _KERB_CERTIFICATE_LOGON _KERB_CERTIFICATE_LOGON, *P_KERB_CERTIFICATE_LOGON;

typedef enum _KERB_LOGON_SUBMIT_TYPE {
    KerbCertificateLogon=13,
    KerbCertificateS4ULogon=14,
    KerbCertificateUnlockLogon=15,
    KerbInteractiveLogon=2,
    KerbProxyLogon=9,
    KerbS4ULogon=12,
    KerbSmartCardLogon=6,
    KerbSmartCardUnlockLogon=8,
    KerbTicketLogon=10,
    KerbTicketUnlockLogon=11,
    KerbWorkstationUnlockLogon=7
} _KERB_LOGON_SUBMIT_TYPE;

typedef enum _KERB_LOGON_SUBMIT_TYPE KERB_LOGON_SUBMIT_TYPE;

struct _KERB_CERTIFICATE_LOGON {
    KERB_LOGON_SUBMIT_TYPE MessageType;
    UNICODE_STRING DomainName;
    UNICODE_STRING UserName;
    UNICODE_STRING Pin;
    ULONG Flags;
    ULONG CspDataLength;
    PUCHAR CspData;
};

typedef struct _KERB_CERTIFICATE_S4U_LOGON _KERB_CERTIFICATE_S4U_LOGON, *P_KERB_CERTIFICATE_S4U_LOGON;

struct _KERB_CERTIFICATE_S4U_LOGON {
    KERB_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    UNICODE_STRING UserPrincipalName;
    UNICODE_STRING DomainName;
    ULONG CertificateLength;
    PUCHAR Certificate;
};

typedef struct _KERB_CERTIFICATE_UNLOCK_LOGON _KERB_CERTIFICATE_UNLOCK_LOGON, *P_KERB_CERTIFICATE_UNLOCK_LOGON;

typedef struct _KERB_CERTIFICATE_LOGON KERB_CERTIFICATE_LOGON;

struct _KERB_CERTIFICATE_UNLOCK_LOGON {
    KERB_CERTIFICATE_LOGON Logon;
    LUID LogonId;
};

typedef struct _KERB_CHANGEPASSWORD_REQUEST _KERB_CHANGEPASSWORD_REQUEST, *P_KERB_CHANGEPASSWORD_REQUEST;

struct _KERB_CHANGEPASSWORD_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    UNICODE_STRING DomainName;
    UNICODE_STRING AccountName;
    UNICODE_STRING OldPassword;
    UNICODE_STRING NewPassword;
    BOOLEAN Impersonating;
};

typedef struct _KERB_DECRYPT_REQUEST _KERB_DECRYPT_REQUEST, *P_KERB_DECRYPT_REQUEST;

typedef struct KERB_CRYPTO_KEY KERB_CRYPTO_KEY, *PKERB_CRYPTO_KEY;

struct KERB_CRYPTO_KEY {
    LONG KeyType;
    ULONG Length;
    PUCHAR Value;
};

struct _KERB_DECRYPT_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    ULONG Flags;
    LONG CryptoType;
    LONG KeyUsage;
    struct KERB_CRYPTO_KEY Key;
    ULONG EncryptedDataSize;
    ULONG InitialVectorSize;
    PUCHAR InitialVector;
    PUCHAR EncryptedData;
};

typedef struct _KERB_DECRYPT_RESPONSE _KERB_DECRYPT_RESPONSE, *P_KERB_DECRYPT_RESPONSE;

struct _KERB_DECRYPT_RESPONSE {
    UCHAR DecryptedData[1];
};

typedef struct _KERB_EXTERNAL_NAME _KERB_EXTERNAL_NAME, *P_KERB_EXTERNAL_NAME;

struct _KERB_EXTERNAL_NAME {
    SHORT NameType;
    USHORT NameCount;
    UNICODE_STRING Names[1];
};

typedef struct _KERB_EXTERNAL_TICKET _KERB_EXTERNAL_TICKET, *P_KERB_EXTERNAL_TICKET;

typedef struct _KERB_EXTERNAL_NAME * PKERB_EXTERNAL_NAME;

struct _KERB_EXTERNAL_TICKET {
    PKERB_EXTERNAL_NAME ServiceName;
    PKERB_EXTERNAL_NAME TargetName;
    PKERB_EXTERNAL_NAME ClientName;
    UNICODE_STRING DomainName;
    UNICODE_STRING TargetDomainName;
    UNICODE_STRING AltTargetDomainName;
    struct KERB_CRYPTO_KEY SessionKey;
    ULONG TicketFlags;
    ULONG Flags;
    LARGE_INTEGER KeyExpirationTime;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    LARGE_INTEGER RenewUntil;
    LARGE_INTEGER TimeSkew;
    ULONG EncodedTicketSize;
    PUCHAR EncodedTicket;
};

typedef struct _KERB_INTERACTIVE_LOGON _KERB_INTERACTIVE_LOGON, *P_KERB_INTERACTIVE_LOGON;

struct _KERB_INTERACTIVE_LOGON {
    KERB_LOGON_SUBMIT_TYPE MessageType;
    UNICODE_STRING LogonDomainName;
    UNICODE_STRING UserName;
    UNICODE_STRING Password;
};

typedef struct _KERB_INTERACTIVE_PROFILE _KERB_INTERACTIVE_PROFILE, *P_KERB_INTERACTIVE_PROFILE;

typedef enum _KERB_PROFILE_BUFFER_TYPE {
    KerbInteractiveProfile=2,
    KerbSmartCardProfile=4,
    KerbTicketProfile=6
} _KERB_PROFILE_BUFFER_TYPE;

typedef enum _KERB_PROFILE_BUFFER_TYPE KERB_PROFILE_BUFFER_TYPE;

struct _KERB_INTERACTIVE_PROFILE {
    KERB_PROFILE_BUFFER_TYPE MessageType;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    LARGE_INTEGER LogonTime;
    LARGE_INTEGER LogoffTime;
    LARGE_INTEGER KickOffTime;
    LARGE_INTEGER PasswordLastSet;
    LARGE_INTEGER PasswordCanChange;
    LARGE_INTEGER PasswordMustChange;
    UNICODE_STRING LogonScript;
    UNICODE_STRING HomeDirectory;
    UNICODE_STRING FullName;
    UNICODE_STRING ProfilePath;
    UNICODE_STRING HomeDirectoryDrive;
    UNICODE_STRING LogonServer;
    ULONG UserFlags;
};

typedef struct _KERB_INTERACTIVE_UNLOCK_LOGON _KERB_INTERACTIVE_UNLOCK_LOGON, *P_KERB_INTERACTIVE_UNLOCK_LOGON;

typedef struct _KERB_INTERACTIVE_LOGON KERB_INTERACTIVE_LOGON;

struct _KERB_INTERACTIVE_UNLOCK_LOGON {
    KERB_INTERACTIVE_LOGON Logon;
    LUID LogonId;
};

typedef struct _KERB_NET_ADDRESS _KERB_NET_ADDRESS, *P_KERB_NET_ADDRESS;

struct _KERB_NET_ADDRESS {
    ULONG Family;
    ULONG Length;
    PCHAR Address;
};

typedef struct _KERB_NET_ADDRESSES _KERB_NET_ADDRESSES, *P_KERB_NET_ADDRESSES;

typedef struct _KERB_NET_ADDRESS KERB_NET_ADDRESS;

struct _KERB_NET_ADDRESSES {
    ULONG Number;
    KERB_NET_ADDRESS Addresses[1];
};

typedef struct _KERB_PURGE_TKT_CACHE_EX_REQUEST _KERB_PURGE_TKT_CACHE_EX_REQUEST, *P_KERB_PURGE_TKT_CACHE_EX_REQUEST;

typedef struct _KERB_TICKET_CACHE_INFO_EX _KERB_TICKET_CACHE_INFO_EX, *P_KERB_TICKET_CACHE_INFO_EX;

typedef struct _KERB_TICKET_CACHE_INFO_EX KERB_TICKET_CACHE_INFO_EX;

struct _KERB_TICKET_CACHE_INFO_EX {
    UNICODE_STRING ClientName;
    UNICODE_STRING ClientRealm;
    UNICODE_STRING ServerName;
    UNICODE_STRING ServerRealm;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
};

struct _KERB_PURGE_TKT_CACHE_EX_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    ULONG Flags;
    KERB_TICKET_CACHE_INFO_EX TicketTemplate;
};

typedef struct _KERB_PURGE_TKT_CACHE_REQUEST _KERB_PURGE_TKT_CACHE_REQUEST, *P_KERB_PURGE_TKT_CACHE_REQUEST;

struct _KERB_PURGE_TKT_CACHE_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    UNICODE_STRING ServerName;
    UNICODE_STRING RealmName;
};

typedef struct _KERB_QUERY_TKT_CACHE_EX2_RESPONSE _KERB_QUERY_TKT_CACHE_EX2_RESPONSE, *P_KERB_QUERY_TKT_CACHE_EX2_RESPONSE;

typedef struct _KERB_TICKET_CACHE_INFO_EX2 _KERB_TICKET_CACHE_INFO_EX2, *P_KERB_TICKET_CACHE_INFO_EX2;

typedef struct _KERB_TICKET_CACHE_INFO_EX2 KERB_TICKET_CACHE_INFO_EX2;

struct _KERB_TICKET_CACHE_INFO_EX2 {
    UNICODE_STRING ClientName;
    UNICODE_STRING ClientRealm;
    UNICODE_STRING ServerName;
    UNICODE_STRING ServerRealm;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
    ULONG SessionKeyType;
    ULONG BranchId;
};

struct _KERB_QUERY_TKT_CACHE_EX2_RESPONSE {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    KERB_TICKET_CACHE_INFO_EX2 Tickets[1];
};

typedef struct _KERB_QUERY_TKT_CACHE_EX_RESPONSE _KERB_QUERY_TKT_CACHE_EX_RESPONSE, *P_KERB_QUERY_TKT_CACHE_EX_RESPONSE;

struct _KERB_QUERY_TKT_CACHE_EX_RESPONSE {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    KERB_TICKET_CACHE_INFO_EX Tickets[1];
};

typedef struct _KERB_QUERY_TKT_CACHE_REQUEST _KERB_QUERY_TKT_CACHE_REQUEST, *P_KERB_QUERY_TKT_CACHE_REQUEST;

struct _KERB_QUERY_TKT_CACHE_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
};

typedef struct _KERB_QUERY_TKT_CACHE_RESPONSE _KERB_QUERY_TKT_CACHE_RESPONSE, *P_KERB_QUERY_TKT_CACHE_RESPONSE;

typedef struct _KERB_TICKET_CACHE_INFO _KERB_TICKET_CACHE_INFO, *P_KERB_TICKET_CACHE_INFO;

typedef struct _KERB_TICKET_CACHE_INFO KERB_TICKET_CACHE_INFO;

struct _KERB_TICKET_CACHE_INFO {
    UNICODE_STRING ServerName;
    UNICODE_STRING RealmName;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    LARGE_INTEGER RenewTime;
    LONG EncryptionType;
    ULONG TicketFlags;
};

struct _KERB_QUERY_TKT_CACHE_RESPONSE {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG CountOfTickets;
    KERB_TICKET_CACHE_INFO Tickets[1];
};

typedef struct _KERB_REFRESH_SCCRED_REQUEST _KERB_REFRESH_SCCRED_REQUEST, *P_KERB_REFRESH_SCCRED_REQUEST;

struct _KERB_REFRESH_SCCRED_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    UNICODE_STRING CredentialBlob;
    LUID LogonId;
    ULONG Flags;
};

typedef struct _KERB_RETRIEVE_TKT_REQUEST _KERB_RETRIEVE_TKT_REQUEST, *P_KERB_RETRIEVE_TKT_REQUEST;

typedef struct _SecHandle _SecHandle, *P_SecHandle;

typedef struct _SecHandle SecHandle;

struct _SecHandle {
    ULONG_PTR dwLower;
    ULONG_PTR dwUpper;
};

struct _KERB_RETRIEVE_TKT_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    UNICODE_STRING TargetName;
    ULONG TicketFlags;
    ULONG CacheOptions;
    LONG EncryptionType;
    SecHandle CredentialsHandle;
};

typedef struct _KERB_RETRIEVE_TKT_RESPONSE _KERB_RETRIEVE_TKT_RESPONSE, *P_KERB_RETRIEVE_TKT_RESPONSE;

typedef struct _KERB_EXTERNAL_TICKET KERB_EXTERNAL_TICKET;

struct _KERB_RETRIEVE_TKT_RESPONSE {
    KERB_EXTERNAL_TICKET Ticket;
};

typedef struct _KERB_S4U_LOGON _KERB_S4U_LOGON, *P_KERB_S4U_LOGON;

struct _KERB_S4U_LOGON {
    KERB_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    UNICODE_STRING ClientUpn;
    UNICODE_STRING ClientRealm;
};

typedef struct _KERB_SETPASSWORD_EX_REQUEST _KERB_SETPASSWORD_EX_REQUEST, *P_KERB_SETPASSWORD_EX_REQUEST;

struct _KERB_SETPASSWORD_EX_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    SecHandle CredentialsHandle;
    ULONG Flags;
    UNICODE_STRING AccountRealm;
    UNICODE_STRING AccountName;
    UNICODE_STRING Password;
    UNICODE_STRING ClientRealm;
    UNICODE_STRING ClientName;
    BOOLEAN Impersonating;
    UNICODE_STRING KdcAddress;
    ULONG KdcAddressType;
};

typedef struct _KERB_SETPASSWORD_REQUEST _KERB_SETPASSWORD_REQUEST, *P_KERB_SETPASSWORD_REQUEST;

struct _KERB_SETPASSWORD_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    SecHandle CredentialsHandle;
    ULONG Flags;
    UNICODE_STRING DomainName;
    UNICODE_STRING AccountName;
    UNICODE_STRING Password;
};

typedef struct _KERB_SMART_CARD_LOGON _KERB_SMART_CARD_LOGON, *P_KERB_SMART_CARD_LOGON;

struct _KERB_SMART_CARD_LOGON {
    KERB_LOGON_SUBMIT_TYPE MessageType;
    UNICODE_STRING Pin;
    ULONG CspDataLength;
    PUCHAR CspData;
};

typedef struct _KERB_SMART_CARD_PROFILE _KERB_SMART_CARD_PROFILE, *P_KERB_SMART_CARD_PROFILE;

typedef struct _KERB_INTERACTIVE_PROFILE KERB_INTERACTIVE_PROFILE;

struct _KERB_SMART_CARD_PROFILE {
    KERB_INTERACTIVE_PROFILE Profile;
    ULONG CertificateSize;
    PUCHAR CertificateData;
};

typedef struct _KERB_SMART_CARD_UNLOCK_LOGON _KERB_SMART_CARD_UNLOCK_LOGON, *P_KERB_SMART_CARD_UNLOCK_LOGON;

typedef struct _KERB_SMART_CARD_LOGON KERB_SMART_CARD_LOGON;

struct _KERB_SMART_CARD_UNLOCK_LOGON {
    KERB_SMART_CARD_LOGON Logon;
    LUID LogonId;
};

typedef struct _KERB_SUBMIT_TKT_REQUEST _KERB_SUBMIT_TKT_REQUEST, *P_KERB_SUBMIT_TKT_REQUEST;

typedef struct KERB_CRYPTO_KEY32 KERB_CRYPTO_KEY32, *PKERB_CRYPTO_KEY32;

struct KERB_CRYPTO_KEY32 {
    LONG KeyType;
    ULONG Length;
    ULONG Offset;
};

struct _KERB_SUBMIT_TKT_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID LogonId;
    ULONG Flags;
    struct KERB_CRYPTO_KEY32 Key;
    ULONG KerbCredSize;
    ULONG KerbCredOffset;
};

typedef struct _KERB_TICKET_LOGON _KERB_TICKET_LOGON, *P_KERB_TICKET_LOGON;

struct _KERB_TICKET_LOGON {
    KERB_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    ULONG ServiceTicketLength;
    ULONG TicketGrantingTicketLength;
    PUCHAR ServiceTicket;
    PUCHAR TicketGrantingTicket;
};

typedef struct _KERB_TICKET_PROFILE _KERB_TICKET_PROFILE, *P_KERB_TICKET_PROFILE;

struct _KERB_TICKET_PROFILE {
    KERB_INTERACTIVE_PROFILE Profile;
    struct KERB_CRYPTO_KEY SessionKey;
};

typedef struct _KERB_TICKET_UNLOCK_LOGON _KERB_TICKET_UNLOCK_LOGON, *P_KERB_TICKET_UNLOCK_LOGON;

typedef struct _KERB_TICKET_LOGON KERB_TICKET_LOGON;

struct _KERB_TICKET_UNLOCK_LOGON {
    KERB_TICKET_LOGON Logon;
    LUID LogonId;
};

typedef struct _KERB_TRANSFER_CRED_REQUEST _KERB_TRANSFER_CRED_REQUEST, *P_KERB_TRANSFER_CRED_REQUEST;

struct _KERB_TRANSFER_CRED_REQUEST {
    KERB_PROTOCOL_MESSAGE_TYPE MessageType;
    LUID OriginLogonId;
    LUID DestinationLogonId;
    ULONG Flags;
};

typedef struct _LSA_AUTH_INFORMATION _LSA_AUTH_INFORMATION, *P_LSA_AUTH_INFORMATION;

struct _LSA_AUTH_INFORMATION {
    LARGE_INTEGER LastUpdateTime;
    ULONG AuthType;
    ULONG AuthInfoLength;
    PUCHAR AuthInfo;
};

typedef struct _LSA_ENUMERATION_INFORMATION _LSA_ENUMERATION_INFORMATION, *P_LSA_ENUMERATION_INFORMATION;

struct _LSA_ENUMERATION_INFORMATION {
    PSID Sid;
};

typedef struct _LSA_FOREST_TRUST_BINARY_DATA _LSA_FOREST_TRUST_BINARY_DATA, *P_LSA_FOREST_TRUST_BINARY_DATA;

struct _LSA_FOREST_TRUST_BINARY_DATA {
    ULONG Length;
    PUCHAR Buffer;
};

typedef struct _LSA_FOREST_TRUST_COLLISION_INFORMATION _LSA_FOREST_TRUST_COLLISION_INFORMATION, *P_LSA_FOREST_TRUST_COLLISION_INFORMATION;

typedef struct _LSA_FOREST_TRUST_COLLISION_RECORD _LSA_FOREST_TRUST_COLLISION_RECORD, *P_LSA_FOREST_TRUST_COLLISION_RECORD;

typedef struct _LSA_FOREST_TRUST_COLLISION_RECORD * PLSA_FOREST_TRUST_COLLISION_RECORD;

typedef enum enum_6904 {
    CollisionOther=2,
    CollisionTdo=0,
    CollisionXref=1
} enum_6904;

typedef enum enum_6904 LSA_FOREST_TRUST_COLLISION_RECORD_TYPE;

struct _LSA_FOREST_TRUST_COLLISION_RECORD {
    ULONG Index;
    LSA_FOREST_TRUST_COLLISION_RECORD_TYPE Type;
    ULONG Flags;
    LSA_UNICODE_STRING Name;
};

struct _LSA_FOREST_TRUST_COLLISION_INFORMATION {
    ULONG RecordCount;
    PLSA_FOREST_TRUST_COLLISION_RECORD * Entries;
};

typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO _LSA_FOREST_TRUST_DOMAIN_INFO, *P_LSA_FOREST_TRUST_DOMAIN_INFO;

struct _LSA_FOREST_TRUST_DOMAIN_INFO {
    PSID Sid;
    LSA_UNICODE_STRING DnsName;
    LSA_UNICODE_STRING NetbiosName;
};

typedef struct _LSA_FOREST_TRUST_INFORMATION _LSA_FOREST_TRUST_INFORMATION, *P_LSA_FOREST_TRUST_INFORMATION;

typedef struct _LSA_FOREST_TRUST_RECORD _LSA_FOREST_TRUST_RECORD, *P_LSA_FOREST_TRUST_RECORD;

typedef struct _LSA_FOREST_TRUST_RECORD * PLSA_FOREST_TRUST_RECORD;

typedef enum enum_6898 {
    ForestTrustDomainInfo=2,
    ForestTrustRecordTypeLast=3,
    ForestTrustTopLevelName=0,
    ForestTrustTopLevelNameEx=1
} enum_6898;

typedef enum enum_6898 LSA_FOREST_TRUST_RECORD_TYPE;

typedef union _union_6902 _union_6902, *P_union_6902;

typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO LSA_FOREST_TRUST_DOMAIN_INFO;

typedef struct _LSA_FOREST_TRUST_BINARY_DATA LSA_FOREST_TRUST_BINARY_DATA;

union _union_6902 {
    LSA_UNICODE_STRING TopLevelName;
    LSA_FOREST_TRUST_DOMAIN_INFO DomainInfo;
    LSA_FOREST_TRUST_BINARY_DATA Data;
};

struct _LSA_FOREST_TRUST_RECORD {
    ULONG Flags;
    LSA_FOREST_TRUST_RECORD_TYPE ForestTrustType;
    LARGE_INTEGER Time;
    union _union_6902 ForestTrustData;
};

struct _LSA_FOREST_TRUST_INFORMATION {
    ULONG RecordCount;
    PLSA_FOREST_TRUST_RECORD * Entries;
};

typedef struct _LSA_LAST_INTER_LOGON_INFO _LSA_LAST_INTER_LOGON_INFO, *P_LSA_LAST_INTER_LOGON_INFO;

struct _LSA_LAST_INTER_LOGON_INFO {
    LARGE_INTEGER LastSuccessfulLogon;
    LARGE_INTEGER LastFailedLogon;
    ULONG FailedAttemptCountSinceLastSuccessfulLogon;
};

typedef struct _LSA_TRANSLATED_SID _LSA_TRANSLATED_SID, *P_LSA_TRANSLATED_SID;

struct _LSA_TRANSLATED_SID {
    SID_NAME_USE Use;
    ULONG RelativeId;
    LONG DomainIndex;
};

typedef struct _MSV1_0_AV_PAIR _MSV1_0_AV_PAIR, *P_MSV1_0_AV_PAIR;

struct _MSV1_0_AV_PAIR {
    USHORT AvId;
    USHORT AvLen;
};

typedef struct _MSV1_0_CHANGEPASSWORD_REQUEST _MSV1_0_CHANGEPASSWORD_REQUEST, *P_MSV1_0_CHANGEPASSWORD_REQUEST;

typedef enum _MSV1_0_PROTOCOL_MESSAGE_TYPE {
    MsV1_0CacheLogon=8,
    MsV1_0CacheLookup=11,
    MsV1_0ChangeCachedPassword=6,
    MsV1_0ChangePassword=5,
    MsV1_0ClearCachedCredentials=14,
    MsV1_0ConfigLocalAliases=13,
    MsV1_0DeriveCredential=10,
    MsV1_0EnumerateUsers=2,
    MsV1_0GenericPassthrough=7,
    MsV1_0GetUserInfo=3,
    MsV1_0Lm20ChallengeRequest=0,
    MsV1_0Lm20GetChallengeResponse=1,
    MsV1_0ReLogonUsers=4,
    MsV1_0SetProcessOption=12,
    MsV1_0SubAuth=9
} _MSV1_0_PROTOCOL_MESSAGE_TYPE;

typedef enum _MSV1_0_PROTOCOL_MESSAGE_TYPE MSV1_0_PROTOCOL_MESSAGE_TYPE;

struct _MSV1_0_CHANGEPASSWORD_REQUEST {
    MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    UNICODE_STRING DomainName;
    UNICODE_STRING AccountName;
    UNICODE_STRING OldPassword;
    UNICODE_STRING NewPassword;
    BOOLEAN Impersonating;
};

typedef struct _MSV1_0_CHANGEPASSWORD_RESPONSE _MSV1_0_CHANGEPASSWORD_RESPONSE, *P_MSV1_0_CHANGEPASSWORD_RESPONSE;

typedef struct _DOMAIN_PASSWORD_INFORMATION DOMAIN_PASSWORD_INFORMATION;

struct _MSV1_0_CHANGEPASSWORD_RESPONSE {
    MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    BOOLEAN PasswordInfoValid;
    DOMAIN_PASSWORD_INFORMATION DomainPasswordInfo;
};

typedef struct _MSV1_0_INTERACTIVE_LOGON _MSV1_0_INTERACTIVE_LOGON, *P_MSV1_0_INTERACTIVE_LOGON;

typedef enum _MSV1_0_LOGON_SUBMIT_TYPE {
    MsV1_0InteractiveLogon=2,
    MsV1_0Lm20Logon=3,
    MsV1_0NetworkLogon=4,
    MsV1_0S4ULogon=12,
    MsV1_0SubAuthLogon=5,
    MsV1_0VirtualLogon=82,
    MsV1_0WorkstationUnlockLogon=7
} _MSV1_0_LOGON_SUBMIT_TYPE;

typedef enum _MSV1_0_LOGON_SUBMIT_TYPE MSV1_0_LOGON_SUBMIT_TYPE;

struct _MSV1_0_INTERACTIVE_LOGON {
    MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    UNICODE_STRING LogonDomainName;
    UNICODE_STRING UserName;
    UNICODE_STRING Password;
};

typedef struct _MSV1_0_INTERACTIVE_PROFILE _MSV1_0_INTERACTIVE_PROFILE, *P_MSV1_0_INTERACTIVE_PROFILE;

typedef enum _MSV1_0_PROFILE_BUFFER_TYPE {
    MsV1_0InteractiveProfile=2,
    MsV1_0Lm20LogonProfile=3,
    MsV1_0SmartCardProfile=4
} _MSV1_0_PROFILE_BUFFER_TYPE;

typedef enum _MSV1_0_PROFILE_BUFFER_TYPE MSV1_0_PROFILE_BUFFER_TYPE;

struct _MSV1_0_INTERACTIVE_PROFILE {
    MSV1_0_PROFILE_BUFFER_TYPE MessageType;
    USHORT LogonCount;
    USHORT BadPasswordCount;
    LARGE_INTEGER LogonTime;
    LARGE_INTEGER LogoffTime;
    LARGE_INTEGER KickOffTime;
    LARGE_INTEGER PasswordLastSet;
    LARGE_INTEGER PasswordCanChange;
    LARGE_INTEGER PasswordMustChange;
    UNICODE_STRING LogonScript;
    UNICODE_STRING HomeDirectory;
    UNICODE_STRING FullName;
    UNICODE_STRING ProfilePath;
    UNICODE_STRING HomeDirectoryDrive;
    UNICODE_STRING LogonServer;
    ULONG UserFlags;
};

typedef struct _MSV1_0_LM20_LOGON _MSV1_0_LM20_LOGON, *P_MSV1_0_LM20_LOGON;

typedef LSA_STRING STRING;

struct _MSV1_0_LM20_LOGON {
    MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    UNICODE_STRING LogonDomainName;
    UNICODE_STRING UserName;
    UNICODE_STRING Workstation;
    UCHAR ChallengeToClient[8];
    STRING CaseSensitiveChallengeResponse;
    STRING CaseInsensitiveChallengeResponse;
    ULONG ParameterControl;
};

typedef struct _MSV1_0_LM20_LOGON_PROFILE _MSV1_0_LM20_LOGON_PROFILE, *P_MSV1_0_LM20_LOGON_PROFILE;

struct _MSV1_0_LM20_LOGON_PROFILE {
    MSV1_0_PROFILE_BUFFER_TYPE MessageType;
    LARGE_INTEGER KickOffTime;
    LARGE_INTEGER LogoffTime;
    ULONG UserFlags;
    UCHAR UserSessionKey[16];
    UNICODE_STRING LogonDomainName;
    UCHAR LanmanSessionKey[8];
    UNICODE_STRING LogonServer;
    UNICODE_STRING UserParameters;
};

typedef struct _MSV1_0_NTLM3_RESPONSE _MSV1_0_NTLM3_RESPONSE, *P_MSV1_0_NTLM3_RESPONSE;

struct _MSV1_0_NTLM3_RESPONSE {
    UCHAR Response[16];
    UCHAR RespType;
    UCHAR HiRespType;
    USHORT Flags;
    ULONG MsgWord;
    ULONGLONG TimeStamp;
    UCHAR ChallengeFromClient[8];
    ULONG AvPairsOff;
    UCHAR Buffer[1];
};

typedef struct _MSV1_0_PASSTHROUGH_REQUEST _MSV1_0_PASSTHROUGH_REQUEST, *P_MSV1_0_PASSTHROUGH_REQUEST;

struct _MSV1_0_PASSTHROUGH_REQUEST {
    MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    UNICODE_STRING DomainName;
    UNICODE_STRING PackageName;
    ULONG DataLength;
    PUCHAR LogonData;
    ULONG Pad;
};

typedef struct _MSV1_0_PASSTHROUGH_RESPONSE _MSV1_0_PASSTHROUGH_RESPONSE, *P_MSV1_0_PASSTHROUGH_RESPONSE;

struct _MSV1_0_PASSTHROUGH_RESPONSE {
    MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG Pad;
    ULONG DataLength;
    PUCHAR ValidationData;
};

typedef struct _MSV1_0_S4U_LOGON _MSV1_0_S4U_LOGON, *P_MSV1_0_S4U_LOGON;

struct _MSV1_0_S4U_LOGON {
    MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    UNICODE_STRING UserPrincipalName;
    UNICODE_STRING DomainName;
};

typedef struct _MSV1_0_SUBAUTH_LOGON _MSV1_0_SUBAUTH_LOGON, *P_MSV1_0_SUBAUTH_LOGON;

struct _MSV1_0_SUBAUTH_LOGON {
    MSV1_0_LOGON_SUBMIT_TYPE MessageType;
    UNICODE_STRING LogonDomainName;
    UNICODE_STRING UserName;
    UNICODE_STRING Workstation;
    UCHAR ChallengeToClient[8];
    STRING AuthenticationInfo1;
    STRING AuthenticationInfo2;
    ULONG ParameterControl;
    ULONG SubAuthPackageId;
};

typedef struct _MSV1_0_SUBAUTH_REQUEST _MSV1_0_SUBAUTH_REQUEST, *P_MSV1_0_SUBAUTH_REQUEST;

struct _MSV1_0_SUBAUTH_REQUEST {
    MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG SubAuthPackageId;
    ULONG SubAuthInfoLength;
    PUCHAR SubAuthSubmitBuffer;
};

typedef struct _MSV1_0_SUBAUTH_RESPONSE _MSV1_0_SUBAUTH_RESPONSE, *P_MSV1_0_SUBAUTH_RESPONSE;

struct _MSV1_0_SUBAUTH_RESPONSE {
    MSV1_0_PROTOCOL_MESSAGE_TYPE MessageType;
    ULONG SubAuthInfoLength;
    PUCHAR SubAuthReturnBuffer;
};

typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL _MSV1_0_SUPPLEMENTAL_CREDENTIAL, *P_MSV1_0_SUPPLEMENTAL_CREDENTIAL;

struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL {
    ULONG Version;
    ULONG Flags;
    UCHAR LmPassword[16];
    UCHAR NtPassword[16];
};

typedef struct _NEGOTIATE_CALLER_NAME_REQUEST _NEGOTIATE_CALLER_NAME_REQUEST, *P_NEGOTIATE_CALLER_NAME_REQUEST;

struct _NEGOTIATE_CALLER_NAME_REQUEST {
    ULONG MessageType;
    LUID LogonId;
};

typedef struct _NEGOTIATE_CALLER_NAME_RESPONSE _NEGOTIATE_CALLER_NAME_RESPONSE, *P_NEGOTIATE_CALLER_NAME_RESPONSE;

struct _NEGOTIATE_CALLER_NAME_RESPONSE {
    ULONG MessageType;
    PWSTR CallerName;
};

typedef struct _NEGOTIATE_PACKAGE_PREFIX _NEGOTIATE_PACKAGE_PREFIX, *P_NEGOTIATE_PACKAGE_PREFIX;

struct _NEGOTIATE_PACKAGE_PREFIX {
    ULONG_PTR PackageId;
    PVOID PackageDataA;
    PVOID PackageDataW;
    ULONG_PTR PrefixLen;
    UCHAR Prefix[32];
};

typedef struct _NEGOTIATE_PACKAGE_PREFIXES _NEGOTIATE_PACKAGE_PREFIXES, *P_NEGOTIATE_PACKAGE_PREFIXES;

struct _NEGOTIATE_PACKAGE_PREFIXES {
    ULONG MessageType;
    ULONG PrefixCount;
    ULONG Offset;
    ULONG Pad;
};

typedef struct _PKU2U_CERT_BLOB _PKU2U_CERT_BLOB, *P_PKU2U_CERT_BLOB;

struct _PKU2U_CERT_BLOB {
    ULONG CertOffset;
    USHORT CertLength;
};

typedef struct _PKU2U_CERTIFICATE_S4U_LOGON _PKU2U_CERTIFICATE_S4U_LOGON, *P_PKU2U_CERTIFICATE_S4U_LOGON;

typedef enum _PKU2U_LOGON_SUBMIT_TYPE {
    Pku2uCertificateS4ULogon=14
} _PKU2U_LOGON_SUBMIT_TYPE;

typedef enum _PKU2U_LOGON_SUBMIT_TYPE PKU2U_LOGON_SUBMIT_TYPE;

struct _PKU2U_CERTIFICATE_S4U_LOGON {
    PKU2U_LOGON_SUBMIT_TYPE MessageType;
    ULONG Flags;
    UNICODE_STRING UserPrincipalName;
    UNICODE_STRING DomainName;
    ULONG CertificateLength;
    PUCHAR Certificate;
};

typedef struct _PKU2U_CREDUI_CONTEXT _PKU2U_CREDUI_CONTEXT, *P_PKU2U_CREDUI_CONTEXT;

struct _PKU2U_CREDUI_CONTEXT {
    ULONG64 Version;
    USHORT cbHeaderLength;
    ULONG cbStructureLength;
    USHORT CertArrayCount;
    ULONG CertArrayOffset;
};

typedef struct _POLICY_AUDIT_CATEGORIES_INFO _POLICY_AUDIT_CATEGORIES_INFO, *P_POLICY_AUDIT_CATEGORIES_INFO;

typedef struct _POLICY_AUDIT_SUBCATEGORIES_INFO _POLICY_AUDIT_SUBCATEGORIES_INFO, *P_POLICY_AUDIT_SUBCATEGORIES_INFO;

typedef struct _POLICY_AUDIT_SUBCATEGORIES_INFO * PPOLICY_AUDIT_SUBCATEGORIES_INFO;

typedef ULONG * PPOLICY_AUDIT_EVENT_OPTIONS;

struct _POLICY_AUDIT_CATEGORIES_INFO {
    ULONG MaximumCategoryCount;
    PPOLICY_AUDIT_SUBCATEGORIES_INFO SubCategoriesInfo;
};

struct _POLICY_AUDIT_SUBCATEGORIES_INFO {
    ULONG MaximumSubCategoryCount;
    PPOLICY_AUDIT_EVENT_OPTIONS EventAuditingOptions;
};

typedef enum _POLICY_AUDIT_EVENT_TYPE {
    AuditCategoryAccountLogon=8,
    AuditCategoryAccountManagement=6,
    AuditCategoryDetailedTracking=4,
    AuditCategoryDirectoryServiceAccess=7,
    AuditCategoryLogon=1,
    AuditCategoryObjectAccess=2,
    AuditCategoryPolicyChange=5,
    AuditCategoryPrivilegeUse=3,
    AuditCategorySystem=0
} _POLICY_AUDIT_EVENT_TYPE;

typedef struct _POLICY_AUDIT_EVENTS_INFO _POLICY_AUDIT_EVENTS_INFO, *P_POLICY_AUDIT_EVENTS_INFO;

struct _POLICY_AUDIT_EVENTS_INFO {
    BOOLEAN AuditingMode;
    PPOLICY_AUDIT_EVENT_OPTIONS EventAuditingOptions;
    ULONG MaximumAuditEventCount;
};

typedef struct _POLICY_AUDIT_FULL_QUERY_INFO _POLICY_AUDIT_FULL_QUERY_INFO, *P_POLICY_AUDIT_FULL_QUERY_INFO;

struct _POLICY_AUDIT_FULL_QUERY_INFO {
    BOOLEAN ShutDownOnFull;
    BOOLEAN LogIsFull;
};

typedef struct _POLICY_AUDIT_FULL_SET_INFO _POLICY_AUDIT_FULL_SET_INFO, *P_POLICY_AUDIT_FULL_SET_INFO;

struct _POLICY_AUDIT_FULL_SET_INFO {
    BOOLEAN ShutDownOnFull;
};

typedef struct _POLICY_AUDIT_LOG_INFO _POLICY_AUDIT_LOG_INFO, *P_POLICY_AUDIT_LOG_INFO;

struct _POLICY_AUDIT_LOG_INFO {
    ULONG AuditLogPercentFull;
    ULONG MaximumLogSize;
    LARGE_INTEGER AuditRetentionPeriod;
    BOOLEAN AuditLogFullShutdownInProgress;
    LARGE_INTEGER TimeToShutdown;
    ULONG NextAuditRecordId;
};

typedef struct _POLICY_AUDIT_SID_ARRAY _POLICY_AUDIT_SID_ARRAY, *P_POLICY_AUDIT_SID_ARRAY;

struct _POLICY_AUDIT_SID_ARRAY {
    ULONG UsersCount;
    PSID * UserSidArray;
};

typedef struct _POLICY_DEFAULT_QUOTA_INFO _POLICY_DEFAULT_QUOTA_INFO, *P_POLICY_DEFAULT_QUOTA_INFO;

typedef struct _QUOTA_LIMITS _QUOTA_LIMITS, *P_QUOTA_LIMITS;

typedef struct _QUOTA_LIMITS QUOTA_LIMITS;

struct _QUOTA_LIMITS {
    SIZE_T PagedPoolLimit;
    SIZE_T NonPagedPoolLimit;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    SIZE_T PagefileLimit;
    LARGE_INTEGER TimeLimit;
};

struct _POLICY_DEFAULT_QUOTA_INFO {
    QUOTA_LIMITS QuotaLimits;
};

typedef struct _POLICY_DOMAIN_EFS_INFO _POLICY_DOMAIN_EFS_INFO, *P_POLICY_DOMAIN_EFS_INFO;

struct _POLICY_DOMAIN_EFS_INFO {
    ULONG InfoLength;
    PUCHAR EfsBlob;
};

typedef enum _POLICY_DOMAIN_INFORMATION_CLASS {
    PolicyDomainEfsInformation=2,
    PolicyDomainKerberosTicketInformation=3
} _POLICY_DOMAIN_INFORMATION_CLASS;

typedef struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO _POLICY_DOMAIN_KERBEROS_TICKET_INFO, *P_POLICY_DOMAIN_KERBEROS_TICKET_INFO;

struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO {
    ULONG AuthenticationOptions;
    LARGE_INTEGER MaxServiceTicketAge;
    LARGE_INTEGER MaxTicketAge;
    LARGE_INTEGER MaxRenewAge;
    LARGE_INTEGER MaxClockSkew;
    LARGE_INTEGER Reserved;
};

typedef enum _POLICY_INFORMATION_CLASS {
    PolicyAccountDomainInformation=5,
    PolicyAuditEventsInformation=2,
    PolicyAuditFullQueryInformation=11,
    PolicyAuditFullSetInformation=10,
    PolicyAuditLogInformation=1,
    PolicyDefaultQuotaInformation=8,
    PolicyDnsDomainInformation=12,
    PolicyDnsDomainInformationInt=13,
    PolicyLastEntry=15,
    PolicyLocalAccountDomainInformation=14,
    PolicyLsaServerRoleInformation=6,
    PolicyModificationInformation=9,
    PolicyPdAccountInformation=4,
    PolicyPrimaryDomainInformation=3,
    PolicyReplicaSourceInformation=7
} _POLICY_INFORMATION_CLASS;

typedef enum _POLICY_LSA_SERVER_ROLE {
    PolicyServerRoleBackup=2,
    PolicyServerRolePrimary=3
} _POLICY_LSA_SERVER_ROLE;

typedef struct _POLICY_LSA_SERVER_ROLE_INFO _POLICY_LSA_SERVER_ROLE_INFO, *P_POLICY_LSA_SERVER_ROLE_INFO;

typedef enum _POLICY_LSA_SERVER_ROLE POLICY_LSA_SERVER_ROLE;

struct _POLICY_LSA_SERVER_ROLE_INFO {
    POLICY_LSA_SERVER_ROLE LsaServerRole;
};

typedef struct _POLICY_MODIFICATION_INFO _POLICY_MODIFICATION_INFO, *P_POLICY_MODIFICATION_INFO;

struct _POLICY_MODIFICATION_INFO {
    LARGE_INTEGER ModifiedId;
    LARGE_INTEGER DatabaseCreationTime;
};

typedef enum _POLICY_NOTIFICATION_INFORMATION_CLASS {
    PolicyNotifyAccountDomainInformation=2,
    PolicyNotifyAuditEventsInformation=1,
    PolicyNotifyDnsDomainInformation=4,
    PolicyNotifyDomainEfsInformation=5,
    PolicyNotifyDomainKerberosTicketInformation=6,
    PolicyNotifyGlobalSaclInformation=8,
    PolicyNotifyMachineAccountPasswordInformation=7,
    PolicyNotifyMax=9,
    PolicyNotifyServerRoleInformation=3
} _POLICY_NOTIFICATION_INFORMATION_CLASS;

typedef struct _POLICY_PD_ACCOUNT_INFO _POLICY_PD_ACCOUNT_INFO, *P_POLICY_PD_ACCOUNT_INFO;

struct _POLICY_PD_ACCOUNT_INFO {
    LSA_UNICODE_STRING Name;
};

typedef struct _POLICY_PRIMARY_DOMAIN_INFO _POLICY_PRIMARY_DOMAIN_INFO, *P_POLICY_PRIMARY_DOMAIN_INFO;

struct _POLICY_PRIMARY_DOMAIN_INFO {
    LSA_UNICODE_STRING Name;
    PSID Sid;
};

typedef struct _POLICY_REPLICA_SOURCE_INFO _POLICY_REPLICA_SOURCE_INFO, *P_POLICY_REPLICA_SOURCE_INFO;

struct _POLICY_REPLICA_SOURCE_INFO {
    LSA_UNICODE_STRING ReplicaSource;
    LSA_UNICODE_STRING ReplicaAccountName;
};

typedef struct _SE_ADT_ACCESS_REASON _SE_ADT_ACCESS_REASON, *P_SE_ADT_ACCESS_REASON;

struct _SE_ADT_ACCESS_REASON {
    ACCESS_MASK AccessMask;
    ULONG AccessReasons[32];
    ULONG ObjectTypeIndex;
    ULONG AccessGranted;
    PSECURITY_DESCRIPTOR SecurityDescriptor;
};

typedef struct _SE_ADT_OBJECT_TYPE _SE_ADT_OBJECT_TYPE, *P_SE_ADT_OBJECT_TYPE;

struct _SE_ADT_OBJECT_TYPE {
    GUID ObjectType;
    USHORT Flags;
    USHORT Level;
    ACCESS_MASK AccessMask;
};

typedef struct _SE_ADT_PARAMETER_ARRAY _SE_ADT_PARAMETER_ARRAY, *P_SE_ADT_PARAMETER_ARRAY;

typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY _SE_ADT_PARAMETER_ARRAY_ENTRY, *P_SE_ADT_PARAMETER_ARRAY_ENTRY;

typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY SE_ADT_PARAMETER_ARRAY_ENTRY;

typedef enum _SE_ADT_PARAMETER_TYPE {
    SeAdtParmTypeAccessMask=7,
    SeAdtParmTypeAccessReason=29,
    SeAdtParmTypeDateTime=22,
    SeAdtParmTypeDuration=18,
    SeAdtParmTypeFileSpec=2,
    SeAdtParmTypeGuid=13,
    SeAdtParmTypeHexInt64=15,
    SeAdtParmTypeHexUlong=10,
    SeAdtParmTypeLogonHours=25,
    SeAdtParmTypeLogonId=5,
    SeAdtParmTypeLogonIdNoSid=26,
    SeAdtParmTypeLuid=14,
    SeAdtParmTypeMessage=21,
    SeAdtParmTypeNoLogonId=6,
    SeAdtParmTypeNoUac=20,
    SeAdtParmTypeNone=0,
    SeAdtParmTypeObjectTypes=9,
    SeAdtParmTypePrivs=8,
    SeAdtParmTypePtr=11,
    SeAdtParmTypeSD=24,
    SeAdtParmTypeSid=4,
    SeAdtParmTypeSidList=17,
    SeAdtParmTypeSockAddr=23,
    SeAdtParmTypeSockAddrNoPort=28,
    SeAdtParmTypeString=1,
    SeAdtParmTypeStringList=16,
    SeAdtParmTypeTime=12,
    SeAdtParmTypeUlong=3,
    SeAdtParmTypeUlongNoConv=27,
    SeAdtParmTypeUserAccountControl=19
} _SE_ADT_PARAMETER_TYPE;

typedef enum _SE_ADT_PARAMETER_TYPE SE_ADT_PARAMETER_TYPE;

struct _SE_ADT_PARAMETER_ARRAY_ENTRY {
    SE_ADT_PARAMETER_TYPE Type;
    ULONG Length;
    ULONG_PTR Data[2];
    PVOID Address;
};

struct _SE_ADT_PARAMETER_ARRAY {
    ULONG CategoryId;
    ULONG AuditId;
    ULONG ParameterCount;
    ULONG Length;
    USHORT FlatSubCategoryId;
    USHORT Type;
    ULONG Flags;
    SE_ADT_PARAMETER_ARRAY_ENTRY Parameters[32];
};

typedef struct _SECURITY_LOGON_SESSION_DATA _SECURITY_LOGON_SESSION_DATA, *P_SECURITY_LOGON_SESSION_DATA;

typedef struct _LSA_LAST_INTER_LOGON_INFO LSA_LAST_INTER_LOGON_INFO;

struct _SECURITY_LOGON_SESSION_DATA {
    ULONG Size;
    LUID LogonId;
    LSA_UNICODE_STRING UserName;
    LSA_UNICODE_STRING LogonDomain;
    LSA_UNICODE_STRING AuthenticationPackage;
    ULONG LogonType;
    ULONG Session;
    PSID Sid;
    LARGE_INTEGER LogonTime;
    LSA_UNICODE_STRING LogonServer;
    LSA_UNICODE_STRING DnsDomainName;
    LSA_UNICODE_STRING Upn;
    ULONG UserFlags;
    LSA_LAST_INTER_LOGON_INFO LastLogonInfo;
    LSA_UNICODE_STRING LogonScript;
    LSA_UNICODE_STRING ProfilePath;
    LSA_UNICODE_STRING HomeDirectory;
    LSA_UNICODE_STRING HomeDirectoryDrive;
    LARGE_INTEGER LogoffTime;
    LARGE_INTEGER KickOffTime;
    LARGE_INTEGER PasswordLastSet;
    LARGE_INTEGER PasswordCanChange;
    LARGE_INTEGER PasswordMustChange;
};

typedef enum _SECURITY_LOGON_TYPE {
    Batch=4,
    CachedInteractive=11,
    CachedRemoteInteractive=12,
    CachedUnlock=13,
    Interactive=2,
    Network=3,
    NetworkCleartext=8,
    NewCredentials=9,
    Proxy=6,
    RemoteInteractive=10,
    Service=5,
    UndefinedLogonType=0,
    Unlock=7
} _SECURITY_LOGON_TYPE;

typedef struct _TRUSTED_CONTROLLERS_INFO _TRUSTED_CONTROLLERS_INFO, *P_TRUSTED_CONTROLLERS_INFO;

struct _TRUSTED_CONTROLLERS_INFO {
    ULONG Entries;
    PLSA_UNICODE_STRING Names;
};

typedef struct _TRUSTED_DOMAIN_AUTH_INFORMATION _TRUSTED_DOMAIN_AUTH_INFORMATION, *P_TRUSTED_DOMAIN_AUTH_INFORMATION;

typedef struct _LSA_AUTH_INFORMATION * PLSA_AUTH_INFORMATION;

struct _TRUSTED_DOMAIN_AUTH_INFORMATION {
    ULONG IncomingAuthInfos;
    PLSA_AUTH_INFORMATION IncomingAuthenticationInformation;
    PLSA_AUTH_INFORMATION IncomingPreviousAuthenticationInformation;
    ULONG OutgoingAuthInfos;
    PLSA_AUTH_INFORMATION OutgoingAuthenticationInformation;
    PLSA_AUTH_INFORMATION OutgoingPreviousAuthenticationInformation;
};

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION _TRUSTED_DOMAIN_FULL_INFORMATION, *P_TRUSTED_DOMAIN_FULL_INFORMATION;

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX _TRUSTED_DOMAIN_INFORMATION_EX, *P_TRUSTED_DOMAIN_INFORMATION_EX;

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX TRUSTED_DOMAIN_INFORMATION_EX;

typedef struct _TRUSTED_POSIX_OFFSET_INFO _TRUSTED_POSIX_OFFSET_INFO, *P_TRUSTED_POSIX_OFFSET_INFO;

typedef struct _TRUSTED_POSIX_OFFSET_INFO TRUSTED_POSIX_OFFSET_INFO;

typedef struct _TRUSTED_DOMAIN_AUTH_INFORMATION TRUSTED_DOMAIN_AUTH_INFORMATION;

struct _TRUSTED_POSIX_OFFSET_INFO {
    ULONG Offset;
};

struct _TRUSTED_DOMAIN_INFORMATION_EX {
    LSA_UNICODE_STRING Name;
    LSA_UNICODE_STRING FlatName;
    PSID Sid;
    ULONG TrustDirection;
    ULONG TrustType;
    ULONG TrustAttributes;
};

struct _TRUSTED_DOMAIN_FULL_INFORMATION {
    TRUSTED_DOMAIN_INFORMATION_EX Information;
    TRUSTED_POSIX_OFFSET_INFO PosixOffset;
    TRUSTED_DOMAIN_AUTH_INFORMATION AuthInformation;
};

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION2 _TRUSTED_DOMAIN_FULL_INFORMATION2, *P_TRUSTED_DOMAIN_FULL_INFORMATION2;

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX2 _TRUSTED_DOMAIN_INFORMATION_EX2, *P_TRUSTED_DOMAIN_INFORMATION_EX2;

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX2 TRUSTED_DOMAIN_INFORMATION_EX2;

struct _TRUSTED_DOMAIN_INFORMATION_EX2 {
    LSA_UNICODE_STRING Name;
    LSA_UNICODE_STRING FlatName;
    PSID Sid;
    ULONG TrustDirection;
    ULONG TrustType;
    ULONG TrustAttributes;
    ULONG ForestTrustLength;
    PUCHAR ForestTrustInfo;
};

struct _TRUSTED_DOMAIN_FULL_INFORMATION2 {
    TRUSTED_DOMAIN_INFORMATION_EX2 Information;
    TRUSTED_POSIX_OFFSET_INFO PosixOffset;
    TRUSTED_DOMAIN_AUTH_INFORMATION AuthInformation;
};

typedef struct _TRUSTED_DOMAIN_NAME_INFO _TRUSTED_DOMAIN_NAME_INFO, *P_TRUSTED_DOMAIN_NAME_INFO;

struct _TRUSTED_DOMAIN_NAME_INFO {
    LSA_UNICODE_STRING Name;
};

typedef struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES, *P_TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES;

struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES {
    ULONG SupportedEncryptionTypes;
};

typedef enum _TRUSTED_INFORMATION_CLASS {
    TrustedControllersInformation=2,
    TrustedDomainAuthInformation=7,
    TrustedDomainAuthInformationInternal=9,
    TrustedDomainFullInformation=8,
    TrustedDomainFullInformation2Internal=12,
    TrustedDomainFullInformationInternal=10,
    TrustedDomainInformationBasic=5,
    TrustedDomainInformationEx=6,
    TrustedDomainInformationEx2Internal=11,
    TrustedDomainNameInformation=1,
    TrustedDomainSupportedEncryptionTypes=13,
    TrustedPasswordInformation=4,
    TrustedPosixOffsetInformation=3
} _TRUSTED_INFORMATION_CLASS;

typedef struct _TRUSTED_PASSWORD_INFO _TRUSTED_PASSWORD_INFO, *P_TRUSTED_PASSWORD_INFO;

struct _TRUSTED_PASSWORD_INFO {
    LSA_UNICODE_STRING Password;
    LSA_UNICODE_STRING OldPassword;
};

typedef struct _AUDIT_POLICY_INFORMATION AUDIT_POLICY_INFORMATION;

typedef enum enum_6923 {
    MsvAvChannelBindings=10,
    MsvAvDnsComputerName=3,
    MsvAvDnsDomainName=4,
    MsvAvDnsTreeName=5,
    MsvAvEOL=0,
    MsvAvFlags=6,
    MsvAvNbComputerName=1,
    MsvAvNbDomainName=2,
    MsvAvRestrictions=8,
    MsvAvTargetName=9,
    MsvAvTimestamp=7
} enum_6923;

typedef struct _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST KERB_ADD_BINDING_CACHE_ENTRY_REQUEST;

typedef struct _KERB_ADD_CREDENTIALS_REQUEST_EX KERB_ADD_CREDENTIALS_REQUEST_EX;

typedef struct _KERB_AUTH_DATA KERB_AUTH_DATA;

typedef struct _KERB_CERTIFICATE_S4U_LOGON KERB_CERTIFICATE_S4U_LOGON;

typedef struct _KERB_CERTIFICATE_UNLOCK_LOGON KERB_CERTIFICATE_UNLOCK_LOGON;

typedef struct _KERB_CHANGEPASSWORD_REQUEST KERB_CHANGEPASSWORD_REQUEST;

typedef struct _KERB_DECRYPT_REQUEST KERB_DECRYPT_REQUEST;

typedef struct _KERB_DECRYPT_RESPONSE KERB_DECRYPT_RESPONSE;

typedef struct _KERB_EXTERNAL_NAME KERB_EXTERNAL_NAME;

typedef struct _KERB_INTERACTIVE_UNLOCK_LOGON KERB_INTERACTIVE_UNLOCK_LOGON;

typedef struct _KERB_NET_ADDRESSES KERB_NET_ADDRESSES;

typedef struct _KERB_PURGE_TKT_CACHE_EX_REQUEST KERB_PURGE_TKT_CACHE_EX_REQUEST;

typedef struct _KERB_PURGE_TKT_CACHE_REQUEST KERB_PURGE_TKT_CACHE_REQUEST;

typedef struct _KERB_QUERY_TKT_CACHE_EX2_RESPONSE KERB_QUERY_TKT_CACHE_EX2_RESPONSE;

typedef struct _KERB_QUERY_TKT_CACHE_EX_RESPONSE KERB_QUERY_TKT_CACHE_EX_RESPONSE;

typedef struct _KERB_QUERY_TKT_CACHE_REQUEST KERB_QUERY_TKT_CACHE_REQUEST;

typedef struct _KERB_QUERY_TKT_CACHE_RESPONSE KERB_QUERY_TKT_CACHE_RESPONSE;

typedef struct _KERB_REFRESH_SCCRED_REQUEST KERB_REFRESH_SCCRED_REQUEST;

typedef struct _KERB_RETRIEVE_TKT_REQUEST KERB_RETRIEVE_TKT_REQUEST;

typedef struct _KERB_RETRIEVE_TKT_RESPONSE KERB_RETRIEVE_TKT_RESPONSE;

typedef struct _KERB_S4U_LOGON KERB_S4U_LOGON;

typedef struct _KERB_SETPASSWORD_EX_REQUEST KERB_SETPASSWORD_EX_REQUEST;

typedef struct _KERB_SETPASSWORD_REQUEST KERB_SETPASSWORD_REQUEST;

typedef struct _KERB_SMART_CARD_PROFILE KERB_SMART_CARD_PROFILE;

typedef struct _KERB_SMART_CARD_UNLOCK_LOGON KERB_SMART_CARD_UNLOCK_LOGON;

typedef struct _KERB_SUBMIT_TKT_REQUEST KERB_SUBMIT_TKT_REQUEST;

typedef struct _KERB_TICKET_PROFILE KERB_TICKET_PROFILE;

typedef struct _KERB_TICKET_UNLOCK_LOGON KERB_TICKET_UNLOCK_LOGON;

typedef struct _KERB_TRANSFER_CRED_REQUEST KERB_TRANSFER_CRED_REQUEST;

typedef struct _AUDIT_POLICY_INFORMATION * PAUDIT_POLICY_INFORMATION;

typedef PAUDIT_POLICY_INFORMATION LPCAUDIT_POLICY_INFORMATION;

typedef struct _LSA_AUTH_INFORMATION LSA_AUTH_INFORMATION;

typedef ULONG LSA_ENUMERATION_HANDLE;

typedef struct _LSA_ENUMERATION_INFORMATION LSA_ENUMERATION_INFORMATION;

typedef struct _LSA_FOREST_TRUST_COLLISION_INFORMATION LSA_FOREST_TRUST_COLLISION_INFORMATION;

typedef struct _LSA_FOREST_TRUST_COLLISION_RECORD LSA_FOREST_TRUST_COLLISION_RECORD;

typedef struct _LSA_FOREST_TRUST_INFORMATION LSA_FOREST_TRUST_INFORMATION;

typedef struct _LSA_FOREST_TRUST_RECORD LSA_FOREST_TRUST_RECORD;

typedef PVOID LSA_HANDLE;

typedef ULONG LSA_OPERATIONAL_MODE;

typedef struct _LSA_TRANSLATED_SID LSA_TRANSLATED_SID;

typedef struct _MSV1_0_AV_PAIR MSV1_0_AV_PAIR;

typedef enum enum_6923 MSV1_0_AVID;

typedef struct _MSV1_0_CHANGEPASSWORD_REQUEST MSV1_0_CHANGEPASSWORD_REQUEST;

typedef struct _MSV1_0_CHANGEPASSWORD_RESPONSE MSV1_0_CHANGEPASSWORD_RESPONSE;

typedef struct _MSV1_0_INTERACTIVE_LOGON MSV1_0_INTERACTIVE_LOGON;

typedef struct _MSV1_0_INTERACTIVE_PROFILE MSV1_0_INTERACTIVE_PROFILE;

typedef struct _MSV1_0_LM20_LOGON MSV1_0_LM20_LOGON;

typedef struct _MSV1_0_LM20_LOGON_PROFILE MSV1_0_LM20_LOGON_PROFILE;

typedef struct _MSV1_0_NTLM3_RESPONSE MSV1_0_NTLM3_RESPONSE;

typedef struct _MSV1_0_PASSTHROUGH_REQUEST MSV1_0_PASSTHROUGH_REQUEST;

typedef struct _MSV1_0_PASSTHROUGH_RESPONSE MSV1_0_PASSTHROUGH_RESPONSE;

typedef struct _MSV1_0_S4U_LOGON MSV1_0_S4U_LOGON;

typedef struct _MSV1_0_SUBAUTH_LOGON MSV1_0_SUBAUTH_LOGON;

typedef struct _MSV1_0_SUBAUTH_REQUEST MSV1_0_SUBAUTH_REQUEST;

typedef struct _MSV1_0_SUBAUTH_RESPONSE MSV1_0_SUBAUTH_RESPONSE;

typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL MSV1_0_SUPPLEMENTAL_CREDENTIAL;

typedef struct _NEGOTIATE_CALLER_NAME_REQUEST NEGOTIATE_CALLER_NAME_REQUEST;

typedef struct _NEGOTIATE_CALLER_NAME_RESPONSE NEGOTIATE_CALLER_NAME_RESPONSE;

typedef enum NEGOTIATE_MESSAGES {
    NegCallPackageMax=2,
    NegEnumPackagePrefixes=0,
    NegGetCallerName=1
} NEGOTIATE_MESSAGES;

typedef struct _NEGOTIATE_PACKAGE_PREFIX NEGOTIATE_PACKAGE_PREFIX;

typedef struct _NEGOTIATE_PACKAGE_PREFIXES NEGOTIATE_PACKAGE_PREFIXES;

typedef PAUDIT_POLICY_INFORMATION PCAUDIT_POLICY_INFORMATION;

typedef struct _DOMAIN_PASSWORD_INFORMATION * PDOMAIN_PASSWORD_INFORMATION;

typedef struct _KERB_ADD_BINDING_CACHE_ENTRY_REQUEST * PKERB_ADD_BINDING_CACHE_ENTRY_REQUEST;

typedef struct _KERB_ADD_CREDENTIALS_REQUEST * PKERB_ADD_CREDENTIALS_REQUEST;

typedef struct _KERB_ADD_CREDENTIALS_REQUEST_EX * PKERB_ADD_CREDENTIALS_REQUEST_EX;

typedef struct _KERB_AUTH_DATA * PKERB_AUTH_DATA;

typedef struct _KERB_CERTIFICATE_LOGON * PKERB_CERTIFICATE_LOGON;

typedef struct _KERB_CERTIFICATE_S4U_LOGON * PKERB_CERTIFICATE_S4U_LOGON;

typedef struct _KERB_CERTIFICATE_UNLOCK_LOGON * PKERB_CERTIFICATE_UNLOCK_LOGON;

typedef struct _KERB_CHANGEPASSWORD_REQUEST * PKERB_CHANGEPASSWORD_REQUEST;

typedef struct _KERB_DECRYPT_REQUEST * PKERB_DECRYPT_REQUEST;

typedef struct _KERB_DECRYPT_RESPONSE * PKERB_DECRYPT_RESPONSE;

typedef struct _KERB_EXTERNAL_TICKET * PKERB_EXTERNAL_TICKET;

typedef struct _KERB_INTERACTIVE_LOGON * PKERB_INTERACTIVE_LOGON;

typedef struct _KERB_INTERACTIVE_PROFILE * PKERB_INTERACTIVE_PROFILE;

typedef struct _KERB_INTERACTIVE_UNLOCK_LOGON * PKERB_INTERACTIVE_UNLOCK_LOGON;

typedef enum _KERB_LOGON_SUBMIT_TYPE * PKERB_LOGON_SUBMIT_TYPE;

typedef struct _KERB_NET_ADDRESS * PKERB_NET_ADDRESS;

typedef struct _KERB_NET_ADDRESSES * PKERB_NET_ADDRESSES;

typedef enum _KERB_PROFILE_BUFFER_TYPE * PKERB_PROFILE_BUFFER_TYPE;

typedef enum _KERB_PROTOCOL_MESSAGE_TYPE * PKERB_PROTOCOL_MESSAGE_TYPE;

typedef struct _KERB_PURGE_TKT_CACHE_EX_REQUEST * PKERB_PURGE_TKT_CACHE_EX_REQUEST;

typedef struct _KERB_PURGE_TKT_CACHE_REQUEST * PKERB_PURGE_TKT_CACHE_REQUEST;

typedef struct _KERB_QUERY_TKT_CACHE_EX2_RESPONSE * PKERB_QUERY_TKT_CACHE_EX2_RESPONSE;

typedef struct _KERB_QUERY_TKT_CACHE_EX_RESPONSE * PKERB_QUERY_TKT_CACHE_EX_RESPONSE;

typedef struct _KERB_QUERY_TKT_CACHE_REQUEST * PKERB_QUERY_TKT_CACHE_REQUEST;

typedef struct _KERB_QUERY_TKT_CACHE_RESPONSE * PKERB_QUERY_TKT_CACHE_RESPONSE;

typedef struct _KERB_REFRESH_SCCRED_REQUEST * PKERB_REFRESH_SCCRED_REQUEST;

typedef struct _KERB_RETRIEVE_TKT_REQUEST * PKERB_RETRIEVE_TKT_REQUEST;

typedef struct _KERB_RETRIEVE_TKT_RESPONSE * PKERB_RETRIEVE_TKT_RESPONSE;

typedef struct _KERB_S4U_LOGON * PKERB_S4U_LOGON;

typedef struct _KERB_SETPASSWORD_EX_REQUEST * PKERB_SETPASSWORD_EX_REQUEST;

typedef struct _KERB_SETPASSWORD_REQUEST * PKERB_SETPASSWORD_REQUEST;

typedef struct _KERB_SMART_CARD_LOGON * PKERB_SMART_CARD_LOGON;

typedef struct _KERB_SMART_CARD_PROFILE * PKERB_SMART_CARD_PROFILE;

typedef struct _KERB_SMART_CARD_UNLOCK_LOGON * PKERB_SMART_CARD_UNLOCK_LOGON;

typedef struct _KERB_SUBMIT_TKT_REQUEST * PKERB_SUBMIT_TKT_REQUEST;

typedef struct _KERB_TICKET_CACHE_INFO * PKERB_TICKET_CACHE_INFO;

typedef struct _KERB_TICKET_CACHE_INFO_EX * PKERB_TICKET_CACHE_INFO_EX;

typedef struct _KERB_TICKET_CACHE_INFO_EX2 * PKERB_TICKET_CACHE_INFO_EX2;

typedef struct _KERB_TICKET_LOGON * PKERB_TICKET_LOGON;

typedef struct _KERB_TICKET_PROFILE * PKERB_TICKET_PROFILE;

typedef struct _KERB_TICKET_UNLOCK_LOGON * PKERB_TICKET_UNLOCK_LOGON;

typedef struct _KERB_TRANSFER_CRED_REQUEST * PKERB_TRANSFER_CRED_REQUEST;

typedef struct _PKU2U_CERT_BLOB PKU2U_CERT_BLOB;

typedef struct _PKU2U_CERTIFICATE_S4U_LOGON PKU2U_CERTIFICATE_S4U_LOGON;

typedef struct _PKU2U_CREDUI_CONTEXT PKU2U_CREDUI_CONTEXT;

typedef ULONG * PLSA_ENUMERATION_HANDLE;

typedef struct _LSA_ENUMERATION_INFORMATION * PLSA_ENUMERATION_INFORMATION;

typedef struct _LSA_FOREST_TRUST_BINARY_DATA * PLSA_FOREST_TRUST_BINARY_DATA;

typedef struct _LSA_FOREST_TRUST_COLLISION_INFORMATION * PLSA_FOREST_TRUST_COLLISION_INFORMATION;

typedef struct _LSA_FOREST_TRUST_DOMAIN_INFO * PLSA_FOREST_TRUST_DOMAIN_INFO;

typedef struct _LSA_FOREST_TRUST_INFORMATION * PLSA_FOREST_TRUST_INFORMATION;

typedef PVOID * PLSA_HANDLE;

typedef struct _LSA_LAST_INTER_LOGON_INFO * PLSA_LAST_INTER_LOGON_INFO;

typedef ULONG * PLSA_OPERATIONAL_MODE;

typedef struct _LSA_TRANSLATED_SID * PLSA_TRANSLATED_SID;

typedef struct _MSV1_0_AV_PAIR * PMSV1_0_AV_PAIR;

typedef struct _MSV1_0_CHANGEPASSWORD_REQUEST * PMSV1_0_CHANGEPASSWORD_REQUEST;

typedef struct _MSV1_0_CHANGEPASSWORD_RESPONSE * PMSV1_0_CHANGEPASSWORD_RESPONSE;

typedef struct _MSV1_0_INTERACTIVE_LOGON * PMSV1_0_INTERACTIVE_LOGON;

typedef struct _MSV1_0_INTERACTIVE_PROFILE * PMSV1_0_INTERACTIVE_PROFILE;

typedef struct _MSV1_0_LM20_LOGON * PMSV1_0_LM20_LOGON;

typedef struct _MSV1_0_LM20_LOGON_PROFILE * PMSV1_0_LM20_LOGON_PROFILE;

typedef enum _MSV1_0_LOGON_SUBMIT_TYPE * PMSV1_0_LOGON_SUBMIT_TYPE;

typedef struct _MSV1_0_NTLM3_RESPONSE * PMSV1_0_NTLM3_RESPONSE;

typedef struct _MSV1_0_PASSTHROUGH_REQUEST * PMSV1_0_PASSTHROUGH_REQUEST;

typedef struct _MSV1_0_PASSTHROUGH_RESPONSE * PMSV1_0_PASSTHROUGH_RESPONSE;

typedef enum _MSV1_0_PROFILE_BUFFER_TYPE * PMSV1_0_PROFILE_BUFFER_TYPE;

typedef enum _MSV1_0_PROTOCOL_MESSAGE_TYPE * PMSV1_0_PROTOCOL_MESSAGE_TYPE;

typedef struct _MSV1_0_S4U_LOGON * PMSV1_0_S4U_LOGON;

typedef struct _MSV1_0_SUBAUTH_LOGON * PMSV1_0_SUBAUTH_LOGON;

typedef struct _MSV1_0_SUBAUTH_REQUEST * PMSV1_0_SUBAUTH_REQUEST;

typedef struct _MSV1_0_SUBAUTH_RESPONSE * PMSV1_0_SUBAUTH_RESPONSE;

typedef struct _MSV1_0_SUPPLEMENTAL_CREDENTIAL * PMSV1_0_SUPPLEMENTAL_CREDENTIAL;

typedef struct _NEGOTIATE_CALLER_NAME_REQUEST * PNEGOTIATE_CALLER_NAME_REQUEST;

typedef struct _NEGOTIATE_CALLER_NAME_RESPONSE * PNEGOTIATE_CALLER_NAME_RESPONSE;

typedef struct _NEGOTIATE_PACKAGE_PREFIX * PNEGOTIATE_PACKAGE_PREFIX;

typedef struct _NEGOTIATE_PACKAGE_PREFIXES * PNEGOTIATE_PACKAGE_PREFIXES;


/* WARNING! conflicting data type names: /ntsecapi.h/PNTSTATUS - /bcrypt.h/PNTSTATUS */

typedef struct _POLICY_AUDIT_CATEGORIES_INFO POLICY_AUDIT_CATEGORIES_INFO;

typedef ULONG POLICY_AUDIT_EVENT_OPTIONS;

typedef enum _POLICY_AUDIT_EVENT_TYPE POLICY_AUDIT_EVENT_TYPE;

typedef struct _POLICY_AUDIT_EVENTS_INFO POLICY_AUDIT_EVENTS_INFO;

typedef struct _POLICY_AUDIT_FULL_QUERY_INFO POLICY_AUDIT_FULL_QUERY_INFO;

typedef struct _POLICY_AUDIT_FULL_SET_INFO POLICY_AUDIT_FULL_SET_INFO;

typedef struct _POLICY_AUDIT_LOG_INFO POLICY_AUDIT_LOG_INFO;

typedef struct _POLICY_AUDIT_SID_ARRAY POLICY_AUDIT_SID_ARRAY;

typedef struct _POLICY_AUDIT_SUBCATEGORIES_INFO POLICY_AUDIT_SUBCATEGORIES_INFO;

typedef struct _POLICY_DEFAULT_QUOTA_INFO POLICY_DEFAULT_QUOTA_INFO;

typedef struct _POLICY_DOMAIN_EFS_INFO POLICY_DOMAIN_EFS_INFO;

typedef enum _POLICY_DOMAIN_INFORMATION_CLASS POLICY_DOMAIN_INFORMATION_CLASS;

typedef struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO POLICY_DOMAIN_KERBEROS_TICKET_INFO;

typedef enum _POLICY_INFORMATION_CLASS POLICY_INFORMATION_CLASS;

typedef struct _POLICY_LSA_SERVER_ROLE_INFO POLICY_LSA_SERVER_ROLE_INFO;

typedef struct _POLICY_MODIFICATION_INFO POLICY_MODIFICATION_INFO;

typedef enum _POLICY_NOTIFICATION_INFORMATION_CLASS POLICY_NOTIFICATION_INFORMATION_CLASS;

typedef struct _POLICY_PD_ACCOUNT_INFO POLICY_PD_ACCOUNT_INFO;

typedef struct _POLICY_PRIMARY_DOMAIN_INFO POLICY_PRIMARY_DOMAIN_INFO;

typedef struct _POLICY_REPLICA_SOURCE_INFO POLICY_REPLICA_SOURCE_INFO;

typedef struct _PKU2U_CERT_BLOB * PPKU2U_CERT_BLOB;

typedef struct _PKU2U_CERTIFICATE_S4U_LOGON * PPKU2U_CERTIFICATE_S4U_LOGON;

typedef struct _PKU2U_CREDUI_CONTEXT * PPKU2U_CREDUI_CONTEXT;

typedef enum _PKU2U_LOGON_SUBMIT_TYPE * PPKU2U_LOGON_SUBMIT_TYPE;

typedef struct _POLICY_AUDIT_CATEGORIES_INFO * PPOLICY_AUDIT_CATEGORIES_INFO;

typedef enum _POLICY_AUDIT_EVENT_TYPE * PPOLICY_AUDIT_EVENT_TYPE;

typedef struct _POLICY_AUDIT_EVENTS_INFO * PPOLICY_AUDIT_EVENTS_INFO;

typedef struct _POLICY_AUDIT_FULL_QUERY_INFO * PPOLICY_AUDIT_FULL_QUERY_INFO;

typedef struct _POLICY_AUDIT_FULL_SET_INFO * PPOLICY_AUDIT_FULL_SET_INFO;

typedef struct _POLICY_AUDIT_LOG_INFO * PPOLICY_AUDIT_LOG_INFO;

typedef struct _POLICY_AUDIT_SID_ARRAY * PPOLICY_AUDIT_SID_ARRAY;

typedef struct _POLICY_DEFAULT_QUOTA_INFO * PPOLICY_DEFAULT_QUOTA_INFO;

typedef struct _POLICY_DOMAIN_EFS_INFO * PPOLICY_DOMAIN_EFS_INFO;

typedef enum _POLICY_DOMAIN_INFORMATION_CLASS * PPOLICY_DOMAIN_INFORMATION_CLASS;

typedef struct _POLICY_DOMAIN_KERBEROS_TICKET_INFO * PPOLICY_DOMAIN_KERBEROS_TICKET_INFO;

typedef enum _POLICY_INFORMATION_CLASS * PPOLICY_INFORMATION_CLASS;

typedef enum _POLICY_LSA_SERVER_ROLE * PPOLICY_LSA_SERVER_ROLE;

typedef struct _POLICY_LSA_SERVER_ROLE_INFO * PPOLICY_LSA_SERVER_ROLE_INFO;

typedef struct _POLICY_MODIFICATION_INFO * PPOLICY_MODIFICATION_INFO;

typedef enum _POLICY_NOTIFICATION_INFORMATION_CLASS * PPOLICY_NOTIFICATION_INFORMATION_CLASS;

typedef struct _POLICY_PD_ACCOUNT_INFO * PPOLICY_PD_ACCOUNT_INFO;

typedef struct _POLICY_PRIMARY_DOMAIN_INFO * PPOLICY_PRIMARY_DOMAIN_INFO;

typedef struct _POLICY_REPLICA_SOURCE_INFO * PPOLICY_REPLICA_SOURCE_INFO;

typedef BOOLEAN (* PSAM_INIT_NOTIFICATION_ROUTINE)(void);

typedef LSA_UNICODE_STRING * PUNICODE_STRING;

typedef BOOLEAN (* PSAM_PASSWORD_FILTER_ROUTINE)(PUNICODE_STRING, PUNICODE_STRING, PUNICODE_STRING, BOOLEAN);

typedef NTSTATUS (* PSAM_PASSWORD_NOTIFICATION_ROUTINE)(PUNICODE_STRING, ULONG, PUNICODE_STRING);

typedef struct _SE_ADT_ACCESS_REASON * PSE_ADT_ACCESS_REASON;

typedef struct _SE_ADT_OBJECT_TYPE * PSE_ADT_OBJECT_TYPE;

typedef struct _SE_ADT_PARAMETER_ARRAY * PSE_ADT_PARAMETER_ARRAY;

typedef struct _SE_ADT_PARAMETER_ARRAY_ENTRY * PSE_ADT_PARAMETER_ARRAY_ENTRY;

typedef enum _SE_ADT_PARAMETER_TYPE * PSE_ADT_PARAMETER_TYPE;

typedef struct _SecHandle * PSecHandle;

typedef struct _SECURITY_LOGON_SESSION_DATA * PSECURITY_LOGON_SESSION_DATA;

typedef enum _SECURITY_LOGON_TYPE * PSECURITY_LOGON_TYPE;

typedef LSA_STRING * PSTRING;

typedef struct _TRUSTED_CONTROLLERS_INFO * PTRUSTED_CONTROLLERS_INFO;

typedef struct _TRUSTED_DOMAIN_AUTH_INFORMATION * PTRUSTED_DOMAIN_AUTH_INFORMATION;

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION * PTRUSTED_DOMAIN_FULL_INFORMATION;

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION2 * PTRUSTED_DOMAIN_FULL_INFORMATION2;

typedef PLSA_TRUST_INFORMATION PTRUSTED_DOMAIN_INFORMATION_BASIC;

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX * PTRUSTED_DOMAIN_INFORMATION_EX;

typedef struct _TRUSTED_DOMAIN_INFORMATION_EX2 * PTRUSTED_DOMAIN_INFORMATION_EX2;

typedef struct _TRUSTED_DOMAIN_NAME_INFO * PTRUSTED_DOMAIN_NAME_INFO;

typedef struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES * PTRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES;

typedef enum _TRUSTED_INFORMATION_CLASS * PTRUSTED_INFORMATION_CLASS;

typedef struct _TRUSTED_PASSWORD_INFO * PTRUSTED_PASSWORD_INFO;

typedef struct _TRUSTED_POSIX_OFFSET_INFO * PTRUSTED_POSIX_OFFSET_INFO;

typedef struct _SE_ADT_ACCESS_REASON SE_ADT_ACCESS_REASON;

typedef struct _SE_ADT_OBJECT_TYPE SE_ADT_OBJECT_TYPE;

typedef struct _SE_ADT_PARAMETER_ARRAY SE_ADT_PARAMETER_ARRAY;

typedef struct _SECURITY_LOGON_SESSION_DATA SECURITY_LOGON_SESSION_DATA;

typedef enum _SECURITY_LOGON_TYPE SECURITY_LOGON_TYPE;

typedef struct _TRUSTED_CONTROLLERS_INFO TRUSTED_CONTROLLERS_INFO;

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION TRUSTED_DOMAIN_FULL_INFORMATION;

typedef struct _TRUSTED_DOMAIN_FULL_INFORMATION2 TRUSTED_DOMAIN_FULL_INFORMATION2;

typedef LSA_TRUST_INFORMATION TRUSTED_DOMAIN_INFORMATION_BASIC;

typedef struct _TRUSTED_DOMAIN_NAME_INFO TRUSTED_DOMAIN_NAME_INFO;

typedef struct _TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES;

typedef enum _TRUSTED_INFORMATION_CLASS TRUSTED_INFORMATION_CLASS;

typedef struct _TRUSTED_PASSWORD_INFO TRUSTED_PASSWORD_INFO;

#define DISPID_COLLECT -8

#define DISPID_CONSTRUCTOR -6

#define DISPID_DESTRUCTOR -7

#define DISPID_EVALUATE -5

#define DISPID_NEWENUM -4

#define DISPID_PROPERTYPUT -3

#define DISPID_UNKNOWN -1

#define DISPID_VALUE 0

#define FADF_AUTO 1

#define FADF_BSTR 256

#define FADF_DISPATCH 1024

#define FADF_EMBEDDED 4

#define FADF_FIXEDSIZE 16

#define FADF_HAVEIID 64

#define FADF_HAVEVARTYPE 128

#define FADF_RECORD 32

#define FADF_RESERVED 61448

#define FADF_STATIC 2

#define FADF_UNKNOWN 512

#define FADF_VARIANT 2048

#define IDLFLAG_FIN 1

#define IDLFLAG_FLCID 4

#define IDLFLAG_FOUT 2

#define IDLFLAG_FRETVAL 8

#define IDLFLAG_NONE 0

#define IMPLTYPEFLAG_FDEFAULT 1

#define IMPLTYPEFLAG_FDEFAULTVTABLE 8

#define IMPLTYPEFLAG_FRESTRICTED 4

#define IMPLTYPEFLAG_FSOURCE 2

#define PARAMFLAG_FHASCUSTDATA 64

#define PARAMFLAG_FHASDEFAULT 32

#define PARAMFLAG_FIN 1

#define PARAMFLAG_FLCID 4

#define PARAMFLAG_FOPT 16

#define PARAMFLAG_FOUT 2

#define PARAMFLAG_FRETVAL 8

#define PARAMFLAG_NONE 0

typedef union __MIDL_IOleAutomationTypes_0001 __MIDL_IOleAutomationTypes_0001, *P__MIDL_IOleAutomationTypes_0001;

typedef struct _wireSAFEARR_BSTR _wireSAFEARR_BSTR, *P_wireSAFEARR_BSTR;

typedef struct _wireSAFEARR_BSTR SAFEARR_BSTR;

typedef struct _wireSAFEARR_UNKNOWN _wireSAFEARR_UNKNOWN, *P_wireSAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_UNKNOWN SAFEARR_UNKNOWN;

typedef struct _wireSAFEARR_DISPATCH _wireSAFEARR_DISPATCH, *P_wireSAFEARR_DISPATCH;

typedef struct _wireSAFEARR_DISPATCH SAFEARR_DISPATCH;

typedef struct _wireSAFEARR_VARIANT _wireSAFEARR_VARIANT, *P_wireSAFEARR_VARIANT;

typedef struct _wireSAFEARR_VARIANT SAFEARR_VARIANT;

typedef struct _wireSAFEARR_BRECORD _wireSAFEARR_BRECORD, *P_wireSAFEARR_BRECORD;

typedef struct _wireSAFEARR_BRECORD SAFEARR_BRECORD;

typedef struct _wireSAFEARR_HAVEIID _wireSAFEARR_HAVEIID, *P_wireSAFEARR_HAVEIID;

typedef struct _wireSAFEARR_HAVEIID SAFEARR_HAVEIID;

typedef struct _BYTE_SIZEDARR _BYTE_SIZEDARR, *P_BYTE_SIZEDARR;

typedef struct _BYTE_SIZEDARR BYTE_SIZEDARR;

typedef struct _SHORT_SIZEDARR _SHORT_SIZEDARR, *P_SHORT_SIZEDARR;

typedef struct _SHORT_SIZEDARR WORD_SIZEDARR;

typedef struct _LONG_SIZEDARR _LONG_SIZEDARR, *P_LONG_SIZEDARR;

typedef struct _LONG_SIZEDARR DWORD_SIZEDARR;

typedef struct _HYPER_SIZEDARR _HYPER_SIZEDARR, *P_HYPER_SIZEDARR;

typedef struct _HYPER_SIZEDARR HYPER_SIZEDARR;

typedef struct _FLAGGED_WORD_BLOB _FLAGGED_WORD_BLOB, *P_FLAGGED_WORD_BLOB;

typedef struct _FLAGGED_WORD_BLOB FLAGGED_WORD_BLOB;

typedef FLAGGED_WORD_BLOB * wireBSTR;

typedef struct _wireVARIANT _wireVARIANT, *P_wireVARIANT;

typedef struct _wireVARIANT * wireVARIANT;

typedef struct _wireBRECORD _wireBRECORD, *P_wireBRECORD;

typedef struct _wireBRECORD * wireBRECORD;

typedef double hyper;

typedef union _union_2689 _union_2689, *P_union_2689;

typedef struct _wireSAFEARRAY _wireSAFEARRAY, *P_wireSAFEARRAY;

typedef struct _wireSAFEARRAY * wireSAFEARRAY;

typedef wireSAFEARRAY * wirePSAFEARRAY;

typedef struct _wireSAFEARRAY_UNION _wireSAFEARRAY_UNION, *P_wireSAFEARRAY_UNION;

typedef struct _wireSAFEARRAY_UNION SAFEARRAYUNION;

struct _LONG_SIZEDARR {
    ulong clSize;
    ulong * pData;
};

struct _BYTE_SIZEDARR {
    ulong clSize;
    byte * pData;
};

struct _wireSAFEARR_HAVEIID {
    ULONG Size;
    struct IUnknown * * apUnknown;
    IID iid;
};

struct _wireSAFEARR_DISPATCH {
    ULONG Size;
    struct IDispatch * * apDispatch;
};

struct _wireSAFEARR_UNKNOWN {
    ULONG Size;
    struct IUnknown * * apUnknown;
};

struct _wireSAFEARR_VARIANT {
    ULONG Size;
    wireVARIANT * aVariant;
};

struct _HYPER_SIZEDARR {
    ulong clSize;
    hyper * pData;
};

struct _wireSAFEARR_BSTR {
    ULONG Size;
    wireBSTR * aBstr;
};

struct _wireSAFEARR_BRECORD {
    ULONG Size;
    wireBRECORD * aRecord;
};

struct _SHORT_SIZEDARR {
    ulong clSize;
    ushort * pData;
};

union __MIDL_IOleAutomationTypes_0001 {
    SAFEARR_BSTR BstrStr;
    SAFEARR_UNKNOWN UnknownStr;
    SAFEARR_DISPATCH DispatchStr;
    SAFEARR_VARIANT VariantStr;
    SAFEARR_BRECORD RecordStr;
    SAFEARR_HAVEIID HaveIidStr;
    BYTE_SIZEDARR ByteStr;
    WORD_SIZEDARR WordStr;
    DWORD_SIZEDARR LongStr;
    HYPER_SIZEDARR HyperStr;
};

struct _wireSAFEARRAY_UNION {
    ULONG sfType;
    union __MIDL_IOleAutomationTypes_0001 u;
};

struct _wireSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    SAFEARRAYUNION uArrayStructs;
    SAFEARRAYBOUND rgsabound[1];
};

union _union_2689 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    wireBSTR bstrVal;
    struct IUnknown * punkVal;
    struct IDispatch * pdispVal;
    wirePSAFEARRAY parray;
    wireBRECORD brecVal;
    BYTE * pbVal;
    SHORT * piVal;
    LONG * plVal;
    LONGLONG * pllVal;
    FLOAT * pfltVal;
    DOUBLE * pdblVal;
    VARIANT_BOOL * pboolVal;
    SCODE * pscode;
    CY * pcyVal;
    DATE * pdate;
    wireBSTR * pbstrVal;
    struct IUnknown * * ppunkVal;
    struct IDispatch * * ppdispVal;
    wirePSAFEARRAY * pparray;
    wireVARIANT * pvarVal;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL decVal;
    DECIMAL * pdecVal;
    CHAR * pcVal;
    USHORT * puiVal;
    ULONG * pulVal;
    ULONGLONG * pullVal;
    INT * pintVal;
    UINT * puintVal;
};

struct _wireVARIANT {
    DWORD clSize;
    DWORD rpcReserved;
    USHORT vt;
    USHORT wReserved1;
    USHORT wReserved2;
    USHORT wReserved3;
    union _union_2689 u;
};

struct _FLAGGED_WORD_BLOB {
    ulong fFlags;
    ulong clSize;
    ushort asData[1];
};

struct _wireBRECORD {
    ULONG fFlags;
    ULONG clSize;
    struct IRecordInfo * pRecInfo;
    byte * pRecord;
};

typedef struct tagARRAYDESC ARRAYDESC;

typedef enum tagCHANGEKIND {
    CHANGEKIND_ADDMEMBER=0,
    CHANGEKIND_CHANGEFAILED=6,
    CHANGEKIND_DELETEMEMBER=1,
    CHANGEKIND_GENERAL=4,
    CHANGEKIND_INVALIDATE=5,
    CHANGEKIND_MAX=7,
    CHANGEKIND_SETDOCUMENTATION=3,
    CHANGEKIND_SETNAMES=2
} tagCHANGEKIND;

typedef enum tagCHANGEKIND CHANGEKIND;

typedef struct tagCLEANLOCALSTORAGE tagCLEANLOCALSTORAGE, *PtagCLEANLOCALSTORAGE;

typedef struct tagCLEANLOCALSTORAGE CLEANLOCALSTORAGE;

struct tagCLEANLOCALSTORAGE {
    struct IUnknown * pInterface;
    PVOID pStorage;
    DWORD flags;
};

typedef CY CURRENCY;

typedef struct tagCUSTDATA tagCUSTDATA, *PtagCUSTDATA;

typedef struct tagCUSTDATA CUSTDATA;

typedef struct tagCUSTDATAITEM tagCUSTDATAITEM, *PtagCUSTDATAITEM;

typedef struct tagCUSTDATAITEM * LPCUSTDATAITEM;

struct tagCUSTDATAITEM {
    GUID guid;
    VARIANTARG varValue;
};

struct tagCUSTDATA {
    DWORD cCustData;
    LPCUSTDATAITEM prgCustData;
};

typedef struct tagCUSTDATAITEM CUSTDATAITEM;

typedef enum tagFUNCFLAGS {
    FUNCFLAG_FBINDABLE=4,
    FUNCFLAG_FDEFAULTBIND=32,
    FUNCFLAG_FDEFAULTCOLLELEM=256,
    FUNCFLAG_FDISPLAYBIND=16,
    FUNCFLAG_FHIDDEN=64,
    FUNCFLAG_FIMMEDIATEBIND=4096,
    FUNCFLAG_FNONBROWSABLE=1024,
    FUNCFLAG_FREPLACEABLE=2048,
    FUNCFLAG_FREQUESTEDIT=8,
    FUNCFLAG_FRESTRICTED=1,
    FUNCFLAG_FSOURCE=2,
    FUNCFLAG_FUIDEFAULT=512,
    FUNCFLAG_FUSESGETLASTERROR=128
} tagFUNCFLAGS;

typedef enum tagFUNCFLAGS FUNCFLAGS;

typedef struct ICreateErrorInfo ICreateErrorInfo, *PICreateErrorInfo;

typedef struct ICreateErrorInfoVtbl ICreateErrorInfoVtbl, *PICreateErrorInfoVtbl;

struct ICreateErrorInfo {
    struct ICreateErrorInfoVtbl * lpVtbl;
};

struct ICreateErrorInfoVtbl {
    HRESULT (* QueryInterface)(struct ICreateErrorInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateErrorInfo *);
    ULONG (* Release)(struct ICreateErrorInfo *);
    HRESULT (* SetGUID)(struct ICreateErrorInfo *, GUID *);
    HRESULT (* SetSource)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (* SetDescription)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (* SetHelpFile)(struct ICreateErrorInfo *, LPOLESTR);
    HRESULT (* SetHelpContext)(struct ICreateErrorInfo *, DWORD);
};

typedef struct ICreateTypeInfo ICreateTypeInfo, *PICreateTypeInfo;

typedef struct ICreateTypeInfoVtbl ICreateTypeInfoVtbl, *PICreateTypeInfoVtbl;

struct ICreateTypeInfo {
    struct ICreateTypeInfoVtbl * lpVtbl;
};

struct ICreateTypeInfoVtbl {
    HRESULT (* QueryInterface)(struct ICreateTypeInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateTypeInfo *);
    ULONG (* Release)(struct ICreateTypeInfo *);
    HRESULT (* SetGuid)(struct ICreateTypeInfo *, GUID *);
    HRESULT (* SetTypeFlags)(struct ICreateTypeInfo *, UINT);
    HRESULT (* SetDocString)(struct ICreateTypeInfo *, LPOLESTR);
    HRESULT (* SetHelpContext)(struct ICreateTypeInfo *, DWORD);
    HRESULT (* SetVersion)(struct ICreateTypeInfo *, WORD, WORD);
    HRESULT (* AddRefTypeInfo)(struct ICreateTypeInfo *, struct ITypeInfo *, HREFTYPE *);
    HRESULT (* AddFuncDesc)(struct ICreateTypeInfo *, UINT, FUNCDESC *);
    HRESULT (* AddImplType)(struct ICreateTypeInfo *, UINT, HREFTYPE);
    HRESULT (* SetImplTypeFlags)(struct ICreateTypeInfo *, UINT, INT);
    HRESULT (* SetAlignment)(struct ICreateTypeInfo *, WORD);
    HRESULT (* SetSchema)(struct ICreateTypeInfo *, LPOLESTR);
    HRESULT (* AddVarDesc)(struct ICreateTypeInfo *, UINT, VARDESC *);
    HRESULT (* SetFuncAndParamNames)(struct ICreateTypeInfo *, UINT, LPOLESTR *, UINT);
    HRESULT (* SetVarName)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (* SetTypeDescAlias)(struct ICreateTypeInfo *, TYPEDESC *);
    HRESULT (* DefineFuncAsDllEntry)(struct ICreateTypeInfo *, UINT, LPOLESTR, LPOLESTR);
    HRESULT (* SetFuncDocString)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (* SetVarDocString)(struct ICreateTypeInfo *, UINT, LPOLESTR);
    HRESULT (* SetFuncHelpContext)(struct ICreateTypeInfo *, UINT, DWORD);
    HRESULT (* SetVarHelpContext)(struct ICreateTypeInfo *, UINT, DWORD);
    HRESULT (* SetMops)(struct ICreateTypeInfo *, UINT, BSTR);
    HRESULT (* SetTypeIdldesc)(struct ICreateTypeInfo *, IDLDESC *);
    HRESULT (* LayOut)(struct ICreateTypeInfo *);
};

typedef struct ICreateTypeInfo2 ICreateTypeInfo2, *PICreateTypeInfo2;

typedef struct ICreateTypeInfo2Vtbl ICreateTypeInfo2Vtbl, *PICreateTypeInfo2Vtbl;

struct ICreateTypeInfo2Vtbl {
    HRESULT (* QueryInterface)(struct ICreateTypeInfo2 *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateTypeInfo2 *);
    ULONG (* Release)(struct ICreateTypeInfo2 *);
    HRESULT (* SetGuid)(struct ICreateTypeInfo2 *, GUID *);
    HRESULT (* SetTypeFlags)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (* SetDocString)(struct ICreateTypeInfo2 *, LPOLESTR);
    HRESULT (* SetHelpContext)(struct ICreateTypeInfo2 *, DWORD);
    HRESULT (* SetVersion)(struct ICreateTypeInfo2 *, WORD, WORD);
    HRESULT (* AddRefTypeInfo)(struct ICreateTypeInfo2 *, struct ITypeInfo *, HREFTYPE *);
    HRESULT (* AddFuncDesc)(struct ICreateTypeInfo2 *, UINT, FUNCDESC *);
    HRESULT (* AddImplType)(struct ICreateTypeInfo2 *, UINT, HREFTYPE);
    HRESULT (* SetImplTypeFlags)(struct ICreateTypeInfo2 *, UINT, INT);
    HRESULT (* SetAlignment)(struct ICreateTypeInfo2 *, WORD);
    HRESULT (* SetSchema)(struct ICreateTypeInfo2 *, LPOLESTR);
    HRESULT (* AddVarDesc)(struct ICreateTypeInfo2 *, UINT, VARDESC *);
    HRESULT (* SetFuncAndParamNames)(struct ICreateTypeInfo2 *, UINT, LPOLESTR *, UINT);
    HRESULT (* SetVarName)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (* SetTypeDescAlias)(struct ICreateTypeInfo2 *, TYPEDESC *);
    HRESULT (* DefineFuncAsDllEntry)(struct ICreateTypeInfo2 *, UINT, LPOLESTR, LPOLESTR);
    HRESULT (* SetFuncDocString)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (* SetVarDocString)(struct ICreateTypeInfo2 *, UINT, LPOLESTR);
    HRESULT (* SetFuncHelpContext)(struct ICreateTypeInfo2 *, UINT, DWORD);
    HRESULT (* SetVarHelpContext)(struct ICreateTypeInfo2 *, UINT, DWORD);
    HRESULT (* SetMops)(struct ICreateTypeInfo2 *, UINT, BSTR);
    HRESULT (* SetTypeIdldesc)(struct ICreateTypeInfo2 *, IDLDESC *);
    HRESULT (* LayOut)(struct ICreateTypeInfo2 *);
    HRESULT (* DeleteFuncDesc)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (* DeleteFuncDescByMemId)(struct ICreateTypeInfo2 *, MEMBERID, INVOKEKIND);
    HRESULT (* DeleteVarDesc)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (* DeleteVarDescByMemId)(struct ICreateTypeInfo2 *, MEMBERID);
    HRESULT (* DeleteImplType)(struct ICreateTypeInfo2 *, UINT);
    HRESULT (* SetCustData)(struct ICreateTypeInfo2 *, GUID *, VARIANT *);
    HRESULT (* SetFuncCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (* SetParamCustData)(struct ICreateTypeInfo2 *, UINT, UINT, GUID *, VARIANT *);
    HRESULT (* SetVarCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (* SetImplTypeCustData)(struct ICreateTypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (* SetHelpStringContext)(struct ICreateTypeInfo2 *, ULONG);
    HRESULT (* SetFuncHelpStringContext)(struct ICreateTypeInfo2 *, UINT, ULONG);
    HRESULT (* SetVarHelpStringContext)(struct ICreateTypeInfo2 *, UINT, ULONG);
    HRESULT (* Invalidate)(struct ICreateTypeInfo2 *);
    HRESULT (* SetName)(struct ICreateTypeInfo2 *, LPOLESTR);
};

struct ICreateTypeInfo2 {
    struct ICreateTypeInfo2Vtbl * lpVtbl;
};

typedef struct ICreateTypeLib ICreateTypeLib, *PICreateTypeLib;

typedef struct ICreateTypeLibVtbl ICreateTypeLibVtbl, *PICreateTypeLibVtbl;

struct ICreateTypeLibVtbl {
    HRESULT (* QueryInterface)(struct ICreateTypeLib *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateTypeLib *);
    ULONG (* Release)(struct ICreateTypeLib *);
    HRESULT (* CreateTypeInfo)(struct ICreateTypeLib *, LPOLESTR, TYPEKIND, struct ICreateTypeInfo * *);
    HRESULT (* SetName)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (* SetVersion)(struct ICreateTypeLib *, WORD, WORD);
    HRESULT (* SetGuid)(struct ICreateTypeLib *, GUID *);
    HRESULT (* SetDocString)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (* SetHelpFileName)(struct ICreateTypeLib *, LPOLESTR);
    HRESULT (* SetHelpContext)(struct ICreateTypeLib *, DWORD);
    HRESULT (* SetLcid)(struct ICreateTypeLib *, LCID);
    HRESULT (* SetLibFlags)(struct ICreateTypeLib *, UINT);
    HRESULT (* SaveAllChanges)(struct ICreateTypeLib *);
};

struct ICreateTypeLib {
    struct ICreateTypeLibVtbl * lpVtbl;
};

typedef struct ICreateTypeLib2 ICreateTypeLib2, *PICreateTypeLib2;

typedef struct ICreateTypeLib2Vtbl ICreateTypeLib2Vtbl, *PICreateTypeLib2Vtbl;

struct ICreateTypeLib2 {
    struct ICreateTypeLib2Vtbl * lpVtbl;
};

struct ICreateTypeLib2Vtbl {
    HRESULT (* QueryInterface)(struct ICreateTypeLib2 *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateTypeLib2 *);
    ULONG (* Release)(struct ICreateTypeLib2 *);
    HRESULT (* CreateTypeInfo)(struct ICreateTypeLib2 *, LPOLESTR, TYPEKIND, struct ICreateTypeInfo * *);
    HRESULT (* SetName)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (* SetVersion)(struct ICreateTypeLib2 *, WORD, WORD);
    HRESULT (* SetGuid)(struct ICreateTypeLib2 *, GUID *);
    HRESULT (* SetDocString)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (* SetHelpFileName)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (* SetHelpContext)(struct ICreateTypeLib2 *, DWORD);
    HRESULT (* SetLcid)(struct ICreateTypeLib2 *, LCID);
    HRESULT (* SetLibFlags)(struct ICreateTypeLib2 *, UINT);
    HRESULT (* SaveAllChanges)(struct ICreateTypeLib2 *);
    HRESULT (* DeleteTypeInfo)(struct ICreateTypeLib2 *, LPOLESTR);
    HRESULT (* SetCustData)(struct ICreateTypeLib2 *, GUID *, VARIANT *);
    HRESULT (* SetHelpStringContext)(struct ICreateTypeLib2 *, ULONG);
    HRESULT (* SetHelpStringDll)(struct ICreateTypeLib2 *, LPOLESTR);
};

typedef struct IEnumVARIANT IEnumVARIANT, *PIEnumVARIANT;

typedef struct IEnumVARIANTVtbl IEnumVARIANTVtbl, *PIEnumVARIANTVtbl;

struct IEnumVARIANT {
    struct IEnumVARIANTVtbl * lpVtbl;
};

struct IEnumVARIANTVtbl {
    HRESULT (* QueryInterface)(struct IEnumVARIANT *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumVARIANT *);
    ULONG (* Release)(struct IEnumVARIANT *);
    HRESULT (* Next)(struct IEnumVARIANT *, ULONG, VARIANT *, ULONG *);
    HRESULT (* Skip)(struct IEnumVARIANT *, ULONG);
    HRESULT (* Reset)(struct IEnumVARIANT *);
    HRESULT (* Clone)(struct IEnumVARIANT *, struct IEnumVARIANT * *);
};

typedef struct IErrorInfo IErrorInfo, *PIErrorInfo;

typedef struct IErrorInfoVtbl IErrorInfoVtbl, *PIErrorInfoVtbl;

struct IErrorInfo {
    struct IErrorInfoVtbl * lpVtbl;
};

struct IErrorInfoVtbl {
    HRESULT (* QueryInterface)(struct IErrorInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IErrorInfo *);
    ULONG (* Release)(struct IErrorInfo *);
    HRESULT (* GetGUID)(struct IErrorInfo *, GUID *);
    HRESULT (* GetSource)(struct IErrorInfo *, BSTR *);
    HRESULT (* GetDescription)(struct IErrorInfo *, BSTR *);
    HRESULT (* GetHelpFile)(struct IErrorInfo *, BSTR *);
    HRESULT (* GetHelpContext)(struct IErrorInfo *, DWORD *);
};

typedef struct IErrorLog IErrorLog, *PIErrorLog;

typedef struct IErrorLogVtbl IErrorLogVtbl, *PIErrorLogVtbl;

struct IErrorLog {
    struct IErrorLogVtbl * lpVtbl;
};

struct IErrorLogVtbl {
    HRESULT (* QueryInterface)(struct IErrorLog *, IID *, void * *);
    ULONG (* AddRef)(struct IErrorLog *);
    ULONG (* Release)(struct IErrorLog *);
    HRESULT (* AddError)(struct IErrorLog *, LPCOLESTR, EXCEPINFO *);
};

typedef struct IPropertyBag IPropertyBag, *PIPropertyBag;

typedef struct IPropertyBagVtbl IPropertyBagVtbl, *PIPropertyBagVtbl;

struct IPropertyBag {
    struct IPropertyBagVtbl * lpVtbl;
};

struct IPropertyBagVtbl {
    HRESULT (* QueryInterface)(struct IPropertyBag *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyBag *);
    ULONG (* Release)(struct IPropertyBag *);
    HRESULT (* Read)(struct IPropertyBag *, LPCOLESTR, VARIANT *, struct IErrorLog *);
    HRESULT (* Write)(struct IPropertyBag *, LPCOLESTR, VARIANT *);
};

typedef struct ISupportErrorInfo ISupportErrorInfo, *PISupportErrorInfo;

typedef struct ISupportErrorInfoVtbl ISupportErrorInfoVtbl, *PISupportErrorInfoVtbl;

struct ISupportErrorInfoVtbl {
    HRESULT (* QueryInterface)(struct ISupportErrorInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ISupportErrorInfo *);
    ULONG (* Release)(struct ISupportErrorInfo *);
    HRESULT (* InterfaceSupportsErrorInfo)(struct ISupportErrorInfo *, IID *);
};

struct ISupportErrorInfo {
    struct ISupportErrorInfoVtbl * lpVtbl;
};

typedef struct ITypeChangeEvents ITypeChangeEvents, *PITypeChangeEvents;

typedef struct ITypeChangeEventsVtbl ITypeChangeEventsVtbl, *PITypeChangeEventsVtbl;

struct ITypeChangeEvents {
    struct ITypeChangeEventsVtbl * lpVtbl;
};

struct ITypeChangeEventsVtbl {
    HRESULT (* QueryInterface)(struct ITypeChangeEvents *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeChangeEvents *);
    ULONG (* Release)(struct ITypeChangeEvents *);
    HRESULT (* RequestTypeChange)(struct ITypeChangeEvents *, CHANGEKIND, struct ITypeInfo *, LPOLESTR, INT *);
    HRESULT (* AfterTypeChange)(struct ITypeChangeEvents *, CHANGEKIND, struct ITypeInfo *, LPOLESTR);
};

typedef struct ITypeFactory ITypeFactory, *PITypeFactory;

typedef struct ITypeFactoryVtbl ITypeFactoryVtbl, *PITypeFactoryVtbl;

struct ITypeFactoryVtbl {
    HRESULT (* QueryInterface)(struct ITypeFactory *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeFactory *);
    ULONG (* Release)(struct ITypeFactory *);
    HRESULT (* CreateFromTypeInfo)(struct ITypeFactory *, struct ITypeInfo *, IID *, struct IUnknown * *);
};

struct ITypeFactory {
    struct ITypeFactoryVtbl * lpVtbl;
};

typedef struct ITypeInfo2 ITypeInfo2, *PITypeInfo2;

typedef struct ITypeInfo2Vtbl ITypeInfo2Vtbl, *PITypeInfo2Vtbl;

struct ITypeInfo2Vtbl {
    HRESULT (* QueryInterface)(struct ITypeInfo2 *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeInfo2 *);
    ULONG (* Release)(struct ITypeInfo2 *);
    HRESULT (* GetTypeAttr)(struct ITypeInfo2 *, TYPEATTR * *);
    HRESULT (* GetTypeComp)(struct ITypeInfo2 *, struct ITypeComp * *);
    HRESULT (* GetFuncDesc)(struct ITypeInfo2 *, UINT, FUNCDESC * *);
    HRESULT (* GetVarDesc)(struct ITypeInfo2 *, UINT, VARDESC * *);
    HRESULT (* GetNames)(struct ITypeInfo2 *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (* GetRefTypeOfImplType)(struct ITypeInfo2 *, UINT, HREFTYPE *);
    HRESULT (* GetImplTypeFlags)(struct ITypeInfo2 *, UINT, INT *);
    HRESULT (* GetIDsOfNames)(struct ITypeInfo2 *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (* Invoke)(struct ITypeInfo2 *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* GetDocumentation)(struct ITypeInfo2 *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (* GetDllEntry)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (* GetRefTypeInfo)(struct ITypeInfo2 *, HREFTYPE, struct ITypeInfo * *);
    HRESULT (* AddressOfMember)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (* CreateInstance)(struct ITypeInfo2 *, struct IUnknown *, IID *, PVOID *);
    HRESULT (* GetMops)(struct ITypeInfo2 *, MEMBERID, BSTR *);
    HRESULT (* GetContainingTypeLib)(struct ITypeInfo2 *, struct ITypeLib * *, UINT *);
    void (* ReleaseTypeAttr)(struct ITypeInfo2 *, TYPEATTR *);
    void (* ReleaseFuncDesc)(struct ITypeInfo2 *, FUNCDESC *);
    void (* ReleaseVarDesc)(struct ITypeInfo2 *, VARDESC *);
    HRESULT (* GetTypeKind)(struct ITypeInfo2 *, TYPEKIND *);
    HRESULT (* GetTypeFlags)(struct ITypeInfo2 *, ULONG *);
    HRESULT (* GetFuncIndexOfMemId)(struct ITypeInfo2 *, MEMBERID, INVOKEKIND, UINT *);
    HRESULT (* GetVarIndexOfMemId)(struct ITypeInfo2 *, MEMBERID, UINT *);
    HRESULT (* GetCustData)(struct ITypeInfo2 *, GUID *, VARIANT *);
    HRESULT (* GetFuncCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (* GetParamCustData)(struct ITypeInfo2 *, UINT, UINT, GUID *, VARIANT *);
    HRESULT (* GetVarCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (* GetImplTypeCustData)(struct ITypeInfo2 *, UINT, GUID *, VARIANT *);
    HRESULT (* GetDocumentation2)(struct ITypeInfo2 *, MEMBERID, LCID, BSTR *, DWORD *, BSTR *);
    HRESULT (* GetAllCustData)(struct ITypeInfo2 *, CUSTDATA *);
    HRESULT (* GetAllFuncCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
    HRESULT (* GetAllParamCustData)(struct ITypeInfo2 *, UINT, UINT, CUSTDATA *);
    HRESULT (* GetAllVarCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
    HRESULT (* GetAllImplTypeCustData)(struct ITypeInfo2 *, UINT, CUSTDATA *);
};

struct ITypeInfo2 {
    struct ITypeInfo2Vtbl * lpVtbl;
};

typedef struct ITypeLib2 ITypeLib2, *PITypeLib2;

typedef struct ITypeLib2Vtbl ITypeLib2Vtbl, *PITypeLib2Vtbl;

struct ITypeLib2 {
    struct ITypeLib2Vtbl * lpVtbl;
};

struct ITypeLib2Vtbl {
    HRESULT (* QueryInterface)(struct ITypeLib2 *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeLib2 *);
    ULONG (* Release)(struct ITypeLib2 *);
    UINT (* GetTypeInfoCount)(struct ITypeLib2 *);
    HRESULT (* GetTypeInfo)(struct ITypeLib2 *, UINT, struct ITypeInfo * *);
    HRESULT (* GetTypeInfoType)(struct ITypeLib2 *, UINT, TYPEKIND *);
    HRESULT (* GetTypeInfoOfGuid)(struct ITypeLib2 *, GUID *, struct ITypeInfo * *);
    HRESULT (* GetLibAttr)(struct ITypeLib2 *, TLIBATTR * *);
    HRESULT (* GetTypeComp)(struct ITypeLib2 *, struct ITypeComp * *);
    HRESULT (* GetDocumentation)(struct ITypeLib2 *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (* IsName)(struct ITypeLib2 *, LPOLESTR, ULONG, BOOL *);
    HRESULT (* FindName)(struct ITypeLib2 *, LPOLESTR, ULONG, struct ITypeInfo * *, MEMBERID *, USHORT *);
    void (* ReleaseTLibAttr)(struct ITypeLib2 *, TLIBATTR *);
    HRESULT (* GetCustData)(struct ITypeLib2 *, GUID *, VARIANT *);
    HRESULT (* GetLibStatistics)(struct ITypeLib2 *, ULONG *, ULONG *);
    HRESULT (* GetDocumentation2)(struct ITypeLib2 *, INT, LCID, BSTR *, DWORD *, BSTR *);
    HRESULT (* GetAllCustData)(struct ITypeLib2 *, CUSTDATA *);
};

typedef struct ITypeMarshal ITypeMarshal, *PITypeMarshal;

typedef struct ITypeMarshalVtbl ITypeMarshalVtbl, *PITypeMarshalVtbl;

struct ITypeMarshal {
    struct ITypeMarshalVtbl * lpVtbl;
};

struct ITypeMarshalVtbl {
    HRESULT (* QueryInterface)(struct ITypeMarshal *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeMarshal *);
    ULONG (* Release)(struct ITypeMarshal *);
    HRESULT (* Size)(struct ITypeMarshal *, PVOID, DWORD, PVOID, ULONG *);
    HRESULT (* Marshal)(struct ITypeMarshal *, PVOID, DWORD, PVOID, ULONG, BYTE *, ULONG *);
    HRESULT (* Unmarshal)(struct ITypeMarshal *, PVOID, DWORD, ULONG, BYTE *, ULONG *);
    HRESULT (* Free)(struct ITypeMarshal *, PVOID);
};

typedef enum tagLIBFLAGS {
    LIBFLAG_FCONTROL=2,
    LIBFLAG_FHASDISKIMAGE=8,
    LIBFLAG_FHIDDEN=4,
    LIBFLAG_FRESTRICTED=1
} tagLIBFLAGS;

typedef enum tagLIBFLAGS LIBFLAGS;

typedef union tagBINDPTR * LPBINDPTR;

typedef struct ICreateErrorInfo * LPCREATEERRORINFO;

typedef struct ICreateTypeInfo * LPCREATETYPEINFO;

typedef struct ICreateTypeInfo2 * LPCREATETYPEINFO2;

typedef struct ICreateTypeLib * LPCREATETYPELIB;

typedef struct ICreateTypeLib2 * LPCREATETYPELIB2;

typedef struct tagCUSTDATA * LPCUSTDATA;

typedef struct IDispatch * LPDISPATCH;

typedef struct tagELEMDESC * LPELEMDESC;

typedef struct IEnumVARIANT * LPENUMVARIANT;

typedef struct IErrorInfo * LPERRORINFO;

typedef struct IErrorLog * LPERRORLOG;

typedef struct tagEXCEPINFO * LPEXCEPINFO;

typedef struct tagFUNCDESC * LPFUNCDESC;

typedef struct tagIDLDESC * LPIDLDESC;

typedef struct tagPARAMDESC * LPPARAMDESC;

typedef struct IPropertyBag * LPPROPERTYBAG;

typedef struct IRecordInfo * LPRECORDINFO;

typedef SAFEARRAY * LPSAFEARRAY;

typedef struct tagSAFEARRAYBOUND * LPSAFEARRAYBOUND;

typedef struct ISupportErrorInfo * LPSUPPORTERRORINFO;

typedef struct tagTLIBATTR * LPTLIBATTR;

typedef struct tagTYPEATTR * LPTYPEATTR;

typedef struct ITypeChangeEvents * LPTYPECHANGEEVENTS;

typedef struct ITypeComp * LPTYPECOMP;

typedef struct ITypeInfo * LPTYPEINFO;

typedef struct ITypeInfo2 * LPTYPEINFO2;

typedef struct ITypeLib * LPTYPELIB;

typedef struct ITypeLib2 * LPTYPELIB2;

typedef struct tagVARDESC * LPVARDESC;

typedef VARIANT * LPVARIANT;

typedef VARIANT * LPVARIANTARG;

typedef struct tagPARAMDESCEX PARAMDESCEX;

typedef enum tagSF_TYPE {
    SF_BSTR=5,
    SF_DISPATCH=7,
    SF_ERROR=0,
    SF_HAVEIID=10,
    SF_I1=1,
    SF_I2=2,
    SF_I4=3,
    SF_I8=4,
    SF_RECORD=9,
    SF_UNKNOWN=6,
    SF_VARIANT=8
} tagSF_TYPE;

typedef enum tagSF_TYPE SF_TYPE;

typedef enum tagTYPEFLAGS {
    TYPEFLAG_FAGGREGATABLE=1024,
    TYPEFLAG_FAPPOBJECT=1,
    TYPEFLAG_FCANCREATE=2,
    TYPEFLAG_FCONTROL=32,
    TYPEFLAG_FDISPATCHABLE=4096,
    TYPEFLAG_FDUAL=64,
    TYPEFLAG_FHIDDEN=16,
    TYPEFLAG_FLICENSED=4,
    TYPEFLAG_FNONEXTENSIBLE=128,
    TYPEFLAG_FOLEAUTOMATION=256,
    TYPEFLAG_FPREDECLID=8,
    TYPEFLAG_FPROXY=16384,
    TYPEFLAG_FREPLACEABLE=2048,
    TYPEFLAG_FRESTRICTED=512,
    TYPEFLAG_FREVERSEBIND=8192
} tagTYPEFLAGS;

typedef enum tagVARFLAGS {
    VARFLAG_FBINDABLE=4,
    VARFLAG_FDEFAULTBIND=32,
    VARFLAG_FDEFAULTCOLLELEM=256,
    VARFLAG_FDISPLAYBIND=16,
    VARFLAG_FHIDDEN=64,
    VARFLAG_FIMMEDIATEBIND=4096,
    VARFLAG_FNONBROWSABLE=1024,
    VARFLAG_FREADONLY=1,
    VARFLAG_FREPLACEABLE=2048,
    VARFLAG_FREQUESTEDIT=8,
    VARFLAG_FRESTRICTED=128,
    VARFLAG_FSOURCE=2,
    VARFLAG_FUIDEFAULT=512
} tagVARFLAGS;

typedef enum tagTYPEFLAGS TYPEFLAGS;

typedef enum tagVARFLAGS VARFLAGS;

#define ASYNC_MODE_COMPATIBILITY 1

#define ASYNC_MODE_DEFAULT 0

#define COM_RIGHTS_ACTIVATE_LOCAL 8

#define COM_RIGHTS_ACTIVATE_REMOTE 16

#define COM_RIGHTS_EXECUTE 1

#define COM_RIGHTS_EXECUTE_LOCAL 2

#define COM_RIGHTS_EXECUTE_REMOTE 4

#define CWCSTORAGENAME 32

#define MARSHALINTERFACE_MIN 500

#define STG_LAYOUT_INTERLEAVED 1

#define STG_LAYOUT_SEQUENTIAL 0

#define STG_TOEND 4294967295

#define STGFMT_ANY 4

#define STGFMT_DOCFILE 5

#define STGFMT_DOCUMENT 0

#define STGFMT_FILE 3

#define STGFMT_NATIVE 1

#define STGFMT_STORAGE 0

#define STGM_CONVERT 131072

#define STGM_CREATE 4096

#define STGM_DELETEONRELEASE 67108864

#define STGM_DIRECT 0

#define STGM_DIRECT_SWMR 4194304

#define STGM_FAILIFTHERE 0

#define STGM_NOSCRATCH 1048576

#define STGM_NOSNAPSHOT 2097152

#define STGM_PRIORITY 262144

#define STGM_READ 0

#define STGM_READWRITE 2

#define STGM_SHARE_DENY_NONE 64

#define STGM_SHARE_DENY_READ 48

#define STGM_SHARE_DENY_WRITE 32

#define STGM_SHARE_EXCLUSIVE 16

#define STGM_SIMPLE 134217728

#define STGM_TRANSACTED 65536

#define STGM_WRITE 1

#define STGOPTIONS_VERSION 2

#define STGTY_REPEAT 256

typedef enum tagCOINIT {
    COINIT_APARTMENTTHREADED=2,
    COINIT_DISABLE_OLE1DDE=4,
    COINIT_MULTITHREADED=0,
    COINIT_SPEED_OVER_MEMORY=8
} tagCOINIT;

typedef enum tagCOINIT COINIT;

typedef enum tagCOMSD {
    SD_ACCESSPERMISSIONS=1,
    SD_ACCESSRESTRICTIONS=3,
    SD_LAUNCHPERMISSIONS=0,
    SD_LAUNCHRESTRICTIONS=2
} tagCOMSD;

typedef enum tagCOMSD COMSD;

typedef enum tagCOWAIT_FLAGS {
    COWAIT_ALERTABLE=2,
    COWAIT_INPUTAVAILABLE=4,
    COWAIT_WAITALL=1
} tagCOWAIT_FLAGS;

typedef enum tagCOWAIT_FLAGS COWAIT_FLAGS;

typedef HRESULT (* LPFNCANUNLOADNOW)(void);

typedef HRESULT (* LPFNGETCLASSOBJECT)(IID *, IID *, LPVOID *);

typedef enum tagREGCLS {
    REGCLS_MULTIPLEUSE=1,
    REGCLS_MULTI_SEPARATE=2,
    REGCLS_SINGLEUSE=0,
    REGCLS_SURROGATE=8,
    REGCLS_SUSPENDED=4
} tagREGCLS;

typedef enum tagREGCLS REGCLS;

typedef struct tagSOleTlsDataPublic tagSOleTlsDataPublic, *PtagSOleTlsDataPublic;

typedef struct tagSOleTlsDataPublic SOleTlsDataPublic;

struct tagSOleTlsDataPublic {
    void * pvReserved0[2];
    DWORD dwReserved0[3];
    void * pvReserved1[1];
    DWORD dwReserved1[3];
    void * pvReserved2[4];
    DWORD dwReserved2[1];
    void * pCurrentCtx;
};

typedef enum tagSTDMSHLFLAGS {
    SMEXF_HANDLER=2,
    SMEXF_SERVER=1
} tagSTDMSHLFLAGS;

typedef enum tagSTDMSHLFLAGS STDMSHLFLAGS;

typedef DWORD STGFMT;

typedef struct tagSTGOPTIONS tagSTGOPTIONS, *PtagSTGOPTIONS;

typedef struct tagSTGOPTIONS STGOPTIONS;

struct tagSTGOPTIONS {
    USHORT usVersion;
    USHORT reserved;
    ULONG ulSectorSize;
    WCHAR * pwcsTemplateFile;
};

typedef struct IObjectArray IObjectArray, *PIObjectArray;

typedef struct IObjectArrayVtbl IObjectArrayVtbl, *PIObjectArrayVtbl;

struct IObjectArray {
    struct IObjectArrayVtbl * lpVtbl;
};

struct IObjectArrayVtbl {
    HRESULT (* QueryInterface)(struct IObjectArray *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectArray *);
    ULONG (* Release)(struct IObjectArray *);
    HRESULT (* GetCount)(struct IObjectArray *, UINT *);
    HRESULT (* GetAt)(struct IObjectArray *, UINT, IID *, void * *);
};

typedef struct IObjectCollection IObjectCollection, *PIObjectCollection;

typedef struct IObjectCollectionVtbl IObjectCollectionVtbl, *PIObjectCollectionVtbl;

struct IObjectCollectionVtbl {
    HRESULT (* QueryInterface)(struct IObjectCollection *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectCollection *);
    ULONG (* Release)(struct IObjectCollection *);
    HRESULT (* GetCount)(struct IObjectCollection *, UINT *);
    HRESULT (* GetAt)(struct IObjectCollection *, UINT, IID *, void * *);
    HRESULT (* AddObject)(struct IObjectCollection *, struct IUnknown *);
    HRESULT (* AddFromArray)(struct IObjectCollection *, struct IObjectArray *);
    HRESULT (* RemoveObjectAt)(struct IObjectCollection *, UINT);
    HRESULT (* Clear)(struct IObjectCollection *);
};

struct IObjectCollection {
    struct IObjectCollectionVtbl * lpVtbl;
};

#define COLE_DEFAULT_AUTHINFO -1

#define COLE_DEFAULT_PRINCIPAL -1

typedef union __MIDL_IAdviseSink_0002 __MIDL_IAdviseSink_0002, *P__MIDL_IAdviseSink_0002;

typedef struct _userHBITMAP _userHBITMAP, *P_userHBITMAP;

typedef struct _userHBITMAP userHBITMAP;

typedef userHBITMAP * wireHBITMAP;

typedef struct _userHPALETTE _userHPALETTE, *P_userHPALETTE;

typedef struct _userHPALETTE userHPALETTE;

typedef userHPALETTE * wireHPALETTE;

typedef struct _userHGLOBAL _userHGLOBAL, *P_userHGLOBAL;

typedef struct _userHGLOBAL userHGLOBAL;

typedef userHGLOBAL * wireHGLOBAL;

typedef union __MIDL_IWinTypes_0007 __MIDL_IWinTypes_0007, *P__MIDL_IWinTypes_0007;

typedef union __MIDL_IWinTypes_0008 __MIDL_IWinTypes_0008, *P__MIDL_IWinTypes_0008;

typedef union __MIDL_IWinTypes_0003 __MIDL_IWinTypes_0003, *P__MIDL_IWinTypes_0003;

typedef struct _userBITMAP _userBITMAP, *P_userBITMAP;

typedef struct _userBITMAP userBITMAP;

typedef struct tagLOGPALETTE tagLOGPALETTE, *PtagLOGPALETTE;

typedef struct tagLOGPALETTE LOGPALETTE;

typedef struct _FLAGGED_BYTE_BLOB _FLAGGED_BYTE_BLOB, *P_FLAGGED_BYTE_BLOB;

typedef struct _FLAGGED_BYTE_BLOB FLAGGED_BYTE_BLOB;

typedef struct tagPALETTEENTRY tagPALETTEENTRY, *PtagPALETTEENTRY;

typedef struct tagPALETTEENTRY PALETTEENTRY;

struct _userBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    ULONG cbSize;
    byte pBuffer[1];
};

union __MIDL_IWinTypes_0007 {
    long hInproc;
    userBITMAP * hRemote;
    longlong hInproc64;
};

struct _userHBITMAP {
    long fContext;
    union __MIDL_IWinTypes_0007 u;
};

union __MIDL_IWinTypes_0003 {
    long hInproc;
    FLAGGED_BYTE_BLOB * hRemote;
    longlong hInproc64;
};

struct _FLAGGED_BYTE_BLOB {
    ulong fFlags;
    ulong clSize;
    byte abData[1];
};

union __MIDL_IWinTypes_0008 {
    long hInproc;
    LOGPALETTE * hRemote;
    longlong hInproc64;
};

union __MIDL_IAdviseSink_0002 {
    wireHBITMAP hBitmap;
    wireHPALETTE hPalette;
    wireHGLOBAL hGeneric;
};

struct tagPALETTEENTRY {
    BYTE peRed;
    BYTE peGreen;
    BYTE peBlue;
    BYTE peFlags;
};

struct tagLOGPALETTE {
    WORD palVersion;
    WORD palNumEntries;
    PALETTEENTRY palPalEntry[1];
};

struct _userHGLOBAL {
    long fContext;
    union __MIDL_IWinTypes_0003 u;
};

struct _userHPALETTE {
    long fContext;
    union __MIDL_IWinTypes_0008 u;
};

typedef union __MIDL_IAdviseSink_0003 __MIDL_IAdviseSink_0003, *P__MIDL_IAdviseSink_0003;

typedef struct _userHMETAFILEPICT _userHMETAFILEPICT, *P_userHMETAFILEPICT;

typedef struct _userHMETAFILEPICT userHMETAFILEPICT;

typedef userHMETAFILEPICT * wireHMETAFILEPICT;

typedef struct _userHENHMETAFILE _userHENHMETAFILE, *P_userHENHMETAFILE;

typedef struct _userHENHMETAFILE userHENHMETAFILE;

typedef userHENHMETAFILE * wireHENHMETAFILE;

typedef struct _GDI_OBJECT _GDI_OBJECT, *P_GDI_OBJECT;

typedef struct _GDI_OBJECT GDI_OBJECT;

typedef struct _BYTE_BLOB _BYTE_BLOB, *P_BYTE_BLOB;

typedef struct _BYTE_BLOB BYTE_BLOB;

typedef union __MIDL_IWinTypes_0005 __MIDL_IWinTypes_0005, *P__MIDL_IWinTypes_0005;

typedef union __MIDL_IWinTypes_0006 __MIDL_IWinTypes_0006, *P__MIDL_IWinTypes_0006;

typedef struct _remoteMETAFILEPICT _remoteMETAFILEPICT, *P_remoteMETAFILEPICT;

typedef struct _remoteMETAFILEPICT remoteMETAFILEPICT;

typedef struct _userHMETAFILE _userHMETAFILE, *P_userHMETAFILE;

typedef struct _userHMETAFILE userHMETAFILE;

typedef union __MIDL_IWinTypes_0004 __MIDL_IWinTypes_0004, *P__MIDL_IWinTypes_0004;

union __MIDL_IWinTypes_0006 {
    long hInproc;
    BYTE_BLOB * hRemote;
    longlong hInproc64;
};

struct _userHENHMETAFILE {
    long fContext;
    union __MIDL_IWinTypes_0006 u;
};

struct _GDI_OBJECT {
    DWORD ObjectType;
    union __MIDL_IAdviseSink_0002 u;
};

struct _remoteMETAFILEPICT {
    long mm;
    long xExt;
    long yExt;
    userHMETAFILE * hMF;
};

union __MIDL_IWinTypes_0004 {
    long hInproc;
    BYTE_BLOB * hRemote;
    longlong hInproc64;
};

union __MIDL_IWinTypes_0005 {
    long hInproc;
    remoteMETAFILEPICT * hRemote;
    longlong hInproc64;
};

struct _userHMETAFILE {
    long fContext;
    union __MIDL_IWinTypes_0004 u;
};

struct _BYTE_BLOB {
    ulong clSize;
    byte abData[1];
};

struct _userHMETAFILEPICT {
    long fContext;
    union __MIDL_IWinTypes_0005 u;
};

union __MIDL_IAdviseSink_0003 {
    wireHMETAFILEPICT hMetaFilePict;
    wireHENHMETAFILE hHEnhMetaFile;
    GDI_OBJECT * hGdiHandle;
    wireHGLOBAL hGlobal;
    LPOLESTR lpszFileName;
    BYTE_BLOB * pstm;
    BYTE_BLOB * pstg;
};

typedef enum _APTTYPE {
    APTTYPE_CURRENT=0,
    APTTYPE_MAINSTA=3,
    APTTYPE_MTA=1,
    APTTYPE_NA=2,
    APTTYPE_STA=0
} _APTTYPE;

typedef enum _APTTYPEQUALIFIER {
    APTTYPEQUALIFIER_IMPLICIT_MTA=1,
    APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA=4,
    APTTYPEQUALIFIER_NA_ON_MAINSTA=5,
    APTTYPEQUALIFIER_NA_ON_MTA=2,
    APTTYPEQUALIFIER_NA_ON_STA=3,
    APTTYPEQUALIFIER_NONE=0
} _APTTYPEQUALIFIER;

typedef struct _COSERVERINFO _COSERVERINFO, *P_COSERVERINFO;

typedef struct _COAUTHINFO _COAUTHINFO, *P_COAUTHINFO;

typedef struct _COAUTHINFO COAUTHINFO;

typedef struct _COAUTHIDENTITY _COAUTHIDENTITY, *P_COAUTHIDENTITY;

typedef struct _COAUTHIDENTITY COAUTHIDENTITY;

struct _COAUTHINFO {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    LPWSTR pwszServerPrincName;
    DWORD dwAuthnLevel;
    DWORD dwImpersonationLevel;
    COAUTHIDENTITY * pAuthIdentityData;
    DWORD dwCapabilities;
};

struct _COAUTHIDENTITY {
    USHORT * User;
    ULONG UserLength;
    USHORT * Domain;
    ULONG DomainLength;
    USHORT * Password;
    ULONG PasswordLength;
    ULONG Flags;
};

struct _COSERVERINFO {
    DWORD dwReserved1;
    LPWSTR pwszName;
    COAUTHINFO * pAuthInfo;
    DWORD dwReserved2;
};

typedef struct _FLAG_STGMEDIUM _FLAG_STGMEDIUM, *P_FLAG_STGMEDIUM;

struct _FLAG_STGMEDIUM {
    long ContextFlags;
    long fPassOwnership;
    STGMEDIUM Stgmed;
};

typedef struct _STGMEDIUM_UNION _STGMEDIUM_UNION, *P_STGMEDIUM_UNION;

struct _STGMEDIUM_UNION {
    DWORD tymed;
    union __MIDL_IAdviseSink_0003 u;
};

typedef enum _THDTYPE {
    THDTYPE_BLOCKMESSAGES=0,
    THDTYPE_PROCESSMESSAGES=1
} _THDTYPE;

typedef struct _userFLAG_STGMEDIUM _userFLAG_STGMEDIUM, *P_userFLAG_STGMEDIUM;

typedef struct _userSTGMEDIUM _userSTGMEDIUM, *P_userSTGMEDIUM;

typedef struct _userSTGMEDIUM userSTGMEDIUM;

struct _userSTGMEDIUM {
    struct _STGMEDIUM_UNION u;
    struct IUnknown * pUnkForRelease;
};

struct _userFLAG_STGMEDIUM {
    long ContextFlags;
    long fPassOwnership;
    userSTGMEDIUM Stgmed;
};

typedef enum tagADVF {
    ADVFCACHE_FORCEBUILTIN=16,
    ADVFCACHE_NOHANDLER=8,
    ADVFCACHE_ONSAVE=32,
    ADVF_DATAONSTOP=64,
    ADVF_NODATA=1,
    ADVF_ONLYONCE=4,
    ADVF_PRIMEFIRST=2
} tagADVF;

typedef enum tagADVF ADVF;

typedef DWORD APARTMENTID;

typedef enum tagApplicationType {
    LibraryApplication=1,
    ServerApplication=0
} tagApplicationType;

typedef enum tagApplicationType ApplicationType;

typedef enum _APTTYPE APTTYPE;

typedef enum _APTTYPEQUALIFIER APTTYPEQUALIFIER;

typedef STGMEDIUM ASYNC_STGMEDIUM;

typedef struct AsyncIAdviseSink AsyncIAdviseSink, *PAsyncIAdviseSink;

typedef struct AsyncIAdviseSinkVtbl AsyncIAdviseSinkVtbl, *PAsyncIAdviseSinkVtbl;

typedef struct tagFORMATETC tagFORMATETC, *PtagFORMATETC;

typedef struct tagFORMATETC FORMATETC;

typedef struct IMoniker IMoniker, *PIMoniker;

typedef WORD CLIPFORMAT;

typedef struct IMonikerVtbl IMonikerVtbl, *PIMonikerVtbl;

typedef struct IBindCtx IBindCtx, *PIBindCtx;

typedef struct IEnumMoniker IEnumMoniker, *PIEnumMoniker;

typedef struct IBindCtxVtbl IBindCtxVtbl, *PIBindCtxVtbl;

typedef struct tagBIND_OPTS tagBIND_OPTS, *PtagBIND_OPTS;

typedef struct tagBIND_OPTS BIND_OPTS;

typedef struct IRunningObjectTable IRunningObjectTable, *PIRunningObjectTable;

typedef struct IEnumString IEnumString, *PIEnumString;

typedef struct IEnumMonikerVtbl IEnumMonikerVtbl, *PIEnumMonikerVtbl;

typedef struct IRunningObjectTableVtbl IRunningObjectTableVtbl, *PIRunningObjectTableVtbl;

typedef struct IEnumStringVtbl IEnumStringVtbl, *PIEnumStringVtbl;

struct tagFORMATETC {
    CLIPFORMAT cfFormat;
    DVTARGETDEVICE * ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
};

struct IEnumStringVtbl {
    HRESULT (* QueryInterface)(struct IEnumString *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumString *);
    ULONG (* Release)(struct IEnumString *);
    HRESULT (* Next)(struct IEnumString *, ULONG, LPOLESTR *, ULONG *);
    HRESULT (* Skip)(struct IEnumString *, ULONG);
    HRESULT (* Reset)(struct IEnumString *);
    HRESULT (* Clone)(struct IEnumString *, struct IEnumString * *);
};

struct IMoniker {
    struct IMonikerVtbl * lpVtbl;
};

struct IEnumString {
    struct IEnumStringVtbl * lpVtbl;
};

struct IEnumMonikerVtbl {
    HRESULT (* QueryInterface)(struct IEnumMoniker *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumMoniker *);
    ULONG (* Release)(struct IEnumMoniker *);
    HRESULT (* Next)(struct IEnumMoniker *, ULONG, struct IMoniker * *, ULONG *);
    HRESULT (* Skip)(struct IEnumMoniker *, ULONG);
    HRESULT (* Reset)(struct IEnumMoniker *);
    HRESULT (* Clone)(struct IEnumMoniker *, struct IEnumMoniker * *);
};

struct tagBIND_OPTS {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
};

struct AsyncIAdviseSink {
    struct AsyncIAdviseSinkVtbl * lpVtbl;
};

struct IBindCtx {
    struct IBindCtxVtbl * lpVtbl;
};

struct IBindCtxVtbl {
    HRESULT (* QueryInterface)(struct IBindCtx *, IID *, void * *);
    ULONG (* AddRef)(struct IBindCtx *);
    ULONG (* Release)(struct IBindCtx *);
    HRESULT (* RegisterObjectBound)(struct IBindCtx *, struct IUnknown *);
    HRESULT (* RevokeObjectBound)(struct IBindCtx *, struct IUnknown *);
    HRESULT (* ReleaseBoundObjects)(struct IBindCtx *);
    HRESULT (* SetBindOptions)(struct IBindCtx *, BIND_OPTS *);
    HRESULT (* GetBindOptions)(struct IBindCtx *, BIND_OPTS *);
    HRESULT (* GetRunningObjectTable)(struct IBindCtx *, struct IRunningObjectTable * *);
    HRESULT (* RegisterObjectParam)(struct IBindCtx *, LPOLESTR, struct IUnknown *);
    HRESULT (* GetObjectParam)(struct IBindCtx *, LPOLESTR, struct IUnknown * *);
    HRESULT (* EnumObjectParam)(struct IBindCtx *, struct IEnumString * *);
    HRESULT (* RevokeObjectParam)(struct IBindCtx *, LPOLESTR);
};

struct IRunningObjectTableVtbl {
    HRESULT (* QueryInterface)(struct IRunningObjectTable *, IID *, void * *);
    ULONG (* AddRef)(struct IRunningObjectTable *);
    ULONG (* Release)(struct IRunningObjectTable *);
    HRESULT (* Register)(struct IRunningObjectTable *, DWORD, struct IUnknown *, struct IMoniker *, DWORD *);
    HRESULT (* Revoke)(struct IRunningObjectTable *, DWORD);
    HRESULT (* IsRunning)(struct IRunningObjectTable *, struct IMoniker *);
    HRESULT (* GetObjectA)(struct IRunningObjectTable *, struct IMoniker *, struct IUnknown * *);
    HRESULT (* NoteChangeTime)(struct IRunningObjectTable *, DWORD, FILETIME *);
    HRESULT (* GetTimeOfLastChange)(struct IRunningObjectTable *, struct IMoniker *, FILETIME *);
    HRESULT (* EnumRunning)(struct IRunningObjectTable *, struct IEnumMoniker * *);
};

struct IMonikerVtbl {
    HRESULT (* QueryInterface)(struct IMoniker *, IID *, void * *);
    ULONG (* AddRef)(struct IMoniker *);
    ULONG (* Release)(struct IMoniker *);
    HRESULT (* GetClassID)(struct IMoniker *, CLSID *);
    HRESULT (* IsDirty)(struct IMoniker *);
    HRESULT (* Load)(struct IMoniker *, struct IStream *);
    HRESULT (* Save)(struct IMoniker *, struct IStream *, BOOL);
    HRESULT (* GetSizeMax)(struct IMoniker *, ULARGE_INTEGER *);
    HRESULT (* BindToObject)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, IID *, void * *);
    HRESULT (* BindToStorage)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, IID *, void * *);
    HRESULT (* Reduce)(struct IMoniker *, struct IBindCtx *, DWORD, struct IMoniker * *, struct IMoniker * *);
    HRESULT (* ComposeWith)(struct IMoniker *, struct IMoniker *, BOOL, struct IMoniker * *);
    HRESULT (* Enum)(struct IMoniker *, BOOL, struct IEnumMoniker * *);
    HRESULT (* IsEqual)(struct IMoniker *, struct IMoniker *);
    HRESULT (* Hash)(struct IMoniker *, DWORD *);
    HRESULT (* IsRunning)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, struct IMoniker *);
    HRESULT (* GetTimeOfLastChange)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, FILETIME *);
    HRESULT (* Inverse)(struct IMoniker *, struct IMoniker * *);
    HRESULT (* CommonPrefixWith)(struct IMoniker *, struct IMoniker *, struct IMoniker * *);
    HRESULT (* RelativePathTo)(struct IMoniker *, struct IMoniker *, struct IMoniker * *);
    HRESULT (* GetDisplayName)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, LPOLESTR *);
    HRESULT (* ParseDisplayName)(struct IMoniker *, struct IBindCtx *, struct IMoniker *, LPOLESTR, ULONG *, struct IMoniker * *);
    HRESULT (* IsSystemMoniker)(struct IMoniker *, DWORD *);
};

struct IRunningObjectTable {
    struct IRunningObjectTableVtbl * lpVtbl;
};

struct AsyncIAdviseSinkVtbl {
    HRESULT (* QueryInterface)(struct AsyncIAdviseSink *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIAdviseSink *);
    ULONG (* Release)(struct AsyncIAdviseSink *);
    void (* Begin_OnDataChange)(struct AsyncIAdviseSink *, FORMATETC *, STGMEDIUM *);
    void (* Finish_OnDataChange)(struct AsyncIAdviseSink *);
    void (* Begin_OnViewChange)(struct AsyncIAdviseSink *, DWORD, LONG);
    void (* Finish_OnViewChange)(struct AsyncIAdviseSink *);
    void (* Begin_OnRename)(struct AsyncIAdviseSink *, struct IMoniker *);
    void (* Finish_OnRename)(struct AsyncIAdviseSink *);
    void (* Begin_OnSave)(struct AsyncIAdviseSink *);
    void (* Finish_OnSave)(struct AsyncIAdviseSink *);
    void (* Begin_OnClose)(struct AsyncIAdviseSink *);
    void (* Finish_OnClose)(struct AsyncIAdviseSink *);
};

struct IEnumMoniker {
    struct IEnumMonikerVtbl * lpVtbl;
};

typedef struct AsyncIAdviseSink2 AsyncIAdviseSink2, *PAsyncIAdviseSink2;

typedef struct AsyncIAdviseSink2Vtbl AsyncIAdviseSink2Vtbl, *PAsyncIAdviseSink2Vtbl;

struct AsyncIAdviseSink2Vtbl {
    HRESULT (* QueryInterface)(struct AsyncIAdviseSink2 *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIAdviseSink2 *);
    ULONG (* Release)(struct AsyncIAdviseSink2 *);
    void (* Begin_OnDataChange)(struct AsyncIAdviseSink2 *, FORMATETC *, STGMEDIUM *);
    void (* Finish_OnDataChange)(struct AsyncIAdviseSink2 *);
    void (* Begin_OnViewChange)(struct AsyncIAdviseSink2 *, DWORD, LONG);
    void (* Finish_OnViewChange)(struct AsyncIAdviseSink2 *);
    void (* Begin_OnRename)(struct AsyncIAdviseSink2 *, struct IMoniker *);
    void (* Finish_OnRename)(struct AsyncIAdviseSink2 *);
    void (* Begin_OnSave)(struct AsyncIAdviseSink2 *);
    void (* Finish_OnSave)(struct AsyncIAdviseSink2 *);
    void (* Begin_OnClose)(struct AsyncIAdviseSink2 *);
    void (* Finish_OnClose)(struct AsyncIAdviseSink2 *);
    void (* Begin_OnLinkSrcChange)(struct AsyncIAdviseSink2 *, struct IMoniker *);
    void (* Finish_OnLinkSrcChange)(struct AsyncIAdviseSink2 *);
};

struct AsyncIAdviseSink2 {
    struct AsyncIAdviseSink2Vtbl * lpVtbl;
};

typedef struct AsyncIMultiQI AsyncIMultiQI, *PAsyncIMultiQI;

typedef struct AsyncIMultiQIVtbl AsyncIMultiQIVtbl, *PAsyncIMultiQIVtbl;

typedef struct tagMULTI_QI tagMULTI_QI, *PtagMULTI_QI;

typedef struct tagMULTI_QI MULTI_QI;

struct tagMULTI_QI {
    IID * pIID;
    struct IUnknown * pItf;
    HRESULT hr;
};

struct AsyncIMultiQI {
    struct AsyncIMultiQIVtbl * lpVtbl;
};

struct AsyncIMultiQIVtbl {
    HRESULT (* QueryInterface)(struct AsyncIMultiQI *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIMultiQI *);
    ULONG (* Release)(struct AsyncIMultiQI *);
    HRESULT (* Begin_QueryMultipleInterfaces)(struct AsyncIMultiQI *, ULONG, MULTI_QI *);
    HRESULT (* Finish_QueryMultipleInterfaces)(struct AsyncIMultiQI *, MULTI_QI *);
};

typedef struct AsyncIPipeByte AsyncIPipeByte, *PAsyncIPipeByte;

typedef struct AsyncIPipeByteVtbl AsyncIPipeByteVtbl, *PAsyncIPipeByteVtbl;

struct AsyncIPipeByte {
    struct AsyncIPipeByteVtbl * lpVtbl;
};

struct AsyncIPipeByteVtbl {
    HRESULT (* QueryInterface)(struct AsyncIPipeByte *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIPipeByte *);
    ULONG (* Release)(struct AsyncIPipeByte *);
    HRESULT (* Begin_Pull)(struct AsyncIPipeByte *, ULONG);
    HRESULT (* Finish_Pull)(struct AsyncIPipeByte *, BYTE *, ULONG *);
    HRESULT (* Begin_Push)(struct AsyncIPipeByte *, BYTE *, ULONG);
    HRESULT (* Finish_Push)(struct AsyncIPipeByte *);
};

typedef struct AsyncIPipeDouble AsyncIPipeDouble, *PAsyncIPipeDouble;

typedef struct AsyncIPipeDoubleVtbl AsyncIPipeDoubleVtbl, *PAsyncIPipeDoubleVtbl;

struct AsyncIPipeDoubleVtbl {
    HRESULT (* QueryInterface)(struct AsyncIPipeDouble *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIPipeDouble *);
    ULONG (* Release)(struct AsyncIPipeDouble *);
    HRESULT (* Begin_Pull)(struct AsyncIPipeDouble *, ULONG);
    HRESULT (* Finish_Pull)(struct AsyncIPipeDouble *, DOUBLE *, ULONG *);
    HRESULT (* Begin_Push)(struct AsyncIPipeDouble *, DOUBLE *, ULONG);
    HRESULT (* Finish_Push)(struct AsyncIPipeDouble *);
};

struct AsyncIPipeDouble {
    struct AsyncIPipeDoubleVtbl * lpVtbl;
};

typedef struct AsyncIPipeLong AsyncIPipeLong, *PAsyncIPipeLong;

typedef struct AsyncIPipeLongVtbl AsyncIPipeLongVtbl, *PAsyncIPipeLongVtbl;

struct AsyncIPipeLongVtbl {
    HRESULT (* QueryInterface)(struct AsyncIPipeLong *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIPipeLong *);
    ULONG (* Release)(struct AsyncIPipeLong *);
    HRESULT (* Begin_Pull)(struct AsyncIPipeLong *, ULONG);
    HRESULT (* Finish_Pull)(struct AsyncIPipeLong *, LONG *, ULONG *);
    HRESULT (* Begin_Push)(struct AsyncIPipeLong *, LONG *, ULONG);
    HRESULT (* Finish_Push)(struct AsyncIPipeLong *);
};

struct AsyncIPipeLong {
    struct AsyncIPipeLongVtbl * lpVtbl;
};

typedef enum tagBIND_FLAGS {
    BIND_JUSTTESTEXISTENCE=2,
    BIND_MAYBOTHERUSER=1
} tagBIND_FLAGS;

typedef enum tagBIND_FLAGS BIND_FLAGS;

typedef struct tagBIND_OPTS2 tagBIND_OPTS2, *PtagBIND_OPTS2;

typedef struct tagBIND_OPTS2 BIND_OPTS2;

typedef struct _COSERVERINFO COSERVERINFO;

struct tagBIND_OPTS2 {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
    DWORD dwTrackFlags;
    DWORD dwClassContext;
    LCID locale;
    COSERVERINFO * pServerInfo;
};

typedef struct tagBIND_OPTS3 tagBIND_OPTS3, *PtagBIND_OPTS3;

typedef struct tagBIND_OPTS3 BIND_OPTS3;

struct tagBIND_OPTS3 {
    DWORD cbStruct;
    DWORD grfFlags;
    DWORD grfMode;
    DWORD dwTickCountDeadline;
    DWORD dwTrackFlags;
    DWORD dwClassContext;
    LCID locale;
    COSERVERINFO * pServerInfo;
    HWND hwnd;
};

typedef enum tagCALLTYPE {
    CALLTYPE_ASYNC=3,
    CALLTYPE_ASYNC_CALLPENDING=5,
    CALLTYPE_NESTED=2,
    CALLTYPE_TOPLEVEL=1,
    CALLTYPE_TOPLEVEL_CALLPENDING=4
} tagCALLTYPE;

typedef enum tagCALLTYPE CALLTYPE;

typedef enum tagDATADIR {
    DATADIR_GET=1,
    DATADIR_SET=2
} tagDATADIR;

typedef enum tagDATADIR DATADIR;

typedef enum tagDCOM_CALL_STATE {
    DCOM_CALL_CANCELED=2,
    DCOM_CALL_COMPLETE=1,
    DCOM_NONE=0
} tagDCOM_CALL_STATE;

typedef enum tagDCOM_CALL_STATE DCOM_CALL_STATE;

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES {
    EOAC_ACCESS_CONTROL=4,
    EOAC_ANY_AUTHORITY=128,
    EOAC_APPID=8,
    EOAC_AUTO_IMPERSONATE=1024,
    EOAC_DEFAULT=2048,
    EOAC_DISABLE_AAA=4096,
    EOAC_DYNAMIC=16,
    EOAC_DYNAMIC_CLOAKING=64,
    EOAC_MAKE_FULLSIC=256,
    EOAC_MUTUAL_AUTH=1,
    EOAC_NONE=0,
    EOAC_NO_CUSTOM_MARSHAL=8192,
    EOAC_REQUIRE_FULLSIC=512,
    EOAC_SECURE_REFS=2,
    EOAC_STATIC_CLOAKING=32
} tagEOLE_AUTHENTICATION_CAPABILITIES;

typedef enum tagEOLE_AUTHENTICATION_CAPABILITIES EOLE_AUTHENTICATION_CAPABILITIES;

typedef enum tagEXTCONN {
    EXTCONN_CALLABLE=4,
    EXTCONN_STRONG=1,
    EXTCONN_WEAK=2
} tagEXTCONN;

typedef enum tagEXTCONN EXTCONN;

typedef struct _FLAG_STGMEDIUM FLAG_STGMEDIUM;

typedef enum tagGLOBALOPT_EH_VALUES {
    COMGLB_EXCEPTION_DONOT_HANDLE=2,
    COMGLB_EXCEPTION_DONOT_HANDLE_ANY=2,
    COMGLB_EXCEPTION_DONOT_HANDLE_FATAL=1,
    COMGLB_EXCEPTION_HANDLE=0
} tagGLOBALOPT_EH_VALUES;

typedef enum tagGLOBALOPT_EH_VALUES GLOBALOPT_EH_VALUES;

typedef enum tagGLOBALOPT_PROPERTIES {
    COMGLB_APPID=2,
    COMGLB_EXCEPTION_HANDLING=1,
    COMGLB_RPC_THREADPOOL_SETTING=3
} tagGLOBALOPT_PROPERTIES;

typedef enum tagGLOBALOPT_PROPERTIES GLOBALOPT_PROPERTIES;

typedef enum tagGLOBALOPT_RPCTP_VALUES {
    COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL=0,
    COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL=1
} tagGLOBALOPT_RPCTP_VALUES;

typedef enum tagGLOBALOPT_RPCTP_VALUES GLOBALOPT_RPCTP_VALUES;

typedef struct IAddrExclusionControl IAddrExclusionControl, *PIAddrExclusionControl;

typedef struct IAddrExclusionControlVtbl IAddrExclusionControlVtbl, *PIAddrExclusionControlVtbl;

struct IAddrExclusionControlVtbl {
    HRESULT (* QueryInterface)(struct IAddrExclusionControl *, IID *, void * *);
    ULONG (* AddRef)(struct IAddrExclusionControl *);
    ULONG (* Release)(struct IAddrExclusionControl *);
    HRESULT (* GetCurrentAddrExclusionList)(struct IAddrExclusionControl *, IID *, void * *);
    HRESULT (* UpdateAddrExclusionList)(struct IAddrExclusionControl *, struct IUnknown *);
};

struct IAddrExclusionControl {
    struct IAddrExclusionControlVtbl * lpVtbl;
};

typedef struct IAddrTrackingControl IAddrTrackingControl, *PIAddrTrackingControl;

typedef struct IAddrTrackingControlVtbl IAddrTrackingControlVtbl, *PIAddrTrackingControlVtbl;

struct IAddrTrackingControlVtbl {
    HRESULT (* QueryInterface)(struct IAddrTrackingControl *, IID *, void * *);
    ULONG (* AddRef)(struct IAddrTrackingControl *);
    ULONG (* Release)(struct IAddrTrackingControl *);
    HRESULT (* EnableCOMDynamicAddrTracking)(struct IAddrTrackingControl *);
    HRESULT (* DisableCOMDynamicAddrTracking)(struct IAddrTrackingControl *);
};

struct IAddrTrackingControl {
    struct IAddrTrackingControlVtbl * lpVtbl;
};

typedef struct IAdviseSink IAdviseSink, *PIAdviseSink;

typedef struct IAdviseSinkVtbl IAdviseSinkVtbl, *PIAdviseSinkVtbl;

struct IAdviseSink {
    struct IAdviseSinkVtbl * lpVtbl;
};

struct IAdviseSinkVtbl {
    HRESULT (* QueryInterface)(struct IAdviseSink *, IID *, void * *);
    ULONG (* AddRef)(struct IAdviseSink *);
    ULONG (* Release)(struct IAdviseSink *);
    void (* OnDataChange)(struct IAdviseSink *, FORMATETC *, STGMEDIUM *);
    void (* OnViewChange)(struct IAdviseSink *, DWORD, LONG);
    void (* OnRename)(struct IAdviseSink *, struct IMoniker *);
    void (* OnSave)(struct IAdviseSink *);
    void (* OnClose)(struct IAdviseSink *);
};

typedef struct IAdviseSink2 IAdviseSink2, *PIAdviseSink2;

typedef struct IAdviseSink2Vtbl IAdviseSink2Vtbl, *PIAdviseSink2Vtbl;

struct IAdviseSink2 {
    struct IAdviseSink2Vtbl * lpVtbl;
};

struct IAdviseSink2Vtbl {
    HRESULT (* QueryInterface)(struct IAdviseSink2 *, IID *, void * *);
    ULONG (* AddRef)(struct IAdviseSink2 *);
    ULONG (* Release)(struct IAdviseSink2 *);
    void (* OnDataChange)(struct IAdviseSink2 *, FORMATETC *, STGMEDIUM *);
    void (* OnViewChange)(struct IAdviseSink2 *, DWORD, LONG);
    void (* OnRename)(struct IAdviseSink2 *, struct IMoniker *);
    void (* OnSave)(struct IAdviseSink2 *);
    void (* OnClose)(struct IAdviseSink2 *);
    void (* OnLinkSrcChange)(struct IAdviseSink2 *, struct IMoniker *);
};

typedef struct IAsyncManager IAsyncManager, *PIAsyncManager;

typedef struct IAsyncManagerVtbl IAsyncManagerVtbl, *PIAsyncManagerVtbl;

struct IAsyncManagerVtbl {
    HRESULT (* QueryInterface)(struct IAsyncManager *, IID *, void * *);
    ULONG (* AddRef)(struct IAsyncManager *);
    ULONG (* Release)(struct IAsyncManager *);
    HRESULT (* CompleteCall)(struct IAsyncManager *, HRESULT);
    HRESULT (* GetCallContext)(struct IAsyncManager *, IID *, void * *);
    HRESULT (* GetState)(struct IAsyncManager *, ULONG *);
};

struct IAsyncManager {
    struct IAsyncManagerVtbl * lpVtbl;
};

typedef struct IAsyncRpcChannelBuffer IAsyncRpcChannelBuffer, *PIAsyncRpcChannelBuffer;

typedef struct IAsyncRpcChannelBufferVtbl IAsyncRpcChannelBufferVtbl, *PIAsyncRpcChannelBufferVtbl;

typedef struct tagRPCOLEMESSAGE tagRPCOLEMESSAGE, *PtagRPCOLEMESSAGE;

typedef struct tagRPCOLEMESSAGE RPCOLEMESSAGE;

typedef struct ISynchronize ISynchronize, *PISynchronize;

typedef ulong RPCOLEDATAREP;

typedef struct ISynchronizeVtbl ISynchronizeVtbl, *PISynchronizeVtbl;

struct ISynchronizeVtbl {
    HRESULT (* QueryInterface)(struct ISynchronize *, IID *, void * *);
    ULONG (* AddRef)(struct ISynchronize *);
    ULONG (* Release)(struct ISynchronize *);
    HRESULT (* Wait)(struct ISynchronize *, DWORD, DWORD);
    HRESULT (* Signal)(struct ISynchronize *);
    HRESULT (* Reset)(struct ISynchronize *);
};

struct IAsyncRpcChannelBuffer {
    struct IAsyncRpcChannelBufferVtbl * lpVtbl;
};

struct ISynchronize {
    struct ISynchronizeVtbl * lpVtbl;
};

struct IAsyncRpcChannelBufferVtbl {
    HRESULT (* QueryInterface)(struct IAsyncRpcChannelBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IAsyncRpcChannelBuffer *);
    ULONG (* Release)(struct IAsyncRpcChannelBuffer *);
    HRESULT (* GetBuffer)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, IID *);
    HRESULT (* SendReceive)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (* FreeBuffer)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *);
    HRESULT (* GetDestCtx)(struct IAsyncRpcChannelBuffer *, DWORD *, void * *);
    HRESULT (* IsConnected)(struct IAsyncRpcChannelBuffer *);
    HRESULT (* GetProtocolVersion)(struct IAsyncRpcChannelBuffer *, DWORD *);
    HRESULT (* Send)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, struct ISynchronize *, ULONG *);
    HRESULT (* Receive)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (* GetDestCtxEx)(struct IAsyncRpcChannelBuffer *, RPCOLEMESSAGE *, DWORD *, void * *);
};

struct tagRPCOLEMESSAGE {
    void * reserved1;
    RPCOLEDATAREP dataRepresentation;
    void * Buffer;
    ULONG cbBuffer;
    ULONG iMethod;
    void * reserved2[5];
    ULONG rpcFlags;
};

typedef struct IBlockingLock IBlockingLock, *PIBlockingLock;

typedef struct IBlockingLockVtbl IBlockingLockVtbl, *PIBlockingLockVtbl;

struct IBlockingLockVtbl {
    HRESULT (* QueryInterface)(struct IBlockingLock *, IID *, void * *);
    ULONG (* AddRef)(struct IBlockingLock *);
    ULONG (* Release)(struct IBlockingLock *);
    HRESULT (* Lock)(struct IBlockingLock *, DWORD);
    HRESULT (* Unlock)(struct IBlockingLock *);
};

struct IBlockingLock {
    struct IBlockingLockVtbl * lpVtbl;
};

typedef struct ICallFactory ICallFactory, *PICallFactory;

typedef struct ICallFactoryVtbl ICallFactoryVtbl, *PICallFactoryVtbl;

struct ICallFactory {
    struct ICallFactoryVtbl * lpVtbl;
};

struct ICallFactoryVtbl {
    HRESULT (* QueryInterface)(struct ICallFactory *, IID *, void * *);
    ULONG (* AddRef)(struct ICallFactory *);
    ULONG (* Release)(struct ICallFactory *);
    HRESULT (* CreateCall)(struct ICallFactory *, IID *, struct IUnknown *, IID *, struct IUnknown * *);
};

typedef struct ICancelMethodCalls ICancelMethodCalls, *PICancelMethodCalls;

typedef struct ICancelMethodCallsVtbl ICancelMethodCallsVtbl, *PICancelMethodCallsVtbl;

struct ICancelMethodCalls {
    struct ICancelMethodCallsVtbl * lpVtbl;
};

struct ICancelMethodCallsVtbl {
    HRESULT (* QueryInterface)(struct ICancelMethodCalls *, IID *, void * *);
    ULONG (* AddRef)(struct ICancelMethodCalls *);
    ULONG (* Release)(struct ICancelMethodCalls *);
    HRESULT (* Cancel)(struct ICancelMethodCalls *, ULONG);
    HRESULT (* TestCancel)(struct ICancelMethodCalls *);
};

typedef struct IChannelHook IChannelHook, *PIChannelHook;

typedef struct IChannelHookVtbl IChannelHookVtbl, *PIChannelHookVtbl;

struct IChannelHook {
    struct IChannelHookVtbl * lpVtbl;
};

struct IChannelHookVtbl {
    HRESULT (* QueryInterface)(struct IChannelHook *, IID *, void * *);
    ULONG (* AddRef)(struct IChannelHook *);
    ULONG (* Release)(struct IChannelHook *);
    void (* ClientGetSize)(struct IChannelHook *, GUID *, IID *, ULONG *);
    void (* ClientFillBuffer)(struct IChannelHook *, GUID *, IID *, ULONG *, void *);
    void (* ClientNotify)(struct IChannelHook *, GUID *, IID *, ULONG, void *, DWORD, HRESULT);
    void (* ServerNotify)(struct IChannelHook *, GUID *, IID *, ULONG, void *, DWORD);
    void (* ServerGetSize)(struct IChannelHook *, GUID *, IID *, HRESULT, ULONG *);
    void (* ServerFillBuffer)(struct IChannelHook *, GUID *, IID *, ULONG *, void *, HRESULT);
};

typedef struct IClassActivator IClassActivator, *PIClassActivator;

typedef struct IClassActivatorVtbl IClassActivatorVtbl, *PIClassActivatorVtbl;

struct IClassActivator {
    struct IClassActivatorVtbl * lpVtbl;
};

struct IClassActivatorVtbl {
    HRESULT (* QueryInterface)(struct IClassActivator *, IID *, void * *);
    ULONG (* AddRef)(struct IClassActivator *);
    ULONG (* Release)(struct IClassActivator *);
    HRESULT (* GetClassObject)(struct IClassActivator *, IID *, DWORD, LCID, IID *, void * *);
};

typedef struct IClientSecurity IClientSecurity, *PIClientSecurity;

typedef struct IClientSecurityVtbl IClientSecurityVtbl, *PIClientSecurityVtbl;

struct IClientSecurityVtbl {
    HRESULT (* QueryInterface)(struct IClientSecurity *, IID *, void * *);
    ULONG (* AddRef)(struct IClientSecurity *);
    ULONG (* Release)(struct IClientSecurity *);
    HRESULT (* QueryBlanket)(struct IClientSecurity *, struct IUnknown *, DWORD *, DWORD *, OLECHAR * *, DWORD *, DWORD *, void * *, DWORD *);
    HRESULT (* SetBlanket)(struct IClientSecurity *, struct IUnknown *, DWORD, DWORD, OLECHAR *, DWORD, DWORD, void *, DWORD);
    HRESULT (* CopyProxy)(struct IClientSecurity *, struct IUnknown *, struct IUnknown * *);
};

struct IClientSecurity {
    struct IClientSecurityVtbl * lpVtbl;
};

typedef struct IComThreadingInfo IComThreadingInfo, *PIComThreadingInfo;

typedef struct IComThreadingInfoVtbl IComThreadingInfoVtbl, *PIComThreadingInfoVtbl;

typedef enum _THDTYPE THDTYPE;

struct IComThreadingInfoVtbl {
    HRESULT (* QueryInterface)(struct IComThreadingInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IComThreadingInfo *);
    ULONG (* Release)(struct IComThreadingInfo *);
    HRESULT (* GetCurrentApartmentType)(struct IComThreadingInfo *, APTTYPE *);
    HRESULT (* GetCurrentThreadType)(struct IComThreadingInfo *, THDTYPE *);
    HRESULT (* GetCurrentLogicalThreadId)(struct IComThreadingInfo *, GUID *);
    HRESULT (* SetCurrentLogicalThreadId)(struct IComThreadingInfo *, GUID *);
};

struct IComThreadingInfo {
    struct IComThreadingInfoVtbl * lpVtbl;
};

typedef struct IContext IContext, *PIContext;

struct IContext {
};

typedef struct IDataAdviseHolder IDataAdviseHolder, *PIDataAdviseHolder;

typedef struct IDataAdviseHolderVtbl IDataAdviseHolderVtbl, *PIDataAdviseHolderVtbl;

typedef struct IDataObject IDataObject, *PIDataObject;

typedef struct IEnumSTATDATA IEnumSTATDATA, *PIEnumSTATDATA;

typedef struct IDataObjectVtbl IDataObjectVtbl, *PIDataObjectVtbl;

typedef struct IEnumFORMATETC IEnumFORMATETC, *PIEnumFORMATETC;

typedef struct IEnumSTATDATAVtbl IEnumSTATDATAVtbl, *PIEnumSTATDATAVtbl;

typedef struct tagSTATDATA tagSTATDATA, *PtagSTATDATA;

typedef struct tagSTATDATA STATDATA;

typedef struct IEnumFORMATETCVtbl IEnumFORMATETCVtbl, *PIEnumFORMATETCVtbl;

struct IEnumSTATDATA {
    struct IEnumSTATDATAVtbl * lpVtbl;
};

struct IEnumSTATDATAVtbl {
    HRESULT (* QueryInterface)(struct IEnumSTATDATA *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSTATDATA *);
    ULONG (* Release)(struct IEnumSTATDATA *);
    HRESULT (* Next)(struct IEnumSTATDATA *, ULONG, STATDATA *, ULONG *);
    HRESULT (* Skip)(struct IEnumSTATDATA *, ULONG);
    HRESULT (* Reset)(struct IEnumSTATDATA *);
    HRESULT (* Clone)(struct IEnumSTATDATA *, struct IEnumSTATDATA * *);
};

struct IDataAdviseHolder {
    struct IDataAdviseHolderVtbl * lpVtbl;
};

struct IEnumFORMATETCVtbl {
    HRESULT (* QueryInterface)(struct IEnumFORMATETC *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumFORMATETC *);
    ULONG (* Release)(struct IEnumFORMATETC *);
    HRESULT (* Next)(struct IEnumFORMATETC *, ULONG, FORMATETC *, ULONG *);
    HRESULT (* Skip)(struct IEnumFORMATETC *, ULONG);
    HRESULT (* Reset)(struct IEnumFORMATETC *);
    HRESULT (* Clone)(struct IEnumFORMATETC *, struct IEnumFORMATETC * *);
};

struct IDataObject {
    struct IDataObjectVtbl * lpVtbl;
};

struct IDataAdviseHolderVtbl {
    HRESULT (* QueryInterface)(struct IDataAdviseHolder *, IID *, void * *);
    ULONG (* AddRef)(struct IDataAdviseHolder *);
    ULONG (* Release)(struct IDataAdviseHolder *);
    HRESULT (* Advise)(struct IDataAdviseHolder *, struct IDataObject *, FORMATETC *, DWORD, struct IAdviseSink *, DWORD *);
    HRESULT (* Unadvise)(struct IDataAdviseHolder *, DWORD);
    HRESULT (* EnumAdvise)(struct IDataAdviseHolder *, struct IEnumSTATDATA * *);
    HRESULT (* SendOnDataChange)(struct IDataAdviseHolder *, struct IDataObject *, DWORD, DWORD);
};

struct IDataObjectVtbl {
    HRESULT (* QueryInterface)(struct IDataObject *, IID *, void * *);
    ULONG (* AddRef)(struct IDataObject *);
    ULONG (* Release)(struct IDataObject *);
    HRESULT (* GetData)(struct IDataObject *, FORMATETC *, STGMEDIUM *);
    HRESULT (* GetDataHere)(struct IDataObject *, FORMATETC *, STGMEDIUM *);
    HRESULT (* QueryGetData)(struct IDataObject *, FORMATETC *);
    HRESULT (* GetCanonicalFormatEtc)(struct IDataObject *, FORMATETC *, FORMATETC *);
    HRESULT (* SetData)(struct IDataObject *, FORMATETC *, STGMEDIUM *, BOOL);
    HRESULT (* EnumFormatEtc)(struct IDataObject *, DWORD, struct IEnumFORMATETC * *);
    HRESULT (* DAdvise)(struct IDataObject *, FORMATETC *, DWORD, struct IAdviseSink *, DWORD *);
    HRESULT (* DUnadvise)(struct IDataObject *, DWORD);
    HRESULT (* EnumDAdvise)(struct IDataObject *, struct IEnumSTATDATA * *);
};

struct tagSTATDATA {
    FORMATETC formatetc;
    DWORD advf;
    struct IAdviseSink * pAdvSink;
    DWORD dwConnection;
};

struct IEnumFORMATETC {
    struct IEnumFORMATETCVtbl * lpVtbl;
};

typedef struct IDirectWriterLock IDirectWriterLock, *PIDirectWriterLock;

typedef struct IDirectWriterLockVtbl IDirectWriterLockVtbl, *PIDirectWriterLockVtbl;

struct IDirectWriterLock {
    struct IDirectWriterLockVtbl * lpVtbl;
};

struct IDirectWriterLockVtbl {
    HRESULT (* QueryInterface)(struct IDirectWriterLock *, IID *, void * *);
    ULONG (* AddRef)(struct IDirectWriterLock *);
    ULONG (* Release)(struct IDirectWriterLock *);
    HRESULT (* WaitForWriteAccess)(struct IDirectWriterLock *, DWORD);
    HRESULT (* ReleaseWriteAccess)(struct IDirectWriterLock *);
    HRESULT (* HaveWriteAccess)(struct IDirectWriterLock *);
};

typedef struct IDummyHICONIncluder IDummyHICONIncluder, *PIDummyHICONIncluder;

typedef struct IDummyHICONIncluderVtbl IDummyHICONIncluderVtbl, *PIDummyHICONIncluderVtbl;

struct IDummyHICONIncluder {
    struct IDummyHICONIncluderVtbl * lpVtbl;
};

struct IDummyHICONIncluderVtbl {
    HRESULT (* QueryInterface)(struct IDummyHICONIncluder *, IID *, void * *);
    ULONG (* AddRef)(struct IDummyHICONIncluder *);
    ULONG (* Release)(struct IDummyHICONIncluder *);
    HRESULT (* Dummy)(struct IDummyHICONIncluder *, HICON, HDC);
};

typedef struct IEnumContextProps IEnumContextProps, *PIEnumContextProps;

struct IEnumContextProps {
};

typedef struct IEnumUnknown IEnumUnknown, *PIEnumUnknown;

typedef struct IEnumUnknownVtbl IEnumUnknownVtbl, *PIEnumUnknownVtbl;

struct IEnumUnknown {
    struct IEnumUnknownVtbl * lpVtbl;
};

struct IEnumUnknownVtbl {
    HRESULT (* QueryInterface)(struct IEnumUnknown *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumUnknown *);
    ULONG (* Release)(struct IEnumUnknown *);
    HRESULT (* Next)(struct IEnumUnknown *, ULONG, struct IUnknown * *, ULONG *);
    HRESULT (* Skip)(struct IEnumUnknown *, ULONG);
    HRESULT (* Reset)(struct IEnumUnknown *);
    HRESULT (* Clone)(struct IEnumUnknown *, struct IEnumUnknown * *);
};

typedef struct IExternalConnection IExternalConnection, *PIExternalConnection;

typedef struct IExternalConnectionVtbl IExternalConnectionVtbl, *PIExternalConnectionVtbl;

struct IExternalConnection {
    struct IExternalConnectionVtbl * lpVtbl;
};

struct IExternalConnectionVtbl {
    HRESULT (* QueryInterface)(struct IExternalConnection *, IID *, void * *);
    ULONG (* AddRef)(struct IExternalConnection *);
    ULONG (* Release)(struct IExternalConnection *);
    DWORD (* AddConnection)(struct IExternalConnection *, DWORD, DWORD);
    DWORD (* ReleaseConnection)(struct IExternalConnection *, DWORD, DWORD, BOOL);
};

typedef struct IFillLockBytes IFillLockBytes, *PIFillLockBytes;

typedef struct IFillLockBytesVtbl IFillLockBytesVtbl, *PIFillLockBytesVtbl;

struct IFillLockBytesVtbl {
    HRESULT (* QueryInterface)(struct IFillLockBytes *, IID *, void * *);
    ULONG (* AddRef)(struct IFillLockBytes *);
    ULONG (* Release)(struct IFillLockBytes *);
    HRESULT (* FillAppend)(struct IFillLockBytes *, void *, ULONG, ULONG *);
    HRESULT (* FillAt)(struct IFillLockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (* SetFillSize)(struct IFillLockBytes *, ULARGE_INTEGER);
    HRESULT (* Terminate)(struct IFillLockBytes *, BOOL);
};

struct IFillLockBytes {
    struct IFillLockBytesVtbl * lpVtbl;
};

typedef struct IForegroundTransfer IForegroundTransfer, *PIForegroundTransfer;

typedef struct IForegroundTransferVtbl IForegroundTransferVtbl, *PIForegroundTransferVtbl;

struct IForegroundTransferVtbl {
    HRESULT (* QueryInterface)(struct IForegroundTransfer *, IID *, void * *);
    ULONG (* AddRef)(struct IForegroundTransfer *);
    ULONG (* Release)(struct IForegroundTransfer *);
    HRESULT (* AllowForegroundTransfer)(struct IForegroundTransfer *, void *);
};

struct IForegroundTransfer {
    struct IForegroundTransferVtbl * lpVtbl;
};

typedef struct IGlobalInterfaceTable IGlobalInterfaceTable, *PIGlobalInterfaceTable;

typedef struct IGlobalInterfaceTableVtbl IGlobalInterfaceTableVtbl, *PIGlobalInterfaceTableVtbl;

struct IGlobalInterfaceTableVtbl {
    HRESULT (* QueryInterface)(struct IGlobalInterfaceTable *, IID *, void * *);
    ULONG (* AddRef)(struct IGlobalInterfaceTable *);
    ULONG (* Release)(struct IGlobalInterfaceTable *);
    HRESULT (* RegisterInterfaceInGlobal)(struct IGlobalInterfaceTable *, struct IUnknown *, IID *, DWORD *);
    HRESULT (* RevokeInterfaceFromGlobal)(struct IGlobalInterfaceTable *, DWORD);
    HRESULT (* GetInterfaceFromGlobal)(struct IGlobalInterfaceTable *, DWORD, IID *, void * *);
};

struct IGlobalInterfaceTable {
    struct IGlobalInterfaceTableVtbl * lpVtbl;
};

typedef struct IGlobalOptions IGlobalOptions, *PIGlobalOptions;

typedef struct IGlobalOptionsVtbl IGlobalOptionsVtbl, *PIGlobalOptionsVtbl;

struct IGlobalOptions {
    struct IGlobalOptionsVtbl * lpVtbl;
};

struct IGlobalOptionsVtbl {
    HRESULT (* QueryInterface)(struct IGlobalOptions *, IID *, void * *);
    ULONG (* AddRef)(struct IGlobalOptions *);
    ULONG (* Release)(struct IGlobalOptions *);
    HRESULT (* Set)(struct IGlobalOptions *, GLOBALOPT_PROPERTIES, ULONG_PTR);
    HRESULT (* Query)(struct IGlobalOptions *, GLOBALOPT_PROPERTIES, ULONG_PTR *);
};

typedef struct IInitializeSpy IInitializeSpy, *PIInitializeSpy;

typedef struct IInitializeSpyVtbl IInitializeSpyVtbl, *PIInitializeSpyVtbl;

struct IInitializeSpyVtbl {
    HRESULT (* QueryInterface)(struct IInitializeSpy *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeSpy *);
    ULONG (* Release)(struct IInitializeSpy *);
    HRESULT (* PreInitialize)(struct IInitializeSpy *, DWORD, DWORD);
    HRESULT (* PostInitialize)(struct IInitializeSpy *, HRESULT, DWORD, DWORD);
    HRESULT (* PreUninitialize)(struct IInitializeSpy *, DWORD);
    HRESULT (* PostUninitialize)(struct IInitializeSpy *, DWORD);
};

struct IInitializeSpy {
    struct IInitializeSpyVtbl * lpVtbl;
};

typedef struct IInternalUnknown IInternalUnknown, *PIInternalUnknown;

typedef struct IInternalUnknownVtbl IInternalUnknownVtbl, *PIInternalUnknownVtbl;

struct IInternalUnknownVtbl {
    HRESULT (* QueryInterface)(struct IInternalUnknown *, IID *, void * *);
    ULONG (* AddRef)(struct IInternalUnknown *);
    ULONG (* Release)(struct IInternalUnknown *);
    HRESULT (* QueryInternalInterface)(struct IInternalUnknown *, IID *, void * *);
};

struct IInternalUnknown {
    struct IInternalUnknownVtbl * lpVtbl;
};

typedef struct ILayoutStorage ILayoutStorage, *PILayoutStorage;

typedef struct ILayoutStorageVtbl ILayoutStorageVtbl, *PILayoutStorageVtbl;

typedef struct tagStorageLayout tagStorageLayout, *PtagStorageLayout;

typedef struct tagStorageLayout StorageLayout;

typedef struct ILockBytes ILockBytes, *PILockBytes;

typedef struct ILockBytesVtbl ILockBytesVtbl, *PILockBytesVtbl;

struct ILockBytesVtbl {
    HRESULT (* QueryInterface)(struct ILockBytes *, IID *, void * *);
    ULONG (* AddRef)(struct ILockBytes *);
    ULONG (* Release)(struct ILockBytes *);
    HRESULT (* ReadAt)(struct ILockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (* WriteAt)(struct ILockBytes *, ULARGE_INTEGER, void *, ULONG, ULONG *);
    HRESULT (* Flush)(struct ILockBytes *);
    HRESULT (* SetSize)(struct ILockBytes *, ULARGE_INTEGER);
    HRESULT (* LockRegion)(struct ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct ILockBytes *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct ILockBytes *, STATSTG *, DWORD);
};

struct tagStorageLayout {
    DWORD LayoutType;
    OLECHAR * pwcsElementName;
    LARGE_INTEGER cOffset;
    LARGE_INTEGER cBytes;
};

struct ILockBytes {
    struct ILockBytesVtbl * lpVtbl;
};

struct ILayoutStorage {
    struct ILayoutStorageVtbl * lpVtbl;
};

struct ILayoutStorageVtbl {
    HRESULT (* QueryInterface)(struct ILayoutStorage *, IID *, void * *);
    ULONG (* AddRef)(struct ILayoutStorage *);
    ULONG (* Release)(struct ILayoutStorage *);
    HRESULT (* LayoutScript)(struct ILayoutStorage *, StorageLayout *, DWORD, DWORD);
    HRESULT (* BeginMonitor)(struct ILayoutStorage *);
    HRESULT (* EndMonitor)(struct ILayoutStorage *);
    HRESULT (* ReLayoutDocfile)(struct ILayoutStorage *, OLECHAR *);
    HRESULT (* ReLayoutDocfileOnILockBytes)(struct ILayoutStorage *, struct ILockBytes *);
};

typedef struct IMalloc IMalloc, *PIMalloc;

typedef struct IMallocVtbl IMallocVtbl, *PIMallocVtbl;

struct IMalloc {
    struct IMallocVtbl * lpVtbl;
};

struct IMallocVtbl {
    HRESULT (* QueryInterface)(struct IMalloc *, IID *, void * *);
    ULONG (* AddRef)(struct IMalloc *);
    ULONG (* Release)(struct IMalloc *);
    void * (* Alloc)(struct IMalloc *, SIZE_T);
    void * (* Realloc)(struct IMalloc *, void *, SIZE_T);
    void (* Free)(struct IMalloc *, void *);
    SIZE_T (* GetSize)(struct IMalloc *, void *);
    int (* DidAlloc)(struct IMalloc *, void *);
    void (* HeapMinimize)(struct IMalloc *);
};

typedef struct IMallocSpy IMallocSpy, *PIMallocSpy;

typedef struct IMallocSpyVtbl IMallocSpyVtbl, *PIMallocSpyVtbl;

struct IMallocSpyVtbl {
    HRESULT (* QueryInterface)(struct IMallocSpy *, IID *, void * *);
    ULONG (* AddRef)(struct IMallocSpy *);
    ULONG (* Release)(struct IMallocSpy *);
    SIZE_T (* PreAlloc)(struct IMallocSpy *, SIZE_T);
    void * (* PostAlloc)(struct IMallocSpy *, void *);
    void * (* PreFree)(struct IMallocSpy *, void *, BOOL);
    void (* PostFree)(struct IMallocSpy *, BOOL);
    SIZE_T (* PreRealloc)(struct IMallocSpy *, void *, SIZE_T, void * *, BOOL);
    void * (* PostRealloc)(struct IMallocSpy *, void *, BOOL);
    void * (* PreGetSize)(struct IMallocSpy *, void *, BOOL);
    SIZE_T (* PostGetSize)(struct IMallocSpy *, SIZE_T, BOOL);
    void * (* PreDidAlloc)(struct IMallocSpy *, void *, BOOL);
    int (* PostDidAlloc)(struct IMallocSpy *, void *, BOOL, int);
    void (* PreHeapMinimize)(struct IMallocSpy *);
    void (* PostHeapMinimize)(struct IMallocSpy *);
};

struct IMallocSpy {
    struct IMallocSpyVtbl * lpVtbl;
};

typedef struct IMarshal IMarshal, *PIMarshal;

typedef struct IMarshalVtbl IMarshalVtbl, *PIMarshalVtbl;

struct IMarshal {
    struct IMarshalVtbl * lpVtbl;
};

struct IMarshalVtbl {
    HRESULT (* QueryInterface)(struct IMarshal *, IID *, void * *);
    ULONG (* AddRef)(struct IMarshal *);
    ULONG (* Release)(struct IMarshal *);
    HRESULT (* GetUnmarshalClass)(struct IMarshal *, IID *, void *, DWORD, void *, DWORD, CLSID *);
    HRESULT (* GetMarshalSizeMax)(struct IMarshal *, IID *, void *, DWORD, void *, DWORD, DWORD *);
    HRESULT (* MarshalInterface)(struct IMarshal *, struct IStream *, IID *, void *, DWORD, void *, DWORD);
    HRESULT (* UnmarshalInterface)(struct IMarshal *, struct IStream *, IID *, void * *);
    HRESULT (* ReleaseMarshalData)(struct IMarshal *, struct IStream *);
    HRESULT (* DisconnectObject)(struct IMarshal *, DWORD);
};

typedef struct IMarshal2 IMarshal2, *PIMarshal2;

typedef struct IMarshal2Vtbl IMarshal2Vtbl, *PIMarshal2Vtbl;

struct IMarshal2Vtbl {
    HRESULT (* QueryInterface)(struct IMarshal2 *, IID *, void * *);
    ULONG (* AddRef)(struct IMarshal2 *);
    ULONG (* Release)(struct IMarshal2 *);
    HRESULT (* GetUnmarshalClass)(struct IMarshal2 *, IID *, void *, DWORD, void *, DWORD, CLSID *);
    HRESULT (* GetMarshalSizeMax)(struct IMarshal2 *, IID *, void *, DWORD, void *, DWORD, DWORD *);
    HRESULT (* MarshalInterface)(struct IMarshal2 *, struct IStream *, IID *, void *, DWORD, void *, DWORD);
    HRESULT (* UnmarshalInterface)(struct IMarshal2 *, struct IStream *, IID *, void * *);
    HRESULT (* ReleaseMarshalData)(struct IMarshal2 *, struct IStream *);
    HRESULT (* DisconnectObject)(struct IMarshal2 *, DWORD);
};

struct IMarshal2 {
    struct IMarshal2Vtbl * lpVtbl;
};

typedef struct IMessageFilter IMessageFilter, *PIMessageFilter;

typedef struct IMessageFilterVtbl IMessageFilterVtbl, *PIMessageFilterVtbl;

typedef struct tagINTERFACEINFO tagINTERFACEINFO, *PtagINTERFACEINFO;

typedef struct tagINTERFACEINFO * LPINTERFACEINFO;

struct IMessageFilter {
    struct IMessageFilterVtbl * lpVtbl;
};

struct tagINTERFACEINFO {
    struct IUnknown * pUnk;
    IID iid;
    WORD wMethod;
};

struct IMessageFilterVtbl {
    HRESULT (* QueryInterface)(struct IMessageFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IMessageFilter *);
    ULONG (* Release)(struct IMessageFilter *);
    DWORD (* HandleInComingCall)(struct IMessageFilter *, DWORD, HTASK, DWORD, LPINTERFACEINFO);
    DWORD (* RetryRejectedCall)(struct IMessageFilter *, HTASK, DWORD, DWORD);
    DWORD (* MessagePending)(struct IMessageFilter *, HTASK, DWORD, DWORD);
};

typedef struct IMultiQI IMultiQI, *PIMultiQI;

typedef struct IMultiQIVtbl IMultiQIVtbl, *PIMultiQIVtbl;

struct IMultiQI {
    struct IMultiQIVtbl * lpVtbl;
};

struct IMultiQIVtbl {
    HRESULT (* QueryInterface)(struct IMultiQI *, IID *, void * *);
    ULONG (* AddRef)(struct IMultiQI *);
    ULONG (* Release)(struct IMultiQI *);
    HRESULT (* QueryMultipleInterfaces)(struct IMultiQI *, ULONG, MULTI_QI *);
};

typedef struct tagINTERFACEINFO INTERFACEINFO;

typedef struct IObjContext IObjContext, *PIObjContext;

struct IObjContext {
};

typedef struct IOplockStorage IOplockStorage, *PIOplockStorage;

typedef struct IOplockStorageVtbl IOplockStorageVtbl, *PIOplockStorageVtbl;

struct IOplockStorage {
    struct IOplockStorageVtbl * lpVtbl;
};

struct IOplockStorageVtbl {
    HRESULT (* QueryInterface)(struct IOplockStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IOplockStorage *);
    ULONG (* Release)(struct IOplockStorage *);
    HRESULT (* CreateStorageEx)(struct IOplockStorage *, LPCWSTR, DWORD, DWORD, DWORD, IID *, void * *);
    HRESULT (* OpenStorageEx)(struct IOplockStorage *, LPCWSTR, DWORD, DWORD, DWORD, IID *, void * *);
};

typedef struct IPersist IPersist, *PIPersist;

typedef struct IPersistVtbl IPersistVtbl, *PIPersistVtbl;

struct IPersistVtbl {
    HRESULT (* QueryInterface)(struct IPersist *, IID *, void * *);
    ULONG (* AddRef)(struct IPersist *);
    ULONG (* Release)(struct IPersist *);
    HRESULT (* GetClassID)(struct IPersist *, CLSID *);
};

struct IPersist {
    struct IPersistVtbl * lpVtbl;
};

typedef struct IPersistFile IPersistFile, *PIPersistFile;

typedef struct IPersistFileVtbl IPersistFileVtbl, *PIPersistFileVtbl;

struct IPersistFile {
    struct IPersistFileVtbl * lpVtbl;
};

struct IPersistFileVtbl {
    HRESULT (* QueryInterface)(struct IPersistFile *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistFile *);
    ULONG (* Release)(struct IPersistFile *);
    HRESULT (* GetClassID)(struct IPersistFile *, CLSID *);
    HRESULT (* IsDirty)(struct IPersistFile *);
    HRESULT (* Load)(struct IPersistFile *, LPCOLESTR, DWORD);
    HRESULT (* Save)(struct IPersistFile *, LPCOLESTR, BOOL);
    HRESULT (* SaveCompleted)(struct IPersistFile *, LPCOLESTR);
    HRESULT (* GetCurFile)(struct IPersistFile *, LPOLESTR *);
};

typedef struct IPersistStorage IPersistStorage, *PIPersistStorage;

typedef struct IPersistStorageVtbl IPersistStorageVtbl, *PIPersistStorageVtbl;

struct IPersistStorage {
    struct IPersistStorageVtbl * lpVtbl;
};

struct IPersistStorageVtbl {
    HRESULT (* QueryInterface)(struct IPersistStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistStorage *);
    ULONG (* Release)(struct IPersistStorage *);
    HRESULT (* GetClassID)(struct IPersistStorage *, CLSID *);
    HRESULT (* IsDirty)(struct IPersistStorage *);
    HRESULT (* InitNew)(struct IPersistStorage *, struct IStorage *);
    HRESULT (* Load)(struct IPersistStorage *, struct IStorage *);
    HRESULT (* Save)(struct IPersistStorage *, struct IStorage *, BOOL);
    HRESULT (* SaveCompleted)(struct IPersistStorage *, struct IStorage *);
    HRESULT (* HandsOffStorage)(struct IPersistStorage *);
};

typedef struct IPersistStream IPersistStream, *PIPersistStream;

typedef struct IPersistStreamVtbl IPersistStreamVtbl, *PIPersistStreamVtbl;

struct IPersistStreamVtbl {
    HRESULT (* QueryInterface)(struct IPersistStream *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistStream *);
    ULONG (* Release)(struct IPersistStream *);
    HRESULT (* GetClassID)(struct IPersistStream *, CLSID *);
    HRESULT (* IsDirty)(struct IPersistStream *);
    HRESULT (* Load)(struct IPersistStream *, struct IStream *);
    HRESULT (* Save)(struct IPersistStream *, struct IStream *, BOOL);
    HRESULT (* GetSizeMax)(struct IPersistStream *, ULARGE_INTEGER *);
};

struct IPersistStream {
    struct IPersistStreamVtbl * lpVtbl;
};

typedef struct IPipeByte IPipeByte, *PIPipeByte;

typedef struct IPipeByteVtbl IPipeByteVtbl, *PIPipeByteVtbl;

struct IPipeByte {
    struct IPipeByteVtbl * lpVtbl;
};

struct IPipeByteVtbl {
    HRESULT (* QueryInterface)(struct IPipeByte *, IID *, void * *);
    ULONG (* AddRef)(struct IPipeByte *);
    ULONG (* Release)(struct IPipeByte *);
    HRESULT (* Pull)(struct IPipeByte *, BYTE *, ULONG, ULONG *);
    HRESULT (* Push)(struct IPipeByte *, BYTE *, ULONG);
};

typedef struct IPipeDouble IPipeDouble, *PIPipeDouble;

typedef struct IPipeDoubleVtbl IPipeDoubleVtbl, *PIPipeDoubleVtbl;

struct IPipeDouble {
    struct IPipeDoubleVtbl * lpVtbl;
};

struct IPipeDoubleVtbl {
    HRESULT (* QueryInterface)(struct IPipeDouble *, IID *, void * *);
    ULONG (* AddRef)(struct IPipeDouble *);
    ULONG (* Release)(struct IPipeDouble *);
    HRESULT (* Pull)(struct IPipeDouble *, DOUBLE *, ULONG, ULONG *);
    HRESULT (* Push)(struct IPipeDouble *, DOUBLE *, ULONG);
};

typedef struct IPipeLong IPipeLong, *PIPipeLong;

typedef struct IPipeLongVtbl IPipeLongVtbl, *PIPipeLongVtbl;

struct IPipeLong {
    struct IPipeLongVtbl * lpVtbl;
};

struct IPipeLongVtbl {
    HRESULT (* QueryInterface)(struct IPipeLong *, IID *, void * *);
    ULONG (* AddRef)(struct IPipeLong *);
    ULONG (* Release)(struct IPipeLong *);
    HRESULT (* Pull)(struct IPipeLong *, LONG *, ULONG, ULONG *);
    HRESULT (* Push)(struct IPipeLong *, LONG *, ULONG);
};

typedef struct IProcessInitControl IProcessInitControl, *PIProcessInitControl;

typedef struct IProcessInitControlVtbl IProcessInitControlVtbl, *PIProcessInitControlVtbl;

struct IProcessInitControl {
    struct IProcessInitControlVtbl * lpVtbl;
};

struct IProcessInitControlVtbl {
    HRESULT (* QueryInterface)(struct IProcessInitControl *, IID *, void * *);
    ULONG (* AddRef)(struct IProcessInitControl *);
    ULONG (* Release)(struct IProcessInitControl *);
    HRESULT (* ResetInitializerTimeout)(struct IProcessInitControl *, DWORD);
};

typedef struct IProcessLock IProcessLock, *PIProcessLock;

typedef struct IProcessLockVtbl IProcessLockVtbl, *PIProcessLockVtbl;

struct IProcessLock {
    struct IProcessLockVtbl * lpVtbl;
};

struct IProcessLockVtbl {
    HRESULT (* QueryInterface)(struct IProcessLock *, IID *, void * *);
    ULONG (* AddRef)(struct IProcessLock *);
    ULONG (* Release)(struct IProcessLock *);
    ULONG (* AddRefOnProcess)(struct IProcessLock *);
    ULONG (* ReleaseRefOnProcess)(struct IProcessLock *);
};

typedef struct IProgressNotify IProgressNotify, *PIProgressNotify;

typedef struct IProgressNotifyVtbl IProgressNotifyVtbl, *PIProgressNotifyVtbl;

struct IProgressNotify {
    struct IProgressNotifyVtbl * lpVtbl;
};

struct IProgressNotifyVtbl {
    HRESULT (* QueryInterface)(struct IProgressNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IProgressNotify *);
    ULONG (* Release)(struct IProgressNotify *);
    HRESULT (* OnProgress)(struct IProgressNotify *, DWORD, DWORD, BOOL, BOOL);
};

typedef struct IPSFactoryBuffer IPSFactoryBuffer, *PIPSFactoryBuffer;

typedef struct IPSFactoryBufferVtbl IPSFactoryBufferVtbl, *PIPSFactoryBufferVtbl;

typedef struct IRpcProxyBuffer IRpcProxyBuffer, *PIRpcProxyBuffer;

typedef struct IRpcStubBuffer IRpcStubBuffer, *PIRpcStubBuffer;

typedef struct IRpcProxyBufferVtbl IRpcProxyBufferVtbl, *PIRpcProxyBufferVtbl;

typedef struct IRpcChannelBuffer IRpcChannelBuffer, *PIRpcChannelBuffer;

typedef struct IRpcStubBufferVtbl IRpcStubBufferVtbl, *PIRpcStubBufferVtbl;

typedef struct IRpcChannelBufferVtbl IRpcChannelBufferVtbl, *PIRpcChannelBufferVtbl;

struct IRpcProxyBufferVtbl {
    HRESULT (* QueryInterface)(struct IRpcProxyBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcProxyBuffer *);
    ULONG (* Release)(struct IRpcProxyBuffer *);
    HRESULT (* Connect)(struct IRpcProxyBuffer *, struct IRpcChannelBuffer *);
    void (* Disconnect)(struct IRpcProxyBuffer *);
};

struct IRpcProxyBuffer {
    struct IRpcProxyBufferVtbl * lpVtbl;
};

struct IPSFactoryBuffer {
    struct IPSFactoryBufferVtbl * lpVtbl;
};

struct IRpcStubBufferVtbl {
    HRESULT (* QueryInterface)(struct IRpcStubBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcStubBuffer *);
    ULONG (* Release)(struct IRpcStubBuffer *);
    HRESULT (* Connect)(struct IRpcStubBuffer *, struct IUnknown *);
    void (* Disconnect)(struct IRpcStubBuffer *);
    HRESULT (* Invoke)(struct IRpcStubBuffer *, RPCOLEMESSAGE *, struct IRpcChannelBuffer *);
    IRpcStubBuffer * (* IsIIDSupported)(struct IRpcStubBuffer *, IID *);
    ULONG (* CountRefs)(struct IRpcStubBuffer *);
    HRESULT (* DebugServerQueryInterface)(struct IRpcStubBuffer *, void * *);
    void (* DebugServerRelease)(struct IRpcStubBuffer *, void *);
};

struct IPSFactoryBufferVtbl {
    HRESULT (* QueryInterface)(struct IPSFactoryBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IPSFactoryBuffer *);
    ULONG (* Release)(struct IPSFactoryBuffer *);
    HRESULT (* CreateProxy)(struct IPSFactoryBuffer *, struct IUnknown *, IID *, struct IRpcProxyBuffer * *, void * *);
    HRESULT (* CreateStub)(struct IPSFactoryBuffer *, IID *, struct IUnknown *, struct IRpcStubBuffer * *);
};

struct IRpcChannelBuffer {
    struct IRpcChannelBufferVtbl * lpVtbl;
};

struct IRpcChannelBufferVtbl {
    HRESULT (* QueryInterface)(struct IRpcChannelBuffer *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcChannelBuffer *);
    ULONG (* Release)(struct IRpcChannelBuffer *);
    HRESULT (* GetBuffer)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *, IID *);
    HRESULT (* SendReceive)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (* FreeBuffer)(struct IRpcChannelBuffer *, RPCOLEMESSAGE *);
    HRESULT (* GetDestCtx)(struct IRpcChannelBuffer *, DWORD *, void * *);
    HRESULT (* IsConnected)(struct IRpcChannelBuffer *);
};

struct IRpcStubBuffer {
    struct IRpcStubBufferVtbl * lpVtbl;
};

typedef struct IReleaseMarshalBuffers IReleaseMarshalBuffers, *PIReleaseMarshalBuffers;

typedef struct IReleaseMarshalBuffersVtbl IReleaseMarshalBuffersVtbl, *PIReleaseMarshalBuffersVtbl;

struct IReleaseMarshalBuffersVtbl {
    HRESULT (* QueryInterface)(struct IReleaseMarshalBuffers *, IID *, void * *);
    ULONG (* AddRef)(struct IReleaseMarshalBuffers *);
    ULONG (* Release)(struct IReleaseMarshalBuffers *);
    HRESULT (* ReleaseMarshalBuffer)(struct IReleaseMarshalBuffers *, RPCOLEMESSAGE *, DWORD, struct IUnknown *);
};

struct IReleaseMarshalBuffers {
    struct IReleaseMarshalBuffersVtbl * lpVtbl;
};

typedef struct IRootStorage IRootStorage, *PIRootStorage;

typedef struct IRootStorageVtbl IRootStorageVtbl, *PIRootStorageVtbl;

struct IRootStorageVtbl {
    HRESULT (* QueryInterface)(struct IRootStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IRootStorage *);
    ULONG (* Release)(struct IRootStorage *);
    HRESULT (* SwitchToFile)(struct IRootStorage *, LPOLESTR);
};

struct IRootStorage {
    struct IRootStorageVtbl * lpVtbl;
};

typedef struct IROTData IROTData, *PIROTData;

typedef struct IROTDataVtbl IROTDataVtbl, *PIROTDataVtbl;

struct IROTDataVtbl {
    HRESULT (* QueryInterface)(struct IROTData *, IID *, void * *);
    ULONG (* AddRef)(struct IROTData *);
    ULONG (* Release)(struct IROTData *);
    HRESULT (* GetComparisonData)(struct IROTData *, byte *, ULONG, ULONG *);
};

struct IROTData {
    struct IROTDataVtbl * lpVtbl;
};

typedef struct IRpcChannelBuffer2 IRpcChannelBuffer2, *PIRpcChannelBuffer2;

typedef struct IRpcChannelBuffer2Vtbl IRpcChannelBuffer2Vtbl, *PIRpcChannelBuffer2Vtbl;

struct IRpcChannelBuffer2 {
    struct IRpcChannelBuffer2Vtbl * lpVtbl;
};

struct IRpcChannelBuffer2Vtbl {
    HRESULT (* QueryInterface)(struct IRpcChannelBuffer2 *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcChannelBuffer2 *);
    ULONG (* Release)(struct IRpcChannelBuffer2 *);
    HRESULT (* GetBuffer)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *, IID *);
    HRESULT (* SendReceive)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (* FreeBuffer)(struct IRpcChannelBuffer2 *, RPCOLEMESSAGE *);
    HRESULT (* GetDestCtx)(struct IRpcChannelBuffer2 *, DWORD *, void * *);
    HRESULT (* IsConnected)(struct IRpcChannelBuffer2 *);
    HRESULT (* GetProtocolVersion)(struct IRpcChannelBuffer2 *, DWORD *);
};

typedef struct IRpcChannelBuffer3 IRpcChannelBuffer3, *PIRpcChannelBuffer3;

typedef struct IRpcChannelBuffer3Vtbl IRpcChannelBuffer3Vtbl, *PIRpcChannelBuffer3Vtbl;

struct IRpcChannelBuffer3Vtbl {
    HRESULT (* QueryInterface)(struct IRpcChannelBuffer3 *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcChannelBuffer3 *);
    ULONG (* Release)(struct IRpcChannelBuffer3 *);
    HRESULT (* GetBuffer)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, IID *);
    HRESULT (* SendReceive)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (* FreeBuffer)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *);
    HRESULT (* GetDestCtx)(struct IRpcChannelBuffer3 *, DWORD *, void * *);
    HRESULT (* IsConnected)(struct IRpcChannelBuffer3 *);
    HRESULT (* GetProtocolVersion)(struct IRpcChannelBuffer3 *, DWORD *);
    HRESULT (* Send)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG *);
    HRESULT (* Receive)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, ULONG, ULONG *);
    HRESULT (* Cancel)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *);
    HRESULT (* GetCallContext)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, IID *, void * *);
    HRESULT (* GetDestCtxEx)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, DWORD *, void * *);
    HRESULT (* GetState)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, DWORD *);
    HRESULT (* RegisterAsync)(struct IRpcChannelBuffer3 *, RPCOLEMESSAGE *, struct IAsyncManager *);
};

struct IRpcChannelBuffer3 {
    struct IRpcChannelBuffer3Vtbl * lpVtbl;
};

typedef struct IRpcHelper IRpcHelper, *PIRpcHelper;

typedef struct IRpcHelperVtbl IRpcHelperVtbl, *PIRpcHelperVtbl;

struct IRpcHelperVtbl {
    HRESULT (* QueryInterface)(struct IRpcHelper *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcHelper *);
    ULONG (* Release)(struct IRpcHelper *);
    HRESULT (* GetDCOMProtocolVersion)(struct IRpcHelper *, DWORD *);
    HRESULT (* GetIIDFromOBJREF)(struct IRpcHelper *, void *, IID * *);
};

struct IRpcHelper {
    struct IRpcHelperVtbl * lpVtbl;
};

typedef struct IRpcOptions IRpcOptions, *PIRpcOptions;

typedef struct IRpcOptionsVtbl IRpcOptionsVtbl, *PIRpcOptionsVtbl;

typedef enum tagRPCOPT_PROPERTIES {
    COMBND_RPCTIMEOUT=1,
    COMBND_SERVER_LOCALITY=2
} tagRPCOPT_PROPERTIES;

typedef enum tagRPCOPT_PROPERTIES RPCOPT_PROPERTIES;

struct IRpcOptions {
    struct IRpcOptionsVtbl * lpVtbl;
};

struct IRpcOptionsVtbl {
    HRESULT (* QueryInterface)(struct IRpcOptions *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcOptions *);
    ULONG (* Release)(struct IRpcOptions *);
    HRESULT (* Set)(struct IRpcOptions *, struct IUnknown *, RPCOPT_PROPERTIES, ULONG_PTR);
    HRESULT (* Query)(struct IRpcOptions *, struct IUnknown *, RPCOPT_PROPERTIES, ULONG_PTR *);
};

typedef struct IRpcSyntaxNegotiate IRpcSyntaxNegotiate, *PIRpcSyntaxNegotiate;

typedef struct IRpcSyntaxNegotiateVtbl IRpcSyntaxNegotiateVtbl, *PIRpcSyntaxNegotiateVtbl;

struct IRpcSyntaxNegotiate {
    struct IRpcSyntaxNegotiateVtbl * lpVtbl;
};

struct IRpcSyntaxNegotiateVtbl {
    HRESULT (* QueryInterface)(struct IRpcSyntaxNegotiate *, IID *, void * *);
    ULONG (* AddRef)(struct IRpcSyntaxNegotiate *);
    ULONG (* Release)(struct IRpcSyntaxNegotiate *);
    HRESULT (* NegotiateSyntax)(struct IRpcSyntaxNegotiate *, RPCOLEMESSAGE *);
};

typedef struct IRunnableObject IRunnableObject, *PIRunnableObject;

typedef struct IRunnableObjectVtbl IRunnableObjectVtbl, *PIRunnableObjectVtbl;

typedef struct IBindCtx * LPBINDCTX;

struct IRunnableObjectVtbl {
    HRESULT (* QueryInterface)(struct IRunnableObject *, IID *, void * *);
    ULONG (* AddRef)(struct IRunnableObject *);
    ULONG (* Release)(struct IRunnableObject *);
    HRESULT (* GetRunningClass)(struct IRunnableObject *, LPCLSID);
    HRESULT (* Run)(struct IRunnableObject *, LPBINDCTX);
    BOOL (* IsRunning)(struct IRunnableObject *);
    HRESULT (* LockRunning)(struct IRunnableObject *, BOOL, BOOL);
    HRESULT (* SetContainedObject)(struct IRunnableObject *, BOOL);
};

struct IRunnableObject {
    struct IRunnableObjectVtbl * lpVtbl;
};

typedef struct ISequentialStream ISequentialStream, *PISequentialStream;

typedef struct ISequentialStreamVtbl ISequentialStreamVtbl, *PISequentialStreamVtbl;

struct ISequentialStream {
    struct ISequentialStreamVtbl * lpVtbl;
};

struct ISequentialStreamVtbl {
    HRESULT (* QueryInterface)(struct ISequentialStream *, IID *, void * *);
    ULONG (* AddRef)(struct ISequentialStream *);
    ULONG (* Release)(struct ISequentialStream *);
    HRESULT (* Read)(struct ISequentialStream *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct ISequentialStream *, void *, ULONG, ULONG *);
};

typedef struct IServerSecurity IServerSecurity, *PIServerSecurity;

typedef struct IServerSecurityVtbl IServerSecurityVtbl, *PIServerSecurityVtbl;

struct IServerSecurity {
    struct IServerSecurityVtbl * lpVtbl;
};

struct IServerSecurityVtbl {
    HRESULT (* QueryInterface)(struct IServerSecurity *, IID *, void * *);
    ULONG (* AddRef)(struct IServerSecurity *);
    ULONG (* Release)(struct IServerSecurity *);
    HRESULT (* QueryBlanket)(struct IServerSecurity *, DWORD *, DWORD *, OLECHAR * *, DWORD *, DWORD *, void * *, DWORD *);
    HRESULT (* ImpersonateClient)(struct IServerSecurity *);
    HRESULT (* RevertToSelf)(struct IServerSecurity *);
    BOOL (* IsImpersonating)(struct IServerSecurity *);
};

typedef struct IStdMarshalInfo IStdMarshalInfo, *PIStdMarshalInfo;

typedef struct IStdMarshalInfoVtbl IStdMarshalInfoVtbl, *PIStdMarshalInfoVtbl;

struct IStdMarshalInfoVtbl {
    HRESULT (* QueryInterface)(struct IStdMarshalInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IStdMarshalInfo *);
    ULONG (* Release)(struct IStdMarshalInfo *);
    HRESULT (* GetClassForHandler)(struct IStdMarshalInfo *, DWORD, void *, CLSID *);
};

struct IStdMarshalInfo {
    struct IStdMarshalInfoVtbl * lpVtbl;
};

typedef struct ISurrogate ISurrogate, *PISurrogate;

typedef struct ISurrogateVtbl ISurrogateVtbl, *PISurrogateVtbl;

struct ISurrogateVtbl {
    HRESULT (* QueryInterface)(struct ISurrogate *, IID *, void * *);
    ULONG (* AddRef)(struct ISurrogate *);
    ULONG (* Release)(struct ISurrogate *);
    HRESULT (* LoadDllServer)(struct ISurrogate *, IID *);
    HRESULT (* FreeSurrogate)(struct ISurrogate *);
};

struct ISurrogate {
    struct ISurrogateVtbl * lpVtbl;
};

typedef struct ISurrogateService ISurrogateService, *PISurrogateService;

typedef struct ISurrogateServiceVtbl ISurrogateServiceVtbl, *PISurrogateServiceVtbl;

typedef enum tagShutdownType {
    ForcedShutdown=1,
    IdleShutdown=0
} tagShutdownType;

typedef enum tagShutdownType ShutdownType;

struct ISurrogateServiceVtbl {
    HRESULT (* QueryInterface)(struct ISurrogateService *, IID *, void * *);
    ULONG (* AddRef)(struct ISurrogateService *);
    ULONG (* Release)(struct ISurrogateService *);
    HRESULT (* Init)(struct ISurrogateService *, GUID *, struct IProcessLock *, BOOL *);
    HRESULT (* ApplicationLaunch)(struct ISurrogateService *, GUID *, ApplicationType);
    HRESULT (* ApplicationFree)(struct ISurrogateService *, GUID *);
    HRESULT (* CatalogRefresh)(struct ISurrogateService *, ULONG);
    HRESULT (* ProcessShutdown)(struct ISurrogateService *, ShutdownType);
};

struct ISurrogateService {
    struct ISurrogateServiceVtbl * lpVtbl;
};

typedef struct ISynchronizeContainer ISynchronizeContainer, *PISynchronizeContainer;

typedef struct ISynchronizeContainerVtbl ISynchronizeContainerVtbl, *PISynchronizeContainerVtbl;

struct ISynchronizeContainer {
    struct ISynchronizeContainerVtbl * lpVtbl;
};

struct ISynchronizeContainerVtbl {
    HRESULT (* QueryInterface)(struct ISynchronizeContainer *, IID *, void * *);
    ULONG (* AddRef)(struct ISynchronizeContainer *);
    ULONG (* Release)(struct ISynchronizeContainer *);
    HRESULT (* AddSynchronize)(struct ISynchronizeContainer *, struct ISynchronize *);
    HRESULT (* WaitMultiple)(struct ISynchronizeContainer *, DWORD, DWORD, struct ISynchronize * *);
};

typedef struct ISynchronizeEvent ISynchronizeEvent, *PISynchronizeEvent;

typedef struct ISynchronizeEventVtbl ISynchronizeEventVtbl, *PISynchronizeEventVtbl;

struct ISynchronizeEvent {
    struct ISynchronizeEventVtbl * lpVtbl;
};

struct ISynchronizeEventVtbl {
    HRESULT (* QueryInterface)(struct ISynchronizeEvent *, IID *, void * *);
    ULONG (* AddRef)(struct ISynchronizeEvent *);
    ULONG (* Release)(struct ISynchronizeEvent *);
    HRESULT (* GetHandle)(struct ISynchronizeEvent *, HANDLE *);
    HRESULT (* SetEventHandle)(struct ISynchronizeEvent *, HANDLE *);
};

typedef struct ISynchronizeHandle ISynchronizeHandle, *PISynchronizeHandle;

typedef struct ISynchronizeHandleVtbl ISynchronizeHandleVtbl, *PISynchronizeHandleVtbl;

struct ISynchronizeHandle {
    struct ISynchronizeHandleVtbl * lpVtbl;
};

struct ISynchronizeHandleVtbl {
    HRESULT (* QueryInterface)(struct ISynchronizeHandle *, IID *, void * *);
    ULONG (* AddRef)(struct ISynchronizeHandle *);
    ULONG (* Release)(struct ISynchronizeHandle *);
    HRESULT (* GetHandle)(struct ISynchronizeHandle *, HANDLE *);
};

typedef struct ISynchronizeMutex ISynchronizeMutex, *PISynchronizeMutex;

typedef struct ISynchronizeMutexVtbl ISynchronizeMutexVtbl, *PISynchronizeMutexVtbl;

struct ISynchronizeMutexVtbl {
    HRESULT (* QueryInterface)(struct ISynchronizeMutex *, IID *, void * *);
    ULONG (* AddRef)(struct ISynchronizeMutex *);
    ULONG (* Release)(struct ISynchronizeMutex *);
    HRESULT (* Wait)(struct ISynchronizeMutex *, DWORD, DWORD);
    HRESULT (* Signal)(struct ISynchronizeMutex *);
    HRESULT (* Reset)(struct ISynchronizeMutex *);
    HRESULT (* ReleaseMutex)(struct ISynchronizeMutex *);
};

struct ISynchronizeMutex {
    struct ISynchronizeMutexVtbl * lpVtbl;
};

typedef struct IThumbnailExtractor IThumbnailExtractor, *PIThumbnailExtractor;

typedef struct IThumbnailExtractorVtbl IThumbnailExtractorVtbl, *PIThumbnailExtractorVtbl;

struct IThumbnailExtractorVtbl {
    HRESULT (* QueryInterface)(struct IThumbnailExtractor *, IID *, void * *);
    ULONG (* AddRef)(struct IThumbnailExtractor *);
    ULONG (* Release)(struct IThumbnailExtractor *);
    HRESULT (* ExtractThumbnail)(struct IThumbnailExtractor *, struct IStorage *, ULONG, ULONG, ULONG *, ULONG *, HBITMAP *);
    HRESULT (* OnFileUpdated)(struct IThumbnailExtractor *, struct IStorage *);
};

struct IThumbnailExtractor {
    struct IThumbnailExtractorVtbl * lpVtbl;
};

typedef struct ITimeAndNoticeControl ITimeAndNoticeControl, *PITimeAndNoticeControl;

typedef struct ITimeAndNoticeControlVtbl ITimeAndNoticeControlVtbl, *PITimeAndNoticeControlVtbl;

struct ITimeAndNoticeControl {
    struct ITimeAndNoticeControlVtbl * lpVtbl;
};

struct ITimeAndNoticeControlVtbl {
    HRESULT (* QueryInterface)(struct ITimeAndNoticeControl *, IID *, void * *);
    ULONG (* AddRef)(struct ITimeAndNoticeControl *);
    ULONG (* Release)(struct ITimeAndNoticeControl *);
    HRESULT (* SuppressChanges)(struct ITimeAndNoticeControl *, DWORD, DWORD);
};

typedef struct IUrlMon IUrlMon, *PIUrlMon;

typedef struct IUrlMonVtbl IUrlMonVtbl, *PIUrlMonVtbl;

struct IUrlMonVtbl {
    HRESULT (* QueryInterface)(struct IUrlMon *, IID *, void * *);
    ULONG (* AddRef)(struct IUrlMon *);
    ULONG (* Release)(struct IUrlMon *);
    HRESULT (* AsyncGetClassBits)(struct IUrlMon *, IID *, LPCWSTR, LPCWSTR, DWORD, DWORD, LPCWSTR, struct IBindCtx *, DWORD, IID *, DWORD);
};

struct IUrlMon {
    struct IUrlMonVtbl * lpVtbl;
};

typedef struct IWaitMultiple IWaitMultiple, *PIWaitMultiple;

typedef struct IWaitMultipleVtbl IWaitMultipleVtbl, *PIWaitMultipleVtbl;

struct IWaitMultiple {
    struct IWaitMultipleVtbl * lpVtbl;
};

struct IWaitMultipleVtbl {
    HRESULT (* QueryInterface)(struct IWaitMultiple *, IID *, void * *);
    ULONG (* AddRef)(struct IWaitMultiple *);
    ULONG (* Release)(struct IWaitMultiple *);
    HRESULT (* WaitMultiple)(struct IWaitMultiple *, DWORD, struct ISynchronize * *);
    HRESULT (* AddSynchronize)(struct IWaitMultiple *, struct ISynchronize *);
};

typedef enum tagLOCKTYPE {
    LOCK_EXCLUSIVE=2,
    LOCK_ONLYONCE=4,
    LOCK_WRITE=1
} tagLOCKTYPE;

typedef enum tagLOCKTYPE LOCKTYPE;

typedef struct IAddrExclusionControl * LPADDREXCLUSIONCONTROL;

typedef struct IAddrTrackingControl * LPADDRTRACKINGCONTROL;

typedef struct IAdviseSink * LPADVISESINK;

typedef struct IAdviseSink2 * LPADVISESINK2;

typedef struct IBindCtx * LPBC;

typedef struct tagBIND_OPTS * LPBIND_OPTS;

typedef struct tagBIND_OPTS2 * LPBIND_OPTS2;

typedef struct tagBIND_OPTS3 * LPBIND_OPTS3;

typedef struct ICancelMethodCalls * LPCANCELMETHODCALLS;

typedef CLIPFORMAT * LPCLIPFORMAT;

typedef struct IDataAdviseHolder * LPDATAADVISEHOLDER;

typedef struct IDataObject * LPDATAOBJECT;

typedef struct IEnumFORMATETC * LPENUMFORMATETC;

typedef struct IEnumMoniker * LPENUMMONIKER;

typedef struct IEnumSTATDATA * LPENUMSTATDATA;

typedef struct IEnumSTATSTG * LPENUMSTATSTG;

typedef struct IEnumString * LPENUMSTRING;

typedef struct IEnumUnknown * LPENUMUNKNOWN;

typedef struct IExternalConnection * LPEXTERNALCONNECTION;

typedef struct tagFORMATETC * LPFORMATETC;

typedef struct IGlobalInterfaceTable * LPGLOBALINTERFACETABLE;

typedef struct IInitializeSpy * LPINITIALIZESPY;

typedef struct ILockBytes * LPLOCKBYTES;

typedef struct IMalloc * LPMALLOC;

typedef struct IMallocSpy * LPMALLOCSPY;

typedef struct IMarshal * LPMARSHAL;

typedef struct IMarshal2 * LPMARSHAL2;

typedef struct IMessageFilter * LPMESSAGEFILTER;

typedef struct IMoniker * LPMONIKER;

typedef struct IMultiQI * LPMULTIQI;

typedef struct IPersist * LPPERSIST;

typedef struct IPersistFile * LPPERSISTFILE;

typedef struct IPersistStorage * LPPERSISTSTORAGE;

typedef struct IPersistStream * LPPERSISTSTREAM;

typedef struct IRootStorage * LPROOTSTORAGE;

typedef struct IRunnableObject * LPRUNNABLEOBJECT;

typedef struct IRunningObjectTable * LPRUNNINGOBJECTTABLE;

typedef STATDATA * LPSTATDATA;

typedef struct IStdMarshalInfo * LPSTDMARSHALINFO;

typedef STGMEDIUM * LPSTGMEDIUM;

typedef struct IStorage * LPSTORAGE;

typedef struct ISurrogate * LPSURROGATE;

typedef enum tagMKREDUCE {
    MKRREDUCE_ALL=0,
    MKRREDUCE_ONE=196608,
    MKRREDUCE_THROUGHUSER=65536,
    MKRREDUCE_TOUSER=131072
} tagMKREDUCE;

typedef enum tagMKREDUCE MKRREDUCE;

typedef enum tagMKSYS {
    MKSYS_ANTIMONIKER=3,
    MKSYS_CLASSMONIKER=7,
    MKSYS_FILEMONIKER=2,
    MKSYS_GENERICCOMPOSITE=1,
    MKSYS_ITEMMONIKER=4,
    MKSYS_LUAMONIKER=10,
    MKSYS_NONE=0,
    MKSYS_OBJREFMONIKER=8,
    MKSYS_POINTERMONIKER=5,
    MKSYS_SESSIONMONIKER=9
} tagMKSYS;

typedef enum tagMKSYS MKSYS;

typedef enum tagPENDINGMSG {
    PENDINGMSG_CANCELCALL=0,
    PENDINGMSG_WAITDEFPROCESS=2,
    PENDINGMSG_WAITNOPROCESS=1
} tagPENDINGMSG;

typedef enum tagPENDINGMSG PENDINGMSG;

typedef enum tagPENDINGTYPE {
    PENDINGTYPE_NESTED=2,
    PENDINGTYPE_TOPLEVEL=1
} tagPENDINGTYPE;

typedef enum tagPENDINGTYPE PENDINGTYPE;

typedef RPCOLEMESSAGE * PRPCOLEMESSAGE;

typedef struct tagSOLE_AUTHENTICATION_INFO tagSOLE_AUTHENTICATION_INFO, *PtagSOLE_AUTHENTICATION_INFO;

typedef struct tagSOLE_AUTHENTICATION_INFO * PSOLE_AUTHENTICATION_INFO;

struct tagSOLE_AUTHENTICATION_INFO {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    void * pAuthInfo;
};

typedef struct tagSOLE_AUTHENTICATION_LIST tagSOLE_AUTHENTICATION_LIST, *PtagSOLE_AUTHENTICATION_LIST;

typedef struct tagSOLE_AUTHENTICATION_LIST * PSOLE_AUTHENTICATION_LIST;

typedef struct tagSOLE_AUTHENTICATION_INFO SOLE_AUTHENTICATION_INFO;

struct tagSOLE_AUTHENTICATION_LIST {
    DWORD cAuthInfo;
    SOLE_AUTHENTICATION_INFO * aAuthInfo;
};

typedef struct tagSOLE_AUTHENTICATION_SERVICE tagSOLE_AUTHENTICATION_SERVICE, *PtagSOLE_AUTHENTICATION_SERVICE;

typedef struct tagSOLE_AUTHENTICATION_SERVICE SOLE_AUTHENTICATION_SERVICE;

typedef SOLE_AUTHENTICATION_SERVICE * PSOLE_AUTHENTICATION_SERVICE;

struct tagSOLE_AUTHENTICATION_SERVICE {
    DWORD dwAuthnSvc;
    DWORD dwAuthzSvc;
    OLECHAR * pPrincipalName;
    HRESULT hr;
};

typedef struct tagRemSNB tagRemSNB, *PtagRemSNB;

typedef struct tagRemSNB RemSNB;

struct tagRemSNB {
    ulong ulCntStr;
    ulong ulCntChar;
    OLECHAR rgString[1];
};

typedef struct tagRemSTGMEDIUM tagRemSTGMEDIUM, *PtagRemSTGMEDIUM;

typedef struct tagRemSTGMEDIUM RemSTGMEDIUM;

struct tagRemSTGMEDIUM {
    DWORD tymed;
    DWORD dwHandleType;
    ulong pData;
    ulong pUnkForRelease;
    ulong cbData;
    byte data[1];
};

typedef enum tagRPCOPT_SERVER_LOCALITY_VALUES {
    SERVER_LOCALITY_MACHINE_LOCAL=1,
    SERVER_LOCALITY_PROCESS_LOCAL=0,
    SERVER_LOCALITY_REMOTE=2
} tagRPCOPT_SERVER_LOCALITY_VALUES;

typedef enum tagRPCOPT_SERVER_LOCALITY_VALUES RPCOPT_SERVER_LOCALITY_VALUES;

typedef struct SChannelHookCallInfo SChannelHookCallInfo, *PSChannelHookCallInfo;

struct SChannelHookCallInfo {
    IID iid;
    DWORD cbSize;
    GUID uCausality;
    DWORD dwServerPid;
    DWORD iMethod;
    void * pObject;
};

typedef enum tagSERVERCALL {
    SERVERCALL_ISHANDLED=0,
    SERVERCALL_REJECTED=1,
    SERVERCALL_RETRYLATER=2
} tagSERVERCALL;

typedef enum tagSERVERCALL SERVERCALL;

typedef struct tagSOLE_AUTHENTICATION_LIST SOLE_AUTHENTICATION_LIST;

typedef enum tagSTGTY {
    STGTY_LOCKBYTES=3,
    STGTY_PROPERTY=4,
    STGTY_STORAGE=1,
    STGTY_STREAM=2
} tagSTGTY;

typedef enum tagSTGTY STGTY;

typedef enum tagSTREAM_SEEK {
    STREAM_SEEK_CUR=1,
    STREAM_SEEK_END=2,
    STREAM_SEEK_SET=0
} tagSTREAM_SEEK;

typedef enum tagSTREAM_SEEK STREAM_SEEK;

typedef enum tagTYMED {
    TYMED_ENHMF=64,
    TYMED_FILE=2,
    TYMED_GDI=16,
    TYMED_HGLOBAL=1,
    TYMED_ISTORAGE=8,
    TYMED_ISTREAM=4,
    TYMED_MFPICT=32,
    TYMED_NULL=0
} tagTYMED;

typedef enum tagTYMED TYMED;

typedef struct _userFLAG_STGMEDIUM userFLAG_STGMEDIUM;

typedef userSTGMEDIUM * wireASYNC_STGMEDIUM;

typedef userFLAG_STGMEDIUM * wireFLAG_STGMEDIUM;

typedef RemSNB * wireSNB;

typedef userSTGMEDIUM * wireSTGMEDIUM;

#define MULTICLASSINFO_GETIIDPRIMARY 4

#define MULTICLASSINFO_GETIIDSOURCE 8

#define MULTICLASSINFO_GETNUMRESERVEDDISPIDS 2

#define MULTICLASSINFO_GETTYPEINFO 1

#define TIFLAGS_EXTENDDISPATCHONLY 1

typedef enum tagACTIVATEFLAGS {
    ACTIVATE_WINDOWLESS=1
} tagACTIVATEFLAGS;

typedef enum tagACTIVATEFLAGS ACTIVATEFLAGS;

typedef struct tagCADWORD tagCADWORD, *PtagCADWORD;

typedef struct tagCADWORD CADWORD;

struct tagCADWORD {
    ULONG cElems;
    DWORD * pElems;
};

typedef struct tagCALPOLESTR tagCALPOLESTR, *PtagCALPOLESTR;

typedef struct tagCALPOLESTR CALPOLESTR;

struct tagCALPOLESTR {
    ULONG cElems;
    LPOLESTR * pElems;
};

typedef struct tagCAUUID tagCAUUID, *PtagCAUUID;

typedef struct tagCAUUID CAUUID;

struct tagCAUUID {
    ULONG cElems;
    GUID * pElems;
};

typedef struct tagCONNECTDATA tagCONNECTDATA, *PtagCONNECTDATA;

typedef struct tagCONNECTDATA CONNECTDATA;

struct tagCONNECTDATA {
    struct IUnknown * pUnk;
    DWORD dwCookie;
};

typedef struct tagCONTROLINFO tagCONTROLINFO, *PtagCONTROLINFO;

typedef struct tagCONTROLINFO CONTROLINFO;

struct tagCONTROLINFO {
    ULONG cb;
    HACCEL hAccel;
    USHORT cAccel;
    DWORD dwFlags;
};

typedef enum tagCTRLINFO {
    CTRLINFO_EATS_ESCAPE=2,
    CTRLINFO_EATS_RETURN=1
} tagCTRLINFO;

typedef enum tagCTRLINFO CTRLINFO;

typedef enum tagDVASPECT2 {
    DVASPECT_OPAQUE=16,
    DVASPECT_TRANSPARENT=32
} tagDVASPECT2;

typedef enum tagDVASPECT2 DVASPECT2;

typedef struct tagAspectInfo tagAspectInfo, *PtagAspectInfo;

typedef struct tagAspectInfo DVASPECTINFO;

struct tagAspectInfo {
    ULONG cb;
    DWORD dwFlags;
};

typedef enum tagAspectInfoFlag {
    DVASPECTINFOFLAG_CANOPTIMIZE=1
} tagAspectInfoFlag;

typedef enum tagAspectInfoFlag DVASPECTINFOFLAG;

typedef struct tagExtentInfo tagExtentInfo, *PtagExtentInfo;

typedef struct tagExtentInfo DVEXTENTINFO;

typedef SIZE SIZEL;

struct tagExtentInfo {
    ULONG cb;
    DWORD dwExtentMode;
    SIZEL sizelProposed;
};

typedef enum tagExtentMode {
    DVEXTENT_CONTENT=0,
    DVEXTENT_INTEGRAL=1
} tagExtentMode;

typedef enum tagExtentMode DVEXTENTMODE;

typedef enum tagGUIDKIND {
    GUIDKIND_DEFAULT_SOURCE_DISP_IID=1
} tagGUIDKIND;

typedef enum tagGUIDKIND GUIDKIND;

typedef UINT_PTR HHANDLE;

typedef enum tagHITRESULT {
    HITRESULT_CLOSE=2,
    HITRESULT_HIT=3,
    HITRESULT_OUTSIDE=0,
    HITRESULT_TRANSPARENT=1
} tagHITRESULT;

typedef enum tagHITRESULT HITRESULT;

typedef struct IAdviseSinkEx IAdviseSinkEx, *PIAdviseSinkEx;

typedef struct IAdviseSinkExVtbl IAdviseSinkExVtbl, *PIAdviseSinkExVtbl;

struct IAdviseSinkEx {
    struct IAdviseSinkExVtbl * lpVtbl;
};

struct IAdviseSinkExVtbl {
    HRESULT (* QueryInterface)(struct IAdviseSinkEx *, IID *, void * *);
    ULONG (* AddRef)(struct IAdviseSinkEx *);
    ULONG (* Release)(struct IAdviseSinkEx *);
    void (* OnDataChange)(struct IAdviseSinkEx *, FORMATETC *, STGMEDIUM *);
    void (* OnViewChange)(struct IAdviseSinkEx *, DWORD, LONG);
    void (* OnRename)(struct IAdviseSinkEx *, struct IMoniker *);
    void (* OnSave)(struct IAdviseSinkEx *);
    void (* OnClose)(struct IAdviseSinkEx *);
    void (* OnViewStatusChange)(struct IAdviseSinkEx *, DWORD);
};

typedef struct IClassFactory2 IClassFactory2, *PIClassFactory2;

typedef struct IClassFactory2Vtbl IClassFactory2Vtbl, *PIClassFactory2Vtbl;

typedef struct tagLICINFO tagLICINFO, *PtagLICINFO;

typedef struct tagLICINFO LICINFO;

struct IClassFactory2 {
    struct IClassFactory2Vtbl * lpVtbl;
};

struct tagLICINFO {
    LONG cbLicInfo;
    BOOL fRuntimeKeyAvail;
    BOOL fLicVerified;
};

struct IClassFactory2Vtbl {
    HRESULT (* QueryInterface)(struct IClassFactory2 *, IID *, void * *);
    ULONG (* AddRef)(struct IClassFactory2 *);
    ULONG (* Release)(struct IClassFactory2 *);
    HRESULT (* CreateInstance)(struct IClassFactory2 *, struct IUnknown *, IID *, void * *);
    HRESULT (* LockServer)(struct IClassFactory2 *, BOOL);
    HRESULT (* GetLicInfo)(struct IClassFactory2 *, LICINFO *);
    HRESULT (* RequestLicKey)(struct IClassFactory2 *, DWORD, BSTR *);
    HRESULT (* CreateInstanceLic)(struct IClassFactory2 *, struct IUnknown *, struct IUnknown *, IID *, BSTR, PVOID *);
};

typedef struct IConnectionPoint IConnectionPoint, *PIConnectionPoint;

typedef struct IConnectionPointVtbl IConnectionPointVtbl, *PIConnectionPointVtbl;

typedef struct IConnectionPointContainer IConnectionPointContainer, *PIConnectionPointContainer;

typedef struct IEnumConnections IEnumConnections, *PIEnumConnections;

typedef struct IConnectionPointContainerVtbl IConnectionPointContainerVtbl, *PIConnectionPointContainerVtbl;

typedef struct IEnumConnectionPoints IEnumConnectionPoints, *PIEnumConnectionPoints;

typedef struct IEnumConnectionsVtbl IEnumConnectionsVtbl, *PIEnumConnectionsVtbl;

typedef struct tagCONNECTDATA * LPCONNECTDATA;

typedef struct IEnumConnectionPointsVtbl IEnumConnectionPointsVtbl, *PIEnumConnectionPointsVtbl;

typedef struct IConnectionPoint * LPCONNECTIONPOINT;

struct IEnumConnections {
    struct IEnumConnectionsVtbl * lpVtbl;
};

struct IEnumConnectionsVtbl {
    HRESULT (* QueryInterface)(struct IEnumConnections *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumConnections *);
    ULONG (* Release)(struct IEnumConnections *);
    HRESULT (* Next)(struct IEnumConnections *, ULONG, LPCONNECTDATA, ULONG *);
    HRESULT (* Skip)(struct IEnumConnections *, ULONG);
    HRESULT (* Reset)(struct IEnumConnections *);
    HRESULT (* Clone)(struct IEnumConnections *, struct IEnumConnections * *);
};

struct IConnectionPointVtbl {
    HRESULT (* QueryInterface)(struct IConnectionPoint *, IID *, void * *);
    ULONG (* AddRef)(struct IConnectionPoint *);
    ULONG (* Release)(struct IConnectionPoint *);
    HRESULT (* GetConnectionInterface)(struct IConnectionPoint *, IID *);
    HRESULT (* GetConnectionPointContainer)(struct IConnectionPoint *, struct IConnectionPointContainer * *);
    HRESULT (* Advise)(struct IConnectionPoint *, struct IUnknown *, DWORD *);
    HRESULT (* Unadvise)(struct IConnectionPoint *, DWORD);
    HRESULT (* EnumConnections)(struct IConnectionPoint *, struct IEnumConnections * *);
};

struct IConnectionPointContainer {
    struct IConnectionPointContainerVtbl * lpVtbl;
};

struct IConnectionPointContainerVtbl {
    HRESULT (* QueryInterface)(struct IConnectionPointContainer *, IID *, void * *);
    ULONG (* AddRef)(struct IConnectionPointContainer *);
    ULONG (* Release)(struct IConnectionPointContainer *);
    HRESULT (* EnumConnectionPoints)(struct IConnectionPointContainer *, struct IEnumConnectionPoints * *);
    HRESULT (* FindConnectionPoint)(struct IConnectionPointContainer *, IID *, struct IConnectionPoint * *);
};

struct IEnumConnectionPoints {
    struct IEnumConnectionPointsVtbl * lpVtbl;
};

struct IEnumConnectionPointsVtbl {
    HRESULT (* QueryInterface)(struct IEnumConnectionPoints *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumConnectionPoints *);
    ULONG (* Release)(struct IEnumConnectionPoints *);
    HRESULT (* Next)(struct IEnumConnectionPoints *, ULONG, LPCONNECTIONPOINT *, ULONG *);
    HRESULT (* Skip)(struct IEnumConnectionPoints *, ULONG);
    HRESULT (* Reset)(struct IEnumConnectionPoints *);
    HRESULT (* Clone)(struct IEnumConnectionPoints *, struct IEnumConnectionPoints * *);
};

struct IConnectionPoint {
    struct IConnectionPointVtbl * lpVtbl;
};

typedef struct IEnumOleUndoUnits IEnumOleUndoUnits, *PIEnumOleUndoUnits;

typedef struct IEnumOleUndoUnitsVtbl IEnumOleUndoUnitsVtbl, *PIEnumOleUndoUnitsVtbl;

typedef struct IOleUndoUnit IOleUndoUnit, *PIOleUndoUnit;

typedef struct IOleUndoUnitVtbl IOleUndoUnitVtbl, *PIOleUndoUnitVtbl;

typedef struct IOleUndoManager IOleUndoManager, *PIOleUndoManager;

typedef struct IOleUndoManagerVtbl IOleUndoManagerVtbl, *PIOleUndoManagerVtbl;

typedef struct IOleParentUndoUnit IOleParentUndoUnit, *PIOleParentUndoUnit;

typedef struct IOleParentUndoUnitVtbl IOleParentUndoUnitVtbl, *PIOleParentUndoUnitVtbl;

struct IOleParentUndoUnit {
    struct IOleParentUndoUnitVtbl * lpVtbl;
};

struct IEnumOleUndoUnits {
    struct IEnumOleUndoUnitsVtbl * lpVtbl;
};

struct IOleUndoUnit {
    struct IOleUndoUnitVtbl * lpVtbl;
};

struct IOleUndoManagerVtbl {
    HRESULT (* QueryInterface)(struct IOleUndoManager *, IID *, void * *);
    ULONG (* AddRef)(struct IOleUndoManager *);
    ULONG (* Release)(struct IOleUndoManager *);
    HRESULT (* Open)(struct IOleUndoManager *, struct IOleParentUndoUnit *);
    HRESULT (* Close)(struct IOleUndoManager *, struct IOleParentUndoUnit *, BOOL);
    HRESULT (* Add)(struct IOleUndoManager *, struct IOleUndoUnit *);
    HRESULT (* GetOpenParentState)(struct IOleUndoManager *, DWORD *);
    HRESULT (* DiscardFrom)(struct IOleUndoManager *, struct IOleUndoUnit *);
    HRESULT (* UndoTo)(struct IOleUndoManager *, struct IOleUndoUnit *);
    HRESULT (* RedoTo)(struct IOleUndoManager *, struct IOleUndoUnit *);
    HRESULT (* EnumUndoable)(struct IOleUndoManager *, struct IEnumOleUndoUnits * *);
    HRESULT (* EnumRedoable)(struct IOleUndoManager *, struct IEnumOleUndoUnits * *);
    HRESULT (* GetLastUndoDescription)(struct IOleUndoManager *, BSTR *);
    HRESULT (* GetLastRedoDescription)(struct IOleUndoManager *, BSTR *);
    HRESULT (* Enable)(struct IOleUndoManager *, BOOL);
};

struct IEnumOleUndoUnitsVtbl {
    HRESULT (* QueryInterface)(struct IEnumOleUndoUnits *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumOleUndoUnits *);
    ULONG (* Release)(struct IEnumOleUndoUnits *);
    HRESULT (* Next)(struct IEnumOleUndoUnits *, ULONG, struct IOleUndoUnit * *, ULONG *);
    HRESULT (* Skip)(struct IEnumOleUndoUnits *, ULONG);
    HRESULT (* Reset)(struct IEnumOleUndoUnits *);
    HRESULT (* Clone)(struct IEnumOleUndoUnits *, struct IEnumOleUndoUnits * *);
};

struct IOleUndoManager {
    struct IOleUndoManagerVtbl * lpVtbl;
};

struct IOleUndoUnitVtbl {
    HRESULT (* QueryInterface)(struct IOleUndoUnit *, IID *, void * *);
    ULONG (* AddRef)(struct IOleUndoUnit *);
    ULONG (* Release)(struct IOleUndoUnit *);
    HRESULT (* Do)(struct IOleUndoUnit *, struct IOleUndoManager *);
    HRESULT (* GetDescription)(struct IOleUndoUnit *, BSTR *);
    HRESULT (* GetUnitType)(struct IOleUndoUnit *, CLSID *, LONG *);
    HRESULT (* OnNextAdd)(struct IOleUndoUnit *);
};

struct IOleParentUndoUnitVtbl {
    HRESULT (* QueryInterface)(struct IOleParentUndoUnit *, IID *, void * *);
    ULONG (* AddRef)(struct IOleParentUndoUnit *);
    ULONG (* Release)(struct IOleParentUndoUnit *);
    HRESULT (* Do)(struct IOleParentUndoUnit *, struct IOleUndoManager *);
    HRESULT (* GetDescription)(struct IOleParentUndoUnit *, BSTR *);
    HRESULT (* GetUnitType)(struct IOleParentUndoUnit *, CLSID *, LONG *);
    HRESULT (* OnNextAdd)(struct IOleParentUndoUnit *);
    HRESULT (* Open)(struct IOleParentUndoUnit *, struct IOleParentUndoUnit *);
    HRESULT (* Close)(struct IOleParentUndoUnit *, struct IOleParentUndoUnit *, BOOL);
    HRESULT (* Add)(struct IOleParentUndoUnit *, struct IOleUndoUnit *);
    HRESULT (* FindUnit)(struct IOleParentUndoUnit *, struct IOleUndoUnit *);
    HRESULT (* GetParentState)(struct IOleParentUndoUnit *, DWORD *);
};

typedef struct IFont IFont, *PIFont;

typedef struct IFontVtbl IFontVtbl, *PIFontVtbl;

typedef struct HFONT__ HFONT__, *PHFONT__;

typedef struct HFONT__ * HFONT;

typedef struct tagTEXTMETRICW tagTEXTMETRICW, *PtagTEXTMETRICW;

typedef struct tagTEXTMETRICW TEXTMETRICW;

typedef TEXTMETRICW TEXTMETRICOLE;

struct HFONT__ {
    int unused;
};

struct IFontVtbl {
    HRESULT (* QueryInterface)(struct IFont *, IID *, void * *);
    ULONG (* AddRef)(struct IFont *);
    ULONG (* Release)(struct IFont *);
    HRESULT (* get_Name)(struct IFont *, BSTR *);
    HRESULT (* put_Name)(struct IFont *, BSTR);
    HRESULT (* get_Size)(struct IFont *, CY *);
    HRESULT (* put_Size)(struct IFont *, CY);
    HRESULT (* get_Bold)(struct IFont *, BOOL *);
    HRESULT (* put_Bold)(struct IFont *, BOOL);
    HRESULT (* get_Italic)(struct IFont *, BOOL *);
    HRESULT (* put_Italic)(struct IFont *, BOOL);
    HRESULT (* get_Underline)(struct IFont *, BOOL *);
    HRESULT (* put_Underline)(struct IFont *, BOOL);
    HRESULT (* get_Strikethrough)(struct IFont *, BOOL *);
    HRESULT (* put_Strikethrough)(struct IFont *, BOOL);
    HRESULT (* get_Weight)(struct IFont *, SHORT *);
    HRESULT (* put_Weight)(struct IFont *, SHORT);
    HRESULT (* get_Charset)(struct IFont *, SHORT *);
    HRESULT (* put_Charset)(struct IFont *, SHORT);
    HRESULT (* get_hFont)(struct IFont *, HFONT *);
    HRESULT (* Clone)(struct IFont *, struct IFont * *);
    HRESULT (* IsEqual)(struct IFont *, struct IFont *);
    HRESULT (* SetRatio)(struct IFont *, LONG, LONG);
    HRESULT (* QueryTextMetrics)(struct IFont *, TEXTMETRICOLE *);
    HRESULT (* AddRefHfont)(struct IFont *, HFONT);
    HRESULT (* ReleaseHfont)(struct IFont *, HFONT);
    HRESULT (* SetHdc)(struct IFont *, HDC);
};

struct IFont {
    struct IFontVtbl * lpVtbl;
};

struct tagTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct IFontDisp IFontDisp, *PIFontDisp;

typedef struct IFontDispVtbl IFontDispVtbl, *PIFontDispVtbl;

struct IFontDisp {
    struct IFontDispVtbl * lpVtbl;
};

struct IFontDispVtbl {
    HRESULT (* QueryInterface)(struct IFontDisp *, IID *, void * *);
    ULONG (* AddRef)(struct IFontDisp *);
    ULONG (* Release)(struct IFontDisp *);
    HRESULT (* GetTypeInfoCount)(struct IFontDisp *, UINT *);
    HRESULT (* GetTypeInfo)(struct IFontDisp *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IFontDisp *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IFontDisp *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct IFontEventsDisp IFontEventsDisp, *PIFontEventsDisp;

typedef struct IFontEventsDispVtbl IFontEventsDispVtbl, *PIFontEventsDispVtbl;

struct IFontEventsDisp {
    struct IFontEventsDispVtbl * lpVtbl;
};

struct IFontEventsDispVtbl {
    HRESULT (* QueryInterface)(struct IFontEventsDisp *, IID *, void * *);
    ULONG (* AddRef)(struct IFontEventsDisp *);
    ULONG (* Release)(struct IFontEventsDisp *);
    HRESULT (* GetTypeInfoCount)(struct IFontEventsDisp *, UINT *);
    HRESULT (* GetTypeInfo)(struct IFontEventsDisp *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IFontEventsDisp *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IFontEventsDisp *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef struct IObjectWithSite IObjectWithSite, *PIObjectWithSite;

typedef struct IObjectWithSiteVtbl IObjectWithSiteVtbl, *PIObjectWithSiteVtbl;

struct IObjectWithSiteVtbl {
    HRESULT (* QueryInterface)(struct IObjectWithSite *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectWithSite *);
    ULONG (* Release)(struct IObjectWithSite *);
    HRESULT (* SetSite)(struct IObjectWithSite *, struct IUnknown *);
    HRESULT (* GetSite)(struct IObjectWithSite *, IID *, void * *);
};

struct IObjectWithSite {
    struct IObjectWithSiteVtbl * lpVtbl;
};

typedef struct IOleControl IOleControl, *PIOleControl;

typedef struct IOleControlVtbl IOleControlVtbl, *PIOleControlVtbl;

typedef struct tagMSG MSG;

struct IOleControlVtbl {
    HRESULT (* QueryInterface)(struct IOleControl *, IID *, void * *);
    ULONG (* AddRef)(struct IOleControl *);
    ULONG (* Release)(struct IOleControl *);
    HRESULT (* GetControlInfo)(struct IOleControl *, CONTROLINFO *);
    HRESULT (* OnMnemonic)(struct IOleControl *, MSG *);
    HRESULT (* OnAmbientPropertyChange)(struct IOleControl *, DISPID);
    HRESULT (* FreezeEvents)(struct IOleControl *, BOOL);
};

struct IOleControl {
    struct IOleControlVtbl * lpVtbl;
};

typedef struct IOleControlSite IOleControlSite, *PIOleControlSite;

typedef struct IOleControlSiteVtbl IOleControlSiteVtbl, *PIOleControlSiteVtbl;

typedef struct tagPOINTF tagPOINTF, *PtagPOINTF;

typedef struct tagPOINTF POINTF;

struct tagPOINTF {
    FLOAT x;
    FLOAT y;
};

struct IOleControlSiteVtbl {
    HRESULT (* QueryInterface)(struct IOleControlSite *, IID *, void * *);
    ULONG (* AddRef)(struct IOleControlSite *);
    ULONG (* Release)(struct IOleControlSite *);
    HRESULT (* OnControlInfoChanged)(struct IOleControlSite *);
    HRESULT (* LockInPlaceActive)(struct IOleControlSite *, BOOL);
    HRESULT (* GetExtendedControl)(struct IOleControlSite *, struct IDispatch * *);
    HRESULT (* TransformCoords)(struct IOleControlSite *, POINTL *, POINTF *, DWORD);
    HRESULT (* TranslateAcceleratorA)(struct IOleControlSite *, MSG *, DWORD);
    HRESULT (* OnFocus)(struct IOleControlSite *, BOOL);
    HRESULT (* ShowPropertyFrame)(struct IOleControlSite *);
};

struct IOleControlSite {
    struct IOleControlSiteVtbl * lpVtbl;
};

typedef struct IOleInPlaceObjectWindowless IOleInPlaceObjectWindowless, *PIOleInPlaceObjectWindowless;

typedef struct IOleInPlaceObjectWindowlessVtbl IOleInPlaceObjectWindowlessVtbl, *PIOleInPlaceObjectWindowlessVtbl;

typedef struct IDropTarget IDropTarget, *PIDropTarget;

typedef struct IDropTargetVtbl IDropTargetVtbl, *PIDropTargetVtbl;

struct IDropTargetVtbl {
    HRESULT (* QueryInterface)(struct IDropTarget *, IID *, void * *);
    ULONG (* AddRef)(struct IDropTarget *);
    ULONG (* Release)(struct IDropTarget *);
    HRESULT (* DragEnter)(struct IDropTarget *, struct IDataObject *, DWORD, POINTL, DWORD *);
    HRESULT (* DragOver)(struct IDropTarget *, DWORD, POINTL, DWORD *);
    HRESULT (* DragLeave)(struct IDropTarget *);
    HRESULT (* Drop)(struct IDropTarget *, struct IDataObject *, DWORD, POINTL, DWORD *);
};

struct IOleInPlaceObjectWindowless {
    struct IOleInPlaceObjectWindowlessVtbl * lpVtbl;
};

struct IOleInPlaceObjectWindowlessVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceObjectWindowless *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceObjectWindowless *);
    ULONG (* Release)(struct IOleInPlaceObjectWindowless *);
    HRESULT (* GetWindow)(struct IOleInPlaceObjectWindowless *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceObjectWindowless *, BOOL);
    HRESULT (* InPlaceDeactivate)(struct IOleInPlaceObjectWindowless *);
    HRESULT (* UIDeactivate)(struct IOleInPlaceObjectWindowless *);
    HRESULT (* SetObjectRects)(struct IOleInPlaceObjectWindowless *, LPCRECT, LPCRECT);
    HRESULT (* ReactivateAndUndo)(struct IOleInPlaceObjectWindowless *);
    HRESULT (* OnWindowMessage)(struct IOleInPlaceObjectWindowless *, UINT, WPARAM, LPARAM, LRESULT *);
    HRESULT (* GetDropTarget)(struct IOleInPlaceObjectWindowless *, struct IDropTarget * *);
};

struct IDropTarget {
    struct IDropTargetVtbl * lpVtbl;
};

typedef struct IOleInPlaceSiteEx IOleInPlaceSiteEx, *PIOleInPlaceSiteEx;

typedef struct IOleInPlaceSiteExVtbl IOleInPlaceSiteExVtbl, *PIOleInPlaceSiteExVtbl;

struct IOleInPlaceSiteEx {
    struct IOleInPlaceSiteExVtbl * lpVtbl;
};

struct IOleInPlaceSiteExVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceSiteEx *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceSiteEx *);
    ULONG (* Release)(struct IOleInPlaceSiteEx *);
    HRESULT (* GetWindow)(struct IOleInPlaceSiteEx *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceSiteEx *, BOOL);
    HRESULT (* CanInPlaceActivate)(struct IOleInPlaceSiteEx *);
    HRESULT (* OnInPlaceActivate)(struct IOleInPlaceSiteEx *);
    HRESULT (* OnUIActivate)(struct IOleInPlaceSiteEx *);
    HRESULT (* GetWindowContext)(struct IOleInPlaceSiteEx *, struct IOleInPlaceFrame * *, struct IOleInPlaceUIWindow * *, LPRECT, LPRECT, LPOLEINPLACEFRAMEINFO);
    HRESULT (* Scroll)(struct IOleInPlaceSiteEx *, SIZE);
    HRESULT (* OnUIDeactivate)(struct IOleInPlaceSiteEx *, BOOL);
    HRESULT (* OnInPlaceDeactivate)(struct IOleInPlaceSiteEx *);
    HRESULT (* DiscardUndoState)(struct IOleInPlaceSiteEx *);
    HRESULT (* DeactivateAndUndo)(struct IOleInPlaceSiteEx *);
    HRESULT (* OnPosRectChange)(struct IOleInPlaceSiteEx *, LPCRECT);
    HRESULT (* OnInPlaceActivateEx)(struct IOleInPlaceSiteEx *, BOOL *, DWORD);
    HRESULT (* OnInPlaceDeactivateEx)(struct IOleInPlaceSiteEx *, BOOL);
    HRESULT (* RequestUIActivate)(struct IOleInPlaceSiteEx *);
};

typedef struct IOleInPlaceSiteWindowless IOleInPlaceSiteWindowless, *PIOleInPlaceSiteWindowless;

typedef struct IOleInPlaceSiteWindowlessVtbl IOleInPlaceSiteWindowlessVtbl, *PIOleInPlaceSiteWindowlessVtbl;

struct IOleInPlaceSiteWindowlessVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceSiteWindowless *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceSiteWindowless *);
    ULONG (* Release)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* GetWindow)(struct IOleInPlaceSiteWindowless *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceSiteWindowless *, BOOL);
    HRESULT (* CanInPlaceActivate)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* OnInPlaceActivate)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* OnUIActivate)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* GetWindowContext)(struct IOleInPlaceSiteWindowless *, struct IOleInPlaceFrame * *, struct IOleInPlaceUIWindow * *, LPRECT, LPRECT, LPOLEINPLACEFRAMEINFO);
    HRESULT (* Scroll)(struct IOleInPlaceSiteWindowless *, SIZE);
    HRESULT (* OnUIDeactivate)(struct IOleInPlaceSiteWindowless *, BOOL);
    HRESULT (* OnInPlaceDeactivate)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* DiscardUndoState)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* DeactivateAndUndo)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* OnPosRectChange)(struct IOleInPlaceSiteWindowless *, LPCRECT);
    HRESULT (* OnInPlaceActivateEx)(struct IOleInPlaceSiteWindowless *, BOOL *, DWORD);
    HRESULT (* OnInPlaceDeactivateEx)(struct IOleInPlaceSiteWindowless *, BOOL);
    HRESULT (* RequestUIActivate)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* CanWindowlessActivate)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* GetCapture)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* SetCapture)(struct IOleInPlaceSiteWindowless *, BOOL);
    HRESULT (* GetFocus)(struct IOleInPlaceSiteWindowless *);
    HRESULT (* SetFocus)(struct IOleInPlaceSiteWindowless *, BOOL);
    HRESULT (* GetDC)(struct IOleInPlaceSiteWindowless *, LPCRECT, DWORD, HDC *);
    HRESULT (* ReleaseDC)(struct IOleInPlaceSiteWindowless *, HDC);
    HRESULT (* InvalidateRect)(struct IOleInPlaceSiteWindowless *, LPCRECT, BOOL);
    HRESULT (* InvalidateRgn)(struct IOleInPlaceSiteWindowless *, HRGN, BOOL);
    HRESULT (* ScrollRect)(struct IOleInPlaceSiteWindowless *, INT, INT, LPCRECT, LPCRECT);
    HRESULT (* AdjustRect)(struct IOleInPlaceSiteWindowless *, LPRECT);
    HRESULT (* OnDefWindowMessage)(struct IOleInPlaceSiteWindowless *, UINT, WPARAM, LPARAM, LRESULT *);
};

struct IOleInPlaceSiteWindowless {
    struct IOleInPlaceSiteWindowlessVtbl * lpVtbl;
};

typedef struct IPerPropertyBrowsing IPerPropertyBrowsing, *PIPerPropertyBrowsing;

typedef struct IPerPropertyBrowsingVtbl IPerPropertyBrowsingVtbl, *PIPerPropertyBrowsingVtbl;

struct IPerPropertyBrowsing {
    struct IPerPropertyBrowsingVtbl * lpVtbl;
};

struct IPerPropertyBrowsingVtbl {
    HRESULT (* QueryInterface)(struct IPerPropertyBrowsing *, IID *, void * *);
    ULONG (* AddRef)(struct IPerPropertyBrowsing *);
    ULONG (* Release)(struct IPerPropertyBrowsing *);
    HRESULT (* GetDisplayString)(struct IPerPropertyBrowsing *, DISPID, BSTR *);
    HRESULT (* MapPropertyToPage)(struct IPerPropertyBrowsing *, DISPID, CLSID *);
    HRESULT (* GetPredefinedStrings)(struct IPerPropertyBrowsing *, DISPID, CALPOLESTR *, CADWORD *);
    HRESULT (* GetPredefinedValue)(struct IPerPropertyBrowsing *, DISPID, DWORD, VARIANT *);
};

typedef struct IPersistMemory IPersistMemory, *PIPersistMemory;

typedef struct IPersistMemoryVtbl IPersistMemoryVtbl, *PIPersistMemoryVtbl;

struct IPersistMemory {
    struct IPersistMemoryVtbl * lpVtbl;
};

struct IPersistMemoryVtbl {
    HRESULT (* QueryInterface)(struct IPersistMemory *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistMemory *);
    ULONG (* Release)(struct IPersistMemory *);
    HRESULT (* GetClassID)(struct IPersistMemory *, CLSID *);
    HRESULT (* IsDirty)(struct IPersistMemory *);
    HRESULT (* Load)(struct IPersistMemory *, LPVOID, ULONG);
    HRESULT (* Save)(struct IPersistMemory *, LPVOID, BOOL, ULONG);
    HRESULT (* GetSizeMax)(struct IPersistMemory *, ULONG *);
    HRESULT (* InitNew)(struct IPersistMemory *);
};

typedef struct IPersistPropertyBag IPersistPropertyBag, *PIPersistPropertyBag;

typedef struct IPersistPropertyBagVtbl IPersistPropertyBagVtbl, *PIPersistPropertyBagVtbl;

struct IPersistPropertyBagVtbl {
    HRESULT (* QueryInterface)(struct IPersistPropertyBag *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistPropertyBag *);
    ULONG (* Release)(struct IPersistPropertyBag *);
    HRESULT (* GetClassID)(struct IPersistPropertyBag *, CLSID *);
    HRESULT (* InitNew)(struct IPersistPropertyBag *);
    HRESULT (* Load)(struct IPersistPropertyBag *, struct IPropertyBag *, struct IErrorLog *);
    HRESULT (* Save)(struct IPersistPropertyBag *, struct IPropertyBag *, BOOL, BOOL);
};

struct IPersistPropertyBag {
    struct IPersistPropertyBagVtbl * lpVtbl;
};

typedef struct IPersistPropertyBag2 IPersistPropertyBag2, *PIPersistPropertyBag2;

typedef struct IPersistPropertyBag2Vtbl IPersistPropertyBag2Vtbl, *PIPersistPropertyBag2Vtbl;

typedef struct IPropertyBag2 IPropertyBag2, *PIPropertyBag2;

typedef struct IPropertyBag2Vtbl IPropertyBag2Vtbl, *PIPropertyBag2Vtbl;

typedef struct tagPROPBAG2 tagPROPBAG2, *PtagPROPBAG2;

typedef struct tagPROPBAG2 PROPBAG2;

struct IPersistPropertyBag2Vtbl {
    HRESULT (* QueryInterface)(struct IPersistPropertyBag2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistPropertyBag2 *);
    ULONG (* Release)(struct IPersistPropertyBag2 *);
    HRESULT (* GetClassID)(struct IPersistPropertyBag2 *, CLSID *);
    HRESULT (* InitNew)(struct IPersistPropertyBag2 *);
    HRESULT (* Load)(struct IPersistPropertyBag2 *, struct IPropertyBag2 *, struct IErrorLog *);
    HRESULT (* Save)(struct IPersistPropertyBag2 *, struct IPropertyBag2 *, BOOL, BOOL);
    HRESULT (* IsDirty)(struct IPersistPropertyBag2 *);
};

struct IPropertyBag2Vtbl {
    HRESULT (* QueryInterface)(struct IPropertyBag2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyBag2 *);
    ULONG (* Release)(struct IPropertyBag2 *);
    HRESULT (* Read)(struct IPropertyBag2 *, ULONG, PROPBAG2 *, struct IErrorLog *, VARIANT *, HRESULT *);
    HRESULT (* Write)(struct IPropertyBag2 *, ULONG, PROPBAG2 *, VARIANT *);
    HRESULT (* CountProperties)(struct IPropertyBag2 *, ULONG *);
    HRESULT (* GetPropertyInfo)(struct IPropertyBag2 *, ULONG, ULONG, PROPBAG2 *, ULONG *);
    HRESULT (* LoadObject)(struct IPropertyBag2 *, LPCOLESTR, DWORD, struct IUnknown *, struct IErrorLog *);
};

struct IPropertyBag2 {
    struct IPropertyBag2Vtbl * lpVtbl;
};

struct IPersistPropertyBag2 {
    struct IPersistPropertyBag2Vtbl * lpVtbl;
};

struct tagPROPBAG2 {
    DWORD dwType;
    VARTYPE vt;
    CLIPFORMAT cfType;
    DWORD dwHint;
    LPOLESTR pstrName;
    CLSID clsid;
};

typedef struct IPersistStreamInit IPersistStreamInit, *PIPersistStreamInit;

typedef struct IPersistStreamInitVtbl IPersistStreamInitVtbl, *PIPersistStreamInitVtbl;

struct IPersistStreamInit {
    struct IPersistStreamInitVtbl * lpVtbl;
};

struct IPersistStreamInitVtbl {
    HRESULT (* QueryInterface)(struct IPersistStreamInit *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistStreamInit *);
    ULONG (* Release)(struct IPersistStreamInit *);
    HRESULT (* GetClassID)(struct IPersistStreamInit *, CLSID *);
    HRESULT (* IsDirty)(struct IPersistStreamInit *);
    HRESULT (* Load)(struct IPersistStreamInit *, LPSTREAM);
    HRESULT (* Save)(struct IPersistStreamInit *, LPSTREAM, BOOL);
    HRESULT (* GetSizeMax)(struct IPersistStreamInit *, ULARGE_INTEGER *);
    HRESULT (* InitNew)(struct IPersistStreamInit *);
};

typedef struct IPicture IPicture, *PIPicture;

typedef struct IPictureVtbl IPictureVtbl, *PIPictureVtbl;

typedef UINT OLE_HANDLE;

typedef LONG OLE_XSIZE_HIMETRIC;

typedef LONG OLE_YSIZE_HIMETRIC;

typedef LONG OLE_XPOS_HIMETRIC;

typedef LONG OLE_YPOS_HIMETRIC;

struct IPicture {
    struct IPictureVtbl * lpVtbl;
};

struct IPictureVtbl {
    HRESULT (* QueryInterface)(struct IPicture *, IID *, void * *);
    ULONG (* AddRef)(struct IPicture *);
    ULONG (* Release)(struct IPicture *);
    HRESULT (* get_Handle)(struct IPicture *, OLE_HANDLE *);
    HRESULT (* get_hPal)(struct IPicture *, OLE_HANDLE *);
    HRESULT (* get_Type)(struct IPicture *, SHORT *);
    HRESULT (* get_Width)(struct IPicture *, OLE_XSIZE_HIMETRIC *);
    HRESULT (* get_Height)(struct IPicture *, OLE_YSIZE_HIMETRIC *);
    HRESULT (* Render)(struct IPicture *, HDC, LONG, LONG, LONG, LONG, OLE_XPOS_HIMETRIC, OLE_YPOS_HIMETRIC, OLE_XSIZE_HIMETRIC, OLE_YSIZE_HIMETRIC, LPCRECT);
    HRESULT (* set_hPal)(struct IPicture *, OLE_HANDLE);
    HRESULT (* get_CurDC)(struct IPicture *, HDC *);
    HRESULT (* SelectPicture)(struct IPicture *, HDC, HDC *, OLE_HANDLE *);
    HRESULT (* get_KeepOriginalFormat)(struct IPicture *, BOOL *);
    HRESULT (* put_KeepOriginalFormat)(struct IPicture *, BOOL);
    HRESULT (* PictureChanged)(struct IPicture *);
    HRESULT (* SaveAsFile)(struct IPicture *, LPSTREAM, BOOL, LONG *);
    HRESULT (* get_Attributes)(struct IPicture *, DWORD *);
};

typedef struct IPicture2 IPicture2, *PIPicture2;

typedef struct IPicture2Vtbl IPicture2Vtbl, *PIPicture2Vtbl;

struct IPicture2 {
    struct IPicture2Vtbl * lpVtbl;
};

struct IPicture2Vtbl {
    HRESULT (* QueryInterface)(struct IPicture2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPicture2 *);
    ULONG (* Release)(struct IPicture2 *);
    HRESULT (* get_Handle)(struct IPicture2 *, HHANDLE *);
    HRESULT (* get_hPal)(struct IPicture2 *, HHANDLE *);
    HRESULT (* get_Type)(struct IPicture2 *, SHORT *);
    HRESULT (* get_Width)(struct IPicture2 *, OLE_XSIZE_HIMETRIC *);
    HRESULT (* get_Height)(struct IPicture2 *, OLE_YSIZE_HIMETRIC *);
    HRESULT (* Render)(struct IPicture2 *, HDC, LONG, LONG, LONG, LONG, OLE_XPOS_HIMETRIC, OLE_YPOS_HIMETRIC, OLE_XSIZE_HIMETRIC, OLE_YSIZE_HIMETRIC, LPCRECT);
    HRESULT (* set_hPal)(struct IPicture2 *, HHANDLE);
    HRESULT (* get_CurDC)(struct IPicture2 *, HDC *);
    HRESULT (* SelectPicture)(struct IPicture2 *, HDC, HDC *, HHANDLE *);
    HRESULT (* get_KeepOriginalFormat)(struct IPicture2 *, BOOL *);
    HRESULT (* put_KeepOriginalFormat)(struct IPicture2 *, BOOL);
    HRESULT (* PictureChanged)(struct IPicture2 *);
    HRESULT (* SaveAsFile)(struct IPicture2 *, LPSTREAM, BOOL, LONG *);
    HRESULT (* get_Attributes)(struct IPicture2 *, DWORD *);
};

typedef struct IPictureDisp IPictureDisp, *PIPictureDisp;

typedef struct IPictureDispVtbl IPictureDispVtbl, *PIPictureDispVtbl;

struct IPictureDispVtbl {
    HRESULT (* QueryInterface)(struct IPictureDisp *, IID *, void * *);
    ULONG (* AddRef)(struct IPictureDisp *);
    ULONG (* Release)(struct IPictureDisp *);
    HRESULT (* GetTypeInfoCount)(struct IPictureDisp *, UINT *);
    HRESULT (* GetTypeInfo)(struct IPictureDisp *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IPictureDisp *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IPictureDisp *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct IPictureDisp {
    struct IPictureDispVtbl * lpVtbl;
};

typedef struct IPointerInactive IPointerInactive, *PIPointerInactive;

typedef struct IPointerInactiveVtbl IPointerInactiveVtbl, *PIPointerInactiveVtbl;

struct IPointerInactiveVtbl {
    HRESULT (* QueryInterface)(struct IPointerInactive *, IID *, void * *);
    ULONG (* AddRef)(struct IPointerInactive *);
    ULONG (* Release)(struct IPointerInactive *);
    HRESULT (* GetActivationPolicy)(struct IPointerInactive *, DWORD *);
    HRESULT (* OnInactiveMouseMove)(struct IPointerInactive *, LPCRECT, LONG, LONG, DWORD);
    HRESULT (* OnInactiveSetCursor)(struct IPointerInactive *, LPCRECT, LONG, LONG, DWORD, BOOL);
};

struct IPointerInactive {
    struct IPointerInactiveVtbl * lpVtbl;
};

typedef struct IPropertyNotifySink IPropertyNotifySink, *PIPropertyNotifySink;

typedef struct IPropertyNotifySinkVtbl IPropertyNotifySinkVtbl, *PIPropertyNotifySinkVtbl;

struct IPropertyNotifySinkVtbl {
    HRESULT (* QueryInterface)(struct IPropertyNotifySink *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyNotifySink *);
    ULONG (* Release)(struct IPropertyNotifySink *);
    HRESULT (* OnChanged)(struct IPropertyNotifySink *, DISPID);
    HRESULT (* OnRequestEdit)(struct IPropertyNotifySink *, DISPID);
};

struct IPropertyNotifySink {
    struct IPropertyNotifySinkVtbl * lpVtbl;
};

typedef struct IPropertyPage IPropertyPage, *PIPropertyPage;

typedef struct IPropertyPageVtbl IPropertyPageVtbl, *PIPropertyPageVtbl;

typedef struct IPropertyPageSite IPropertyPageSite, *PIPropertyPageSite;

typedef struct tagPROPPAGEINFO tagPROPPAGEINFO, *PtagPROPPAGEINFO;

typedef struct tagPROPPAGEINFO PROPPAGEINFO;

typedef struct IPropertyPageSiteVtbl IPropertyPageSiteVtbl, *PIPropertyPageSiteVtbl;

struct IPropertyPageSite {
    struct IPropertyPageSiteVtbl * lpVtbl;
};

struct IPropertyPageVtbl {
    HRESULT (* QueryInterface)(struct IPropertyPage *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyPage *);
    ULONG (* Release)(struct IPropertyPage *);
    HRESULT (* SetPageSite)(struct IPropertyPage *, struct IPropertyPageSite *);
    HRESULT (* Activate)(struct IPropertyPage *, HWND, LPCRECT, BOOL);
    HRESULT (* Deactivate)(struct IPropertyPage *);
    HRESULT (* GetPageInfo)(struct IPropertyPage *, PROPPAGEINFO *);
    HRESULT (* SetObjects)(struct IPropertyPage *, ULONG, struct IUnknown * *);
    HRESULT (* Show)(struct IPropertyPage *, UINT);
    HRESULT (* Move)(struct IPropertyPage *, LPCRECT);
    HRESULT (* IsPageDirty)(struct IPropertyPage *);
    HRESULT (* Apply)(struct IPropertyPage *);
    HRESULT (* Help)(struct IPropertyPage *, LPCOLESTR);
    HRESULT (* TranslateAcceleratorA)(struct IPropertyPage *, MSG *);
};

struct tagPROPPAGEINFO {
    ULONG cb;
    LPOLESTR pszTitle;
    SIZE size;
    LPOLESTR pszDocString;
    LPOLESTR pszHelpFile;
    DWORD dwHelpContext;
};

struct IPropertyPageSiteVtbl {
    HRESULT (* QueryInterface)(struct IPropertyPageSite *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyPageSite *);
    ULONG (* Release)(struct IPropertyPageSite *);
    HRESULT (* OnStatusChange)(struct IPropertyPageSite *, DWORD);
    HRESULT (* GetLocaleID)(struct IPropertyPageSite *, LCID *);
    HRESULT (* GetPageContainer)(struct IPropertyPageSite *, struct IUnknown * *);
    HRESULT (* TranslateAcceleratorA)(struct IPropertyPageSite *, MSG *);
};

struct IPropertyPage {
    struct IPropertyPageVtbl * lpVtbl;
};

typedef struct IPropertyPage2 IPropertyPage2, *PIPropertyPage2;

typedef struct IPropertyPage2Vtbl IPropertyPage2Vtbl, *PIPropertyPage2Vtbl;

struct IPropertyPage2Vtbl {
    HRESULT (* QueryInterface)(struct IPropertyPage2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyPage2 *);
    ULONG (* Release)(struct IPropertyPage2 *);
    HRESULT (* SetPageSite)(struct IPropertyPage2 *, struct IPropertyPageSite *);
    HRESULT (* Activate)(struct IPropertyPage2 *, HWND, LPCRECT, BOOL);
    HRESULT (* Deactivate)(struct IPropertyPage2 *);
    HRESULT (* GetPageInfo)(struct IPropertyPage2 *, PROPPAGEINFO *);
    HRESULT (* SetObjects)(struct IPropertyPage2 *, ULONG, struct IUnknown * *);
    HRESULT (* Show)(struct IPropertyPage2 *, UINT);
    HRESULT (* Move)(struct IPropertyPage2 *, LPCRECT);
    HRESULT (* IsPageDirty)(struct IPropertyPage2 *);
    HRESULT (* Apply)(struct IPropertyPage2 *);
    HRESULT (* Help)(struct IPropertyPage2 *, LPCOLESTR);
    HRESULT (* TranslateAcceleratorA)(struct IPropertyPage2 *, MSG *);
    HRESULT (* EditProperty)(struct IPropertyPage2 *, DISPID);
};

struct IPropertyPage2 {
    struct IPropertyPage2Vtbl * lpVtbl;
};

typedef struct IProvideClassInfo IProvideClassInfo, *PIProvideClassInfo;

typedef struct IProvideClassInfoVtbl IProvideClassInfoVtbl, *PIProvideClassInfoVtbl;

struct IProvideClassInfo {
    struct IProvideClassInfoVtbl * lpVtbl;
};

struct IProvideClassInfoVtbl {
    HRESULT (* QueryInterface)(struct IProvideClassInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IProvideClassInfo *);
    ULONG (* Release)(struct IProvideClassInfo *);
    HRESULT (* GetClassInfoA)(struct IProvideClassInfo *, struct ITypeInfo * *);
};

typedef struct IProvideClassInfo2 IProvideClassInfo2, *PIProvideClassInfo2;

typedef struct IProvideClassInfo2Vtbl IProvideClassInfo2Vtbl, *PIProvideClassInfo2Vtbl;

struct IProvideClassInfo2Vtbl {
    HRESULT (* QueryInterface)(struct IProvideClassInfo2 *, IID *, void * *);
    ULONG (* AddRef)(struct IProvideClassInfo2 *);
    ULONG (* Release)(struct IProvideClassInfo2 *);
    HRESULT (* GetClassInfoA)(struct IProvideClassInfo2 *, struct ITypeInfo * *);
    HRESULT (* GetGUID)(struct IProvideClassInfo2 *, DWORD, GUID *);
};

struct IProvideClassInfo2 {
    struct IProvideClassInfo2Vtbl * lpVtbl;
};

typedef struct IProvideMultipleClassInfo IProvideMultipleClassInfo, *PIProvideMultipleClassInfo;

typedef struct IProvideMultipleClassInfoVtbl IProvideMultipleClassInfoVtbl, *PIProvideMultipleClassInfoVtbl;

struct IProvideMultipleClassInfoVtbl {
    HRESULT (* QueryInterface)(struct IProvideMultipleClassInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IProvideMultipleClassInfo *);
    ULONG (* Release)(struct IProvideMultipleClassInfo *);
    HRESULT (* GetClassInfoA)(struct IProvideMultipleClassInfo *, struct ITypeInfo * *);
    HRESULT (* GetGUID)(struct IProvideMultipleClassInfo *, DWORD, GUID *);
    HRESULT (* GetMultiTypeInfoCount)(struct IProvideMultipleClassInfo *, ULONG *);
    HRESULT (* GetInfoOfIndex)(struct IProvideMultipleClassInfo *, ULONG, DWORD, struct ITypeInfo * *, DWORD *, ULONG *, IID *, IID *);
};

struct IProvideMultipleClassInfo {
    struct IProvideMultipleClassInfoVtbl * lpVtbl;
};

typedef struct IQuickActivate IQuickActivate, *PIQuickActivate;

typedef struct IQuickActivateVtbl IQuickActivateVtbl, *PIQuickActivateVtbl;

typedef struct tagQACONTAINER tagQACONTAINER, *PtagQACONTAINER;

typedef struct tagQACONTAINER QACONTAINER;

typedef struct tagQACONTROL tagQACONTROL, *PtagQACONTROL;

typedef struct tagQACONTROL QACONTROL;

typedef SIZE * LPSIZEL;

typedef struct IOleClientSite IOleClientSite, *PIOleClientSite;

typedef DWORD OLE_COLOR;

typedef struct HPALETTE__ HPALETTE__, *PHPALETTE__;

typedef struct HPALETTE__ * HPALETTE;

typedef struct IBindHost IBindHost, *PIBindHost;

typedef struct IServiceProvider IServiceProvider, *PIServiceProvider;

typedef struct IOleClientSiteVtbl IOleClientSiteVtbl, *PIOleClientSiteVtbl;

typedef struct IOleContainer IOleContainer, *PIOleContainer;

typedef struct IBindHostVtbl IBindHostVtbl, *PIBindHostVtbl;

typedef struct IBindStatusCallback IBindStatusCallback, *PIBindStatusCallback;

typedef struct IServiceProviderVtbl IServiceProviderVtbl, *PIServiceProviderVtbl;

typedef struct IOleContainerVtbl IOleContainerVtbl, *PIOleContainerVtbl;

typedef struct IBindStatusCallbackVtbl IBindStatusCallbackVtbl, *PIBindStatusCallbackVtbl;

typedef struct IBinding IBinding, *PIBinding;

typedef struct _tagBINDINFO _tagBINDINFO, *P_tagBINDINFO;

typedef struct _tagBINDINFO BINDINFO;

typedef struct IBindingVtbl IBindingVtbl, *PIBindingVtbl;

typedef struct _SECURITY_ATTRIBUTES SECURITY_ATTRIBUTES;

struct IBindStatusCallback {
    struct IBindStatusCallbackVtbl * lpVtbl;
};

struct IBinding {
    struct IBindingVtbl * lpVtbl;
};

struct IBindStatusCallbackVtbl {
    HRESULT (* QueryInterface)(struct IBindStatusCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IBindStatusCallback *);
    ULONG (* Release)(struct IBindStatusCallback *);
    HRESULT (* OnStartBinding)(struct IBindStatusCallback *, DWORD, struct IBinding *);
    HRESULT (* GetPriority)(struct IBindStatusCallback *, LONG *);
    HRESULT (* OnLowResource)(struct IBindStatusCallback *, DWORD);
    HRESULT (* OnProgress)(struct IBindStatusCallback *, ULONG, ULONG, ULONG, LPCWSTR);
    HRESULT (* OnStopBinding)(struct IBindStatusCallback *, HRESULT, LPCWSTR);
    HRESULT (* GetBindInfo)(struct IBindStatusCallback *, DWORD *, BINDINFO *);
    HRESULT (* OnDataAvailable)(struct IBindStatusCallback *, DWORD, DWORD, FORMATETC *, STGMEDIUM *);
    HRESULT (* OnObjectAvailable)(struct IBindStatusCallback *, IID *, struct IUnknown *);
};

struct tagQACONTAINER {
    ULONG cbSize;
    struct IOleClientSite * pClientSite;
    struct IAdviseSinkEx * pAdviseSink;
    struct IPropertyNotifySink * pPropertyNotifySink;
    struct IUnknown * pUnkEventSink;
    DWORD dwAmbientFlags;
    OLE_COLOR colorFore;
    OLE_COLOR colorBack;
    struct IFont * pFont;
    struct IOleUndoManager * pUndoMgr;
    DWORD dwAppearance;
    LONG lcid;
    HPALETTE hpal;
    struct IBindHost * pBindHost;
    struct IOleControlSite * pOleControlSite;
    struct IServiceProvider * pServiceProvider;
};

struct IOleClientSite {
    struct IOleClientSiteVtbl * lpVtbl;
};

struct IServiceProvider {
    struct IServiceProviderVtbl * lpVtbl;
};

struct tagQACONTROL {
    ULONG cbSize;
    DWORD dwMiscStatus;
    DWORD dwViewStatus;
    DWORD dwEventCookie;
    DWORD dwPropNotifyCookie;
    DWORD dwPointerActivationPolicy;
};

struct _tagBINDINFO {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    STGMEDIUM stgmedData;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    SECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    struct IUnknown * pUnk;
    DWORD dwReserved;
};

struct HPALETTE__ {
    int unused;
};

struct IBindHostVtbl {
    HRESULT (* QueryInterface)(struct IBindHost *, IID *, void * *);
    ULONG (* AddRef)(struct IBindHost *);
    ULONG (* Release)(struct IBindHost *);
    HRESULT (* CreateMoniker)(struct IBindHost *, LPOLESTR, struct IBindCtx *, struct IMoniker * *, DWORD);
    HRESULT (* MonikerBindToStorage)(struct IBindHost *, struct IMoniker *, struct IBindCtx *, struct IBindStatusCallback *, IID *, void * *);
    HRESULT (* MonikerBindToObject)(struct IBindHost *, struct IMoniker *, struct IBindCtx *, struct IBindStatusCallback *, IID *, void * *);
};

struct IOleContainerVtbl {
    HRESULT (* QueryInterface)(struct IOleContainer *, IID *, void * *);
    ULONG (* AddRef)(struct IOleContainer *);
    ULONG (* Release)(struct IOleContainer *);
    HRESULT (* ParseDisplayName)(struct IOleContainer *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker * *);
    HRESULT (* EnumObjects)(struct IOleContainer *, DWORD, struct IEnumUnknown * *);
    HRESULT (* LockContainer)(struct IOleContainer *, BOOL);
};

struct IOleClientSiteVtbl {
    HRESULT (* QueryInterface)(struct IOleClientSite *, IID *, void * *);
    ULONG (* AddRef)(struct IOleClientSite *);
    ULONG (* Release)(struct IOleClientSite *);
    HRESULT (* SaveObject)(struct IOleClientSite *);
    HRESULT (* GetMoniker)(struct IOleClientSite *, DWORD, DWORD, struct IMoniker * *);
    HRESULT (* GetContainer)(struct IOleClientSite *, struct IOleContainer * *);
    HRESULT (* ShowObject)(struct IOleClientSite *);
    HRESULT (* OnShowWindow)(struct IOleClientSite *, BOOL);
    HRESULT (* RequestNewObjectLayout)(struct IOleClientSite *);
};

struct IQuickActivate {
    struct IQuickActivateVtbl * lpVtbl;
};

struct IOleContainer {
    struct IOleContainerVtbl * lpVtbl;
};

struct IBindHost {
    struct IBindHostVtbl * lpVtbl;
};

struct IBindingVtbl {
    HRESULT (* QueryInterface)(struct IBinding *, IID *, void * *);
    ULONG (* AddRef)(struct IBinding *);
    ULONG (* Release)(struct IBinding *);
    HRESULT (* Abort)(struct IBinding *);
    HRESULT (* Suspend)(struct IBinding *);
    HRESULT (* Resume)(struct IBinding *);
    HRESULT (* SetPriority)(struct IBinding *, LONG);
    HRESULT (* GetPriority)(struct IBinding *, LONG *);
    HRESULT (* GetBindResult)(struct IBinding *, CLSID *, DWORD *, LPOLESTR *, DWORD *);
};

struct IQuickActivateVtbl {
    HRESULT (* QueryInterface)(struct IQuickActivate *, IID *, void * *);
    ULONG (* AddRef)(struct IQuickActivate *);
    ULONG (* Release)(struct IQuickActivate *);
    HRESULT (* QuickActivate)(struct IQuickActivate *, QACONTAINER *, QACONTROL *);
    HRESULT (* SetContentExtent)(struct IQuickActivate *, LPSIZEL);
    HRESULT (* GetContentExtent)(struct IQuickActivate *, LPSIZEL);
};

struct IServiceProviderVtbl {
    HRESULT (* QueryInterface)(struct IServiceProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IServiceProvider *);
    ULONG (* Release)(struct IServiceProvider *);
    HRESULT (* QueryService)(struct IServiceProvider *, GUID *, IID *, void * *);
};

typedef struct ISimpleFrameSite ISimpleFrameSite, *PISimpleFrameSite;

typedef struct ISimpleFrameSiteVtbl ISimpleFrameSiteVtbl, *PISimpleFrameSiteVtbl;

struct ISimpleFrameSiteVtbl {
    HRESULT (* QueryInterface)(struct ISimpleFrameSite *, IID *, void * *);
    ULONG (* AddRef)(struct ISimpleFrameSite *);
    ULONG (* Release)(struct ISimpleFrameSite *);
    HRESULT (* PreMessageFilter)(struct ISimpleFrameSite *, HWND, UINT, WPARAM, LPARAM, LRESULT *, DWORD *);
    HRESULT (* PostMessageFilter)(struct ISimpleFrameSite *, HWND, UINT, WPARAM, LPARAM, LRESULT *, DWORD);
};

struct ISimpleFrameSite {
    struct ISimpleFrameSiteVtbl * lpVtbl;
};

typedef struct ISpecifyPropertyPages ISpecifyPropertyPages, *PISpecifyPropertyPages;

typedef struct ISpecifyPropertyPagesVtbl ISpecifyPropertyPagesVtbl, *PISpecifyPropertyPagesVtbl;

struct ISpecifyPropertyPages {
    struct ISpecifyPropertyPagesVtbl * lpVtbl;
};

struct ISpecifyPropertyPagesVtbl {
    HRESULT (* QueryInterface)(struct ISpecifyPropertyPages *, IID *, void * *);
    ULONG (* AddRef)(struct ISpecifyPropertyPages *);
    ULONG (* Release)(struct ISpecifyPropertyPages *);
    HRESULT (* GetPages)(struct ISpecifyPropertyPages *, CAUUID *);
};

typedef struct IViewObjectEx IViewObjectEx, *PIViewObjectEx;

typedef struct IViewObjectExVtbl IViewObjectExVtbl, *PIViewObjectExVtbl;

typedef struct _RECTL _RECTL, *P_RECTL;

typedef struct _RECTL RECTL;

typedef RECTL * LPCRECTL;

typedef struct _RECTL * LPRECTL;

struct IViewObjectEx {
    struct IViewObjectExVtbl * lpVtbl;
};

struct IViewObjectExVtbl {
    HRESULT (* QueryInterface)(struct IViewObjectEx *, IID *, void * *);
    ULONG (* AddRef)(struct IViewObjectEx *);
    ULONG (* Release)(struct IViewObjectEx *);
    HRESULT (* Draw)(struct IViewObjectEx *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (* )(ULONG_PTR), ULONG_PTR);
    HRESULT (* GetColorSet)(struct IViewObjectEx *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE * *);
    HRESULT (* Freeze)(struct IViewObjectEx *, DWORD, LONG, void *, DWORD *);
    HRESULT (* Unfreeze)(struct IViewObjectEx *, DWORD);
    HRESULT (* SetAdvise)(struct IViewObjectEx *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (* GetAdvise)(struct IViewObjectEx *, DWORD *, DWORD *, struct IAdviseSink * *);
    HRESULT (* GetExtent)(struct IViewObjectEx *, DWORD, LONG, DVTARGETDEVICE *, LPSIZEL);
    HRESULT (* GetRect)(struct IViewObjectEx *, DWORD, LPRECTL);
    HRESULT (* GetViewStatus)(struct IViewObjectEx *, DWORD *);
    HRESULT (* QueryHitPoint)(struct IViewObjectEx *, DWORD, LPCRECT, POINT, LONG, DWORD *);
    HRESULT (* QueryHitRect)(struct IViewObjectEx *, DWORD, LPCRECT, LPCRECT, LONG, DWORD *);
    HRESULT (* GetNaturalExtent)(struct IViewObjectEx *, DWORD, LONG, DVTARGETDEVICE *, HDC, DVEXTENTINFO *, LPSIZEL);
};

struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

typedef struct IAdviseSinkEx * LPADVISESINKEX;

typedef struct tagCADWORD * LPCADWORD;

typedef struct tagCALPOLESTR * LPCALPOLESTR;

typedef struct tagCAUUID * LPCAUUID;

typedef struct IClassFactory2 * LPCLASSFACTORY2;

typedef struct IConnectionPointContainer * LPCONNECTIONPOINTCONTAINER;

typedef struct tagCONTROLINFO * LPCONTROLINFO;

typedef struct IEnumConnectionPoints * LPENUMCONNECTIONPOINTS;

typedef struct IEnumConnections * LPENUMCONNECTIONS;

typedef struct IEnumOleUndoUnits * LPENUMOLEUNDOUNITS;

typedef struct IFont * LPFONT;

typedef struct IFontDisp * LPFONTDISP;

typedef struct IFontEventsDisp * LPFONTEVENTS;

typedef struct tagLICINFO * LPLICINFO;

typedef struct IObjectWithSite * LPOBJECTWITHSITE;

typedef struct IOleControl * LPOLECONTROL;

typedef struct IOleControlSite * LPOLECONTROLSITE;

typedef struct IOleInPlaceObjectWindowless * LPOLEINPLACEOBJECTWINDOWLESS;

typedef struct IOleInPlaceSiteEx * LPOLEINPLACESITEEX;

typedef struct IOleInPlaceSiteWindowless * LPOLEINPLACESITEWINDOWLESS;

typedef struct IOleParentUndoUnit * LPOLEPARENTUNDOUNIT;

typedef struct IOleUndoManager * LPOLEUNDOMANAGER;

typedef struct IOleUndoUnit * LPOLEUNDOUNIT;

typedef struct IPerPropertyBrowsing * LPPERPROPERTYBROWSING;

typedef struct IPersistMemory * LPPERSISTMEMORY;

typedef struct IPersistPropertyBag * LPPERSISTPROPERTYBAG;

typedef struct IPersistPropertyBag2 * LPPERSISTPROPERTYBAG2;

typedef struct IPersistStreamInit * LPPERSISTSTREAMINIT;

typedef struct IPicture * LPPICTURE;

typedef struct IPicture2 * LPPICTURE2;

typedef struct IPictureDisp * LPPICTUREDISP;

typedef struct IPointerInactive * LPPOINTERINACTIVE;

typedef struct tagPOINTF * LPPOINTF;

typedef struct IPropertyBag2 * LPPROPERTYBAG2;

typedef struct IPropertyNotifySink * LPPROPERTYNOTIFYSINK;

typedef struct IPropertyPage * LPPROPERTYPAGE;

typedef struct IPropertyPage2 * LPPROPERTYPAGE2;

typedef struct IPropertyPageSite * LPPROPERTYPAGESITE;

typedef struct tagPROPPAGEINFO * LPPROPPAGEINFO;

typedef struct IProvideClassInfo * LPPROVIDECLASSINFO;

typedef struct IProvideClassInfo2 * LPPROVIDECLASSINFO2;

typedef struct IProvideMultipleClassInfo * LPPROVIDEMULTIPLECLASSINFO;

typedef struct IQuickActivate * LPQUICKACTIVATE;

typedef struct ISimpleFrameSite * LPSIMPLEFRAMESITE;

typedef struct ISpecifyPropertyPages * LPSPECIFYPROPERTYPAGES;

typedef TEXTMETRICOLE * LPTEXTMETRICOLE;

typedef struct IViewObjectEx * LPVIEWOBJECTEX;

typedef enum tagOLEDCFLAGS {
    OLEDC_NODRAW=1,
    OLEDC_OFFSCREEN=4,
    OLEDC_PAINTBKGND=2
} tagOLEDCFLAGS;

typedef enum tagOLEDCFLAGS OLEDCFLAGS;

typedef struct tagCONNECTDATA * PCONNECTDATA;

typedef struct IConnectionPoint * PCONNECTIONPOINT;

typedef struct IConnectionPointContainer * PCONNECTIONPOINTCONTAINER;

typedef struct IEnumConnectionPoints * PENUMCONNECTIONPOINTS;

typedef struct IEnumConnections * PENUMCONNECTIONS;

typedef enum tagPictureAttributes {
    PICTURE_SCALABLE=1,
    PICTURE_TRANSPARENT=2
} tagPictureAttributes;

typedef enum tagPictureAttributes PICTUREATTRIBUTES;

typedef enum tagPOINTERINACTIVE {
    POINTERINACTIVE_ACTIVATEONDRAG=4,
    POINTERINACTIVE_ACTIVATEONENTRY=1,
    POINTERINACTIVE_DEACTIVATEONLEAVE=2
} tagPOINTERINACTIVE;

typedef enum tagPOINTERINACTIVE POINTERINACTIVE;

typedef enum tagPROPBAG2_TYPE {
    PROPBAG2_TYPE_DATA=1,
    PROPBAG2_TYPE_MONIKER=6,
    PROPBAG2_TYPE_OBJECT=3,
    PROPBAG2_TYPE_STORAGE=5,
    PROPBAG2_TYPE_STREAM=4,
    PROPBAG2_TYPE_UNDEFINED=0,
    PROPBAG2_TYPE_URL=2
} tagPROPBAG2_TYPE;

typedef enum tagPROPBAG2_TYPE PROPBAG2_TYPE;

typedef enum tagPROPPAGESTATUS {
    PROPPAGESTATUS_CLEAN=4,
    PROPPAGESTATUS_DIRTY=1,
    PROPPAGESTATUS_VALIDATE=2
} tagPROPPAGESTATUS;

typedef enum tagPROPPAGESTATUS PROPPAGESTATUS;

typedef enum tagQACONTAINERFLAGS {
    QACONTAINER_AUTOCLIP=32,
    QACONTAINER_DISPLAYASDEFAULT=8,
    QACONTAINER_MESSAGEREFLECT=64,
    QACONTAINER_SHOWGRABHANDLES=2,
    QACONTAINER_SHOWHATCHING=1,
    QACONTAINER_SUPPORTSMNEMONICS=128,
    QACONTAINER_UIDEAD=16,
    QACONTAINER_USERMODE=4
} tagQACONTAINERFLAGS;

typedef enum tagQACONTAINERFLAGS QACONTAINERFLAGS;

typedef enum tagUASFLAGS {
    UAS_BLOCKED=1,
    UAS_MASK=3,
    UAS_NOPARENTENABLE=2,
    UAS_NORMAL=0
} tagUASFLAGS;

typedef enum tagVIEWSTATUS {
    VIEWSTATUS_3DSURFACE=32,
    VIEWSTATUS_DVASPECTOPAQUE=4,
    VIEWSTATUS_DVASPECTTRANSPARENT=8,
    VIEWSTATUS_OPAQUE=1,
    VIEWSTATUS_SOLIDBKGND=2,
    VIEWSTATUS_SURFACE=16
} tagVIEWSTATUS;

typedef enum tagXFORMCOORDS {
    XFORMCOORDS_CONTAINERTOHIMETRIC=8,
    XFORMCOORDS_EVENTCOMPAT=16,
    XFORMCOORDS_HIMETRICTOCONTAINER=4,
    XFORMCOORDS_POSITION=1,
    XFORMCOORDS_SIZE=2
} tagXFORMCOORDS;

typedef enum tagUASFLAGS UASFLAGS;

typedef enum tagVIEWSTATUS VIEWSTATUS;

typedef enum tagXFORMCOORDS XFORMCOORDS;

#define DATA_E_FORMATETC 2147745892

#define E_DRAW 2147746112

#define EMBDHLP_CREATENOW 0

#define EMBDHLP_DELAYCREATE 65536

#define EMBDHLP_INPROC_HANDLER 0

#define EMBDHLP_INPROC_SERVER 1

#define OLECREATE_LEAVERUNNING 1

#define OLEIVERB_DISCARDUNDOSTATE -6

#define OLEIVERB_HIDE -3

#define OLEIVERB_INPLACEACTIVATE -5

#define OLEIVERB_OPEN -2

#define OLEIVERB_PRIMARY 0

#define OLEIVERB_SHOW -1

#define OLEIVERB_UIACTIVATE -4

typedef struct _OLESTREAM _OLESTREAM, *P_OLESTREAM;

typedef struct _OLESTREAMVTBL _OLESTREAMVTBL, *P_OLESTREAMVTBL;

typedef struct _OLESTREAM * LPOLESTREAM;

typedef struct _OLESTREAMVTBL OLESTREAMVTBL;

typedef OLESTREAMVTBL * LPOLESTREAMVTBL;

struct _OLESTREAM {
    LPOLESTREAMVTBL lpstbl;
};

struct _OLESTREAMVTBL {
    DWORD (* Get)(LPOLESTREAM, void *, DWORD);
    DWORD (* Put)(LPOLESTREAM, void *, DWORD);
};

typedef struct _OLESTREAM OLESTREAM;

#define DISPID_ACC_CHILD -5002

#define DISPID_ACC_CHILDCOUNT -5001

#define DISPID_ACC_DEFAULTACTION -5013

#define DISPID_ACC_DESCRIPTION -5005

#define DISPID_ACC_DODEFAULTACTION -5018

#define DISPID_ACC_FOCUS -5011

#define DISPID_ACC_HELP -5008

#define DISPID_ACC_HELPTOPIC -5009

#define DISPID_ACC_HITTEST -5017

#define DISPID_ACC_KEYBOARDSHORTCUT -5010

#define DISPID_ACC_LOCATION -5015

#define DISPID_ACC_NAME -5003

#define DISPID_ACC_NAVIGATE -5016

#define DISPID_ACC_PARENT -5000

#define DISPID_ACC_ROLE -5006

#define DISPID_ACC_SELECT -5014

#define DISPID_ACC_SELECTION -5012

#define DISPID_ACC_STATE -5007

#define DISPID_ACC_VALUE -5004

#define MSAA_MENU_SIG 2853040141

#define NAVDIR_DOWN 2

#define NAVDIR_FIRSTCHILD 7

#define NAVDIR_LASTCHILD 8

#define NAVDIR_LEFT 3

#define NAVDIR_MAX 9

#define NAVDIR_MIN 0

#define NAVDIR_NEXT 5

#define NAVDIR_PREVIOUS 6

#define NAVDIR_RIGHT 4

#define NAVDIR_UP 1

#define ROLE_SYSTEM_ALERT 8

#define ROLE_SYSTEM_ANIMATION 54

#define ROLE_SYSTEM_APPLICATION 14

#define ROLE_SYSTEM_BORDER 19

#define ROLE_SYSTEM_BUTTONDROPDOWN 56

#define ROLE_SYSTEM_BUTTONDROPDOWNGRID 58

#define ROLE_SYSTEM_BUTTONMENU 57

#define ROLE_SYSTEM_CARET 7

#define ROLE_SYSTEM_CELL 29

#define ROLE_SYSTEM_CHARACTER 32

#define ROLE_SYSTEM_CHART 17

#define ROLE_SYSTEM_CHECKBUTTON 44

#define ROLE_SYSTEM_CLIENT 10

#define ROLE_SYSTEM_CLOCK 61

#define ROLE_SYSTEM_COLUMN 27

#define ROLE_SYSTEM_COLUMNHEADER 25

#define ROLE_SYSTEM_COMBOBOX 46

#define ROLE_SYSTEM_CURSOR 6

#define ROLE_SYSTEM_DIAGRAM 53

#define ROLE_SYSTEM_DIAL 49

#define ROLE_SYSTEM_DIALOG 18

#define ROLE_SYSTEM_DOCUMENT 15

#define ROLE_SYSTEM_DROPLIST 47

#define ROLE_SYSTEM_EQUATION 55

#define ROLE_SYSTEM_GRAPHIC 40

#define ROLE_SYSTEM_GRIP 4

#define ROLE_SYSTEM_GROUPING 20

#define ROLE_SYSTEM_HELPBALLOON 31

#define ROLE_SYSTEM_HOTKEYFIELD 50

#define ROLE_SYSTEM_INDICATOR 39

#define ROLE_SYSTEM_IPADDRESS 63

#define ROLE_SYSTEM_LINK 30

#define ROLE_SYSTEM_LIST 33

#define ROLE_SYSTEM_LISTITEM 34

#define ROLE_SYSTEM_MENUBAR 2

#define ROLE_SYSTEM_MENUITEM 12

#define ROLE_SYSTEM_MENUPOPUP 11

#define ROLE_SYSTEM_OUTLINE 35

#define ROLE_SYSTEM_OUTLINEBUTTON 64

#define ROLE_SYSTEM_OUTLINEITEM 36

#define ROLE_SYSTEM_PAGETAB 37

#define ROLE_SYSTEM_PAGETABLIST 60

#define ROLE_SYSTEM_PANE 16

#define ROLE_SYSTEM_PROGRESSBAR 48

#define ROLE_SYSTEM_PROPERTYPAGE 38

#define ROLE_SYSTEM_PUSHBUTTON 43

#define ROLE_SYSTEM_RADIOBUTTON 45

#define ROLE_SYSTEM_ROW 28

#define ROLE_SYSTEM_ROWHEADER 26

#define ROLE_SYSTEM_SCROLLBAR 3

#define ROLE_SYSTEM_SEPARATOR 21

#define ROLE_SYSTEM_SLIDER 51

#define ROLE_SYSTEM_SOUND 5

#define ROLE_SYSTEM_SPINBUTTON 52

#define ROLE_SYSTEM_SPLITBUTTON 62

#define ROLE_SYSTEM_STATICTEXT 41

#define ROLE_SYSTEM_STATUSBAR 23

#define ROLE_SYSTEM_TABLE 24

#define ROLE_SYSTEM_TEXT 42

#define ROLE_SYSTEM_TITLEBAR 1

#define ROLE_SYSTEM_TOOLBAR 22

#define ROLE_SYSTEM_TOOLTIP 13

#define ROLE_SYSTEM_WHITESPACE 59

#define ROLE_SYSTEM_WINDOW 9

#define SELFLAG_ADDSELECTION 8

#define SELFLAG_EXTENDSELECTION 4

#define SELFLAG_NONE 0

#define SELFLAG_REMOVESELECTION 16

#define SELFLAG_TAKEFOCUS 1

#define SELFLAG_TAKESELECTION 2

#define SELFLAG_VALID 31

#define STATE_SYSTEM_HASPOPUP 1073741824

typedef enum AnnoScope {
    ANNO_CONTAINER=1,
    ANNO_THIS=0
} AnnoScope;

typedef struct CAccPropServices CAccPropServices, *PCAccPropServices;

struct CAccPropServices {
};

typedef struct IAccessible IAccessible, *PIAccessible;

typedef struct IAccessibleVtbl IAccessibleVtbl, *PIAccessibleVtbl;

struct IAccessible {
    struct IAccessibleVtbl * lpVtbl;
};

struct IAccessibleVtbl {
    HRESULT (* QueryInterface)(struct IAccessible *, IID *, void * *);
    ULONG (* AddRef)(struct IAccessible *);
    ULONG (* Release)(struct IAccessible *);
    HRESULT (* GetTypeInfoCount)(struct IAccessible *, UINT *);
    HRESULT (* GetTypeInfo)(struct IAccessible *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IAccessible *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IAccessible *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_accParent)(struct IAccessible *, struct IDispatch * *);
    HRESULT (* get_accChildCount)(struct IAccessible *, long *);
    HRESULT (* get_accChild)(struct IAccessible *, VARIANT, struct IDispatch * *);
    HRESULT (* get_accName)(struct IAccessible *, VARIANT, BSTR *);
    HRESULT (* get_accValue)(struct IAccessible *, VARIANT, BSTR *);
    HRESULT (* get_accDescription)(struct IAccessible *, VARIANT, BSTR *);
    HRESULT (* get_accRole)(struct IAccessible *, VARIANT, VARIANT *);
    HRESULT (* get_accState)(struct IAccessible *, VARIANT, VARIANT *);
    HRESULT (* get_accHelp)(struct IAccessible *, VARIANT, BSTR *);
    HRESULT (* get_accHelpTopic)(struct IAccessible *, BSTR *, VARIANT, long *);
    HRESULT (* get_accKeyboardShortcut)(struct IAccessible *, VARIANT, BSTR *);
    HRESULT (* get_accFocus)(struct IAccessible *, VARIANT *);
    HRESULT (* get_accSelection)(struct IAccessible *, VARIANT *);
    HRESULT (* get_accDefaultAction)(struct IAccessible *, VARIANT, BSTR *);
    HRESULT (* accSelect)(struct IAccessible *, long, VARIANT);
    HRESULT (* accLocation)(struct IAccessible *, long *, long *, long *, long *, VARIANT);
    HRESULT (* accNavigate)(struct IAccessible *, long, VARIANT, VARIANT *);
    HRESULT (* accHitTest)(struct IAccessible *, long, long, VARIANT *);
    HRESULT (* accDoDefaultAction)(struct IAccessible *, VARIANT);
    HRESULT (* put_accName)(struct IAccessible *, VARIANT, BSTR);
    HRESULT (* put_accValue)(struct IAccessible *, VARIANT, BSTR);
};

typedef struct IAccessibleHandler IAccessibleHandler, *PIAccessibleHandler;

typedef struct IAccessibleHandlerVtbl IAccessibleHandlerVtbl, *PIAccessibleHandlerVtbl;

typedef struct IAccessible * LPACCESSIBLE;

struct IAccessibleHandlerVtbl {
    HRESULT (* QueryInterface)(struct IAccessibleHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IAccessibleHandler *);
    ULONG (* Release)(struct IAccessibleHandler *);
    HRESULT (* AccessibleObjectFromID)(struct IAccessibleHandler *, long, long, LPACCESSIBLE *);
};

struct IAccessibleHandler {
    struct IAccessibleHandlerVtbl * lpVtbl;
};

typedef struct IAccIdentity IAccIdentity, *PIAccIdentity;

typedef struct IAccIdentityVtbl IAccIdentityVtbl, *PIAccIdentityVtbl;

struct IAccIdentity {
    struct IAccIdentityVtbl * lpVtbl;
};

struct IAccIdentityVtbl {
    HRESULT (* QueryInterface)(struct IAccIdentity *, IID *, void * *);
    ULONG (* AddRef)(struct IAccIdentity *);
    ULONG (* Release)(struct IAccIdentity *);
    HRESULT (* GetIdentityString)(struct IAccIdentity *, DWORD, BYTE * *, DWORD *);
};

typedef struct IAccPropServer IAccPropServer, *PIAccPropServer;

typedef struct IAccPropServerVtbl IAccPropServerVtbl, *PIAccPropServerVtbl;

typedef GUID MSAAPROPID;

struct IAccPropServer {
    struct IAccPropServerVtbl * lpVtbl;
};

struct IAccPropServerVtbl {
    HRESULT (* QueryInterface)(struct IAccPropServer *, IID *, void * *);
    ULONG (* AddRef)(struct IAccPropServer *);
    ULONG (* Release)(struct IAccPropServer *);
    HRESULT (* GetPropValue)(struct IAccPropServer *, BYTE *, DWORD, MSAAPROPID, VARIANT *, BOOL *);
};

typedef struct IAccPropServices IAccPropServices, *PIAccPropServices;

typedef struct IAccPropServicesVtbl IAccPropServicesVtbl, *PIAccPropServicesVtbl;

struct IAccPropServices {
    struct IAccPropServicesVtbl * lpVtbl;
};

struct IAccPropServicesVtbl {
    HRESULT (* QueryInterface)(struct IAccPropServices *, IID *, void * *);
    ULONG (* AddRef)(struct IAccPropServices *);
    ULONG (* Release)(struct IAccPropServices *);
    HRESULT (* SetPropValue)(struct IAccPropServices *, BYTE *, DWORD, MSAAPROPID, VARIANT);
    HRESULT (* SetPropServer)(struct IAccPropServices *, BYTE *, DWORD, MSAAPROPID *, int, struct IAccPropServer *, enum AnnoScope);
    HRESULT (* ClearProps)(struct IAccPropServices *, BYTE *, DWORD, MSAAPROPID *, int);
    HRESULT (* SetHwndProp)(struct IAccPropServices *, HWND, DWORD, DWORD, MSAAPROPID, VARIANT);
    HRESULT (* SetHwndPropStr)(struct IAccPropServices *, HWND, DWORD, DWORD, MSAAPROPID, LPCWSTR);
    HRESULT (* SetHwndPropServer)(struct IAccPropServices *, HWND, DWORD, DWORD, MSAAPROPID *, int, struct IAccPropServer *, enum AnnoScope);
    HRESULT (* ClearHwndProps)(struct IAccPropServices *, HWND, DWORD, DWORD, MSAAPROPID *, int);
    HRESULT (* ComposeHwndIdentityString)(struct IAccPropServices *, HWND, DWORD, DWORD, BYTE * *, DWORD *);
    HRESULT (* DecomposeHwndIdentityString)(struct IAccPropServices *, BYTE *, DWORD, HWND *, DWORD *, DWORD *);
    HRESULT (* SetHmenuProp)(struct IAccPropServices *, HMENU, DWORD, MSAAPROPID, VARIANT);
    HRESULT (* SetHmenuPropStr)(struct IAccPropServices *, HMENU, DWORD, MSAAPROPID, LPCWSTR);
    HRESULT (* SetHmenuPropServer)(struct IAccPropServices *, HMENU, DWORD, MSAAPROPID *, int, struct IAccPropServer *, enum AnnoScope);
    HRESULT (* ClearHmenuProps)(struct IAccPropServices *, HMENU, DWORD, MSAAPROPID *, int);
    HRESULT (* ComposeHmenuIdentityString)(struct IAccPropServices *, HMENU, DWORD, BYTE * *, DWORD *);
    HRESULT (* DecomposeHmenuIdentityString)(struct IAccPropServices *, BYTE *, DWORD, HMENU *, DWORD *);
};

typedef struct IAccessibleHandler * LPACCESSIBLEHANDLER;

typedef HRESULT (* LPFNACCESSIBLECHILDREN)(struct IAccessible *, LONG, LONG, VARIANT *, LONG *);

typedef HRESULT (* LPFNACCESSIBLEOBJECTFROMPOINT)(POINT, struct IAccessible * *, VARIANT *);

typedef HRESULT (* LPFNACCESSIBLEOBJECTFROMWINDOW)(HWND, DWORD, IID *, void * *);

typedef HRESULT (* LPFNCREATESTDACCESSIBLEOBJECT)(HWND, LONG, IID *, void * *);

typedef LRESULT (* LPFNLRESULTFROMOBJECT)(IID *, WPARAM, LPUNKNOWN);

typedef HRESULT (* LPFNOBJECTFROMLRESULT)(LRESULT, IID *, WPARAM, void * *);

typedef struct tagMSAAMENUINFO tagMSAAMENUINFO, *PtagMSAAMENUINFO;

typedef struct tagMSAAMENUINFO * LPMSAAMENUINFO;

struct tagMSAAMENUINFO {
    DWORD dwMSAASignature;
    DWORD cchWText;
    LPWSTR pszWText;
};

typedef struct tagMSAAMENUINFO MSAAMENUINFO;

#define ACTIVEOBJECT_STRONG 0

#define ACTIVEOBJECT_WEAK 1

#define DISPATCH_METHOD 1

#define DISPATCH_PROPERTYGET 2

#define DISPATCH_PROPERTYPUT 4

#define DISPATCH_PROPERTYPUTREF 8

#define ID_DEFAULTINST -2

#define LOAD_TLB_AS_32BIT 32

#define LOAD_TLB_AS_64BIT 64

#define LOCALE_USE_NLS 268435456

#define MASK_TO_RESET_TLB_BITS -97

#define MEMBERID_NIL -1

#define NUMPRS_CURRENCY 1024

#define NUMPRS_DECIMAL 256

#define NUMPRS_EXPONENT 2048

#define NUMPRS_HEX_OCT 64

#define NUMPRS_INEXACT 131072

#define NUMPRS_LEADING_MINUS 16

#define NUMPRS_LEADING_PLUS 4

#define NUMPRS_LEADING_WHITE 1

#define NUMPRS_NEG 65536

#define NUMPRS_PARENS 128

#define NUMPRS_STD 8191

#define NUMPRS_THOUSANDS 512

#define NUMPRS_TRAILING_MINUS 32

#define NUMPRS_TRAILING_PLUS 8

#define NUMPRS_TRAILING_WHITE 2

#define NUMPRS_USE_ALL 4096

#define STDOLE2_LCID 0

#define STDOLE2_MAJORVERNUM 2

#define STDOLE2_MINORVERNUM 0

#define STDOLE_LCID 0

#define STDOLE_MAJORVERNUM 1

#define STDOLE_MINORVERNUM 0

#define VAR_CALENDAR_GREGORIAN 256

#define VAR_CALENDAR_HIJRI 8

#define VAR_CALENDAR_THAI 128

#define VAR_DATEVALUEONLY 2

#define VAR_FORMAT_NOSUBSTITUTE 32

#define VAR_FOURDIGITYEARS 64

#define VAR_LOCALBOOL 16

#define VAR_TIMEVALUEONLY 1

#define VAR_VALIDDATE 4

#define VARCMP_EQ 1

#define VARCMP_GT 2

#define VARCMP_LT 0

#define VARCMP_NULL 3

#define VARIANT_ALPHABOOL 2

#define VARIANT_CALENDAR_GREGORIAN 64

#define VARIANT_CALENDAR_HIJRI 8

#define VARIANT_CALENDAR_THAI 32

#define VARIANT_LOCALBOOL 16

#define VARIANT_NOUSEROVERRIDE 4

#define VARIANT_NOVALUEPROP 1

#define VARIANT_USE_NLS 128

#define VTDATEGRE_MAX 2958465

#define VTDATEGRE_MIN -657434

typedef struct tagINTERFACEDATA tagINTERFACEDATA, *PtagINTERFACEDATA;

typedef struct tagINTERFACEDATA INTERFACEDATA;

typedef struct tagMETHODDATA tagMETHODDATA, *PtagMETHODDATA;

typedef struct tagMETHODDATA METHODDATA;

typedef struct tagPARAMDATA tagPARAMDATA, *PtagPARAMDATA;

typedef struct tagPARAMDATA PARAMDATA;

struct tagINTERFACEDATA {
    METHODDATA * pmethdata;
    UINT cMembers;
};

struct tagMETHODDATA {
    OLECHAR * szName;
    PARAMDATA * ppdata;
    DISPID dispid;
    UINT iMeth;
    CALLCONV cc;
    UINT cArgs;
    WORD wFlags;
    VARTYPE vtReturn;
};

struct tagPARAMDATA {
    OLECHAR * szName;
    VARTYPE vt;
};

typedef struct tagINTERFACEDATA * LPINTERFACEDATA;

typedef struct tagMETHODDATA * LPMETHODDATA;

typedef struct tagPARAMDATA * LPPARAMDATA;

typedef struct NUMPARSE NUMPARSE, *PNUMPARSE;

struct NUMPARSE {
    INT cDig;
    ULONG dwInFlags;
    ULONG dwOutFlags;
    INT cchUsed;
    INT nBaseShift;
    INT nPwr10;
};

typedef enum tagREGKIND {
    REGKIND_DEFAULT=0,
    REGKIND_NONE=2,
    REGKIND_REGISTER=1
} tagREGKIND;

typedef enum tagREGKIND REGKIND;

typedef struct UDATE UDATE, *PUDATE;

struct UDATE {
    SYSTEMTIME st;
    USHORT wDayOfYear;
};

#define BMK_DURABILITY_INTRANSACTION 1

#define BMK_DURABILITY_REORGANIZATION 3

#define BMK_DURABILITY_ROWSET 0

#define BMK_DURABILITY_XTRANSACTION 2

#define CRESTRICTIONS_DBSCHEMA_ASSERTIONS 3

#define CRESTRICTIONS_DBSCHEMA_CATALOGS 1

#define CRESTRICTIONS_DBSCHEMA_CHARACTER_SETS 3

#define CRESTRICTIONS_DBSCHEMA_CHECK_CONSTRAINTS 3

#define CRESTRICTIONS_DBSCHEMA_CHECK_CONSTRAINTS_BY_TABLE 6

#define CRESTRICTIONS_DBSCHEMA_COLLATIONS 3

#define CRESTRICTIONS_DBSCHEMA_COLUMN_DOMAIN_USAGE 4

#define CRESTRICTIONS_DBSCHEMA_COLUMN_PRIVILEGES 6

#define CRESTRICTIONS_DBSCHEMA_COLUMNS 4

#define CRESTRICTIONS_DBSCHEMA_CONSTRAINT_COLUMN_USAGE 4

#define CRESTRICTIONS_DBSCHEMA_CONSTRAINT_TABLE_USAGE 3

#define CRESTRICTIONS_DBSCHEMA_FOREIGN_KEYS 6

#define CRESTRICTIONS_DBSCHEMA_INDEXES 5

#define CRESTRICTIONS_DBSCHEMA_KEY_COLUMN_USAGE 7

#define CRESTRICTIONS_DBSCHEMA_OBJECT_ACTIONS 1

#define CRESTRICTIONS_DBSCHEMA_OBJECTS 1

#define CRESTRICTIONS_DBSCHEMA_PRIMARY_KEYS 3

#define CRESTRICTIONS_DBSCHEMA_PROCEDURE_COLUMNS 4

#define CRESTRICTIONS_DBSCHEMA_PROCEDURE_PARAMETERS 4

#define CRESTRICTIONS_DBSCHEMA_PROCEDURES 4

#define CRESTRICTIONS_DBSCHEMA_PROVIDER_TYPES 2

#define CRESTRICTIONS_DBSCHEMA_REFERENTIAL_CONSTRAINTS 3

#define CRESTRICTIONS_DBSCHEMA_SCHEMATA 3

#define CRESTRICTIONS_DBSCHEMA_SQL_LANGUAGES 0

#define CRESTRICTIONS_DBSCHEMA_STATISTICS 3

#define CRESTRICTIONS_DBSCHEMA_TABLE_CONSTRAINTS 7

#define CRESTRICTIONS_DBSCHEMA_TABLE_PRIVILEGES 5

#define CRESTRICTIONS_DBSCHEMA_TABLE_STATISTICS 7

#define CRESTRICTIONS_DBSCHEMA_TABLES 4

#define CRESTRICTIONS_DBSCHEMA_TABLES_INFO 4

#define CRESTRICTIONS_DBSCHEMA_TRANSLATIONS 3

#define CRESTRICTIONS_DBSCHEMA_TRUSTEE 4

#define CRESTRICTIONS_DBSCHEMA_USAGE_PRIVILEGES 6

#define CRESTRICTIONS_DBSCHEMA_VIEW_COLUMN_USAGE 3

#define CRESTRICTIONS_DBSCHEMA_VIEW_TABLE_USAGE 3

#define CRESTRICTIONS_DBSCHEMA_VIEWS 3

#define CRESTRICTIONS_MDSCHEMA_ACTIONS 8

#define CRESTRICTIONS_MDSCHEMA_COMMANDS 5

#define CRESTRICTIONS_MDSCHEMA_CUBES 3

#define CRESTRICTIONS_MDSCHEMA_DIMENSIONS 5

#define CRESTRICTIONS_MDSCHEMA_FUNCTIONS 4

#define CRESTRICTIONS_MDSCHEMA_HIERARCHIES 6

#define CRESTRICTIONS_MDSCHEMA_LEVELS 7

#define CRESTRICTIONS_MDSCHEMA_MEASURES 5

#define CRESTRICTIONS_MDSCHEMA_MEMBERS 12

#define CRESTRICTIONS_MDSCHEMA_PROPERTIES 9

#define CRESTRICTIONS_MDSCHEMA_SETS 5

#define DB_ALL_EXCEPT_LIKE 3

#define DB_BINDFLAGS_COLLECTION 16

#define DB_BINDFLAGS_DELAYFETCHCOLUMNS 1

#define DB_BINDFLAGS_DELAYFETCHSTREAM 2

#define DB_BINDFLAGS_ISSTRUCTUREDDOCUMENT 128

#define DB_BINDFLAGS_OPENIFEXISTS 32

#define DB_BINDFLAGS_OUTPUT 8

#define DB_BINDFLAGS_OVERWRITE 64

#define DB_BINDFLAGS_RECURSIVE 4

#define DB_COLLATION_ASC 1

#define DB_COLLATION_DESC 2

#define DB_COUNTUNAVAILABLE -1

#define DB_IMP_LEVEL_ANONYMOUS 0

#define DB_IMP_LEVEL_DELEGATE 3

#define DB_IMP_LEVEL_IDENTIFY 1

#define DB_IMP_LEVEL_IMPERSONATE 2

#define DB_INVALID_HACCESSOR 0

#define DB_INVALID_HCHAPTER 0

#define DB_INVALIDCOLUMN 4294967295

#define DB_LIKE_ONLY 2

#define DB_LOCAL_EXCLUSIVE 3

#define DB_LOCAL_SHARED 2

#define DB_MODE_READ 1

#define DB_MODE_READWRITE 3

#define DB_MODE_SHARE_DENY_NONE 16

#define DB_MODE_SHARE_DENY_READ 4

#define DB_MODE_SHARE_DENY_WRITE 8

#define DB_MODE_SHARE_EXCLUSIVE 12

#define DB_MODE_WRITE 2

#define DB_NULL_HACCESSOR 0

#define DB_NULL_HCHAPTER 0

#define DB_NULL_HROW 0

#define DB_PROT_LEVEL_CALL 2

#define DB_PROT_LEVEL_CONNECT 1

#define DB_PROT_LEVEL_NONE 0

#define DB_PROT_LEVEL_PKT 3

#define DB_PROT_LEVEL_PKT_INTEGRITY 4

#define DB_PROT_LEVEL_PKT_PRIVACY 5

#define DB_PT_FUNCTION 3

#define DB_PT_PROCEDURE 2

#define DB_PT_UNKNOWN 1

#define DB_REMOTE 1

#define DB_SEARCHABLE 4

#define DB_UNSEARCHABLE 1

#define DBCOMPUTEMODE_COMPUTED 1

#define DBCOMPUTEMODE_DYNAMIC 2

#define DBCOMPUTEMODE_NOTCOMPUTED 3

#define DBPARAMTYPE_INPUT 1

#define DBPARAMTYPE_INPUTOUTPUT 2

#define DBPARAMTYPE_OUTPUT 3

#define DBPARAMTYPE_RETURNVALUE 4

#define DBPROMPT_COMPLETE 2

#define DBPROMPT_COMPLETEREQUIRED 3

#define DBPROMPT_NOPROMPT 4

#define DBPROMPT_PROMPT 1

#define DBPROPVAL_AO_RANDOM 2

#define DBPROPVAL_AO_SEQUENTIAL 0

#define DBPROPVAL_AO_SEQUENTIALSTORAGEOBJECTS 1

#define DBPROPVAL_ASYNCH_BACKGROUNDPOPULATION 8

#define DBPROPVAL_ASYNCH_INITIALIZE 1

#define DBPROPVAL_ASYNCH_POPULATEONDEMAND 32

#define DBPROPVAL_ASYNCH_PREPOPULATE 16

#define DBPROPVAL_ASYNCH_RANDOMPOPULATION 4

#define DBPROPVAL_ASYNCH_SEQUENTIALPOPULATION 2

#define DBPROPVAL_BD_INTRANSACTION 1

#define DBPROPVAL_BD_REORGANIZATION 3

#define DBPROPVAL_BD_ROWSET 0

#define DBPROPVAL_BD_XTRANSACTION 2

#define DBPROPVAL_BI_CROSSROWSET 1

#define DBPROPVAL_BMK_KEY 2

#define DBPROPVAL_BMK_NUMERIC 1

#define DBPROPVAL_BO_NOINDEXUPDATE 1

#define DBPROPVAL_BO_NOLOG 0

#define DBPROPVAL_BO_REFINTEGRITY 2

#define DBPROPVAL_CB_DELETE 1

#define DBPROPVAL_CB_NON_NULL 2

#define DBPROPVAL_CB_NULL 1

#define DBPROPVAL_CB_PRESERVE 2

#define DBPROPVAL_CD_NOTNULL 1

#define DBPROPVAL_CL_END 2

#define DBPROPVAL_CL_START 1

#define DBPROPVAL_CM_TRANSACTIONS 1

#define DBPROPVAL_CO_BEGINSWITH 32

#define DBPROPVAL_CO_CASEINSENSITIVE 8

#define DBPROPVAL_CO_CASESENSITIVE 4

#define DBPROPVAL_CO_CONTAINS 16

#define DBPROPVAL_CO_EQUALITY 1

#define DBPROPVAL_CO_STRING 2

#define DBPROPVAL_CS_COMMUNICATIONFAILURE 2

#define DBPROPVAL_CS_INITIALIZED 1

#define DBPROPVAL_CS_UNINITIALIZED 0

#define DBPROPVAL_CU_DML_STATEMENTS 1

#define DBPROPVAL_CU_INDEX_DEFINITION 4

#define DBPROPVAL_CU_PRIVILEGE_DEFINITION 8

#define DBPROPVAL_CU_TABLE_DEFINITION 2

#define DBPROPVAL_DF_INITIALLY_DEFERRED 1

#define DBPROPVAL_DF_INITIALLY_IMMEDIATE 2

#define DBPROPVAL_DF_NOT_DEFERRABLE 3

#define DBPROPVAL_DST_DOCSOURCE 4

#define DBPROPVAL_DST_MDP 2

#define DBPROPVAL_DST_TDP 1

#define DBPROPVAL_DST_TDPANDMDP 3

#define DBPROPVAL_FU_CATALOG 8

#define DBPROPVAL_FU_COLUMN 2

#define DBPROPVAL_FU_NOT_SUPPORTED 1

#define DBPROPVAL_FU_TABLE 4

#define DBPROPVAL_GB_COLLATE 16

#define DBPROPVAL_GB_CONTAINS_SELECT 4

#define DBPROPVAL_GB_EQUALS_SELECT 2

#define DBPROPVAL_GB_NO_RELATION 8

#define DBPROPVAL_GB_NOT_SUPPORTED 1

#define DBPROPVAL_GU_NOTSUPPORTED 1

#define DBPROPVAL_GU_SUFFIX 2

#define DBPROPVAL_HT_DIFFERENT_CATALOGS 1

#define DBPROPVAL_HT_DIFFERENT_PROVIDERS 2

#define DBPROPVAL_IC_LOWER 2

#define DBPROPVAL_IC_MIXED 8

#define DBPROPVAL_IC_SENSITIVE 4

#define DBPROPVAL_IC_UPPER 1

#define DBPROPVAL_IN_ALLOWNULL 0

#define DBPROPVAL_IN_DISALLOWNULL 1

#define DBPROPVAL_IN_IGNOREANYNULL 4

#define DBPROPVAL_IN_IGNORENULL 2

#define DBPROPVAL_IT_BTREE 1

#define DBPROPVAL_IT_CONTENT 3

#define DBPROPVAL_IT_HASH 2

#define DBPROPVAL_IT_OTHER 4

#define DBPROPVAL_LM_NONE 1

#define DBPROPVAL_LM_SINGLEROW 2

#define DBPROPVAL_MR_CONCURRENT 2

#define DBPROPVAL_MR_NOTSUPPORTED 0

#define DBPROPVAL_MR_SUPPORTED 1

#define DBPROPVAL_NC_END 1

#define DBPROPVAL_NC_HIGH 2

#define DBPROPVAL_NC_LOW 4

#define DBPROPVAL_NC_START 8

#define DBPROPVAL_NP_ABOUTTODO 2

#define DBPROPVAL_NP_DIDEVENT 16

#define DBPROPVAL_NP_FAILEDTODO 8

#define DBPROPVAL_NP_OKTODO 1

#define DBPROPVAL_NP_SYNCHAFTER 4

#define DBPROPVAL_NT_MULTIPLEROWS 2

#define DBPROPVAL_NT_SINGLEROW 1

#define DBPROPVAL_OA_ATEXECUTE 2

#define DBPROPVAL_OA_ATROWRELEASE 4

#define DBPROPVAL_OA_NOTSUPPORTED 1

#define DBPROPVAL_OO_BLOB 1

#define DBPROPVAL_OO_DIRECTBIND 16

#define DBPROPVAL_OO_IPERSIST 2

#define DBPROPVAL_OO_ROWOBJECT 4

#define DBPROPVAL_OO_SCOPED 8

#define DBPROPVAL_OO_SINGLETON 32

#define DBPROPVAL_OP_EQUAL 1

#define DBPROPVAL_OP_RELATIVE 2

#define DBPROPVAL_OP_STRING 4

#define DBPROPVAL_ORS_HISTOGRAM 8

#define DBPROPVAL_ORS_INDEX 1

#define DBPROPVAL_ORS_INTEGRATEDINDEX 2

#define DBPROPVAL_ORS_STOREDPROC 4

#define DBPROPVAL_ORS_TABLE 0

#define DBPROPVAL_OS_AGR_AFTERSESSION 8

#define DBPROPVAL_OS_CLIENTCURSOR 4

#define DBPROPVAL_OS_DISABLEALL 0

#define DBPROPVAL_OS_ENABLEALL 4294967295

#define DBPROPVAL_OS_RESOURCEPOOLING 1

#define DBPROPVAL_OS_TXNENLISTMENT 2

#define DBPROPVAL_PT_GUID 8

#define DBPROPVAL_PT_GUID_NAME 1

#define DBPROPVAL_PT_GUID_PROPID 2

#define DBPROPVAL_PT_NAME 4

#define DBPROPVAL_PT_PGUID_NAME 32

#define DBPROPVAL_PT_PGUID_PROPID 64

#define DBPROPVAL_PT_PROPID 16

#define DBPROPVAL_RD_RESETALL 4294967295

#define DBPROPVAL_RT_APTMTTHREAD 2

#define DBPROPVAL_RT_FREETHREAD 1

#define DBPROPVAL_RT_SINGLETHREAD 4

#define DBPROPVAL_SQ_COMPARISON 2

#define DBPROPVAL_SQ_CORRELATEDSUBQUERIES 1

#define DBPROPVAL_SQ_EXISTS 4

#define DBPROPVAL_SQ_IN 8

#define DBPROPVAL_SQ_QUANTIFIED 16

#define DBPROPVAL_SQ_TABLE 32

#define DBPROPVAL_SQL_ANSI89_IEF 8

#define DBPROPVAL_SQL_ANSI92_ENTRY 16

#define DBPROPVAL_SQL_ANSI92_FULL 128

#define DBPROPVAL_SQL_ANSI92_INTERMEDIATE 64

#define DBPROPVAL_SQL_ESCAPECLAUSES 256

#define DBPROPVAL_SQL_FIPS_TRANSITIONAL 32

#define DBPROPVAL_SQL_NONE 0

#define DBPROPVAL_SQL_ODBC_CORE 2

#define DBPROPVAL_SQL_ODBC_EXTENDED 4

#define DBPROPVAL_SQL_ODBC_MINIMUM 1

#define DBPROPVAL_SQL_SUBMINIMUM 512

#define DBPROPVAL_SS_ILOCKBYTES 8

#define DBPROPVAL_SS_ISEQUENTIALSTREAM 1

#define DBPROPVAL_SS_ISTORAGE 4

#define DBPROPVAL_SS_ISTREAM 2

#define DBPROPVAL_STGM_CONVERT 262144

#define DBPROPVAL_STGM_CREATE 4096

#define DBPROPVAL_STGM_DELETEONRELEASE 2097152

#define DBPROPVAL_STGM_DIRECT 65536

#define DBPROPVAL_STGM_FAILIFTHERE 524288

#define DBPROPVAL_STGM_PRIORITY 1048576

#define DBPROPVAL_STGM_READ 0

#define DBPROPVAL_STGM_READWRITE 2

#define DBPROPVAL_STGM_SHARE_DENY_NONE 64

#define DBPROPVAL_STGM_SHARE_DENY_READ 48

#define DBPROPVAL_STGM_SHARE_DENY_WRITE 32

#define DBPROPVAL_STGM_SHARE_EXCLUSIVE 16

#define DBPROPVAL_STGM_TRANSACTED 131072

#define DBPROPVAL_STGM_WRITE 1

#define DBPROPVAL_SU_DML_STATEMENTS 1

#define DBPROPVAL_SU_INDEX_DEFINITION 4

#define DBPROPVAL_SU_PRIVILEGE_DEFINITION 8

#define DBPROPVAL_SU_TABLE_DEFINITION 2

#define DBPROPVAL_TC_ALL 8

#define DBPROPVAL_TC_DDL_COMMIT 2

#define DBPROPVAL_TC_DDL_IGNORE 4

#define DBPROPVAL_TC_DDL_LOCK 16

#define DBPROPVAL_TC_DML 1

#define DBPROPVAL_TC_NONE 0

#define DBPROPVAL_TI_BROWSE 256

#define DBPROPVAL_TI_CHAOS 16

#define DBPROPVAL_TI_CURSORSTABILITY 4096

#define DBPROPVAL_TI_ISOLATED 1048576

#define DBPROPVAL_TI_READCOMMITTED 4096

#define DBPROPVAL_TI_READUNCOMMITTED 256

#define DBPROPVAL_TI_REPEATABLEREAD 65536

#define DBPROPVAL_TI_SERIALIZABLE 1048576

#define DBPROPVAL_TR_ABORT 16

#define DBPROPVAL_TR_ABORT_DC 8

#define DBPROPVAL_TR_ABORT_NO 32

#define DBPROPVAL_TR_BOTH 128

#define DBPROPVAL_TR_COMMIT 2

#define DBPROPVAL_TR_COMMIT_DC 1

#define DBPROPVAL_TR_COMMIT_NO 4

#define DBPROPVAL_TR_DONTCARE 64

#define DBPROPVAL_TR_NONE 256

#define DBPROPVAL_TR_OPTIMISTIC 512

#define DBPROPVAL_TS_CARDINALITY 1

#define DBPROPVAL_TS_HISTOGRAM 2

#define DBPROPVAL_UP_CHANGE 1

#define DBPROPVAL_UP_DELETE 2

#define DBPROPVAL_UP_INSERT 4

#define DBWATCHREGION_NULL 0

#define IDENTIFIER_SDK_ERROR 268435456

#define IDENTIFIER_SDK_MASK 4026531840

#define MD_DIMTYPE_MEASURE 2

#define MD_DIMTYPE_OTHER 3

#define MD_DIMTYPE_TIME 1

#define MD_DIMTYPE_UNKNOWN 0

#define MDAXIS_CHAPTERS 4

#define MDAXIS_COLUMNS 0

#define MDAXIS_PAGES 2

#define MDAXIS_ROWS 1

#define MDAXIS_SECTIONS 3

#define MDAXIS_SLICERS 4294967295

#define MDDISPINFO_DRILLED_DOWN 65536

#define MDDISPINFO_PARENT_SAME_AS_PREV 131072

#define MDFF_BOLD 1

#define MDFF_ITALIC 2

#define MDFF_STRIKEOUT 8

#define MDFF_UNDERLINE 4

#define MDLEVEL_TYPE_ALL 1

#define MDLEVEL_TYPE_CALCULATED 2

#define MDLEVEL_TYPE_REGULAR 0

#define MDLEVEL_TYPE_RESERVED1 8

#define MDLEVEL_TYPE_TIME 4

#define MDLEVEL_TYPE_TIME_DAYS 516

#define MDLEVEL_TYPE_TIME_HALF_YEAR 36

#define MDLEVEL_TYPE_TIME_HOURS 772

#define MDLEVEL_TYPE_TIME_MINUTES 1028

#define MDLEVEL_TYPE_TIME_MONTHS 132

#define MDLEVEL_TYPE_TIME_QUARTERS 68

#define MDLEVEL_TYPE_TIME_SECONDS 2052

#define MDLEVEL_TYPE_TIME_UNDEFINED 4100

#define MDLEVEL_TYPE_TIME_WEEKS 260

#define MDLEVEL_TYPE_TIME_YEARS 20

#define MDLEVEL_TYPE_UNKNOWN 0

#define MDMEASURE_AGGR_AVG 5

#define MDMEASURE_AGGR_CALCULATED 127

#define MDMEASURE_AGGR_COUNT 2

#define MDMEASURE_AGGR_MAX 4

#define MDMEASURE_AGGR_MIN 3

#define MDMEASURE_AGGR_STD 7

#define MDMEASURE_AGGR_SUM 1

#define MDMEASURE_AGGR_UNKNOWN 0

#define MDMEASURE_AGGR_VAR 6

#define MDMEMBER_TYPE_ALL 2

#define MDMEMBER_TYPE_FORMULA 4

#define MDMEMBER_TYPE_MEASURE 3

#define MDMEMBER_TYPE_REGULAR 1

#define MDMEMBER_TYPE_RESERVE1 5

#define MDMEMBER_TYPE_RESERVE2 6

#define MDMEMBER_TYPE_RESERVE3 7

#define MDMEMBER_TYPE_RESERVE4 8

#define MDMEMBER_TYPE_UNKNOWN 0

#define MDPROP_CELL 2

#define MDPROP_MEMBER 1

#define MDPROPVAL_AU_UNCHANGED 1

#define MDPROPVAL_AU_UNKNOWN 2

#define MDPROPVAL_AU_UNSUPPORTED 0

#define MDPROPVAL_FS_FULL_SUPPORT 1

#define MDPROPVAL_FS_GENERATED_COLUMN 2

#define MDPROPVAL_FS_GENERATED_DIMENSION 3

#define MDPROPVAL_FS_NO_SUPPORT 4

#define MDPROPVAL_MC_SEARCHEDCASE 2

#define MDPROPVAL_MC_SINGLECASE 1

#define MDPROPVAL_MD_AFTER 4

#define MDPROPVAL_MD_BEFORE 2

#define MDPROPVAL_MD_SELF 1

#define MDPROPVAL_MF_CREATE_CALCMEMBERS 4

#define MDPROPVAL_MF_CREATE_NAMEDSETS 8

#define MDPROPVAL_MF_SCOPE_GLOBAL 32

#define MDPROPVAL_MF_SCOPE_SESSION 16

#define MDPROPVAL_MF_WITH_CALCMEMBERS 1

#define MDPROPVAL_MF_WITH_NAMEDSETS 2

#define MDPROPVAL_MJC_IMPLICITCUBE 4

#define MDPROPVAL_MJC_MULTICUBES 2

#define MDPROPVAL_MJC_SINGLECUBE 1

#define MDPROPVAL_MMF_CLOSINGPERIOD 8

#define MDPROPVAL_MMF_COUSIN 1

#define MDPROPVAL_MMF_OPENINGPERIOD 4

#define MDPROPVAL_MMF_PARALLELPERIOD 2

#define MDPROPVAL_MNF_AGGREGATE 16

#define MDPROPVAL_MNF_CORRELATION 64

#define MDPROPVAL_MNF_COVARIANCE 32

#define MDPROPVAL_MNF_DRILLDOWNLEVEL 2048

#define MDPROPVAL_MNF_DRILLDOWNLEVELBOTTOM 32768

#define MDPROPVAL_MNF_DRILLDOWNLEVELTOP 16384

#define MDPROPVAL_MNF_DRILLDOWNMEMBERBOTTOM 8192

#define MDPROPVAL_MNF_DRILLDOWNMEMBERTOP 4096

#define MDPROPVAL_MNF_DRILLUPLEVEL 131072

#define MDPROPVAL_MNF_DRILLUPMEMBER 65536

#define MDPROPVAL_MNF_LINREG2 512

#define MDPROPVAL_MNF_LINREGPOINT 1024

#define MDPROPVAL_MNF_LINREGSLOPE 128

#define MDPROPVAL_MNF_LINREGVARIANCE 256

#define MDPROPVAL_MNF_MEDIAN 1

#define MDPROPVAL_MNF_RANK 8

#define MDPROPVAL_MNF_STDDEV 4

#define MDPROPVAL_MNF_VAR 2

#define MDPROPVAL_MOQ_CATALOG_CUBE 2

#define MDPROPVAL_MOQ_CUBE_DIM 8

#define MDPROPVAL_MOQ_DATASOURCE_CUBE 1

#define MDPROPVAL_MOQ_DIM_HIER 16

#define MDPROPVAL_MOQ_DIMHIER_LEVEL 32

#define MDPROPVAL_MOQ_DIMHIER_MEMBER 256

#define MDPROPVAL_MOQ_LEVEL_MEMBER 64

#define MDPROPVAL_MOQ_MEMBER_MEMBER 128

#define MDPROPVAL_MOQ_OUTERREFERENCE 1

#define MDPROPVAL_MOQ_SCHEMA_CUBE 4

#define MDPROPVAL_MS_MULTIPLETUPLES 1

#define MDPROPVAL_MS_SINGLETUPLE 2

#define MDPROPVAL_MSC_GREATERTHAN 2

#define MDPROPVAL_MSC_GREATERTHANEQUAL 8

#define MDPROPVAL_MSC_LESSTHAN 1

#define MDPROPVAL_MSC_LESSTHANEQUAL 4

#define MDPROPVAL_MSF_BOTTOMPERCENT 2

#define MDPROPVAL_MSF_BOTTOMSUM 8

#define MDPROPVAL_MSF_DRILLDOWNLEVEL 2048

#define MDPROPVAL_MSF_DRILLDOWNLEVELBOTTOM 32768

#define MDPROPVAL_MSF_DRILLDOWNLEVELTOP 16384

#define MDPROPVAL_MSF_DRILLDOWNMEMBBER 1024

#define MDPROPVAL_MSF_DRILLDOWNMEMBERBOTTOM 8192

#define MDPROPVAL_MSF_DRILLDOWNMEMBERTOP 4096

#define MDPROPVAL_MSF_DRILLUPLEVEL 131072

#define MDPROPVAL_MSF_DRILLUPMEMBER 65536

#define MDPROPVAL_MSF_LASTPERIODS 32

#define MDPROPVAL_MSF_MTD 256

#define MDPROPVAL_MSF_PERIODSTODATE 16

#define MDPROPVAL_MSF_QTD 128

#define MDPROPVAL_MSF_TOGGLEDRILLSTATE 262144

#define MDPROPVAL_MSF_TOPPERCENT 1

#define MDPROPVAL_MSF_TOPSUM 4

#define MDPROPVAL_MSF_WTD 512

#define MDPROPVAL_MSF_YTD 64

#define MDPROPVAL_NL_NAMEDLEVELS 1

#define MDPROPVAL_NL_NUMBEREDLEVELS 2

#define MDPROPVAL_NL_SCHEMAONLY 4

#define MDPROPVAL_NME_ALLDIMENSIONS 0

#define MDPROPVAL_NME_MEASURESONLY 1

#define MDPROPVAL_RR_NORANGEROWSET 1

#define MDPROPVAL_RR_READONLY 2

#define MDPROPVAL_RR_UPDATE 4

#define MDPROPVAL_VISUAL_MODE_DEFAULT 0

#define MDPROPVAL_VISUAL_MODE_VISUAL 1

#define MDPROPVAL_VISUAL_MODE_VISUAL_OFF 2

#define MDTREEOP_ANCESTORS 32

#define MDTREEOP_CHILDREN 1

#define MDTREEOP_DESCENDANTS 16

#define MDTREEOP_PARENT 4

#define MDTREEOP_SELF 8

#define MDTREEOP_SIBLINGS 2

#define OLEDBVER 624

#define STD_BOOKMARKLENGTH 1

typedef struct _SEC_OBJECT _SEC_OBJECT, *P_SEC_OBJECT;

typedef struct _SEC_OBJECT_ELEMENT _SEC_OBJECT_ELEMENT, *P_SEC_OBJECT_ELEMENT;

typedef struct _SEC_OBJECT_ELEMENT SEC_OBJECT_ELEMENT;

typedef struct tagDBID tagDBID, *PtagDBID;

typedef struct tagDBID DBID;

typedef union _union_7739 _union_7739, *P_union_7739;

typedef DWORD DBKIND;

typedef union _union_7740 _union_7740, *P_union_7740;

union _union_7739 {
    GUID guid;
    GUID * pguid;
};

union _union_7740 {
    LPOLESTR pwszName;
    ULONG ulPropid;
};

struct tagDBID {
    union _union_7739 uGuid;
    DBKIND eKind;
    union _union_7740 uName;
};

struct _SEC_OBJECT_ELEMENT {
    GUID guidObjectType;
    DBID ObjectID;
};

struct _SEC_OBJECT {
    DWORD cObjects;
    SEC_OBJECT_ELEMENT * prgObjects;
};

typedef enum ACCESS_MASKENUM {
    PERM_ALL=268435456,
    PERM_CREATE=16384,
    PERM_DELETE=65536,
    PERM_DROP=256,
    PERM_EXCLUSIVE=512,
    PERM_EXECUTE=536870912,
    PERM_INSERT=32768,
    PERM_MAXIMUM_ALLOWED=33554432,
    PERM_READ=-2147483648,
    PERM_READCONTROL=131072,
    PERM_READDESIGN=1024,
    PERM_REFERENCE=8192,
    PERM_UPDATE=1073741824,
    PERM_WITHGRANT=4096,
    PERM_WRITEDESIGN=2048,
    PERM_WRITEOWNER=524288,
    PERM_WRITEPERMISSIONS=262144
} ACCESS_MASKENUM;

typedef DWORD DB_DWRESERVE;

typedef LONG DB_LORDINAL;

typedef LONG DB_LPARAMS;

typedef LONG DB_LRESERVE;

typedef struct tagDB_NUMERIC tagDB_NUMERIC, *PtagDB_NUMERIC;

typedef struct tagDB_NUMERIC DB_NUMERIC;

struct tagDB_NUMERIC {
    BYTE precision;
    BYTE scale;
    BYTE sign;
    BYTE val[16];
};

typedef ULONG DB_UPARAMS;

typedef ULONG DB_URESERVE;

typedef struct tagDB_VARNUMERIC tagDB_VARNUMERIC, *PtagDB_VARNUMERIC;

typedef struct tagDB_VARNUMERIC DB_VARNUMERIC;

typedef char SBYTE;

struct tagDB_VARNUMERIC {
    BYTE precision;
    SBYTE scale;
    BYTE sign;
    BYTE val[1];
};

typedef DWORD DBACCESSORFLAGS;

typedef enum DBACCESSORFLAGSENUM {
    DBACCESSOR_INHERITED=16,
    DBACCESSOR_INVALID=0,
    DBACCESSOR_OPTIMIZED=8,
    DBACCESSOR_PARAMETERDATA=4,
    DBACCESSOR_PASSBYREF=1,
    DBACCESSOR_ROWDATA=2
} DBACCESSORFLAGSENUM;

typedef DWORD DBASYNCHOP;

typedef enum DBASYNCHOPENUM {
    DBASYNCHOP_OPEN=0
} DBASYNCHOPENUM;

typedef DWORD DBASYNCHPHASE;

typedef enum DBASYNCHPHASEENUM {
    DBASYNCHPHASE_CANCELED=3,
    DBASYNCHPHASE_COMPLETE=2,
    DBASYNCHPHASE_INITIALIZATION=0,
    DBASYNCHPHASE_POPULATION=1
} DBASYNCHPHASEENUM;

typedef struct tagDBBINDEXT tagDBBINDEXT, *PtagDBBINDEXT;

typedef struct tagDBBINDEXT DBBINDEXT;

typedef ULONG DBCOUNTITEM;

struct tagDBBINDEXT {
    BYTE * pExtension;
    DBCOUNTITEM ulExtension;
};

typedef DWORD DBBINDFLAG;

typedef enum DBBINDFLAGENUM {
    DBBINDFLAG_HTML=1
} DBBINDFLAGENUM;

typedef struct tagDBBINDING tagDBBINDING, *PtagDBBINDING;

typedef struct tagDBBINDING DBBINDING;

typedef ULONG DBORDINAL;

typedef ULONG DBBYTEOFFSET;

typedef struct tagDBOBJECT tagDBOBJECT, *PtagDBOBJECT;

typedef struct tagDBOBJECT DBOBJECT;

typedef DWORD DBPART;

typedef DWORD DBMEMOWNER;

typedef DWORD DBPARAMIO;

typedef ULONG DBLENGTH;

typedef WORD DBTYPE;

struct tagDBBINDING {
    DBORDINAL iOrdinal;
    DBBYTEOFFSET obValue;
    DBBYTEOFFSET obLength;
    DBBYTEOFFSET obStatus;
    struct ITypeInfo * pTypeInfo;
    DBOBJECT * pObject;
    DBBINDEXT * pBindExt;
    DBPART dwPart;
    DBMEMOWNER dwMemOwner;
    DBPARAMIO eParamIO;
    DBLENGTH cbMaxLen;
    DWORD dwFlags;
    DBTYPE wType;
    BYTE bPrecision;
    BYTE bScale;
};

struct tagDBOBJECT {
    DWORD dwFlags;
    IID iid;
};

typedef DWORD DBBINDSTATUS;

typedef enum DBBINDSTATUSENUM {
    DBBINDSTATUS_BADBINDINFO=3,
    DBBINDSTATUS_BADORDINAL=1,
    DBBINDSTATUS_BADSTORAGEFLAGS=4,
    DBBINDSTATUS_MULTIPLESTORAGE=6,
    DBBINDSTATUS_NOINTERFACE=5,
    DBBINDSTATUS_OK=0,
    DBBINDSTATUS_UNSUPPORTEDCONVERSION=2
} DBBINDSTATUSENUM;

typedef DWORD DBBINDURLFLAG;

typedef enum DBBINDURLFLAGENUM {
    DBBINDURLFLAG_ASYNCHRONOUS=4096,
    DBBINDURLFLAG_COLLECTION=8192,
    DBBINDURLFLAG_DELAYFETCHCOLUMNS=32768,
    DBBINDURLFLAG_DELAYFETCHSTREAM=16384,
    DBBINDURLFLAG_ISSTRUCTUREDDOCUMENT=134217728,
    DBBINDURLFLAG_OPENIFEXISTS=33554432,
    DBBINDURLFLAG_OUTPUT=8388608,
    DBBINDURLFLAG_OVERWRITE=67108864,
    DBBINDURLFLAG_READ=1,
    DBBINDURLFLAG_READWRITE=3,
    DBBINDURLFLAG_RECURSIVE=4194304,
    DBBINDURLFLAG_SHARE_DENY_NONE=16,
    DBBINDURLFLAG_SHARE_DENY_READ=4,
    DBBINDURLFLAG_SHARE_DENY_WRITE=8,
    DBBINDURLFLAG_SHARE_EXCLUSIVE=12,
    DBBINDURLFLAG_WAITFORINIT=16777216,
    DBBINDURLFLAG_WRITE=2
} DBBINDURLFLAGENUM;

typedef DWORD DBBINDURLSTATUS;

typedef enum DBBINDURLSTATUSENUM {
    DBBINDURLSTATUS_S_DENYNOTSUPPORTED=1,
    DBBINDURLSTATUS_S_DENYTYPENOTSUPPORTED=4,
    DBBINDURLSTATUS_S_OK=0,
    DBBINDURLSTATUS_S_REDIRECTED=8
} DBBINDURLSTATUSENUM;

typedef ULONG DBBKMARK;

typedef enum tagDBBOOKMARK {
    DBBMK_FIRST=1,
    DBBMK_INVALID=0,
    DBBMK_LAST=2
} tagDBBOOKMARK;

typedef enum tagDBBOOKMARK DBBOOKMARK;

typedef struct tagDBCOLUMNACCESS tagDBCOLUMNACCESS, *PtagDBCOLUMNACCESS;

typedef struct tagDBCOLUMNACCESS DBCOLUMNACCESS;

typedef DWORD DBSTATUS;

struct tagDBCOLUMNACCESS {
    void * pData;
    DBID columnid;
    DBLENGTH cbDataLen;
    DBSTATUS dwStatus;
    DBLENGTH cbMaxLen;
    DB_DWRESERVE dwReserved;
    DBTYPE wType;
    BYTE bPrecision;
    BYTE bScale;
};

typedef struct tagDBCOLUMNDESC tagDBCOLUMNDESC, *PtagDBCOLUMNDESC;

typedef struct tagDBCOLUMNDESC DBCOLUMNDESC;

typedef struct tagDBPROPSET tagDBPROPSET, *PtagDBPROPSET;

typedef struct tagDBPROPSET DBPROPSET;

typedef struct tagDBPROP tagDBPROP, *PtagDBPROP;

typedef struct tagDBPROP DBPROP;

typedef DWORD DBPROPID;

typedef DWORD DBPROPOPTIONS;

typedef DWORD DBPROPSTATUS;

struct tagDBPROPSET {
    DBPROP * rgProperties;
    ULONG cProperties;
    GUID guidPropertySet;
};

struct tagDBCOLUMNDESC {
    LPOLESTR pwszTypeName;
    struct ITypeInfo * pTypeInfo;
    DBPROPSET * rgPropertySets;
    CLSID * pclsid;
    ULONG cPropertySets;
    DBLENGTH ulColumnSize;
    DBID dbcid;
    DBTYPE wType;
    BYTE bPrecision;
    BYTE bScale;
};

struct tagDBPROP {
    DBPROPID dwPropertyID;
    DBPROPOPTIONS dwOptions;
    DBPROPSTATUS dwStatus;
    DBID colid;
    VARIANT vValue;
};

typedef DWORD DBCOLUMNDESCFLAGS;

typedef enum DBCOLUMNDESCFLAGSENUM {
    DBCOLUMNDESCFLAGS_CLSID=8,
    DBCOLUMNDESCFLAGS_COLSIZE=16,
    DBCOLUMNDESCFLAGS_DBCID=32,
    DBCOLUMNDESCFLAGS_ITYPEINFO=2,
    DBCOLUMNDESCFLAGS_PRECISION=128,
    DBCOLUMNDESCFLAGS_PROPERTIES=4,
    DBCOLUMNDESCFLAGS_SCALE=256,
    DBCOLUMNDESCFLAGS_TYPENAME=1,
    DBCOLUMNDESCFLAGS_WTYPE=64
} DBCOLUMNDESCFLAGSENUM;

typedef DWORD DBCOLUMNFLAGS;

typedef enum DBCOLUMNFLAGS15ENUM {
    DBCOLUMNFLAGS_ISCHAPTER=8192
} DBCOLUMNFLAGS15ENUM;

typedef enum DBCOLUMNFLAGSENUM {
    DBCOLUMNFLAGS_CACHEDEFERRED=4096,
    DBCOLUMNFLAGS_ISBOOKMARK=1,
    DBCOLUMNFLAGS_ISFIXEDLENGTH=16,
    DBCOLUMNFLAGS_ISLONG=128,
    DBCOLUMNFLAGS_ISNULLABLE=32,
    DBCOLUMNFLAGS_ISROWID=256,
    DBCOLUMNFLAGS_ISROWVER=512,
    DBCOLUMNFLAGS_MAYBENULL=64,
    DBCOLUMNFLAGS_MAYDEFER=2,
    DBCOLUMNFLAGS_WRITE=4,
    DBCOLUMNFLAGS_WRITEUNKNOWN=8
} DBCOLUMNFLAGSENUM;

typedef enum DBCOLUMNFLAGSENUM20 {
    DBCOLUMNFLAGS_RESERVED=32768,
    DBCOLUMNFLAGS_SCALEISNEGATIVE=16384
} DBCOLUMNFLAGSENUM20;

typedef enum DBCOLUMNFLAGSENUM21 {
    DBCOLUMNFLAGS_ISCOLLECTION=262144,
    DBCOLUMNFLAGS_ISDEFAULTSTREAM=131072,
    DBCOLUMNFLAGS_ISROWURL=65536
} DBCOLUMNFLAGSENUM21;

typedef enum DBCOLUMNFLAGSENUM26 {
    DBCOLUMNFLAGS_ISROW=2097152,
    DBCOLUMNFLAGS_ISROWSET=1048576,
    DBCOLUMNFLAGS_ISSTREAM=524288,
    DBCOLUMNFLAGS_ROWSPECIFICCOLUMN=4194304
} DBCOLUMNFLAGSENUM26;

typedef struct tagDBCOLUMNINFO tagDBCOLUMNINFO, *PtagDBCOLUMNINFO;

typedef struct tagDBCOLUMNINFO DBCOLUMNINFO;

struct tagDBCOLUMNINFO {
    LPOLESTR pwszName;
    struct ITypeInfo * pTypeInfo;
    DBORDINAL iOrdinal;
    DBCOLUMNFLAGS dwFlags;
    DBLENGTH ulColumnSize;
    DBTYPE wType;
    BYTE bPrecision;
    BYTE bScale;
    DBID columnid;
};

typedef DWORD DBCOMMANDPERSISTFLAG;

typedef enum DBCOMMANDPERSISTFLAGENUM {
    DBCOMMANDPERSISTFLAG_NOSAVE=1
} DBCOMMANDPERSISTFLAGENUM;

typedef enum DBCOMMANDPERSISTFLAGENUM21 {
    DBCOMMANDPERSISTFLAG_DEFAULT=0,
    DBCOMMANDPERSISTFLAG_PERSISTPROCEDURE=4,
    DBCOMMANDPERSISTFLAG_PERSISTVIEW=2
} DBCOMMANDPERSISTFLAGENUM21;

typedef DWORD DBCOMPARE;

typedef enum DBCOMPAREENUM {
    DBCOMPARE_EQ=1,
    DBCOMPARE_GT=2,
    DBCOMPARE_LT=0,
    DBCOMPARE_NE=3,
    DBCOMPARE_NOTCOMPARABLE=4
} DBCOMPAREENUM;

typedef DWORD DBCOMPAREOP;

typedef enum DBCOMPAREOPSENUM {
    DBCOMPAREOPS_BEGINSWITH=5,
    DBCOMPAREOPS_CASEINSENSITIVE=8192,
    DBCOMPAREOPS_CASESENSITIVE=4096,
    DBCOMPAREOPS_CONTAINS=6,
    DBCOMPAREOPS_EQ=2,
    DBCOMPAREOPS_GE=3,
    DBCOMPAREOPS_GT=4,
    DBCOMPAREOPS_IGNORE=8,
    DBCOMPAREOPS_LE=1,
    DBCOMPAREOPS_LT=0,
    DBCOMPAREOPS_NE=7
} DBCOMPAREOPSENUM;

typedef enum DBCOMPAREOPSENUM20 {
    DBCOMPAREOPS_NOTBEGINSWITH=9,
    DBCOMPAREOPS_NOTCONTAINS=10
} DBCOMPAREOPSENUM20;

typedef struct tagDBCONSTRAINTDESC tagDBCONSTRAINTDESC, *PtagDBCONSTRAINTDESC;

typedef struct tagDBCONSTRAINTDESC DBCONSTRAINTDESC;

typedef DWORD DBCONSTRAINTTYPE;

typedef DWORD DBUPDELRULE;

typedef DWORD DBMATCHTYPE;

typedef DWORD DBDEFERRABILITY;

struct tagDBCONSTRAINTDESC {
    DBID * pConstraintID;
    DBCONSTRAINTTYPE ConstraintType;
    DBORDINAL cColumns;
    DBID * rgColumnList;
    DBID * pReferencedTableID;
    DBORDINAL cForeignKeyColumns;
    DBID * rgForeignKeyColumnList;
    OLECHAR * pwszConstraintText;
    DBUPDELRULE UpdateRule;
    DBUPDELRULE DeleteRule;
    DBMATCHTYPE MatchType;
    DBDEFERRABILITY Deferrability;
    DB_URESERVE cReserved;
    DBPROPSET * rgReserved;
};

typedef enum DBCONSTRAINTTYPEENUM {
    DBCONSTRAINTTYPE_CHECK=3,
    DBCONSTRAINTTYPE_FOREIGNKEY=1,
    DBCONSTRAINTTYPE_PRIMARYKEY=2,
    DBCONSTRAINTTYPE_UNIQUE=0
} DBCONSTRAINTTYPEENUM;

typedef DWORD DBCONVERTFLAGS;

typedef enum DBCONVERTFLAGSENUM {
    DBCONVERTFLAGS_COLUMN=0,
    DBCONVERTFLAGS_PARAMETER=1
} DBCONVERTFLAGSENUM;

typedef enum DBCONVERTFLAGSENUM20 {
    DBCONVERTFLAGS_FROMVARIANT=8,
    DBCONVERTFLAGS_ISFIXEDLENGTH=4,
    DBCONVERTFLAGS_ISLONG=2
} DBCONVERTFLAGSENUM20;

typedef DWORD DBCOPYFLAGS;

typedef enum DBCOPYFLAGSENUM {
    DBCOPY_ALLOW_EMULATION=1024,
    DBCOPY_ASYNC=256,
    DBCOPY_ATOMIC=4096,
    DBCOPY_NON_RECURSIVE=2048,
    DBCOPY_REPLACE_EXISTING=512
} DBCOPYFLAGSENUM;

typedef struct tagDBDATE tagDBDATE, *PtagDBDATE;

typedef struct tagDBDATE DBDATE;

struct tagDBDATE {
    SHORT year;
    USHORT month;
    USHORT day;
};

typedef enum DBDEFERRABILITYENUM {
    DBDEFERRABILITY_DEFERRABLE=2,
    DBDEFERRABILITY_DEFERRED=1
} DBDEFERRABILITYENUM;

typedef DWORD DBDELETEFLAGS;

typedef enum DBDELETEFLAGSENUM {
    DBDELETE_ASYNC=256,
    DBDELETE_ATOMIC=4096
} DBDELETEFLAGSENUM;

typedef DWORD DBEVENTPHASE;

typedef enum DBEVENTPHASEENUM {
    DBEVENTPHASE_ABOUTTODO=1,
    DBEVENTPHASE_DIDEVENT=4,
    DBEVENTPHASE_FAILEDTODO=3,
    DBEVENTPHASE_OKTODO=0,
    DBEVENTPHASE_SYNCHAFTER=2
} DBEVENTPHASEENUM;

typedef struct tagDBFAILUREINFO tagDBFAILUREINFO, *PtagDBFAILUREINFO;

typedef struct tagDBFAILUREINFO DBFAILUREINFO;

typedef ULONG_PTR HROW;

struct tagDBFAILUREINFO {
    HROW hRow;
    DBORDINAL iColumn;
    HRESULT failure;
};

typedef DWORD DBHASHVALUE;

typedef struct tagDBIMPLICITSESSION tagDBIMPLICITSESSION, *PtagDBIMPLICITSESSION;

typedef struct tagDBIMPLICITSESSION DBIMPLICITSESSION;

struct tagDBIMPLICITSESSION {
    struct IUnknown * pUnkOuter;
    IID * piid;
    struct IUnknown * pSession;
};

typedef DWORD DBINDEX_COL_ORDER;

typedef enum DBINDEX_COL_ORDERENUM {
    DBINDEX_COL_ORDER_ASC=0,
    DBINDEX_COL_ORDER_DESC=1
} DBINDEX_COL_ORDERENUM;

typedef struct tagDBINDEXCOLUMNDESC tagDBINDEXCOLUMNDESC, *PtagDBINDEXCOLUMNDESC;

typedef struct tagDBINDEXCOLUMNDESC DBINDEXCOLUMNDESC;

struct tagDBINDEXCOLUMNDESC {
    DBID * pColumnID;
    DBINDEX_COL_ORDER eIndexColOrder;
};

typedef enum DBKINDENUM {
    DBKIND_GUID=6,
    DBKIND_GUID_NAME=0,
    DBKIND_GUID_PROPID=1,
    DBKIND_NAME=2,
    DBKIND_PGUID_NAME=3,
    DBKIND_PGUID_PROPID=4,
    DBKIND_PROPID=5
} DBKINDENUM;

typedef DWORD DBLITERAL;

typedef enum DBLITERALENUM {
    DBLITERAL_BINARY_LITERAL=1,
    DBLITERAL_CATALOG_NAME=2,
    DBLITERAL_CATALOG_SEPARATOR=3,
    DBLITERAL_CHAR_LITERAL=4,
    DBLITERAL_COLUMN_ALIAS=5,
    DBLITERAL_COLUMN_NAME=6,
    DBLITERAL_CORRELATION_NAME=7,
    DBLITERAL_CURSOR_NAME=8,
    DBLITERAL_ESCAPE_PERCENT=9,
    DBLITERAL_ESCAPE_UNDERSCORE=10,
    DBLITERAL_INDEX_NAME=11,
    DBLITERAL_INVALID=0,
    DBLITERAL_LIKE_PERCENT=12,
    DBLITERAL_LIKE_UNDERSCORE=13,
    DBLITERAL_PROCEDURE_NAME=14,
    DBLITERAL_QUOTE=15,
    DBLITERAL_SCHEMA_NAME=16,
    DBLITERAL_TABLE_NAME=17,
    DBLITERAL_TEXT_COMMAND=18,
    DBLITERAL_USER_NAME=19,
    DBLITERAL_VIEW_NAME=20
} DBLITERALENUM;

typedef enum DBLITERALENUM20 {
    DBLITERAL_CUBE_NAME=21,
    DBLITERAL_DIMENSION_NAME=22,
    DBLITERAL_HIERARCHY_NAME=23,
    DBLITERAL_LEVEL_NAME=24,
    DBLITERAL_MEMBER_NAME=25,
    DBLITERAL_PROPERTY_NAME=26,
    DBLITERAL_QUOTE_SUFFIX=28,
    DBLITERAL_SCHEMA_SEPARATOR=27
} DBLITERALENUM20;

typedef enum DBLITERALENUM21 {
    DBLITERAL_ESCAPE_PERCENT_SUFFIX=29,
    DBLITERAL_ESCAPE_UNDERSCORE_SUFFIX=30
} DBLITERALENUM21;

typedef struct tagDBLITERALINFO tagDBLITERALINFO, *PtagDBLITERALINFO;

typedef struct tagDBLITERALINFO DBLITERALINFO;

struct tagDBLITERALINFO {
    LPOLESTR pwszLiteralValue;
    LPOLESTR pwszInvalidChars;
    LPOLESTR pwszInvalidStartingChars;
    DBLITERAL lt;
    BOOL fSupported;
    ULONG cchMaxLen;
};

typedef enum DBMATCHTYPEENUM {
    DBMATCHTYPE_FULL=0,
    DBMATCHTYPE_NONE=1,
    DBMATCHTYPE_PARTIAL=2
} DBMATCHTYPEENUM;

typedef enum DBMEMOWNERENUM {
    DBMEMOWNER_CLIENTOWNED=0,
    DBMEMOWNER_PROVIDEROWNED=1
} DBMEMOWNERENUM;

typedef DWORD DBMOVEFLAGS;

typedef enum DBMOVEFLAGSENUM {
    DBMOVE_ALLOW_EMULATION=1024,
    DBMOVE_ASYNC=256,
    DBMOVE_ATOMIC=4096,
    DBMOVE_DONT_UPDATE_LINKS=512,
    DBMOVE_REPLACE_EXISTING=1
} DBMOVEFLAGSENUM;

typedef struct tagDBPARAMBINDINFO tagDBPARAMBINDINFO, *PtagDBPARAMBINDINFO;

typedef struct tagDBPARAMBINDINFO DBPARAMBINDINFO;

typedef DWORD DBPARAMFLAGS;

struct tagDBPARAMBINDINFO {
    LPOLESTR pwszDataSourceType;
    LPOLESTR pwszName;
    DBLENGTH ulParamSize;
    DBPARAMFLAGS dwFlags;
    BYTE bPrecision;
    BYTE bScale;
};

typedef enum DBPARAMFLAGSENUM {
    DBPARAMFLAGS_ISINPUT=1,
    DBPARAMFLAGS_ISLONG=128,
    DBPARAMFLAGS_ISNULLABLE=64,
    DBPARAMFLAGS_ISOUTPUT=2,
    DBPARAMFLAGS_ISSIGNED=16
} DBPARAMFLAGSENUM;

typedef enum DBPARAMFLAGSENUM20 {
    DBPARAMFLAGS_SCALEISNEGATIVE=256
} DBPARAMFLAGSENUM20;

typedef struct tagDBPARAMINFO tagDBPARAMINFO, *PtagDBPARAMINFO;

typedef struct tagDBPARAMINFO DBPARAMINFO;

struct tagDBPARAMINFO {
    DBPARAMFLAGS dwFlags;
    DBORDINAL iOrdinal;
    LPOLESTR pwszName;
    struct ITypeInfo * pTypeInfo;
    DBLENGTH ulParamSize;
    DBTYPE wType;
    BYTE bPrecision;
    BYTE bScale;
};

typedef enum DBPARAMIOENUM {
    DBPARAMIO_INPUT=1,
    DBPARAMIO_NOTPARAM=0,
    DBPARAMIO_OUTPUT=2
} DBPARAMIOENUM;

typedef struct tagDBPARAMS tagDBPARAMS, *PtagDBPARAMS;

typedef struct tagDBPARAMS DBPARAMS;

typedef ULONG_PTR HACCESSOR;

struct tagDBPARAMS {
    void * pData;
    DB_UPARAMS cParamSets;
    HACCESSOR hAccessor;
};

typedef enum DBPARTENUM {
    DBPART_INVALID=0,
    DBPART_LENGTH=2,
    DBPART_STATUS=4,
    DBPART_VALUE=1
} DBPARTENUM;

typedef DWORD DBPENDINGSTATUS;

typedef enum DBPENDINGSTATUSENUM {
    DBPENDINGSTATUS_CHANGED=2,
    DBPENDINGSTATUS_DELETED=4,
    DBPENDINGSTATUS_INVALIDROW=16,
    DBPENDINGSTATUS_NEW=1,
    DBPENDINGSTATUS_UNCHANGED=8
} DBPENDINGSTATUSENUM;

typedef DWORD DBPOSITIONFLAGS;

typedef enum DBPOSITIONFLAGSENUM {
    DBPOSITION_BOF=2,
    DBPOSITION_EOF=3,
    DBPOSITION_NOROW=1,
    DBPOSITION_OK=0
} DBPOSITIONFLAGSENUM;

typedef enum DBPROPENUM {
    DBPROP_ABORTPRESERVE=2,
    DBPROP_ACTIVESESSIONS=3,
    DBPROP_APPENDONLY=187,
    DBPROP_ASYNCTXNABORT=168,
    DBPROP_ASYNCTXNCOMMIT=4,
    DBPROP_AUTH_CACHE_AUTHINFO=5,
    DBPROP_AUTH_ENCRYPT_PASSWORD=6,
    DBPROP_AUTH_INTEGRATED=7,
    DBPROP_AUTH_MASK_PASSWORD=8,
    DBPROP_AUTH_PASSWORD=9,
    DBPROP_AUTH_PERSIST_ENCRYPTED=10,
    DBPROP_AUTH_PERSIST_SENSITIVE_AUTHINFO=11,
    DBPROP_AUTH_USERID=12,
    DBPROP_BLOCKINGSTORAGEOBJECTS=13,
    DBPROP_BOOKMARKS=14,
    DBPROP_BOOKMARKSKIPPED=15,
    DBPROP_BOOKMARKTYPE=16,
    DBPROP_BYREFACCESSORS=120,
    DBPROP_CACHEDEFERRED=17,
    DBPROP_CANFETCHBACKWARDS=18,
    DBPROP_CANHOLDROWS=19,
    DBPROP_CANSCROLLBACKWARDS=21,
    DBPROP_CATALOGLOCATION=22,
    DBPROP_CATALOGTERM=23,
    DBPROP_CATALOGUSAGE=24,
    DBPROP_CHANGEINSERTEDROWS=188,
    DBPROP_COLUMNDEFINITION=32,
    DBPROP_COLUMNRESTRICT=33,
    DBPROP_COL_AUTOINCREMENT=26,
    DBPROP_COL_DEFAULT=27,
    DBPROP_COL_DESCRIPTION=28,
    DBPROP_COL_FIXEDLENGTH=167,
    DBPROP_COL_NULLABLE=29,
    DBPROP_COL_PRIMARYKEY=30,
    DBPROP_COL_UNIQUE=31,
    DBPROP_COMMANDTIMEOUT=34,
    DBPROP_COMMITPRESERVE=35,
    DBPROP_CONCATNULLBEHAVIOR=36,
    DBPROP_CURRENTCATALOG=37,
    DBPROP_DATASOURCENAME=38,
    DBPROP_DATASOURCEREADONLY=39,
    DBPROP_DBMSNAME=40,
    DBPROP_DBMSVER=41,
    DBPROP_DEFERRED=42,
    DBPROP_DELAYSTORAGEOBJECTS=43,
    DBPROP_DSOTHREADMODEL=169,
    DBPROP_GROUPBY=44,
    DBPROP_HETEROGENEOUSTABLES=45,
    DBPROP_IAccessor=121,
    DBPROP_IColumnsInfo=122,
    DBPROP_IColumnsRowset=123,
    DBPROP_IConnectionPointContainer=124,
    DBPROP_IConvertType=194,
    DBPROP_IDENTIFIERCASE=46,
    DBPROP_ILockBytes=136,
    DBPROP_IMMOBILEROWS=47,
    DBPROP_INDEX_AUTOUPDATE=48,
    DBPROP_INDEX_CLUSTERED=49,
    DBPROP_INDEX_FILLFACTOR=50,
    DBPROP_INDEX_INITIALSIZE=51,
    DBPROP_INDEX_NULLCOLLATION=52,
    DBPROP_INDEX_NULLS=53,
    DBPROP_INDEX_PRIMARYKEY=54,
    DBPROP_INDEX_SORTBOOKMARKS=55,
    DBPROP_INDEX_TEMPINDEX=163,
    DBPROP_INDEX_TYPE=56,
    DBPROP_INDEX_UNIQUE=57,
    DBPROP_INIT_DATASOURCE=59,
    DBPROP_INIT_HWND=60,
    DBPROP_INIT_IMPERSONATION_LEVEL=61,
    DBPROP_INIT_LCID=186,
    DBPROP_INIT_LOCATION=62,
    DBPROP_INIT_MODE=63,
    DBPROP_INIT_PROMPT=64,
    DBPROP_INIT_PROTECTION_LEVEL=65,
    DBPROP_INIT_PROVIDERSTRING=160,
    DBPROP_INIT_TIMEOUT=66,
    DBPROP_IRowset=126,
    DBPROP_IRowsetChange=127,
    DBPROP_IRowsetIdentity=128,
    DBPROP_IRowsetIndex=159,
    DBPROP_IRowsetInfo=129,
    DBPROP_IRowsetLocate=130,
    DBPROP_IRowsetResynch=132,
    DBPROP_IRowsetScroll=133,
    DBPROP_IRowsetUpdate=134,
    DBPROP_ISequentialStream=137,
    DBPROP_IStorage=138,
    DBPROP_IStream=139,
    DBPROP_ISupportErrorInfo=135,
    DBPROP_LITERALBOOKMARKS=67,
    DBPROP_LITERALIDENTITY=68,
    DBPROP_MAXINDEXSIZE=70,
    DBPROP_MAXOPENROWS=71,
    DBPROP_MAXPENDINGROWS=72,
    DBPROP_MAXROWS=73,
    DBPROP_MAXROWSIZE=74,
    DBPROP_MAXROWSIZEINCLUDESBLOB=75,
    DBPROP_MAXTABLESINSELECT=76,
    DBPROP_MAYWRITECOLUMN=77,
    DBPROP_MEMORYUSAGE=78,
    DBPROP_MULTIPLEPARAMSETS=191,
    DBPROP_MULTIPLERESULTS=196,
    DBPROP_MULTIPLESTORAGEOBJECTS=80,
    DBPROP_MULTITABLEUPDATE=81,
    DBPROP_NOTIFICATIONGRANULARITY=198,
    DBPROP_NOTIFICATIONPHASES=82,
    DBPROP_NOTIFYCOLUMNSET=171,
    DBPROP_NOTIFYROWDELETE=173,
    DBPROP_NOTIFYROWFIRSTCHANGE=174,
    DBPROP_NOTIFYROWINSERT=175,
    DBPROP_NOTIFYROWRESYNCH=177,
    DBPROP_NOTIFYROWSETCHANGED=211,
    DBPROP_NOTIFYROWSETFETCHPOSITIONCHANGE=179,
    DBPROP_NOTIFYROWSETRELEASE=178,
    DBPROP_NOTIFYROWUNDOCHANGE=180,
    DBPROP_NOTIFYROWUNDODELETE=181,
    DBPROP_NOTIFYROWUNDOINSERT=182,
    DBPROP_NOTIFYROWUPDATE=183,
    DBPROP_NULLCOLLATION=83,
    DBPROP_OLEOBJECTS=84,
    DBPROP_ORDERBYCOLUMNSINSELECT=85,
    DBPROP_ORDEREDBOOKMARKS=86,
    DBPROP_OTHERINSERT=87,
    DBPROP_OTHERUPDATEDELETE=88,
    DBPROP_OUTPUTPARAMETERAVAILABILITY=184,
    DBPROP_OWNINSERT=89,
    DBPROP_OWNUPDATEDELETE=90,
    DBPROP_PERSISTENTIDTYPE=185,
    DBPROP_PREPAREABORTBEHAVIOR=91,
    DBPROP_PREPARECOMMITBEHAVIOR=92,
    DBPROP_PROCEDURETERM=93,
    DBPROP_PROVIDERNAME=96,
    DBPROP_PROVIDEROLEDBVER=97,
    DBPROP_PROVIDERVER=98,
    DBPROP_QUICKRESTART=99,
    DBPROP_QUOTEDIDENTIFIERCASE=100,
    DBPROP_REENTRANTEVENTS=101,
    DBPROP_REMOVEDELETED=102,
    DBPROP_REPORTMULTIPLECHANGES=103,
    DBPROP_RETURNPENDINGINSERTS=189,
    DBPROP_ROWRESTRICT=104,
    DBPROP_ROWSETCONVERSIONSONCOMMAND=192,
    DBPROP_ROWTHREADMODEL=105,
    DBPROP_SCHEMATERM=106,
    DBPROP_SCHEMAUSAGE=107,
    DBPROP_SERVERCURSOR=108,
    DBPROP_SESS_AUTOCOMMITISOLEVELS=190,
    DBPROP_SQLSUPPORT=109,
    DBPROP_STRONGIDENTITY=119,
    DBPROP_STRUCTUREDSTORAGE=111,
    DBPROP_SUBQUERIES=112,
    DBPROP_SUPPORTEDTXNDDL=161,
    DBPROP_SUPPORTEDTXNISOLEVELS=113,
    DBPROP_SUPPORTEDTXNISORETAIN=114,
    DBPROP_TABLETERM=115,
    DBPROP_TBL_TEMPTABLE=140,
    DBPROP_TRANSACTEDOBJECT=116,
    DBPROP_UPDATABILITY=117,
    DBPROP_USERNAME=118
} DBPROPENUM;

typedef enum DBPROPENUM15 {
    DBPROP_FILTERCOMPAREOPS=209,
    DBPROP_FINDCOMPAREOPS=210,
    DBPROP_IChapteredRowset=202,
    DBPROP_IDBAsynchStatus=203,
    DBPROP_INIT_ASYNCH=200,
    DBPROP_IRowsetFind=204,
    DBPROP_IRowsetView=212,
    DBPROP_IViewChapter=213,
    DBPROP_IViewFilter=214,
    DBPROP_IViewRowset=215,
    DBPROP_IViewSort=216,
    DBPROP_MAXOPENCHAPTERS=199,
    DBPROP_MAXORSINFILTER=205,
    DBPROP_MAXSORTCOLUMNS=206,
    DBPROP_ROWSET_ASYNCH=201,
    DBPROP_SORTONINDEX=207
} DBPROPENUM15;

typedef enum DBPROPENUM20 {
    DBPROP_ACCESSORDER=231,
    DBPROP_ALTERCOLUMN=245,
    DBPROP_BOOKMARKINFO=232,
    DBPROP_CLIENTCURSOR=260,
    DBPROP_COLUMNLCID=246,
    DBPROP_CONNECTIONSTATUS=244,
    DBPROP_DATASOURCE_TYPE=251,
    DBPROP_HIDDENCOLUMNS=258,
    DBPROP_IMultipleResults=217,
    DBPROP_INIT_CATALOG=233,
    DBPROP_INIT_OLEDBSERVICES=248,
    DBPROP_IParentRowset=257,
    DBPROP_IRowsetRefresh=249,
    DBPROP_LOCKMODE=236,
    DBPROP_MULTIPLECONNECTIONS=237,
    DBPROP_PROVIDERFRIENDLYNAME=235,
    DBPROP_PROVIDERMEMORY=259,
    DBPROP_RESETDATASOURCE=247,
    DBPROP_ROW_BULKOPS=234,
    DBPROP_SERVERDATAONINSERT=239,
    DBPROP_SERVERNAME=250,
    DBPROP_STORAGEFLAGS=240,
    DBPROP_UNIQUEROWS=238,
    MDPROP_AGGREGATECELL_UPDATE=230,
    MDPROP_AXES=252,
    MDPROP_FLATTENING_SUPPORT=253,
    MDPROP_MDX_AGGREGATECELL_UPDATE=231,
    MDPROP_MDX_CASESUPPORT=222,
    MDPROP_MDX_CUBEQUALIFICATION=219,
    MDPROP_MDX_DESCFLAGS=225,
    MDPROP_MDX_FORMULAS=229,
    MDPROP_MDX_JOINCUBES=254,
    MDPROP_MDX_MEMBER_FUNCTIONS=227,
    MDPROP_MDX_NONMEASURE_EXPRESSIONS=262,
    MDPROP_MDX_NUMERIC_FUNCTIONS=228,
    MDPROP_MDX_OBJQUALIFICATION=261,
    MDPROP_MDX_OUTERREFERENCE=220,
    MDPROP_MDX_QUERYBYPROPERTY=221,
    MDPROP_MDX_SET_FUNCTIONS=226,
    MDPROP_MDX_SLICER=218,
    MDPROP_MDX_STRING_COMPOP=224,
    MDPROP_NAMED_LEVELS=255,
    MDPROP_RANGEROWSET=256
} DBPROPENUM20;

typedef enum DBPROPENUM21 {
    DBPROP_COL_ISLONG=281,
    DBPROP_GENERATEURL=273,
    DBPROP_IBindResource=268,
    DBPROP_IColumnsInfo2=275,
    DBPROP_ICreateRow=269,
    DBPROP_IDBBinderProperties=274,
    DBPROP_IGetRow=266,
    DBPROP_IGetSession=277,
    DBPROP_IGetSourceRow=278,
    DBPROP_INIT_BINDFLAGS=270,
    DBPROP_INIT_LOCKOWNER=271,
    DBPROP_IRegisterProvider=276,
    DBPROP_IRow=263,
    DBPROP_IRowChange=264,
    DBPROP_IRowSchemaChange=265,
    DBPROP_IRowsetCurrentIndex=279,
    DBPROP_IScopedOperations=267,
    DBPROP_OPENROWSETSUPPORT=280,
    DBPROP_TRUSTEE_AUTHENTICATION=242,
    DBPROP_TRUSTEE_NEWAUTHENTICATION=243,
    DBPROP_TRUSTEE_USERNAME=241
} DBPROPENUM21;

typedef enum DBPROPENUM25 {
    DBPROP_COL_INCREMENT=283,
    DBPROP_COL_SEED=282,
    DBPROP_COMSERVICES=285,
    DBPROP_INIT_GENERALTIMEOUT=284
} DBPROPENUM25;

typedef enum DBPROPENUM26 {
    DBPROP_IRowsetBookmark=292,
    DBPROP_OUTPUTENCODING=287,
    DBPROP_OUTPUTSTREAM=286,
    DBPROP_SKIPROWCOUNTRESULTS=291,
    DBPROP_TABLESTATISTICS=288,
    MDPROP_VISUALMODE=293
} DBPROPENUM26;

typedef DWORD DBPROPFLAGS;

typedef enum DBPROPFLAGSENUM {
    DBPROPFLAGS_COLUMN=1,
    DBPROPFLAGS_COLUMNOK=256,
    DBPROPFLAGS_DATASOURCE=2,
    DBPROPFLAGS_DATASOURCECREATE=4,
    DBPROPFLAGS_DATASOURCEINFO=8,
    DBPROPFLAGS_DBINIT=16,
    DBPROPFLAGS_INDEX=32,
    DBPROPFLAGS_NOTSUPPORTED=0,
    DBPROPFLAGS_READ=512,
    DBPROPFLAGS_REQUIRED=2048,
    DBPROPFLAGS_ROWSET=64,
    DBPROPFLAGS_SESSION=4096,
    DBPROPFLAGS_TABLE=128,
    DBPROPFLAGS_WRITE=1024
} DBPROPFLAGSENUM;

typedef enum DBPROPFLAGSENUM21 {
    DBPROPFLAGS_TRUSTEE=8192
} DBPROPFLAGSENUM21;

typedef enum DBPROPFLAGSENUM25 {
    DBPROPFLAGS_VIEW=16384
} DBPROPFLAGSENUM25;

typedef enum DBPROPFLAGSENUM26 {
    DBPROPFLAGS_STREAM=32768
} DBPROPFLAGSENUM26;

typedef struct tagDBPROPIDSET tagDBPROPIDSET, *PtagDBPROPIDSET;

typedef struct tagDBPROPIDSET DBPROPIDSET;

struct tagDBPROPIDSET {
    DBPROPID * rgPropertyIDs;
    ULONG cPropertyIDs;
    GUID guidPropertySet;
};

typedef struct tagDBPROPINFO tagDBPROPINFO, *PtagDBPROPINFO;

typedef struct tagDBPROPINFO DBPROPINFO;

struct tagDBPROPINFO {
    LPOLESTR pwszDescription;
    DBPROPID dwPropertyID;
    DBPROPFLAGS dwFlags;
    VARTYPE vtType;
    VARIANT vValues;
};

typedef struct tagDBPROPINFOSET tagDBPROPINFOSET, *PtagDBPROPINFOSET;

typedef struct tagDBPROPINFOSET DBPROPINFOSET;

typedef DBPROPINFO * PDBPROPINFO;

struct tagDBPROPINFOSET {
    PDBPROPINFO rgPropertyInfos;
    ULONG cPropertyInfos;
    GUID guidPropertySet;
};

typedef enum DBPROPOPTIONSENUM {
    DBPROPOPTIONS_OPTIONAL=1,
    DBPROPOPTIONS_REQUIRED=0,
    DBPROPOPTIONS_SETIFCHEAP=1
} DBPROPOPTIONSENUM;

typedef enum DBPROPSTATUSENUM {
    DBPROPSTATUS_BADCOLUMN=4,
    DBPROPSTATUS_BADOPTION=3,
    DBPROPSTATUS_BADVALUE=2,
    DBPROPSTATUS_CONFLICTING=8,
    DBPROPSTATUS_NOTALLSETTABLE=5,
    DBPROPSTATUS_NOTSET=7,
    DBPROPSTATUS_NOTSETTABLE=6,
    DBPROPSTATUS_NOTSUPPORTED=1,
    DBPROPSTATUS_OK=0
} DBPROPSTATUSENUM;

typedef enum DBPROPSTATUSENUM21 {
    DBPROPSTATUS_NOTAVAILABLE=9
} DBPROPSTATUSENUM21;

typedef DWORD DBRANGE;

typedef enum DBRANGEENUM {
    DBRANGE_EXCLUDENULLS=4,
    DBRANGE_EXCLUSIVEEND=2,
    DBRANGE_EXCLUSIVESTART=1,
    DBRANGE_INCLUSIVEEND=0,
    DBRANGE_INCLUSIVESTART=0,
    DBRANGE_MATCH=16,
    DBRANGE_PREFIX=8
} DBRANGEENUM;

typedef enum DBRANGEENUM20 {
    DBRANGE_MATCH_N_MASK=255,
    DBRANGE_MATCH_N_SHIFT=24
} DBRANGEENUM20;

typedef DWORD DBREASON;

typedef enum DBREASONENUM {
    DBREASON_COLUMN_RECALCULATED=3,
    DBREASON_COLUMN_SET=2,
    DBREASON_ROWSET_CHANGED=14,
    DBREASON_ROWSET_FETCHPOSITIONCHANGE=0,
    DBREASON_ROWSET_RELEASE=1,
    DBREASON_ROW_ACTIVATE=4,
    DBREASON_ROW_DELETE=6,
    DBREASON_ROW_FIRSTCHANGE=7,
    DBREASON_ROW_INSERT=8,
    DBREASON_ROW_RELEASE=5,
    DBREASON_ROW_RESYNCH=9,
    DBREASON_ROW_UNDOCHANGE=10,
    DBREASON_ROW_UNDODELETE=12,
    DBREASON_ROW_UNDOINSERT=11,
    DBREASON_ROW_UPDATE=13
} DBREASONENUM;

typedef enum DBREASONENUM15 {
    DBREASON_ROWPOSITION_CHANGED=0,
    DBREASON_ROWPOSITION_CHAPTERCHANGED=1,
    DBREASON_ROWPOSITION_CLEARED=2,
    DBREASON_ROW_ASYNCHINSERT=3
} DBREASONENUM15;

typedef ULONG DBREFCOUNT;

typedef DB_LRESERVE DBRESULTFLAG;

typedef enum DBRESULTFLAGENUM {
    DBRESULTFLAG_DEFAULT=0,
    DBRESULTFLAG_ROW=2,
    DBRESULTFLAG_ROWSET=1
} DBRESULTFLAGENUM;

typedef LONG DBROWCOUNT;

typedef LONG DBROWOFFSET;

typedef DWORD DBROWOPTIONS;

typedef DWORD DBROWSTATUS;

typedef enum DBROWSTATUSENUM {
    DBROWSTATUS_E_CANCELED=4,
    DBROWSTATUS_E_CANTRELEASE=6,
    DBROWSTATUS_E_CONCURRENCYVIOLATION=7,
    DBROWSTATUS_E_DELETED=8,
    DBROWSTATUS_E_FAIL=19,
    DBROWSTATUS_E_INTEGRITYVIOLATION=11,
    DBROWSTATUS_E_INVALID=12,
    DBROWSTATUS_E_LIMITREACHED=17,
    DBROWSTATUS_E_MAXPENDCHANGESEXCEEDED=13,
    DBROWSTATUS_E_NEWLYINSERTED=10,
    DBROWSTATUS_E_OBJECTOPEN=14,
    DBROWSTATUS_E_OUTOFMEMORY=15,
    DBROWSTATUS_E_PENDINGINSERT=9,
    DBROWSTATUS_E_PERMISSIONDENIED=16,
    DBROWSTATUS_E_SCHEMAVIOLATION=18,
    DBROWSTATUS_S_MULTIPLECHANGES=2,
    DBROWSTATUS_S_OK=0,
    DBROWSTATUS_S_PENDINGCHANGES=3
} DBROWSTATUSENUM;

typedef enum DBROWSTATUSENUM20 {
    DBROWSTATUS_S_NOCHANGE=20
} DBROWSTATUSENUM20;

typedef DWORD DBSEEK;

typedef enum DBSEEKENUM {
    DBSEEK_AFTER=8,
    DBSEEK_AFTEREQ=4,
    DBSEEK_BEFORE=32,
    DBSEEK_BEFOREEQ=16,
    DBSEEK_FIRSTEQ=1,
    DBSEEK_INVALID=0,
    DBSEEK_LASTEQ=2
} DBSEEKENUM;

typedef DWORD DBSORT;

typedef enum DBSORTENUM {
    DBSORT_ASCENDING=0,
    DBSORT_DESCENDING=1
} DBSORTENUM;

typedef DWORD DBSOURCETYPE;

typedef enum DBSOURCETYPEENUM {
    DBSOURCETYPE_DATASOURCE=1,
    DBSOURCETYPE_ENUMERATOR=2
} DBSOURCETYPEENUM;

typedef enum DBSOURCETYPEENUM20 {
    DBSOURCETYPE_DATASOURCE_MDP=3,
    DBSOURCETYPE_DATASOURCE_TDP=1
} DBSOURCETYPEENUM20;

typedef enum DBSOURCETYPEENUM25 {
    DBSOURCETYPE_BINDER=4
} DBSOURCETYPEENUM25;

typedef enum DBSTATUSENUM {
    DBSTATUS_E_BADACCESSOR=1,
    DBSTATUS_E_BADSTATUS=12,
    DBSTATUS_E_CANTCONVERTVALUE=2,
    DBSTATUS_E_CANTCREATE=7,
    DBSTATUS_E_DATAOVERFLOW=6,
    DBSTATUS_E_INTEGRITYVIOLATION=10,
    DBSTATUS_E_PERMISSIONDENIED=9,
    DBSTATUS_E_SCHEMAVIOLATION=11,
    DBSTATUS_E_SIGNMISMATCH=5,
    DBSTATUS_E_UNAVAILABLE=8,
    DBSTATUS_S_DEFAULT=13,
    DBSTATUS_S_ISNULL=3,
    DBSTATUS_S_OK=0,
    DBSTATUS_S_TRUNCATED=4
} DBSTATUSENUM;

typedef enum DBSTATUSENUM20 {
    DBSTATUS_S_IGNORE=15,
    MDSTATUS_S_CELLEMPTY=14
} DBSTATUSENUM20;

typedef enum DBSTATUSENUM21 {
    DBSTATUS_E_CANNOTCOMPLETE=20,
    DBSTATUS_E_DOESNOTEXIST=16,
    DBSTATUS_E_INVALIDURL=17,
    DBSTATUS_E_OUTOFSPACE=22,
    DBSTATUS_E_READONLY=24,
    DBSTATUS_E_RESOURCEEXISTS=19,
    DBSTATUS_E_RESOURCELOCKED=18,
    DBSTATUS_E_RESOURCEOUTOFSCOPE=25,
    DBSTATUS_E_VOLUMENOTFOUND=21,
    DBSTATUS_S_ALREADYEXISTS=26,
    DBSTATUS_S_CANNOTDELETESOURCE=23
} DBSTATUSENUM21;

typedef enum DBSTATUSENUM25 {
    DBSTATUS_E_CANCELED=27,
    DBSTATUS_E_NOTCOLLECTION=28
} DBSTATUSENUM25;

typedef enum DBSTATUSENUM26 {
    DBSTATUS_S_ROWSETCOLUMN=29
} DBSTATUSENUM26;

typedef enum DBTABLESTATISTICSTYPE26 {
    DBSTAT_COLUMN_CARDINALITY=2,
    DBSTAT_HISTOGRAM=1,
    DBSTAT_TUPLE_CARDINALITY=4
} DBTABLESTATISTICSTYPE26;

typedef struct tagDBTIME tagDBTIME, *PtagDBTIME;

typedef struct tagDBTIME DBTIME;

struct tagDBTIME {
    USHORT hour;
    USHORT minute;
    USHORT second;
};

typedef struct tagDBTIMESTAMP tagDBTIMESTAMP, *PtagDBTIMESTAMP;

typedef struct tagDBTIMESTAMP DBTIMESTAMP;

struct tagDBTIMESTAMP {
    SHORT year;
    USHORT month;
    USHORT day;
    USHORT hour;
    USHORT minute;
    USHORT second;
    ULONG fraction;
};

typedef enum DBTYPEENUM {
    DBTYPE_ARRAY=8192,
    DBTYPE_BOOL=11,
    DBTYPE_BSTR=8,
    DBTYPE_BYREF=16384,
    DBTYPE_BYTES=128,
    DBTYPE_CY=6,
    DBTYPE_DATE=7,
    DBTYPE_DBDATE=133,
    DBTYPE_DBTIME=134,
    DBTYPE_DBTIMESTAMP=135,
    DBTYPE_DECIMAL=14,
    DBTYPE_EMPTY=0,
    DBTYPE_ERROR=10,
    DBTYPE_GUID=72,
    DBTYPE_I1=16,
    DBTYPE_I2=2,
    DBTYPE_I4=3,
    DBTYPE_I8=20,
    DBTYPE_IDISPATCH=9,
    DBTYPE_IUNKNOWN=13,
    DBTYPE_NULL=1,
    DBTYPE_NUMERIC=131,
    DBTYPE_R4=4,
    DBTYPE_R8=5,
    DBTYPE_RESERVED=32768,
    DBTYPE_STR=129,
    DBTYPE_UDT=132,
    DBTYPE_UI1=17,
    DBTYPE_UI2=18,
    DBTYPE_UI4=19,
    DBTYPE_UI8=21,
    DBTYPE_VARIANT=12,
    DBTYPE_VECTOR=4096,
    DBTYPE_WSTR=130
} DBTYPEENUM;

typedef enum DBTYPEENUM15 {
    DBTYPE_HCHAPTER=136
} DBTYPEENUM15;

typedef enum DBTYPEENUM20 {
    DBTYPE_FILETIME=64,
    DBTYPE_PROPVARIANT=138,
    DBTYPE_VARNUMERIC=139
} DBTYPEENUM20;

typedef enum DBUPDELRULEENUM {
    DBUPDELRULE_CASCADE=1,
    DBUPDELRULE_NOACTION=0,
    DBUPDELRULE_SETDEFAULT=3,
    DBUPDELRULE_SETNULL=2
} DBUPDELRULEENUM;

typedef struct tagDBVECTOR tagDBVECTOR, *PtagDBVECTOR;

typedef struct tagDBVECTOR DBVECTOR;

struct tagDBVECTOR {
    DBLENGTH size;
    void * ptr;
};

typedef struct tagERRORINFO tagERRORINFO, *PtagERRORINFO;

typedef struct tagERRORINFO ERRORINFO;

struct tagERRORINFO {
    HRESULT hrError;
    DWORD dwMinor;
    CLSID clsid;
    IID iid;
    DISPID dispid;
};

typedef ULONG_PTR HCHAPTER;

typedef ULONG_PTR HWATCHREGION;

typedef struct IAccessor IAccessor, *PIAccessor;

typedef struct IAccessorVtbl IAccessorVtbl, *PIAccessorVtbl;

struct IAccessor {
    struct IAccessorVtbl * lpVtbl;
};

struct IAccessorVtbl {
    HRESULT (* QueryInterface)(struct IAccessor *, IID *, void * *);
    ULONG (* AddRef)(struct IAccessor *);
    ULONG (* Release)(struct IAccessor *);
    HRESULT (* AddRefAccessor)(struct IAccessor *, HACCESSOR, DBREFCOUNT *);
    HRESULT (* CreateAccessor)(struct IAccessor *, DBACCESSORFLAGS, DBCOUNTITEM, DBBINDING *, DBLENGTH, HACCESSOR *, DBBINDSTATUS *);
    HRESULT (* GetBindings)(struct IAccessor *, HACCESSOR, DBACCESSORFLAGS *, DBCOUNTITEM *, DBBINDING * *);
    HRESULT (* ReleaseAccessor)(struct IAccessor *, HACCESSOR, DBREFCOUNT *);
};

typedef struct IAlterIndex IAlterIndex, *PIAlterIndex;

typedef struct IAlterIndexVtbl IAlterIndexVtbl, *PIAlterIndexVtbl;

struct IAlterIndexVtbl {
    HRESULT (* QueryInterface)(struct IAlterIndex *, IID *, void * *);
    ULONG (* AddRef)(struct IAlterIndex *);
    ULONG (* Release)(struct IAlterIndex *);
    HRESULT (* AlterIndex)(struct IAlterIndex *, DBID *, DBID *, DBID *, ULONG, DBPROPSET *);
};

struct IAlterIndex {
    struct IAlterIndexVtbl * lpVtbl;
};

typedef struct IAlterTable IAlterTable, *PIAlterTable;

typedef struct IAlterTableVtbl IAlterTableVtbl, *PIAlterTableVtbl;

struct IAlterTableVtbl {
    HRESULT (* QueryInterface)(struct IAlterTable *, IID *, void * *);
    ULONG (* AddRef)(struct IAlterTable *);
    ULONG (* Release)(struct IAlterTable *);
    HRESULT (* AlterColumn)(struct IAlterTable *, DBID *, DBID *, DBCOLUMNDESCFLAGS, DBCOLUMNDESC *);
    HRESULT (* AlterTable)(struct IAlterTable *, DBID *, DBID *, ULONG, DBPROPSET *);
};

struct IAlterTable {
    struct IAlterTableVtbl * lpVtbl;
};

typedef struct IBindResource IBindResource, *PIBindResource;

typedef struct IBindResourceVtbl IBindResourceVtbl, *PIBindResourceVtbl;

typedef struct IAuthenticate IAuthenticate, *PIAuthenticate;

typedef struct IAuthenticateVtbl IAuthenticateVtbl, *PIAuthenticateVtbl;

struct IAuthenticate {
    struct IAuthenticateVtbl * lpVtbl;
};

struct IAuthenticateVtbl {
    HRESULT (* QueryInterface)(struct IAuthenticate *, IID *, void * *);
    ULONG (* AddRef)(struct IAuthenticate *);
    ULONG (* Release)(struct IAuthenticate *);
    HRESULT (* Authenticate)(struct IAuthenticate *, HWND *, LPWSTR *, LPWSTR *);
};

struct IBindResource {
    struct IBindResourceVtbl * lpVtbl;
};

struct IBindResourceVtbl {
    HRESULT (* QueryInterface)(struct IBindResource *, IID *, void * *);
    ULONG (* AddRef)(struct IBindResource *);
    ULONG (* Release)(struct IBindResource *);
    HRESULT (* Bind)(struct IBindResource *, struct IUnknown *, LPCOLESTR, DBBINDURLFLAG, GUID *, IID *, struct IAuthenticate *, DBIMPLICITSESSION *, DBBINDURLSTATUS *, struct IUnknown * *);
};

typedef struct IChapteredRowset IChapteredRowset, *PIChapteredRowset;

typedef struct IChapteredRowsetVtbl IChapteredRowsetVtbl, *PIChapteredRowsetVtbl;

struct IChapteredRowset {
    struct IChapteredRowsetVtbl * lpVtbl;
};

struct IChapteredRowsetVtbl {
    HRESULT (* QueryInterface)(struct IChapteredRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IChapteredRowset *);
    ULONG (* Release)(struct IChapteredRowset *);
    HRESULT (* AddRefChapter)(struct IChapteredRowset *, HCHAPTER, DBREFCOUNT *);
    HRESULT (* ReleaseChapter)(struct IChapteredRowset *, HCHAPTER, DBREFCOUNT *);
};

typedef struct IColumnsInfo IColumnsInfo, *PIColumnsInfo;

typedef struct IColumnsInfoVtbl IColumnsInfoVtbl, *PIColumnsInfoVtbl;

struct IColumnsInfoVtbl {
    HRESULT (* QueryInterface)(struct IColumnsInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IColumnsInfo *);
    ULONG (* Release)(struct IColumnsInfo *);
    HRESULT (* GetColumnInfo)(struct IColumnsInfo *, DBORDINAL *, DBCOLUMNINFO * *, OLECHAR * *);
    HRESULT (* MapColumnIDs)(struct IColumnsInfo *, DBORDINAL, DBID *, DBORDINAL *);
};

struct IColumnsInfo {
    struct IColumnsInfoVtbl * lpVtbl;
};

typedef struct IColumnsInfo2 IColumnsInfo2, *PIColumnsInfo2;

typedef struct IColumnsInfo2Vtbl IColumnsInfo2Vtbl, *PIColumnsInfo2Vtbl;

struct IColumnsInfo2Vtbl {
    HRESULT (* QueryInterface)(struct IColumnsInfo2 *, IID *, void * *);
    ULONG (* AddRef)(struct IColumnsInfo2 *);
    ULONG (* Release)(struct IColumnsInfo2 *);
    HRESULT (* GetColumnInfo)(struct IColumnsInfo2 *, DBORDINAL *, DBCOLUMNINFO * *, OLECHAR * *);
    HRESULT (* MapColumnIDs)(struct IColumnsInfo2 *, DBORDINAL, DBID *, DBORDINAL *);
    HRESULT (* GetRestrictedColumnInfo)(struct IColumnsInfo2 *, DBORDINAL, DBID *, DWORD, DBORDINAL *, DBID * *, DBCOLUMNINFO * *, OLECHAR * *);
};

struct IColumnsInfo2 {
    struct IColumnsInfo2Vtbl * lpVtbl;
};

typedef struct IColumnsRowset IColumnsRowset, *PIColumnsRowset;

typedef struct IColumnsRowsetVtbl IColumnsRowsetVtbl, *PIColumnsRowsetVtbl;

struct IColumnsRowset {
    struct IColumnsRowsetVtbl * lpVtbl;
};

struct IColumnsRowsetVtbl {
    HRESULT (* QueryInterface)(struct IColumnsRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IColumnsRowset *);
    ULONG (* Release)(struct IColumnsRowset *);
    HRESULT (* GetAvailableColumns)(struct IColumnsRowset *, DBORDINAL *, DBID * *);
    HRESULT (* GetColumnsRowset)(struct IColumnsRowset *, struct IUnknown *, DBORDINAL, DBID *, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
};

typedef struct ICommand ICommand, *PICommand;

typedef struct ICommandVtbl ICommandVtbl, *PICommandVtbl;

struct ICommandVtbl {
    HRESULT (* QueryInterface)(struct ICommand *, IID *, void * *);
    ULONG (* AddRef)(struct ICommand *);
    ULONG (* Release)(struct ICommand *);
    HRESULT (* Cancel)(struct ICommand *);
    HRESULT (* Execute)(struct ICommand *, struct IUnknown *, IID *, DBPARAMS *, DBROWCOUNT *, struct IUnknown * *);
    HRESULT (* GetDBSession)(struct ICommand *, IID *, struct IUnknown * *);
};

struct ICommand {
    struct ICommandVtbl * lpVtbl;
};

typedef struct ICommandPersist ICommandPersist, *PICommandPersist;

typedef struct ICommandPersistVtbl ICommandPersistVtbl, *PICommandPersistVtbl;

struct ICommandPersist {
    struct ICommandPersistVtbl * lpVtbl;
};

struct ICommandPersistVtbl {
    HRESULT (* QueryInterface)(struct ICommandPersist *, IID *, void * *);
    ULONG (* AddRef)(struct ICommandPersist *);
    ULONG (* Release)(struct ICommandPersist *);
    HRESULT (* DeleteCommand)(struct ICommandPersist *, DBID *);
    HRESULT (* GetCurrentCommand)(struct ICommandPersist *, DBID * *);
    HRESULT (* LoadCommand)(struct ICommandPersist *, DBID *, DWORD);
    HRESULT (* SaveCommand)(struct ICommandPersist *, DBID *, DWORD);
};

typedef struct ICommandPrepare ICommandPrepare, *PICommandPrepare;

typedef struct ICommandPrepareVtbl ICommandPrepareVtbl, *PICommandPrepareVtbl;

struct ICommandPrepare {
    struct ICommandPrepareVtbl * lpVtbl;
};

struct ICommandPrepareVtbl {
    HRESULT (* QueryInterface)(struct ICommandPrepare *, IID *, void * *);
    ULONG (* AddRef)(struct ICommandPrepare *);
    ULONG (* Release)(struct ICommandPrepare *);
    HRESULT (* Prepare)(struct ICommandPrepare *, ULONG);
    HRESULT (* Unprepare)(struct ICommandPrepare *);
};

typedef struct ICommandProperties ICommandProperties, *PICommandProperties;

typedef struct ICommandPropertiesVtbl ICommandPropertiesVtbl, *PICommandPropertiesVtbl;

struct ICommandPropertiesVtbl {
    HRESULT (* QueryInterface)(struct ICommandProperties *, IID *, void * *);
    ULONG (* AddRef)(struct ICommandProperties *);
    ULONG (* Release)(struct ICommandProperties *);
    HRESULT (* GetProperties)(struct ICommandProperties *, ULONG, DBPROPIDSET *, ULONG *, DBPROPSET * *);
    HRESULT (* SetProperties)(struct ICommandProperties *, ULONG, DBPROPSET *);
};

struct ICommandProperties {
    struct ICommandPropertiesVtbl * lpVtbl;
};

typedef struct ICommandStream ICommandStream, *PICommandStream;

typedef struct ICommandStreamVtbl ICommandStreamVtbl, *PICommandStreamVtbl;

struct ICommandStreamVtbl {
    HRESULT (* QueryInterface)(struct ICommandStream *, IID *, void * *);
    ULONG (* AddRef)(struct ICommandStream *);
    ULONG (* Release)(struct ICommandStream *);
    HRESULT (* GetCommandStream)(struct ICommandStream *, IID *, GUID *, struct IUnknown * *);
    HRESULT (* SetCommandStream)(struct ICommandStream *, IID *, GUID *, struct IUnknown *);
};

struct ICommandStream {
    struct ICommandStreamVtbl * lpVtbl;
};

typedef struct ICommandText ICommandText, *PICommandText;

typedef struct ICommandTextVtbl ICommandTextVtbl, *PICommandTextVtbl;

struct ICommandTextVtbl {
    HRESULT (* QueryInterface)(struct ICommandText *, IID *, void * *);
    ULONG (* AddRef)(struct ICommandText *);
    ULONG (* Release)(struct ICommandText *);
    HRESULT (* Cancel)(struct ICommandText *);
    HRESULT (* Execute)(struct ICommandText *, struct IUnknown *, IID *, DBPARAMS *, DBROWCOUNT *, struct IUnknown * *);
    HRESULT (* GetDBSession)(struct ICommandText *, IID *, struct IUnknown * *);
    HRESULT (* GetCommandText)(struct ICommandText *, GUID *, LPOLESTR *);
    HRESULT (* SetCommandText)(struct ICommandText *, GUID *, LPCOLESTR);
};

struct ICommandText {
    struct ICommandTextVtbl * lpVtbl;
};

typedef struct ICommandWithParameters ICommandWithParameters, *PICommandWithParameters;

typedef struct ICommandWithParametersVtbl ICommandWithParametersVtbl, *PICommandWithParametersVtbl;

struct ICommandWithParametersVtbl {
    HRESULT (* QueryInterface)(struct ICommandWithParameters *, IID *, void * *);
    ULONG (* AddRef)(struct ICommandWithParameters *);
    ULONG (* Release)(struct ICommandWithParameters *);
    HRESULT (* GetParameterInfo)(struct ICommandWithParameters *, DB_UPARAMS *, DBPARAMINFO * *, OLECHAR * *);
    HRESULT (* MapParameterNames)(struct ICommandWithParameters *, DB_UPARAMS, OLECHAR * *, DB_LPARAMS *);
    HRESULT (* SetParameterInfo)(struct ICommandWithParameters *, DB_UPARAMS, DB_UPARAMS *, DBPARAMBINDINFO *);
};

struct ICommandWithParameters {
    struct ICommandWithParametersVtbl * lpVtbl;
};

typedef struct IConvertType IConvertType, *PIConvertType;

typedef struct IConvertTypeVtbl IConvertTypeVtbl, *PIConvertTypeVtbl;

struct IConvertType {
    struct IConvertTypeVtbl * lpVtbl;
};

struct IConvertTypeVtbl {
    HRESULT (* QueryInterface)(struct IConvertType *, IID *, void * *);
    ULONG (* AddRef)(struct IConvertType *);
    ULONG (* Release)(struct IConvertType *);
    HRESULT (* CanConvert)(struct IConvertType *, DBTYPE, DBTYPE, DBCONVERTFLAGS);
};

typedef struct ICreateRow ICreateRow, *PICreateRow;

typedef struct ICreateRowVtbl ICreateRowVtbl, *PICreateRowVtbl;

struct ICreateRowVtbl {
    HRESULT (* QueryInterface)(struct ICreateRow *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateRow *);
    ULONG (* Release)(struct ICreateRow *);
    HRESULT (* CreateRow)(struct ICreateRow *, struct IUnknown *, LPCOLESTR, DBBINDURLFLAG, GUID *, IID *, struct IAuthenticate *, DBIMPLICITSESSION *, DBBINDURLSTATUS *, LPOLESTR *, struct IUnknown * *);
};

struct ICreateRow {
    struct ICreateRowVtbl * lpVtbl;
};

typedef struct IDBAsynchNotify IDBAsynchNotify, *PIDBAsynchNotify;

typedef struct IDBAsynchNotifyVtbl IDBAsynchNotifyVtbl, *PIDBAsynchNotifyVtbl;

struct IDBAsynchNotify {
    struct IDBAsynchNotifyVtbl * lpVtbl;
};

struct IDBAsynchNotifyVtbl {
    HRESULT (* QueryInterface)(struct IDBAsynchNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IDBAsynchNotify *);
    ULONG (* Release)(struct IDBAsynchNotify *);
    HRESULT (* OnLowResource)(struct IDBAsynchNotify *, DB_DWRESERVE);
    HRESULT (* OnProgress)(struct IDBAsynchNotify *, HCHAPTER, DBASYNCHOP, DBCOUNTITEM, DBCOUNTITEM, DBASYNCHPHASE, LPOLESTR);
    HRESULT (* OnStop)(struct IDBAsynchNotify *, HCHAPTER, DBASYNCHOP, HRESULT, LPOLESTR);
};

typedef struct IDBAsynchStatus IDBAsynchStatus, *PIDBAsynchStatus;

typedef struct IDBAsynchStatusVtbl IDBAsynchStatusVtbl, *PIDBAsynchStatusVtbl;

struct IDBAsynchStatusVtbl {
    HRESULT (* QueryInterface)(struct IDBAsynchStatus *, IID *, void * *);
    ULONG (* AddRef)(struct IDBAsynchStatus *);
    ULONG (* Release)(struct IDBAsynchStatus *);
    HRESULT (* Abort)(struct IDBAsynchStatus *, HCHAPTER, DBASYNCHOP);
    HRESULT (* GetStatus)(struct IDBAsynchStatus *, HCHAPTER, DBASYNCHOP, DBCOUNTITEM *, DBCOUNTITEM *, DBASYNCHPHASE *, LPOLESTR *);
};

struct IDBAsynchStatus {
    struct IDBAsynchStatusVtbl * lpVtbl;
};

typedef struct IDBBinderProperties IDBBinderProperties, *PIDBBinderProperties;

typedef struct IDBBinderPropertiesVtbl IDBBinderPropertiesVtbl, *PIDBBinderPropertiesVtbl;

struct IDBBinderProperties {
    struct IDBBinderPropertiesVtbl * lpVtbl;
};

struct IDBBinderPropertiesVtbl {
    HRESULT (* QueryInterface)(struct IDBBinderProperties *, IID *, void * *);
    ULONG (* AddRef)(struct IDBBinderProperties *);
    ULONG (* Release)(struct IDBBinderProperties *);
    HRESULT (* GetProperties)(struct IDBBinderProperties *, ULONG, DBPROPIDSET *, ULONG *, DBPROPSET * *);
    HRESULT (* GetPropertyInfo)(struct IDBBinderProperties *, ULONG, DBPROPIDSET *, ULONG *, DBPROPINFOSET * *, OLECHAR * *);
    HRESULT (* SetProperties)(struct IDBBinderProperties *, ULONG, DBPROPSET *);
    HRESULT (* Reset)(struct IDBBinderProperties *);
};

typedef struct IDBCreateCommand IDBCreateCommand, *PIDBCreateCommand;

typedef struct IDBCreateCommandVtbl IDBCreateCommandVtbl, *PIDBCreateCommandVtbl;

struct IDBCreateCommand {
    struct IDBCreateCommandVtbl * lpVtbl;
};

struct IDBCreateCommandVtbl {
    HRESULT (* QueryInterface)(struct IDBCreateCommand *, IID *, void * *);
    ULONG (* AddRef)(struct IDBCreateCommand *);
    ULONG (* Release)(struct IDBCreateCommand *);
    HRESULT (* CreateCommand)(struct IDBCreateCommand *, struct IUnknown *, IID *, struct IUnknown * *);
};

typedef struct IDBCreateSession IDBCreateSession, *PIDBCreateSession;

typedef struct IDBCreateSessionVtbl IDBCreateSessionVtbl, *PIDBCreateSessionVtbl;

struct IDBCreateSessionVtbl {
    HRESULT (* QueryInterface)(struct IDBCreateSession *, IID *, void * *);
    ULONG (* AddRef)(struct IDBCreateSession *);
    ULONG (* Release)(struct IDBCreateSession *);
    HRESULT (* CreateSession)(struct IDBCreateSession *, struct IUnknown *, IID *, struct IUnknown * *);
};

struct IDBCreateSession {
    struct IDBCreateSessionVtbl * lpVtbl;
};

typedef struct IDBDataSourceAdmin IDBDataSourceAdmin, *PIDBDataSourceAdmin;

typedef struct IDBDataSourceAdminVtbl IDBDataSourceAdminVtbl, *PIDBDataSourceAdminVtbl;

struct IDBDataSourceAdmin {
    struct IDBDataSourceAdminVtbl * lpVtbl;
};

struct IDBDataSourceAdminVtbl {
    HRESULT (* QueryInterface)(struct IDBDataSourceAdmin *, IID *, void * *);
    ULONG (* AddRef)(struct IDBDataSourceAdmin *);
    ULONG (* Release)(struct IDBDataSourceAdmin *);
    HRESULT (* CreateDataSource)(struct IDBDataSourceAdmin *, ULONG, DBPROPSET *, struct IUnknown *, IID *, struct IUnknown * *);
    HRESULT (* DestroyDataSource)(struct IDBDataSourceAdmin *);
    HRESULT (* GetCreationProperties)(struct IDBDataSourceAdmin *, ULONG, DBPROPIDSET *, ULONG *, DBPROPINFOSET * *, OLECHAR * *);
    HRESULT (* ModifyDataSource)(struct IDBDataSourceAdmin *, ULONG, DBPROPSET *);
};

typedef struct IDBInfo IDBInfo, *PIDBInfo;

typedef struct IDBInfoVtbl IDBInfoVtbl, *PIDBInfoVtbl;

struct IDBInfo {
    struct IDBInfoVtbl * lpVtbl;
};

struct IDBInfoVtbl {
    HRESULT (* QueryInterface)(struct IDBInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IDBInfo *);
    ULONG (* Release)(struct IDBInfo *);
    HRESULT (* GetKeywords)(struct IDBInfo *, LPOLESTR *);
    HRESULT (* GetLiteralInfo)(struct IDBInfo *, ULONG, DBLITERAL *, ULONG *, DBLITERALINFO * *, OLECHAR * *);
};

typedef struct IDBInitialize IDBInitialize, *PIDBInitialize;

typedef struct IDBInitializeVtbl IDBInitializeVtbl, *PIDBInitializeVtbl;

struct IDBInitializeVtbl {
    HRESULT (* QueryInterface)(struct IDBInitialize *, IID *, void * *);
    ULONG (* AddRef)(struct IDBInitialize *);
    ULONG (* Release)(struct IDBInitialize *);
    HRESULT (* Initialize)(struct IDBInitialize *);
    HRESULT (* Uninitialize)(struct IDBInitialize *);
};

struct IDBInitialize {
    struct IDBInitializeVtbl * lpVtbl;
};

typedef struct IDBProperties IDBProperties, *PIDBProperties;

typedef struct IDBPropertiesVtbl IDBPropertiesVtbl, *PIDBPropertiesVtbl;

struct IDBProperties {
    struct IDBPropertiesVtbl * lpVtbl;
};

struct IDBPropertiesVtbl {
    HRESULT (* QueryInterface)(struct IDBProperties *, IID *, void * *);
    ULONG (* AddRef)(struct IDBProperties *);
    ULONG (* Release)(struct IDBProperties *);
    HRESULT (* GetProperties)(struct IDBProperties *, ULONG, DBPROPIDSET *, ULONG *, DBPROPSET * *);
    HRESULT (* GetPropertyInfo)(struct IDBProperties *, ULONG, DBPROPIDSET *, ULONG *, DBPROPINFOSET * *, OLECHAR * *);
    HRESULT (* SetProperties)(struct IDBProperties *, ULONG, DBPROPSET *);
};

typedef struct IDBSchemaRowset IDBSchemaRowset, *PIDBSchemaRowset;

typedef struct IDBSchemaRowsetVtbl IDBSchemaRowsetVtbl, *PIDBSchemaRowsetVtbl;

struct IDBSchemaRowset {
    struct IDBSchemaRowsetVtbl * lpVtbl;
};

struct IDBSchemaRowsetVtbl {
    HRESULT (* QueryInterface)(struct IDBSchemaRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IDBSchemaRowset *);
    ULONG (* Release)(struct IDBSchemaRowset *);
    HRESULT (* GetRowset)(struct IDBSchemaRowset *, struct IUnknown *, GUID *, ULONG, VARIANT *, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
    HRESULT (* GetSchemas)(struct IDBSchemaRowset *, ULONG *, GUID * *, ULONG * *);
};

typedef struct IErrorLookup IErrorLookup, *PIErrorLookup;

typedef struct IErrorLookupVtbl IErrorLookupVtbl, *PIErrorLookupVtbl;

struct IErrorLookupVtbl {
    HRESULT (* QueryInterface)(struct IErrorLookup *, IID *, void * *);
    ULONG (* AddRef)(struct IErrorLookup *);
    ULONG (* Release)(struct IErrorLookup *);
    HRESULT (* GetErrorDescription)(struct IErrorLookup *, HRESULT, DWORD, DISPPARAMS *, LCID, BSTR *, BSTR *);
    HRESULT (* GetHelpInfo)(struct IErrorLookup *, HRESULT, DWORD, LCID, BSTR *, DWORD *);
    HRESULT (* ReleaseErrors)(struct IErrorLookup *, DWORD);
};

struct IErrorLookup {
    struct IErrorLookupVtbl * lpVtbl;
};

typedef struct IErrorRecords IErrorRecords, *PIErrorRecords;

typedef struct IErrorRecordsVtbl IErrorRecordsVtbl, *PIErrorRecordsVtbl;

struct IErrorRecordsVtbl {
    HRESULT (* QueryInterface)(struct IErrorRecords *, IID *, void * *);
    ULONG (* AddRef)(struct IErrorRecords *);
    ULONG (* Release)(struct IErrorRecords *);
    HRESULT (* AddErrorRecord)(struct IErrorRecords *, ERRORINFO *, DWORD, DISPPARAMS *, struct IUnknown *, DWORD);
    HRESULT (* GetBasicErrorInfo)(struct IErrorRecords *, ULONG, ERRORINFO *);
    HRESULT (* GetCustomErrorObject)(struct IErrorRecords *, ULONG, IID *, struct IUnknown * *);
    HRESULT (* GetErrorInfo)(struct IErrorRecords *, ULONG, LCID, struct IErrorInfo * *);
    HRESULT (* GetErrorParameters)(struct IErrorRecords *, ULONG, DISPPARAMS *);
    HRESULT (* GetRecordCount)(struct IErrorRecords *, ULONG *);
};

struct IErrorRecords {
    struct IErrorRecordsVtbl * lpVtbl;
};

typedef struct IGetDataSource IGetDataSource, *PIGetDataSource;

typedef struct IGetDataSourceVtbl IGetDataSourceVtbl, *PIGetDataSourceVtbl;

struct IGetDataSourceVtbl {
    HRESULT (* QueryInterface)(struct IGetDataSource *, IID *, void * *);
    ULONG (* AddRef)(struct IGetDataSource *);
    ULONG (* Release)(struct IGetDataSource *);
    HRESULT (* GetDataSource)(struct IGetDataSource *, IID *, struct IUnknown * *);
};

struct IGetDataSource {
    struct IGetDataSourceVtbl * lpVtbl;
};

typedef struct IGetRow IGetRow, *PIGetRow;

typedef struct IGetRowVtbl IGetRowVtbl, *PIGetRowVtbl;

struct IGetRowVtbl {
    HRESULT (* QueryInterface)(struct IGetRow *, IID *, void * *);
    ULONG (* AddRef)(struct IGetRow *);
    ULONG (* Release)(struct IGetRow *);
    HRESULT (* GetRowFromHROW)(struct IGetRow *, struct IUnknown *, HROW, IID *, struct IUnknown * *);
    HRESULT (* GetURLFromHROW)(struct IGetRow *, HROW, LPOLESTR *);
};

struct IGetRow {
    struct IGetRowVtbl * lpVtbl;
};

typedef struct IGetSession IGetSession, *PIGetSession;

typedef struct IGetSessionVtbl IGetSessionVtbl, *PIGetSessionVtbl;

struct IGetSessionVtbl {
    HRESULT (* QueryInterface)(struct IGetSession *, IID *, void * *);
    ULONG (* AddRef)(struct IGetSession *);
    ULONG (* Release)(struct IGetSession *);
    HRESULT (* GetSession)(struct IGetSession *, IID *, struct IUnknown * *);
};

struct IGetSession {
    struct IGetSessionVtbl * lpVtbl;
};

typedef struct IGetSourceRow IGetSourceRow, *PIGetSourceRow;

typedef struct IGetSourceRowVtbl IGetSourceRowVtbl, *PIGetSourceRowVtbl;

struct IGetSourceRowVtbl {
    HRESULT (* QueryInterface)(struct IGetSourceRow *, IID *, void * *);
    ULONG (* AddRef)(struct IGetSourceRow *);
    ULONG (* Release)(struct IGetSourceRow *);
    HRESULT (* GetSourceRow)(struct IGetSourceRow *, IID *, struct IUnknown * *);
};

struct IGetSourceRow {
    struct IGetSourceRowVtbl * lpVtbl;
};

typedef struct IIndexDefinition IIndexDefinition, *PIIndexDefinition;

typedef struct IIndexDefinitionVtbl IIndexDefinitionVtbl, *PIIndexDefinitionVtbl;

struct IIndexDefinitionVtbl {
    HRESULT (* QueryInterface)(struct IIndexDefinition *, IID *, void * *);
    ULONG (* AddRef)(struct IIndexDefinition *);
    ULONG (* Release)(struct IIndexDefinition *);
    HRESULT (* CreateIndex)(struct IIndexDefinition *, DBID *, DBID *, DBORDINAL, DBINDEXCOLUMNDESC *, ULONG, DBPROPSET *, DBID * *);
    HRESULT (* DropIndex)(struct IIndexDefinition *, DBID *, DBID *);
};

struct IIndexDefinition {
    struct IIndexDefinitionVtbl * lpVtbl;
};

typedef struct IMDDataset IMDDataset, *PIMDDataset;

typedef struct IMDDatasetVtbl IMDDatasetVtbl, *PIMDDatasetVtbl;

typedef struct tagMDAXISINFO tagMDAXISINFO, *PtagMDAXISINFO;

typedef struct tagMDAXISINFO MDAXISINFO;

struct tagMDAXISINFO {
    DBLENGTH cbSize;
    DBCOUNTITEM iAxis;
    DBCOUNTITEM cDimensions;
    DBCOUNTITEM cCoordinates;
    DBORDINAL * rgcColumns;
    LPOLESTR * rgpwszDimensionNames;
};

struct IMDDataset {
    struct IMDDatasetVtbl * lpVtbl;
};

struct IMDDatasetVtbl {
    HRESULT (* QueryInterface)(struct IMDDataset *, IID *, void * *);
    ULONG (* AddRef)(struct IMDDataset *);
    ULONG (* Release)(struct IMDDataset *);
    HRESULT (* FreeAxisInfo)(struct IMDDataset *, DBCOUNTITEM, MDAXISINFO *);
    HRESULT (* GetAxisInfo)(struct IMDDataset *, DBCOUNTITEM *, MDAXISINFO * *);
    HRESULT (* GetAxisRowset)(struct IMDDataset *, struct IUnknown *, DBCOUNTITEM, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
    HRESULT (* GetCellData)(struct IMDDataset *, HACCESSOR, DBORDINAL, DBORDINAL, void *);
    HRESULT (* GetSpecification)(struct IMDDataset *, IID *, struct IUnknown * *);
};

typedef struct IMDFind IMDFind, *PIMDFind;

typedef struct IMDFindVtbl IMDFindVtbl, *PIMDFindVtbl;

struct IMDFind {
    struct IMDFindVtbl * lpVtbl;
};

struct IMDFindVtbl {
    HRESULT (* QueryInterface)(struct IMDFind *, IID *, void * *);
    ULONG (* AddRef)(struct IMDFind *);
    ULONG (* Release)(struct IMDFind *);
    HRESULT (* FindCell)(struct IMDFind *, DBORDINAL, DBCOUNTITEM, LPCOLESTR *, DBORDINAL *);
    HRESULT (* FindTuple)(struct IMDFind *, ULONG, DBORDINAL, DBCOUNTITEM, LPCOLESTR *, ULONG *);
};

typedef struct IMDRangeRowset IMDRangeRowset, *PIMDRangeRowset;

typedef struct IMDRangeRowsetVtbl IMDRangeRowsetVtbl, *PIMDRangeRowsetVtbl;

struct IMDRangeRowset {
    struct IMDRangeRowsetVtbl * lpVtbl;
};

struct IMDRangeRowsetVtbl {
    HRESULT (* QueryInterface)(struct IMDRangeRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IMDRangeRowset *);
    ULONG (* Release)(struct IMDRangeRowset *);
    HRESULT (* GetRangeRowset)(struct IMDRangeRowset *, struct IUnknown *, DBORDINAL, DBORDINAL, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
};

typedef struct IMultipleResults IMultipleResults, *PIMultipleResults;

typedef struct IMultipleResultsVtbl IMultipleResultsVtbl, *PIMultipleResultsVtbl;

struct IMultipleResultsVtbl {
    HRESULT (* QueryInterface)(struct IMultipleResults *, IID *, void * *);
    ULONG (* AddRef)(struct IMultipleResults *);
    ULONG (* Release)(struct IMultipleResults *);
    HRESULT (* GetResult)(struct IMultipleResults *, struct IUnknown *, DBRESULTFLAG, IID *, DBROWCOUNT *, struct IUnknown * *);
};

struct IMultipleResults {
    struct IMultipleResultsVtbl * lpVtbl;
};

typedef struct IObjectAccessControl IObjectAccessControl, *PIObjectAccessControl;

typedef struct IObjectAccessControlVtbl IObjectAccessControlVtbl, *PIObjectAccessControlVtbl;

typedef struct _SEC_OBJECT SEC_OBJECT;

struct IObjectAccessControl {
    struct IObjectAccessControlVtbl * lpVtbl;
};

struct IObjectAccessControlVtbl {
    HRESULT (* QueryInterface)(struct IObjectAccessControl *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectAccessControl *);
    ULONG (* Release)(struct IObjectAccessControl *);
    HRESULT (* GetObjectAccessRights)(struct IObjectAccessControl *, SEC_OBJECT *, ULONG *, EXPLICIT_ACCESS_W * *);
    HRESULT (* GetObjectOwner)(struct IObjectAccessControl *, SEC_OBJECT *, TRUSTEE_W * *);
    HRESULT (* IsObjectAccessAllowed)(struct IObjectAccessControl *, SEC_OBJECT *, EXPLICIT_ACCESS_W *, BOOL *);
    HRESULT (* SetObjectAccessRights)(struct IObjectAccessControl *, SEC_OBJECT *, ULONG, EXPLICIT_ACCESS_W *);
    HRESULT (* SetObjectOwner)(struct IObjectAccessControl *, SEC_OBJECT *, TRUSTEE_W *);
};

typedef struct IOpenRowset IOpenRowset, *PIOpenRowset;

typedef struct IOpenRowsetVtbl IOpenRowsetVtbl, *PIOpenRowsetVtbl;

struct IOpenRowset {
    struct IOpenRowsetVtbl * lpVtbl;
};

struct IOpenRowsetVtbl {
    HRESULT (* QueryInterface)(struct IOpenRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IOpenRowset *);
    ULONG (* Release)(struct IOpenRowset *);
    HRESULT (* OpenRowset)(struct IOpenRowset *, struct IUnknown *, DBID *, DBID *, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
};

typedef struct IParentRowset IParentRowset, *PIParentRowset;

typedef struct IParentRowsetVtbl IParentRowsetVtbl, *PIParentRowsetVtbl;

struct IParentRowsetVtbl {
    HRESULT (* QueryInterface)(struct IParentRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IParentRowset *);
    ULONG (* Release)(struct IParentRowset *);
    HRESULT (* GetChildRowset)(struct IParentRowset *, struct IUnknown *, DBORDINAL, IID *, struct IUnknown * *);
};

struct IParentRowset {
    struct IParentRowsetVtbl * lpVtbl;
};

typedef struct IRegisterProvider IRegisterProvider, *PIRegisterProvider;

typedef struct IRegisterProviderVtbl IRegisterProviderVtbl, *PIRegisterProviderVtbl;

struct IRegisterProvider {
    struct IRegisterProviderVtbl * lpVtbl;
};

struct IRegisterProviderVtbl {
    HRESULT (* QueryInterface)(struct IRegisterProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IRegisterProvider *);
    ULONG (* Release)(struct IRegisterProvider *);
    HRESULT (* GetURLMapping)(struct IRegisterProvider *, LPCOLESTR, DB_DWRESERVE, CLSID *);
    HRESULT (* SetURLMapping)(struct IRegisterProvider *, LPCOLESTR, DB_DWRESERVE, IID *);
    HRESULT (* UnregisterProvider)(struct IRegisterProvider *, LPCOLESTR, DB_DWRESERVE, IID *);
};

typedef struct IRow IRow, *PIRow;

typedef struct IRowVtbl IRowVtbl, *PIRowVtbl;

struct IRowVtbl {
    HRESULT (* QueryInterface)(struct IRow *, IID *, void * *);
    ULONG (* AddRef)(struct IRow *);
    ULONG (* Release)(struct IRow *);
    HRESULT (* GetColumns)(struct IRow *, DBORDINAL, DBCOLUMNACCESS *);
    HRESULT (* GetSourceRowset)(struct IRow *, IID *, struct IUnknown * *, HROW *);
    HRESULT (* Open)(struct IRow *, struct IUnknown *, DBID *, GUID *, DWORD, IID *, struct IUnknown * *);
};

struct IRow {
    struct IRowVtbl * lpVtbl;
};

typedef struct IRowChange IRowChange, *PIRowChange;

typedef struct IRowChangeVtbl IRowChangeVtbl, *PIRowChangeVtbl;

struct IRowChangeVtbl {
    HRESULT (* QueryInterface)(struct IRowChange *, IID *, void * *);
    ULONG (* AddRef)(struct IRowChange *);
    ULONG (* Release)(struct IRowChange *);
    HRESULT (* SetColumns)(struct IRowChange *, DBORDINAL, DBCOLUMNACCESS *);
};

struct IRowChange {
    struct IRowChangeVtbl * lpVtbl;
};

typedef struct IRowPosition IRowPosition, *PIRowPosition;

typedef struct IRowPositionVtbl IRowPositionVtbl, *PIRowPositionVtbl;

struct IRowPositionVtbl {
    HRESULT (* QueryInterface)(struct IRowPosition *, IID *, void * *);
    ULONG (* AddRef)(struct IRowPosition *);
    ULONG (* Release)(struct IRowPosition *);
    HRESULT (* ClearRowPosition)(struct IRowPosition *);
    HRESULT (* GetRowPosition)(struct IRowPosition *, HCHAPTER *, HROW *, DBPOSITIONFLAGS *);
    HRESULT (* GetRowset)(struct IRowPosition *, IID *, struct IUnknown * *);
    HRESULT (* Initialize)(struct IRowPosition *, struct IUnknown *);
    HRESULT (* SetRowPosition)(struct IRowPosition *, HCHAPTER, HROW, DBPOSITIONFLAGS);
};

struct IRowPosition {
    struct IRowPositionVtbl * lpVtbl;
};

typedef struct IRowPositionChange IRowPositionChange, *PIRowPositionChange;

typedef struct IRowPositionChangeVtbl IRowPositionChangeVtbl, *PIRowPositionChangeVtbl;

struct IRowPositionChangeVtbl {
    HRESULT (* QueryInterface)(struct IRowPositionChange *, IID *, void * *);
    ULONG (* AddRef)(struct IRowPositionChange *);
    ULONG (* Release)(struct IRowPositionChange *);
    HRESULT (* OnRowPositionChange)(struct IRowPositionChange *, DBREASON, DBEVENTPHASE, BOOL);
};

struct IRowPositionChange {
    struct IRowPositionChangeVtbl * lpVtbl;
};

typedef struct IRowSchemaChange IRowSchemaChange, *PIRowSchemaChange;

typedef struct IRowSchemaChangeVtbl IRowSchemaChangeVtbl, *PIRowSchemaChangeVtbl;

struct IRowSchemaChange {
    struct IRowSchemaChangeVtbl * lpVtbl;
};

struct IRowSchemaChangeVtbl {
    HRESULT (* QueryInterface)(struct IRowSchemaChange *, IID *, void * *);
    ULONG (* AddRef)(struct IRowSchemaChange *);
    ULONG (* Release)(struct IRowSchemaChange *);
    HRESULT (* SetColumns)(struct IRowSchemaChange *, DBORDINAL, DBCOLUMNACCESS *);
    HRESULT (* DeleteColumns)(struct IRowSchemaChange *, DBORDINAL, DBID *, DBSTATUS *);
    HRESULT (* AddColumns)(struct IRowSchemaChange *, DBORDINAL, DBCOLUMNINFO *, DBCOLUMNACCESS *);
};

typedef struct IRowset IRowset, *PIRowset;

typedef struct IRowsetVtbl IRowsetVtbl, *PIRowsetVtbl;

struct IRowset {
    struct IRowsetVtbl * lpVtbl;
};

struct IRowsetVtbl {
    HRESULT (* QueryInterface)(struct IRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IRowset *);
    ULONG (* Release)(struct IRowset *);
    HRESULT (* AddRefRows)(struct IRowset *, DBCOUNTITEM, HROW *, DBREFCOUNT *, DBROWSTATUS *);
    HRESULT (* GetData)(struct IRowset *, HROW, HACCESSOR, void *);
    HRESULT (* GetNextRows)(struct IRowset *, HCHAPTER, DBROWOFFSET, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
    HRESULT (* ReleaseRows)(struct IRowset *, DBCOUNTITEM, HROW *, DBROWOPTIONS *, DBREFCOUNT *, DBROWSTATUS *);
    HRESULT (* RestartPosition)(struct IRowset *, HCHAPTER);
};

typedef struct IRowsetBookmark IRowsetBookmark, *PIRowsetBookmark;

typedef struct IRowsetBookmarkVtbl IRowsetBookmarkVtbl, *PIRowsetBookmarkVtbl;

struct IRowsetBookmark {
    struct IRowsetBookmarkVtbl * lpVtbl;
};

struct IRowsetBookmarkVtbl {
    HRESULT (* QueryInterface)(struct IRowsetBookmark *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetBookmark *);
    ULONG (* Release)(struct IRowsetBookmark *);
    HRESULT (* PositionOnBookmark)(struct IRowsetBookmark *, HCHAPTER, DBBKMARK, BYTE *);
};

typedef struct IRowsetChange IRowsetChange, *PIRowsetChange;

typedef struct IRowsetChangeVtbl IRowsetChangeVtbl, *PIRowsetChangeVtbl;

struct IRowsetChangeVtbl {
    HRESULT (* QueryInterface)(struct IRowsetChange *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetChange *);
    ULONG (* Release)(struct IRowsetChange *);
    HRESULT (* DeleteRows)(struct IRowsetChange *, HCHAPTER, DBCOUNTITEM, HROW *, DBROWSTATUS *);
    HRESULT (* SetData)(struct IRowsetChange *, HROW, HACCESSOR, void *);
    HRESULT (* InsertRow)(struct IRowsetChange *, HCHAPTER, HACCESSOR, void *, HROW *);
};

struct IRowsetChange {
    struct IRowsetChangeVtbl * lpVtbl;
};

typedef struct IRowsetChapterMember IRowsetChapterMember, *PIRowsetChapterMember;

typedef struct IRowsetChapterMemberVtbl IRowsetChapterMemberVtbl, *PIRowsetChapterMemberVtbl;

struct IRowsetChapterMember {
    struct IRowsetChapterMemberVtbl * lpVtbl;
};

struct IRowsetChapterMemberVtbl {
    HRESULT (* QueryInterface)(struct IRowsetChapterMember *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetChapterMember *);
    ULONG (* Release)(struct IRowsetChapterMember *);
    HRESULT (* IsRowInChapter)(struct IRowsetChapterMember *, HCHAPTER, HROW);
};

typedef struct IRowsetCurrentIndex IRowsetCurrentIndex, *PIRowsetCurrentIndex;

typedef struct IRowsetCurrentIndexVtbl IRowsetCurrentIndexVtbl, *PIRowsetCurrentIndexVtbl;

struct IRowsetCurrentIndexVtbl {
    HRESULT (* QueryInterface)(struct IRowsetCurrentIndex *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetCurrentIndex *);
    ULONG (* Release)(struct IRowsetCurrentIndex *);
    HRESULT (* GetIndexInfo)(struct IRowsetCurrentIndex *, DBORDINAL *, DBINDEXCOLUMNDESC * *, ULONG *, DBPROPSET * *);
    HRESULT (* Seek)(struct IRowsetCurrentIndex *, HACCESSOR, DBORDINAL, void *, DBSEEK);
    HRESULT (* SetRange)(struct IRowsetCurrentIndex *, HACCESSOR, DBORDINAL, void *, DBORDINAL, void *, DBRANGE);
    HRESULT (* GetIndex)(struct IRowsetCurrentIndex *, DBID * *);
    HRESULT (* SetIndex)(struct IRowsetCurrentIndex *, DBID *);
};

struct IRowsetCurrentIndex {
    struct IRowsetCurrentIndexVtbl * lpVtbl;
};

typedef struct IRowsetExactScroll IRowsetExactScroll, *PIRowsetExactScroll;

struct IRowsetExactScroll {
};

typedef struct IRowsetFind IRowsetFind, *PIRowsetFind;

typedef struct IRowsetFindVtbl IRowsetFindVtbl, *PIRowsetFindVtbl;

struct IRowsetFind {
    struct IRowsetFindVtbl * lpVtbl;
};

struct IRowsetFindVtbl {
    HRESULT (* QueryInterface)(struct IRowsetFind *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetFind *);
    ULONG (* Release)(struct IRowsetFind *);
    HRESULT (* FindNextRow)(struct IRowsetFind *, HCHAPTER, HACCESSOR, void *, DBCOMPAREOP, DBBKMARK, BYTE *, DBROWOFFSET, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
};

typedef struct IRowsetIdentity IRowsetIdentity, *PIRowsetIdentity;

typedef struct IRowsetIdentityVtbl IRowsetIdentityVtbl, *PIRowsetIdentityVtbl;

struct IRowsetIdentity {
    struct IRowsetIdentityVtbl * lpVtbl;
};

struct IRowsetIdentityVtbl {
    HRESULT (* QueryInterface)(struct IRowsetIdentity *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetIdentity *);
    ULONG (* Release)(struct IRowsetIdentity *);
    HRESULT (* IsSameRow)(struct IRowsetIdentity *, HROW, HROW);
};

typedef struct IRowsetIndex IRowsetIndex, *PIRowsetIndex;

typedef struct IRowsetIndexVtbl IRowsetIndexVtbl, *PIRowsetIndexVtbl;

struct IRowsetIndex {
    struct IRowsetIndexVtbl * lpVtbl;
};

struct IRowsetIndexVtbl {
    HRESULT (* QueryInterface)(struct IRowsetIndex *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetIndex *);
    ULONG (* Release)(struct IRowsetIndex *);
    HRESULT (* GetIndexInfo)(struct IRowsetIndex *, DBORDINAL *, DBINDEXCOLUMNDESC * *, ULONG *, DBPROPSET * *);
    HRESULT (* Seek)(struct IRowsetIndex *, HACCESSOR, DBORDINAL, void *, DBSEEK);
    HRESULT (* SetRange)(struct IRowsetIndex *, HACCESSOR, DBORDINAL, void *, DBORDINAL, void *, DBRANGE);
};

typedef struct IRowsetInfo IRowsetInfo, *PIRowsetInfo;

typedef struct IRowsetInfoVtbl IRowsetInfoVtbl, *PIRowsetInfoVtbl;

struct IRowsetInfoVtbl {
    HRESULT (* QueryInterface)(struct IRowsetInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetInfo *);
    ULONG (* Release)(struct IRowsetInfo *);
    HRESULT (* GetProperties)(struct IRowsetInfo *, ULONG, DBPROPIDSET *, ULONG *, DBPROPSET * *);
    HRESULT (* GetReferencedRowset)(struct IRowsetInfo *, DBORDINAL, IID *, struct IUnknown * *);
    HRESULT (* GetSpecification)(struct IRowsetInfo *, IID *, struct IUnknown * *);
};

struct IRowsetInfo {
    struct IRowsetInfoVtbl * lpVtbl;
};

typedef struct IRowsetLocate IRowsetLocate, *PIRowsetLocate;

typedef struct IRowsetLocateVtbl IRowsetLocateVtbl, *PIRowsetLocateVtbl;

struct IRowsetLocate {
    struct IRowsetLocateVtbl * lpVtbl;
};

struct IRowsetLocateVtbl {
    HRESULT (* QueryInterface)(struct IRowsetLocate *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetLocate *);
    ULONG (* Release)(struct IRowsetLocate *);
    HRESULT (* AddRefRows)(struct IRowsetLocate *, DBCOUNTITEM, HROW *, DBREFCOUNT *, DBROWSTATUS *);
    HRESULT (* GetData)(struct IRowsetLocate *, HROW, HACCESSOR, void *);
    HRESULT (* GetNextRows)(struct IRowsetLocate *, HCHAPTER, DBROWOFFSET, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
    HRESULT (* ReleaseRows)(struct IRowsetLocate *, DBCOUNTITEM, HROW *, DBROWOPTIONS *, DBREFCOUNT *, DBROWSTATUS *);
    HRESULT (* RestartPosition)(struct IRowsetLocate *, HCHAPTER);
    HRESULT (* Compare)(struct IRowsetLocate *, HCHAPTER, DBBKMARK, BYTE *, DBBKMARK, BYTE *, DBCOMPARE *);
    HRESULT (* GetRowsAt)(struct IRowsetLocate *, HWATCHREGION, HCHAPTER, DBBKMARK, BYTE *, DBROWOFFSET, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
    HRESULT (* GetRowsByBookmark)(struct IRowsetLocate *, HCHAPTER, DBCOUNTITEM, DBBKMARK *, BYTE * *, HROW *, DBROWSTATUS *);
    HRESULT (* Hash)(struct IRowsetLocate *, HCHAPTER, DBBKMARK, DBBKMARK *, BYTE * *, DBHASHVALUE *, DBROWSTATUS *);
};

typedef struct IRowsetNotify IRowsetNotify, *PIRowsetNotify;

typedef struct IRowsetNotifyVtbl IRowsetNotifyVtbl, *PIRowsetNotifyVtbl;

struct IRowsetNotifyVtbl {
    HRESULT (* QueryInterface)(struct IRowsetNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetNotify *);
    ULONG (* Release)(struct IRowsetNotify *);
    HRESULT (* OnFieldChange)(struct IRowsetNotify *, struct IRowset *, HROW, DBORDINAL, DBORDINAL *, DBREASON, DBEVENTPHASE, BOOL);
    HRESULT (* OnRowChange)(struct IRowsetNotify *, struct IRowset *, DBCOUNTITEM, HROW *, DBREASON, DBEVENTPHASE, BOOL);
    HRESULT (* OnRowsetChange)(struct IRowsetNotify *, struct IRowset *, DBREASON, DBEVENTPHASE, BOOL);
};

struct IRowsetNotify {
    struct IRowsetNotifyVtbl * lpVtbl;
};

typedef struct IRowsetRefresh IRowsetRefresh, *PIRowsetRefresh;

typedef struct IRowsetRefreshVtbl IRowsetRefreshVtbl, *PIRowsetRefreshVtbl;

struct IRowsetRefresh {
    struct IRowsetRefreshVtbl * lpVtbl;
};

struct IRowsetRefreshVtbl {
    HRESULT (* QueryInterface)(struct IRowsetRefresh *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetRefresh *);
    ULONG (* Release)(struct IRowsetRefresh *);
    HRESULT (* RefreshVisibleData)(struct IRowsetRefresh *, HCHAPTER, DBCOUNTITEM, HROW *, BOOL, DBCOUNTITEM *, HROW * *, DBROWSTATUS * *);
    HRESULT (* GetLastVisibleData)(struct IRowsetRefresh *, HROW, HACCESSOR, void *);
};

typedef struct IRowsetResynch IRowsetResynch, *PIRowsetResynch;

typedef struct IRowsetResynchVtbl IRowsetResynchVtbl, *PIRowsetResynchVtbl;

struct IRowsetResynch {
    struct IRowsetResynchVtbl * lpVtbl;
};

struct IRowsetResynchVtbl {
    HRESULT (* QueryInterface)(struct IRowsetResynch *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetResynch *);
    ULONG (* Release)(struct IRowsetResynch *);
    HRESULT (* GetVisibleData)(struct IRowsetResynch *, HROW, HACCESSOR, void *);
    HRESULT (* ResynchRows)(struct IRowsetResynch *, DBCOUNTITEM, HROW *, DBCOUNTITEM *, HROW * *, DBROWSTATUS * *);
};

typedef struct IRowsetScroll IRowsetScroll, *PIRowsetScroll;

typedef struct IRowsetScrollVtbl IRowsetScrollVtbl, *PIRowsetScrollVtbl;

struct IRowsetScroll {
    struct IRowsetScrollVtbl * lpVtbl;
};

struct IRowsetScrollVtbl {
    HRESULT (* QueryInterface)(struct IRowsetScroll *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetScroll *);
    ULONG (* Release)(struct IRowsetScroll *);
    HRESULT (* AddRefRows)(struct IRowsetScroll *, DBCOUNTITEM, HROW *, DBREFCOUNT *, DBROWSTATUS *);
    HRESULT (* GetData)(struct IRowsetScroll *, HROW, HACCESSOR, void *);
    HRESULT (* GetNextRows)(struct IRowsetScroll *, HCHAPTER, DBROWOFFSET, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
    HRESULT (* ReleaseRows)(struct IRowsetScroll *, DBCOUNTITEM, HROW *, DBROWOPTIONS *, DBREFCOUNT *, DBROWSTATUS *);
    HRESULT (* RestartPosition)(struct IRowsetScroll *, HCHAPTER);
    HRESULT (* Compare)(struct IRowsetScroll *, HCHAPTER, DBBKMARK, BYTE *, DBBKMARK, BYTE *, DBCOMPARE *);
    HRESULT (* GetRowsAt)(struct IRowsetScroll *, HWATCHREGION, HCHAPTER, DBBKMARK, BYTE *, DBROWOFFSET, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
    HRESULT (* GetRowsByBookmark)(struct IRowsetScroll *, HCHAPTER, DBCOUNTITEM, DBBKMARK *, BYTE * *, HROW *, DBROWSTATUS *);
    HRESULT (* Hash)(struct IRowsetScroll *, HCHAPTER, DBBKMARK, DBBKMARK *, BYTE * *, DBHASHVALUE *, DBROWSTATUS *);
    HRESULT (* GetApproximatePosition)(struct IRowsetScroll *, HCHAPTER, DBBKMARK, BYTE *, DBCOUNTITEM *, DBCOUNTITEM *);
    HRESULT (* GetRowsAtRatio)(struct IRowsetScroll *, HWATCHREGION, HCHAPTER, DBCOUNTITEM, DBCOUNTITEM, DBROWCOUNT, DBCOUNTITEM *, HROW * *);
};

typedef struct IRowsetUpdate IRowsetUpdate, *PIRowsetUpdate;

typedef struct IRowsetUpdateVtbl IRowsetUpdateVtbl, *PIRowsetUpdateVtbl;

struct IRowsetUpdate {
    struct IRowsetUpdateVtbl * lpVtbl;
};

struct IRowsetUpdateVtbl {
    HRESULT (* QueryInterface)(struct IRowsetUpdate *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetUpdate *);
    ULONG (* Release)(struct IRowsetUpdate *);
    HRESULT (* DeleteRows)(struct IRowsetUpdate *, HCHAPTER, DBCOUNTITEM, HROW *, DBROWSTATUS *);
    HRESULT (* SetData)(struct IRowsetUpdate *, HROW, HACCESSOR, void *);
    HRESULT (* InsertRow)(struct IRowsetUpdate *, HCHAPTER, HACCESSOR, void *, HROW *);
    HRESULT (* GetOriginalData)(struct IRowsetUpdate *, HROW, HACCESSOR, void *);
    HRESULT (* GetPendingRows)(struct IRowsetUpdate *, HCHAPTER, DBPENDINGSTATUS, DBCOUNTITEM *, HROW * *, DBPENDINGSTATUS * *);
    HRESULT (* GetRowStatus)(struct IRowsetUpdate *, HCHAPTER, DBCOUNTITEM, HROW *, DBPENDINGSTATUS *);
    HRESULT (* Undo)(struct IRowsetUpdate *, HCHAPTER, DBCOUNTITEM, HROW *, DBCOUNTITEM *, HROW * *, DBROWSTATUS * *);
    HRESULT (* Update)(struct IRowsetUpdate *, HCHAPTER, DBCOUNTITEM, HROW *, DBCOUNTITEM *, HROW * *, DBROWSTATUS * *);
};

typedef struct IRowsetView IRowsetView, *PIRowsetView;

typedef struct IRowsetViewVtbl IRowsetViewVtbl, *PIRowsetViewVtbl;

struct IRowsetViewVtbl {
    HRESULT (* QueryInterface)(struct IRowsetView *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetView *);
    ULONG (* Release)(struct IRowsetView *);
    HRESULT (* CreateView)(struct IRowsetView *, struct IUnknown *, IID *, struct IUnknown * *);
    HRESULT (* GetView)(struct IRowsetView *, HCHAPTER, IID *, HCHAPTER *, struct IUnknown * *);
};

struct IRowsetView {
    struct IRowsetViewVtbl * lpVtbl;
};

typedef struct IScopedOperations IScopedOperations, *PIScopedOperations;

typedef struct IScopedOperationsVtbl IScopedOperationsVtbl, *PIScopedOperationsVtbl;

struct IScopedOperations {
    struct IScopedOperationsVtbl * lpVtbl;
};

struct IScopedOperationsVtbl {
    HRESULT (* QueryInterface)(struct IScopedOperations *, IID *, void * *);
    ULONG (* AddRef)(struct IScopedOperations *);
    ULONG (* Release)(struct IScopedOperations *);
    HRESULT (* Bind)(struct IScopedOperations *, struct IUnknown *, LPCOLESTR, DBBINDURLFLAG, GUID *, IID *, struct IAuthenticate *, DBIMPLICITSESSION *, DBBINDURLSTATUS *, struct IUnknown * *);
    HRESULT (* Copy)(struct IScopedOperations *, DBCOUNTITEM, LPCOLESTR *, LPCOLESTR *, DWORD, struct IAuthenticate *, DBSTATUS *, LPOLESTR *, OLECHAR * *);
    HRESULT (* Move)(struct IScopedOperations *, DBCOUNTITEM, LPCOLESTR *, LPCOLESTR *, DWORD, struct IAuthenticate *, DBSTATUS *, LPOLESTR *, OLECHAR * *);
    HRESULT (* Delete)(struct IScopedOperations *, DBCOUNTITEM, LPCOLESTR *, DWORD, DBSTATUS *);
    HRESULT (* OpenRowset)(struct IScopedOperations *, struct IUnknown *, DBID *, DBID *, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
};

typedef struct ISecurityInfo ISecurityInfo, *PISecurityInfo;

typedef struct ISecurityInfoVtbl ISecurityInfoVtbl, *PISecurityInfoVtbl;

struct ISecurityInfoVtbl {
    HRESULT (* QueryInterface)(struct ISecurityInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ISecurityInfo *);
    ULONG (* Release)(struct ISecurityInfo *);
    HRESULT (* GetCurrentTrustee)(struct ISecurityInfo *, TRUSTEE_W * *);
    HRESULT (* GetObjectTypes)(struct ISecurityInfo *, ULONG *, GUID * *);
    HRESULT (* GetPermissions)(struct ISecurityInfo *, GUID, ACCESS_MASK *);
};

struct ISecurityInfo {
    struct ISecurityInfoVtbl * lpVtbl;
};

typedef struct ISessionProperties ISessionProperties, *PISessionProperties;

typedef struct ISessionPropertiesVtbl ISessionPropertiesVtbl, *PISessionPropertiesVtbl;

struct ISessionPropertiesVtbl {
    HRESULT (* QueryInterface)(struct ISessionProperties *, IID *, void * *);
    ULONG (* AddRef)(struct ISessionProperties *);
    ULONG (* Release)(struct ISessionProperties *);
    HRESULT (* GetProperties)(struct ISessionProperties *, ULONG, DBPROPIDSET *, ULONG *, DBPROPSET * *);
    HRESULT (* SetProperties)(struct ISessionProperties *, ULONG, DBPROPSET *);
};

struct ISessionProperties {
    struct ISessionPropertiesVtbl * lpVtbl;
};

typedef struct ISourcesRowset ISourcesRowset, *PISourcesRowset;

typedef struct ISourcesRowsetVtbl ISourcesRowsetVtbl, *PISourcesRowsetVtbl;

struct ISourcesRowsetVtbl {
    HRESULT (* QueryInterface)(struct ISourcesRowset *, IID *, void * *);
    ULONG (* AddRef)(struct ISourcesRowset *);
    ULONG (* Release)(struct ISourcesRowset *);
    HRESULT (* GetSourcesRowset)(struct ISourcesRowset *, struct IUnknown *, IID *, ULONG, DBPROPSET *, struct IUnknown * *);
};

struct ISourcesRowset {
    struct ISourcesRowsetVtbl * lpVtbl;
};

typedef struct ISQLErrorInfo ISQLErrorInfo, *PISQLErrorInfo;

typedef struct ISQLErrorInfoVtbl ISQLErrorInfoVtbl, *PISQLErrorInfoVtbl;

struct ISQLErrorInfo {
    struct ISQLErrorInfoVtbl * lpVtbl;
};

struct ISQLErrorInfoVtbl {
    HRESULT (* QueryInterface)(struct ISQLErrorInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ISQLErrorInfo *);
    ULONG (* Release)(struct ISQLErrorInfo *);
    HRESULT (* GetSQLInfo)(struct ISQLErrorInfo *, BSTR *, LONG *);
};

typedef struct ITableCreation ITableCreation, *PITableCreation;

typedef struct ITableCreationVtbl ITableCreationVtbl, *PITableCreationVtbl;

struct ITableCreationVtbl {
    HRESULT (* QueryInterface)(struct ITableCreation *, IID *, void * *);
    ULONG (* AddRef)(struct ITableCreation *);
    ULONG (* Release)(struct ITableCreation *);
    HRESULT (* CreateTable)(struct ITableCreation *, struct IUnknown *, DBID *, DBORDINAL, DBCOLUMNDESC *, IID *, ULONG, DBPROPSET *, DBID * *, struct IUnknown * *);
    HRESULT (* DropTable)(struct ITableCreation *, DBID *);
    HRESULT (* AddColumn)(struct ITableCreation *, DBID *, DBCOLUMNDESC *, DBID * *);
    HRESULT (* DropColumn)(struct ITableCreation *, DBID *, DBID *);
    HRESULT (* GetTableDefinition)(struct ITableCreation *, DBID *, DBORDINAL *, DBCOLUMNDESC * *, ULONG *, DBPROPSET * *, ULONG *, DBCONSTRAINTDESC * *, OLECHAR * *);
};

struct ITableCreation {
    struct ITableCreationVtbl * lpVtbl;
};

typedef struct ITableDefinition ITableDefinition, *PITableDefinition;

typedef struct ITableDefinitionVtbl ITableDefinitionVtbl, *PITableDefinitionVtbl;

struct ITableDefinition {
    struct ITableDefinitionVtbl * lpVtbl;
};

struct ITableDefinitionVtbl {
    HRESULT (* QueryInterface)(struct ITableDefinition *, IID *, void * *);
    ULONG (* AddRef)(struct ITableDefinition *);
    ULONG (* Release)(struct ITableDefinition *);
    HRESULT (* CreateTable)(struct ITableDefinition *, struct IUnknown *, DBID *, DBORDINAL, DBCOLUMNDESC *, IID *, ULONG, DBPROPSET *, DBID * *, struct IUnknown * *);
    HRESULT (* DropTable)(struct ITableDefinition *, DBID *);
    HRESULT (* AddColumn)(struct ITableDefinition *, DBID *, DBCOLUMNDESC *, DBID * *);
    HRESULT (* DropColumn)(struct ITableDefinition *, DBID *, DBID *);
};

typedef struct ITableDefinitionWithConstraints ITableDefinitionWithConstraints, *PITableDefinitionWithConstraints;

typedef struct ITableDefinitionWithConstraintsVtbl ITableDefinitionWithConstraintsVtbl, *PITableDefinitionWithConstraintsVtbl;

struct ITableDefinitionWithConstraints {
    struct ITableDefinitionWithConstraintsVtbl * lpVtbl;
};

struct ITableDefinitionWithConstraintsVtbl {
    HRESULT (* QueryInterface)(struct ITableDefinitionWithConstraints *, IID *, void * *);
    ULONG (* AddRef)(struct ITableDefinitionWithConstraints *);
    ULONG (* Release)(struct ITableDefinitionWithConstraints *);
    HRESULT (* CreateTable)(struct ITableDefinitionWithConstraints *, struct IUnknown *, DBID *, DBORDINAL, DBCOLUMNDESC *, IID *, ULONG, DBPROPSET *, DBID * *, struct IUnknown * *);
    HRESULT (* DropTable)(struct ITableDefinitionWithConstraints *, DBID *);
    HRESULT (* AddColumn)(struct ITableDefinitionWithConstraints *, DBID *, DBCOLUMNDESC *, DBID * *);
    HRESULT (* DropColumn)(struct ITableDefinitionWithConstraints *, DBID *, DBID *);
    HRESULT (* GetTableDefinition)(struct ITableDefinitionWithConstraints *, DBID *, DBORDINAL *, DBCOLUMNDESC * *, ULONG *, DBPROPSET * *, ULONG *, DBCONSTRAINTDESC * *, OLECHAR * *);
    HRESULT (* AddConstraint)(struct ITableDefinitionWithConstraints *, DBID *, DBCONSTRAINTDESC *);
    HRESULT (* CreateTableWithConstraints)(struct ITableDefinitionWithConstraints *, struct IUnknown *, DBID *, DBORDINAL, DBCOLUMNDESC *, ULONG, DBCONSTRAINTDESC *, IID *, ULONG, DBPROPSET *, DBID * *, struct IUnknown * *);
    HRESULT (* DropConstraint)(struct ITableDefinitionWithConstraints *, DBID *, DBID *);
};

typedef struct ITransactionJoin ITransactionJoin, *PITransactionJoin;

typedef struct ITransactionJoinVtbl ITransactionJoinVtbl, *PITransactionJoinVtbl;

typedef struct ITransactionOptions ITransactionOptions, *PITransactionOptions;

typedef LONG ISOLEVEL;

typedef struct ITransactionOptionsVtbl ITransactionOptionsVtbl, *PITransactionOptionsVtbl;

typedef struct XACTOPT XACTOPT, *PXACTOPT;

struct ITransactionOptions {
    struct ITransactionOptionsVtbl * lpVtbl;
};

struct XACTOPT {
    ULONG ulTimeout;
    char szDescription[40];
};

struct ITransactionJoinVtbl {
    HRESULT (* QueryInterface)(struct ITransactionJoin *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionJoin *);
    ULONG (* Release)(struct ITransactionJoin *);
    HRESULT (* GetOptionsObject)(struct ITransactionJoin *, struct ITransactionOptions * *);
    HRESULT (* JoinTransaction)(struct ITransactionJoin *, struct IUnknown *, ISOLEVEL, ULONG, struct ITransactionOptions *);
};

struct ITransactionOptionsVtbl {
    HRESULT (* QueryInterface)(struct ITransactionOptions *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionOptions *);
    ULONG (* Release)(struct ITransactionOptions *);
    HRESULT (* SetOptions)(struct ITransactionOptions *, struct XACTOPT *);
    HRESULT (* GetOptions)(struct ITransactionOptions *, struct XACTOPT *);
};

struct ITransactionJoin {
    struct ITransactionJoinVtbl * lpVtbl;
};

typedef struct ITransactionLocal ITransactionLocal, *PITransactionLocal;

typedef struct ITransactionLocalVtbl ITransactionLocalVtbl, *PITransactionLocalVtbl;

typedef struct BOID BOID, *PBOID;

typedef struct XACTTRANSINFO XACTTRANSINFO, *PXACTTRANSINFO;

typedef struct BOID XACTUOW;

struct ITransactionLocalVtbl {
    HRESULT (* QueryInterface)(struct ITransactionLocal *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionLocal *);
    ULONG (* Release)(struct ITransactionLocal *);
    HRESULT (* Commit)(struct ITransactionLocal *, BOOL, DWORD, DWORD);
    HRESULT (* Abort)(struct ITransactionLocal *, struct BOID *, BOOL, BOOL);
    HRESULT (* GetTransactionInfo)(struct ITransactionLocal *, struct XACTTRANSINFO *);
    HRESULT (* GetOptionsObject)(struct ITransactionLocal *, struct ITransactionOptions * *);
    HRESULT (* StartTransaction)(struct ITransactionLocal *, ISOLEVEL, ULONG, struct ITransactionOptions *, ULONG *);
};

struct ITransactionLocal {
    struct ITransactionLocalVtbl * lpVtbl;
};

struct BOID {
    byte rgb[16];
};

struct XACTTRANSINFO {
    XACTUOW uow;
    ISOLEVEL isoLevel;
    ULONG isoFlags;
    DWORD grfTCSupported;
    DWORD grfRMSupported;
    DWORD grfTCSupportedRetaining;
    DWORD grfRMSupportedRetaining;
};

typedef struct ITransactionObject ITransactionObject, *PITransactionObject;

typedef struct ITransactionObjectVtbl ITransactionObjectVtbl, *PITransactionObjectVtbl;

typedef struct ITransaction ITransaction, *PITransaction;

typedef struct ITransactionVtbl ITransactionVtbl, *PITransactionVtbl;

struct ITransactionVtbl {
    HRESULT (* QueryInterface)(struct ITransaction *, IID *, void * *);
    ULONG (* AddRef)(struct ITransaction *);
    ULONG (* Release)(struct ITransaction *);
    HRESULT (* Commit)(struct ITransaction *, BOOL, DWORD, DWORD);
    HRESULT (* Abort)(struct ITransaction *, struct BOID *, BOOL, BOOL);
    HRESULT (* GetTransactionInfo)(struct ITransaction *, struct XACTTRANSINFO *);
};

struct ITransactionObject {
    struct ITransactionObjectVtbl * lpVtbl;
};

struct ITransactionObjectVtbl {
    HRESULT (* QueryInterface)(struct ITransactionObject *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionObject *);
    ULONG (* Release)(struct ITransactionObject *);
    HRESULT (* GetTransactionObject)(struct ITransactionObject *, ULONG, struct ITransaction * *);
};

struct ITransaction {
    struct ITransactionVtbl * lpVtbl;
};

typedef struct ITrusteeAdmin ITrusteeAdmin, *PITrusteeAdmin;

typedef struct ITrusteeAdminVtbl ITrusteeAdminVtbl, *PITrusteeAdminVtbl;

struct ITrusteeAdmin {
    struct ITrusteeAdminVtbl * lpVtbl;
};

struct ITrusteeAdminVtbl {
    HRESULT (* QueryInterface)(struct ITrusteeAdmin *, IID *, void * *);
    ULONG (* AddRef)(struct ITrusteeAdmin *);
    ULONG (* Release)(struct ITrusteeAdmin *);
    HRESULT (* CompareTrustees)(struct ITrusteeAdmin *, TRUSTEE_W *, TRUSTEE_W *);
    HRESULT (* CreateTrustee)(struct ITrusteeAdmin *, TRUSTEE_W *, ULONG, DBPROPSET *);
    HRESULT (* DeleteTrustee)(struct ITrusteeAdmin *, TRUSTEE_W *);
    HRESULT (* SetTrusteeProperties)(struct ITrusteeAdmin *, TRUSTEE_W *, ULONG, DBPROPSET *);
    HRESULT (* GetTrusteeProperties)(struct ITrusteeAdmin *, TRUSTEE_W *, ULONG, DBPROPIDSET *, ULONG *, DBPROPSET * *);
};

typedef struct ITrusteeGroupAdmin ITrusteeGroupAdmin, *PITrusteeGroupAdmin;

typedef struct ITrusteeGroupAdminVtbl ITrusteeGroupAdminVtbl, *PITrusteeGroupAdminVtbl;

struct ITrusteeGroupAdmin {
    struct ITrusteeGroupAdminVtbl * lpVtbl;
};

struct ITrusteeGroupAdminVtbl {
    HRESULT (* QueryInterface)(struct ITrusteeGroupAdmin *, IID *, void * *);
    ULONG (* AddRef)(struct ITrusteeGroupAdmin *);
    ULONG (* Release)(struct ITrusteeGroupAdmin *);
    HRESULT (* AddMember)(struct ITrusteeGroupAdmin *, TRUSTEE_W *, TRUSTEE_W *);
    HRESULT (* DeleteMember)(struct ITrusteeGroupAdmin *, TRUSTEE_W *, TRUSTEE_W *);
    HRESULT (* IsMember)(struct ITrusteeGroupAdmin *, TRUSTEE_W *, TRUSTEE_W *, BOOL *);
    HRESULT (* GetMembers)(struct ITrusteeGroupAdmin *, TRUSTEE_W *, ULONG *, TRUSTEE_W * *);
    HRESULT (* GetMemberships)(struct ITrusteeGroupAdmin *, TRUSTEE_W *, ULONG *, TRUSTEE_W * *);
};

typedef struct IViewChapter IViewChapter, *PIViewChapter;

typedef struct IViewChapterVtbl IViewChapterVtbl, *PIViewChapterVtbl;

struct IViewChapterVtbl {
    HRESULT (* QueryInterface)(struct IViewChapter *, IID *, void * *);
    ULONG (* AddRef)(struct IViewChapter *);
    ULONG (* Release)(struct IViewChapter *);
    HRESULT (* GetSpecification)(struct IViewChapter *, IID *, struct IUnknown * *);
    HRESULT (* OpenViewChapter)(struct IViewChapter *, HCHAPTER, HCHAPTER *);
};

struct IViewChapter {
    struct IViewChapterVtbl * lpVtbl;
};

typedef struct IViewFilter IViewFilter, *PIViewFilter;

typedef struct IViewFilterVtbl IViewFilterVtbl, *PIViewFilterVtbl;

struct IViewFilter {
    struct IViewFilterVtbl * lpVtbl;
};

struct IViewFilterVtbl {
    HRESULT (* QueryInterface)(struct IViewFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IViewFilter *);
    ULONG (* Release)(struct IViewFilter *);
    HRESULT (* GetFilter)(struct IViewFilter *, HACCESSOR, DBCOUNTITEM *, DBCOMPAREOP * *, void *);
    HRESULT (* GetFilterBindings)(struct IViewFilter *, DBCOUNTITEM *, DBBINDING * *);
    HRESULT (* SetFilter)(struct IViewFilter *, HACCESSOR, DBCOUNTITEM, DBCOMPAREOP *, void *);
};

typedef struct IViewRowset IViewRowset, *PIViewRowset;

typedef struct IViewRowsetVtbl IViewRowsetVtbl, *PIViewRowsetVtbl;

struct IViewRowset {
    struct IViewRowsetVtbl * lpVtbl;
};

struct IViewRowsetVtbl {
    HRESULT (* QueryInterface)(struct IViewRowset *, IID *, void * *);
    ULONG (* AddRef)(struct IViewRowset *);
    ULONG (* Release)(struct IViewRowset *);
    HRESULT (* GetSpecification)(struct IViewRowset *, IID *, struct IUnknown * *);
    HRESULT (* OpenViewRowset)(struct IViewRowset *, struct IUnknown *, IID *, struct IUnknown * *);
};

typedef struct IViewSort IViewSort, *PIViewSort;

typedef struct IViewSortVtbl IViewSortVtbl, *PIViewSortVtbl;

struct IViewSort {
    struct IViewSortVtbl * lpVtbl;
};

struct IViewSortVtbl {
    HRESULT (* QueryInterface)(struct IViewSort *, IID *, void * *);
    ULONG (* AddRef)(struct IViewSort *);
    ULONG (* Release)(struct IViewSort *);
    HRESULT (* GetSortOrder)(struct IViewSort *, DBORDINAL *, DBORDINAL * *, DBSORT * *);
    HRESULT (* SetSortOrder)(struct IViewSort *, DBORDINAL, DBORDINAL *, DBSORT *);
};

typedef struct tagRMTPACK tagRMTPACK, *PtagRMTPACK;

typedef struct tagRMTPACK RMTPACK;

struct tagRMTPACK {
    struct ISequentialStream * pISeqStream;
    ULONG cbData;
    ULONG cBSTR;
    BSTR * rgBSTR;
    ULONG cVARIANT;
    VARIANT * rgVARIANT;
    ULONG cIDISPATCH;
    struct IDispatch * * rgIDISPATCH;
    ULONG cIUNKNOWN;
    struct IUnknown * * rgIUNKNOWN;
    ULONG cPROPVARIANT;
    PROPVARIANT * rgPROPVARIANT;
    ULONG cArray;
    VARIANT * rgArray;
};

#define DD_DEFDRAGDELAY 200

#define DD_DEFDRAGMINDIST 2

#define DD_DEFSCROLLDELAY 50

#define DD_DEFSCROLLINSET 11

#define DD_DEFSCROLLINTERVAL 50

#define DROPEFFECT_COPY 1

#define DROPEFFECT_LINK 4

#define DROPEFFECT_MOVE 2

#define DROPEFFECT_NONE 0

#define DROPEFFECT_SCROLL 2147483648

#define MK_ALT 32

#define UPDFCACHE_ALL -2147483649

#define UPDFCACHE_ALLBUTNODATACACHE -2147483650

#define UPDFCACHE_IFBLANK 16

#define UPDFCACHE_IFBLANKORONSAVECACHE 18

#define UPDFCACHE_NODATACACHE 1

#define UPDFCACHE_NORMALCACHE 8

#define UPDFCACHE_ONLYIFBLANK 2147483648

#define UPDFCACHE_ONSAVECACHE 2

#define UPDFCACHE_ONSTOPCACHE 4

typedef enum tagBINDSPEED {
    BINDSPEED_IMMEDIATE=3,
    BINDSPEED_INDEFINITE=1,
    BINDSPEED_MODERATE=2
} tagBINDSPEED;

typedef enum tagBINDSPEED BINDSPEED;

typedef RECT BORDERWIDTHS;

typedef enum tagDISCARDCACHE {
    DISCARDCACHE_NOSAVE=1,
    DISCARDCACHE_SAVEIFDIRTY=0
} tagDISCARDCACHE;

typedef enum tagDISCARDCACHE DISCARDCACHE;

typedef struct IContinue IContinue, *PIContinue;

typedef struct IContinueVtbl IContinueVtbl, *PIContinueVtbl;

struct IContinueVtbl {
    HRESULT (* QueryInterface)(struct IContinue *, IID *, void * *);
    ULONG (* AddRef)(struct IContinue *);
    ULONG (* Release)(struct IContinue *);
    HRESULT (* FContinue)(struct IContinue *);
};

struct IContinue {
    struct IContinueVtbl * lpVtbl;
};

typedef struct IDropSource IDropSource, *PIDropSource;

typedef struct IDropSourceVtbl IDropSourceVtbl, *PIDropSourceVtbl;

struct IDropSourceVtbl {
    HRESULT (* QueryInterface)(struct IDropSource *, IID *, void * *);
    ULONG (* AddRef)(struct IDropSource *);
    ULONG (* Release)(struct IDropSource *);
    HRESULT (* QueryContinueDrag)(struct IDropSource *, BOOL, DWORD);
    HRESULT (* GiveFeedback)(struct IDropSource *, DWORD);
};

struct IDropSource {
    struct IDropSourceVtbl * lpVtbl;
};

typedef struct IDropSourceNotify IDropSourceNotify, *PIDropSourceNotify;

typedef struct IDropSourceNotifyVtbl IDropSourceNotifyVtbl, *PIDropSourceNotifyVtbl;

struct IDropSourceNotifyVtbl {
    HRESULT (* QueryInterface)(struct IDropSourceNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IDropSourceNotify *);
    ULONG (* Release)(struct IDropSourceNotify *);
    HRESULT (* DragEnterTarget)(struct IDropSourceNotify *, HWND);
    HRESULT (* DragLeaveTarget)(struct IDropSourceNotify *);
};

struct IDropSourceNotify {
    struct IDropSourceNotifyVtbl * lpVtbl;
};

typedef struct IEnumOLEVERB IEnumOLEVERB, *PIEnumOLEVERB;

typedef struct IEnumOLEVERBVtbl IEnumOLEVERBVtbl, *PIEnumOLEVERBVtbl;

typedef struct tagOLEVERB tagOLEVERB, *PtagOLEVERB;

typedef struct tagOLEVERB * LPOLEVERB;

struct IEnumOLEVERB {
    struct IEnumOLEVERBVtbl * lpVtbl;
};

struct IEnumOLEVERBVtbl {
    HRESULT (* QueryInterface)(struct IEnumOLEVERB *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumOLEVERB *);
    ULONG (* Release)(struct IEnumOLEVERB *);
    HRESULT (* Next)(struct IEnumOLEVERB *, ULONG, LPOLEVERB, ULONG *);
    HRESULT (* Skip)(struct IEnumOLEVERB *, ULONG);
    HRESULT (* Reset)(struct IEnumOLEVERB *);
    HRESULT (* Clone)(struct IEnumOLEVERB *, struct IEnumOLEVERB * *);
};

struct tagOLEVERB {
    LONG lVerb;
    LPOLESTR lpszVerbName;
    DWORD fuFlags;
    DWORD grfAttribs;
};

typedef struct IOleAdviseHolder IOleAdviseHolder, *PIOleAdviseHolder;

typedef struct IOleAdviseHolderVtbl IOleAdviseHolderVtbl, *PIOleAdviseHolderVtbl;

struct IOleAdviseHolderVtbl {
    HRESULT (* QueryInterface)(struct IOleAdviseHolder *, IID *, void * *);
    ULONG (* AddRef)(struct IOleAdviseHolder *);
    ULONG (* Release)(struct IOleAdviseHolder *);
    HRESULT (* Advise)(struct IOleAdviseHolder *, struct IAdviseSink *, DWORD *);
    HRESULT (* Unadvise)(struct IOleAdviseHolder *, DWORD);
    HRESULT (* EnumAdvise)(struct IOleAdviseHolder *, struct IEnumSTATDATA * *);
    HRESULT (* SendOnRename)(struct IOleAdviseHolder *, struct IMoniker *);
    HRESULT (* SendOnSave)(struct IOleAdviseHolder *);
    HRESULT (* SendOnClose)(struct IOleAdviseHolder *);
};

struct IOleAdviseHolder {
    struct IOleAdviseHolderVtbl * lpVtbl;
};

typedef struct IOleCache IOleCache, *PIOleCache;

typedef struct IOleCacheVtbl IOleCacheVtbl, *PIOleCacheVtbl;

struct IOleCacheVtbl {
    HRESULT (* QueryInterface)(struct IOleCache *, IID *, void * *);
    ULONG (* AddRef)(struct IOleCache *);
    ULONG (* Release)(struct IOleCache *);
    HRESULT (* Cache)(struct IOleCache *, FORMATETC *, DWORD, DWORD *);
    HRESULT (* Uncache)(struct IOleCache *, DWORD);
    HRESULT (* EnumCache)(struct IOleCache *, struct IEnumSTATDATA * *);
    HRESULT (* InitCache)(struct IOleCache *, struct IDataObject *);
    HRESULT (* SetData)(struct IOleCache *, FORMATETC *, STGMEDIUM *, BOOL);
};

struct IOleCache {
    struct IOleCacheVtbl * lpVtbl;
};

typedef struct IOleCache2 IOleCache2, *PIOleCache2;

typedef struct IOleCache2Vtbl IOleCache2Vtbl, *PIOleCache2Vtbl;

struct IOleCache2Vtbl {
    HRESULT (* QueryInterface)(struct IOleCache2 *, IID *, void * *);
    ULONG (* AddRef)(struct IOleCache2 *);
    ULONG (* Release)(struct IOleCache2 *);
    HRESULT (* Cache)(struct IOleCache2 *, FORMATETC *, DWORD, DWORD *);
    HRESULT (* Uncache)(struct IOleCache2 *, DWORD);
    HRESULT (* EnumCache)(struct IOleCache2 *, struct IEnumSTATDATA * *);
    HRESULT (* InitCache)(struct IOleCache2 *, struct IDataObject *);
    HRESULT (* SetData)(struct IOleCache2 *, FORMATETC *, STGMEDIUM *, BOOL);
    HRESULT (* UpdateCache)(struct IOleCache2 *, LPDATAOBJECT, DWORD, LPVOID);
    HRESULT (* DiscardCache)(struct IOleCache2 *, DWORD);
};

struct IOleCache2 {
    struct IOleCache2Vtbl * lpVtbl;
};

typedef struct IOleCacheControl IOleCacheControl, *PIOleCacheControl;

typedef struct IOleCacheControlVtbl IOleCacheControlVtbl, *PIOleCacheControlVtbl;

struct IOleCacheControl {
    struct IOleCacheControlVtbl * lpVtbl;
};

struct IOleCacheControlVtbl {
    HRESULT (* QueryInterface)(struct IOleCacheControl *, IID *, void * *);
    ULONG (* AddRef)(struct IOleCacheControl *);
    ULONG (* Release)(struct IOleCacheControl *);
    HRESULT (* OnRun)(struct IOleCacheControl *, LPDATAOBJECT);
    HRESULT (* OnStop)(struct IOleCacheControl *);
};

typedef struct IOleInPlaceObject IOleInPlaceObject, *PIOleInPlaceObject;

typedef struct IOleInPlaceObjectVtbl IOleInPlaceObjectVtbl, *PIOleInPlaceObjectVtbl;

struct IOleInPlaceObject {
    struct IOleInPlaceObjectVtbl * lpVtbl;
};

struct IOleInPlaceObjectVtbl {
    HRESULT (* QueryInterface)(struct IOleInPlaceObject *, IID *, void * *);
    ULONG (* AddRef)(struct IOleInPlaceObject *);
    ULONG (* Release)(struct IOleInPlaceObject *);
    HRESULT (* GetWindow)(struct IOleInPlaceObject *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleInPlaceObject *, BOOL);
    HRESULT (* InPlaceDeactivate)(struct IOleInPlaceObject *);
    HRESULT (* UIDeactivate)(struct IOleInPlaceObject *);
    HRESULT (* SetObjectRects)(struct IOleInPlaceObject *, LPCRECT, LPCRECT);
    HRESULT (* ReactivateAndUndo)(struct IOleInPlaceObject *);
};

typedef struct IOleItemContainer IOleItemContainer, *PIOleItemContainer;

typedef struct IOleItemContainerVtbl IOleItemContainerVtbl, *PIOleItemContainerVtbl;

struct IOleItemContainerVtbl {
    HRESULT (* QueryInterface)(struct IOleItemContainer *, IID *, void * *);
    ULONG (* AddRef)(struct IOleItemContainer *);
    ULONG (* Release)(struct IOleItemContainer *);
    HRESULT (* ParseDisplayName)(struct IOleItemContainer *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker * *);
    HRESULT (* EnumObjects)(struct IOleItemContainer *, DWORD, struct IEnumUnknown * *);
    HRESULT (* LockContainer)(struct IOleItemContainer *, BOOL);
    HRESULT (* GetObjectA)(struct IOleItemContainer *, LPOLESTR, DWORD, struct IBindCtx *, IID *, void * *);
    HRESULT (* GetObjectStorage)(struct IOleItemContainer *, LPOLESTR, struct IBindCtx *, IID *, void * *);
    HRESULT (* IsRunning)(struct IOleItemContainer *, LPOLESTR);
};

struct IOleItemContainer {
    struct IOleItemContainerVtbl * lpVtbl;
};

typedef struct IOleLink IOleLink, *PIOleLink;

typedef struct IOleLinkVtbl IOleLinkVtbl, *PIOleLinkVtbl;

struct IOleLinkVtbl {
    HRESULT (* QueryInterface)(struct IOleLink *, IID *, void * *);
    ULONG (* AddRef)(struct IOleLink *);
    ULONG (* Release)(struct IOleLink *);
    HRESULT (* SetUpdateOptions)(struct IOleLink *, DWORD);
    HRESULT (* GetUpdateOptions)(struct IOleLink *, DWORD *);
    HRESULT (* SetSourceMoniker)(struct IOleLink *, struct IMoniker *, IID *);
    HRESULT (* GetSourceMoniker)(struct IOleLink *, struct IMoniker * *);
    HRESULT (* SetSourceDisplayName)(struct IOleLink *, LPCOLESTR);
    HRESULT (* GetSourceDisplayName)(struct IOleLink *, LPOLESTR *);
    HRESULT (* BindToSource)(struct IOleLink *, DWORD, struct IBindCtx *);
    HRESULT (* BindIfRunning)(struct IOleLink *);
    HRESULT (* GetBoundSource)(struct IOleLink *, struct IUnknown * *);
    HRESULT (* UnbindSource)(struct IOleLink *);
    HRESULT (* Update)(struct IOleLink *, struct IBindCtx *);
};

struct IOleLink {
    struct IOleLinkVtbl * lpVtbl;
};

typedef struct IOleObject IOleObject, *PIOleObject;

typedef struct IOleObjectVtbl IOleObjectVtbl, *PIOleObjectVtbl;

struct IOleObjectVtbl {
    HRESULT (* QueryInterface)(struct IOleObject *, IID *, void * *);
    ULONG (* AddRef)(struct IOleObject *);
    ULONG (* Release)(struct IOleObject *);
    HRESULT (* SetClientSite)(struct IOleObject *, struct IOleClientSite *);
    HRESULT (* GetClientSite)(struct IOleObject *, struct IOleClientSite * *);
    HRESULT (* SetHostNames)(struct IOleObject *, LPCOLESTR, LPCOLESTR);
    HRESULT (* Close)(struct IOleObject *, DWORD);
    HRESULT (* SetMoniker)(struct IOleObject *, DWORD, struct IMoniker *);
    HRESULT (* GetMoniker)(struct IOleObject *, DWORD, DWORD, struct IMoniker * *);
    HRESULT (* InitFromData)(struct IOleObject *, struct IDataObject *, BOOL, DWORD);
    HRESULT (* GetClipboardData)(struct IOleObject *, DWORD, struct IDataObject * *);
    HRESULT (* DoVerb)(struct IOleObject *, LONG, LPMSG, struct IOleClientSite *, LONG, HWND, LPCRECT);
    HRESULT (* EnumVerbs)(struct IOleObject *, struct IEnumOLEVERB * *);
    HRESULT (* Update)(struct IOleObject *);
    HRESULT (* IsUpToDate)(struct IOleObject *);
    HRESULT (* GetUserClassID)(struct IOleObject *, CLSID *);
    HRESULT (* GetUserType)(struct IOleObject *, DWORD, LPOLESTR *);
    HRESULT (* SetExtent)(struct IOleObject *, DWORD, SIZEL *);
    HRESULT (* GetExtent)(struct IOleObject *, DWORD, SIZEL *);
    HRESULT (* Advise)(struct IOleObject *, struct IAdviseSink *, DWORD *);
    HRESULT (* Unadvise)(struct IOleObject *, DWORD);
    HRESULT (* EnumAdvise)(struct IOleObject *, struct IEnumSTATDATA * *);
    HRESULT (* GetMiscStatus)(struct IOleObject *, DWORD, DWORD *);
    HRESULT (* SetColorScheme)(struct IOleObject *, LOGPALETTE *);
};

struct IOleObject {
    struct IOleObjectVtbl * lpVtbl;
};

typedef struct IOleWindow IOleWindow, *PIOleWindow;

typedef struct IOleWindowVtbl IOleWindowVtbl, *PIOleWindowVtbl;

struct IOleWindowVtbl {
    HRESULT (* QueryInterface)(struct IOleWindow *, IID *, void * *);
    ULONG (* AddRef)(struct IOleWindow *);
    ULONG (* Release)(struct IOleWindow *);
    HRESULT (* GetWindow)(struct IOleWindow *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IOleWindow *, BOOL);
};

struct IOleWindow {
    struct IOleWindowVtbl * lpVtbl;
};

typedef struct IParseDisplayName IParseDisplayName, *PIParseDisplayName;

typedef struct IParseDisplayNameVtbl IParseDisplayNameVtbl, *PIParseDisplayNameVtbl;

struct IParseDisplayNameVtbl {
    HRESULT (* QueryInterface)(struct IParseDisplayName *, IID *, void * *);
    ULONG (* AddRef)(struct IParseDisplayName *);
    ULONG (* Release)(struct IParseDisplayName *);
    HRESULT (* ParseDisplayName)(struct IParseDisplayName *, struct IBindCtx *, LPOLESTR, ULONG *, struct IMoniker * *);
};

struct IParseDisplayName {
    struct IParseDisplayNameVtbl * lpVtbl;
};

typedef struct IViewObject IViewObject, *PIViewObject;

typedef struct IViewObjectVtbl IViewObjectVtbl, *PIViewObjectVtbl;

struct IViewObjectVtbl {
    HRESULT (* QueryInterface)(struct IViewObject *, IID *, void * *);
    ULONG (* AddRef)(struct IViewObject *);
    ULONG (* Release)(struct IViewObject *);
    HRESULT (* Draw)(struct IViewObject *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (* )(ULONG_PTR), ULONG_PTR);
    HRESULT (* GetColorSet)(struct IViewObject *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE * *);
    HRESULT (* Freeze)(struct IViewObject *, DWORD, LONG, void *, DWORD *);
    HRESULT (* Unfreeze)(struct IViewObject *, DWORD);
    HRESULT (* SetAdvise)(struct IViewObject *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (* GetAdvise)(struct IViewObject *, DWORD *, DWORD *, struct IAdviseSink * *);
};

struct IViewObject {
    struct IViewObjectVtbl * lpVtbl;
};

typedef struct IViewObject2 IViewObject2, *PIViewObject2;

typedef struct IViewObject2Vtbl IViewObject2Vtbl, *PIViewObject2Vtbl;

struct IViewObject2Vtbl {
    HRESULT (* QueryInterface)(struct IViewObject2 *, IID *, void * *);
    ULONG (* AddRef)(struct IViewObject2 *);
    ULONG (* Release)(struct IViewObject2 *);
    HRESULT (* Draw)(struct IViewObject2 *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, HDC, LPCRECTL, LPCRECTL, BOOL (* )(ULONG_PTR), ULONG_PTR);
    HRESULT (* GetColorSet)(struct IViewObject2 *, DWORD, LONG, void *, DVTARGETDEVICE *, HDC, LOGPALETTE * *);
    HRESULT (* Freeze)(struct IViewObject2 *, DWORD, LONG, void *, DWORD *);
    HRESULT (* Unfreeze)(struct IViewObject2 *, DWORD);
    HRESULT (* SetAdvise)(struct IViewObject2 *, DWORD, DWORD, struct IAdviseSink *);
    HRESULT (* GetAdvise)(struct IViewObject2 *, DWORD *, DWORD *, struct IAdviseSink * *);
    HRESULT (* GetExtent)(struct IViewObject2 *, DWORD, LONG, DVTARGETDEVICE *, LPSIZEL);
};

struct IViewObject2 {
    struct IViewObject2Vtbl * lpVtbl;
};

typedef struct tagOBJECTDESCRIPTOR tagOBJECTDESCRIPTOR, *PtagOBJECTDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR LINKSRCDESCRIPTOR;

struct tagOBJECTDESCRIPTOR {
    ULONG cbSize;
    CLSID clsid;
    DWORD dwDrawAspect;
    SIZEL sizel;
    POINTL pointl;
    DWORD dwStatus;
    DWORD dwFullUserTypeName;
    DWORD dwSrcOfCopy;
};

typedef LPRECT LPBORDERWIDTHS;

typedef struct IDropSource * LPDROPSOURCE;

typedef struct IDropTarget * LPDROPTARGET;

typedef struct IEnumOLEVERB * LPENUMOLEVERB;

typedef struct tagOBJECTDESCRIPTOR * LPLINKSRCDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR * LPOBJECTDESCRIPTOR;

typedef struct IOleAdviseHolder * LPOLEADVISEHOLDER;

typedef struct IOleCache * LPOLECACHE;

typedef struct IOleCache2 * LPOLECACHE2;

typedef struct IOleCacheControl * LPOLECACHECONTROL;

typedef struct IOleClientSite * LPOLECLIENTSITE;

typedef struct IOleContainer * LPOLECONTAINER;

typedef struct IOleInPlaceActiveObject * LPOLEINPLACEACTIVEOBJECT;

typedef struct IOleInPlaceFrame * LPOLEINPLACEFRAME;

typedef struct IOleInPlaceObject * LPOLEINPLACEOBJECT;

typedef struct IOleInPlaceSite * LPOLEINPLACESITE;

typedef struct IOleInPlaceUIWindow * LPOLEINPLACEUIWINDOW;

typedef struct IOleItemContainer * LPOLEITEMCONTAINER;

typedef struct IOleLink * LPOLELINK;

typedef struct IOleObject * LPOLEOBJECT;

typedef enum tagOLERENDER {
    OLERENDER_ASIS=3,
    OLERENDER_DRAW=1,
    OLERENDER_FORMAT=2,
    OLERENDER_NONE=0
} tagOLERENDER;

typedef enum tagOLERENDER OLERENDER;

typedef OLERENDER * LPOLERENDER;

typedef enum tagOLEUPDATE {
    OLEUPDATE_ALWAYS=1,
    OLEUPDATE_ONCALL=3
} tagOLEUPDATE;

typedef enum tagOLEUPDATE OLEUPDATE;

typedef OLEUPDATE * LPOLEUPDATE;

typedef struct IOleWindow * LPOLEWINDOW;

typedef struct IParseDisplayName * LPPARSEDISPLAYNAME;

typedef struct IViewObject * LPVIEWOBJECT;

typedef struct IViewObject2 * LPVIEWOBJECT2;

typedef struct tagOBJECTDESCRIPTOR OBJECTDESCRIPTOR;

typedef enum tagOLECLOSE {
    OLECLOSE_NOSAVE=1,
    OLECLOSE_PROMPTSAVE=2,
    OLECLOSE_SAVEIFDIRTY=0
} tagOLECLOSE;

typedef enum tagOLECLOSE OLECLOSE;

typedef enum tagOLECONTF {
    OLECONTF_EMBEDDINGS=1,
    OLECONTF_LINKS=2,
    OLECONTF_ONLYIFRUNNING=16,
    OLECONTF_ONLYUSER=8,
    OLECONTF_OTHERS=4
} tagOLECONTF;

typedef enum tagOLECONTF OLECONTF;

typedef enum tagOLEGETMONIKER {
    OLEGETMONIKER_FORCEASSIGN=2,
    OLEGETMONIKER_ONLYIFTHERE=1,
    OLEGETMONIKER_TEMPFORUSER=4,
    OLEGETMONIKER_UNASSIGN=3
} tagOLEGETMONIKER;

typedef enum tagOLEGETMONIKER OLEGETMONIKER;

typedef struct tagOIFI OLEINPLACEFRAMEINFO;

typedef enum tagOLELINKBIND {
    OLELINKBIND_EVENIFCLASSDIFF=1
} tagOLELINKBIND;

typedef enum tagOLELINKBIND OLELINKBIND;

typedef struct tagOleMenuGroupWidths OLEMENUGROUPWIDTHS;

typedef enum tagOLEMISC {
    OLEMISC_ACTIVATEWHENVISIBLE=256,
    OLEMISC_ACTSLIKEBUTTON=4096,
    OLEMISC_ACTSLIKELABEL=8192,
    OLEMISC_ALIGNABLE=32768,
    OLEMISC_ALWAYSRUN=2048,
    OLEMISC_CANLINKBYOLE1=32,
    OLEMISC_CANTLINKINSIDE=16,
    OLEMISC_IGNOREACTIVATEWHENVISIBLE=524288,
    OLEMISC_IMEMODE=262144,
    OLEMISC_INSERTNOTREPLACE=4,
    OLEMISC_INSIDEOUT=128,
    OLEMISC_INVISIBLEATRUNTIME=1024,
    OLEMISC_ISLINKOBJECT=64,
    OLEMISC_NOUIACTIVATE=16384,
    OLEMISC_ONLYICONIC=2,
    OLEMISC_RECOMPOSEONRESIZE=1,
    OLEMISC_RENDERINGISDEVICEINDEPENDENT=512,
    OLEMISC_SETCLIENTSITEFIRST=131072,
    OLEMISC_SIMPLEFRAME=65536,
    OLEMISC_STATIC=8,
    OLEMISC_SUPPORTSMULTILEVELUNDO=2097152,
    OLEMISC_WANTSTOMENUMERGE=1048576
} tagOLEMISC;

typedef enum tagOLEMISC OLEMISC;

typedef struct tagOLEVERB OLEVERB;

typedef enum tagOLEVERBATTRIB {
    OLEVERBATTRIB_NEVERDIRTIES=1,
    OLEVERBATTRIB_ONCONTAINERMENU=2
} tagOLEVERBATTRIB;

typedef enum tagOLEVERBATTRIB OLEVERBATTRIB;

typedef enum tagOLEWHICHMK {
    OLEWHICHMK_CONTAINER=1,
    OLEWHICHMK_OBJFULL=3,
    OLEWHICHMK_OBJREL=2
} tagOLEWHICHMK;

typedef enum tagOLEWHICHMK OLEWHICHMK;

typedef struct tagOBJECTDESCRIPTOR * PLINKSRCDESCRIPTOR;

typedef struct tagOBJECTDESCRIPTOR * POBJECTDESCRIPTOR;

typedef OLEUPDATE * POLEUPDATE;

typedef enum tagUSERCLASSTYPE {
    USERCLASSTYPE_APPNAME=3,
    USERCLASSTYPE_FULL=1,
    USERCLASSTYPE_SHORT=2
} tagUSERCLASSTYPE;

typedef enum tagUSERCLASSTYPE USERCLASSTYPE;

typedef void * omp_lock_t;

typedef void * omp_nest_lock_t;

#define _WIN32_FUSION 256

#define NULL 0

typedef struct _FDATE _FDATE, *P_FDATE;

typedef union anon__struct_3279_bitfield_1 anon__struct_3279_bitfield_1, *Panon__struct_3279_bitfield_1;

union anon__struct_3279_bitfield_1 {
    ushort day:5; /* : bits 0-4 */
    ushort month:4; /* : bits 5-8 */
    ushort year:7; /* : bits 9-15 */
};

struct _FDATE {
    union anon__struct_3279_bitfield_1 field_0x0;
};

typedef struct _FTIME _FTIME, *P_FTIME;

typedef union anon__struct_3278_bitfield_1 anon__struct_3278_bitfield_1, *Panon__struct_3278_bitfield_1;

union anon__struct_3278_bitfield_1 {
    ushort twosecs:5; /* : bits 0-4 */
    ushort minutes:6; /* : bits 5-10 */
    ushort hours:5; /* : bits 11-15 */
};

struct _FTIME {
    union anon__struct_3278_bitfield_1 field_0x0;
};

typedef struct _FDATE FDATE;

typedef struct _FTIME FTIME;

typedef FDATE * PFDATE;

typedef FTIME * PFTIME;

#define APPLY_OPTION_FAIL_IF_CLOSE 2

#define APPLY_OPTION_FAIL_IF_EXACT 1

#define APPLY_OPTION_TEST_ONLY 4

#define APPLY_OPTION_VALID_FLAGS 7

#define ERROR_PATCH_BIGGER_THAN_COMPRESSED 3222155525

#define ERROR_PATCH_CORRUPT 3222159618

#define ERROR_PATCH_DECODE_FAILURE 3222159617

#define ERROR_PATCH_ENCODE_FAILURE 3222155521

#define ERROR_PATCH_IMAGEHLP_FAILURE 3222155526

#define ERROR_PATCH_INVALID_OPTIONS 3222155522

#define ERROR_PATCH_NEWER_FORMAT 3222159619

#define ERROR_PATCH_NOT_AVAILABLE 3222159622

#define ERROR_PATCH_NOT_NECESSARY 3222159621

#define ERROR_PATCH_RETAIN_RANGES_DIFFER 3222155524

#define ERROR_PATCH_SAME_FILE 3222155523

#define ERROR_PATCH_WRONG_FILE 3222159620

#define PATCH_OPTION_FAIL_IF_BIGGER 1048576

#define PATCH_OPTION_FAIL_IF_SAME_FILE 524288

#define PATCH_OPTION_INTERLEAVE_FILES 1073741824

#define PATCH_OPTION_NO_BINDFIX 65536

#define PATCH_OPTION_NO_CHECKSUM 2097152

#define PATCH_OPTION_NO_LOCKFIX 131072

#define PATCH_OPTION_NO_REBASE 262144

#define PATCH_OPTION_NO_RESTIMEFIX 4194304

#define PATCH_OPTION_NO_TIMESTAMP 8388608

#define PATCH_OPTION_RESERVED1 2147483648

#define PATCH_OPTION_SIGNATURE_MD5 16777216

#define PATCH_OPTION_USE_BEST 0

#define PATCH_OPTION_USE_LZX_A 1

#define PATCH_OPTION_USE_LZX_B 2

#define PATCH_OPTION_USE_LZX_BEST 3

#define PATCH_OPTION_USE_LZX_LARGE 4

#define PATCH_OPTION_VALID_FLAGS 3237937159

#define PATCH_SYMBOL_NO_FAILURES 2

#define PATCH_SYMBOL_NO_IMAGEHLP 1

#define PATCH_SYMBOL_RESERVED1 2147483648

#define PATCH_SYMBOL_UNDECORATED_TOO 4

#define PATCH_TRANSFORM_PE_IRELOC_2 512

#define PATCH_TRANSFORM_PE_RESOURCE_2 256

typedef struct _PATCH_IGNORE_RANGE _PATCH_IGNORE_RANGE, *P_PATCH_IGNORE_RANGE;

struct _PATCH_IGNORE_RANGE {
    ULONG OffsetInOldFile;
    ULONG LengthInBytes;
};

typedef struct _PATCH_INTERLEAVE_MAP _PATCH_INTERLEAVE_MAP, *P_PATCH_INTERLEAVE_MAP;

typedef struct _struct_6987 _struct_6987, *P_struct_6987;

struct _struct_6987 {
    ULONG OldOffset;
    ULONG OldLength;
    ULONG NewLength;
};

struct _PATCH_INTERLEAVE_MAP {
    ULONG CountRanges;
    struct _struct_6987 Range[1];
};

typedef struct _PATCH_OLD_FILE_INFO _PATCH_OLD_FILE_INFO, *P_PATCH_OLD_FILE_INFO;

typedef union _union_6985 _union_6985, *P_union_6985;

typedef struct _PATCH_IGNORE_RANGE * PPATCH_IGNORE_RANGE;

typedef struct _PATCH_RETAIN_RANGE _PATCH_RETAIN_RANGE, *P_PATCH_RETAIN_RANGE;

typedef struct _PATCH_RETAIN_RANGE * PPATCH_RETAIN_RANGE;

union _union_6985 {
    LPCSTR OldFileNameA;
    LPCWSTR OldFileNameW;
    HANDLE OldFileHandle;
};

struct _PATCH_OLD_FILE_INFO {
    ULONG SizeOfThisStruct;
    union _union_6985 field_0x4;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
};

struct _PATCH_RETAIN_RANGE {
    ULONG OffsetInOldFile;
    ULONG LengthInBytes;
    ULONG OffsetInNewFile;
};

typedef struct _PATCH_OLD_FILE_INFO_A _PATCH_OLD_FILE_INFO_A, *P_PATCH_OLD_FILE_INFO_A;

struct _PATCH_OLD_FILE_INFO_A {
    ULONG SizeOfThisStruct;
    LPCSTR OldFileName;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
};

typedef struct _PATCH_OLD_FILE_INFO_H _PATCH_OLD_FILE_INFO_H, *P_PATCH_OLD_FILE_INFO_H;

struct _PATCH_OLD_FILE_INFO_H {
    ULONG SizeOfThisStruct;
    HANDLE OldFileHandle;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
};

typedef struct _PATCH_OLD_FILE_INFO_W _PATCH_OLD_FILE_INFO_W, *P_PATCH_OLD_FILE_INFO_W;

struct _PATCH_OLD_FILE_INFO_W {
    ULONG SizeOfThisStruct;
    LPCWSTR OldFileName;
    ULONG IgnoreRangeCount;
    PPATCH_IGNORE_RANGE IgnoreRangeArray;
    ULONG RetainRangeCount;
    PPATCH_RETAIN_RANGE RetainRangeArray;
};

typedef struct _PATCH_OPTION_DATA _PATCH_OPTION_DATA, *P_PATCH_OPTION_DATA;

typedef BOOL (PATCH_SYMLOAD_CALLBACK)(ULONG, LPCSTR, ULONG, ULONG, ULONG, ULONG, ULONG, PVOID);

typedef PATCH_SYMLOAD_CALLBACK * PPATCH_SYMLOAD_CALLBACK;

typedef struct _PATCH_INTERLEAVE_MAP * PPATCH_INTERLEAVE_MAP;

struct _PATCH_OPTION_DATA {
    ULONG SizeOfThisStruct;
    ULONG SymbolOptionFlags;
    LPCSTR NewFileSymbolPath;
    LPCSTR * OldFileSymbolPathArray;
    ULONG ExtendedOptionFlags;
    PPATCH_SYMLOAD_CALLBACK SymLoadCallback;
    PVOID SymLoadContext;
    PPATCH_INTERLEAVE_MAP * InterleaveMapArray;
    ULONG MaxLzxWindowSize;
};

typedef struct _PATCH_IGNORE_RANGE PATCH_IGNORE_RANGE;

typedef struct _PATCH_INTERLEAVE_MAP PATCH_INTERLEAVE_MAP;

typedef struct _PATCH_OLD_FILE_INFO PATCH_OLD_FILE_INFO;

typedef struct _PATCH_OLD_FILE_INFO_A PATCH_OLD_FILE_INFO_A;

typedef struct _PATCH_OLD_FILE_INFO_H PATCH_OLD_FILE_INFO_H;

typedef struct _PATCH_OLD_FILE_INFO_W PATCH_OLD_FILE_INFO_W;

typedef struct _PATCH_OPTION_DATA PATCH_OPTION_DATA;

typedef BOOL (PATCH_PROGRESS_CALLBACK)(PVOID, ULONG, ULONG);

typedef struct _PATCH_RETAIN_RANGE PATCH_RETAIN_RANGE;

typedef struct _PATCH_OLD_FILE_INFO * PPATCH_OLD_FILE_INFO;

typedef struct _PATCH_OLD_FILE_INFO_A * PPATCH_OLD_FILE_INFO_A;

typedef struct _PATCH_OLD_FILE_INFO_H * PPATCH_OLD_FILE_INFO_H;

typedef struct _PATCH_OLD_FILE_INFO_W * PPATCH_OLD_FILE_INFO_W;

typedef struct _PATCH_OPTION_DATA * PPATCH_OPTION_DATA;

typedef PATCH_PROGRESS_CALLBACK * PPATCH_PROGRESS_CALLBACK;

typedef void (* POGOAUTOSWEEPPROCA)(char *);

typedef void (* POGOAUTOSWEEPPROCW)(wchar_t *);

#define _MM_DENORMALS_ZERO_MASK 64

#define _MM_DENORMALS_ZERO_OFF 0

#define _MM_DENORMALS_ZERO_ON 64

typedef struct IPortableDeviceContent2 IPortableDeviceContent2, *PIPortableDeviceContent2;

typedef struct IPortableDeviceContent2Vtbl IPortableDeviceContent2Vtbl, *PIPortableDeviceContent2Vtbl;

struct IPortableDeviceContent2 {
    struct IPortableDeviceContent2Vtbl * lpVtbl;
};

struct IPortableDeviceContent2Vtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceContent2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceContent2 *);
    ULONG (* Release)(struct IPortableDeviceContent2 *);
    HRESULT (* EnumObjects)(struct IPortableDeviceContent2 *, DWORD, LPCWSTR, struct IPortableDeviceValues *, struct IEnumPortableDeviceObjectIDs * *);
    HRESULT (* Properties)(struct IPortableDeviceContent2 *, struct IPortableDeviceProperties * *);
    HRESULT (* Transfer)(struct IPortableDeviceContent2 *, struct IPortableDeviceResources * *);
    HRESULT (* CreateObjectWithPropertiesOnly)(struct IPortableDeviceContent2 *, struct IPortableDeviceValues *, LPWSTR *);
    HRESULT (* CreateObjectWithPropertiesAndData)(struct IPortableDeviceContent2 *, struct IPortableDeviceValues *, struct IStream * *, DWORD *, LPWSTR *);
    HRESULT (* Delete)(struct IPortableDeviceContent2 *, DWORD, struct IPortableDevicePropVariantCollection *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetObjectIDsFromPersistentUniqueIDs)(struct IPortableDeviceContent2 *, struct IPortableDevicePropVariantCollection *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* Cancel)(struct IPortableDeviceContent2 *);
    HRESULT (* Move)(struct IPortableDeviceContent2 *, struct IPortableDevicePropVariantCollection *, LPCWSTR, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* Copy)(struct IPortableDeviceContent2 *, struct IPortableDevicePropVariantCollection *, LPCWSTR, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* UpdateObjectWithPropertiesAndData)(struct IPortableDeviceContent2 *, LPCWSTR, struct IPortableDeviceValues *, struct IStream * *, DWORD *);
};

typedef struct IPortableDeviceDataStream IPortableDeviceDataStream, *PIPortableDeviceDataStream;

typedef struct IPortableDeviceDataStreamVtbl IPortableDeviceDataStreamVtbl, *PIPortableDeviceDataStreamVtbl;

struct IPortableDeviceDataStream {
    struct IPortableDeviceDataStreamVtbl * lpVtbl;
};

struct IPortableDeviceDataStreamVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceDataStream *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceDataStream *);
    ULONG (* Release)(struct IPortableDeviceDataStream *);
    HRESULT (* Read)(struct IPortableDeviceDataStream *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct IPortableDeviceDataStream *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct IPortableDeviceDataStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct IPortableDeviceDataStream *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct IPortableDeviceDataStream *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct IPortableDeviceDataStream *, DWORD);
    HRESULT (* Revert)(struct IPortableDeviceDataStream *);
    HRESULT (* LockRegion)(struct IPortableDeviceDataStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct IPortableDeviceDataStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct IPortableDeviceDataStream *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct IPortableDeviceDataStream *, struct IStream * *);
    HRESULT (* GetObjectID)(struct IPortableDeviceDataStream *, LPWSTR *);
    HRESULT (* Cancel)(struct IPortableDeviceDataStream *);
};

typedef struct IPortableDeviceDispatchFactory IPortableDeviceDispatchFactory, *PIPortableDeviceDispatchFactory;

typedef struct IPortableDeviceDispatchFactoryVtbl IPortableDeviceDispatchFactoryVtbl, *PIPortableDeviceDispatchFactoryVtbl;

struct IPortableDeviceDispatchFactoryVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceDispatchFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceDispatchFactory *);
    ULONG (* Release)(struct IPortableDeviceDispatchFactory *);
    HRESULT (* GetDeviceDispatch)(struct IPortableDeviceDispatchFactory *, LPCWSTR, struct IDispatch * *);
};

struct IPortableDeviceDispatchFactory {
    struct IPortableDeviceDispatchFactoryVtbl * lpVtbl;
};

typedef struct IPortableDeviceManager IPortableDeviceManager, *PIPortableDeviceManager;

typedef struct IPortableDeviceManagerVtbl IPortableDeviceManagerVtbl, *PIPortableDeviceManagerVtbl;

struct IPortableDeviceManager {
    struct IPortableDeviceManagerVtbl * lpVtbl;
};

struct IPortableDeviceManagerVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceManager *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceManager *);
    ULONG (* Release)(struct IPortableDeviceManager *);
    HRESULT (* GetDevices)(struct IPortableDeviceManager *, LPWSTR *, DWORD *);
    HRESULT (* RefreshDeviceList)(struct IPortableDeviceManager *);
    HRESULT (* GetDeviceFriendlyName)(struct IPortableDeviceManager *, LPCWSTR, WCHAR *, DWORD *);
    HRESULT (* GetDeviceDescription)(struct IPortableDeviceManager *, LPCWSTR, WCHAR *, DWORD *);
    HRESULT (* GetDeviceManufacturer)(struct IPortableDeviceManager *, LPCWSTR, WCHAR *, DWORD *);
    HRESULT (* GetDeviceProperty)(struct IPortableDeviceManager *, LPCWSTR, LPCWSTR, BYTE *, DWORD *, DWORD *);
    HRESULT (* GetPrivateDevices)(struct IPortableDeviceManager *, LPWSTR *, DWORD *);
};

typedef struct IPortableDevicePropertiesBulk IPortableDevicePropertiesBulk, *PIPortableDevicePropertiesBulk;

typedef struct IPortableDevicePropertiesBulkVtbl IPortableDevicePropertiesBulkVtbl, *PIPortableDevicePropertiesBulkVtbl;

typedef struct IPortableDevicePropertiesBulkCallback IPortableDevicePropertiesBulkCallback, *PIPortableDevicePropertiesBulkCallback;

typedef struct IPortableDevicePropertiesBulkCallbackVtbl IPortableDevicePropertiesBulkCallbackVtbl, *PIPortableDevicePropertiesBulkCallbackVtbl;

struct IPortableDevicePropertiesBulkCallback {
    struct IPortableDevicePropertiesBulkCallbackVtbl * lpVtbl;
};

struct IPortableDevicePropertiesBulkVtbl {
    HRESULT (* QueryInterface)(struct IPortableDevicePropertiesBulk *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDevicePropertiesBulk *);
    ULONG (* Release)(struct IPortableDevicePropertiesBulk *);
    HRESULT (* QueueGetValuesByObjectList)(struct IPortableDevicePropertiesBulk *, struct IPortableDevicePropVariantCollection *, struct IPortableDeviceKeyCollection *, struct IPortableDevicePropertiesBulkCallback *, GUID *);
    HRESULT (* QueueGetValuesByObjectFormat)(struct IPortableDevicePropertiesBulk *, GUID *, LPCWSTR, DWORD, struct IPortableDeviceKeyCollection *, struct IPortableDevicePropertiesBulkCallback *, GUID *);
    HRESULT (* QueueSetValuesByObjectList)(struct IPortableDevicePropertiesBulk *, struct IPortableDeviceValuesCollection *, struct IPortableDevicePropertiesBulkCallback *, GUID *);
    HRESULT (* Start)(struct IPortableDevicePropertiesBulk *, GUID *);
    HRESULT (* Cancel)(struct IPortableDevicePropertiesBulk *, GUID *);
};

struct IPortableDevicePropertiesBulk {
    struct IPortableDevicePropertiesBulkVtbl * lpVtbl;
};

struct IPortableDevicePropertiesBulkCallbackVtbl {
    HRESULT (* QueryInterface)(struct IPortableDevicePropertiesBulkCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDevicePropertiesBulkCallback *);
    ULONG (* Release)(struct IPortableDevicePropertiesBulkCallback *);
    HRESULT (* OnStart)(struct IPortableDevicePropertiesBulkCallback *, GUID *);
    HRESULT (* OnProgress)(struct IPortableDevicePropertiesBulkCallback *, GUID *, struct IPortableDeviceValuesCollection *);
    HRESULT (* OnEnd)(struct IPortableDevicePropertiesBulkCallback *, GUID *, HRESULT);
};

typedef struct IPortableDeviceService IPortableDeviceService, *PIPortableDeviceService;

typedef struct IPortableDeviceServiceVtbl IPortableDeviceServiceVtbl, *PIPortableDeviceServiceVtbl;

typedef struct IPortableDeviceServiceCapabilities IPortableDeviceServiceCapabilities, *PIPortableDeviceServiceCapabilities;

typedef struct IPortableDeviceServiceMethods IPortableDeviceServiceMethods, *PIPortableDeviceServiceMethods;

typedef struct IPortableDeviceServiceCapabilitiesVtbl IPortableDeviceServiceCapabilitiesVtbl, *PIPortableDeviceServiceCapabilitiesVtbl;

typedef struct IPortableDeviceServiceMethodsVtbl IPortableDeviceServiceMethodsVtbl, *PIPortableDeviceServiceMethodsVtbl;

typedef struct IPortableDeviceServiceMethodCallback IPortableDeviceServiceMethodCallback, *PIPortableDeviceServiceMethodCallback;

typedef struct IPortableDeviceServiceMethodCallbackVtbl IPortableDeviceServiceMethodCallbackVtbl, *PIPortableDeviceServiceMethodCallbackVtbl;

struct IPortableDeviceServiceMethods {
    struct IPortableDeviceServiceMethodsVtbl * lpVtbl;
};

struct IPortableDeviceServiceCapabilities {
    struct IPortableDeviceServiceCapabilitiesVtbl * lpVtbl;
};

struct IPortableDeviceServiceVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceService *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceService *);
    ULONG (* Release)(struct IPortableDeviceService *);
    HRESULT (* Open)(struct IPortableDeviceService *, LPCWSTR, struct IPortableDeviceValues *);
    HRESULT (* Capabilities)(struct IPortableDeviceService *, struct IPortableDeviceServiceCapabilities * *);
    HRESULT (* Content)(struct IPortableDeviceService *, struct IPortableDeviceContent2 * *);
    HRESULT (* Methods)(struct IPortableDeviceService *, struct IPortableDeviceServiceMethods * *);
    HRESULT (* Cancel)(struct IPortableDeviceService *);
    HRESULT (* Close)(struct IPortableDeviceService *);
    HRESULT (* GetServiceObjectID)(struct IPortableDeviceService *, LPWSTR *);
    HRESULT (* GetPnPServiceID)(struct IPortableDeviceService *, LPWSTR *);
    HRESULT (* Advise)(struct IPortableDeviceService *, DWORD, struct IPortableDeviceEventCallback *, struct IPortableDeviceValues *, LPWSTR *);
    HRESULT (* Unadvise)(struct IPortableDeviceService *, LPCWSTR);
    HRESULT (* SendCommand)(struct IPortableDeviceService *, DWORD, struct IPortableDeviceValues *, struct IPortableDeviceValues * *);
};

struct IPortableDeviceServiceMethodCallbackVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceServiceMethodCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceServiceMethodCallback *);
    ULONG (* Release)(struct IPortableDeviceServiceMethodCallback *);
    HRESULT (* OnComplete)(struct IPortableDeviceServiceMethodCallback *, HRESULT, struct IPortableDeviceValues *);
};

struct IPortableDeviceService {
    struct IPortableDeviceServiceVtbl * lpVtbl;
};

struct IPortableDeviceServiceMethodsVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceServiceMethods *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceServiceMethods *);
    ULONG (* Release)(struct IPortableDeviceServiceMethods *);
    HRESULT (* Invoke)(struct IPortableDeviceServiceMethods *, GUID *, struct IPortableDeviceValues *, struct IPortableDeviceValues * *);
    HRESULT (* InvokeAsync)(struct IPortableDeviceServiceMethods *, GUID *, struct IPortableDeviceValues *, struct IPortableDeviceServiceMethodCallback *);
    HRESULT (* Cancel)(struct IPortableDeviceServiceMethods *, struct IPortableDeviceServiceMethodCallback *);
};

struct IPortableDeviceServiceCapabilitiesVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceServiceCapabilities *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceServiceCapabilities *);
    ULONG (* Release)(struct IPortableDeviceServiceCapabilities *);
    HRESULT (* GetSupportedMethods)(struct IPortableDeviceServiceCapabilities *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetSupportedMethodsByFormat)(struct IPortableDeviceServiceCapabilities *, GUID *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetMethodAttributes)(struct IPortableDeviceServiceCapabilities *, GUID *, struct IPortableDeviceValues * *);
    HRESULT (* GetMethodParameterAttributes)(struct IPortableDeviceServiceCapabilities *, GUID *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* GetSupportedFormats)(struct IPortableDeviceServiceCapabilities *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetFormatAttributes)(struct IPortableDeviceServiceCapabilities *, GUID *, struct IPortableDeviceValues * *);
    HRESULT (* GetSupportedFormatProperties)(struct IPortableDeviceServiceCapabilities *, GUID *, struct IPortableDeviceKeyCollection * *);
    HRESULT (* GetFormatPropertyAttributes)(struct IPortableDeviceServiceCapabilities *, GUID *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* GetSupportedEvents)(struct IPortableDeviceServiceCapabilities *, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetEventAttributes)(struct IPortableDeviceServiceCapabilities *, GUID *, struct IPortableDeviceValues * *);
    HRESULT (* GetEventParameterAttributes)(struct IPortableDeviceServiceCapabilities *, GUID *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* GetInheritedServices)(struct IPortableDeviceServiceCapabilities *, DWORD, struct IPortableDevicePropVariantCollection * *);
    HRESULT (* GetFormatRenderingProfiles)(struct IPortableDeviceServiceCapabilities *, GUID *, struct IPortableDeviceValuesCollection * *);
    HRESULT (* GetSupportedCommands)(struct IPortableDeviceServiceCapabilities *, struct IPortableDeviceKeyCollection * *);
    HRESULT (* GetCommandOptions)(struct IPortableDeviceServiceCapabilities *, PROPERTYKEY *, struct IPortableDeviceValues * *);
    HRESULT (* Cancel)(struct IPortableDeviceServiceCapabilities *);
};

struct IPortableDeviceServiceMethodCallback {
    struct IPortableDeviceServiceMethodCallbackVtbl * lpVtbl;
};

typedef struct IPortableDeviceServiceManager IPortableDeviceServiceManager, *PIPortableDeviceServiceManager;

typedef struct IPortableDeviceServiceManagerVtbl IPortableDeviceServiceManagerVtbl, *PIPortableDeviceServiceManagerVtbl;

struct IPortableDeviceServiceManagerVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceServiceManager *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceServiceManager *);
    ULONG (* Release)(struct IPortableDeviceServiceManager *);
    HRESULT (* GetDeviceServices)(struct IPortableDeviceServiceManager *, LPCWSTR, GUID *, LPWSTR *, DWORD *);
    HRESULT (* GetDeviceForService)(struct IPortableDeviceServiceManager *, LPCWSTR, LPWSTR *);
};

struct IPortableDeviceServiceManager {
    struct IPortableDeviceServiceManagerVtbl * lpVtbl;
};

typedef struct PortableDevice PortableDevice, *PPortableDevice;

struct PortableDevice {
};

typedef struct PortableDeviceDispatchFactory PortableDeviceDispatchFactory, *PPortableDeviceDispatchFactory;

struct PortableDeviceDispatchFactory {
};

typedef struct PortableDeviceFTM PortableDeviceFTM, *PPortableDeviceFTM;

struct PortableDeviceFTM {
};

typedef struct PortableDeviceManager PortableDeviceManager, *PPortableDeviceManager;

struct PortableDeviceManager {
};

typedef struct PortableDeviceService PortableDeviceService, *PPortableDeviceService;

struct PortableDeviceService {
};

typedef struct PortableDeviceServiceFTM PortableDeviceServiceFTM, *PPortableDeviceServiceFTM;

struct PortableDeviceServiceFTM {
};

typedef struct EnumBthMtpConnectors EnumBthMtpConnectors, *PEnumBthMtpConnectors;

struct EnumBthMtpConnectors {
};

typedef struct IConnectionRequestCallback IConnectionRequestCallback, *PIConnectionRequestCallback;

typedef struct IConnectionRequestCallbackVtbl IConnectionRequestCallbackVtbl, *PIConnectionRequestCallbackVtbl;

struct IConnectionRequestCallbackVtbl {
    HRESULT (* QueryInterface)(struct IConnectionRequestCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IConnectionRequestCallback *);
    ULONG (* Release)(struct IConnectionRequestCallback *);
    HRESULT (* OnComplete)(struct IConnectionRequestCallback *, HRESULT);
};

struct IConnectionRequestCallback {
    struct IConnectionRequestCallbackVtbl * lpVtbl;
};

typedef struct IEnumPortableDeviceConnectors IEnumPortableDeviceConnectors, *PIEnumPortableDeviceConnectors;

typedef struct IEnumPortableDeviceConnectorsVtbl IEnumPortableDeviceConnectorsVtbl, *PIEnumPortableDeviceConnectorsVtbl;

typedef struct IPortableDeviceConnector IPortableDeviceConnector, *PIPortableDeviceConnector;

typedef struct IPortableDeviceConnectorVtbl IPortableDeviceConnectorVtbl, *PIPortableDeviceConnectorVtbl;

struct IEnumPortableDeviceConnectors {
    struct IEnumPortableDeviceConnectorsVtbl * lpVtbl;
};

struct IPortableDeviceConnectorVtbl {
    HRESULT (* QueryInterface)(struct IPortableDeviceConnector *, IID *, void * *);
    ULONG (* AddRef)(struct IPortableDeviceConnector *);
    ULONG (* Release)(struct IPortableDeviceConnector *);
    HRESULT (* Connect)(struct IPortableDeviceConnector *, struct IConnectionRequestCallback *);
    HRESULT (* Disconnect)(struct IPortableDeviceConnector *, struct IConnectionRequestCallback *);
    HRESULT (* Cancel)(struct IPortableDeviceConnector *, struct IConnectionRequestCallback *);
    HRESULT (* GetProperty)(struct IPortableDeviceConnector *, DEVPROPKEY *, DEVPROPTYPE *, BYTE * *, UINT32 *);
    HRESULT (* SetProperty)(struct IPortableDeviceConnector *, DEVPROPKEY *, DEVPROPTYPE, BYTE *, UINT32);
    HRESULT (* GetPnPID)(struct IPortableDeviceConnector *, LPWSTR *);
};

struct IPortableDeviceConnector {
    struct IPortableDeviceConnectorVtbl * lpVtbl;
};

struct IEnumPortableDeviceConnectorsVtbl {
    HRESULT (* QueryInterface)(struct IEnumPortableDeviceConnectors *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumPortableDeviceConnectors *);
    ULONG (* Release)(struct IEnumPortableDeviceConnectors *);
    HRESULT (* Next)(struct IEnumPortableDeviceConnectors *, UINT32, struct IPortableDeviceConnector * *, UINT32 *);
    HRESULT (* Skip)(struct IEnumPortableDeviceConnectors *, UINT32);
    HRESULT (* Reset)(struct IEnumPortableDeviceConnectors *);
    HRESULT (* Clone)(struct IEnumPortableDeviceConnectors *, struct IEnumPortableDeviceConnectors * *);
};

typedef struct IWpdSerializer IWpdSerializer, *PIWpdSerializer;

typedef struct IWpdSerializerVtbl IWpdSerializerVtbl, *PIWpdSerializerVtbl;

struct IWpdSerializerVtbl {
    HRESULT (* QueryInterface)(struct IWpdSerializer *, IID *, void * *);
    ULONG (* AddRef)(struct IWpdSerializer *);
    ULONG (* Release)(struct IWpdSerializer *);
    HRESULT (* GetIPortableDeviceValuesFromBuffer)(struct IWpdSerializer *, BYTE *, DWORD, struct IPortableDeviceValues * *);
    HRESULT (* WriteIPortableDeviceValuesToBuffer)(struct IWpdSerializer *, DWORD, struct IPortableDeviceValues *, BYTE *, DWORD *);
    HRESULT (* GetBufferFromIPortableDeviceValues)(struct IWpdSerializer *, struct IPortableDeviceValues *, BYTE * *, DWORD *);
    HRESULT (* GetSerializedSize)(struct IWpdSerializer *, struct IPortableDeviceValues *, DWORD *);
};

struct IWpdSerializer {
    struct IWpdSerializerVtbl * lpVtbl;
};

typedef struct PortableDeviceKeyCollection PortableDeviceKeyCollection, *PPortableDeviceKeyCollection;

struct PortableDeviceKeyCollection {
};

typedef struct PortableDevicePropVariantCollection PortableDevicePropVariantCollection, *PPortableDevicePropVariantCollection;

struct PortableDevicePropVariantCollection {
};

typedef struct PortableDeviceValues PortableDeviceValues, *PPortableDeviceValues;

struct PortableDeviceValues {
};

typedef struct PortableDeviceValuesCollection PortableDeviceValuesCollection, *PPortableDeviceValuesCollection;

struct PortableDeviceValuesCollection {
};

typedef struct WpdSerializer WpdSerializer, *PWpdSerializer;

struct WpdSerializer {
};

#define _OLD_P_OVERLAY 2

#define _P_DETACH 4

#define _P_NOWAIT 1

#define _P_NOWAITO 3

#define _P_OVERLAY 2

#define _P_WAIT 0

#define _WAIT_CHILD 0

#define _WAIT_GRANDCHILD 1

#define OLD_P_OVERLAY 2

#define P_DETACH 4

#define P_NOWAIT 1

#define P_NOWAITO 3

#define P_OVERLAY 2

#define P_WAIT 0

#define WAIT_CHILD 0

#define WAIT_GRANDCHILD 1

typedef void * NTPROP;

#define CCH_MAX_PROPSTG_NAME 31

#define PID_BEHAVIOR 2147483651

#define PID_CODEPAGE 1

#define PID_DICTIONARY 0

#define PID_FIRST_NAME_DEFAULT 4095

#define PID_FIRST_USABLE 2

#define PID_ILLEGAL 4294967295

#define PID_LOCALE 2147483648

#define PID_MAX_READONLY 3221225471

#define PID_MIN_READONLY 2147483648

#define PID_MODIFY_TIME 2147483649

#define PID_SECURITY 2147483650

#define PIDDI_THUMBNAIL 2

#define PIDDSI_BYTECOUNT 4

#define PIDDSI_CATEGORY 2

#define PIDDSI_COMPANY 15

#define PIDDSI_DOCPARTS 13

#define PIDDSI_HEADINGPAIR 12

#define PIDDSI_HIDDENCOUNT 9

#define PIDDSI_LINECOUNT 5

#define PIDDSI_LINKSDIRTY 16

#define PIDDSI_MANAGER 14

#define PIDDSI_MMCLIPCOUNT 10

#define PIDDSI_NOTECOUNT 8

#define PIDDSI_PARCOUNT 6

#define PIDDSI_PRESFORMAT 3

#define PIDDSI_SCALE 11

#define PIDDSI_SLIDECOUNT 7

#define PIDMSI_COPYRIGHT 11

#define PIDMSI_EDITOR 2

#define PIDMSI_OWNER 8

#define PIDMSI_PRODUCTION 10

#define PIDMSI_PROJECT 6

#define PIDMSI_RATING 9

#define PIDMSI_SEQUENCE_NO 5

#define PIDMSI_SOURCE 4

#define PIDMSI_STATUS 7

#define PIDMSI_SUPPLIER 3

#define PIDSI_APPNAME 18

#define PIDSI_AUTHOR 4

#define PIDSI_CHARCOUNT 16

#define PIDSI_COMMENTS 6

#define PIDSI_CREATE_DTM 12

#define PIDSI_DOC_SECURITY 19

#define PIDSI_EDITTIME 10

#define PIDSI_KEYWORDS 5

#define PIDSI_LASTAUTHOR 8

#define PIDSI_LASTPRINTED 11

#define PIDSI_LASTSAVE_DTM 13

#define PIDSI_PAGECOUNT 14

#define PIDSI_REVNUMBER 9

#define PIDSI_SUBJECT 3

#define PIDSI_TEMPLATE 7

#define PIDSI_THUMBNAIL 17

#define PIDSI_TITLE 2

#define PIDSI_WORDCOUNT 15

#define PROPSET_BEHAVIOR_CASE_SENSITIVE 1

#define PROPSETFLAG_ANSI 2

#define PROPSETFLAG_CASE_SENSITIVE 8

#define PROPSETFLAG_DEFAULT 0

#define PROPSETFLAG_NONSIMPLE 1

#define PROPSETFLAG_UNBUFFERED 4

#define PROPSETHDR_OSVERSION_UNKNOWN 4294967295

#define PRSPEC_INVALID 4294967295

#define PRSPEC_LPWSTR 0

#define PRSPEC_PROPID 1

typedef struct tagCABOOL tagCABOOL, *PtagCABOOL;

typedef struct tagCABOOL CABOOL;

struct tagCABOOL {
    ULONG cElems;
    VARIANT_BOOL * pElems;
};

typedef struct tagCABSTR tagCABSTR, *PtagCABSTR;

typedef struct tagCABSTR CABSTR;

struct tagCABSTR {
    ULONG cElems;
    BSTR * pElems;
};

typedef struct tagCABSTRBLOB tagCABSTRBLOB, *PtagCABSTRBLOB;

typedef struct tagCABSTRBLOB CABSTRBLOB;

typedef struct tagBSTRBLOB tagBSTRBLOB, *PtagBSTRBLOB;

typedef struct tagBSTRBLOB BSTRBLOB;

struct tagCABSTRBLOB {
    ULONG cElems;
    BSTRBLOB * pElems;
};

struct tagBSTRBLOB {
    ULONG cbSize;
    BYTE * pData;
};

typedef struct tagCAC tagCAC, *PtagCAC;

typedef struct tagCAC CAC;

struct tagCAC {
    ULONG cElems;
    CHAR * pElems;
};

typedef struct tagCACLIPDATA tagCACLIPDATA, *PtagCACLIPDATA;

typedef struct tagCACLIPDATA CACLIPDATA;

typedef struct tagCLIPDATA tagCLIPDATA, *PtagCLIPDATA;

typedef struct tagCLIPDATA CLIPDATA;

struct tagCLIPDATA {
    ULONG cbSize;
    long ulClipFmt;
    BYTE * pClipData;
};

struct tagCACLIPDATA {
    ULONG cElems;
    CLIPDATA * pElems;
};

typedef struct tagCACLSID tagCACLSID, *PtagCACLSID;

typedef struct tagCACLSID CACLSID;

struct tagCACLSID {
    ULONG cElems;
    CLSID * pElems;
};

typedef struct tagCACY tagCACY, *PtagCACY;

typedef struct tagCACY CACY;

struct tagCACY {
    ULONG cElems;
    CY * pElems;
};

typedef struct tagCADATE tagCADATE, *PtagCADATE;

typedef struct tagCADATE CADATE;

struct tagCADATE {
    ULONG cElems;
    DATE * pElems;
};

typedef struct tagCADBL tagCADBL, *PtagCADBL;

typedef struct tagCADBL CADBL;

struct tagCADBL {
    ULONG cElems;
    DOUBLE * pElems;
};

typedef struct tagCAFILETIME tagCAFILETIME, *PtagCAFILETIME;

typedef struct tagCAFILETIME CAFILETIME;

struct tagCAFILETIME {
    ULONG cElems;
    FILETIME * pElems;
};

typedef struct tagCAFLT tagCAFLT, *PtagCAFLT;

typedef struct tagCAFLT CAFLT;

struct tagCAFLT {
    ULONG cElems;
    FLOAT * pElems;
};

typedef struct tagCAH tagCAH, *PtagCAH;

typedef struct tagCAH CAH;

struct tagCAH {
    ULONG cElems;
    LARGE_INTEGER * pElems;
};

typedef struct tagCAI tagCAI, *PtagCAI;

typedef struct tagCAI CAI;

struct tagCAI {
    ULONG cElems;
    SHORT * pElems;
};

typedef struct tagCAL tagCAL, *PtagCAL;

typedef struct tagCAL CAL;

struct tagCAL {
    ULONG cElems;
    LONG * pElems;
};

typedef struct tagCALPSTR tagCALPSTR, *PtagCALPSTR;

typedef struct tagCALPSTR CALPSTR;

struct tagCALPSTR {
    ULONG cElems;
    LPSTR * pElems;
};

typedef struct tagCALPWSTR tagCALPWSTR, *PtagCALPWSTR;

typedef struct tagCALPWSTR CALPWSTR;

struct tagCALPWSTR {
    ULONG cElems;
    LPWSTR * pElems;
};

typedef struct tagCAPROPVARIANT tagCAPROPVARIANT, *PtagCAPROPVARIANT;

typedef struct tagCAPROPVARIANT CAPROPVARIANT;

struct tagCAPROPVARIANT {
    ULONG cElems;
    PROPVARIANT * pElems;
};

typedef struct tagCASCODE tagCASCODE, *PtagCASCODE;

typedef struct tagCASCODE CASCODE;

struct tagCASCODE {
    ULONG cElems;
    SCODE * pElems;
};

typedef struct tagCAUB tagCAUB, *PtagCAUB;

typedef struct tagCAUB CAUB;

struct tagCAUB {
    ULONG cElems;
    UCHAR * pElems;
};

typedef struct tagCAUH tagCAUH, *PtagCAUH;

typedef struct tagCAUH CAUH;

struct tagCAUH {
    ULONG cElems;
    ULARGE_INTEGER * pElems;
};

typedef struct tagCAUI tagCAUI, *PtagCAUI;

typedef struct tagCAUI CAUI;

struct tagCAUI {
    ULONG cElems;
    USHORT * pElems;
};

typedef struct tagCAUL tagCAUL, *PtagCAUL;

typedef struct tagCAUL CAUL;

struct tagCAUL {
    ULONG cElems;
    ULONG * pElems;
};

typedef struct IEnumSTATPROPSETSTG IEnumSTATPROPSETSTG, *PIEnumSTATPROPSETSTG;

typedef struct IEnumSTATPROPSETSTGVtbl IEnumSTATPROPSETSTGVtbl, *PIEnumSTATPROPSETSTGVtbl;

struct IEnumSTATPROPSETSTG {
    struct IEnumSTATPROPSETSTGVtbl * lpVtbl;
};

struct IEnumSTATPROPSETSTGVtbl {
    HRESULT (* QueryInterface)(struct IEnumSTATPROPSETSTG *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSTATPROPSETSTG *);
    ULONG (* Release)(struct IEnumSTATPROPSETSTG *);
    HRESULT (* Next)(struct IEnumSTATPROPSETSTG *, ULONG, STATPROPSETSTG *, ULONG *);
    HRESULT (* Skip)(struct IEnumSTATPROPSETSTG *, ULONG);
    HRESULT (* Reset)(struct IEnumSTATPROPSETSTG *);
    HRESULT (* Clone)(struct IEnumSTATPROPSETSTG *, struct IEnumSTATPROPSETSTG * *);
};

typedef struct IPropertySetStorage IPropertySetStorage, *PIPropertySetStorage;

typedef struct IPropertySetStorageVtbl IPropertySetStorageVtbl, *PIPropertySetStorageVtbl;

struct IPropertySetStorageVtbl {
    HRESULT (* QueryInterface)(struct IPropertySetStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertySetStorage *);
    ULONG (* Release)(struct IPropertySetStorage *);
    HRESULT (* Create)(struct IPropertySetStorage *, IID *, CLSID *, DWORD, DWORD, struct IPropertyStorage * *);
    HRESULT (* Open)(struct IPropertySetStorage *, IID *, DWORD, struct IPropertyStorage * *);
    HRESULT (* Delete)(struct IPropertySetStorage *, IID *);
    HRESULT (* Enum)(struct IPropertySetStorage *, struct IEnumSTATPROPSETSTG * *);
};

struct IPropertySetStorage {
    struct IPropertySetStorageVtbl * lpVtbl;
};

typedef struct IEnumSTATPROPSETSTG * LPENUMSTATPROPSETSTG;

typedef struct IEnumSTATPROPSTG * LPENUMSTATPROPSTG;

typedef struct IPropertySetStorage * LPPROPERTYSETSTORAGE;

typedef struct IPropertyStorage * LPPROPERTYSTORAGE;

typedef struct tagPROPVARIANT * LPPROPVARIANT;

typedef struct tagVersionedStream tagVersionedStream, *PtagVersionedStream;

typedef struct tagVersionedStream * LPVERSIONEDSTREAM;

struct tagVersionedStream {
    GUID guidVersion;
    struct IStream * pStream;
};

typedef enum PIDMSI_STATUS_VALUE {
    PIDMSI_STATUS_DRAFT=3,
    PIDMSI_STATUS_EDIT=5,
    PIDMSI_STATUS_FINAL=8,
    PIDMSI_STATUS_INPROGRESS=4,
    PIDMSI_STATUS_NEW=1,
    PIDMSI_STATUS_NORMAL=0,
    PIDMSI_STATUS_OTHER=32767,
    PIDMSI_STATUS_PRELIM=2,
    PIDMSI_STATUS_PROOF=7,
    PIDMSI_STATUS_REVIEW=6
} PIDMSI_STATUS_VALUE;

typedef WORD PROPVAR_PAD1;

typedef WORD PROPVAR_PAD2;

typedef WORD PROPVAR_PAD3;

typedef struct tagSERIALIZEDPROPERTYVALUE tagSERIALIZEDPROPERTYVALUE, *PtagSERIALIZEDPROPERTYVALUE;

typedef struct tagSERIALIZEDPROPERTYVALUE SERIALIZEDPROPERTYVALUE;

struct tagSERIALIZEDPROPERTYVALUE {
    DWORD dwType;
    BYTE rgb[1];
};

typedef struct tagVersionedStream VERSIONEDSTREAM;

#define AUDIO_CHANNELCOUNT_MONO 1

#define AUDIO_CHANNELCOUNT_STEREO 2

#define CALENDAR_RESPONSESTATUS_ACCEPTED 3

#define CALENDAR_RESPONSESTATUS_DECLINED 4

#define CALENDAR_RESPONSESTATUS_NOTRESPONDED 5

#define CALENDAR_RESPONSESTATUS_ORGANIZED 1

#define CALENDAR_RESPONSESTATUS_TENTATIVE 2

#define CALENDAR_SHOWTIMEAS_BUSY 2

#define CALENDAR_SHOWTIMEAS_OOF 3

#define CALENDAR_SHOWTIMEAS_TENTATIVE 1

#define FLAGCOLOR_BLUE 5

#define FLAGCOLOR_GREEN 3

#define FLAGCOLOR_ORANGE 2

#define FLAGCOLOR_PURPLE 1

#define FLAGCOLOR_RED 6

#define FLAGCOLOR_YELLOW 4

#define FLAGSTATUS_COMPLETED 1

#define FLAGSTATUS_FOLLOWUP 2

#define FLAGSTATUS_NOTFLAGGED 0

#define GENDERVALUE_FEMALE 1

#define GENDERVALUE_MALE 2

#define IMAGE_COLORSPACE_SRGB 1

#define IMAGE_COLORSPACE_UNCALIBRATED 65535

#define IMAGE_COMPRESSION_CCITT_T3 2

#define IMAGE_COMPRESSION_CCITT_T4 3

#define IMAGE_COMPRESSION_CCITT_T6 4

#define IMAGE_COMPRESSION_JPEG 6

#define IMAGE_COMPRESSION_LZW 5

#define IMAGE_COMPRESSION_PACKBITS 32773

#define IMAGE_COMPRESSION_UNCOMPRESSED 1

#define IMPORTANCE_HIGH_MAX 5

#define IMPORTANCE_HIGH_MIN 5

#define IMPORTANCE_HIGH_SET 5

#define IMPORTANCE_LOW_MAX 1

#define IMPORTANCE_LOW_MIN 0

#define IMPORTANCE_LOW_SET 1

#define IMPORTANCE_NORMAL_MAX 4

#define IMPORTANCE_NORMAL_MIN 2

#define IMPORTANCE_NORMAL_SET 3

#define LINK_STATUS_BROKEN 2

#define LINK_STATUS_RESOLVED 1

#define NOTE_COLOR_GREEN 1

#define NOTE_COLOR_LIGHTGREEN 5

#define NOTE_COLOR_PINK 2

#define NOTE_COLOR_WHITE 4

#define NOTE_COLOR_YELLOW 3

#define OFFLINEAVAILABILITY_ALWAYS_AVAILABLE 2

#define OFFLINEAVAILABILITY_AVAILABLE 1

#define OFFLINESTATUS_OFFLINE 1

#define OFFLINESTATUS_OFFLINE_ERROR 4

#define OFFLINESTATUS_OFFLINE_FORCED 2

#define OFFLINESTATUS_OFFLINE_ITEM_VERSION_CONFLICT 5

#define OFFLINESTATUS_OFFLINE_SLOW 3

#define OFFLINESTATUS_OFFLINE_SUSPENDED 6

#define PHOTO_CONTRAST_HARD 2

#define PHOTO_CONTRAST_SOFT 1

#define PHOTO_EXPOSUREPROGRAM_ACTION 6

#define PHOTO_EXPOSUREPROGRAM_APERTURE 3

#define PHOTO_EXPOSUREPROGRAM_CREATIVE 5

#define PHOTO_EXPOSUREPROGRAM_LANDSCAPE 8

#define PHOTO_EXPOSUREPROGRAM_MANUAL 1

#define PHOTO_EXPOSUREPROGRAM_NORMAL 2

#define PHOTO_EXPOSUREPROGRAM_PORTRAIT 7

#define PHOTO_EXPOSUREPROGRAM_SHUTTER 4

#define PHOTO_FLASH_FLASH 1

#define PHOTO_FLASH_FLASH_AUTO 25

#define PHOTO_FLASH_FLASH_AUTO_NORETURNLIGHT 29

#define PHOTO_FLASH_FLASH_AUTO_REDEYE 89

#define PHOTO_FLASH_FLASH_AUTO_REDEYE_NORETURNLIGHT 93

#define PHOTO_FLASH_FLASH_AUTO_REDEYE_RETURNLIGHT 95

#define PHOTO_FLASH_FLASH_AUTO_RETURNLIGHT 31

#define PHOTO_FLASH_FLASH_COMPULSORY 9

#define PHOTO_FLASH_FLASH_COMPULSORY_NORETURNLIGHT 13

#define PHOTO_FLASH_FLASH_COMPULSORY_REDEYE 73

#define PHOTO_FLASH_FLASH_COMPULSORY_REDEYE_NORETURNLIGHT 77

#define PHOTO_FLASH_FLASH_COMPULSORY_REDEYE_RETURNLIGHT 79

#define PHOTO_FLASH_FLASH_COMPULSORY_RETURNLIGHT 15

#define PHOTO_FLASH_FLASH_REDEYE 65

#define PHOTO_FLASH_FLASH_REDEYE_NORETURNLIGHT 69

#define PHOTO_FLASH_FLASH_REDEYE_RETURNLIGHT 71

#define PHOTO_FLASH_NOFUNCTION 32

#define PHOTO_FLASH_NONE 0

#define PHOTO_FLASH_NONE_AUTO 24

#define PHOTO_FLASH_NONE_COMPULSORY 16

#define PHOTO_FLASH_WITHOUTSTROBE 5

#define PHOTO_FLASH_WITHSTROBE 7

#define PHOTO_LIGHTSOURCE_D55 20

#define PHOTO_LIGHTSOURCE_D65 21

#define PHOTO_LIGHTSOURCE_D75 22

#define PHOTO_LIGHTSOURCE_DAYLIGHT 1

#define PHOTO_LIGHTSOURCE_FLUORESCENT 2

#define PHOTO_LIGHTSOURCE_STANDARD_A 17

#define PHOTO_LIGHTSOURCE_STANDARD_B 18

#define PHOTO_LIGHTSOURCE_STANDARD_C 19

#define PHOTO_LIGHTSOURCE_TUNGSTEN 3

#define PHOTO_METERINGMODE_AVERAGE 1

#define PHOTO_METERINGMODE_CENTER 2

#define PHOTO_METERINGMODE_MULTISPOT 4

#define PHOTO_METERINGMODE_PARTIAL 6

#define PHOTO_METERINGMODE_PATTERN 5

#define PHOTO_METERINGMODE_SPOT 3

#define PHOTO_ORIENTATION_FLIPHORIZONTAL 2

#define PHOTO_ORIENTATION_FLIPVERTICAL 4

#define PHOTO_ORIENTATION_NORMAL 1

#define PHOTO_ORIENTATION_ROTATE180 3

#define PHOTO_ORIENTATION_ROTATE270 6

#define PHOTO_ORIENTATION_ROTATE90 8

#define PHOTO_ORIENTATION_TRANSPOSE 5

#define PHOTO_ORIENTATION_TRANSVERSE 7

#define PHOTO_PHOTOMETRIC_RGB 2

#define PHOTO_PHOTOMETRIC_YCBCR 6

#define PHOTO_PROGRAMMODE_ACTION 6

#define PHOTO_PROGRAMMODE_APERTURE 3

#define PHOTO_PROGRAMMODE_CREATIVE 5

#define PHOTO_PROGRAMMODE_LANDSCAPE 8

#define PHOTO_PROGRAMMODE_MANUAL 1

#define PHOTO_PROGRAMMODE_NORMAL 2

#define PHOTO_PROGRAMMODE_PORTRAIT 7

#define PHOTO_PROGRAMMODE_SHUTTER 4

#define PHOTO_SATURATION_HIGH 2

#define PHOTO_SATURATION_LOW 1

#define PHOTO_SHARPNESS_HARD 2

#define PHOTO_SHARPNESS_SOFT 1

#define PHOTO_WHITEBALANCE_MANUAL 1

#define PRIORITY_PROP_HIGH 2

#define PRIORITY_PROP_NORMAL 1

#define RATING_FIVE_STARS_MAX 99

#define RATING_FIVE_STARS_MIN 88

#define RATING_FIVE_STARS_SET 99

#define RATING_FOUR_STARS_MAX 87

#define RATING_FOUR_STARS_MIN 63

#define RATING_FOUR_STARS_SET 75

#define RATING_ONE_STAR_MAX 12

#define RATING_ONE_STAR_MIN 1

#define RATING_ONE_STAR_SET 1

#define RATING_THREE_STARS_MAX 62

#define RATING_THREE_STARS_MIN 38

#define RATING_THREE_STARS_SET 50

#define RATING_TWO_STARS_MAX 37

#define RATING_TWO_STARS_MIN 13

#define RATING_TWO_STARS_SET 25

#define SENSITIVITY_PROP_CONFIDENTIAL 3

#define SENSITIVITY_PROP_PERSONAL 1

#define SENSITIVITY_PROP_PRIVATE 2

#define SHARINGSTATUS_PRIVATE 2

#define SHARINGSTATUS_SHARED 1

#define SYNC_HANDLERTYPE_COMPUTERS 5

#define SYNC_HANDLERTYPE_DEVICES 2

#define SYNC_HANDLERTYPE_FOLDERS 3

#define SYNC_HANDLERTYPE_PROGRAMS 1

#define SYNC_HANDLERTYPE_WEBSERVICES 4

#define SYNC_STATE_ERROR 3

#define SYNC_STATE_IDLE 2

#define SYNC_STATE_PENDING 4

#define SYNC_STATE_SYNCING 5

#define SYNC_STATE_SYNCNOTRUN 1

#define TASKSTATUS_COMPLETE 2

#define TASKSTATUS_DEFERRED 4

#define TASKSTATUS_INPROGRESS 1

#define TASKSTATUS_WAITING 3

#define GUIDSTRING_MAX 39

#define PKEY_PIDSTR_MAX 10

#define PKEYSTR_MAX 50

typedef enum _PERSIST_SPROPSTORE_FLAGS {
    FPSPS_DEFAULT=0,
    FPSPS_READONLY=1
} _PERSIST_SPROPSTORE_FLAGS;

typedef enum GETPROPERTYSTOREFLAGS {
    GPS_BESTEFFORT=64,
    GPS_DEFAULT=0,
    GPS_DELAYCREATION=32,
    GPS_FASTPROPERTIESONLY=8,
    GPS_HANDLERPROPERTIESONLY=1,
    GPS_MASK_VALID=255,
    GPS_NO_OPLOCK=128,
    GPS_OPENSLOWITEM=16,
    GPS_READWRITE=2,
    GPS_TEMPORARY=4
} GETPROPERTYSTOREFLAGS;

typedef struct ICreateObject ICreateObject, *PICreateObject;

typedef struct ICreateObjectVtbl ICreateObjectVtbl, *PICreateObjectVtbl;

struct ICreateObject {
    struct ICreateObjectVtbl * lpVtbl;
};

struct ICreateObjectVtbl {
    HRESULT (* QueryInterface)(struct ICreateObject *, IID *, void * *);
    ULONG (* AddRef)(struct ICreateObject *);
    ULONG (* Release)(struct ICreateObject *);
    HRESULT (* CreateObject)(struct ICreateObject *, IID *, struct IUnknown *, IID *, void * *);
};

typedef struct IDelayedPropertyStoreFactory IDelayedPropertyStoreFactory, *PIDelayedPropertyStoreFactory;

typedef struct IDelayedPropertyStoreFactoryVtbl IDelayedPropertyStoreFactoryVtbl, *PIDelayedPropertyStoreFactoryVtbl;

struct IDelayedPropertyStoreFactoryVtbl {
    HRESULT (* QueryInterface)(struct IDelayedPropertyStoreFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IDelayedPropertyStoreFactory *);
    ULONG (* Release)(struct IDelayedPropertyStoreFactory *);
    HRESULT (* GetPropertyStore)(struct IDelayedPropertyStoreFactory *, enum GETPROPERTYSTOREFLAGS, struct IUnknown *, IID *, void * *);
    HRESULT (* GetPropertyStoreForKeys)(struct IDelayedPropertyStoreFactory *, PROPERTYKEY *, UINT, enum GETPROPERTYSTOREFLAGS, IID *, void * *);
    HRESULT (* GetDelayedPropertyStore)(struct IDelayedPropertyStoreFactory *, enum GETPROPERTYSTOREFLAGS, DWORD, IID *, void * *);
};

struct IDelayedPropertyStoreFactory {
    struct IDelayedPropertyStoreFactoryVtbl * lpVtbl;
};

typedef struct IInitializeWithFile IInitializeWithFile, *PIInitializeWithFile;

typedef struct IInitializeWithFileVtbl IInitializeWithFileVtbl, *PIInitializeWithFileVtbl;

struct IInitializeWithFileVtbl {
    HRESULT (* QueryInterface)(struct IInitializeWithFile *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeWithFile *);
    ULONG (* Release)(struct IInitializeWithFile *);
    HRESULT (* Initialize)(struct IInitializeWithFile *, LPCWSTR, DWORD);
};

struct IInitializeWithFile {
    struct IInitializeWithFileVtbl * lpVtbl;
};

typedef struct IInitializeWithStream IInitializeWithStream, *PIInitializeWithStream;

typedef struct IInitializeWithStreamVtbl IInitializeWithStreamVtbl, *PIInitializeWithStreamVtbl;

struct IInitializeWithStreamVtbl {
    HRESULT (* QueryInterface)(struct IInitializeWithStream *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeWithStream *);
    ULONG (* Release)(struct IInitializeWithStream *);
    HRESULT (* Initialize)(struct IInitializeWithStream *, struct IStream *, DWORD);
};

struct IInitializeWithStream {
    struct IInitializeWithStreamVtbl * lpVtbl;
};

typedef struct INamedPropertyStore INamedPropertyStore, *PINamedPropertyStore;

typedef struct INamedPropertyStoreVtbl INamedPropertyStoreVtbl, *PINamedPropertyStoreVtbl;

struct INamedPropertyStore {
    struct INamedPropertyStoreVtbl * lpVtbl;
};

struct INamedPropertyStoreVtbl {
    HRESULT (* QueryInterface)(struct INamedPropertyStore *, IID *, void * *);
    ULONG (* AddRef)(struct INamedPropertyStore *);
    ULONG (* Release)(struct INamedPropertyStore *);
    HRESULT (* GetNamedValue)(struct INamedPropertyStore *, LPCWSTR, PROPVARIANT *);
    HRESULT (* SetNamedValue)(struct INamedPropertyStore *, LPCWSTR, PROPVARIANT *);
    HRESULT (* GetNameCount)(struct INamedPropertyStore *, DWORD *);
    HRESULT (* GetNameAt)(struct INamedPropertyStore *, DWORD, BSTR *);
};

typedef struct InMemoryPropertyStore InMemoryPropertyStore, *PInMemoryPropertyStore;

struct InMemoryPropertyStore {
};

typedef struct IObjectWithPropertyKey IObjectWithPropertyKey, *PIObjectWithPropertyKey;

typedef struct IObjectWithPropertyKeyVtbl IObjectWithPropertyKeyVtbl, *PIObjectWithPropertyKeyVtbl;

struct IObjectWithPropertyKey {
    struct IObjectWithPropertyKeyVtbl * lpVtbl;
};

struct IObjectWithPropertyKeyVtbl {
    HRESULT (* QueryInterface)(struct IObjectWithPropertyKey *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectWithPropertyKey *);
    ULONG (* Release)(struct IObjectWithPropertyKey *);
    HRESULT (* SetPropertyKey)(struct IObjectWithPropertyKey *, PROPERTYKEY *);
    HRESULT (* GetPropertyKey)(struct IObjectWithPropertyKey *, PROPERTYKEY *);
};

typedef struct IPersistSerializedPropStorage IPersistSerializedPropStorage, *PIPersistSerializedPropStorage;

typedef struct IPersistSerializedPropStorageVtbl IPersistSerializedPropStorageVtbl, *PIPersistSerializedPropStorageVtbl;

typedef int PERSIST_SPROPSTORE_FLAGS;

typedef struct tagSERIALIZEDPROPSTORAGE tagSERIALIZEDPROPSTORAGE, *PtagSERIALIZEDPROPSTORAGE;

typedef struct tagSERIALIZEDPROPSTORAGE SERIALIZEDPROPSTORAGE;

typedef SERIALIZEDPROPSTORAGE * PCUSERIALIZEDPROPSTORAGE;

struct IPersistSerializedPropStorage {
    struct IPersistSerializedPropStorageVtbl * lpVtbl;
};

struct tagSERIALIZEDPROPSTORAGE {
};

struct IPersistSerializedPropStorageVtbl {
    HRESULT (* QueryInterface)(struct IPersistSerializedPropStorage *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistSerializedPropStorage *);
    ULONG (* Release)(struct IPersistSerializedPropStorage *);
    HRESULT (* SetFlags)(struct IPersistSerializedPropStorage *, PERSIST_SPROPSTORE_FLAGS);
    HRESULT (* SetPropertyStorage)(struct IPersistSerializedPropStorage *, PCUSERIALIZEDPROPSTORAGE, DWORD);
    HRESULT (* GetPropertyStorage)(struct IPersistSerializedPropStorage *, SERIALIZEDPROPSTORAGE * *, DWORD *);
};

typedef struct IPersistSerializedPropStorage2 IPersistSerializedPropStorage2, *PIPersistSerializedPropStorage2;

typedef struct IPersistSerializedPropStorage2Vtbl IPersistSerializedPropStorage2Vtbl, *PIPersistSerializedPropStorage2Vtbl;

struct IPersistSerializedPropStorage2 {
    struct IPersistSerializedPropStorage2Vtbl * lpVtbl;
};

struct IPersistSerializedPropStorage2Vtbl {
    HRESULT (* QueryInterface)(struct IPersistSerializedPropStorage2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistSerializedPropStorage2 *);
    ULONG (* Release)(struct IPersistSerializedPropStorage2 *);
    HRESULT (* SetFlags)(struct IPersistSerializedPropStorage2 *, PERSIST_SPROPSTORE_FLAGS);
    HRESULT (* SetPropertyStorage)(struct IPersistSerializedPropStorage2 *, PCUSERIALIZEDPROPSTORAGE, DWORD);
    HRESULT (* GetPropertyStorage)(struct IPersistSerializedPropStorage2 *, SERIALIZEDPROPSTORAGE * *, DWORD *);
    HRESULT (* GetPropertyStorageSize)(struct IPersistSerializedPropStorage2 *, DWORD *);
    HRESULT (* GetPropertyStorageBuffer)(struct IPersistSerializedPropStorage2 *, SERIALIZEDPROPSTORAGE *, DWORD, DWORD *);
};

typedef struct IPropertyChange IPropertyChange, *PIPropertyChange;

typedef struct IPropertyChangeVtbl IPropertyChangeVtbl, *PIPropertyChangeVtbl;

struct IPropertyChange {
    struct IPropertyChangeVtbl * lpVtbl;
};

struct IPropertyChangeVtbl {
    HRESULT (* QueryInterface)(struct IPropertyChange *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyChange *);
    ULONG (* Release)(struct IPropertyChange *);
    HRESULT (* SetPropertyKey)(struct IPropertyChange *, PROPERTYKEY *);
    HRESULT (* GetPropertyKey)(struct IPropertyChange *, PROPERTYKEY *);
    HRESULT (* ApplyToPropVariant)(struct IPropertyChange *, PROPVARIANT *, PROPVARIANT *);
};

typedef struct IPropertyChangeArray IPropertyChangeArray, *PIPropertyChangeArray;

typedef struct IPropertyChangeArrayVtbl IPropertyChangeArrayVtbl, *PIPropertyChangeArrayVtbl;

struct IPropertyChangeArray {
    struct IPropertyChangeArrayVtbl * lpVtbl;
};

struct IPropertyChangeArrayVtbl {
    HRESULT (* QueryInterface)(struct IPropertyChangeArray *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyChangeArray *);
    ULONG (* Release)(struct IPropertyChangeArray *);
    HRESULT (* GetCount)(struct IPropertyChangeArray *, UINT *);
    HRESULT (* GetAt)(struct IPropertyChangeArray *, UINT, IID *, void * *);
    HRESULT (* InsertAt)(struct IPropertyChangeArray *, UINT, struct IPropertyChange *);
    HRESULT (* Append)(struct IPropertyChangeArray *, struct IPropertyChange *);
    HRESULT (* AppendOrReplace)(struct IPropertyChangeArray *, struct IPropertyChange *);
    HRESULT (* RemoveAt)(struct IPropertyChangeArray *, UINT);
    HRESULT (* IsKeyInArray)(struct IPropertyChangeArray *, PROPERTYKEY *);
};

typedef struct IPropertyDescription IPropertyDescription, *PIPropertyDescription;

typedef struct IPropertyDescriptionVtbl IPropertyDescriptionVtbl, *PIPropertyDescriptionVtbl;

typedef enum PROPDESC_TYPE_FLAGS {
    PDTF_CANBEPURGED=512,
    PDTF_CANGROUPBY=8,
    PDTF_CANSTACKBY=16,
    PDTF_DEFAULT=0,
    PDTF_INCLUDEINFULLTEXTQUERY=64,
    PDTF_ISGROUP=4,
    PDTF_ISINNATE=2,
    PDTF_ISQUERYABLE=256,
    PDTF_ISSYSTEMPROPERTY=-2147483648,
    PDTF_ISTREEPROPERTY=32,
    PDTF_ISVIEWABLE=128,
    PDTF_MASK_ALL=-2147481601,
    PDTF_MULTIPLEVALUES=1,
    PDTF_SEARCHRAWVALUE=1024
} PROPDESC_TYPE_FLAGS;

typedef enum PROPDESC_VIEW_FLAGS {
    PDVF_BEGINNEWGROUP=4,
    PDVF_CANWRAP=4096,
    PDVF_CENTERALIGN=1,
    PDVF_DEFAULT=0,
    PDVF_FILLAREA=8,
    PDVF_HIDDEN=2048,
    PDVF_HIDELABEL=512,
    PDVF_MASK_ALL=7167,
    PDVF_RIGHTALIGN=2,
    PDVF_SHOWBYDEFAULT=64,
    PDVF_SHOWINPRIMARYLIST=128,
    PDVF_SHOWINSECONDARYLIST=256,
    PDVF_SHOWONLYIFPRESENT=32,
    PDVF_SORTDESCENDING=16
} PROPDESC_VIEW_FLAGS;

typedef enum PROPDESC_DISPLAYTYPE {
    PDDT_BOOLEAN=2,
    PDDT_DATETIME=3,
    PDDT_ENUMERATED=4,
    PDDT_NUMBER=1,
    PDDT_STRING=0
} PROPDESC_DISPLAYTYPE;

typedef DWORD SHCOLSTATEF;

typedef enum PROPDESC_GROUPING_RANGE {
    PDGR_ALPHANUMERIC=1,
    PDGR_DATE=4,
    PDGR_DISCRETE=0,
    PDGR_DYNAMIC=3,
    PDGR_ENUMERATED=6,
    PDGR_PERCENT=5,
    PDGR_SIZE=2
} PROPDESC_GROUPING_RANGE;

typedef enum PROPDESC_RELATIVEDESCRIPTION_TYPE {
    PDRDT_COUNT=3,
    PDRDT_DATE=1,
    PDRDT_DURATION=6,
    PDRDT_GENERAL=0,
    PDRDT_LENGTH=5,
    PDRDT_PRIORITY=10,
    PDRDT_RATE=8,
    PDRDT_RATING=9,
    PDRDT_REVISION=4,
    PDRDT_SIZE=2,
    PDRDT_SPEED=7
} PROPDESC_RELATIVEDESCRIPTION_TYPE;

typedef enum PROPDESC_SORTDESCRIPTION {
    PDSD_A_Z=1,
    PDSD_GENERAL=0,
    PDSD_LOWEST_HIGHEST=2,
    PDSD_OLDEST_NEWEST=4,
    PDSD_SMALLEST_BIGGEST=3
} PROPDESC_SORTDESCRIPTION;

typedef enum PROPDESC_AGGREGATION_TYPE {
    PDAT_AVERAGE=3,
    PDAT_DATERANGE=4,
    PDAT_DEFAULT=0,
    PDAT_FIRST=1,
    PDAT_MAX=6,
    PDAT_MIN=7,
    PDAT_SUM=2,
    PDAT_UNION=5
} PROPDESC_AGGREGATION_TYPE;

typedef enum PROPDESC_CONDITION_TYPE {
    PDCOT_BOOLEAN=4,
    PDCOT_DATETIME=3,
    PDCOT_NONE=0,
    PDCOT_NUMBER=5,
    PDCOT_SIZE=2,
    PDCOT_STRING=1
} PROPDESC_CONDITION_TYPE;

typedef enum tagCONDITION_OPERATION {
    COP_APPLICATION_SPECIFIC=14,
    COP_DOSWILDCARDS=11,
    COP_EQUAL=1,
    COP_GREATERTHAN=4,
    COP_GREATERTHANOREQUAL=6,
    COP_IMPLICIT=0,
    COP_LESSTHAN=3,
    COP_LESSTHANOREQUAL=5,
    COP_NOTEQUAL=2,
    COP_VALUE_CONTAINS=9,
    COP_VALUE_ENDSWITH=8,
    COP_VALUE_NOTCONTAINS=10,
    COP_VALUE_STARTSWITH=7,
    COP_WORD_EQUAL=12,
    COP_WORD_STARTSWITH=13
} tagCONDITION_OPERATION;

typedef enum tagCONDITION_OPERATION CONDITION_OPERATION;

typedef enum PROPDESC_FORMAT_FLAGS {
    PDFF_ALWAYSKB=4,
    PDFF_DEFAULT=0,
    PDFF_FILENAME=2,
    PDFF_HIDEDATE=512,
    PDFF_HIDETIME=64,
    PDFF_LONGDATE=256,
    PDFF_LONGTIME=32,
    PDFF_NOAUTOREADINGORDER=8192,
    PDFF_PREFIXNAME=1,
    PDFF_READONLY=4096,
    PDFF_RELATIVEDATE=1024,
    PDFF_RESERVED_RIGHTTOLEFT=8,
    PDFF_SHORTDATE=128,
    PDFF_SHORTTIME=16,
    PDFF_USEEDITINVITATION=2048
} PROPDESC_FORMAT_FLAGS;

struct IPropertyDescription {
    struct IPropertyDescriptionVtbl * lpVtbl;
};

struct IPropertyDescriptionVtbl {
    HRESULT (* QueryInterface)(struct IPropertyDescription *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyDescription *);
    ULONG (* Release)(struct IPropertyDescription *);
    HRESULT (* GetPropertyKey)(struct IPropertyDescription *, PROPERTYKEY *);
    HRESULT (* GetCanonicalName)(struct IPropertyDescription *, LPWSTR *);
    HRESULT (* GetPropertyType)(struct IPropertyDescription *, VARTYPE *);
    HRESULT (* GetDisplayName)(struct IPropertyDescription *, LPWSTR *);
    HRESULT (* GetEditInvitation)(struct IPropertyDescription *, LPWSTR *);
    HRESULT (* GetTypeFlags)(struct IPropertyDescription *, enum PROPDESC_TYPE_FLAGS, enum PROPDESC_TYPE_FLAGS *);
    HRESULT (* GetViewFlags)(struct IPropertyDescription *, enum PROPDESC_VIEW_FLAGS *);
    HRESULT (* GetDefaultColumnWidth)(struct IPropertyDescription *, UINT *);
    HRESULT (* GetDisplayType)(struct IPropertyDescription *, enum PROPDESC_DISPLAYTYPE *);
    HRESULT (* GetColumnState)(struct IPropertyDescription *, SHCOLSTATEF *);
    HRESULT (* GetGroupingRange)(struct IPropertyDescription *, enum PROPDESC_GROUPING_RANGE *);
    HRESULT (* GetRelativeDescriptionType)(struct IPropertyDescription *, enum PROPDESC_RELATIVEDESCRIPTION_TYPE *);
    HRESULT (* GetRelativeDescription)(struct IPropertyDescription *, PROPVARIANT *, PROPVARIANT *, LPWSTR *, LPWSTR *);
    HRESULT (* GetSortDescription)(struct IPropertyDescription *, enum PROPDESC_SORTDESCRIPTION *);
    HRESULT (* GetSortDescriptionLabel)(struct IPropertyDescription *, BOOL, LPWSTR *);
    HRESULT (* GetAggregationType)(struct IPropertyDescription *, enum PROPDESC_AGGREGATION_TYPE *);
    HRESULT (* GetConditionType)(struct IPropertyDescription *, enum PROPDESC_CONDITION_TYPE *, CONDITION_OPERATION *);
    HRESULT (* GetEnumTypeList)(struct IPropertyDescription *, IID *, void * *);
    HRESULT (* CoerceToCanonicalValue)(struct IPropertyDescription *, PROPVARIANT *);
    HRESULT (* FormatForDisplay)(struct IPropertyDescription *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR *);
    HRESULT (* IsValueCanonical)(struct IPropertyDescription *, PROPVARIANT *);
};

typedef struct IPropertyDescription2 IPropertyDescription2, *PIPropertyDescription2;

typedef struct IPropertyDescription2Vtbl IPropertyDescription2Vtbl, *PIPropertyDescription2Vtbl;

struct IPropertyDescription2 {
    struct IPropertyDescription2Vtbl * lpVtbl;
};

struct IPropertyDescription2Vtbl {
    HRESULT (* QueryInterface)(struct IPropertyDescription2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyDescription2 *);
    ULONG (* Release)(struct IPropertyDescription2 *);
    HRESULT (* GetPropertyKey)(struct IPropertyDescription2 *, PROPERTYKEY *);
    HRESULT (* GetCanonicalName)(struct IPropertyDescription2 *, LPWSTR *);
    HRESULT (* GetPropertyType)(struct IPropertyDescription2 *, VARTYPE *);
    HRESULT (* GetDisplayName)(struct IPropertyDescription2 *, LPWSTR *);
    HRESULT (* GetEditInvitation)(struct IPropertyDescription2 *, LPWSTR *);
    HRESULT (* GetTypeFlags)(struct IPropertyDescription2 *, enum PROPDESC_TYPE_FLAGS, enum PROPDESC_TYPE_FLAGS *);
    HRESULT (* GetViewFlags)(struct IPropertyDescription2 *, enum PROPDESC_VIEW_FLAGS *);
    HRESULT (* GetDefaultColumnWidth)(struct IPropertyDescription2 *, UINT *);
    HRESULT (* GetDisplayType)(struct IPropertyDescription2 *, enum PROPDESC_DISPLAYTYPE *);
    HRESULT (* GetColumnState)(struct IPropertyDescription2 *, SHCOLSTATEF *);
    HRESULT (* GetGroupingRange)(struct IPropertyDescription2 *, enum PROPDESC_GROUPING_RANGE *);
    HRESULT (* GetRelativeDescriptionType)(struct IPropertyDescription2 *, enum PROPDESC_RELATIVEDESCRIPTION_TYPE *);
    HRESULT (* GetRelativeDescription)(struct IPropertyDescription2 *, PROPVARIANT *, PROPVARIANT *, LPWSTR *, LPWSTR *);
    HRESULT (* GetSortDescription)(struct IPropertyDescription2 *, enum PROPDESC_SORTDESCRIPTION *);
    HRESULT (* GetSortDescriptionLabel)(struct IPropertyDescription2 *, BOOL, LPWSTR *);
    HRESULT (* GetAggregationType)(struct IPropertyDescription2 *, enum PROPDESC_AGGREGATION_TYPE *);
    HRESULT (* GetConditionType)(struct IPropertyDescription2 *, enum PROPDESC_CONDITION_TYPE *, CONDITION_OPERATION *);
    HRESULT (* GetEnumTypeList)(struct IPropertyDescription2 *, IID *, void * *);
    HRESULT (* CoerceToCanonicalValue)(struct IPropertyDescription2 *, PROPVARIANT *);
    HRESULT (* FormatForDisplay)(struct IPropertyDescription2 *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR *);
    HRESULT (* IsValueCanonical)(struct IPropertyDescription2 *, PROPVARIANT *);
    HRESULT (* GetImageReferenceForValue)(struct IPropertyDescription2 *, PROPVARIANT *, LPWSTR *);
};

typedef struct IPropertyDescriptionAliasInfo IPropertyDescriptionAliasInfo, *PIPropertyDescriptionAliasInfo;

typedef struct IPropertyDescriptionAliasInfoVtbl IPropertyDescriptionAliasInfoVtbl, *PIPropertyDescriptionAliasInfoVtbl;

struct IPropertyDescriptionAliasInfo {
    struct IPropertyDescriptionAliasInfoVtbl * lpVtbl;
};

struct IPropertyDescriptionAliasInfoVtbl {
    HRESULT (* QueryInterface)(struct IPropertyDescriptionAliasInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyDescriptionAliasInfo *);
    ULONG (* Release)(struct IPropertyDescriptionAliasInfo *);
    HRESULT (* GetPropertyKey)(struct IPropertyDescriptionAliasInfo *, PROPERTYKEY *);
    HRESULT (* GetCanonicalName)(struct IPropertyDescriptionAliasInfo *, LPWSTR *);
    HRESULT (* GetPropertyType)(struct IPropertyDescriptionAliasInfo *, VARTYPE *);
    HRESULT (* GetDisplayName)(struct IPropertyDescriptionAliasInfo *, LPWSTR *);
    HRESULT (* GetEditInvitation)(struct IPropertyDescriptionAliasInfo *, LPWSTR *);
    HRESULT (* GetTypeFlags)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_TYPE_FLAGS, enum PROPDESC_TYPE_FLAGS *);
    HRESULT (* GetViewFlags)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_VIEW_FLAGS *);
    HRESULT (* GetDefaultColumnWidth)(struct IPropertyDescriptionAliasInfo *, UINT *);
    HRESULT (* GetDisplayType)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_DISPLAYTYPE *);
    HRESULT (* GetColumnState)(struct IPropertyDescriptionAliasInfo *, SHCOLSTATEF *);
    HRESULT (* GetGroupingRange)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_GROUPING_RANGE *);
    HRESULT (* GetRelativeDescriptionType)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_RELATIVEDESCRIPTION_TYPE *);
    HRESULT (* GetRelativeDescription)(struct IPropertyDescriptionAliasInfo *, PROPVARIANT *, PROPVARIANT *, LPWSTR *, LPWSTR *);
    HRESULT (* GetSortDescription)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_SORTDESCRIPTION *);
    HRESULT (* GetSortDescriptionLabel)(struct IPropertyDescriptionAliasInfo *, BOOL, LPWSTR *);
    HRESULT (* GetAggregationType)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_AGGREGATION_TYPE *);
    HRESULT (* GetConditionType)(struct IPropertyDescriptionAliasInfo *, enum PROPDESC_CONDITION_TYPE *, CONDITION_OPERATION *);
    HRESULT (* GetEnumTypeList)(struct IPropertyDescriptionAliasInfo *, IID *, void * *);
    HRESULT (* CoerceToCanonicalValue)(struct IPropertyDescriptionAliasInfo *, PROPVARIANT *);
    HRESULT (* FormatForDisplay)(struct IPropertyDescriptionAliasInfo *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR *);
    HRESULT (* IsValueCanonical)(struct IPropertyDescriptionAliasInfo *, PROPVARIANT *);
    HRESULT (* GetSortByAlias)(struct IPropertyDescriptionAliasInfo *, IID *, void * *);
    HRESULT (* GetAdditionalSortByAliases)(struct IPropertyDescriptionAliasInfo *, IID *, void * *);
};

typedef struct IPropertyDescriptionList IPropertyDescriptionList, *PIPropertyDescriptionList;

typedef struct IPropertyDescriptionListVtbl IPropertyDescriptionListVtbl, *PIPropertyDescriptionListVtbl;

struct IPropertyDescriptionList {
    struct IPropertyDescriptionListVtbl * lpVtbl;
};

struct IPropertyDescriptionListVtbl {
    HRESULT (* QueryInterface)(struct IPropertyDescriptionList *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyDescriptionList *);
    ULONG (* Release)(struct IPropertyDescriptionList *);
    HRESULT (* GetCount)(struct IPropertyDescriptionList *, UINT *);
    HRESULT (* GetAt)(struct IPropertyDescriptionList *, UINT, IID *, void * *);
};

typedef struct IPropertyDescriptionRelatedPropertyInfo IPropertyDescriptionRelatedPropertyInfo, *PIPropertyDescriptionRelatedPropertyInfo;

typedef struct IPropertyDescriptionRelatedPropertyInfoVtbl IPropertyDescriptionRelatedPropertyInfoVtbl, *PIPropertyDescriptionRelatedPropertyInfoVtbl;

struct IPropertyDescriptionRelatedPropertyInfo {
    struct IPropertyDescriptionRelatedPropertyInfoVtbl * lpVtbl;
};

struct IPropertyDescriptionRelatedPropertyInfoVtbl {
    HRESULT (* QueryInterface)(struct IPropertyDescriptionRelatedPropertyInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyDescriptionRelatedPropertyInfo *);
    ULONG (* Release)(struct IPropertyDescriptionRelatedPropertyInfo *);
    HRESULT (* GetPropertyKey)(struct IPropertyDescriptionRelatedPropertyInfo *, PROPERTYKEY *);
    HRESULT (* GetCanonicalName)(struct IPropertyDescriptionRelatedPropertyInfo *, LPWSTR *);
    HRESULT (* GetPropertyType)(struct IPropertyDescriptionRelatedPropertyInfo *, VARTYPE *);
    HRESULT (* GetDisplayName)(struct IPropertyDescriptionRelatedPropertyInfo *, LPWSTR *);
    HRESULT (* GetEditInvitation)(struct IPropertyDescriptionRelatedPropertyInfo *, LPWSTR *);
    HRESULT (* GetTypeFlags)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_TYPE_FLAGS, enum PROPDESC_TYPE_FLAGS *);
    HRESULT (* GetViewFlags)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_VIEW_FLAGS *);
    HRESULT (* GetDefaultColumnWidth)(struct IPropertyDescriptionRelatedPropertyInfo *, UINT *);
    HRESULT (* GetDisplayType)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_DISPLAYTYPE *);
    HRESULT (* GetColumnState)(struct IPropertyDescriptionRelatedPropertyInfo *, SHCOLSTATEF *);
    HRESULT (* GetGroupingRange)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_GROUPING_RANGE *);
    HRESULT (* GetRelativeDescriptionType)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_RELATIVEDESCRIPTION_TYPE *);
    HRESULT (* GetRelativeDescription)(struct IPropertyDescriptionRelatedPropertyInfo *, PROPVARIANT *, PROPVARIANT *, LPWSTR *, LPWSTR *);
    HRESULT (* GetSortDescription)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_SORTDESCRIPTION *);
    HRESULT (* GetSortDescriptionLabel)(struct IPropertyDescriptionRelatedPropertyInfo *, BOOL, LPWSTR *);
    HRESULT (* GetAggregationType)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_AGGREGATION_TYPE *);
    HRESULT (* GetConditionType)(struct IPropertyDescriptionRelatedPropertyInfo *, enum PROPDESC_CONDITION_TYPE *, CONDITION_OPERATION *);
    HRESULT (* GetEnumTypeList)(struct IPropertyDescriptionRelatedPropertyInfo *, IID *, void * *);
    HRESULT (* CoerceToCanonicalValue)(struct IPropertyDescriptionRelatedPropertyInfo *, PROPVARIANT *);
    HRESULT (* FormatForDisplay)(struct IPropertyDescriptionRelatedPropertyInfo *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR *);
    HRESULT (* IsValueCanonical)(struct IPropertyDescriptionRelatedPropertyInfo *, PROPVARIANT *);
    HRESULT (* GetRelatedProperty)(struct IPropertyDescriptionRelatedPropertyInfo *, LPCWSTR, IID *, void * *);
};

typedef struct IPropertyDescriptionSearchInfo IPropertyDescriptionSearchInfo, *PIPropertyDescriptionSearchInfo;

typedef struct IPropertyDescriptionSearchInfoVtbl IPropertyDescriptionSearchInfoVtbl, *PIPropertyDescriptionSearchInfoVtbl;

typedef enum PROPDESC_SEARCHINFO_FLAGS {
    PDSIF_ALWAYSINCLUDE=8,
    PDSIF_DEFAULT=0,
    PDSIF_ININVERTEDINDEX=1,
    PDSIF_ISCOLUMN=2,
    PDSIF_ISCOLUMNSPARSE=4
} PROPDESC_SEARCHINFO_FLAGS;

typedef enum PROPDESC_COLUMNINDEX_TYPE {
    PDCIT_INMEMORY=2,
    PDCIT_NONE=0,
    PDCIT_ONDEMAND=3,
    PDCIT_ONDISK=1,
    PDCIT_ONDISKALL=4,
    PDCIT_ONDISKVECTOR=5
} PROPDESC_COLUMNINDEX_TYPE;

struct IPropertyDescriptionSearchInfo {
    struct IPropertyDescriptionSearchInfoVtbl * lpVtbl;
};

struct IPropertyDescriptionSearchInfoVtbl {
    HRESULT (* QueryInterface)(struct IPropertyDescriptionSearchInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyDescriptionSearchInfo *);
    ULONG (* Release)(struct IPropertyDescriptionSearchInfo *);
    HRESULT (* GetPropertyKey)(struct IPropertyDescriptionSearchInfo *, PROPERTYKEY *);
    HRESULT (* GetCanonicalName)(struct IPropertyDescriptionSearchInfo *, LPWSTR *);
    HRESULT (* GetPropertyType)(struct IPropertyDescriptionSearchInfo *, VARTYPE *);
    HRESULT (* GetDisplayName)(struct IPropertyDescriptionSearchInfo *, LPWSTR *);
    HRESULT (* GetEditInvitation)(struct IPropertyDescriptionSearchInfo *, LPWSTR *);
    HRESULT (* GetTypeFlags)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_TYPE_FLAGS, enum PROPDESC_TYPE_FLAGS *);
    HRESULT (* GetViewFlags)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_VIEW_FLAGS *);
    HRESULT (* GetDefaultColumnWidth)(struct IPropertyDescriptionSearchInfo *, UINT *);
    HRESULT (* GetDisplayType)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_DISPLAYTYPE *);
    HRESULT (* GetColumnState)(struct IPropertyDescriptionSearchInfo *, SHCOLSTATEF *);
    HRESULT (* GetGroupingRange)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_GROUPING_RANGE *);
    HRESULT (* GetRelativeDescriptionType)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_RELATIVEDESCRIPTION_TYPE *);
    HRESULT (* GetRelativeDescription)(struct IPropertyDescriptionSearchInfo *, PROPVARIANT *, PROPVARIANT *, LPWSTR *, LPWSTR *);
    HRESULT (* GetSortDescription)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_SORTDESCRIPTION *);
    HRESULT (* GetSortDescriptionLabel)(struct IPropertyDescriptionSearchInfo *, BOOL, LPWSTR *);
    HRESULT (* GetAggregationType)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_AGGREGATION_TYPE *);
    HRESULT (* GetConditionType)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_CONDITION_TYPE *, CONDITION_OPERATION *);
    HRESULT (* GetEnumTypeList)(struct IPropertyDescriptionSearchInfo *, IID *, void * *);
    HRESULT (* CoerceToCanonicalValue)(struct IPropertyDescriptionSearchInfo *, PROPVARIANT *);
    HRESULT (* FormatForDisplay)(struct IPropertyDescriptionSearchInfo *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR *);
    HRESULT (* IsValueCanonical)(struct IPropertyDescriptionSearchInfo *, PROPVARIANT *);
    HRESULT (* GetSearchInfoFlags)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_SEARCHINFO_FLAGS *);
    HRESULT (* GetColumnIndexType)(struct IPropertyDescriptionSearchInfo *, enum PROPDESC_COLUMNINDEX_TYPE *);
    HRESULT (* GetProjectionString)(struct IPropertyDescriptionSearchInfo *, LPWSTR *);
    HRESULT (* GetMaxSize)(struct IPropertyDescriptionSearchInfo *, UINT *);
};

typedef struct IPropertyEnumType IPropertyEnumType, *PIPropertyEnumType;

typedef struct IPropertyEnumTypeVtbl IPropertyEnumTypeVtbl, *PIPropertyEnumTypeVtbl;

typedef enum PROPENUMTYPE {
    PET_DEFAULTVALUE=2,
    PET_DISCRETEVALUE=0,
    PET_ENDRANGE=3,
    PET_RANGEDVALUE=1
} PROPENUMTYPE;

struct IPropertyEnumType {
    struct IPropertyEnumTypeVtbl * lpVtbl;
};

struct IPropertyEnumTypeVtbl {
    HRESULT (* QueryInterface)(struct IPropertyEnumType *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyEnumType *);
    ULONG (* Release)(struct IPropertyEnumType *);
    HRESULT (* GetEnumType)(struct IPropertyEnumType *, enum PROPENUMTYPE *);
    HRESULT (* GetValue)(struct IPropertyEnumType *, PROPVARIANT *);
    HRESULT (* GetRangeMinValue)(struct IPropertyEnumType *, PROPVARIANT *);
    HRESULT (* GetRangeSetValue)(struct IPropertyEnumType *, PROPVARIANT *);
    HRESULT (* GetDisplayText)(struct IPropertyEnumType *, LPWSTR *);
};

typedef struct IPropertyEnumType2 IPropertyEnumType2, *PIPropertyEnumType2;

typedef struct IPropertyEnumType2Vtbl IPropertyEnumType2Vtbl, *PIPropertyEnumType2Vtbl;

struct IPropertyEnumType2 {
    struct IPropertyEnumType2Vtbl * lpVtbl;
};

struct IPropertyEnumType2Vtbl {
    HRESULT (* QueryInterface)(struct IPropertyEnumType2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyEnumType2 *);
    ULONG (* Release)(struct IPropertyEnumType2 *);
    HRESULT (* GetEnumType)(struct IPropertyEnumType2 *, enum PROPENUMTYPE *);
    HRESULT (* GetValue)(struct IPropertyEnumType2 *, PROPVARIANT *);
    HRESULT (* GetRangeMinValue)(struct IPropertyEnumType2 *, PROPVARIANT *);
    HRESULT (* GetRangeSetValue)(struct IPropertyEnumType2 *, PROPVARIANT *);
    HRESULT (* GetDisplayText)(struct IPropertyEnumType2 *, LPWSTR *);
    HRESULT (* GetImageReference)(struct IPropertyEnumType2 *, LPWSTR *);
};

typedef struct IPropertyEnumTypeList IPropertyEnumTypeList, *PIPropertyEnumTypeList;

typedef struct IPropertyEnumTypeListVtbl IPropertyEnumTypeListVtbl, *PIPropertyEnumTypeListVtbl;

struct IPropertyEnumTypeList {
    struct IPropertyEnumTypeListVtbl * lpVtbl;
};

struct IPropertyEnumTypeListVtbl {
    HRESULT (* QueryInterface)(struct IPropertyEnumTypeList *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyEnumTypeList *);
    ULONG (* Release)(struct IPropertyEnumTypeList *);
    HRESULT (* GetCount)(struct IPropertyEnumTypeList *, UINT *);
    HRESULT (* GetAt)(struct IPropertyEnumTypeList *, UINT, IID *, void * *);
    HRESULT (* GetConditionAt)(struct IPropertyEnumTypeList *, UINT, IID *, void * *);
    HRESULT (* FindMatchingIndex)(struct IPropertyEnumTypeList *, PROPVARIANT *, UINT *);
};

typedef struct IPropertyStoreCache IPropertyStoreCache, *PIPropertyStoreCache;

typedef struct IPropertyStoreCacheVtbl IPropertyStoreCacheVtbl, *PIPropertyStoreCacheVtbl;

typedef enum PSC_STATE {
    PSC_DIRTY=2,
    PSC_NORMAL=0,
    PSC_NOTINSOURCE=1,
    PSC_READONLY=3
} PSC_STATE;

struct IPropertyStoreCache {
    struct IPropertyStoreCacheVtbl * lpVtbl;
};

struct IPropertyStoreCacheVtbl {
    HRESULT (* QueryInterface)(struct IPropertyStoreCache *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyStoreCache *);
    ULONG (* Release)(struct IPropertyStoreCache *);
    HRESULT (* GetCount)(struct IPropertyStoreCache *, DWORD *);
    HRESULT (* GetAt)(struct IPropertyStoreCache *, DWORD, PROPERTYKEY *);
    HRESULT (* GetValue)(struct IPropertyStoreCache *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* SetValue)(struct IPropertyStoreCache *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* Commit)(struct IPropertyStoreCache *);
    HRESULT (* GetState)(struct IPropertyStoreCache *, PROPERTYKEY *, enum PSC_STATE *);
    HRESULT (* GetValueAndState)(struct IPropertyStoreCache *, PROPERTYKEY *, PROPVARIANT *, enum PSC_STATE *);
    HRESULT (* SetState)(struct IPropertyStoreCache *, PROPERTYKEY *, enum PSC_STATE);
    HRESULT (* SetValueAndState)(struct IPropertyStoreCache *, PROPERTYKEY *, PROPVARIANT *, enum PSC_STATE);
};

typedef struct IPropertyStoreCapabilities IPropertyStoreCapabilities, *PIPropertyStoreCapabilities;

typedef struct IPropertyStoreCapabilitiesVtbl IPropertyStoreCapabilitiesVtbl, *PIPropertyStoreCapabilitiesVtbl;

struct IPropertyStoreCapabilitiesVtbl {
    HRESULT (* QueryInterface)(struct IPropertyStoreCapabilities *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyStoreCapabilities *);
    ULONG (* Release)(struct IPropertyStoreCapabilities *);
    HRESULT (* IsPropertyWritable)(struct IPropertyStoreCapabilities *, PROPERTYKEY *);
};

struct IPropertyStoreCapabilities {
    struct IPropertyStoreCapabilitiesVtbl * lpVtbl;
};

typedef struct IPropertyStoreFactory IPropertyStoreFactory, *PIPropertyStoreFactory;

typedef struct IPropertyStoreFactoryVtbl IPropertyStoreFactoryVtbl, *PIPropertyStoreFactoryVtbl;

struct IPropertyStoreFactory {
    struct IPropertyStoreFactoryVtbl * lpVtbl;
};

struct IPropertyStoreFactoryVtbl {
    HRESULT (* QueryInterface)(struct IPropertyStoreFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyStoreFactory *);
    ULONG (* Release)(struct IPropertyStoreFactory *);
    HRESULT (* GetPropertyStore)(struct IPropertyStoreFactory *, enum GETPROPERTYSTOREFLAGS, struct IUnknown *, IID *, void * *);
    HRESULT (* GetPropertyStoreForKeys)(struct IPropertyStoreFactory *, PROPERTYKEY *, UINT, enum GETPROPERTYSTOREFLAGS, IID *, void * *);
};

typedef struct IPropertySystem IPropertySystem, *PIPropertySystem;

typedef struct IPropertySystemVtbl IPropertySystemVtbl, *PIPropertySystemVtbl;

typedef enum PROPDESC_ENUMFILTER {
    PDEF_ALL=0,
    PDEF_COLUMN=6,
    PDEF_INFULLTEXTQUERY=5,
    PDEF_NONSYSTEM=2,
    PDEF_QUERYABLE=4,
    PDEF_SYSTEM=1,
    PDEF_VIEWABLE=3
} PROPDESC_ENUMFILTER;

struct IPropertySystem {
    struct IPropertySystemVtbl * lpVtbl;
};

struct IPropertySystemVtbl {
    HRESULT (* QueryInterface)(struct IPropertySystem *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertySystem *);
    ULONG (* Release)(struct IPropertySystem *);
    HRESULT (* GetPropertyDescription)(struct IPropertySystem *, PROPERTYKEY *, IID *, void * *);
    HRESULT (* GetPropertyDescriptionByName)(struct IPropertySystem *, LPCWSTR, IID *, void * *);
    HRESULT (* GetPropertyDescriptionListFromString)(struct IPropertySystem *, LPCWSTR, IID *, void * *);
    HRESULT (* EnumeratePropertyDescriptions)(struct IPropertySystem *, enum PROPDESC_ENUMFILTER, IID *, void * *);
    HRESULT (* FormatForDisplay)(struct IPropertySystem *, PROPERTYKEY *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR, DWORD);
    HRESULT (* FormatForDisplayAlloc)(struct IPropertySystem *, PROPERTYKEY *, PROPVARIANT *, enum PROPDESC_FORMAT_FLAGS, LPWSTR *);
    HRESULT (* RegisterPropertySchema)(struct IPropertySystem *, LPCWSTR);
    HRESULT (* UnregisterPropertySchema)(struct IPropertySystem *, LPCWSTR);
    HRESULT (* RefreshPropertySchema)(struct IPropertySystem *);
};

typedef struct IPropertySystemChangeNotify IPropertySystemChangeNotify, *PIPropertySystemChangeNotify;

typedef struct IPropertySystemChangeNotifyVtbl IPropertySystemChangeNotifyVtbl, *PIPropertySystemChangeNotifyVtbl;

struct IPropertySystemChangeNotifyVtbl {
    HRESULT (* QueryInterface)(struct IPropertySystemChangeNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertySystemChangeNotify *);
    ULONG (* Release)(struct IPropertySystemChangeNotify *);
    HRESULT (* SchemaRefreshed)(struct IPropertySystemChangeNotify *);
};

struct IPropertySystemChangeNotify {
    struct IPropertySystemChangeNotifyVtbl * lpVtbl;
};

typedef struct IPropertyStore * LPPROPERTYSTORE;

typedef enum PKA_FLAGS {
    PKA_APPEND=1,
    PKA_DELETE=2,
    PKA_SET=0
} PKA_FLAGS;

typedef struct PropertySystem PropertySystem, *PPropertySystem;

struct PropertySystem {
};

typedef SERIALIZEDPROPSTORAGE * PUSERIALIZEDPROPSTORAGE;

#define ID_PSREBOOTSYSTEM 3

#define ID_PSRESTARTWINDOWS 2

#define MAXPROPPAGES 100

#define PROP_LG_CXDLG 252

#define PROP_LG_CYDLG 218

#define PROP_MED_CXDLG 227

#define PROP_MED_CYDLG 215

#define PROP_SM_CXDLG 212

#define PROP_SM_CYDLG 188

#define PSBTN_APPLYNOW 4

#define PSBTN_BACK 0

#define PSBTN_CANCEL 5

#define PSBTN_FINISH 2

#define PSBTN_HELP 6

#define PSBTN_MAX 6

#define PSBTN_NEXT 1

#define PSBTN_OK 3

#define PSCB_BUTTONPRESSED 3

#define PSCB_INITIALIZED 1

#define PSCB_PRECREATE 2

#define PSH_AEROWIZARD 16384

#define PSH_DEFAULT 0

#define PSH_HASHELP 512

#define PSH_HEADER 524288

#define PSH_HEADERBITMAP 134217728

#define PSH_MODELESS 1024

#define PSH_NOAPPLYNOW 128

#define PSH_NOCONTEXTHELP 33554432

#define PSH_NOMARGIN 268435456

#define PSH_PROPSHEETPAGE 8

#define PSH_PROPTITLE 1

#define PSH_RESIZABLE 67108864

#define PSH_RTLREADING 2048

#define PSH_STRETCHWATERMARK 262144

#define PSH_USECALLBACK 256

#define PSH_USEHBMHEADER 1048576

#define PSH_USEHBMWATERMARK 65536

#define PSH_USEHICON 2

#define PSH_USEHPLWATERMARK 131072

#define PSH_USEICONID 4

#define PSH_USEPAGELANG 2097152

#define PSH_USEPSTARTPAGE 64

#define PSH_WATERMARK 32768

#define PSH_WIZARD 32

#define PSH_WIZARD97 16777216

#define PSH_WIZARD_LITE 4194304

#define PSH_WIZARDCONTEXTHELP 4096

#define PSH_WIZARDHASFINISH 16

#define PSM_ADDPAGE 1127

#define PSM_APPLY 1134

#define PSM_CANCELTOCLOSE 1131

#define PSM_CHANGED 1128

#define PSM_ENABLEWIZBUTTONS 1163

#define PSM_GETCURRENTPAGEHWND 1142

#define PSM_GETRESULT 1159

#define PSM_GETTABCONTROL 1140

#define PSM_HWNDTOINDEX 1153

#define PSM_IDTOINDEX 1157

#define PSM_INDEXTOHWND 1154

#define PSM_INDEXTOID 1158

#define PSM_INDEXTOPAGE 1156

#define PSM_INSERTPAGE 1143

#define PSM_ISDIALOGMESSAGE 1141

#define PSM_PAGETOINDEX 1155

#define PSM_PRESSBUTTON 1137

#define PSM_QUERYSIBLINGS 1132

#define PSM_REBOOTSYSTEM 1130

#define PSM_RECALCPAGESIZES 1160

#define PSM_REMOVEPAGE 1126

#define PSM_RESTARTWINDOWS 1129

#define PSM_SETBUTTONTEXT 1164

#define PSM_SETBUTTONTEXTW 1164

#define PSM_SETCURSEL 1125

#define PSM_SETCURSELID 1138

#define PSM_SETFINISHTEXT 1139

#define PSM_SETFINISHTEXTA 1139

#define PSM_SETFINISHTEXTW 1145

#define PSM_SETHEADERSUBTITLE 1151

#define PSM_SETHEADERSUBTITLEA 1151

#define PSM_SETHEADERSUBTITLEW 1152

#define PSM_SETHEADERTITLE 1149

#define PSM_SETHEADERTITLEA 1149

#define PSM_SETHEADERTITLEW 1150

#define PSM_SETNEXTTEXT 1161

#define PSM_SETNEXTTEXTW 1161

#define PSM_SETTITLE 1135

#define PSM_SETTITLEA 1135

#define PSM_SETTITLEW 1144

#define PSM_SETWIZBUTTONS 1136

#define PSM_SHOWWIZBUTTONS 1162

#define PSM_UNCHANGED 1133

#define PSN_APPLY -202

#define PSN_FIRST -200

#define PSN_GETOBJECT -210

#define PSN_HELP -205

#define PSN_KILLACTIVE -201

#define PSN_LAST -299

#define PSN_QUERYCANCEL -209

#define PSN_QUERYINITIALFOCUS -213

#define PSN_RESET -203

#define PSN_SETACTIVE -200

#define PSN_TRANSLATEACCELERATOR -212

#define PSN_WIZBACK -206

#define PSN_WIZFINISH -208

#define PSN_WIZNEXT -207

#define PSNRET_INVALID 1

#define PSNRET_INVALID_NOCHANGEPAGE 2

#define PSNRET_MESSAGEHANDLED 3

#define PSNRET_NOERROR 0

#define PSP_DEFAULT 0

#define PSP_DLGINDIRECT 1

#define PSP_HASHELP 32

#define PSP_HIDEHEADER 2048

#define PSP_PREMATURE 1024

#define PSP_RTLREADING 16

#define PSP_USECALLBACK 128

#define PSP_USEFUSIONCONTEXT 16384

#define PSP_USEHEADERSUBTITLE 8192

#define PSP_USEHEADERTITLE 4096

#define PSP_USEHICON 2

#define PSP_USEICONID 4

#define PSP_USEREFPARENT 64

#define PSP_USETITLE 8

#define PSPCB_ADDREF 0

#define PSPCB_CREATE 2

#define PSPCB_RELEASE 1

#define PSWIZB_BACK 1

#define PSWIZB_CANCEL 16

#define PSWIZB_DISABLEDFINISH 8

#define PSWIZB_FINISH 4

#define PSWIZB_NEXT 2

#define PSWIZB_RESTORE 1

#define PSWIZB_SHOW 0

#define PSWIZBF_ELEVATIONREQUIRED 1

#define PSWIZF_SETCOLOR -1

#define WIZ_BODYCX 184

#define WIZ_BODYX 92

#define WIZ_CXBMP 80

#define WIZ_CXDLG 276

#define WIZ_CYDLG 140

typedef struct _PROPSHEETHEADERA_V1 _PROPSHEETHEADERA_V1, *P_PROPSHEETHEADERA_V1;

typedef union _union_1950 _union_1950, *P_union_1950;

typedef union _union_1951 _union_1951, *P_union_1951;

typedef union _union_1952 _union_1952, *P_union_1952;

typedef int (* PFNPROPSHEETCALLBACK)(HWND, UINT, LPARAM);

union _union_1952 {
    LPCPROPSHEETPAGEA ppsp;
    HPROPSHEETPAGE * phpage;
};

union _union_1950 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1951 {
    UINT nStartPage;
    LPCSTR pStartPage;
};

struct _PROPSHEETHEADERA_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1950 u;
    LPCSTR pszCaption;
    UINT nPages;
    union _union_1951 u2;
    union _union_1952 u3;
    PFNPROPSHEETCALLBACK pfnCallback;
};

typedef struct _PROPSHEETHEADERA_V2 _PROPSHEETHEADERA_V2, *P_PROPSHEETHEADERA_V2;

typedef union _union_1954 _union_1954, *P_union_1954;

typedef union _union_1955 _union_1955, *P_union_1955;

typedef union _union_1956 _union_1956, *P_union_1956;

typedef union _union_1957 _union_1957, *P_union_1957;

typedef union _union_1958 _union_1958, *P_union_1958;

union _union_1956 {
    LPCPROPSHEETPAGEA ppsp;
    HPROPSHEETPAGE * phpage;
};

union _union_1957 {
    HBITMAP hbmWatermark;
    LPCSTR pszbmWatermark;
};

union _union_1958 {
    HBITMAP hbmHeader;
    LPCSTR pszbmHeader;
};

union _union_1954 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1955 {
    UINT nStartPage;
    LPCSTR pStartPage;
};

struct _PROPSHEETHEADERA_V2 {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1954 u;
    LPCSTR pszCaption;
    UINT nPages;
    union _union_1955 u2;
    union _union_1956 u3;
    PFNPROPSHEETCALLBACK pfnCallback;
    union _union_1957 u4;
    HPALETTE hplWatermark;
    union _union_1958 u5;
};

typedef struct _PROPSHEETHEADERW_V1 _PROPSHEETHEADERW_V1, *P_PROPSHEETHEADERW_V1;

typedef union _union_1960 _union_1960, *P_union_1960;

typedef union _union_1961 _union_1961, *P_union_1961;

typedef union _union_1962 _union_1962, *P_union_1962;

union _union_1962 {
    LPCPROPSHEETPAGEW ppsp;
    HPROPSHEETPAGE * phpage;
};

union _union_1960 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

union _union_1961 {
    UINT nStartPage;
    LPCWSTR pStartPage;
};

struct _PROPSHEETHEADERW_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1960 u;
    LPCWSTR pszCaption;
    UINT nPages;
    union _union_1961 u2;
    union _union_1962 u3;
    PFNPROPSHEETCALLBACK pfnCallback;
};

typedef struct _PROPSHEETHEADERW_V2 _PROPSHEETHEADERW_V2, *P_PROPSHEETHEADERW_V2;

typedef union _union_1964 _union_1964, *P_union_1964;

typedef union _union_1965 _union_1965, *P_union_1965;

typedef union _union_1966 _union_1966, *P_union_1966;

typedef union _union_1967 _union_1967, *P_union_1967;

typedef union _union_1968 _union_1968, *P_union_1968;

union _union_1966 {
    LPCPROPSHEETPAGEW ppsp;
    HPROPSHEETPAGE * phpage;
};

union _union_1964 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

union _union_1967 {
    HBITMAP hbmWatermark;
    LPCWSTR pszbmWatermark;
};

union _union_1965 {
    UINT nStartPage;
    LPCWSTR pStartPage;
};

union _union_1968 {
    HBITMAP hbmHeader;
    LPCWSTR pszbmHeader;
};

struct _PROPSHEETHEADERW_V2 {
    DWORD dwSize;
    DWORD dwFlags;
    HWND hwndParent;
    HINSTANCE hInstance;
    union _union_1964 u;
    LPCWSTR pszCaption;
    UINT nPages;
    union _union_1965 u2;
    union _union_1966 u3;
    PFNPROPSHEETCALLBACK pfnCallback;
    union _union_1967 u4;
    HPALETTE hplWatermark;
    union _union_1968 u5;
};

typedef struct _PROPSHEETPAGEA_V1 _PROPSHEETPAGEA_V1, *P_PROPSHEETPAGEA_V1;

typedef union _union_1924 _union_1924, *P_union_1924;

typedef union _union_1925 _union_1925, *P_union_1925;

union _union_1925 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1924 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEA_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1924 u;
    union _union_1925 u2;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT * pcRefParent;
};

typedef struct _PROPSHEETPAGEA_V2 _PROPSHEETPAGEA_V2, *P_PROPSHEETPAGEA_V2;

typedef union _union_1927 _union_1927, *P_union_1927;

typedef union _union_1928 _union_1928, *P_union_1928;

union _union_1928 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1927 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEA_V2 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1927 u;
    union _union_1928 u2;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT * pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
};

typedef struct _PROPSHEETPAGEA_V3 _PROPSHEETPAGEA_V3, *P_PROPSHEETPAGEA_V3;

typedef union _union_1930 _union_1930, *P_union_1930;

typedef union _union_1931 _union_1931, *P_union_1931;

union _union_1931 {
    HICON hIcon;
    LPCSTR pszIcon;
};

union _union_1930 {
    LPCSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEA_V3 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1930 u;
    union _union_1931 u2;
    LPCSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKA pfnCallback;
    UINT * pcRefParent;
    LPCSTR pszHeaderTitle;
    LPCSTR pszHeaderSubTitle;
    HANDLE hActCtx;
};

typedef struct _PROPSHEETPAGEW_V1 _PROPSHEETPAGEW_V1, *P_PROPSHEETPAGEW_V1;

typedef union _union_1937 _union_1937, *P_union_1937;

typedef union _union_1938 _union_1938, *P_union_1938;

union _union_1938 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

union _union_1937 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEW_V1 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1937 u;
    union _union_1938 u2;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT * pcRefParent;
};

typedef struct _PROPSHEETPAGEW_V2 _PROPSHEETPAGEW_V2, *P_PROPSHEETPAGEW_V2;

typedef union _union_1940 _union_1940, *P_union_1940;

typedef union _union_1941 _union_1941, *P_union_1941;

union _union_1940 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

union _union_1941 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

struct _PROPSHEETPAGEW_V2 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1940 u;
    union _union_1941 u2;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT * pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
};

typedef struct _PROPSHEETPAGEW_V3 _PROPSHEETPAGEW_V3, *P_PROPSHEETPAGEW_V3;

typedef union _union_1943 _union_1943, *P_union_1943;

typedef union _union_1944 _union_1944, *P_union_1944;

union _union_1944 {
    HICON hIcon;
    LPCWSTR pszIcon;
};

union _union_1943 {
    LPCWSTR pszTemplate;
    PROPSHEETPAGE_RESOURCE pResource;
};

struct _PROPSHEETPAGEW_V3 {
    DWORD dwSize;
    DWORD dwFlags;
    HINSTANCE hInstance;
    union _union_1943 u;
    union _union_1944 u2;
    LPCWSTR pszTitle;
    DLGPROC pfnDlgProc;
    LPARAM lParam;
    LPFNPSPCALLBACKW pfnCallback;
    UINT * pcRefParent;
    LPCWSTR pszHeaderTitle;
    LPCWSTR pszHeaderSubTitle;
    HANDLE hActCtx;
};

typedef struct _PSHNOTIFY _PSHNOTIFY, *P_PSHNOTIFY;

struct _PSHNOTIFY {
    NMHDR hdr;
    LPARAM lParam;
};

typedef struct _PROPSHEETHEADERA_V2 PROPSHEETHEADERA_V2;

typedef PROPSHEETHEADERA_V2 * LPCPROPSHEETHEADERA_V2;

typedef LPCPROPSHEETHEADERA_V2 LPCPROPSHEETHEADERA;

typedef struct _PROPSHEETHEADERA_V1 PROPSHEETHEADERA_V1;

typedef PROPSHEETHEADERA_V1 * LPCPROPSHEETHEADERA_V1;

typedef struct _PROPSHEETHEADERW_V2 PROPSHEETHEADERW_V2;

typedef PROPSHEETHEADERW_V2 * LPCPROPSHEETHEADERW_V2;

typedef LPCPROPSHEETHEADERW_V2 LPCPROPSHEETHEADERW;

typedef struct _PROPSHEETHEADERW_V1 PROPSHEETHEADERW_V1;

typedef PROPSHEETHEADERW_V1 * LPCPROPSHEETHEADERW_V1;

typedef LPCPROPSHEETPAGEA_V4 LPCPROPSHEETPAGEA_LATEST;

typedef struct _PROPSHEETPAGEA_V1 PROPSHEETPAGEA_V1;

typedef PROPSHEETPAGEA_V1 * LPCPROPSHEETPAGEA_V1;

typedef struct _PROPSHEETPAGEA_V2 PROPSHEETPAGEA_V2;

typedef PROPSHEETPAGEA_V2 * LPCPROPSHEETPAGEA_V2;

typedef struct _PROPSHEETPAGEA_V3 PROPSHEETPAGEA_V3;

typedef PROPSHEETPAGEA_V3 * LPCPROPSHEETPAGEA_V3;

typedef LPCPROPSHEETPAGEW_V4 LPCPROPSHEETPAGEW_LATEST;

typedef struct _PROPSHEETPAGEW_V1 PROPSHEETPAGEW_V1;

typedef PROPSHEETPAGEW_V1 * LPCPROPSHEETPAGEW_V1;

typedef struct _PROPSHEETPAGEW_V2 PROPSHEETPAGEW_V2;

typedef PROPSHEETPAGEW_V2 * LPCPROPSHEETPAGEW_V2;

typedef struct _PROPSHEETPAGEW_V3 PROPSHEETPAGEW_V3;

typedef PROPSHEETPAGEW_V3 * LPCPROPSHEETPAGEW_V3;

typedef BOOL (* LPFNADDPROPSHEETPAGE)(HPROPSHEETPAGE, LPARAM);

typedef BOOL (* LPFNADDPROPSHEETPAGES)(LPVOID, LPFNADDPROPSHEETPAGE, LPARAM);

typedef struct _PROPSHEETHEADERA_V2 * LPPROPSHEETHEADERA_V2;

typedef LPPROPSHEETHEADERA_V2 LPPROPSHEETHEADERA;

typedef struct _PROPSHEETHEADERA_V1 * LPPROPSHEETHEADERA_V1;

typedef struct _PROPSHEETHEADERW_V2 * LPPROPSHEETHEADERW_V2;

typedef LPPROPSHEETHEADERW_V2 LPPROPSHEETHEADERW;

typedef struct _PROPSHEETHEADERW_V1 * LPPROPSHEETHEADERW_V1;

typedef struct _PROPSHEETPAGEA * LPPROPSHEETPAGEA_V4;

typedef LPPROPSHEETPAGEA_V4 LPPROPSHEETPAGEA;

typedef LPPROPSHEETPAGEA_V4 LPPROPSHEETPAGEA_LATEST;

typedef struct _PROPSHEETPAGEA_V1 * LPPROPSHEETPAGEA_V1;

typedef struct _PROPSHEETPAGEA_V2 * LPPROPSHEETPAGEA_V2;

typedef struct _PROPSHEETPAGEA_V3 * LPPROPSHEETPAGEA_V3;

typedef struct _PROPSHEETPAGEW * LPPROPSHEETPAGEW_V4;

typedef LPPROPSHEETPAGEW_V4 LPPROPSHEETPAGEW;

typedef LPPROPSHEETPAGEW_V4 LPPROPSHEETPAGEW_LATEST;

typedef struct _PROPSHEETPAGEW_V1 * LPPROPSHEETPAGEW_V1;

typedef struct _PROPSHEETPAGEW_V2 * LPPROPSHEETPAGEW_V2;

typedef struct _PROPSHEETPAGEW_V3 * LPPROPSHEETPAGEW_V3;

typedef struct _PSHNOTIFY * LPPSHNOTIFY;

typedef PROPSHEETHEADERA_V2 PROPSHEETHEADERA;

typedef PROPSHEETHEADERW_V2 PROPSHEETHEADERW;

typedef PROPSHEETPAGEA_V4 PROPSHEETPAGEA;

typedef PROPSHEETPAGEA_V4 PROPSHEETPAGEA_LATEST;

typedef PROPSHEETPAGEW_V4 PROPSHEETPAGEW;

typedef PROPSHEETPAGEW_V4 PROPSHEETPAGEW_LATEST;

typedef struct _PSHNOTIFY PSHNOTIFY;

#define LIST_MODULES_32BIT 1

#define LIST_MODULES_64BIT 2

#define LIST_MODULES_ALL 3

#define LIST_MODULES_DEFAULT 0

typedef struct _ENUM_PAGE_FILE_INFORMATION _ENUM_PAGE_FILE_INFORMATION, *P_ENUM_PAGE_FILE_INFORMATION;

struct _ENUM_PAGE_FILE_INFORMATION {
    DWORD cb;
    DWORD Reserved;
    SIZE_T TotalSize;
    SIZE_T TotalInUse;
    SIZE_T PeakUsage;
};

typedef struct _MODULEINFO _MODULEINFO, *P_MODULEINFO;

struct _MODULEINFO {
    LPVOID lpBaseOfDll;
    DWORD SizeOfImage;
    LPVOID EntryPoint;
};

typedef struct _PERFORMANCE_INFORMATION _PERFORMANCE_INFORMATION, *P_PERFORMANCE_INFORMATION;

struct _PERFORMANCE_INFORMATION {
    DWORD cb;
    SIZE_T CommitTotal;
    SIZE_T CommitLimit;
    SIZE_T CommitPeak;
    SIZE_T PhysicalTotal;
    SIZE_T PhysicalAvailable;
    SIZE_T SystemCache;
    SIZE_T KernelTotal;
    SIZE_T KernelPaged;
    SIZE_T KernelNonpaged;
    SIZE_T PageSize;
    DWORD HandleCount;
    DWORD ProcessCount;
    DWORD ThreadCount;
};

typedef struct _PROCESS_MEMORY_COUNTERS _PROCESS_MEMORY_COUNTERS, *P_PROCESS_MEMORY_COUNTERS;

struct _PROCESS_MEMORY_COUNTERS {
    DWORD cb;
    DWORD PageFaultCount;
    SIZE_T PeakWorkingSetSize;
    SIZE_T WorkingSetSize;
    SIZE_T QuotaPeakPagedPoolUsage;
    SIZE_T QuotaPagedPoolUsage;
    SIZE_T QuotaPeakNonPagedPoolUsage;
    SIZE_T QuotaNonPagedPoolUsage;
    SIZE_T PagefileUsage;
    SIZE_T PeakPagefileUsage;
};

typedef struct _PROCESS_MEMORY_COUNTERS_EX _PROCESS_MEMORY_COUNTERS_EX, *P_PROCESS_MEMORY_COUNTERS_EX;

struct _PROCESS_MEMORY_COUNTERS_EX {
    DWORD cb;
    DWORD PageFaultCount;
    SIZE_T PeakWorkingSetSize;
    SIZE_T WorkingSetSize;
    SIZE_T QuotaPeakPagedPoolUsage;
    SIZE_T QuotaPagedPoolUsage;
    SIZE_T QuotaPeakNonPagedPoolUsage;
    SIZE_T QuotaNonPagedPoolUsage;
    SIZE_T PagefileUsage;
    SIZE_T PeakPagefileUsage;
    SIZE_T PrivateUsage;
};

typedef union _PSAPI_WORKING_SET_BLOCK _PSAPI_WORKING_SET_BLOCK, *P_PSAPI_WORKING_SET_BLOCK;

typedef struct _struct_7004 _struct_7004, *P_struct_7004;

typedef union anon__struct_7004_bitfield_1 anon__struct_7004_bitfield_1, *Panon__struct_7004_bitfield_1;

union anon__struct_7004_bitfield_1 {
    ULONG_PTR Protection:5; /* : bits 0-4 */
    ULONG_PTR ShareCount:3; /* : bits 5-7 */
    ULONG_PTR Shared:1; /* : bits 8 */
    ULONG_PTR Reserved:3; /* : bits 9-11 */
    ULONG_PTR VirtualPage:20; /* : bits 12-31 */
};

struct _struct_7004 {
    union anon__struct_7004_bitfield_1 field_0x0;
};

union _PSAPI_WORKING_SET_BLOCK {
    ULONG_PTR Flags;
    struct _struct_7004 field1;
};

typedef union _PSAPI_WORKING_SET_EX_BLOCK _PSAPI_WORKING_SET_EX_BLOCK, *P_PSAPI_WORKING_SET_EX_BLOCK;

typedef struct _struct_7007 _struct_7007, *P_struct_7007;

typedef union anon__struct_7007_bitfield_1 anon__struct_7007_bitfield_1, *Panon__struct_7007_bitfield_1;

union anon__struct_7007_bitfield_1 {
    ULONG_PTR Valid:1; /* : bits 0 */
    ULONG_PTR ShareCount:3; /* : bits 1-3 */
    ULONG_PTR Win32Protection:11; /* : bits 4-14 */
    ULONG_PTR Shared:1; /* : bits 15 */
    ULONG_PTR Node:6; /* : bits 16-21 */
    ULONG_PTR Locked:1; /* : bits 22 */
    ULONG_PTR LargePage:1; /* : bits 23 */
};

struct _struct_7007 {
    union anon__struct_7007_bitfield_1 field_0x0;
};

union _PSAPI_WORKING_SET_EX_BLOCK {
    ULONG_PTR Flags;
    struct _struct_7007 field1;
};

typedef struct _PSAPI_WORKING_SET_EX_INFORMATION _PSAPI_WORKING_SET_EX_INFORMATION, *P_PSAPI_WORKING_SET_EX_INFORMATION;

typedef union _PSAPI_WORKING_SET_EX_BLOCK PSAPI_WORKING_SET_EX_BLOCK;

struct _PSAPI_WORKING_SET_EX_INFORMATION {
    PVOID VirtualAddress;
    PSAPI_WORKING_SET_EX_BLOCK VirtualAttributes;
};

typedef struct _PSAPI_WORKING_SET_INFORMATION _PSAPI_WORKING_SET_INFORMATION, *P_PSAPI_WORKING_SET_INFORMATION;

typedef union _PSAPI_WORKING_SET_BLOCK PSAPI_WORKING_SET_BLOCK;

struct _PSAPI_WORKING_SET_INFORMATION {
    ULONG_PTR NumberOfEntries;
    PSAPI_WORKING_SET_BLOCK WorkingSetInfo[1];
};

typedef struct _PSAPI_WS_WATCH_INFORMATION _PSAPI_WS_WATCH_INFORMATION, *P_PSAPI_WS_WATCH_INFORMATION;

struct _PSAPI_WS_WATCH_INFORMATION {
    LPVOID FaultingPc;
    LPVOID FaultingVa;
};

typedef struct _PSAPI_WS_WATCH_INFORMATION_EX _PSAPI_WS_WATCH_INFORMATION_EX, *P_PSAPI_WS_WATCH_INFORMATION_EX;

typedef struct _PSAPI_WS_WATCH_INFORMATION PSAPI_WS_WATCH_INFORMATION;

struct _PSAPI_WS_WATCH_INFORMATION_EX {
    PSAPI_WS_WATCH_INFORMATION BasicInfo;
    ULONG_PTR FaultingThreadId;
    ULONG_PTR Flags;
};

typedef struct _ENUM_PAGE_FILE_INFORMATION ENUM_PAGE_FILE_INFORMATION;

typedef struct _MODULEINFO * LPMODULEINFO;

typedef struct _MODULEINFO MODULEINFO;

typedef struct _ENUM_PAGE_FILE_INFORMATION * PENUM_PAGE_FILE_INFORMATION;

typedef BOOL (* PENUM_PAGE_FILE_CALLBACKA)(LPVOID, PENUM_PAGE_FILE_INFORMATION, LPCSTR);

typedef BOOL (* PENUM_PAGE_FILE_CALLBACKW)(LPVOID, PENUM_PAGE_FILE_INFORMATION, LPCWSTR);

typedef struct _PERFORMANCE_INFORMATION PERFORMACE_INFORMATION;

typedef struct _PERFORMANCE_INFORMATION PERFORMANCE_INFORMATION;

typedef struct _PERFORMANCE_INFORMATION * PPERFORMACE_INFORMATION;

typedef struct _PERFORMANCE_INFORMATION * PPERFORMANCE_INFORMATION;

typedef struct _PROCESS_MEMORY_COUNTERS PROCESS_MEMORY_COUNTERS;

typedef PROCESS_MEMORY_COUNTERS * PPROCESS_MEMORY_COUNTERS;

typedef struct _PROCESS_MEMORY_COUNTERS_EX PROCESS_MEMORY_COUNTERS_EX;

typedef PROCESS_MEMORY_COUNTERS_EX * PPROCESS_MEMORY_COUNTERS_EX;

typedef union _PSAPI_WORKING_SET_BLOCK * PPSAPI_WORKING_SET_BLOCK;

typedef union _PSAPI_WORKING_SET_EX_BLOCK * PPSAPI_WORKING_SET_EX_BLOCK;

typedef struct _PSAPI_WORKING_SET_EX_INFORMATION * PPSAPI_WORKING_SET_EX_INFORMATION;

typedef struct _PSAPI_WORKING_SET_INFORMATION * PPSAPI_WORKING_SET_INFORMATION;

typedef struct _PSAPI_WS_WATCH_INFORMATION * PPSAPI_WS_WATCH_INFORMATION;

typedef struct _PSAPI_WS_WATCH_INFORMATION_EX * PPSAPI_WS_WATCH_INFORMATION_EX;

typedef struct _PSAPI_WORKING_SET_EX_INFORMATION PSAPI_WORKING_SET_EX_INFORMATION;

typedef struct _PSAPI_WORKING_SET_INFORMATION PSAPI_WORKING_SET_INFORMATION;

typedef struct _PSAPI_WS_WATCH_INFORMATION_EX PSAPI_WS_WATCH_INFORMATION_EX;

#define ET_None 0

#define ET_Optional 3

#define ET_Require 1

#define ET_RequireMax 2

#define RAS_MaxAreaCode 10

#define RAS_MaxCallbackNumber 128

#define RAS_MaxDeviceName 128

#define RAS_MaxDeviceType 16

#define RAS_MaxDnsSuffix 256

#define RAS_MaxEntryName 256

#define RAS_MaxFacilities 200

#define RAS_MaxIpAddress 15

#define RAS_MaxIpxAddress 21

#define RAS_MaxPadType 32

#define RAS_MaxPhoneNumber 128

#define RAS_MaxReplyMessage 1024

#define RAS_MaxUserData 200

#define RAS_MaxX25Address 200

#define RASADFLG_PositionDlg 1

#define RASADP_ConnectionQueryTimeout 4

#define RASADP_DisableConnectionQuery 0

#define RASADP_FailedConnectionTimeout 3

#define RASADP_LoginSessionDisable 1

#define RASADP_SavedAddressesLimit 2

#define RASCCPCA_MPPC 6

#define RASCCPCA_STAC 5

#define RASCCPO_Compression 1

#define RASCCPO_Encryption128bit 64

#define RASCCPO_Encryption40bit 32

#define RASCCPO_Encryption56bit 16

#define RASCCPO_HistoryLess 2

#define RASCF_AllUsers 1

#define RASCF_GlobalCreds 2

#define RASCF_OwnerKnown 4

#define RASCF_OwnerMatch 8

#define RASCM_DDMPreSharedKey 64

#define RASCM_DefaultCreds 8

#define RASCM_Domain 4

#define RASCM_Password 2

#define RASCM_PreSharedKey 16

#define RASCM_ServerPreSharedKey 32

#define RASCM_UserName 1

#define RASCN_BandwidthAdded 4

#define RASCN_BandwidthRemoved 8

#define RASCN_Connection 1

#define RASCN_Disconnection 2

#define RASCN_Dormant 16

#define RASCN_ReConnection 32

#define RASCS_DONE 8192

#define RASCS_PAUSED 4096

#define RASCSS_DONE 8192

#define RASEAPF_Logon 4

#define RASEAPF_NonInteractive 2

#define RASEAPF_Preview 8

#define RASEDM_DialAll 1

#define RASEDM_DialAsNeeded 2

#define RASEO2_DisableClassBasedStaticRoute 524288

#define RASEO2_DisableIKENameEkuCheck 262144

#define RASEO2_DisableMobility 2097152

#define RASEO2_DisableNbtOverIP 64

#define RASEO2_DontNegotiateMultilink 4

#define RASEO2_DontUseRasCredentials 8

#define RASEO2_Internet 32

#define RASEO2_IPv4ExplicitMetric 65536

#define RASEO2_IPv6ExplicitMetric 131072

#define RASEO2_IPv6RemoteDefaultGateway 8192

#define RASEO2_IPv6SpecificNameServers 4096

#define RASEO2_ReconnectIfDropped 256

#define RASEO2_RegisterIpWithDNS 16384

#define RASEO2_RequireMachineCertificates 4194304

#define RASEO2_SecureClientForMSNet 2

#define RASEO2_SecureFileAndPrint 1

#define RASEO2_SecureRoutingCompartment 1024

#define RASEO2_SharePhoneNumbers 512

#define RASEO2_SpecificIPv6Addr 1048576

#define RASEO2_UseDNSSuffixForRegistration 32768

#define RASEO2_UseGlobalDeviceSettings 128

#define RASEO2_UsePreSharedKey 16

#define RASEO2_UseTypicalSettings 2048

#define RASEO_Custom 1048576

#define RASEO_CustomScript 2147483648

#define RASEO_DisableLcpExtensions 32

#define RASEO_IpHeaderCompression 8

#define RASEO_ModemLights 256

#define RASEO_NetworkLogon 8192

#define RASEO_PreviewDomain 33554432

#define RASEO_PreviewPhoneNumber 2097152

#define RASEO_PreviewUserPw 16777216

#define RASEO_PromoteAlternates 32768

#define RASEO_RemoteDefaultGateway 16

#define RASEO_RequireCHAP 134217728

#define RASEO_RequireDataEncryption 4096

#define RASEO_RequireEAP 131072

#define RASEO_RequireEncryptedPw 1024

#define RASEO_RequireMsCHAP 268435456

#define RASEO_RequireMsCHAP2 536870912

#define RASEO_RequireMsEncryptedPw 2048

#define RASEO_RequirePAP 262144

#define RASEO_RequireSPAP 524288

#define RASEO_RequireW95MSCHAP 1073741824

#define RASEO_SecureLocalFiles 65536

#define RASEO_SharedPhoneNumbers 8388608

#define RASEO_ShowDialingProgress 67108864

#define RASEO_SpecificIpAddr 2

#define RASEO_SpecificNameServers 4

#define RASEO_SwCompression 512

#define RASEO_TerminalAfterDial 128

#define RASEO_TerminalBeforeDial 64

#define RASEO_UseCountryAndAreaCodes 1

#define RASEO_UseLogonCredentials 16384

#define RASET_Broadband 5

#define RASET_Internet 4

#define RASET_Phone 1

#define RASET_Vpn 2

#define RASFP_Ppp 1

#define RASFP_Ras 4

#define RASFP_Slip 2

#define RASIDS_Disabled 4294967295

#define RASIDS_UseGlobalValue 0

#define RASIKEv2_AUTH_EAP 2

#define RASIKEv2_AUTH_MACHINECERTIFICATES 1

#define RASIKEv2_FLAGS_BEHIND_NAT 2

#define RASIKEv2_FLAGS_MOBIKESUPPORTED 1

#define RASIKEv2_FLAGS_SERVERBEHIND_NAT 4

#define RASIPO_VJ 1

#define RASLCPAD_CHAP_MD5 5

#define RASLCPAD_CHAP_MS 128

#define RASLCPAD_CHAP_MSV2 129

#define RASLCPAP_CHAP 49699

#define RASLCPAP_EAP 49703

#define RASLCPAP_PAP 49187

#define RASLCPAP_SPAP 49191

#define RASLCPO_3_DES 16

#define RASLCPO_ACFC 2

#define RASLCPO_AES_128 32

#define RASLCPO_AES_256 64

#define RASLCPO_DES_56 8

#define RASLCPO_PFC 1

#define RASLCPO_SSHF 4

#define RASNP_Ip 4

#define RASNP_Ipv6 8

#define RASNP_Ipx 2

#define RASNP_NetBEUI 1

#define RASTUNNELENDPOINT_IPv4 1

#define RASTUNNELENDPOINT_IPv6 2

#define RASTUNNELENDPOINT_UNKNOWN 0

#define RCD_AllUsers 1

#define RCD_Eap 2

#define RCD_Logon 4

#define RCD_SingleUser 0

#define RDEOPT_CustomDial 4096

#define RDEOPT_DisableConnectedUI 64

#define RDEOPT_DisableReconnect 256

#define RDEOPT_DisableReconnectUI 128

#define RDEOPT_IgnoreModemSpeaker 4

#define RDEOPT_IgnoreSoftwareCompression 16

#define RDEOPT_NoUser 512

#define RDEOPT_PausedStates 2

#define RDEOPT_PauseOnScript 1024

#define RDEOPT_Router 2048

#define RDEOPT_SetModemSpeaker 8

#define RDEOPT_SetSoftwareCompression 32

#define RDEOPT_UseCustomScripting 8192

#define RDEOPT_UsePrefixSuffix 1

#define REN_AllUsers 1

#define REN_User 0

#define VS_Default 0

#define VS_Ikev2First 8

#define VS_Ikev2Only 7

#define VS_Ikev2Sstp 14

#define VS_L2tpFirst 4

#define VS_L2tpOnly 3

#define VS_L2tpSstp 13

#define VS_PptpFirst 2

#define VS_PptpOnly 1

#define VS_PptpSstp 12

#define VS_SstpFirst 6

#define VS_SstpOnly 5

#define WM_RASDIALEVENT 52429

typedef struct _RAS_PROJECTION_INFO _RAS_PROJECTION_INFO, *P_RAS_PROJECTION_INFO;

typedef enum RASAPIVERSION {
    RASAPIVERSION_500=1,
    RASAPIVERSION_501=2,
    RASAPIVERSION_600=3,
    RASAPIVERSION_601=4
} RASAPIVERSION;

typedef enum _RASPROJECTION_INFO_TYPE {
    PROJECTION_INFO_TYPE_IKEv2=2,
    PROJECTION_INFO_TYPE_PPP=1
} _RASPROJECTION_INFO_TYPE;

typedef enum _RASPROJECTION_INFO_TYPE RASPROJECTION_INFO_TYPE;

typedef union _union_6438 _union_6438, *P_union_6438;

typedef struct _RASPPP_PROJECTION_INFO _RASPPP_PROJECTION_INFO, *P_RASPPP_PROJECTION_INFO;

typedef struct _RASPPP_PROJECTION_INFO RASPPP_PROJECTION_INFO;

typedef struct _RASIKEV2_PROJECTION_INFO _RASIKEV2_PROJECTION_INFO, *P_RASIKEV2_PROJECTION_INFO;

typedef struct _RASIKEV2_PROJECTION_INFO RASIKEV2_PROJECTION_INFO;

typedef struct in_addr RASIPV4ADDR;

typedef struct in6_addr RASIPV6ADDR;

struct _RASPPP_PROJECTION_INFO {
    DWORD dwIPv4NegotiationError;
    RASIPV4ADDR ipv4Address;
    RASIPV4ADDR ipv4ServerAddress;
    DWORD dwIPv4Options;
    DWORD dwIPv4ServerOptions;
    DWORD dwIPv6NegotiationError;
    BYTE bInterfaceIdentifier[8];
    BYTE bServerInterfaceIdentifier[8];
    BOOL fBundled;
    BOOL fMultilink;
    DWORD dwAuthenticationProtocol;
    DWORD dwAuthenticationData;
    DWORD dwServerAuthenticationProtocol;
    DWORD dwServerAuthenticationData;
    DWORD dwEapTypeId;
    DWORD dwServerEapTypeId;
    DWORD dwLcpOptions;
    DWORD dwLcpServerOptions;
    DWORD dwCcpError;
    DWORD dwCcpCompressionAlgorithm;
    DWORD dwCcpServerCompressionAlgorithm;
    DWORD dwCcpOptions;
    DWORD dwCcpServerOptions;
};

struct _RASIKEV2_PROJECTION_INFO {
    DWORD dwIPv4NegotiationError;
    RASIPV4ADDR ipv4Address;
    RASIPV4ADDR ipv4ServerAddress;
    DWORD dwIPv6NegotiationError;
    RASIPV6ADDR ipv6Address;
    RASIPV6ADDR ipv6ServerAddress;
    DWORD dwPrefixLength;
    DWORD dwAuthenticationProtocol;
    DWORD dwEapTypeId;
    DWORD dwFlags;
    DWORD dwEncryptionMethod;
    DWORD numIPv4ServerAddresses;
    RASIPV4ADDR * ipv4ServerAddresses;
    DWORD numIPv6ServerAddresses;
    RASIPV6ADDR * ipv6ServerAddresses;
};

union _union_6438 {
    RASPPP_PROJECTION_INFO ppp;
    RASIKEV2_PROJECTION_INFO ikev2;
};

struct _RAS_PROJECTION_INFO {
    enum RASAPIVERSION version;
    RASPROJECTION_INFO_TYPE type;
    union _union_6438 field_0x8;
};

typedef struct _RAS_STATS _RAS_STATS, *P_RAS_STATS;

struct _RAS_STATS {
    DWORD dwSize;
    DWORD dwBytesXmited;
    DWORD dwBytesRcved;
    DWORD dwFramesXmited;
    DWORD dwFramesRcved;
    DWORD dwCrcErr;
    DWORD dwTimeoutErr;
    DWORD dwAlignmentErr;
    DWORD dwHardwareOverrunErr;
    DWORD dwFramingErr;
    DWORD dwBufferOverrunErr;
    DWORD dwCompressionRatioIn;
    DWORD dwCompressionRatioOut;
    DWORD dwBps;
    DWORD dwConnectDuration;
};

typedef union _union_6404 _union_6404, *P_union_6404;

union _union_6404 {
    RASIPV4ADDR ipv4;
    RASIPV6ADDR ipv6;
};

typedef struct HRASCONN__ HRASCONN__, *PHRASCONN__;

typedef struct HRASCONN__ * HRASCONN;

struct HRASCONN__ {
    int unused;
};

typedef BOOL (* ORASADFUNC)(HWND, LPSTR, DWORD, LPDWORD);

typedef DWORD (* PFNRASFREEBUFFER)(PBYTE);

typedef DWORD * PDWORD;

typedef DWORD (* PFNRASGETBUFFER)(PBYTE *, PDWORD);

typedef DWORD (* PFNRASRECEIVEBUFFER)(HANDLE, PBYTE, PDWORD, DWORD, HANDLE);

typedef DWORD (* PFNRASRETRIEVEBUFFER)(HANDLE, PBYTE, PDWORD);

typedef DWORD (* PFNRASSENDBUFFER)(HANDLE, PBYTE, DWORD);

typedef struct tagRASCOMMSETTINGS tagRASCOMMSETTINGS, *PtagRASCOMMSETTINGS;

typedef DWORD (* PFNRASSETCOMMSETTINGS)(HANDLE, struct tagRASCOMMSETTINGS *, PVOID);

struct tagRASCOMMSETTINGS {
    DWORD dwSize;
    BYTE bParity;
    BYTE bStop;
    BYTE bByteSize;
    BYTE bAlign;
};

typedef struct _RAS_PROJECTION_INFO * PRAS_PROJECTION_INFO;

typedef struct _RAS_STATS * PRAS_STATS;

typedef struct tagRASDEVSPECIFICINFO tagRASDEVSPECIFICINFO, *PtagRASDEVSPECIFICINFO;

typedef struct tagRASDEVSPECIFICINFO * PRASDEVSPECIFICINFO;

struct tagRASDEVSPECIFICINFO {
    DWORD dwSize;
    BYTE * pbDevSpecificInfo;
};

typedef struct _RASIKEV2_PROJECTION_INFO * PRASIKEV2_PROJECTION_INFO;

typedef struct _RASPPP_PROJECTION_INFO * PRASPPP_PROJECTION_INFO;

typedef struct _RAS_PROJECTION_INFO RAS_PROJECTION_INFO;

typedef struct _RAS_STATS RAS_STATS;

typedef struct tagRASADPARAMS tagRASADPARAMS, *PtagRASADPARAMS;

typedef BOOL (* RASADFUNCA)(LPSTR, LPSTR, struct tagRASADPARAMS *, LPDWORD);

struct tagRASADPARAMS {
    DWORD dwSize;
    HWND hwndOwner;
    DWORD dwFlags;
    LONG xDlg;
    LONG yDlg;
};

typedef BOOL (* RASADFUNCW)(LPWSTR, LPWSTR, struct tagRASADPARAMS *, LPDWORD);

typedef struct RASCTRYINFO RASCTRYINFO, *PRASCTRYINFO;

struct RASCTRYINFO {
    DWORD dwSize;
    DWORD dwCountryID;
    DWORD dwNextCountryID;
    DWORD dwCountryCode;
    DWORD dwCountryNameOffset;
};

typedef DWORD (* RasCustomDeleteEntryNotifyFn)(LPCWSTR, LPCWSTR, DWORD);

typedef struct tagRASDIALEXTENSIONS tagRASDIALEXTENSIONS, *PtagRASDIALEXTENSIONS;

typedef struct tagRASDIALPARAMSA tagRASDIALPARAMSA, *PtagRASDIALPARAMSA;

typedef DWORD (* RasCustomDialFn)(HINSTANCE, struct tagRASDIALEXTENSIONS *, LPCWSTR, struct tagRASDIALPARAMSA *, DWORD, LPVOID, HRASCONN *, DWORD);

typedef struct tagRASEAPINFO tagRASEAPINFO, *PtagRASEAPINFO;

typedef struct tagRASDEVSPECIFICINFO RASDEVSPECIFICINFO;

struct tagRASEAPINFO {
    DWORD dwSizeofEapInfo;
    BYTE * pbEapInfo;
};

struct tagRASDIALEXTENSIONS {
    DWORD dwSize;
    DWORD dwfOptions;
    HWND hwndParent;
    ULONG_PTR reserved;
    ULONG_PTR reserved1;
    struct tagRASEAPINFO RasEapInfo;
    BOOL fSkipPppAuth;
    RASDEVSPECIFICINFO RasDevSpecificInfo;
};

struct tagRASDIALPARAMSA {
    DWORD dwSize;
    CHAR szEntryName[257];
    CHAR szPhoneNumber[129];
    CHAR szCallbackNumber[129];
    CHAR szUserName[257];
    CHAR szPassword[257];
    CHAR szDomain[16];
    DWORD dwSubEntry;
    ULONG_PTR dwCallbackId;
    DWORD dwIfIndex;
};

typedef DWORD (* RasCustomHangUpFn)(HRASCONN);

typedef DWORD (* RasCustomScriptExecuteFn)(HANDLE, LPCWSTR, LPCWSTR, PFNRASGETBUFFER, PFNRASFREEBUFFER, PFNRASSENDBUFFER, PFNRASRECEIVEBUFFER, PFNRASRETRIEVEBUFFER, HWND, struct tagRASDIALPARAMSA *, PVOID);

typedef enum tagRASCONNSTATE {
    RASCS_AllDevicesConnected=4,
    RASCS_ApplySettings=24,
    RASCS_AuthAck=12,
    RASCS_AuthCallback=8,
    RASCS_AuthChangePassword=9,
    RASCS_AuthLinkSpeed=11,
    RASCS_AuthNotify=6,
    RASCS_AuthProject=10,
    RASCS_AuthRetry=7,
    RASCS_Authenticate=5,
    RASCS_Authenticated=14,
    RASCS_CallbackComplete=20,
    RASCS_CallbackSetByCaller=4098,
    RASCS_ConnectDevice=2,
    RASCS_Connected=8192,
    RASCS_DeviceConnected=3,
    RASCS_Disconnected=8193,
    RASCS_Interactive=4096,
    RASCS_InvokeEapUI=4100,
    RASCS_LogonNetwork=21,
    RASCS_OpenPort=0,
    RASCS_PasswordExpired=4099,
    RASCS_PortOpened=1,
    RASCS_PrepareForCallback=15,
    RASCS_Projected=18,
    RASCS_ReAuthenticate=13,
    RASCS_RetryAuthentication=4097,
    RASCS_StartAuthentication=19,
    RASCS_SubEntryConnected=22,
    RASCS_SubEntryDisconnected=23,
    RASCS_WaitForCallback=17,
    RASCS_WaitForModemReset=16
} tagRASCONNSTATE;

typedef void (* RASDIALFUNC)(UINT, enum tagRASCONNSTATE, DWORD);

typedef void (* RASDIALFUNC1)(HRASCONN, UINT, enum tagRASCONNSTATE, DWORD, DWORD);

typedef DWORD (* RASDIALFUNC2)(ULONG_PTR, DWORD, HRASCONN, UINT, enum tagRASCONNSTATE, DWORD, DWORD);

typedef struct RASIPADDR RASIPADDR, *PRASIPADDR;

struct RASIPADDR {
    BYTE a;
    BYTE b;
    BYTE c;
    BYTE d;
};

typedef struct tagRASAMBA tagRASAMBA, *PtagRASAMBA;

struct tagRASAMBA {
    DWORD dwSize;
    DWORD dwError;
    CHAR szNetBiosError[17];
    BYTE bLana;
};

typedef struct tagRASAMBW tagRASAMBW, *PtagRASAMBW;

struct tagRASAMBW {
    DWORD dwSize;
    DWORD dwError;
    WCHAR szNetBiosError[17];
    BYTE bLana;
};

typedef struct tagRASAUTODIALENTRYA tagRASAUTODIALENTRYA, *PtagRASAUTODIALENTRYA;

struct tagRASAUTODIALENTRYA {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDialingLocation;
    CHAR szEntry[257];
};

typedef struct tagRASAUTODIALENTRYW tagRASAUTODIALENTRYW, *PtagRASAUTODIALENTRYW;

struct tagRASAUTODIALENTRYW {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwDialingLocation;
    WCHAR szEntry[257];
};

typedef struct tagRASCONNA tagRASCONNA, *PtagRASCONNA;

struct tagRASCONNA {
    DWORD dwSize;
    HRASCONN hrasconn;
    CHAR szEntryName[257];
    CHAR szDeviceType[17];
    CHAR szDeviceName[129];
    CHAR szPhonebook[260];
    DWORD dwSubEntry;
    GUID guidEntry;
    DWORD dwFlags;
    LUID luid;
    GUID guidCorrelationId;
};

typedef struct tagRASCONNSTATUSA tagRASCONNSTATUSA, *PtagRASCONNSTATUSA;

typedef struct tagRASTUNNELENDPOINT tagRASTUNNELENDPOINT, *PtagRASTUNNELENDPOINT;

typedef enum tagRASCONNSUBSTATE {
    RASCSS_Dormant=1,
    RASCSS_None=0,
    RASCSS_Reconnected=8192,
    RASCSS_Reconnecting=2
} tagRASCONNSUBSTATE;

struct tagRASTUNNELENDPOINT {
    DWORD dwType;
    union _union_6404 field_0x4;
};

struct tagRASCONNSTATUSA {
    DWORD dwSize;
    enum tagRASCONNSTATE rasconnstate;
    DWORD dwError;
    CHAR szDeviceType[17];
    CHAR szDeviceName[129];
    CHAR szPhoneNumber[129];
    struct tagRASTUNNELENDPOINT localEndPoint;
    struct tagRASTUNNELENDPOINT remoteEndPoint;
    enum tagRASCONNSUBSTATE rasconnsubstate;
};

typedef struct tagRASCONNSTATUSW tagRASCONNSTATUSW, *PtagRASCONNSTATUSW;

struct tagRASCONNSTATUSW {
    DWORD dwSize;
    enum tagRASCONNSTATE rasconnstate;
    DWORD dwError;
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szPhoneNumber[129];
    struct tagRASTUNNELENDPOINT localEndPoint;
    struct tagRASTUNNELENDPOINT remoteEndPoint;
    enum tagRASCONNSUBSTATE rasconnsubstate;
};

typedef struct tagRASCONNW tagRASCONNW, *PtagRASCONNW;

struct tagRASCONNW {
    DWORD dwSize;
    HRASCONN hrasconn;
    WCHAR szEntryName[257];
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szPhonebook[260];
    DWORD dwSubEntry;
    GUID guidEntry;
    DWORD dwFlags;
    LUID luid;
    GUID guidCorrelationId;
};

typedef struct tagRASCREDENTIALSA tagRASCREDENTIALSA, *PtagRASCREDENTIALSA;

struct tagRASCREDENTIALSA {
    DWORD dwSize;
    DWORD dwMask;
    CHAR szUserName[257];
    CHAR szPassword[257];
    CHAR szDomain[16];
};

typedef struct tagRASCREDENTIALSW tagRASCREDENTIALSW, *PtagRASCREDENTIALSW;

struct tagRASCREDENTIALSW {
    DWORD dwSize;
    DWORD dwMask;
    WCHAR szUserName[257];
    WCHAR szPassword[257];
    WCHAR szDomain[16];
};

typedef struct tagRASCUSTOMSCRIPTEXTENSIONS tagRASCUSTOMSCRIPTEXTENSIONS, *PtagRASCUSTOMSCRIPTEXTENSIONS;

struct tagRASCUSTOMSCRIPTEXTENSIONS {
    DWORD dwSize;
    PFNRASSETCOMMSETTINGS pfnRasSetCommSettings;
};

typedef struct tagRASDEVINFOA tagRASDEVINFOA, *PtagRASDEVINFOA;

struct tagRASDEVINFOA {
    DWORD dwSize;
    CHAR szDeviceType[17];
    CHAR szDeviceName[129];
};

typedef struct tagRASDEVINFOW tagRASDEVINFOW, *PtagRASDEVINFOW;

struct tagRASDEVINFOW {
    DWORD dwSize;
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
};

typedef struct tagRASDIALPARAMSW tagRASDIALPARAMSW, *PtagRASDIALPARAMSW;

struct tagRASDIALPARAMSW {
    DWORD dwSize;
    WCHAR szEntryName[257];
    WCHAR szPhoneNumber[129];
    WCHAR szCallbackNumber[129];
    WCHAR szUserName[257];
    WCHAR szPassword[257];
    WCHAR szDomain[16];
    DWORD dwSubEntry;
    ULONG_PTR dwCallbackId;
    DWORD dwIfIndex;
};

typedef struct tagRASEAPUSERIDENTITYA tagRASEAPUSERIDENTITYA, *PtagRASEAPUSERIDENTITYA;

struct tagRASEAPUSERIDENTITYA {
    CHAR szUserName[257];
    DWORD dwSizeofEapInfo;
    BYTE pbEapInfo[1];
};

typedef struct tagRASEAPUSERIDENTITYW tagRASEAPUSERIDENTITYW, *PtagRASEAPUSERIDENTITYW;

struct tagRASEAPUSERIDENTITYW {
    WCHAR szUserName[257];
    DWORD dwSizeofEapInfo;
    BYTE pbEapInfo[1];
};

typedef struct tagRASENTRYA tagRASENTRYA, *PtagRASENTRYA;

struct tagRASENTRYA {
    DWORD dwSize;
    DWORD dwfOptions;
    DWORD dwCountryID;
    DWORD dwCountryCode;
    CHAR szAreaCode[11];
    CHAR szLocalPhoneNumber[129];
    DWORD dwAlternateOffset;
    struct RASIPADDR ipaddr;
    struct RASIPADDR ipaddrDns;
    struct RASIPADDR ipaddrDnsAlt;
    struct RASIPADDR ipaddrWins;
    struct RASIPADDR ipaddrWinsAlt;
    DWORD dwFrameSize;
    DWORD dwfNetProtocols;
    DWORD dwFramingProtocol;
    CHAR szScript[260];
    CHAR szAutodialDll[260];
    CHAR szAutodialFunc[260];
    CHAR szDeviceType[17];
    CHAR szDeviceName[129];
    CHAR szX25PadType[33];
    CHAR szX25Address[201];
    CHAR szX25Facilities[201];
    CHAR szX25UserData[201];
    DWORD dwChannels;
    DWORD dwReserved1;
    DWORD dwReserved2;
    DWORD dwSubEntries;
    DWORD dwDialMode;
    DWORD dwDialExtraPercent;
    DWORD dwDialExtraSampleSeconds;
    DWORD dwHangUpExtraPercent;
    DWORD dwHangUpExtraSampleSeconds;
    DWORD dwIdleDisconnectSeconds;
    DWORD dwType;
    DWORD dwEncryptionType;
    DWORD dwCustomAuthKey;
    GUID guidId;
    CHAR szCustomDialDll[260];
    DWORD dwVpnStrategy;
    DWORD dwfOptions2;
    DWORD dwfOptions3;
    CHAR szDnsSuffix[256];
    DWORD dwTcpWindowSize;
    CHAR szPrerequisitePbk[260];
    CHAR szPrerequisiteEntry[257];
    DWORD dwRedialCount;
    DWORD dwRedialPause;
    RASIPV6ADDR ipv6addrDns;
    RASIPV6ADDR ipv6addrDnsAlt;
    DWORD dwIPv4InterfaceMetric;
    DWORD dwIPv6InterfaceMetric;
    RASIPV6ADDR ipv6addr;
    DWORD dwIPv6PrefixLength;
    DWORD dwNetworkOutageTime;
};

typedef struct tagRASENTRYNAMEA tagRASENTRYNAMEA, *PtagRASENTRYNAMEA;

struct tagRASENTRYNAMEA {
    DWORD dwSize;
    CHAR szEntryName[257];
    DWORD dwFlags;
    CHAR szPhonebookPath[261];
};

typedef struct tagRASENTRYNAMEW tagRASENTRYNAMEW, *PtagRASENTRYNAMEW;

struct tagRASENTRYNAMEW {
    DWORD dwSize;
    WCHAR szEntryName[257];
    DWORD dwFlags;
    WCHAR szPhonebookPath[261];
};

typedef struct tagRASENTRYW tagRASENTRYW, *PtagRASENTRYW;

struct tagRASENTRYW {
    DWORD dwSize;
    DWORD dwfOptions;
    DWORD dwCountryID;
    DWORD dwCountryCode;
    WCHAR szAreaCode[11];
    WCHAR szLocalPhoneNumber[129];
    DWORD dwAlternateOffset;
    struct RASIPADDR ipaddr;
    struct RASIPADDR ipaddrDns;
    struct RASIPADDR ipaddrDnsAlt;
    struct RASIPADDR ipaddrWins;
    struct RASIPADDR ipaddrWinsAlt;
    DWORD dwFrameSize;
    DWORD dwfNetProtocols;
    DWORD dwFramingProtocol;
    WCHAR szScript[260];
    WCHAR szAutodialDll[260];
    WCHAR szAutodialFunc[260];
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szX25PadType[33];
    WCHAR szX25Address[201];
    WCHAR szX25Facilities[201];
    WCHAR szX25UserData[201];
    DWORD dwChannels;
    DWORD dwReserved1;
    DWORD dwReserved2;
    DWORD dwSubEntries;
    DWORD dwDialMode;
    DWORD dwDialExtraPercent;
    DWORD dwDialExtraSampleSeconds;
    DWORD dwHangUpExtraPercent;
    DWORD dwHangUpExtraSampleSeconds;
    DWORD dwIdleDisconnectSeconds;
    DWORD dwType;
    DWORD dwEncryptionType;
    DWORD dwCustomAuthKey;
    GUID guidId;
    WCHAR szCustomDialDll[260];
    DWORD dwVpnStrategy;
    DWORD dwfOptions2;
    DWORD dwfOptions3;
    WCHAR szDnsSuffix[256];
    DWORD dwTcpWindowSize;
    WCHAR szPrerequisitePbk[260];
    WCHAR szPrerequisiteEntry[257];
    DWORD dwRedialCount;
    DWORD dwRedialPause;
    RASIPV6ADDR ipv6addrDns;
    RASIPV6ADDR ipv6addrDnsAlt;
    DWORD dwIPv4InterfaceMetric;
    DWORD dwIPv6InterfaceMetric;
    RASIPV6ADDR ipv6addr;
    DWORD dwIPv6PrefixLength;
    DWORD dwNetworkOutageTime;
};

typedef struct tagRASIPXW tagRASIPXW, *PtagRASIPXW;

struct tagRASIPXW {
    DWORD dwSize;
    DWORD dwError;
    WCHAR szIpxAddress[22];
};

typedef struct tagRASPPPCCP tagRASPPPCCP, *PtagRASPPPCCP;

struct tagRASPPPCCP {
    DWORD dwSize;
    DWORD dwError;
    DWORD dwCompressionAlgorithm;
    DWORD dwOptions;
    DWORD dwServerCompressionAlgorithm;
    DWORD dwServerOptions;
};

typedef struct tagRASPPPIPA tagRASPPPIPA, *PtagRASPPPIPA;

struct tagRASPPPIPA {
    DWORD dwSize;
    DWORD dwError;
    CHAR szIpAddress[16];
    CHAR szServerIpAddress[16];
    DWORD dwOptions;
    DWORD dwServerOptions;
};

typedef struct tagRASPPPIPV6 tagRASPPPIPV6, *PtagRASPPPIPV6;

struct tagRASPPPIPV6 {
    DWORD dwSize;
    DWORD dwError;
    BYTE bLocalInterfaceIdentifier[8];
    BYTE bPeerInterfaceIdentifier[8];
    BYTE bLocalCompressionProtocol[2];
    BYTE bPeerCompressionProtocol[2];
};

typedef struct tagRASPPPIPW tagRASPPPIPW, *PtagRASPPPIPW;

struct tagRASPPPIPW {
    DWORD dwSize;
    DWORD dwError;
    WCHAR szIpAddress[16];
    WCHAR szServerIpAddress[16];
    DWORD dwOptions;
    DWORD dwServerOptions;
};

typedef struct tagRASPPPIPXA tagRASPPPIPXA, *PtagRASPPPIPXA;

struct tagRASPPPIPXA {
    DWORD dwSize;
    DWORD dwError;
    CHAR szIpxAddress[22];
};

typedef struct tagRASPPPLCPA tagRASPPPLCPA, *PtagRASPPPLCPA;

struct tagRASPPPLCPA {
    DWORD dwSize;
    BOOL fBundled;
    DWORD dwError;
    DWORD dwAuthenticationProtocol;
    DWORD dwAuthenticationData;
    DWORD dwEapTypeId;
    DWORD dwServerAuthenticationProtocol;
    DWORD dwServerAuthenticationData;
    DWORD dwServerEapTypeId;
    BOOL fMultilink;
    DWORD dwTerminateReason;
    DWORD dwServerTerminateReason;
    CHAR szReplyMessage[1024];
    DWORD dwOptions;
    DWORD dwServerOptions;
};

typedef struct tagRASPPPLCPW tagRASPPPLCPW, *PtagRASPPPLCPW;

struct tagRASPPPLCPW {
    DWORD dwSize;
    BOOL fBundled;
    DWORD dwError;
    DWORD dwAuthenticationProtocol;
    DWORD dwAuthenticationData;
    DWORD dwEapTypeId;
    DWORD dwServerAuthenticationProtocol;
    DWORD dwServerAuthenticationData;
    DWORD dwServerEapTypeId;
    BOOL fMultilink;
    DWORD dwTerminateReason;
    DWORD dwServerTerminateReason;
    WCHAR szReplyMessage[1024];
    DWORD dwOptions;
    DWORD dwServerOptions;
};

typedef struct tagRASPPPNBFA tagRASPPPNBFA, *PtagRASPPPNBFA;

struct tagRASPPPNBFA {
    DWORD dwSize;
    DWORD dwError;
    DWORD dwNetBiosError;
    CHAR szNetBiosError[17];
    CHAR szWorkstationName[17];
    BYTE bLana;
};

typedef struct tagRASPPPNBFW tagRASPPPNBFW, *PtagRASPPPNBFW;

struct tagRASPPPNBFW {
    DWORD dwSize;
    DWORD dwError;
    DWORD dwNetBiosError;
    WCHAR szNetBiosError[17];
    WCHAR szWorkstationName[17];
    BYTE bLana;
};

typedef enum tagRASPROJECTION {
    RASP_Amb=65536,
    RASP_PppCcp=33021,
    RASP_PppIp=32801,
    RASP_PppIpv6=32855,
    RASP_PppIpx=32811,
    RASP_PppLcp=49185,
    RASP_PppNbf=32831
} tagRASPROJECTION;

typedef struct tagRASSUBENTRYA tagRASSUBENTRYA, *PtagRASSUBENTRYA;

struct tagRASSUBENTRYA {
    DWORD dwSize;
    DWORD dwfFlags;
    CHAR szDeviceType[17];
    CHAR szDeviceName[129];
    CHAR szLocalPhoneNumber[129];
    DWORD dwAlternateOffset;
};

typedef struct tagRASSUBENTRYW tagRASSUBENTRYW, *PtagRASSUBENTRYW;

struct tagRASSUBENTRYW {
    DWORD dwSize;
    DWORD dwfFlags;
    WCHAR szDeviceType[17];
    WCHAR szDeviceName[129];
    WCHAR szLocalPhoneNumber[129];
    DWORD dwAlternateOffset;
};

typedef struct tagRASUPDATECONN tagRASUPDATECONN, *PtagRASUPDATECONN;

struct tagRASUPDATECONN {
    enum RASAPIVERSION version;
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwIfIndex;
    struct tagRASTUNNELENDPOINT localEndPoint;
    struct tagRASTUNNELENDPOINT remoteEndPoint;
};

#define DISPID_RDPSRAPI_EVENT_ON_APPFILTER_UPDATE 322

#define DISPID_RDPSRAPI_EVENT_ON_APPLICATION_CLOSE 317

#define DISPID_RDPSRAPI_EVENT_ON_APPLICATION_OPEN 316

#define DISPID_RDPSRAPI_EVENT_ON_APPLICATION_UPDATE 318

#define DISPID_RDPSRAPI_EVENT_ON_ATTENDEE_CONNECTED 301

#define DISPID_RDPSRAPI_EVENT_ON_ATTENDEE_DISCONNECTED 302

#define DISPID_RDPSRAPI_EVENT_ON_ATTENDEE_UPDATE 303

#define DISPID_RDPSRAPI_EVENT_ON_CTRLLEVEL_CHANGE_REQUEST 309

#define DISPID_RDPSRAPI_EVENT_ON_ERROR 304

#define DISPID_RDPSRAPI_EVENT_ON_FOCUSRELEASED 324

#define DISPID_RDPSRAPI_EVENT_ON_GRAPHICS_STREAM_PAUSED 310

#define DISPID_RDPSRAPI_EVENT_ON_GRAPHICS_STREAM_RESUMED 311

#define DISPID_RDPSRAPI_EVENT_ON_SHARED_DESKTOP_SETTINGS_CHANGED 325

#define DISPID_RDPSRAPI_EVENT_ON_SHARED_RECT_CHANGED 323

#define DISPID_RDPSRAPI_EVENT_ON_VIEWER_AUTHENTICATED 307

#define DISPID_RDPSRAPI_EVENT_ON_VIEWER_CONNECTED 305

#define DISPID_RDPSRAPI_EVENT_ON_VIEWER_CONNECTFAILED 308

#define DISPID_RDPSRAPI_EVENT_ON_VIEWER_DISCONNECTED 306

#define DISPID_RDPSRAPI_EVENT_ON_VIRTUAL_CHANNEL_DATARECEIVED 314

#define DISPID_RDPSRAPI_EVENT_ON_VIRTUAL_CHANNEL_JOIN 312

#define DISPID_RDPSRAPI_EVENT_ON_VIRTUAL_CHANNEL_LEAVE 313

#define DISPID_RDPSRAPI_EVENT_ON_VIRTUAL_CHANNEL_SENDCOMPLETED 315

#define DISPID_RDPSRAPI_EVENT_ON_WINDOW_CLOSE 320

#define DISPID_RDPSRAPI_EVENT_ON_WINDOW_OPEN 319

#define DISPID_RDPSRAPI_EVENT_ON_WINDOW_UPDATE 321

#define DISPID_RDPSRAPI_METHOD_CLOSE 101

#define DISPID_RDPSRAPI_METHOD_CONNECTTOCLIENT 117

#define DISPID_RDPSRAPI_METHOD_CREATE_INVITATION 107

#define DISPID_RDPSRAPI_METHOD_GETSHAREDRECT 103

#define DISPID_RDPSRAPI_METHOD_OPEN 100

#define DISPID_RDPSRAPI_METHOD_PAUSE 112

#define DISPID_RDPSRAPI_METHOD_REQUEST_COLOR_DEPTH_CHANGE 115

#define DISPID_RDPSRAPI_METHOD_REQUEST_CONTROL 108

#define DISPID_RDPSRAPI_METHOD_RESUME 113

#define DISPID_RDPSRAPI_METHOD_SETSHAREDRECT 102

#define DISPID_RDPSRAPI_METHOD_SHOW_WINDOW 114

#define DISPID_RDPSRAPI_METHOD_STARTREVCONNECTLISTENER 116

#define DISPID_RDPSRAPI_METHOD_TERMINATE_CONNECTION 106

#define DISPID_RDPSRAPI_METHOD_VIEWERCONNECT 104

#define DISPID_RDPSRAPI_METHOD_VIEWERDISCONNECT 105

#define DISPID_RDPSRAPI_METHOD_VIRTUAL_CHANNEL_CREATE 109

#define DISPID_RDPSRAPI_METHOD_VIRTUAL_CHANNEL_SEND_DATA 110

#define DISPID_RDPSRAPI_METHOD_VIRTUAL_CHANNEL_SET_ACCESS 111

#define DISPID_RDPSRAPI_PROP_APPFILTER_ENABLED 218

#define DISPID_RDPSRAPI_PROP_APPFILTERENABLED 219

#define DISPID_RDPSRAPI_PROP_APPFLAGS 223

#define DISPID_RDPSRAPI_PROP_APPLICATION 211

#define DISPID_RDPSRAPI_PROP_APPLICATION_FILTER 215

#define DISPID_RDPSRAPI_PROP_APPLICATION_LIST 217

#define DISPID_RDPSRAPI_PROP_APPNAME 214

#define DISPID_RDPSRAPI_PROP_ATTENDEE_FLAGS 230

#define DISPID_RDPSRAPI_PROP_ATTENDEELIMIT 235

#define DISPID_RDPSRAPI_PROP_ATTENDEES 203

#define DISPID_RDPSRAPI_PROP_CHANNELMANAGER 206

#define DISPID_RDPSRAPI_PROP_CODE 241

#define DISPID_RDPSRAPI_PROP_CONINFO 231

#define DISPID_RDPSRAPI_PROP_CONNECTION_STRING 232

#define DISPID_RDPSRAPI_PROP_COUNT 244

#define DISPID_RDPSRAPI_PROP_CTRL_LEVEL 242

#define DISPID_RDPSRAPI_PROP_DBG_CLX_CMDLINE 222

#define DISPID_RDPSRAPI_PROP_DISCONNECTED_STRING 237

#define DISPID_RDPSRAPI_PROP_DISPIDVALUE 200

#define DISPID_RDPSRAPI_PROP_GROUP_NAME 233

#define DISPID_RDPSRAPI_PROP_ID 201

#define DISPID_RDPSRAPI_PROP_INVITATION 205

#define DISPID_RDPSRAPI_PROP_INVITATIONITEM 221

#define DISPID_RDPSRAPI_PROP_INVITATIONS 204

#define DISPID_RDPSRAPI_PROP_LOCAL_IP 227

#define DISPID_RDPSRAPI_PROP_LOCAL_PORT 226

#define DISPID_RDPSRAPI_PROP_PASSWORD 234

#define DISPID_RDPSRAPI_PROP_PEER_IP 229

#define DISPID_RDPSRAPI_PROP_PEER_PORT 228

#define DISPID_RDPSRAPI_PROP_PROTOCOL_TYPE 225

#define DISPID_RDPSRAPI_PROP_REASON 240

#define DISPID_RDPSRAPI_PROP_REMOTENAME 243

#define DISPID_RDPSRAPI_PROP_REVOKED 236

#define DISPID_RDPSRAPI_PROP_SESSION_COLORDEPTH 239

#define DISPID_RDPSRAPI_PROP_SESSION_PROPERTIES 202

#define DISPID_RDPSRAPI_PROP_SHARED 220

#define DISPID_RDPSRAPI_PROP_USESMARTSIZING 238

#define DISPID_RDPSRAPI_PROP_VIRTUAL_CHANNEL_GETFLAGS 208

#define DISPID_RDPSRAPI_PROP_VIRTUAL_CHANNEL_GETNAME 207

#define DISPID_RDPSRAPI_PROP_VIRTUAL_CHANNEL_GETPRIORITY 209

#define DISPID_RDPSRAPI_PROP_WINDOW_LIST 216

#define DISPID_RDPSRAPI_PROP_WINDOWID 210

#define DISPID_RDPSRAPI_PROP_WINDOWNAME 213

#define DISPID_RDPSRAPI_PROP_WINDOWSHARED 212

#define DISPID_RDPSRAPI_PROP_WNDFLAGS 224

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0001 {
    CTRL_LEVEL_INTERACTIVE=3,
    CTRL_LEVEL_INVALID=0,
    CTRL_LEVEL_MAX=3,
    CTRL_LEVEL_MIN=0,
    CTRL_LEVEL_NONE=1,
    CTRL_LEVEL_VIEW=2
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0001;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0002 {
    ATTENDEE_DISCONNECT_REASON_APP=0,
    ATTENDEE_DISCONNECT_REASON_CLI=2,
    ATTENDEE_DISCONNECT_REASON_ERR=1,
    ATTENDEE_DISCONNECT_REASON_MAX=2,
    ATTENDEE_DISCONNECT_REASON_MIN=0
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0002;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0003 {
    CHANNEL_PRIORITY_HI=2,
    CHANNEL_PRIORITY_LO=0,
    CHANNEL_PRIORITY_MED=1
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0003;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0004 {
    CHANNEL_FLAGS_LEGACY=1,
    CHANNEL_FLAGS_UNCOMPRESSED=2
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0004;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0005 {
    CHANNEL_ACCESS_ENUM_NONE=0,
    CHANNEL_ACCESS_ENUM_SENDRECEIVE=1
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0005;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0006 {
    CONST_ATTENDEE_ID_EVERYONE=409601,
    CONST_ATTENDEE_ID_HOST=0,
    CONST_CONN_INTERVAL=50,
    CONST_MAX_CHANNEL_MESSAGE_SIZE=1024,
    CONST_MAX_CHANNEL_NAME_LEN=8,
    CONST_MAX_LEGACY_CHANNEL_MESSAGE_SIZE=409600
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0006;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0007 {
    ATTENDEE_FLAGS_LOCAL=1
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0007;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0008 {
    WND_FLAG_PRIVILEGED=1
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0008;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0009 {
    APP_FLAG_PRIVILEGED=1
} __MIDL___MIDL_itf_rdpencomapi_0000_0001_0009;

typedef struct _IRDPSessionEvents _IRDPSessionEvents, *P_IRDPSessionEvents;

typedef struct _IRDPSessionEventsVtbl _IRDPSessionEventsVtbl, *P_IRDPSessionEventsVtbl;

struct _IRDPSessionEventsVtbl {
    HRESULT (* QueryInterface)(struct _IRDPSessionEvents *, IID *, void * *);
    ULONG (* AddRef)(struct _IRDPSessionEvents *);
    ULONG (* Release)(struct _IRDPSessionEvents *);
    HRESULT (* GetTypeInfoCount)(struct _IRDPSessionEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct _IRDPSessionEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct _IRDPSessionEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct _IRDPSessionEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct _IRDPSessionEvents {
    struct _IRDPSessionEventsVtbl * lpVtbl;
};

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0002 ATTENDEE_DISCONNECT_REASON;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0005 CHANNEL_ACCESS_ENUM;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0004 CHANNEL_FLAGS;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0003 CHANNEL_PRIORITY;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0001 CTRL_LEVEL;

typedef struct IRDPSRAPIApplication IRDPSRAPIApplication, *PIRDPSRAPIApplication;

typedef struct IRDPSRAPIApplicationVtbl IRDPSRAPIApplicationVtbl, *PIRDPSRAPIApplicationVtbl;

typedef struct IRDPSRAPIWindowList IRDPSRAPIWindowList, *PIRDPSRAPIWindowList;

typedef struct IRDPSRAPIWindowListVtbl IRDPSRAPIWindowListVtbl, *PIRDPSRAPIWindowListVtbl;

typedef struct IRDPSRAPIWindow IRDPSRAPIWindow, *PIRDPSRAPIWindow;

typedef struct IRDPSRAPIWindowVtbl IRDPSRAPIWindowVtbl, *PIRDPSRAPIWindowVtbl;

struct IRDPSRAPIApplication {
    struct IRDPSRAPIApplicationVtbl * lpVtbl;
};

struct IRDPSRAPIApplicationVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIApplication *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIApplication *);
    ULONG (* Release)(struct IRDPSRAPIApplication *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIApplication *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIApplication *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIApplication *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIApplication *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Windows)(struct IRDPSRAPIApplication *, struct IRDPSRAPIWindowList * *);
    HRESULT (* get_Id)(struct IRDPSRAPIApplication *, long *);
    HRESULT (* get_Shared)(struct IRDPSRAPIApplication *, VARIANT_BOOL *);
    HRESULT (* put_Shared)(struct IRDPSRAPIApplication *, VARIANT_BOOL);
    HRESULT (* get_Name)(struct IRDPSRAPIApplication *, BSTR *);
    HRESULT (* get_Flags)(struct IRDPSRAPIApplication *, ulong *);
};

struct IRDPSRAPIWindowVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIWindow *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIWindow *);
    ULONG (* Release)(struct IRDPSRAPIWindow *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIWindow *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIWindow *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIWindow *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIWindow *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Id)(struct IRDPSRAPIWindow *, long *);
    HRESULT (* get_Application)(struct IRDPSRAPIWindow *, struct IRDPSRAPIApplication * *);
    HRESULT (* get_Shared)(struct IRDPSRAPIWindow *, VARIANT_BOOL *);
    HRESULT (* put_Shared)(struct IRDPSRAPIWindow *, VARIANT_BOOL);
    HRESULT (* get_Name)(struct IRDPSRAPIWindow *, BSTR *);
    HRESULT (* Show)(struct IRDPSRAPIWindow *);
    HRESULT (* get_Flags)(struct IRDPSRAPIWindow *, ulong *);
};

struct IRDPSRAPIWindow {
    struct IRDPSRAPIWindowVtbl * lpVtbl;
};

struct IRDPSRAPIWindowList {
    struct IRDPSRAPIWindowListVtbl * lpVtbl;
};

struct IRDPSRAPIWindowListVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIWindowList *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIWindowList *);
    ULONG (* Release)(struct IRDPSRAPIWindowList *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIWindowList *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIWindowList *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIWindowList *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIWindowList *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get__NewEnum)(struct IRDPSRAPIWindowList *, struct IUnknown * *);
    HRESULT (* get_Item)(struct IRDPSRAPIWindowList *, long, struct IRDPSRAPIWindow * *);
};

typedef struct IRDPSRAPIApplicationFilter IRDPSRAPIApplicationFilter, *PIRDPSRAPIApplicationFilter;

typedef struct IRDPSRAPIApplicationFilterVtbl IRDPSRAPIApplicationFilterVtbl, *PIRDPSRAPIApplicationFilterVtbl;

typedef struct IRDPSRAPIApplicationList IRDPSRAPIApplicationList, *PIRDPSRAPIApplicationList;

typedef struct IRDPSRAPIApplicationListVtbl IRDPSRAPIApplicationListVtbl, *PIRDPSRAPIApplicationListVtbl;

struct IRDPSRAPIApplicationListVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIApplicationList *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIApplicationList *);
    ULONG (* Release)(struct IRDPSRAPIApplicationList *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIApplicationList *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIApplicationList *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIApplicationList *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIApplicationList *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get__NewEnum)(struct IRDPSRAPIApplicationList *, struct IUnknown * *);
    HRESULT (* get_Item)(struct IRDPSRAPIApplicationList *, long, struct IRDPSRAPIApplication * *);
};

struct IRDPSRAPIApplicationList {
    struct IRDPSRAPIApplicationListVtbl * lpVtbl;
};

struct IRDPSRAPIApplicationFilterVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIApplicationFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIApplicationFilter *);
    ULONG (* Release)(struct IRDPSRAPIApplicationFilter *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIApplicationFilter *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIApplicationFilter *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIApplicationFilter *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIApplicationFilter *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Applications)(struct IRDPSRAPIApplicationFilter *, struct IRDPSRAPIApplicationList * *);
    HRESULT (* get_Windows)(struct IRDPSRAPIApplicationFilter *, struct IRDPSRAPIWindowList * *);
    HRESULT (* get_Enabled)(struct IRDPSRAPIApplicationFilter *, VARIANT_BOOL *);
    HRESULT (* put_Enabled)(struct IRDPSRAPIApplicationFilter *, VARIANT_BOOL);
};

struct IRDPSRAPIApplicationFilter {
    struct IRDPSRAPIApplicationFilterVtbl * lpVtbl;
};

typedef struct IRDPSRAPIAttendee IRDPSRAPIAttendee, *PIRDPSRAPIAttendee;

typedef struct IRDPSRAPIAttendeeVtbl IRDPSRAPIAttendeeVtbl, *PIRDPSRAPIAttendeeVtbl;

typedef struct IRDPSRAPIInvitation IRDPSRAPIInvitation, *PIRDPSRAPIInvitation;

typedef struct IRDPSRAPIInvitationVtbl IRDPSRAPIInvitationVtbl, *PIRDPSRAPIInvitationVtbl;

struct IRDPSRAPIInvitation {
    struct IRDPSRAPIInvitationVtbl * lpVtbl;
};

struct IRDPSRAPIAttendee {
    struct IRDPSRAPIAttendeeVtbl * lpVtbl;
};

struct IRDPSRAPIAttendeeVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIAttendee *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIAttendee *);
    ULONG (* Release)(struct IRDPSRAPIAttendee *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIAttendee *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIAttendee *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIAttendee *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIAttendee *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Id)(struct IRDPSRAPIAttendee *, long *);
    HRESULT (* get_RemoteName)(struct IRDPSRAPIAttendee *, BSTR *);
    HRESULT (* get_ControlLevel)(struct IRDPSRAPIAttendee *, CTRL_LEVEL *);
    HRESULT (* put_ControlLevel)(struct IRDPSRAPIAttendee *, CTRL_LEVEL);
    HRESULT (* get_Invitation)(struct IRDPSRAPIAttendee *, struct IRDPSRAPIInvitation * *);
    HRESULT (* TerminateConnection)(struct IRDPSRAPIAttendee *);
    HRESULT (* get_Flags)(struct IRDPSRAPIAttendee *, long *);
    HRESULT (* get_ConnectivityInfo)(struct IRDPSRAPIAttendee *, struct IUnknown * *);
};

struct IRDPSRAPIInvitationVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIInvitation *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIInvitation *);
    ULONG (* Release)(struct IRDPSRAPIInvitation *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIInvitation *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIInvitation *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIInvitation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIInvitation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_ConnectionString)(struct IRDPSRAPIInvitation *, BSTR *);
    HRESULT (* get_GroupName)(struct IRDPSRAPIInvitation *, BSTR *);
    HRESULT (* get_Password)(struct IRDPSRAPIInvitation *, BSTR *);
    HRESULT (* get_AttendeeLimit)(struct IRDPSRAPIInvitation *, long *);
    HRESULT (* put_AttendeeLimit)(struct IRDPSRAPIInvitation *, long);
    HRESULT (* get_Revoked)(struct IRDPSRAPIInvitation *, VARIANT_BOOL *);
    HRESULT (* put_Revoked)(struct IRDPSRAPIInvitation *, VARIANT_BOOL);
};

typedef struct IRDPSRAPIAttendeeDisconnectInfo IRDPSRAPIAttendeeDisconnectInfo, *PIRDPSRAPIAttendeeDisconnectInfo;

typedef struct IRDPSRAPIAttendeeDisconnectInfoVtbl IRDPSRAPIAttendeeDisconnectInfoVtbl, *PIRDPSRAPIAttendeeDisconnectInfoVtbl;

struct IRDPSRAPIAttendeeDisconnectInfoVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIAttendeeDisconnectInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIAttendeeDisconnectInfo *);
    ULONG (* Release)(struct IRDPSRAPIAttendeeDisconnectInfo *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIAttendeeDisconnectInfo *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIAttendeeDisconnectInfo *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIAttendeeDisconnectInfo *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIAttendeeDisconnectInfo *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Attendee)(struct IRDPSRAPIAttendeeDisconnectInfo *, struct IRDPSRAPIAttendee * *);
    HRESULT (* get_Reason)(struct IRDPSRAPIAttendeeDisconnectInfo *, ATTENDEE_DISCONNECT_REASON *);
    HRESULT (* get_Code)(struct IRDPSRAPIAttendeeDisconnectInfo *, long *);
};

struct IRDPSRAPIAttendeeDisconnectInfo {
    struct IRDPSRAPIAttendeeDisconnectInfoVtbl * lpVtbl;
};

typedef struct IRDPSRAPIAttendeeManager IRDPSRAPIAttendeeManager, *PIRDPSRAPIAttendeeManager;

typedef struct IRDPSRAPIAttendeeManagerVtbl IRDPSRAPIAttendeeManagerVtbl, *PIRDPSRAPIAttendeeManagerVtbl;

struct IRDPSRAPIAttendeeManager {
    struct IRDPSRAPIAttendeeManagerVtbl * lpVtbl;
};

struct IRDPSRAPIAttendeeManagerVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIAttendeeManager *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIAttendeeManager *);
    ULONG (* Release)(struct IRDPSRAPIAttendeeManager *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIAttendeeManager *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIAttendeeManager *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIAttendeeManager *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIAttendeeManager *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get__NewEnum)(struct IRDPSRAPIAttendeeManager *, struct IUnknown * *);
    HRESULT (* get_Item)(struct IRDPSRAPIAttendeeManager *, long, struct IRDPSRAPIAttendee * *);
};

typedef struct IRDPSRAPIDebug IRDPSRAPIDebug, *PIRDPSRAPIDebug;

typedef struct IRDPSRAPIDebugVtbl IRDPSRAPIDebugVtbl, *PIRDPSRAPIDebugVtbl;

struct IRDPSRAPIDebugVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIDebug *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIDebug *);
    ULONG (* Release)(struct IRDPSRAPIDebug *);
    HRESULT (* put_CLXCmdLine)(struct IRDPSRAPIDebug *, BSTR);
    HRESULT (* get_CLXCmdLine)(struct IRDPSRAPIDebug *, BSTR *);
};

struct IRDPSRAPIDebug {
    struct IRDPSRAPIDebugVtbl * lpVtbl;
};

typedef struct IRDPSRAPIInvitationManager IRDPSRAPIInvitationManager, *PIRDPSRAPIInvitationManager;

typedef struct IRDPSRAPIInvitationManagerVtbl IRDPSRAPIInvitationManagerVtbl, *PIRDPSRAPIInvitationManagerVtbl;

struct IRDPSRAPIInvitationManagerVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIInvitationManager *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIInvitationManager *);
    ULONG (* Release)(struct IRDPSRAPIInvitationManager *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIInvitationManager *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIInvitationManager *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIInvitationManager *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIInvitationManager *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get__NewEnum)(struct IRDPSRAPIInvitationManager *, struct IUnknown * *);
    HRESULT (* get_Item)(struct IRDPSRAPIInvitationManager *, VARIANT, struct IRDPSRAPIInvitation * *);
    HRESULT (* get_Count)(struct IRDPSRAPIInvitationManager *, long *);
    HRESULT (* CreateInvitation)(struct IRDPSRAPIInvitationManager *, BSTR, BSTR, BSTR, long, struct IRDPSRAPIInvitation * *);
};

struct IRDPSRAPIInvitationManager {
    struct IRDPSRAPIInvitationManagerVtbl * lpVtbl;
};

typedef struct IRDPSRAPISessionProperties IRDPSRAPISessionProperties, *PIRDPSRAPISessionProperties;

typedef struct IRDPSRAPISessionPropertiesVtbl IRDPSRAPISessionPropertiesVtbl, *PIRDPSRAPISessionPropertiesVtbl;

struct IRDPSRAPISessionPropertiesVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPISessionProperties *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPISessionProperties *);
    ULONG (* Release)(struct IRDPSRAPISessionProperties *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPISessionProperties *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPISessionProperties *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPISessionProperties *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPISessionProperties *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Property)(struct IRDPSRAPISessionProperties *, BSTR, VARIANT *);
    HRESULT (* put_Property)(struct IRDPSRAPISessionProperties *, BSTR, VARIANT);
};

struct IRDPSRAPISessionProperties {
    struct IRDPSRAPISessionPropertiesVtbl * lpVtbl;
};

typedef struct IRDPSRAPISharingSession IRDPSRAPISharingSession, *PIRDPSRAPISharingSession;

typedef struct IRDPSRAPISharingSessionVtbl IRDPSRAPISharingSessionVtbl, *PIRDPSRAPISharingSessionVtbl;

typedef struct IRDPSRAPIVirtualChannelManager IRDPSRAPIVirtualChannelManager, *PIRDPSRAPIVirtualChannelManager;

typedef struct IRDPSRAPIVirtualChannelManagerVtbl IRDPSRAPIVirtualChannelManagerVtbl, *PIRDPSRAPIVirtualChannelManagerVtbl;

typedef struct IRDPSRAPIVirtualChannel IRDPSRAPIVirtualChannel, *PIRDPSRAPIVirtualChannel;

typedef struct IRDPSRAPIVirtualChannelVtbl IRDPSRAPIVirtualChannelVtbl, *PIRDPSRAPIVirtualChannelVtbl;

struct IRDPSRAPISharingSession {
    struct IRDPSRAPISharingSessionVtbl * lpVtbl;
};

struct IRDPSRAPISharingSessionVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPISharingSession *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPISharingSession *);
    ULONG (* Release)(struct IRDPSRAPISharingSession *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPISharingSession *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPISharingSession *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPISharingSession *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPISharingSession *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* Open)(struct IRDPSRAPISharingSession *);
    HRESULT (* Close)(struct IRDPSRAPISharingSession *);
    HRESULT (* put_ColorDepth)(struct IRDPSRAPISharingSession *, long);
    HRESULT (* get_ColorDepth)(struct IRDPSRAPISharingSession *, long *);
    HRESULT (* get_Properties)(struct IRDPSRAPISharingSession *, struct IRDPSRAPISessionProperties * *);
    HRESULT (* get_Attendees)(struct IRDPSRAPISharingSession *, struct IRDPSRAPIAttendeeManager * *);
    HRESULT (* get_Invitations)(struct IRDPSRAPISharingSession *, struct IRDPSRAPIInvitationManager * *);
    HRESULT (* get_ApplicationFilter)(struct IRDPSRAPISharingSession *, struct IRDPSRAPIApplicationFilter * *);
    HRESULT (* get_VirtualChannelManager)(struct IRDPSRAPISharingSession *, struct IRDPSRAPIVirtualChannelManager * *);
    HRESULT (* Pause)(struct IRDPSRAPISharingSession *);
    HRESULT (* Resume)(struct IRDPSRAPISharingSession *);
    HRESULT (* ConnectToClient)(struct IRDPSRAPISharingSession *, BSTR);
    HRESULT (* SetDesktopSharedRect)(struct IRDPSRAPISharingSession *, long, long, long, long);
    HRESULT (* GetDesktopSharedRect)(struct IRDPSRAPISharingSession *, long *, long *, long *, long *);
};

struct IRDPSRAPIVirtualChannelManager {
    struct IRDPSRAPIVirtualChannelManagerVtbl * lpVtbl;
};

struct IRDPSRAPIVirtualChannel {
    struct IRDPSRAPIVirtualChannelVtbl * lpVtbl;
};

struct IRDPSRAPIVirtualChannelVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIVirtualChannel *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIVirtualChannel *);
    ULONG (* Release)(struct IRDPSRAPIVirtualChannel *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIVirtualChannel *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIVirtualChannel *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIVirtualChannel *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIVirtualChannel *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* SendData)(struct IRDPSRAPIVirtualChannel *, BSTR, long, ulong);
    HRESULT (* SetAccess)(struct IRDPSRAPIVirtualChannel *, long, CHANNEL_ACCESS_ENUM);
    HRESULT (* get_Name)(struct IRDPSRAPIVirtualChannel *, BSTR *);
    HRESULT (* get_Flags)(struct IRDPSRAPIVirtualChannel *, long *);
    HRESULT (* get_Priority)(struct IRDPSRAPIVirtualChannel *, CHANNEL_PRIORITY *);
};

struct IRDPSRAPIVirtualChannelManagerVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIVirtualChannelManager *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIVirtualChannelManager *);
    ULONG (* Release)(struct IRDPSRAPIVirtualChannelManager *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIVirtualChannelManager *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIVirtualChannelManager *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIVirtualChannelManager *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIVirtualChannelManager *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get__NewEnum)(struct IRDPSRAPIVirtualChannelManager *, struct IUnknown * *);
    HRESULT (* get_Item)(struct IRDPSRAPIVirtualChannelManager *, VARIANT, struct IRDPSRAPIVirtualChannel * *);
    HRESULT (* CreateVirtualChannel)(struct IRDPSRAPIVirtualChannelManager *, BSTR, CHANNEL_PRIORITY, ulong, struct IRDPSRAPIVirtualChannel * *);
};

typedef struct IRDPSRAPITcpConnectionInfo IRDPSRAPITcpConnectionInfo, *PIRDPSRAPITcpConnectionInfo;

typedef struct IRDPSRAPITcpConnectionInfoVtbl IRDPSRAPITcpConnectionInfoVtbl, *PIRDPSRAPITcpConnectionInfoVtbl;

struct IRDPSRAPITcpConnectionInfoVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPITcpConnectionInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPITcpConnectionInfo *);
    ULONG (* Release)(struct IRDPSRAPITcpConnectionInfo *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPITcpConnectionInfo *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPITcpConnectionInfo *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPITcpConnectionInfo *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPITcpConnectionInfo *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Protocol)(struct IRDPSRAPITcpConnectionInfo *, long *);
    HRESULT (* get_LocalPort)(struct IRDPSRAPITcpConnectionInfo *, long *);
    HRESULT (* get_LocalIP)(struct IRDPSRAPITcpConnectionInfo *, BSTR *);
    HRESULT (* get_PeerPort)(struct IRDPSRAPITcpConnectionInfo *, long *);
    HRESULT (* get_PeerIP)(struct IRDPSRAPITcpConnectionInfo *, BSTR *);
};

struct IRDPSRAPITcpConnectionInfo {
    struct IRDPSRAPITcpConnectionInfoVtbl * lpVtbl;
};

typedef struct IRDPSRAPIViewer IRDPSRAPIViewer, *PIRDPSRAPIViewer;

typedef struct IRDPSRAPIViewerVtbl IRDPSRAPIViewerVtbl, *PIRDPSRAPIViewerVtbl;

struct IRDPSRAPIViewerVtbl {
    HRESULT (* QueryInterface)(struct IRDPSRAPIViewer *, IID *, void * *);
    ULONG (* AddRef)(struct IRDPSRAPIViewer *);
    ULONG (* Release)(struct IRDPSRAPIViewer *);
    HRESULT (* GetTypeInfoCount)(struct IRDPSRAPIViewer *, UINT *);
    HRESULT (* GetTypeInfo)(struct IRDPSRAPIViewer *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IRDPSRAPIViewer *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IRDPSRAPIViewer *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* Connect)(struct IRDPSRAPIViewer *, BSTR, BSTR, BSTR);
    HRESULT (* Disconnect)(struct IRDPSRAPIViewer *);
    HRESULT (* get_Attendees)(struct IRDPSRAPIViewer *, struct IRDPSRAPIAttendeeManager * *);
    HRESULT (* get_Invitations)(struct IRDPSRAPIViewer *, struct IRDPSRAPIInvitationManager * *);
    HRESULT (* get_ApplicationFilter)(struct IRDPSRAPIViewer *, struct IRDPSRAPIApplicationFilter * *);
    HRESULT (* get_VirtualChannelManager)(struct IRDPSRAPIViewer *, struct IRDPSRAPIVirtualChannelManager * *);
    HRESULT (* put_SmartSizing)(struct IRDPSRAPIViewer *, VARIANT_BOOL);
    HRESULT (* get_SmartSizing)(struct IRDPSRAPIViewer *, VARIANT_BOOL *);
    HRESULT (* RequestControl)(struct IRDPSRAPIViewer *, CTRL_LEVEL);
    HRESULT (* put_DisconnectedText)(struct IRDPSRAPIViewer *, BSTR);
    HRESULT (* get_DisconnectedText)(struct IRDPSRAPIViewer *, BSTR *);
    HRESULT (* RequestColorDepthChange)(struct IRDPSRAPIViewer *, long);
    HRESULT (* get_Properties)(struct IRDPSRAPIViewer *, struct IRDPSRAPISessionProperties * *);
    HRESULT (* StartReverseConnectListener)(struct IRDPSRAPIViewer *, BSTR, BSTR, BSTR, BSTR *);
};

struct IRDPSRAPIViewer {
    struct IRDPSRAPIViewerVtbl * lpVtbl;
};

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0007 RDPENCOMAPI_ATTENDEE_FLAGS;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0006 RDPENCOMAPI_CONSTANTS;

typedef struct RDPSession RDPSession, *PRDPSession;

struct RDPSession {
};

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0009 RDPSRAPI_APP_FLAGS;

typedef enum __MIDL___MIDL_itf_rdpencomapi_0000_0001_0008 RDPSRAPI_WND_FLAGS;

typedef struct RDPSRAPIApplication RDPSRAPIApplication, *PRDPSRAPIApplication;

struct RDPSRAPIApplication {
};

typedef struct RDPSRAPIApplicationFilter RDPSRAPIApplicationFilter, *PRDPSRAPIApplicationFilter;

struct RDPSRAPIApplicationFilter {
};

typedef struct RDPSRAPIApplicationList RDPSRAPIApplicationList, *PRDPSRAPIApplicationList;

struct RDPSRAPIApplicationList {
};

typedef struct RDPSRAPIAttendee RDPSRAPIAttendee, *PRDPSRAPIAttendee;

struct RDPSRAPIAttendee {
};

typedef struct RDPSRAPIAttendeeDisconnectInfo RDPSRAPIAttendeeDisconnectInfo, *PRDPSRAPIAttendeeDisconnectInfo;

struct RDPSRAPIAttendeeDisconnectInfo {
};

typedef struct RDPSRAPIAttendeeManager RDPSRAPIAttendeeManager, *PRDPSRAPIAttendeeManager;

struct RDPSRAPIAttendeeManager {
};

typedef struct RDPSRAPIInvitation RDPSRAPIInvitation, *PRDPSRAPIInvitation;

struct RDPSRAPIInvitation {
};

typedef struct RDPSRAPIInvitationManager RDPSRAPIInvitationManager, *PRDPSRAPIInvitationManager;

struct RDPSRAPIInvitationManager {
};

typedef struct RDPSRAPISessionProperties RDPSRAPISessionProperties, *PRDPSRAPISessionProperties;

struct RDPSRAPISessionProperties {
};

typedef struct RDPSRAPITcpConnectionInfo RDPSRAPITcpConnectionInfo, *PRDPSRAPITcpConnectionInfo;

struct RDPSRAPITcpConnectionInfo {
};

typedef struct RDPSRAPIWindow RDPSRAPIWindow, *PRDPSRAPIWindow;

struct RDPSRAPIWindow {
};

typedef struct RDPSRAPIWindowList RDPSRAPIWindowList, *PRDPSRAPIWindowList;

struct RDPSRAPIWindowList {
};

typedef struct RDPViewer RDPViewer, *PRDPViewer;

struct RDPViewer {
};

#define MAX_NUM_REASONS 256

#define MAX_REASON_BUGID_LEN 32

#define MAX_REASON_COMMENT_LEN 512

#define MAX_REASON_DESC_LEN 256

#define MAX_REASON_NAME_LEN 64

#define PCLEANUI 2214592512

#define PDIRTYUI 2281701376

#define POLICY_SHOWREASONUI_ALWAYS 1

#define POLICY_SHOWREASONUI_NEVER 0

#define POLICY_SHOWREASONUI_SERVERONLY 3

#define POLICY_SHOWREASONUI_WORKSTATIONONLY 2

#define SHTDN_REASON_FLAG_CLEAN_UI 67108864

#define SHTDN_REASON_FLAG_COMMENT_REQUIRED 16777216

#define SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED 33554432

#define SHTDN_REASON_FLAG_DIRTY_UI 134217728

#define SHTDN_REASON_FLAG_PLANNED 2147483648

#define SHTDN_REASON_FLAG_USER_DEFINED 1073741824

#define SHTDN_REASON_LEGACY_API 2147942400

#define SHTDN_REASON_MAJOR_APPLICATION 262144

#define SHTDN_REASON_MAJOR_HARDWARE 65536

#define SHTDN_REASON_MAJOR_LEGACY_API 458752

#define SHTDN_REASON_MAJOR_NONE 0

#define SHTDN_REASON_MAJOR_OPERATINGSYSTEM 131072

#define SHTDN_REASON_MAJOR_OTHER 0

#define SHTDN_REASON_MAJOR_POWER 393216

#define SHTDN_REASON_MAJOR_SOFTWARE 196608

#define SHTDN_REASON_MAJOR_SYSTEM 327680

#define SHTDN_REASON_MINOR_BLUESCREEN 15

#define SHTDN_REASON_MINOR_CORDUNPLUGGED 11

#define SHTDN_REASON_MINOR_DC_DEMOTION 34

#define SHTDN_REASON_MINOR_DC_PROMOTION 33

#define SHTDN_REASON_MINOR_DISK 7

#define SHTDN_REASON_MINOR_ENVIRONMENT 12

#define SHTDN_REASON_MINOR_HARDWARE_DRIVER 13

#define SHTDN_REASON_MINOR_HOTFIX 17

#define SHTDN_REASON_MINOR_HOTFIX_UNINSTALL 23

#define SHTDN_REASON_MINOR_HUNG 5

#define SHTDN_REASON_MINOR_INSTALLATION 2

#define SHTDN_REASON_MINOR_MAINTENANCE 1

#define SHTDN_REASON_MINOR_MMC 25

#define SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY 20

#define SHTDN_REASON_MINOR_NETWORKCARD 9

#define SHTDN_REASON_MINOR_NONE 255

#define SHTDN_REASON_MINOR_OTHER 0

#define SHTDN_REASON_MINOR_OTHERDRIVER 14

#define SHTDN_REASON_MINOR_POWER_SUPPLY 10

#define SHTDN_REASON_MINOR_PROCESSOR 8

#define SHTDN_REASON_MINOR_RECONFIG 4

#define SHTDN_REASON_MINOR_SECURITY 19

#define SHTDN_REASON_MINOR_SECURITYFIX 18

#define SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL 24

#define SHTDN_REASON_MINOR_SERVICEPACK 16

#define SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL 22

#define SHTDN_REASON_MINOR_SYSTEMRESTORE 26

#define SHTDN_REASON_MINOR_TERMSRV 32

#define SHTDN_REASON_MINOR_UNSTABLE 6

#define SHTDN_REASON_MINOR_UPGRADE 3

#define SHTDN_REASON_MINOR_WMI 21

#define SHTDN_REASON_UNKNOWN 255

#define SHTDN_REASON_VALID_BIT_MASK 3238002687

#define SHUTDOWN_TYPE_LEN 32

#define SNAPSHOT_POLICY_ALWAYS 1

#define SNAPSHOT_POLICY_NEVER 0

#define SNAPSHOT_POLICY_UNPLANNED 2

#define UCLEANUI 67108864

#define UDIRTYUI 134217728

#define CLRES_VERSION_V1_00 256

#define RESUTIL_PROPITEM_READ_ONLY 1

#define RESUTIL_PROPITEM_REQUIRED 2

#define RESUTIL_PROPITEM_SIGNED 4

typedef enum _CLUSTER_ROLE {
    ClusterRoleDHCP=0,
    ClusterRoleDTC=1,
    ClusterRoleFileServer=2,
    ClusterRoleGenericApplication=3,
    ClusterRoleGenericScript=4,
    ClusterRoleGenericService=5,
    ClusterRoleISCSINameServer=6,
    ClusterRoleMSMQ=7,
    ClusterRoleNFS=8,
    ClusterRolePrintServer=9,
    ClusterRoleStandAloneNamespaceServer=10,
    ClusterRoleVolumeShadowCopyServiceTask=11,
    ClusterRoleWINS=12
} _CLUSTER_ROLE;

typedef enum _CLUSTER_ROLE_STATE {
    ClusterRoleClustered=1,
    ClusterRoleUnclustered=2,
    ClusterRoleUnknown=0
} _CLUSTER_ROLE_STATE;

typedef enum _RESOURCE_EXIT_STATE {
    ResourceExitStateContinue=0,
    ResourceExitStateMax=2,
    ResourceExitStateTerminate=1
} _RESOURCE_EXIT_STATE;

typedef union _union_7104 _union_7104, *P_union_7104;

typedef struct CLRES_V1_FUNCTIONS CLRES_V1_FUNCTIONS, *PCLRES_V1_FUNCTIONS;

typedef PVOID RESID;

typedef HANDLE RESOURCE_HANDLE;

typedef RESID (* POPEN_ROUTINE)(LPCWSTR, HKEY, RESOURCE_HANDLE);

typedef void (* PCLOSE_ROUTINE)(RESID);

typedef DWORD (* PONLINE_ROUTINE)(RESID, LPHANDLE);

typedef DWORD (* POFFLINE_ROUTINE)(RESID);

typedef void (* PTERMINATE_ROUTINE)(RESID);

typedef BOOL (* PLOOKS_ALIVE_ROUTINE)(RESID);

typedef BOOL (* PIS_ALIVE_ROUTINE)(RESID);

typedef void (* PQUORUM_RESOURCE_LOST)(RESOURCE_HANDLE);

typedef DWORD (* PARBITRATE_ROUTINE)(RESID, PQUORUM_RESOURCE_LOST);

typedef DWORD (* PRELEASE_ROUTINE)(RESID);

typedef DWORD (* PRESOURCE_CONTROL_ROUTINE)(RESID, DWORD, PVOID, DWORD, PVOID, DWORD, LPDWORD);

typedef DWORD (* PRESOURCE_TYPE_CONTROL_ROUTINE)(LPCWSTR, DWORD, PVOID, DWORD, PVOID, DWORD, LPDWORD);

struct CLRES_V1_FUNCTIONS {
    POPEN_ROUTINE Open;
    PCLOSE_ROUTINE Close;
    PONLINE_ROUTINE Online;
    POFFLINE_ROUTINE Offline;
    PTERMINATE_ROUTINE Terminate;
    PLOOKS_ALIVE_ROUTINE LooksAlive;
    PIS_ALIVE_ROUTINE IsAlive;
    PARBITRATE_ROUTINE Arbitrate;
    PRELEASE_ROUTINE Release;
    PRESOURCE_CONTROL_ROUTINE ResourceControl;
    PRESOURCE_TYPE_CONTROL_ROUTINE ResourceTypeControl;
};

union _union_7104 {
    struct CLRES_V1_FUNCTIONS V1Functions;
};

typedef union _union_7109 _union_7109, *P_union_7109;

typedef struct RESUTIL_LARGEINT_DATA RESUTIL_LARGEINT_DATA, *PRESUTIL_LARGEINT_DATA;

typedef struct RESUTIL_ULARGEINT_DATA RESUTIL_ULARGEINT_DATA, *PRESUTIL_ULARGEINT_DATA;

typedef struct RESUTIL_FILETIME_DATA RESUTIL_FILETIME_DATA, *PRESUTIL_FILETIME_DATA;

struct RESUTIL_LARGEINT_DATA {
    LARGE_INTEGER Default;
    LARGE_INTEGER Minimum;
    LARGE_INTEGER Maximum;
};

struct RESUTIL_FILETIME_DATA {
    FILETIME Default;
    FILETIME Minimum;
    FILETIME Maximum;
};

struct RESUTIL_ULARGEINT_DATA {
    ULARGE_INTEGER Default;
    ULARGE_INTEGER Minimum;
    ULARGE_INTEGER Maximum;
};

union _union_7109 {
    DWORD_PTR DefaultPtr;
    DWORD Default;
    LPVOID lpDefault;
    PRESUTIL_LARGEINT_DATA LargeIntData;
    PRESUTIL_ULARGEINT_DATA ULargeIntData;
    PRESUTIL_FILETIME_DATA FileTimeData;
};

typedef struct CLRES_FUNCTION_TABLE CLRES_FUNCTION_TABLE, *PCLRES_FUNCTION_TABLE;

struct CLRES_FUNCTION_TABLE {
    DWORD TableSize;
    DWORD Version;
    union _union_7104 u;
};

typedef struct CLUS_WORKER CLUS_WORKER, *PCLUS_WORKER;

struct CLUS_WORKER {
    HANDLE hThread;
    BOOL Terminate;
};

typedef enum _CLUSTER_ROLE CLUSTER_ROLE;

typedef enum _CLUSTER_ROLE_STATE CLUSTER_ROLE_STATE;

typedef enum LOG_LEVEL {
    LOG_ERROR=2,
    LOG_INFORMATION=0,
    LOG_SEVERE=3,
    LOG_WARNING=1
} LOG_LEVEL;

typedef DWORD (* LPRESOURCE_CALLBACK)(HRESOURCE, HRESOURCE, PVOID);

typedef DWORD (* LPRESOURCE_CALLBACK_EX)(HCLUSTER, HRESOURCE, HRESOURCE, PVOID);

typedef struct MONITOR_STATE MONITOR_STATE, *PMONITOR_STATE;

typedef enum RESOURCE_MONITOR_STATE {
    RmonArbitrateResource=10,
    RmonDeadlocked=15,
    RmonDeletingResource=7,
    RmonIdle=1,
    RmonInitializing=0,
    RmonInitializingResource=3,
    RmonIsAlivePoll=8,
    RmonLooksAlivePoll=9,
    RmonOfflineResource=5,
    RmonOnlineResource=4,
    RmonReleaseResource=11,
    RmonResourceControl=12,
    RmonResourceTypeControl=13,
    RmonShutdownResource=6,
    RmonStartingResource=2,
    RmonTerminateResource=14
} RESOURCE_MONITOR_STATE;

struct MONITOR_STATE {
    LARGE_INTEGER LastUpdate;
    enum RESOURCE_MONITOR_STATE State;
    HANDLE ActiveResource;
    BOOL ResmonStop;
};

typedef DWORD (* PWORKER_START_ROUTINE)(PCLUS_WORKER, LPVOID);

typedef DWORD (* PCLUSAPI_CLUS_WORKER_CREATE)(PCLUS_WORKER, PWORKER_START_ROUTINE, PVOID);

typedef void (* PCLUSAPI_CLUS_WORKER_TERMINATE)(PCLUS_WORKER);

typedef BOOL (* PCLUSAPIClusWorkerCheckTerminate)(PCLUS_WORKER);

typedef DWORD (* PCLUSTER_CLEAR_BACKUP_STATE_FOR_SHARED_VOLUME)(LPCWSTR);

typedef BOOL (* PCLUSTER_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT)(LPCWSTR, LPWSTR, DWORD);

typedef BOOL (* PCLUSTER_GET_VOLUME_PATH_NAME)(LPCWSTR, LPWSTR, DWORD);

typedef BOOL (* PCLUSTER_IS_PATH_ON_SHARED_VOLUME)(LPCWSTR);

typedef DWORD (* PCLUSTER_PREPARE_SHARED_VOLUME_FOR_BACKUP)(LPCWSTR, LPWSTR, LPDWORD, LPWSTR, LPDWORD);

typedef void (* PLOG_EVENT_ROUTINE)(RESOURCE_HANDLE, enum LOG_LEVEL, LPCWSTR, ...);

typedef enum LOG_LEVEL * PLOG_LEVEL;

typedef struct RESOURCE_STATUS RESOURCE_STATUS, *PRESOURCE_STATUS;

struct RESOURCE_STATUS {
    enum CLUSTER_RESOURCE_STATE ResourceState;
    DWORD CheckPoint;
    DWORD WaitHint;
    HANDLE EventHandle;
};

typedef struct RESUTIL_PROPERTY_ITEM RESUTIL_PROPERTY_ITEM, *PRESUTIL_PROPERTY_ITEM;

typedef DWORD (* PRESUTIL_ADD_UNKNOWN_PROPERTIES)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, DWORD, LPDWORD, LPDWORD);

struct RESUTIL_PROPERTY_ITEM {
    LPWSTR Name;
    LPWSTR KeyName;
    DWORD Format;
    union _union_7109 u;
    DWORD Minimum;
    DWORD Maximum;
    DWORD Flags;
    DWORD Offset;
};

typedef DWORD (* PRESUTIL_CREATE_DIRECTORY_TREE)(LPCWSTR);

typedef DWORD (* PRESUTIL_DUP_PARAMETER_BLOCK)(LPBYTE, LPBYTE, PRESUTIL_PROPERTY_ITEM);

typedef PWSTR (* PRESUTIL_DUP_STRING)(LPCWSTR);

typedef DWORD (* PRESUTIL_ENUM_PRIVATE_PROPERTIES)(HKEY, LPWSTR, DWORD, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_ENUM_PROPERTIES)(PRESUTIL_PROPERTY_ITEM, LPWSTR, DWORD, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_ENUM_RESOURCES)(HRESOURCE, LPCWSTR, LPRESOURCE_CALLBACK, PVOID);

typedef DWORD (* PRESUTIL_ENUM_RESOURCES_EX)(HCLUSTER, HRESOURCE, LPCWSTR, LPRESOURCE_CALLBACK_EX, PVOID);

typedef LPWSTR (* PRESUTIL_EXPAND_ENVIRONMENT_STRINGS)(LPCWSTR);

typedef DWORD (* PRESUTIL_FIND_BINARY_PROPERTY)(PVOID, DWORD, LPCWSTR, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_FIND_DEPENDENT_DISK_RESOURCE_DRIVE_LETTER)(HCLUSTER, HRESOURCE, LPWSTR, DWORD *);

typedef DWORD (* PRESUTIL_FIND_DWORD_PROPERTY)(PVOID, DWORD, LPCWSTR, LPDWORD);

typedef DWORD (* PRESUTIL_FIND_EXPAND_SZ_PROPERTY)(PVOID, DWORD, LPCWSTR, LPWSTR *);

typedef DWORD (* PRESUTIL_FIND_EXPANDED_SZ_PROPERTY)(PVOID, DWORD, LPCWSTR, LPWSTR *);

typedef struct _FILETIME * LPFILETIME;

typedef DWORD (* PRESUTIL_FIND_FILETIME_PROPERTY)(PVOID, DWORD, LPCWSTR, LPFILETIME);

typedef long * LPLONG;

typedef DWORD (* PRESUTIL_FIND_LONG_PROPERTY)(PVOID, DWORD, LPCWSTR, LPLONG);

typedef DWORD (* PRESUTIL_FIND_MULTI_SZ_PROPERTY)(PVOID, DWORD, LPCWSTR, LPWSTR *, LPDWORD);

typedef DWORD (* PRESUTIL_FIND_SZ_PROPERTY)(PVOID, DWORD, LPCWSTR, LPWSTR *);

typedef DWORD (* PRESUTIL_FREE_ENVIRONMENT)(LPVOID);

typedef void (* PRESUTIL_FREE_PARAMETER_BLOCK)(LPBYTE, LPBYTE, PRESUTIL_PROPERTY_ITEM);

typedef DWORD (* PRESUTIL_GET_ALL_PROPERTIES)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, DWORD, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_GET_BINARY_PROPERTY)(LPBYTE *, LPDWORD, PCLUSPROP_BINARY, LPBYTE, DWORD, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_BINARY_VALUE)(HKEY, LPCWSTR, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_CORE_CLUSTER_RESOURCES)(HCLUSTER, HRESOURCE *, HRESOURCE *, HRESOURCE *);

typedef DWORD (* PRESUTIL_GET_DWORD_PROPERTY)(LPDWORD, PCLUSPROP_DWORD, DWORD, DWORD, DWORD, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_DWORD_VALUE)(HKEY, LPCWSTR, LPDWORD, DWORD);

typedef LPVOID (* PRESUTIL_GET_ENVIRONMENT_WITH_NET_NAME)(HRESOURCE);

typedef LPWSTR (* PRESUTIL_GET_EXPAND_SZ_VALUE)(HKEY, LPCWSTR, BOOL);

typedef DWORD (* PRESUTIL_GET_FILETIME_PROPERTY)(LPFILETIME, PCLUSPROP_FILETIME, FILETIME, FILETIME, FILETIME, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_LONG_PROPERTY)(LPLONG, PCLUSPROP_LONG, LONG, LONG, LONG, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_MULTI_SZ_PROPERTY)(LPWSTR *, LPDWORD, PCLUSPROP_SZ, LPCWSTR, DWORD, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_PRIVATE_PROPERTIES)(HKEY, PVOID, DWORD, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_GET_PROPERTIES)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, DWORD, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_GET_PROPERTIES_TO_PARAMETER_BLOCK)(HKEY, PRESUTIL_PROPERTY_ITEM, LPBYTE, BOOL, LPWSTR *);

typedef DWORD (* PRESUTIL_GET_PROPERTY)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID *, LPDWORD);

typedef DWORD (* PRESUTIL_GET_PROPERTY_FORMATS)(PRESUTIL_PROPERTY_ITEM, PVOID, DWORD, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_GET_PROPERTY_SIZE)(HKEY, PRESUTIL_PROPERTY_ITEM, LPDWORD, LPDWORD);

typedef ULONGLONG * PULONGLONG;

typedef DWORD (* PRESUTIL_GET_QWORD_VALUE)(HKEY, LPCWSTR, PULONGLONG, ULONGLONG);

typedef HRESOURCE (* PRESUTIL_GET_RESOURCE_DEPENDENCY)(HANDLE, LPCWSTR);

typedef HRESOURCE (* PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_CLASS)(HCLUSTER, HANDLE, PCLUS_RESOURCE_CLASS_INFO, BOOL);

typedef HRESOURCE (* PRESUTIL_GET_RESOURCE_DEPENDENCY_BY_NAME)(HCLUSTER, HANDLE, LPCWSTR, BOOL);

typedef DWORD (* PRESUTIL_GET_RESOURCE_DEPENDENTIP_ADDRESS_PROPS)(HRESOURCE, LPWSTR, DWORD *, LPWSTR, DWORD *, LPWSTR, DWORD *);

typedef DWORD (* PRESUTIL_GET_RESOURCE_NAME)(HRESOURCE, PWSTR, DWORD *);

typedef HRESOURCE (* PRESUTIL_GET_RESOURCE_NAME_DEPENDENCY)(LPCWSTR, LPCWSTR);

typedef DWORD (* PRESUTIL_GET_SZ_PROPERTY)(LPWSTR *, PCLUSPROP_SZ, LPCWSTR, LPBYTE *, LPDWORD);

typedef LPWSTR (* PRESUTIL_GET_SZ_VALUE)(HKEY, LPCWSTR);

typedef BOOL (* PRESUTIL_IS_PATH_VALID)(LPCWSTR);

typedef BOOL (* PRESUTIL_IS_RESOURCE_CLASS_EQUAL)(PCLUS_RESOURCE_CLASS_INFO, HRESOURCE);

typedef DWORD (* PRESUTIL_PROPERTY_LIST_FROM_PARAMETER_BLOCK)(PRESUTIL_PROPERTY_ITEM, PVOID, LPDWORD, LPBYTE, LPDWORD, LPDWORD);

typedef DWORD (* PRESUTIL_REMOVE_RESOURCE_SERVICE_ENVIRONMENT)(LPCWSTR, PLOG_EVENT_ROUTINE, RESOURCE_HANDLE);

typedef BOOL (* PRESUTIL_RESOURCE_TYPES_EQUAL)(LPCWSTR, HRESOURCE);

typedef BOOL (* PRESUTIL_RESOURCES_EQUAL)(HRESOURCE, HRESOURCE);

typedef DWORD (* PRESUTIL_SET_BINARY_VALUE)(HKEY, LPCWSTR, LPBYTE, DWORD, LPBYTE *, LPDWORD);

typedef DWORD (* PRESUTIL_SET_DWORD_VALUE)(HKEY, LPCWSTR, DWORD, LPDWORD);

typedef DWORD (* PRESUTIL_SET_EXPAND_SZ_VALUE)(HKEY, LPCWSTR, LPCWSTR, LPWSTR *);

typedef DWORD (* PRESUTIL_SET_MULTI_SZ_VALUE)(HKEY, LPCWSTR, LPCWSTR, DWORD, LPWSTR *, LPDWORD);

typedef DWORD (* PRESUTIL_SET_PRIVATE_PROPERTY_LIST)(HKEY, PVOID, DWORD);

typedef DWORD (* PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, LPBYTE, PVOID, DWORD, LPBYTE);

typedef DWORD (* PRESUTIL_SET_PROPERTY_PARAMETER_BLOCK_EX)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, LPBYTE, PVOID, DWORD, BOOL, LPBYTE);

typedef DWORD (* PRESUTIL_SET_PROPERTY_TABLE)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, BOOL, PVOID, DWORD, LPBYTE);

typedef DWORD (* PRESUTIL_SET_PROPERTY_TABLE_EX)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, BOOL, PVOID, DWORD, BOOL, LPBYTE);

typedef DWORD (* PRESUTIL_SET_QWORD_VALUE)(HKEY, LPCWSTR, ULONGLONG, PULONGLONG);

typedef DWORD (* PRESUTIL_SET_RESOURCE_SERVICE_ENVIRONMENT)(LPCWSTR, HRESOURCE, PLOG_EVENT_ROUTINE, RESOURCE_HANDLE);

typedef struct SC_HANDLE__ SC_HANDLE__, *PSC_HANDLE__;

typedef struct SC_HANDLE__ * SC_HANDLE;

typedef SC_HANDLE * LPSC_HANDLE;

typedef DWORD (* PRESUTIL_SET_RESOURCE_SERVICE_START_PARAMETERS)(LPCWSTR, SC_HANDLE, LPSC_HANDLE, PLOG_EVENT_ROUTINE, RESOURCE_HANDLE);

struct SC_HANDLE__ {
    int unused;
};

typedef DWORD (* PRESUTIL_SET_SZ_VALUE)(HKEY, LPCWSTR, LPCWSTR, LPWSTR *);

typedef DWORD (* PRESUTIL_SET_UNKNOWN_PROPERTIES)(HKEY, PRESUTIL_PROPERTY_ITEM, PVOID, DWORD);

typedef DWORD (* PRESUTIL_START_RESOURCE_SERVICE)(LPCWSTR, LPSC_HANDLE);

typedef DWORD (* PRESUTIL_STOP_RESOURCE_SERVICE)(LPCWSTR);

typedef DWORD (* PRESUTIL_STOP_SERVICE)(SC_HANDLE);

typedef DWORD (* PRESUTIL_TERMINATE_SERVICE_PROCESS_FROM_RES_DLL)(DWORD, BOOL, PDWORD, PLOG_EVENT_ROUTINE, RESOURCE_HANDLE);

typedef DWORD (* PRESUTIL_VERIFY_PRIVATE_PROPERTY_LIST)(PVOID, DWORD);

typedef DWORD (* PRESUTIL_VERIFY_PROPERTY_TABLE)(PRESUTIL_PROPERTY_ITEM, PVOID, BOOL, PVOID, DWORD, LPBYTE);

typedef DWORD (* PRESUTIL_VERIFY_RESOURCE_SERVICE)(LPCWSTR);

typedef DWORD (* PRESUTIL_VERIFY_SERVICE)(SC_HANDLE);

typedef DWORD (* PSET_RESOURCE_STATUS_ROUTINE)(RESOURCE_HANDLE, PRESOURCE_STATUS);

typedef DWORD (* PSTARTUP_ROUTINE)(LPCWSTR, DWORD, DWORD, PSET_RESOURCE_STATUS_ROUTINE, PLOG_EVENT_ROUTINE, PCLRES_FUNCTION_TABLE *);

typedef enum _RESOURCE_EXIT_STATE RESOURCE_EXIT_STATE;

typedef void * I_RPC_HANDLE;

typedef long RPC_STATUS;

#define RPC_C_INFINITE_TIMEOUT 4294967295

#define RPC_C_NOTIFY_ON_SEND_COMPLETE 1

typedef enum _RPC_ASYNC_EVENT {
    RpcCallComplete=0,
    RpcClientDisconnect=3,
    RpcReceiveComplete=2,
    RpcSendComplete=1
} _RPC_ASYNC_EVENT;

typedef union _RPC_ASYNC_NOTIFICATION_INFO _RPC_ASYNC_NOTIFICATION_INFO, *P_RPC_ASYNC_NOTIFICATION_INFO;

typedef struct _struct_1192 _struct_1192, *P_struct_1192;

typedef struct _struct_1193 _struct_1193, *P_struct_1193;

typedef struct _struct_1194 _struct_1194, *P_struct_1194;

typedef struct _RPC_ASYNC_STATE _RPC_ASYNC_STATE, *P_RPC_ASYNC_STATE;

typedef enum _RPC_ASYNC_EVENT RPC_ASYNC_EVENT;

typedef void (RPCNOTIFICATION_ROUTINE)(struct _RPC_ASYNC_STATE *, void *, RPC_ASYNC_EVENT);

typedef RPCNOTIFICATION_ROUTINE * PFN_RPCNOTIFICATION_ROUTINE;

typedef struct _OVERLAPPED * LPOVERLAPPED;

typedef enum _RPC_NOTIFICATION_TYPES {
    RpcNotificationTypeApc=2,
    RpcNotificationTypeCallback=5,
    RpcNotificationTypeEvent=1,
    RpcNotificationTypeHwnd=4,
    RpcNotificationTypeIoc=3,
    RpcNotificationTypeNone=0
} _RPC_NOTIFICATION_TYPES;

typedef enum _RPC_NOTIFICATION_TYPES RPC_NOTIFICATION_TYPES;

typedef union _RPC_ASYNC_NOTIFICATION_INFO RPC_ASYNC_NOTIFICATION_INFO;

struct _struct_1194 {
    HWND hWnd;
    UINT Msg;
};

struct _struct_1193 {
    HANDLE hIOPort;
    DWORD dwNumberOfBytesTransferred;
    DWORD_PTR dwCompletionKey;
    LPOVERLAPPED lpOverlapped;
};

struct _struct_1192 {
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
    HANDLE hThread;
};

union _RPC_ASYNC_NOTIFICATION_INFO {
    struct _struct_1192 APC;
    struct _struct_1193 IOC;
    struct _struct_1194 HWND;
    HANDLE hEvent;
    PFN_RPCNOTIFICATION_ROUTINE NotificationRoutine;
};

struct _RPC_ASYNC_STATE {
    uint Size;
    ulong Signature;
    long Lock;
    ulong Flags;
    void * StubInfo;
    void * UserInfo;
    void * RuntimeInfo;
    RPC_ASYNC_EVENT Event;
    RPC_NOTIFICATION_TYPES NotificationType;
    RPC_ASYNC_NOTIFICATION_INFO u;
    LONG_PTR Reserved[4];
};

typedef union _RPC_ASYNC_NOTIFICATION_INFO * PRPC_ASYNC_NOTIFICATION_INFO;

typedef struct _RPC_ASYNC_STATE * PRPC_ASYNC_STATE;

typedef struct _RPC_ASYNC_STATE RPC_ASYNC_STATE;

#define DCE_C_ERROR_STRING_LEN 256

#define RPC_C_AUTHN_DCE_PRIVATE 1

#define RPC_C_AUTHN_DCE_PUBLIC 2

#define RPC_C_AUTHN_DEC_PUBLIC 4

#define RPC_C_AUTHN_DEFAULT 4294967295

#define RPC_C_AUTHN_DIGEST 21

#define RPC_C_AUTHN_DPA 17

#define RPC_C_AUTHN_GSS_KERBEROS 16

#define RPC_C_AUTHN_GSS_NEGOTIATE 9

#define RPC_C_AUTHN_GSS_SCHANNEL 14

#define RPC_C_AUTHN_LEVEL_CALL 3

#define RPC_C_AUTHN_LEVEL_CONNECT 2

#define RPC_C_AUTHN_LEVEL_DEFAULT 0

#define RPC_C_AUTHN_LEVEL_NONE 1

#define RPC_C_AUTHN_LEVEL_PKT 4

#define RPC_C_AUTHN_LEVEL_PKT_INTEGRITY 5

#define RPC_C_AUTHN_LEVEL_PKT_PRIVACY 6

#define RPC_C_AUTHN_MQ 100

#define RPC_C_AUTHN_MSN 18

#define RPC_C_AUTHN_NEGO_EXTENDER 30

#define RPC_C_AUTHN_NONE 0

#define RPC_C_AUTHN_PKU2U 31

#define RPC_C_AUTHN_WINNT 10

#define RPC_C_AUTHZ_DCE 2

#define RPC_C_AUTHZ_DEFAULT 4294967295

#define RPC_C_AUTHZ_NAME 1

#define RPC_C_AUTHZ_NONE 0

#define RPC_C_BIND_TO_ALL_NICS 1

#define RPC_C_BINDING_DEFAULT_TIMEOUT 5

#define RPC_C_BINDING_INFINITE_TIMEOUT 10

#define RPC_C_BINDING_MAX_TIMEOUT 9

#define RPC_C_BINDING_MIN_TIMEOUT 0

#define RPC_C_CANCEL_INFINITE_TIMEOUT -1

#define RPC_C_DONT_FAIL 4

#define RPC_C_EP_ALL_ELTS 0

#define RPC_C_EP_MATCH_BY_BOTH 3

#define RPC_C_EP_MATCH_BY_IF 1

#define RPC_C_EP_MATCH_BY_OBJ 2

#define RPC_C_FULL_CERT_CHAIN 1

#define RPC_C_IMP_LEVEL_ANONYMOUS 1

#define RPC_C_IMP_LEVEL_DEFAULT 0

#define RPC_C_IMP_LEVEL_DELEGATE 4

#define RPC_C_IMP_LEVEL_IDENTIFY 2

#define RPC_C_IMP_LEVEL_IMPERSONATE 3

#define RPC_C_LISTEN_MAX_CALLS_DEFAULT 1234

#define RPC_C_MGMT_INQ_IF_IDS 0

#define RPC_C_MGMT_INQ_PRINC_NAME 1

#define RPC_C_MGMT_INQ_STATS 2

#define RPC_C_MGMT_IS_SERVER_LISTEN 3

#define RPC_C_MGMT_STOP_SERVER_LISTEN 4

#define RPC_C_MQ_AUTHN_LEVEL_NONE 0

#define RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY 8

#define RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY 16

#define RPC_C_MQ_CLEAR_ON_OPEN 2

#define RPC_C_MQ_EXPRESS 0

#define RPC_C_MQ_JOURNAL_ALWAYS 2

#define RPC_C_MQ_JOURNAL_DEADLETTER 1

#define RPC_C_MQ_JOURNAL_NONE 0

#define RPC_C_MQ_PERMANENT 1

#define RPC_C_MQ_RECOVERABLE 1

#define RPC_C_MQ_TEMPORARY 0

#define RPC_C_MQ_USE_EXISTING_SECURITY 4

#define RPC_C_NO_CREDENTIALS -1

#define RPC_C_OPT_BINDING_NONCAUSAL 9

#define RPC_C_OPT_MAX_OPTIONS 12

#define RPC_C_OPT_MQ_ACKNOWLEDGE 4

#define RPC_C_OPT_MQ_AUTHN_LEVEL 6

#define RPC_C_OPT_MQ_AUTHN_SERVICE 5

#define RPC_C_OPT_MQ_DELIVERY 1

#define RPC_C_OPT_MQ_JOURNAL 3

#define RPC_C_OPT_MQ_PRIORITY 2

#define RPC_C_OPT_MQ_TIME_TO_BE_RECEIVED 8

#define RPC_C_OPT_MQ_TIME_TO_REACH_QUEUE 7

#define RPC_C_OPT_SECURITY_CALLBACK 10

#define RPC_C_OPT_UNIQUE_BINDING 11

#define RPC_C_PARM_BUFFER_LENGTH 2

#define RPC_C_PARM_MAX_PACKET_LENGTH 1

#define RPC_C_PROTECT_LEVEL_CALL 3

#define RPC_C_PROTECT_LEVEL_CONNECT 2

#define RPC_C_PROTECT_LEVEL_DEFAULT 0

#define RPC_C_PROTECT_LEVEL_NONE 1

#define RPC_C_PROTECT_LEVEL_PKT 4

#define RPC_C_PROTECT_LEVEL_PKT_INTEGRITY 5

#define RPC_C_PROTECT_LEVEL_PKT_PRIVACY 6

#define RPC_C_PROTSEQ_MAX_REQS_DEFAULT 10

#define RPC_C_QOS_CAPABILITIES_ANY_AUTHORITY 4

#define RPC_C_QOS_CAPABILITIES_DEFAULT 0

#define RPC_C_QOS_CAPABILITIES_MAKE_FULLSIC 2

#define RPC_C_QOS_CAPABILITIES_MUTUAL_AUTH 1

#define RPC_C_QOS_IDENTITY_DYNAMIC 1

#define RPC_C_QOS_IDENTITY_STATIC 0

#define RPC_C_RPCHTTP_USE_LOAD_BALANCE 8

#define RPC_C_SECURITY_QOS_VERSION 1

#define RPC_C_SECURITY_QOS_VERSION_1 1

#define RPC_C_STATS_CALLS_IN 0

#define RPC_C_STATS_CALLS_OUT 1

#define RPC_C_STATS_PKTS_IN 2

#define RPC_C_STATS_PKTS_OUT 3

#define RPC_C_USE_INTERNET_PORT 1

#define RPC_C_USE_INTRANET_PORT 2

#define RPC_C_VERS_ALL 1

#define RPC_C_VERS_COMPATIBLE 2

#define RPC_C_VERS_EXACT 3

#define RPC_C_VERS_MAJOR_ONLY 4

#define RPC_C_VERS_UPTO 5

#define RPC_IF_ALLOW_CALLBACKS_WITH_NO_AUTH 16

#define RPC_IF_ALLOW_LOCAL_ONLY 32

#define RPC_IF_ALLOW_SECURE_ONLY 8

#define RPC_IF_ALLOW_UNKNOWN_AUTHORITY 4

#define RPC_IF_AUTOLISTEN 1

#define RPC_IF_OLE 2

#define RPC_IF_SEC_NO_CACHE 64

#define SEC_WINNT_AUTH_IDENTITY_ANSI 1

#define SEC_WINNT_AUTH_IDENTITY_UNICODE 2

typedef struct _RPC_BINDING_VECTOR _RPC_BINDING_VECTOR, *P_RPC_BINDING_VECTOR;

typedef I_RPC_HANDLE RPC_BINDING_HANDLE;

struct _RPC_BINDING_VECTOR {
    ulong Count;
    RPC_BINDING_HANDLE BindingH[1];
};

typedef struct _RPC_IF_ID _RPC_IF_ID, *P_RPC_IF_ID;

struct _RPC_IF_ID {
    UUID Uuid;
    ushort VersMajor;
    ushort VersMinor;
};

typedef struct _RPC_POLICY _RPC_POLICY, *P_RPC_POLICY;

struct _RPC_POLICY {
    uint Length;
    ulong EndpointFlags;
    ulong NICFlags;
};

typedef struct _RPC_PROTSEQ_VECTORA _RPC_PROTSEQ_VECTORA, *P_RPC_PROTSEQ_VECTORA;

struct _RPC_PROTSEQ_VECTORA {
    uint Count;
    uchar * Protseq[1];
};

typedef struct _RPC_PROTSEQ_VECTORW _RPC_PROTSEQ_VECTORW, *P_RPC_PROTSEQ_VECTORW;

struct _RPC_PROTSEQ_VECTORW {
    uint Count;
    ushort * Protseq[1];
};

typedef struct _RPC_SECURITY_QOS _RPC_SECURITY_QOS, *P_RPC_SECURITY_QOS;

struct _RPC_SECURITY_QOS {
    ulong Version;
    ulong Capabilities;
    ulong IdentityTracking;
    ulong ImpersonationType;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_A _SEC_WINNT_AUTH_IDENTITY_A, *P_SEC_WINNT_AUTH_IDENTITY_A;

struct _SEC_WINNT_AUTH_IDENTITY_A {
    uchar * User;
    ulong UserLength;
    uchar * Domain;
    ulong DomainLength;
    uchar * Password;
    ulong PasswordLength;
    ulong Flags;
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_W _SEC_WINNT_AUTH_IDENTITY_W, *P_SEC_WINNT_AUTH_IDENTITY_W;

struct _SEC_WINNT_AUTH_IDENTITY_W {
    ushort * User;
    ulong UserLength;
    ushort * Domain;
    ulong DomainLength;
    ushort * Password;
    ulong PasswordLength;
    ulong Flags;
};

typedef struct _UUID_VECTOR _UUID_VECTOR, *P_UUID_VECTOR;

struct _UUID_VECTOR {
    ulong Count;
    UUID * Uuid[1];
};

typedef RPC_BINDING_HANDLE handle_t;

typedef struct _RPC_POLICY * PRPC_POLICY;

typedef struct _RPC_SECURITY_QOS * PRPC_SECURITY_QOS;

typedef struct _SEC_WINNT_AUTH_IDENTITY_A * PSEC_WINNT_AUTH_IDENTITY_A;

typedef struct _SEC_WINNT_AUTH_IDENTITY_W * PSEC_WINNT_AUTH_IDENTITY_W;

typedef void * RPC_AUTH_IDENTITY_HANDLE;

typedef ushort * RPC_WSTR;

typedef void (* RPC_AUTH_KEY_RETRIEVAL_FN)(void *, RPC_WSTR, ulong, void * *, RPC_STATUS *);

typedef void * RPC_AUTHZ_HANDLE;

typedef struct _RPC_BINDING_VECTOR RPC_BINDING_VECTOR;

typedef uchar * RPC_CSTR;

typedef ushort * RPC_CWSTR;

typedef I_RPC_HANDLE * RPC_EP_INQ_HANDLE;

typedef void (* RPC_HTTP_PROXY_FREE_STRING)(RPC_WSTR);

typedef void * RPC_IF_HANDLE;

typedef RPC_STATUS (RPC_IF_CALLBACK_FN)(RPC_IF_HANDLE, void *);

typedef struct _RPC_IF_ID RPC_IF_ID;

typedef struct RPC_IF_ID_VECTOR RPC_IF_ID_VECTOR, *PRPC_IF_ID_VECTOR;

struct RPC_IF_ID_VECTOR {
    ulong Count;
    RPC_IF_ID * IfId[1];
};

typedef int (* RPC_MGMT_AUTHORIZATION_FN)(RPC_BINDING_HANDLE, ulong, RPC_STATUS *);

typedef RPC_STATUS (* RPC_NEW_HTTP_PROXY_CHANNEL)(ushort *, ushort *, uchar *, ushort * *);

typedef void (RPC_OBJECT_INQ_FN)(UUID *, UUID *, RPC_STATUS *);

typedef struct _RPC_POLICY RPC_POLICY;

typedef struct _RPC_PROTSEQ_VECTORA RPC_PROTSEQ_VECTORA;

typedef struct _RPC_PROTSEQ_VECTORW RPC_PROTSEQ_VECTORW;

typedef void (RPC_SECURITY_CALLBACK_FN)(void *);

typedef struct _RPC_SECURITY_QOS RPC_SECURITY_QOS;

typedef struct RPC_STATS_VECTOR RPC_STATS_VECTOR, *PRPC_STATS_VECTOR;

struct RPC_STATS_VECTOR {
    uint Count;
    ulong Stats[1];
};

typedef struct _SEC_WINNT_AUTH_IDENTITY_A SEC_WINNT_AUTH_IDENTITY_A;

typedef struct _SEC_WINNT_AUTH_IDENTITY_W SEC_WINNT_AUTH_IDENTITY_W;

typedef struct _UUID_VECTOR UUID_VECTOR;

#define NT351_INTERFACE_SIZE 64

#define RPC_BUFFER_ASYNC 32768

#define RPC_BUFFER_COMPLETE 4096

#define RPC_BUFFER_EXTRA 16384

#define RPC_BUFFER_NONOTIFY 65536

#define RPC_BUFFER_PARTIAL 8192

#define RPC_CONTEXT_HANDLE_DEFAULT_FLAGS 0

#define RPC_CONTEXT_HANDLE_DEFAULT_GUARD 4294963213

#define RPC_CONTEXT_HANDLE_DONT_SERIALIZE 536870912

#define RPC_CONTEXT_HANDLE_FLAGS 805306368

#define RPC_CONTEXT_HANDLE_SERIALIZE 268435456

#define RPC_FLAGS_VALID_BIT 32768

#define RPC_INTERFACE_HAS_PIPES 1

#define RPC_NCA_FLAGS_BROADCAST 2

#define RPC_NCA_FLAGS_DEFAULT 0

#define RPC_NCA_FLAGS_IDEMPOTENT 1

#define RPC_NCA_FLAGS_MAYBE 4

#define RPC_P_ADDR_FORMAT_TCP_IPV4 1

#define RPC_P_ADDR_FORMAT_TCP_IPV6 2

#define RPCFLG_ASYNCHRONOUS 1073741824

#define RPCFLG_AUTO_COMPLETE 134217728

#define RPCFLG_INPUT_SYNCHRONOUS 536870912

#define RPCFLG_LOCAL_CALL 268435456

#define RPCFLG_MESSAGE 16777216

#define RPCFLG_NON_NDR 2147483648

#define TRANSPORT_TYPE_CN 1

#define TRANSPORT_TYPE_DG 2

#define TRANSPORT_TYPE_LPC 4

#define TRANSPORT_TYPE_WMSG 8

typedef struct _RPC_CLIENT_INTERFACE _RPC_CLIENT_INTERFACE, *P_RPC_CLIENT_INTERFACE;

typedef struct _RPC_SYNTAX_IDENTIFIER _RPC_SYNTAX_IDENTIFIER, *P_RPC_SYNTAX_IDENTIFIER;

typedef struct _RPC_SYNTAX_IDENTIFIER RPC_SYNTAX_IDENTIFIER;

typedef struct RPC_DISPATCH_TABLE RPC_DISPATCH_TABLE, *PRPC_DISPATCH_TABLE;

typedef struct _RPC_PROTSEQ_ENDPOINT _RPC_PROTSEQ_ENDPOINT, *P_RPC_PROTSEQ_ENDPOINT;

typedef struct _RPC_PROTSEQ_ENDPOINT * PRPC_PROTSEQ_ENDPOINT;

typedef struct _RPC_VERSION _RPC_VERSION, *P_RPC_VERSION;

typedef struct _RPC_VERSION RPC_VERSION;

typedef struct _RPC_MESSAGE _RPC_MESSAGE, *P_RPC_MESSAGE;

typedef struct _RPC_MESSAGE * PRPC_MESSAGE;

typedef void (* RPC_DISPATCH_FUNCTION)(PRPC_MESSAGE);

typedef struct _RPC_SYNTAX_IDENTIFIER * PRPC_SYNTAX_IDENTIFIER;

struct RPC_DISPATCH_TABLE {
    uint DispatchTableCount;
    RPC_DISPATCH_FUNCTION * DispatchTable;
    LONG_PTR Reserved;
};

struct _RPC_VERSION {
    ushort MajorVersion;
    ushort MinorVersion;
};

struct _RPC_SYNTAX_IDENTIFIER {
    GUID SyntaxGUID;
    RPC_VERSION SyntaxVersion;
};

struct _RPC_CLIENT_INTERFACE {
    uint Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    uint RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    ULONG_PTR Reserved;
    void * InterpreterInfo;
    uint Flags;
};

struct _RPC_PROTSEQ_ENDPOINT {
    uchar * RpcProtocolSequence;
    uchar * Endpoint;
};

struct _RPC_MESSAGE {
    RPC_BINDING_HANDLE Handle;
    ulong DataRepresentation;
    void * Buffer;
    uint BufferLength;
    uint ProcNum;
    PRPC_SYNTAX_IDENTIFIER TransferSyntax;
    void * RpcInterfaceInformation;
    void * ReservedForRuntime;
    void * ManagerEpv;
    void * ImportContext;
    ulong RpcFlags;
};

typedef struct _RPC_SERVER_INTERFACE _RPC_SERVER_INTERFACE, *P_RPC_SERVER_INTERFACE;

struct _RPC_SERVER_INTERFACE {
    uint Length;
    RPC_SYNTAX_IDENTIFIER InterfaceId;
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    PRPC_DISPATCH_TABLE DispatchTable;
    uint RpcProtseqEndpointCount;
    PRPC_PROTSEQ_ENDPOINT RpcProtseqEndpoint;
    void * DefaultManagerEpv;
    void * InterpreterInfo;
    uint Flags;
};

typedef struct _RPC_TRANSFER_SYNTAX _RPC_TRANSFER_SYNTAX, *P_RPC_TRANSFER_SYNTAX;

struct _RPC_TRANSFER_SYNTAX {
    UUID Uuid;
    ushort VersMajor;
    ushort VersMinor;
};

typedef void * I_RPC_MUTEX;

typedef struct _RPC_CLIENT_INTERFACE * PRPC_CLIENT_INTERFACE;

typedef void (* PRPC_RUNDOWN)(void *);

typedef struct _RPC_SERVER_INTERFACE * PRPC_SERVER_INTERFACE;

typedef void (RPC_ADDRESS_CHANGE_FN)(void *);

typedef enum RPC_ADDRESS_CHANGE_TYPE {
    PROTOCOL_ADDRESS_CHANGE=3,
    PROTOCOL_LOADED=2,
    PROTOCOL_NOT_LOADED=1
} RPC_ADDRESS_CHANGE_TYPE;

typedef RPC_STATUS (* RPC_BLOCKING_FN)(void *, void *, void *);

typedef struct _RPC_CLIENT_INTERFACE RPC_CLIENT_INTERFACE;

typedef RPC_STATUS (RPC_FORWARD_FUNCTION)(UUID *, RPC_VERSION *, UUID *, uchar *, void * *);

typedef struct _RPC_MESSAGE RPC_MESSAGE;

typedef struct _RPC_PROTSEQ_ENDPOINT RPC_PROTSEQ_ENDPOINT;

typedef struct _RPC_SERVER_INTERFACE RPC_SERVER_INTERFACE;

typedef void (* RPCLT_PDU_FILTER_FUNC)(void *, uint, int);

typedef void (* RPC_SETFILTER_FUNC)(RPCLT_PDU_FILTER_FUNC);

typedef struct _RPC_TRANSFER_SYNTAX RPC_TRANSFER_SYNTAX;

#define __RPCNDR_H_VERSION__ 500

#define cbNDRContext 20

#define NDR_ASCII_CHAR 0

#define NDR_BIG_ENDIAN 0

#define NDR_CHAR_REP_MASK 15

#define NDR_EBCDIC_CHAR 1

#define NDR_FLOAT_REP_MASK 65280

#define NDR_IBM_FLOAT 768

#define NDR_IEEE_FLOAT 0

#define NDR_INT_REP_MASK 240

#define NDR_LITTLE_ENDIAN 16

#define NDR_LOCAL_DATA_REPRESENTATION 16

#define NDR_LOCAL_ENDIAN 16

#define NDR_VAX_FLOAT 256

#define TARGET_IS_NT351_OR_WIN95_OR_LATER 1

#define TARGET_IS_NT40_OR_LATER 1

#define TARGET_IS_NT50_OR_LATER 1

#define TARGET_IS_NT51_OR_LATER 1

#define TARGET_IS_NT60_OR_LATER 1

#define TARGET_IS_NT61_OR_LATER 1

#define USER_CALL_IS_ASYNC 256

#define USER_CALL_NEW_CORRELATION_DESC 512

#define USER_MARSHAL_FC_BYTE 1

#define USER_MARSHAL_FC_CHAR 2

#define USER_MARSHAL_FC_DOUBLE 12

#define USER_MARSHAL_FC_FLOAT 10

#define USER_MARSHAL_FC_HYPER 11

#define USER_MARSHAL_FC_LONG 8

#define USER_MARSHAL_FC_SHORT 6

#define USER_MARSHAL_FC_SMALL 3

#define USER_MARSHAL_FC_ULONG 9

#define USER_MARSHAL_FC_USHORT 7

#define USER_MARSHAL_FC_USMALL 4

#define USER_MARSHAL_FC_WCHAR 5

typedef struct __GENERIC_BINDING_INFO __GENERIC_BINDING_INFO, *P__GENERIC_BINDING_INFO;

typedef void * (* GENERIC_BINDING_ROUTINE)(void *);

typedef void (* GENERIC_UNBIND_ROUTINE)(void *, uchar *);

struct __GENERIC_BINDING_INFO {
    void * pObj;
    uint Size;
    GENERIC_BINDING_ROUTINE pfnBind;
    GENERIC_UNBIND_ROUTINE pfnUnbind;
};

typedef union _CLIENT_CALL_RETURN _CLIENT_CALL_RETURN, *P_CLIENT_CALL_RETURN;

union _CLIENT_CALL_RETURN {
    void * Pointer;
    LONG_PTR Simple;
};

typedef struct _COMM_FAULT_OFFSETS _COMM_FAULT_OFFSETS, *P_COMM_FAULT_OFFSETS;

struct _COMM_FAULT_OFFSETS {
    short CommOffset;
    short FaultOffset;
};

typedef struct _FULL_PTR_XLAT_TABLES _FULL_PTR_XLAT_TABLES, *P_FULL_PTR_XLAT_TABLES;

typedef enum enum_1636 {
    XLAT_CLIENT=2,
    XLAT_SERVER=1
} enum_1636;

typedef enum enum_1636 XLAT_SIDE;

struct _FULL_PTR_XLAT_TABLES {
    void * RefIdToPointer;
    void * PointerToRefId;
    ulong NextRefId;
    XLAT_SIDE XlatSide;
};

typedef struct _GENERIC_BINDING_ROUTINE_PAIR _GENERIC_BINDING_ROUTINE_PAIR, *P_GENERIC_BINDING_ROUTINE_PAIR;

struct _GENERIC_BINDING_ROUTINE_PAIR {
    GENERIC_BINDING_ROUTINE pfnBind;
    GENERIC_UNBIND_ROUTINE pfnUnbind;
};

typedef enum _IDL_CS_CONVERT {
    IDL_CS_IN_PLACE_CONVERT=1,
    IDL_CS_NEW_BUFFER_CONVERT=2,
    IDL_CS_NO_CONVERT=0
} _IDL_CS_CONVERT;

typedef struct _MALLOC_FREE_STRUCT _MALLOC_FREE_STRUCT, *P_MALLOC_FREE_STRUCT;

struct _MALLOC_FREE_STRUCT {
    void * (* pfnAllocate)(size_t);
    void (* pfnFree)(void *);
};

typedef struct _MIDL_SERVER_INFO_ _MIDL_SERVER_INFO_, *P_MIDL_SERVER_INFO_;

typedef struct _MIDL_STUB_DESC _MIDL_STUB_DESC, *P_MIDL_STUB_DESC;

typedef struct _MIDL_STUB_DESC MIDL_STUB_DESC;

typedef MIDL_STUB_DESC * PMIDL_STUB_DESC;

typedef long (* SERVER_ROUTINE)(void);

typedef uchar * PFORMAT_STRING;

typedef struct _MIDL_STUB_MESSAGE _MIDL_STUB_MESSAGE, *P_MIDL_STUB_MESSAGE;

typedef struct _MIDL_STUB_MESSAGE * PMIDL_STUB_MESSAGE;

typedef void (* STUB_THUNK)(PMIDL_STUB_MESSAGE);

typedef struct _MIDL_SYNTAX_INFO _MIDL_SYNTAX_INFO, *P_MIDL_SYNTAX_INFO;

typedef struct _MIDL_SYNTAX_INFO * PMIDL_SYNTAX_INFO;

typedef union _union_1631 _union_1631, *P_union_1631;

typedef void (* NDR_RUNDOWN)(void *);

typedef struct _GENERIC_BINDING_ROUTINE_PAIR GENERIC_BINDING_ROUTINE_PAIR;

typedef void (* EXPR_EVAL)(struct _MIDL_STUB_MESSAGE *);

typedef struct _XMIT_ROUTINE_QUINTUPLE _XMIT_ROUTINE_QUINTUPLE, *P_XMIT_ROUTINE_QUINTUPLE;

typedef struct _XMIT_ROUTINE_QUINTUPLE XMIT_ROUTINE_QUINTUPLE;

typedef struct _MALLOC_FREE_STRUCT MALLOC_FREE_STRUCT;

typedef struct _COMM_FAULT_OFFSETS COMM_FAULT_OFFSETS;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE _USER_MARSHAL_ROUTINE_QUADRUPLE, *P_USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE USER_MARSHAL_ROUTINE_QUADRUPLE;

typedef void (* NDR_NOTIFY_ROUTINE)(void);

typedef struct _NDR_CS_ROUTINES _NDR_CS_ROUTINES, *P_NDR_CS_ROUTINES;

typedef struct _NDR_CS_ROUTINES NDR_CS_ROUTINES;

typedef struct _NDR_EXPR_DESC _NDR_EXPR_DESC, *P_NDR_EXPR_DESC;

typedef struct _NDR_EXPR_DESC NDR_EXPR_DESC;

typedef struct NDR_ALLOC_ALL_NODES_CONTEXT NDR_ALLOC_ALL_NODES_CONTEXT, *PNDR_ALLOC_ALL_NODES_CONTEXT;

typedef struct NDR_POINTER_QUEUE_STATE NDR_POINTER_QUEUE_STATE, *PNDR_POINTER_QUEUE_STATE;

typedef union anon__struct_1613_bitfield_1 anon__struct_1613_bitfield_1, *Panon__struct_1613_bitfield_1;

typedef struct _struct_1600 _struct_1600, *P_struct_1600;

typedef struct _struct_1600 * NDR_SCONTEXT;

typedef struct ARRAY_INFO ARRAY_INFO, *PARRAY_INFO;

typedef struct _NDR_ASYNC_MESSAGE _NDR_ASYNC_MESSAGE, *P_NDR_ASYNC_MESSAGE;

typedef struct _NDR_ASYNC_MESSAGE * PNDR_ASYNC_MESSAGE;

typedef struct _NDR_CORRELATION_INFO _NDR_CORRELATION_INFO, *P_NDR_CORRELATION_INFO;

typedef struct _NDR_CORRELATION_INFO * PNDR_CORRELATION_INFO;

typedef struct __GENERIC_BINDING_INFO * PGENERIC_BINDING_INFO;

typedef void (* XMIT_HELPER_ROUTINE)(PMIDL_STUB_MESSAGE);

typedef ulong (* USER_MARSHAL_SIZING_ROUTINE)(ulong *, ulong, void *);

typedef uchar * (* USER_MARSHAL_MARSHALLING_ROUTINE)(ulong *, uchar *, void *);

typedef uchar * (* USER_MARSHAL_UNMARSHALLING_ROUTINE)(ulong *, uchar *, void *);

typedef void (* USER_MARSHAL_FREEING_ROUTINE)(ulong *, void *);

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES _NDR_CS_SIZE_CONVERT_ROUTINES, *P_NDR_CS_SIZE_CONVERT_ROUTINES;

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES NDR_CS_SIZE_CONVERT_ROUTINES;

typedef ulong error_status_t;

typedef void (* CS_TAG_GETTING_ROUTINE)(RPC_BINDING_HANDLE, int, ulong *, ulong *, ulong *, error_status_t *);

typedef enum _IDL_CS_CONVERT IDL_CS_CONVERT;

typedef void (* CS_TYPE_NET_SIZE_ROUTINE)(RPC_BINDING_HANDLE, ulong, ulong, IDL_CS_CONVERT *, ulong *, error_status_t *);

typedef void (* CS_TYPE_TO_NETCS_ROUTINE)(RPC_BINDING_HANDLE, ulong, void *, ulong, byte *, ulong *, error_status_t *);

typedef void (* CS_TYPE_LOCAL_SIZE_ROUTINE)(RPC_BINDING_HANDLE, ulong, ulong, IDL_CS_CONVERT *, ulong *, error_status_t *);

typedef void (* CS_TYPE_FROM_NETCS_ROUTINE)(RPC_BINDING_HANDLE, ulong, byte *, ulong, ulong, void *, ulong *, error_status_t *);

struct _NDR_EXPR_DESC {
    ushort * pOffset;
    PFORMAT_STRING pFormatExpr;
};

struct NDR_POINTER_QUEUE_STATE {
};

struct _NDR_ASYNC_MESSAGE {
};

struct _struct_1600 {
    void * pad[2];
    void * userContext;
};

union anon__struct_1613_bitfield_1 {
    int fInDontFree:1; /* : bits 0 */
    int fDontCallFreeInst:1; /* : bits 1 */
    int fInOnlyParam:1; /* : bits 2 */
    int fHasReturn:1; /* : bits 3 */
    int fHasExtensions:1; /* : bits 4 */
    int fHasNewCorrDesc:1; /* : bits 5 */
    int fIsIn:1; /* : bits 6 */
    int fIsOut:1; /* : bits 7 */
    int fIsOicf:1; /* : bits 8 */
    int fBufferValid:1; /* : bits 9 */
    int fHasMemoryValidateCallback:1; /* : bits 10 */
    int fInFree:1; /* : bits 11 */
    int fNeedMCCP:1; /* : bits 12 */
    int fUnused:3; /* : bits 13-15 */
    int fUnused2:16; /* : bits 16-31 */
};

struct _MIDL_STUB_MESSAGE {
    PRPC_MESSAGE RpcMsg;
    uchar * Buffer;
    uchar * BufferStart;
    uchar * BufferEnd;
    uchar * BufferMark;
    ulong BufferLength;
    ulong MemorySize;
    uchar * Memory;
    uchar IsClient;
    uchar Pad;
    ushort uFlags2;
    int ReuseBuffer;
    struct NDR_ALLOC_ALL_NODES_CONTEXT * pAllocAllNodesContext;
    struct NDR_POINTER_QUEUE_STATE * pPointerQueueState;
    int IgnoreEmbeddedPointers;
    uchar * PointerBufferMark;
    uchar CorrDespIncrement;
    uchar uFlags;
    ushort UniquePtrCount;
    ULONG_PTR MaxCount;
    ulong Offset;
    ulong ActualCount;
    void * (* pfnAllocate)(size_t);
    void (* pfnFree)(void *);
    uchar * StackTop;
    uchar * pPresentedType;
    uchar * pTransmitType;
    handle_t SavedHandle;
    struct _MIDL_STUB_DESC * StubDesc;
    struct _FULL_PTR_XLAT_TABLES * FullPtrXlatTables;
    ulong FullPtrRefId;
    ulong PointerLength;
    union anon__struct_1613_bitfield_1 field_0x70;
    ulong dwDestContext;
    void * pvDestContext;
    NDR_SCONTEXT * SavedContextHandles;
    long ParamNumber;
    struct IRpcChannelBuffer * pRpcChannelBuffer;
    PARRAY_INFO pArrayInfo;
    ulong * SizePtrCountArray;
    ulong * SizePtrOffsetArray;
    ulong * SizePtrLengthArray;
    void * pArgQueue;
    ulong dwStubPhase;
    void * LowStackMark;
    PNDR_ASYNC_MESSAGE pAsyncMsg;
    PNDR_CORRELATION_INFO pCorrInfo;
    uchar * pCorrMemory;
    void * pMemoryList;
};

struct _XMIT_ROUTINE_QUINTUPLE {
    XMIT_HELPER_ROUTINE pfnTranslateToXmit;
    XMIT_HELPER_ROUTINE pfnTranslateFromXmit;
    XMIT_HELPER_ROUTINE pfnFreeXmit;
    XMIT_HELPER_ROUTINE pfnFreeInst;
};

struct _MIDL_SYNTAX_INFO {
    RPC_SYNTAX_IDENTIFIER TransferSyntax;
    struct RPC_DISPATCH_TABLE * DispatchTable;
    PFORMAT_STRING ProcString;
    ushort * FmtStringOffset;
    PFORMAT_STRING TypeString;
    void * aUserMarshalQuadruple;
    ULONG_PTR pReserved1;
    ULONG_PTR pReserved2;
};

struct NDR_ALLOC_ALL_NODES_CONTEXT {
};

union _union_1631 {
    handle_t * pAutoHandle;
    handle_t * pPrimitiveHandle;
    PGENERIC_BINDING_INFO pGenericBindingInfo;
};

struct _MIDL_STUB_DESC {
    void * RpcInterfaceInformation;
    void * (* pfnAllocate)(size_t);
    void (* pfnFree)(void *);
    union _union_1631 IMPLICIT_HANDLE_INFO;
    NDR_RUNDOWN * apfnNdrRundownRoutines;
    GENERIC_BINDING_ROUTINE_PAIR * aGenericBindingRoutinePairs;
    EXPR_EVAL * apfnExprEval;
    XMIT_ROUTINE_QUINTUPLE * aXmitQuintuple;
    uchar * pFormatTypes;
    int fCheckBounds;
    ulong Version;
    MALLOC_FREE_STRUCT * pMallocFreeStruct;
    long MIDLVersion;
    COMM_FAULT_OFFSETS * CommFaultOffsets;
    USER_MARSHAL_ROUTINE_QUADRUPLE * aUserMarshalQuadruple;
    NDR_NOTIFY_ROUTINE * NotifyRoutineTable;
    ULONG_PTR mFlags;
    NDR_CS_ROUTINES * CsRoutineTables;
    void * ProxyServerInfo;
    NDR_EXPR_DESC * pExprInfo;
};

struct ARRAY_INFO {
    long Dimension;
    ulong * BufferConformanceMark;
    ulong * BufferVarianceMark;
    ulong * MaxCountArray;
    ulong * OffsetArray;
    ulong * ActualCountArray;
};

struct _USER_MARSHAL_ROUTINE_QUADRUPLE {
    USER_MARSHAL_SIZING_ROUTINE pfnBufferSize;
    USER_MARSHAL_MARSHALLING_ROUTINE pfnMarshall;
    USER_MARSHAL_UNMARSHALLING_ROUTINE pfnUnmarshall;
    USER_MARSHAL_FREEING_ROUTINE pfnFree;
};

struct _NDR_CORRELATION_INFO {
};

struct _NDR_CS_ROUTINES {
    NDR_CS_SIZE_CONVERT_ROUTINES * pSizeConvertRoutines;
    CS_TAG_GETTING_ROUTINE * pTagGettingRoutines;
};

struct _NDR_CS_SIZE_CONVERT_ROUTINES {
    CS_TYPE_NET_SIZE_ROUTINE pfnNetSize;
    CS_TYPE_TO_NETCS_ROUTINE pfnToNetCs;
    CS_TYPE_LOCAL_SIZE_ROUTINE pfnLocalSize;
    CS_TYPE_FROM_NETCS_ROUTINE pfnFromNetCs;
};

struct _MIDL_SERVER_INFO_ {
    PMIDL_STUB_DESC pStubDesc;
    SERVER_ROUTINE * DispatchTable;
    PFORMAT_STRING ProcString;
    ushort * FmtStringOffset;
    STUB_THUNK * ThunkTable;
    PRPC_SYNTAX_IDENTIFIER pTransferSyntax;
    ULONG_PTR nCount;
    PMIDL_SYNTAX_INFO pSyntaxInfo;
};

typedef struct _MIDL_STUBLESS_PROXY_INFO _MIDL_STUBLESS_PROXY_INFO, *P_MIDL_STUBLESS_PROXY_INFO;

struct _MIDL_STUBLESS_PROXY_INFO {
    PMIDL_STUB_DESC pStubDesc;
    PFORMAT_STRING ProcFormatString;
    ushort * FormatStringOffset;
    PRPC_SYNTAX_IDENTIFIER pTransferSyntax;
    ULONG_PTR nCount;
    PMIDL_SYNTAX_INFO pSyntaxInfo;
};

typedef struct _NDR_PROC_CONTEXT _NDR_PROC_CONTEXT, *P_NDR_PROC_CONTEXT;

struct _NDR_PROC_CONTEXT {
};

typedef struct _NDR_USER_MARSHAL_INFO _NDR_USER_MARSHAL_INFO, *P_NDR_USER_MARSHAL_INFO;

typedef union _union_1648 _union_1648, *P_union_1648;

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 _NDR_USER_MARSHAL_INFO_LEVEL1, *P_NDR_USER_MARSHAL_INFO_LEVEL1;

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1 NDR_USER_MARSHAL_INFO_LEVEL1;

struct _NDR_USER_MARSHAL_INFO_LEVEL1 {
    void * Buffer;
    ulong BufferSize;
    void * (* pfnAllocate)(size_t);
    void (* pfnFree)(void *);
    struct IRpcChannelBuffer * pRpcChannelBuffer;
    ULONG_PTR Reserved[5];
};

union _union_1648 {
    NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
};

struct _NDR_USER_MARSHAL_INFO {
    ulong InformationLevel;
    union _union_1648 u;
};

typedef struct _SCONTEXT_QUEUE _SCONTEXT_QUEUE, *P_SCONTEXT_QUEUE;

struct _SCONTEXT_QUEUE {
    ulong NumberOfObjects;
    NDR_SCONTEXT * ArrayOfObjects;
};

typedef struct _USER_MARSHAL_CB _USER_MARSHAL_CB, *P_USER_MARSHAL_CB;

typedef enum _USER_MARSHAL_CB_TYPE {
    USER_MARSHAL_CB_BUFFER_SIZE=0,
    USER_MARSHAL_CB_FREE=3,
    USER_MARSHAL_CB_MARSHALL=1,
    USER_MARSHAL_CB_UNMARSHALL=2
} _USER_MARSHAL_CB_TYPE;

typedef enum _USER_MARSHAL_CB_TYPE USER_MARSHAL_CB_TYPE;

struct _USER_MARSHAL_CB {
    ulong Flags;
    PMIDL_STUB_MESSAGE pStubMsg;
    PFORMAT_STRING pReserve;
    ulong Signature;
    USER_MARSHAL_CB_TYPE CBType;
    PFORMAT_STRING pFormat;
    PFORMAT_STRING pTypeFormat;
};

typedef union _CLIENT_CALL_RETURN CLIENT_CALL_RETURN;

typedef byte cs_byte;

typedef enum enum_1638 {
    STUB_CALL_SERVER=1,
    STUB_CALL_SERVER_NO_HRESULT=3,
    STUB_MARSHAL=2,
    STUB_UNMARSHAL=0
} enum_1638;

typedef enum enum_1639 {
    PROXY_CALCSIZE=0,
    PROXY_GETBUFFER=1,
    PROXY_MARSHAL=2,
    PROXY_SENDRECEIVE=3,
    PROXY_UNMARSHAL=4
} enum_1639;

typedef struct _FULL_PTR_XLAT_TABLES FULL_PTR_XLAT_TABLES;

typedef struct __GENERIC_BINDING_INFO GENERIC_BINDING_INFO;

typedef struct _MIDL_SERVER_INFO_ MIDL_SERVER_INFO;

typedef struct _MIDL_STUB_MESSAGE MIDL_STUB_MESSAGE;

typedef struct _MIDL_STUBLESS_PROXY_INFO MIDL_STUBLESS_PROXY_INFO;

typedef struct _MIDL_SYNTAX_INFO MIDL_SYNTAX_INFO;

typedef double MIDL_uhyper;

typedef void * NDR_CCONTEXT;

typedef void (* NDR_NOTIFY2_ROUTINE)(boolean);

typedef struct _NDR_USER_MARSHAL_INFO NDR_USER_MARSHAL_INFO;

typedef ushort * PARAM_OFFSETTABLE;

typedef struct _FULL_PTR_XLAT_TABLES * PFULL_PTR_XLAT_TABLES;

typedef struct _GENERIC_BINDING_ROUTINE_PAIR * PGENERIC_BINDING_ROUTINE_PAIR;

typedef struct _MIDL_SERVER_INFO_ * PMIDL_SERVER_INFO;

typedef MIDL_STUBLESS_PROXY_INFO * PMIDL_STUBLESS_PROXY_INFO;

typedef void * PMIDL_XMIT_TYPE;

typedef ushort * PPARAM_OFFSETTABLE;

typedef enum enum_1639 PROXY_PHASE;

typedef struct _SCONTEXT_QUEUE * PSCONTEXT_QUEUE;

typedef struct _XMIT_ROUTINE_QUINTUPLE * PXMIT_ROUTINE_QUINTUPLE;

typedef uchar * RPC_BUFPTR;

typedef void * (RPC_CLIENT_ALLOC)(size_t);

typedef void (RPC_CLIENT_FREE)(void *);

typedef ulong RPC_LENGTH;

typedef void * RPC_SS_THREAD_HANDLE;

typedef struct _SCONTEXT_QUEUE SCONTEXT_QUEUE;

typedef enum enum_1638 STUB_PHASE;

typedef struct _USER_MARSHAL_CB USER_MARSHAL_CB;

#define RPC_C_NS_DEFAULT_EXP_AGE -1

#define RPC_C_NS_SYNTAX_DCE 3

#define RPC_C_NS_SYNTAX_DEFAULT 0

#define RPC_C_PROFILE_ALL_ELT 1

#define RPC_C_PROFILE_ALL_ELTS 1

#define RPC_C_PROFILE_DEFAULT_ELT 0

#define RPC_C_PROFILE_MATCH_BY_BOTH 4

#define RPC_C_PROFILE_MATCH_BY_IF 2

#define RPC_C_PROFILE_MATCH_BY_MBR 3

typedef void * RPC_NS_HANDLE;

typedef struct RPC_IMPORT_CONTEXT_P RPC_IMPORT_CONTEXT_P, *PRPC_IMPORT_CONTEXT_P;

struct RPC_IMPORT_CONTEXT_P {
    RPC_NS_HANDLE LookupContext;
    RPC_BINDING_HANDLE ProposedHandle;
    RPC_BINDING_VECTOR * Bindings;
};

#define RPC_S_ACCESS_DENIED 5

#define RPC_S_ASYNC_CALL_PENDING 997

#define RPC_S_BUFFER_TOO_SMALL 122

#define RPC_S_INVALID_ARG 87

#define RPC_S_INVALID_LEVEL 87

#define RPC_S_INVALID_SECURITY_DESC 1338

#define RPC_S_OK 0

#define RPC_S_OUT_OF_MEMORY 14

#define RPC_S_OUT_OF_THREADS 164

#define RPC_S_SERVER_OUT_OF_MEMORY 1130

#define RPC_S_TIMEOUT 1460

#define RPC_S_UNKNOWN_PRINCIPAL 1332

#define RPC_X_ENUM_VALUE_TOO_LARGE 1781

#define RPC_X_INVALID_BOUND 1734

#define RPC_X_INVALID_BUFFER 1784

#define RPC_X_INVALID_PIPE_OPERATION 1831

#define RPC_X_INVALID_TAG 1733

#define RPC_X_NO_MEMORY 14

#define RPC_X_PIPE_APP_MEMORY 14

#define RPC_X_SS_CONTEXT_MISMATCH 6

#define __RPCPROXY_H_VERSION__ 475

typedef struct tagCInterfaceProxyHeader tagCInterfaceProxyHeader, *PtagCInterfaceProxyHeader;

typedef struct tagCInterfaceProxyHeader CInterfaceProxyHeader;

struct tagCInterfaceProxyHeader {
    IID * piid;
};

typedef struct tagCInterfaceProxyVtbl tagCInterfaceProxyVtbl, *PtagCInterfaceProxyVtbl;

typedef struct tagCInterfaceProxyVtbl CInterfaceProxyVtbl;

struct tagCInterfaceProxyVtbl {
    CInterfaceProxyHeader header;
    void * Vtbl;
};

typedef struct tagCInterfaceStubHeader tagCInterfaceStubHeader, *PtagCInterfaceStubHeader;

typedef struct tagCInterfaceStubHeader CInterfaceStubHeader;

typedef void (* PRPC_STUB_FUNCTION)(struct IRpcStubBuffer *, struct IRpcChannelBuffer *, PRPC_MESSAGE, DWORD *);

struct tagCInterfaceStubHeader {
    IID * piid;
    MIDL_SERVER_INFO * pServerInfo;
    ulong DispatchTableCount;
    PRPC_STUB_FUNCTION * pDispatchTable;
};

typedef struct tagCInterfaceStubVtbl tagCInterfaceStubVtbl, *PtagCInterfaceStubVtbl;

typedef struct tagCInterfaceStubVtbl CInterfaceStubVtbl;

struct tagCInterfaceStubVtbl {
    CInterfaceStubHeader header;
    struct IRpcStubBufferVtbl Vtbl;
};

typedef struct tagCStdPSFactoryBuffer tagCStdPSFactoryBuffer, *PtagCStdPSFactoryBuffer;

typedef struct tagCStdPSFactoryBuffer CStdPSFactoryBuffer;

typedef struct tagProxyFileInfo tagProxyFileInfo, *PtagProxyFileInfo;

typedef struct tagProxyFileInfo ProxyFileInfo;

typedef struct tagCInterfaceProxyVtbl * PCInterfaceProxyVtblList;

typedef struct tagCInterfaceStubVtbl * PCInterfaceStubVtblList;

typedef char * PCInterfaceName;

typedef int (IIDLookupRtn)(IID *, int *);

typedef IIDLookupRtn * PIIDLookup;

struct tagProxyFileInfo {
    PCInterfaceProxyVtblList * pProxyVtblList;
    PCInterfaceStubVtblList * pStubVtblList;
    PCInterfaceName * pNamesArray;
    IID * * pDelegatedIIDs;
    PIIDLookup pIIDLookupRtn;
    ushort TableSize;
    ushort TableVersion;
    IID * * pAsyncIIDLookup;
    LONG_PTR Filler2;
    LONG_PTR Filler3;
    LONG_PTR Filler4;
};

struct tagCStdPSFactoryBuffer {
    struct IPSFactoryBufferVtbl * lpVtbl;
    long RefCount;
    ProxyFileInfo * * pProxyFileList;
    long Filler1;
};

typedef struct tagCStdStubBuffer tagCStdStubBuffer, *PtagCStdStubBuffer;

typedef struct tagCStdStubBuffer CStdStubBuffer;

struct tagCStdStubBuffer {
    struct IRpcStubBufferVtbl * lpVtbl;
    long RefCount;
    struct IUnknown * pvServerObject;
    struct ICallFactoryVtbl * pCallFactoryVtbl;
    IID * pAsyncIID;
    struct IPSFactoryBuffer * pPSFactory;
    struct IReleaseMarshalBuffersVtbl * pRMBVtbl;
};

typedef ProxyFileInfo ExtendedProxyFileInfo;

#define __RPCSAL_H_VERSION__ 100

#define _RT_ABORT 10

#define _RT_BADCLRVERSION 29

#define _RT_BANNER 255

#define _RT_BREAK 14

#define _RT_COOKIE_INIT 35

#define _RT_CRNL 252

#define _RT_CRT_INIT_CONFLICT 31

#define _RT_CRT_INIT_MANAGED_CONFLICT 33

#define _RT_CRT_NOTINIT 30

#define _RT_DOMAIN 120

#define _RT_EXECENV 7

#define _RT_EXECFORM 6

#define _RT_EXECMEM 5

#define _RT_FLOAT 2

#define _RT_FPTR 13

#define _RT_HEAP 18

#define _RT_HEAPINIT 28

#define _RT_INT 15

#define _RT_INTDIV 3

#define _RT_INVALDISP 23

#define _RT_LOCALE 32

#define _RT_LOCK 17

#define _RT_LOWIOINIT 27

#define _RT_NOMAIN 21

#define _RT_NONCONT 22

#define _RT_NPTR 12

#define _RT_NULLPTR 1

#define _RT_ONEXIT 24

#define _RT_ONEXIT_VAR 34

#define _RT_OPENCON 19

#define _RT_PUREVIRT 25

#define _RT_QWIN 20

#define _RT_SING 121

#define _RT_SPACEARG 8

#define _RT_SPACEENV 9

#define _RT_STACK 0

#define _RT_STDIOINIT 26

#define _RT_THREAD 16

#define _RT_TLOSS 122

#define _SAL_VERSION 20

#define _USE_DECLSPECS_FOR_SAL 0

#define _SAPI_VER 84

#define DEFAULT_WEIGHT 1

#define SP_EMULATE_RESULT 1073741824

#define SP_LOW_CONFIDENCE -1

#define SP_MAX_LANGIDS 20

#define SP_MAX_PRON_LENGTH 384

#define SP_MAX_WORD_LENGTH 128

#define SP_NORMAL_CONFIDENCE 0

#define SP_STREAMPOS_ASAP 0

#define SP_STREAMPOS_REALTIME -1

#define SPRP_NORMAL 0

#define SPRULETRANS_DICTATION -3

#define SPRULETRANS_TEXTBUFFER -1

#define SPRULETRANS_WILDCARD -2

typedef struct _ISpeechRecoContextEvents _ISpeechRecoContextEvents, *P_ISpeechRecoContextEvents;

typedef struct _ISpeechRecoContextEventsVtbl _ISpeechRecoContextEventsVtbl, *P_ISpeechRecoContextEventsVtbl;

struct _ISpeechRecoContextEventsVtbl {
    HRESULT (* QueryInterface)(struct _ISpeechRecoContextEvents *, IID *, void * *);
    ULONG (* AddRef)(struct _ISpeechRecoContextEvents *);
    ULONG (* Release)(struct _ISpeechRecoContextEvents *);
    HRESULT (* GetTypeInfoCount)(struct _ISpeechRecoContextEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct _ISpeechRecoContextEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct _ISpeechRecoContextEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct _ISpeechRecoContextEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct _ISpeechRecoContextEvents {
    struct _ISpeechRecoContextEventsVtbl * lpVtbl;
};

typedef struct _ISpeechVoiceEvents _ISpeechVoiceEvents, *P_ISpeechVoiceEvents;

typedef struct _ISpeechVoiceEventsVtbl _ISpeechVoiceEventsVtbl, *P_ISpeechVoiceEventsVtbl;

struct _ISpeechVoiceEvents {
    struct _ISpeechVoiceEventsVtbl * lpVtbl;
};

struct _ISpeechVoiceEventsVtbl {
    HRESULT (* QueryInterface)(struct _ISpeechVoiceEvents *, IID *, void * *);
    ULONG (* AddRef)(struct _ISpeechVoiceEvents *);
    ULONG (* Release)(struct _ISpeechVoiceEvents *);
    HRESULT (* GetTypeInfoCount)(struct _ISpeechVoiceEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct _ISpeechVoiceEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct _ISpeechVoiceEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct _ISpeechVoiceEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

typedef enum _SPAUDIOSTATE {
    SPAS_CLOSED=0,
    SPAS_PAUSE=2,
    SPAS_RUN=3,
    SPAS_STOP=1
} _SPAUDIOSTATE;

typedef struct _struct_7311 _struct_7311, *P_struct_7311;

struct _struct_7311 {
    byte bType;
    byte bReserved;
    ushort usArrayIndex;
};

typedef union _union_7310 _union_7310, *P_union_7310;

union _union_7310 {
    ULONG ulId;
    struct _struct_7311 field1;
};

typedef union anon__struct_7271_bitfield_1 anon__struct_7271_bitfield_1, *Panon__struct_7271_bitfield_1;

typedef enum SPEVENTENUM {
    SPEI_ACTIVE_CATEGORY_CHANGED=53,
    SPEI_ADAPTATION=47,
    SPEI_END_INPUT_STREAM=2,
    SPEI_END_SR_STREAM=34,
    SPEI_FALSE_RECOGNITION=43,
    SPEI_HYPOTHESIS=39,
    SPEI_INTERFERENCE=44,
    SPEI_MAX_SR=55,
    SPEI_MAX_TTS=15,
    SPEI_MIN_SR=34,
    SPEI_MIN_TTS=1,
    SPEI_PHONEME=6,
    SPEI_PHRASE_START=37,
    SPEI_PROPERTY_NUM_CHANGE=41,
    SPEI_PROPERTY_STRING_CHANGE=42,
    SPEI_RECOGNITION=38,
    SPEI_RECO_OTHER_CONTEXT=49,
    SPEI_RECO_STATE_CHANGE=46,
    SPEI_REQUEST_UI=45,
    SPEI_RESERVED1=30,
    SPEI_RESERVED2=33,
    SPEI_RESERVED3=63,
    SPEI_RESERVED5=54,
    SPEI_RESERVED6=55,
    SPEI_SENTENCE_BOUNDARY=7,
    SPEI_SOUND_END=36,
    SPEI_SOUND_START=35,
    SPEI_SR_AUDIO_LEVEL=50,
    SPEI_SR_BOOKMARK=40,
    SPEI_SR_PRIVATE=52,
    SPEI_SR_RETAINEDAUDIO=51,
    SPEI_START_INPUT_STREAM=1,
    SPEI_START_SR_STREAM=48,
    SPEI_TTS_AUDIO_LEVEL=9,
    SPEI_TTS_BOOKMARK=4,
    SPEI_TTS_PRIVATE=15,
    SPEI_UNDEFINED=0,
    SPEI_VISEME=8,
    SPEI_VOICE_CHANGE=3,
    SPEI_WORD_BOUNDARY=5
} SPEVENTENUM;

union anon__struct_7271_bitfield_1 {
    enum SPEVENTENUM eEventId:16; /* : bits 0-15 */
};

typedef union anon__struct_7271_bitfield_2 anon__struct_7271_bitfield_2, *Panon__struct_7271_bitfield_2;

typedef enum SPEVENTLPARAMTYPE {
    SPET_LPARAM_IS_OBJECT=2,
    SPET_LPARAM_IS_POINTER=3,
    SPET_LPARAM_IS_STRING=4,
    SPET_LPARAM_IS_TOKEN=1,
    SPET_LPARAM_IS_UNDEFINED=0
} SPEVENTLPARAMTYPE;

union anon__struct_7271_bitfield_2 {
    enum SPEVENTLPARAMTYPE elParamType:16; /* : bits 0-15 */
};

typedef union anon__struct_7272_bitfield_1 anon__struct_7272_bitfield_1, *Panon__struct_7272_bitfield_1;

union anon__struct_7272_bitfield_1 {
    enum SPEVENTENUM eEventId:16; /* : bits 0-15 */
};

typedef union anon__struct_7272_bitfield_2 anon__struct_7272_bitfield_2, *Panon__struct_7272_bitfield_2;

union anon__struct_7272_bitfield_2 {
    enum SPEVENTLPARAMTYPE elParamType:16; /* : bits 0-15 */
};

typedef union anon__struct_7273_bitfield_1 anon__struct_7273_bitfield_1, *Panon__struct_7273_bitfield_1;

union anon__struct_7273_bitfield_1 {
    enum SPEVENTENUM eEventId:16; /* : bits 0-15 */
};

typedef union anon__struct_7273_bitfield_2 anon__struct_7273_bitfield_2, *Panon__struct_7273_bitfield_2;

union anon__struct_7273_bitfield_2 {
    enum SPEVENTLPARAMTYPE elParamType:16; /* : bits 0-15 */
};

typedef union anon__struct_7274_bitfield_1 anon__struct_7274_bitfield_1, *Panon__struct_7274_bitfield_1;

union anon__struct_7274_bitfield_1 {
    enum SPEVENTENUM eEventId:16; /* : bits 0-15 */
};

typedef union anon__struct_7274_bitfield_2 anon__struct_7274_bitfield_2, *Panon__struct_7274_bitfield_2;

union anon__struct_7274_bitfield_2 {
    enum SPEVENTLPARAMTYPE elParamType:16; /* : bits 0-15 */
};

typedef enum DISPID_SpeechAudio {
    DISPID_SABufferInfo=201,
    DISPID_SABufferNotifySize=204,
    DISPID_SADefaultFormat=202,
    DISPID_SAEventHandle=205,
    DISPID_SASetState=206,
    DISPID_SAStatus=200,
    DISPID_SAVolume=203
} DISPID_SpeechAudio;

typedef enum DISPID_SpeechAudioBufferInfo {
    DISPID_SABIBufferSize=2,
    DISPID_SABIEventBias=3,
    DISPID_SABIMinNotification=1
} DISPID_SpeechAudioBufferInfo;

typedef enum DISPID_SpeechAudioFormat {
    DISPID_SAFGetWaveFormatEx=3,
    DISPID_SAFGuid=2,
    DISPID_SAFSetWaveFormatEx=4,
    DISPID_SAFType=1
} DISPID_SpeechAudioFormat;

typedef enum DISPID_SpeechAudioStatus {
    DISPID_SASCurrentDevicePosition=5,
    DISPID_SASCurrentSeekPosition=4,
    DISPID_SASFreeBufferSpace=1,
    DISPID_SASNonBlockingIO=2,
    DISPID_SASState=3
} DISPID_SpeechAudioStatus;

typedef enum DISPID_SpeechBaseStream {
    DISPID_SBSFormat=1,
    DISPID_SBSRead=2,
    DISPID_SBSSeek=4,
    DISPID_SBSWrite=3
} DISPID_SpeechBaseStream;

typedef enum DISPID_SpeechCustomStream {
    DISPID_SCSBaseStream=100
} DISPID_SpeechCustomStream;

typedef enum DISPID_SpeechDataKey {
    DISPID_SDKCreateKey=8,
    DISPID_SDKDeleteKey=9,
    DISPID_SDKDeleteValue=10,
    DISPID_SDKEnumKeys=11,
    DISPID_SDKEnumValues=12,
    DISPID_SDKGetBinaryValue=2,
    DISPID_SDKGetStringValue=4,
    DISPID_SDKGetlongValue=6,
    DISPID_SDKOpenKey=7,
    DISPID_SDKSetBinaryValue=1,
    DISPID_SDKSetLongValue=5,
    DISPID_SDKSetStringValue=3
} DISPID_SpeechDataKey;

typedef enum DISPID_SpeechFileStream {
    DISPID_SFSClose=101,
    DISPID_SFSOpen=100
} DISPID_SpeechFileStream;

typedef enum DISPID_SpeechGrammarRule {
    DISPID_SGRAddResource=6,
    DISPID_SGRAddState=7,
    DISPID_SGRAttributes=1,
    DISPID_SGRClear=5,
    DISPID_SGRId=4,
    DISPID_SGRInitialState=2,
    DISPID_SGRName=3
} DISPID_SpeechGrammarRule;

typedef enum DISPID_SpeechGrammarRules {
    DISPID_SGRsAdd=3,
    DISPID_SGRsCommit=4,
    DISPID_SGRsCommitAndSave=5,
    DISPID_SGRsCount=1,
    DISPID_SGRsDynamic=2,
    DISPID_SGRsFindRule=6,
    DISPID_SGRsItem=0,
    DISPID_SGRs_NewEnum=1
} DISPID_SpeechGrammarRules;

typedef enum DISPID_SpeechGrammarRuleState {
    DISPID_SGRSAddRuleTransition=4,
    DISPID_SGRSAddSpecialTransition=5,
    DISPID_SGRSAddWordTransition=3,
    DISPID_SGRSRule=1,
    DISPID_SGRSTransitions=2
} DISPID_SpeechGrammarRuleState;

typedef enum DISPID_SpeechGrammarRuleStateTransition {
    DISPID_SGRSTNextState=8,
    DISPID_SGRSTPropertyId=6,
    DISPID_SGRSTPropertyName=5,
    DISPID_SGRSTPropertyValue=7,
    DISPID_SGRSTRule=3,
    DISPID_SGRSTText=2,
    DISPID_SGRSTType=1,
    DISPID_SGRSTWeight=4
} DISPID_SpeechGrammarRuleStateTransition;

typedef enum DISPID_SpeechGrammarRuleStateTransitions {
    DISPID_SGRSTsCount=1,
    DISPID_SGRSTsItem=0,
    DISPID_SGRSTs_NewEnum=1
} DISPID_SpeechGrammarRuleStateTransitions;

typedef enum DISPID_SpeechLexicon {
    DISPID_SLAddPronunciation=3,
    DISPID_SLAddPronunciationByPhoneIds=4,
    DISPID_SLGenerationId=1,
    DISPID_SLGetGenerationChange=8,
    DISPID_SLGetPronunciations=7,
    DISPID_SLGetWords=2,
    DISPID_SLRemovePronunciation=5,
    DISPID_SLRemovePronunciationByPhoneIds=6
} DISPID_SpeechLexicon;

typedef enum DISPID_SpeechLexiconProns {
    DISPID_SLPsCount=1,
    DISPID_SLPsItem=0,
    DISPID_SLPs_NewEnum=1
} DISPID_SpeechLexiconProns;

typedef enum DISPID_SpeechLexiconPronunciation {
    DISPID_SLPLangId=2,
    DISPID_SLPPartOfSpeech=3,
    DISPID_SLPPhoneIds=4,
    DISPID_SLPSymbolic=5,
    DISPID_SLPType=1
} DISPID_SpeechLexiconPronunciation;

typedef enum DISPID_SpeechLexiconWord {
    DISPID_SLWLangId=1,
    DISPID_SLWPronunciations=4,
    DISPID_SLWType=2,
    DISPID_SLWWord=3
} DISPID_SpeechLexiconWord;

typedef enum DISPID_SpeechLexiconWords {
    DISPID_SLWsCount=1,
    DISPID_SLWsItem=0,
    DISPID_SLWs_NewEnum=1
} DISPID_SpeechLexiconWords;

typedef enum DISPID_SpeechMemoryStream {
    DISPID_SMSGetData=101,
    DISPID_SMSSetData=100
} DISPID_SpeechMemoryStream;

typedef enum DISPID_SpeechMMSysAudio {
    DISPID_SMSADeviceId=300,
    DISPID_SMSALineId=301,
    DISPID_SMSAMMHandle=302
} DISPID_SpeechMMSysAudio;

typedef enum DISPID_SpeechObjectToken {
    DISPID_SOTCategory=3,
    DISPID_SOTCreateInstance=7,
    DISPID_SOTDataKey=2,
    DISPID_SOTDisplayUI=12,
    DISPID_SOTGetAttribute=6,
    DISPID_SOTGetDescription=4,
    DISPID_SOTGetStorageFileName=9,
    DISPID_SOTId=1,
    DISPID_SOTIsUISupported=11,
    DISPID_SOTMatchesAttributes=13,
    DISPID_SOTRemove=8,
    DISPID_SOTRemoveStorageFileName=10,
    DISPID_SOTSetId=5
} DISPID_SpeechObjectToken;

typedef enum DISPID_SpeechObjectTokenCategory {
    DISPID_SOTCDefault=2,
    DISPID_SOTCEnumerateTokens=5,
    DISPID_SOTCGetDataKey=4,
    DISPID_SOTCId=1,
    DISPID_SOTCSetId=3
} DISPID_SpeechObjectTokenCategory;

typedef enum DISPID_SpeechObjectTokens {
    DISPID_SOTsCount=1,
    DISPID_SOTsItem=0,
    DISPID_SOTs_NewEnum=1
} DISPID_SpeechObjectTokens;

typedef enum DISPID_SpeechPhoneConverter {
    DISPID_SPCIdToPhone=3,
    DISPID_SPCLangId=1,
    DISPID_SPCPhoneToId=2
} DISPID_SpeechPhoneConverter;

typedef enum DISPID_SpeechPhraseAlternate {
    DISPID_SPACommit=5,
    DISPID_SPANumberOfElementsInResult=3,
    DISPID_SPAPhraseInfo=4,
    DISPID_SPARecoResult=1,
    DISPID_SPAStartElementInResult=2
} DISPID_SpeechPhraseAlternate;

typedef enum DISPID_SpeechPhraseAlternates {
    DISPID_SPAsCount=1,
    DISPID_SPAsItem=0,
    DISPID_SPAs_NewEnum=1
} DISPID_SpeechPhraseAlternates;

typedef enum DISPID_SpeechPhraseBuilder {
    DISPID_SPPBRestorePhraseFromMemory=1
} DISPID_SpeechPhraseBuilder;

typedef enum DISPID_SpeechPhraseElement {
    DISPID_SPEActualConfidence=12,
    DISPID_SPEAudioSizeBytes=4,
    DISPID_SPEAudioSizeTime=2,
    DISPID_SPEAudioStreamOffset=3,
    DISPID_SPEAudioTimeOffset=1,
    DISPID_SPEDisplayAttributes=10,
    DISPID_SPEDisplayText=7,
    DISPID_SPEEngineConfidence=13,
    DISPID_SPELexicalForm=8,
    DISPID_SPEPronunciation=9,
    DISPID_SPERequiredConfidence=11,
    DISPID_SPERetainedSizeBytes=6,
    DISPID_SPERetainedStreamOffset=5
} DISPID_SpeechPhraseElement;

typedef enum DISPID_SpeechPhraseElements {
    DISPID_SPEsCount=1,
    DISPID_SPEsItem=0,
    DISPID_SPEs_NewEnum=1
} DISPID_SpeechPhraseElements;

typedef enum DISPID_SpeechPhraseInfo {
    DISPID_SPIAudioSizeBytes=5,
    DISPID_SPIAudioSizeTime=7,
    DISPID_SPIAudioStreamPosition=4,
    DISPID_SPIElements=10,
    DISPID_SPIEngineId=12,
    DISPID_SPIEnginePrivateData=13,
    DISPID_SPIGetDisplayAttributes=16,
    DISPID_SPIGetText=15,
    DISPID_SPIGrammarId=2,
    DISPID_SPILanguageId=1,
    DISPID_SPIProperties=9,
    DISPID_SPIReplacements=11,
    DISPID_SPIRetainedSizeBytes=6,
    DISPID_SPIRule=8,
    DISPID_SPISaveToMemory=14,
    DISPID_SPIStartTime=3
} DISPID_SpeechPhraseInfo;

typedef enum DISPID_SpeechPhraseProperties {
    DISPID_SPPsCount=1,
    DISPID_SPPsItem=0,
    DISPID_SPPs_NewEnum=1
} DISPID_SpeechPhraseProperties;

typedef enum DISPID_SpeechPhraseProperty {
    DISPID_SPPChildren=9,
    DISPID_SPPConfidence=7,
    DISPID_SPPEngineConfidence=6,
    DISPID_SPPFirstElement=4,
    DISPID_SPPId=2,
    DISPID_SPPName=1,
    DISPID_SPPNumberOfElements=5,
    DISPID_SPPParent=8,
    DISPID_SPPValue=3
} DISPID_SpeechPhraseProperty;

typedef enum DISPID_SpeechPhraseReplacement {
    DISPID_SPRDisplayAttributes=1,
    DISPID_SPRFirstElement=3,
    DISPID_SPRNumberOfElements=4,
    DISPID_SPRText=2
} DISPID_SpeechPhraseReplacement;

typedef enum DISPID_SpeechPhraseReplacements {
    DISPID_SPRsCount=1,
    DISPID_SPRsItem=0,
    DISPID_SPRs_NewEnum=1
} DISPID_SpeechPhraseReplacements;

typedef enum DISPID_SpeechPhraseRule {
    DISPID_SPRuleChildren=6,
    DISPID_SPRuleConfidence=7,
    DISPID_SPRuleEngineConfidence=8,
    DISPID_SPRuleFirstElement=3,
    DISPID_SPRuleId=2,
    DISPID_SPRuleName=1,
    DISPID_SPRuleNumberOfElements=4,
    DISPID_SPRuleParent=5
} DISPID_SpeechPhraseRule;

typedef enum DISPID_SpeechPhraseRules {
    DISPID_SPRulesCount=1,
    DISPID_SPRulesItem=0,
    DISPID_SPRules_NewEnum=1
} DISPID_SpeechPhraseRules;

typedef enum DISPID_SpeechRecoContext {
    DISPID_SRAllowVoiceFormatMatchingOnNextSet=5,
    DISPID_SRCAudioInInterferenceStatus=2,
    DISPID_SRCBookmark=16,
    DISPID_SRCCmdMaxAlternates=8,
    DISPID_SRCCreateGrammar=14,
    DISPID_SRCCreateResultFromMemory=15,
    DISPID_SRCEventInterests=7,
    DISPID_SRCPause=12,
    DISPID_SRCRecognizer=1,
    DISPID_SRCRequestedUIType=3,
    DISPID_SRCResume=13,
    DISPID_SRCRetainedAudio=10,
    DISPID_SRCRetainedAudioFormat=11,
    DISPID_SRCSetAdaptationData=17,
    DISPID_SRCState=9,
    DISPID_SRCVoice=4,
    DISPID_SRCVoicePurgeEvent=6
} DISPID_SpeechRecoContext;

typedef enum DISPID_SpeechRecoContextEvents {
    DISPID_SRCEAdaptation=15,
    DISPID_SRCEAudioLevel=17,
    DISPID_SRCEBookmark=3,
    DISPID_SRCEEndStream=2,
    DISPID_SRCEEnginePrivate=18,
    DISPID_SRCEFalseRecognition=11,
    DISPID_SRCEHypothesis=8,
    DISPID_SRCEInterference=12,
    DISPID_SRCEPhraseStart=6,
    DISPID_SRCEPropertyNumberChange=9,
    DISPID_SRCEPropertyStringChange=10,
    DISPID_SRCERecognition=7,
    DISPID_SRCERecognitionForOtherContext=16,
    DISPID_SRCERecognizerStateChange=14,
    DISPID_SRCERequestUI=13,
    DISPID_SRCESoundEnd=5,
    DISPID_SRCESoundStart=4,
    DISPID_SRCEStartStream=1
} DISPID_SpeechRecoContextEvents;

typedef enum DISPID_SpeechRecognizer {
    DISPID_SRAllowAudioInputFormatChangesOnNextSet=2,
    DISPID_SRAudioInput=3,
    DISPID_SRAudioInputStream=4,
    DISPID_SRCreateRecoContext=10,
    DISPID_SRDisplayUI=17,
    DISPID_SREmulateRecognition=9,
    DISPID_SRGetFormat=11,
    DISPID_SRGetPropertyNumber=13,
    DISPID_SRGetPropertyString=15,
    DISPID_SRGetRecognizers=18,
    DISPID_SRIsShared=5,
    DISPID_SRIsUISupported=16,
    DISPID_SRProfile=8,
    DISPID_SRRecognizer=1,
    DISPID_SRSetPropertyNumber=12,
    DISPID_SRSetPropertyString=14,
    DISPID_SRState=6,
    DISPID_SRStatus=7,
    DISPID_SVGetAudioInputs=19,
    DISPID_SVGetProfiles=20
} DISPID_SpeechRecognizer;

typedef enum DISPID_SpeechRecognizerStatus {
    DISPID_SRSAudioStatus=1,
    DISPID_SRSClsidEngine=5,
    DISPID_SRSCurrentStreamNumber=3,
    DISPID_SRSCurrentStreamPosition=2,
    DISPID_SRSNumberOfActiveRules=4,
    DISPID_SRSSupportedLanguages=6
} DISPID_SpeechRecognizerStatus;

typedef enum DISPID_SpeechRecoResult {
    DISPID_SRRAlternates=5,
    DISPID_SRRAudio=6,
    DISPID_SRRAudioFormat=3,
    DISPID_SRRDiscardResultInfo=9,
    DISPID_SRRPhraseInfo=4,
    DISPID_SRRRecoContext=1,
    DISPID_SRRSaveToMemory=8,
    DISPID_SRRSpeakAudio=7,
    DISPID_SRRTimes=2
} DISPID_SpeechRecoResult;

typedef enum DISPID_SpeechRecoResult2 {
    DISPID_SRRSetTextFeedback=0
} DISPID_SpeechRecoResult2;

typedef enum DISPID_SpeechRecoResultTimes {
    DISPID_SRRTLength=2,
    DISPID_SRRTOffsetFromStart=4,
    DISPID_SRRTStreamTime=1,
    DISPID_SRRTTickCount=3
} DISPID_SpeechRecoResultTimes;

typedef enum DISPID_SpeechVoice {
    DISPID_SVAlertBoundary=10,
    DISPID_SVAllowAudioOuputFormatChangesOnNextSet=7,
    DISPID_SVAudioOutput=3,
    DISPID_SVAudioOutputStream=4,
    DISPID_SVDisplayUI=22,
    DISPID_SVEventInterests=8,
    DISPID_SVGetAudioOutputs=18,
    DISPID_SVGetVoices=17,
    DISPID_SVIsUISupported=21,
    DISPID_SVPause=14,
    DISPID_SVPriority=9,
    DISPID_SVRate=5,
    DISPID_SVResume=15,
    DISPID_SVSkip=16,
    DISPID_SVSpeak=12,
    DISPID_SVSpeakCompleteEvent=20,
    DISPID_SVSpeakStream=13,
    DISPID_SVStatus=1,
    DISPID_SVSyncronousSpeakTimeout=11,
    DISPID_SVVoice=2,
    DISPID_SVVolume=6,
    DISPID_SVWaitUntilDone=19
} DISPID_SpeechVoice;

typedef enum DISPID_SpeechVoiceEvent {
    DISPID_SVEAudioLevel=9,
    DISPID_SVEBookmark=4,
    DISPID_SVEEnginePrivate=10,
    DISPID_SVEPhoneme=6,
    DISPID_SVESentenceBoundary=7,
    DISPID_SVEStreamEnd=2,
    DISPID_SVEStreamStart=1,
    DISPID_SVEViseme=8,
    DISPID_SVEVoiceChange=3,
    DISPID_SVEWord=5
} DISPID_SpeechVoiceEvent;

typedef enum DISPID_SpeechVoiceStatus {
    DISPID_SVSCurrentStreamNumber=1,
    DISPID_SVSInputSentenceLength=8,
    DISPID_SVSInputSentencePosition=7,
    DISPID_SVSInputWordLength=6,
    DISPID_SVSInputWordPosition=5,
    DISPID_SVSLastBookmark=9,
    DISPID_SVSLastBookmarkId=10,
    DISPID_SVSLastResult=3,
    DISPID_SVSLastStreamNumberQueued=2,
    DISPID_SVSPhonemeId=11,
    DISPID_SVSRunningState=4,
    DISPID_SVSVisemeId=12
} DISPID_SpeechVoiceStatus;

typedef enum DISPID_SpeechWaveFormatEx {
    DISPID_SWFEAvgBytesPerSec=4,
    DISPID_SWFEBitsPerSample=6,
    DISPID_SWFEBlockAlign=5,
    DISPID_SWFEChannels=2,
    DISPID_SWFEExtraData=7,
    DISPID_SWFEFormatTag=1,
    DISPID_SWFESamplesPerSec=3
} DISPID_SpeechWaveFormatEx;

typedef enum DISPID_SpeechXMLRecoResult {
    DISPID_SRRGetXMLErrorInfo=1,
    DISPID_SRRGetXMLResult=0
} DISPID_SpeechXMLRecoResult;

typedef enum DISPIDSPRG {
    DISPID_SRGCmdLoadFromFile=7,
    DISPID_SRGCmdLoadFromMemory=10,
    DISPID_SRGCmdLoadFromObject=8,
    DISPID_SRGCmdLoadFromProprietaryGrammar=11,
    DISPID_SRGCmdLoadFromResource=9,
    DISPID_SRGCmdSetRuleIdState=13,
    DISPID_SRGCmdSetRuleState=12,
    DISPID_SRGCommit=6,
    DISPID_SRGDictationLoad=14,
    DISPID_SRGDictationSetState=16,
    DISPID_SRGDictationUnload=15,
    DISPID_SRGId=1,
    DISPID_SRGIsPronounceable=19,
    DISPID_SRGRecoContext=2,
    DISPID_SRGReset=5,
    DISPID_SRGRules=4,
    DISPID_SRGSetTextSelection=18,
    DISPID_SRGSetWordSequenceData=17,
    DISPID_SRGState=3
} DISPIDSPRG;

typedef enum DISPIDSPTSI {
    DISPIDSPTSI_ActiveLength=2,
    DISPIDSPTSI_ActiveOffset=1,
    DISPIDSPTSI_SelectionLength=4,
    DISPIDSPTSI_SelectionOffset=3
} DISPIDSPTSI;

typedef struct IEnumSpObjectTokens IEnumSpObjectTokens, *PIEnumSpObjectTokens;

typedef struct IEnumSpObjectTokensVtbl IEnumSpObjectTokensVtbl, *PIEnumSpObjectTokensVtbl;

typedef struct ISpObjectToken ISpObjectToken, *PISpObjectToken;

typedef struct ISpObjectTokenVtbl ISpObjectTokenVtbl, *PISpObjectTokenVtbl;

typedef struct ISpDataKey ISpDataKey, *PISpDataKey;

typedef struct ISpObjectTokenCategory ISpObjectTokenCategory, *PISpObjectTokenCategory;

typedef struct ISpDataKeyVtbl ISpDataKeyVtbl, *PISpDataKeyVtbl;

typedef struct ISpObjectTokenCategoryVtbl ISpObjectTokenCategoryVtbl, *PISpObjectTokenCategoryVtbl;

typedef enum SPDATAKEYLOCATION {
    SPDKL_CurrentConfig=5,
    SPDKL_CurrentUser=1,
    SPDKL_DefaultLocation=0,
    SPDKL_LocalMachine=2
} SPDATAKEYLOCATION;

struct ISpObjectToken {
    struct ISpObjectTokenVtbl * lpVtbl;
};

struct IEnumSpObjectTokens {
    struct IEnumSpObjectTokensVtbl * lpVtbl;
};

struct ISpDataKey {
    struct ISpDataKeyVtbl * lpVtbl;
};

struct ISpObjectTokenCategoryVtbl {
    HRESULT (* QueryInterface)(struct ISpObjectTokenCategory *, IID *, void * *);
    ULONG (* AddRef)(struct ISpObjectTokenCategory *);
    ULONG (* Release)(struct ISpObjectTokenCategory *);
    HRESULT (* SetData)(struct ISpObjectTokenCategory *, LPCWSTR, ULONG, BYTE *);
    HRESULT (* GetData)(struct ISpObjectTokenCategory *, LPCWSTR, ULONG *, BYTE *);
    HRESULT (* SetStringValue)(struct ISpObjectTokenCategory *, LPCWSTR, LPCWSTR);
    HRESULT (* GetStringValue)(struct ISpObjectTokenCategory *, LPCWSTR, LPWSTR *);
    HRESULT (* SetDWORD)(struct ISpObjectTokenCategory *, LPCWSTR, DWORD);
    HRESULT (* GetDWORD)(struct ISpObjectTokenCategory *, LPCWSTR, DWORD *);
    HRESULT (* OpenKey)(struct ISpObjectTokenCategory *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* CreateKey)(struct ISpObjectTokenCategory *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* DeleteKey)(struct ISpObjectTokenCategory *, LPCWSTR);
    HRESULT (* DeleteValue)(struct ISpObjectTokenCategory *, LPCWSTR);
    HRESULT (* EnumKeys)(struct ISpObjectTokenCategory *, ULONG, LPWSTR *);
    HRESULT (* EnumValues)(struct ISpObjectTokenCategory *, ULONG, LPWSTR *);
    HRESULT (* SetId)(struct ISpObjectTokenCategory *, LPCWSTR, BOOL);
    HRESULT (* GetId)(struct ISpObjectTokenCategory *, LPWSTR *);
    HRESULT (* GetDataKey)(struct ISpObjectTokenCategory *, enum SPDATAKEYLOCATION, struct ISpDataKey * *);
    HRESULT (* EnumTokens)(struct ISpObjectTokenCategory *, LPCWSTR, LPCWSTR, struct IEnumSpObjectTokens * *);
    HRESULT (* SetDefaultTokenId)(struct ISpObjectTokenCategory *, LPCWSTR);
    HRESULT (* GetDefaultTokenId)(struct ISpObjectTokenCategory *, LPWSTR *);
};

struct ISpDataKeyVtbl {
    HRESULT (* QueryInterface)(struct ISpDataKey *, IID *, void * *);
    ULONG (* AddRef)(struct ISpDataKey *);
    ULONG (* Release)(struct ISpDataKey *);
    HRESULT (* SetData)(struct ISpDataKey *, LPCWSTR, ULONG, BYTE *);
    HRESULT (* GetData)(struct ISpDataKey *, LPCWSTR, ULONG *, BYTE *);
    HRESULT (* SetStringValue)(struct ISpDataKey *, LPCWSTR, LPCWSTR);
    HRESULT (* GetStringValue)(struct ISpDataKey *, LPCWSTR, LPWSTR *);
    HRESULT (* SetDWORD)(struct ISpDataKey *, LPCWSTR, DWORD);
    HRESULT (* GetDWORD)(struct ISpDataKey *, LPCWSTR, DWORD *);
    HRESULT (* OpenKey)(struct ISpDataKey *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* CreateKey)(struct ISpDataKey *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* DeleteKey)(struct ISpDataKey *, LPCWSTR);
    HRESULT (* DeleteValue)(struct ISpDataKey *, LPCWSTR);
    HRESULT (* EnumKeys)(struct ISpDataKey *, ULONG, LPWSTR *);
    HRESULT (* EnumValues)(struct ISpDataKey *, ULONG, LPWSTR *);
};

struct ISpObjectTokenVtbl {
    HRESULT (* QueryInterface)(struct ISpObjectToken *, IID *, void * *);
    ULONG (* AddRef)(struct ISpObjectToken *);
    ULONG (* Release)(struct ISpObjectToken *);
    HRESULT (* SetData)(struct ISpObjectToken *, LPCWSTR, ULONG, BYTE *);
    HRESULT (* GetData)(struct ISpObjectToken *, LPCWSTR, ULONG *, BYTE *);
    HRESULT (* SetStringValue)(struct ISpObjectToken *, LPCWSTR, LPCWSTR);
    HRESULT (* GetStringValue)(struct ISpObjectToken *, LPCWSTR, LPWSTR *);
    HRESULT (* SetDWORD)(struct ISpObjectToken *, LPCWSTR, DWORD);
    HRESULT (* GetDWORD)(struct ISpObjectToken *, LPCWSTR, DWORD *);
    HRESULT (* OpenKey)(struct ISpObjectToken *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* CreateKey)(struct ISpObjectToken *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* DeleteKey)(struct ISpObjectToken *, LPCWSTR);
    HRESULT (* DeleteValue)(struct ISpObjectToken *, LPCWSTR);
    HRESULT (* EnumKeys)(struct ISpObjectToken *, ULONG, LPWSTR *);
    HRESULT (* EnumValues)(struct ISpObjectToken *, ULONG, LPWSTR *);
    HRESULT (* SetId)(struct ISpObjectToken *, LPCWSTR, LPCWSTR, BOOL);
    HRESULT (* GetId)(struct ISpObjectToken *, LPWSTR *);
    HRESULT (* GetCategory)(struct ISpObjectToken *, struct ISpObjectTokenCategory * *);
    HRESULT (* CreateInstance)(struct ISpObjectToken *, struct IUnknown *, DWORD, IID *, void * *);
    HRESULT (* GetStorageFileName)(struct ISpObjectToken *, IID *, LPCWSTR, LPCWSTR, ULONG, LPWSTR *);
    HRESULT (* RemoveStorageFileName)(struct ISpObjectToken *, IID *, LPCWSTR, BOOL);
    HRESULT (* Remove)(struct ISpObjectToken *, CLSID *);
    HRESULT (* IsUISupported)(struct ISpObjectToken *, LPCWSTR, void *, ULONG, struct IUnknown *, BOOL *);
    HRESULT (* DisplayUI)(struct ISpObjectToken *, HWND, LPCWSTR, LPCWSTR, void *, ULONG, struct IUnknown *);
    HRESULT (* MatchesAttributes)(struct ISpObjectToken *, LPCWSTR, BOOL *);
};

struct ISpObjectTokenCategory {
    struct ISpObjectTokenCategoryVtbl * lpVtbl;
};

struct IEnumSpObjectTokensVtbl {
    HRESULT (* QueryInterface)(struct IEnumSpObjectTokens *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSpObjectTokens *);
    ULONG (* Release)(struct IEnumSpObjectTokens *);
    HRESULT (* Next)(struct IEnumSpObjectTokens *, ULONG, struct ISpObjectToken * *, ULONG *);
    HRESULT (* Skip)(struct IEnumSpObjectTokens *, ULONG);
    HRESULT (* Reset)(struct IEnumSpObjectTokens *);
    HRESULT (* Clone)(struct IEnumSpObjectTokens *, struct IEnumSpObjectTokens * *);
    HRESULT (* Item)(struct IEnumSpObjectTokens *, ULONG, struct ISpObjectToken * *);
    HRESULT (* GetCount)(struct IEnumSpObjectTokens *, ULONG *);
};

typedef struct ISpAudio ISpAudio, *PISpAudio;

typedef struct ISpAudioVtbl ISpAudioVtbl, *PISpAudioVtbl;

typedef enum _SPAUDIOSTATE SPAUDIOSTATE;

typedef struct SPAUDIOSTATUS SPAUDIOSTATUS, *PSPAUDIOSTATUS;

typedef struct SPAUDIOBUFFERINFO SPAUDIOBUFFERINFO, *PSPAUDIOBUFFERINFO;

struct ISpAudioVtbl {
    HRESULT (* QueryInterface)(struct ISpAudio *, IID *, void * *);
    ULONG (* AddRef)(struct ISpAudio *);
    ULONG (* Release)(struct ISpAudio *);
    HRESULT (* Read)(struct ISpAudio *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct ISpAudio *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct ISpAudio *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct ISpAudio *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct ISpAudio *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct ISpAudio *, DWORD);
    HRESULT (* Revert)(struct ISpAudio *);
    HRESULT (* LockRegion)(struct ISpAudio *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct ISpAudio *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct ISpAudio *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct ISpAudio *, struct IStream * *);
    HRESULT (* GetFormat)(struct ISpAudio *, GUID *, WAVEFORMATEX * *);
    HRESULT (* SetState)(struct ISpAudio *, SPAUDIOSTATE, ULONGLONG);
    HRESULT (* SetFormat)(struct ISpAudio *, GUID *, WAVEFORMATEX *);
    HRESULT (* GetStatus)(struct ISpAudio *, struct SPAUDIOSTATUS *);
    HRESULT (* SetBufferInfo)(struct ISpAudio *, struct SPAUDIOBUFFERINFO *);
    HRESULT (* GetBufferInfo)(struct ISpAudio *, struct SPAUDIOBUFFERINFO *);
    HRESULT (* GetDefaultFormat)(struct ISpAudio *, GUID *, WAVEFORMATEX * *);
    HANDLE (* EventHandle)(struct ISpAudio *);
    HRESULT (* GetVolumeLevel)(struct ISpAudio *, ULONG *);
    HRESULT (* SetVolumeLevel)(struct ISpAudio *, ULONG);
    HRESULT (* GetBufferNotifySize)(struct ISpAudio *, ULONG *);
    HRESULT (* SetBufferNotifySize)(struct ISpAudio *, ULONG);
};

struct SPAUDIOSTATUS {
    long cbFreeBuffSpace;
    ULONG cbNonBlockingIO;
    SPAUDIOSTATE State;
    ULONGLONG CurSeekPos;
    ULONGLONG CurDevicePos;
    DWORD dwAudioLevel;
    DWORD dwReserved2;
};

struct ISpAudio {
    struct ISpAudioVtbl * lpVtbl;
};

struct SPAUDIOBUFFERINFO {
    ULONG ulMsMinNotification;
    ULONG ulMsBufferSize;
    ULONG ulMsEventBias;
};

typedef struct ISpContainerLexicon ISpContainerLexicon, *PISpContainerLexicon;

typedef struct ISpContainerLexiconVtbl ISpContainerLexiconVtbl, *PISpContainerLexiconVtbl;

typedef struct SPWORDPRONUNCIATIONLIST SPWORDPRONUNCIATIONLIST, *PSPWORDPRONUNCIATIONLIST;

typedef enum SPPARTOFSPEECH {
    SPPS_Function=16384,
    SPPS_Interjection=20480,
    SPPS_LMA=28672,
    SPPS_Modifier=12288,
    SPPS_Noncontent=24576,
    SPPS_NotOverriden=0,
    SPPS_Noun=4096,
    SPPS_SuppressWord=61440,
    SPPS_Unknown=0,
    SPPS_Verb=8192
} SPPARTOFSPEECH;

typedef LPCWSTR PCSPPHONEID;

typedef struct SPWORDLIST SPWORDLIST, *PSPWORDLIST;

typedef struct ISpLexicon ISpLexicon, *PISpLexicon;

typedef struct SPWORDPRONUNCIATION SPWORDPRONUNCIATION, *PSPWORDPRONUNCIATION;

typedef struct SPWORD SPWORD, *PSPWORD;

typedef struct ISpLexiconVtbl ISpLexiconVtbl, *PISpLexiconVtbl;

typedef enum SPLEXICONTYPE {
    eLEXTYPE_APP=2,
    eLEXTYPE_LETTERTOSOUND=8,
    eLEXTYPE_MORPHOLOGY=16,
    eLEXTYPE_PRIVATE1=4096,
    eLEXTYPE_PRIVATE10=2097152,
    eLEXTYPE_PRIVATE11=4194304,
    eLEXTYPE_PRIVATE12=8388608,
    eLEXTYPE_PRIVATE13=16777216,
    eLEXTYPE_PRIVATE14=33554432,
    eLEXTYPE_PRIVATE15=67108864,
    eLEXTYPE_PRIVATE16=134217728,
    eLEXTYPE_PRIVATE17=268435456,
    eLEXTYPE_PRIVATE18=536870912,
    eLEXTYPE_PRIVATE19=1073741824,
    eLEXTYPE_PRIVATE2=8192,
    eLEXTYPE_PRIVATE20=-2147483648,
    eLEXTYPE_PRIVATE3=16384,
    eLEXTYPE_PRIVATE4=32768,
    eLEXTYPE_PRIVATE5=65536,
    eLEXTYPE_PRIVATE6=131072,
    eLEXTYPE_PRIVATE7=262144,
    eLEXTYPE_PRIVATE8=524288,
    eLEXTYPE_PRIVATE9=1048576,
    eLEXTYPE_RESERVED10=2048,
    eLEXTYPE_RESERVED4=32,
    eLEXTYPE_RESERVED6=128,
    eLEXTYPE_RESERVED7=256,
    eLEXTYPE_RESERVED8=512,
    eLEXTYPE_RESERVED9=1024,
    eLEXTYPE_USER=1,
    eLEXTYPE_USER_SHORTCUT=64,
    eLEXTYPE_VENDORLEXICON=4
} SPLEXICONTYPE;

typedef WCHAR SPPHONEID;

typedef enum SPWORDTYPE {
    eWORDTYPE_ADDED=1,
    eWORDTYPE_DELETED=2
} SPWORDTYPE;

struct ISpContainerLexiconVtbl {
    HRESULT (* QueryInterface)(struct ISpContainerLexicon *, IID *, void * *);
    ULONG (* AddRef)(struct ISpContainerLexicon *);
    ULONG (* Release)(struct ISpContainerLexicon *);
    HRESULT (* GetPronunciations)(struct ISpContainerLexicon *, LPCWSTR, WORD, DWORD, struct SPWORDPRONUNCIATIONLIST *);
    HRESULT (* AddPronunciation)(struct ISpContainerLexicon *, LPCWSTR, WORD, enum SPPARTOFSPEECH, PCSPPHONEID);
    HRESULT (* RemovePronunciation)(struct ISpContainerLexicon *, LPCWSTR, WORD, enum SPPARTOFSPEECH, PCSPPHONEID);
    HRESULT (* GetGeneration)(struct ISpContainerLexicon *, DWORD *);
    HRESULT (* GetGenerationChange)(struct ISpContainerLexicon *, DWORD, DWORD *, struct SPWORDLIST *);
    HRESULT (* GetWords)(struct ISpContainerLexicon *, DWORD, DWORD *, DWORD *, struct SPWORDLIST *);
    HRESULT (* AddLexicon)(struct ISpContainerLexicon *, struct ISpLexicon *, DWORD);
};

struct SPWORDPRONUNCIATIONLIST {
    ULONG ulSize;
    BYTE * pvBuffer;
    struct SPWORDPRONUNCIATION * pFirstWordPronunciation;
};

struct SPWORDLIST {
    ULONG ulSize;
    BYTE * pvBuffer;
    struct SPWORD * pFirstWord;
};

struct SPWORD {
    struct SPWORD * pNextWord;
    WORD LangID;
    WORD wReserved;
    enum SPWORDTYPE eWordType;
    LPWSTR pszWord;
    struct SPWORDPRONUNCIATION * pFirstWordPronunciation;
};

struct ISpLexicon {
    struct ISpLexiconVtbl * lpVtbl;
};

struct SPWORDPRONUNCIATION {
    struct SPWORDPRONUNCIATION * pNextWordPronunciation;
    enum SPLEXICONTYPE eLexiconType;
    WORD LangID;
    WORD wPronunciationFlags;
    enum SPPARTOFSPEECH ePartOfSpeech;
    SPPHONEID szPronunciation[1];
};

struct ISpContainerLexicon {
    struct ISpContainerLexiconVtbl * lpVtbl;
};

struct ISpLexiconVtbl {
    HRESULT (* QueryInterface)(struct ISpLexicon *, IID *, void * *);
    ULONG (* AddRef)(struct ISpLexicon *);
    ULONG (* Release)(struct ISpLexicon *);
    HRESULT (* GetPronunciations)(struct ISpLexicon *, LPCWSTR, WORD, DWORD, struct SPWORDPRONUNCIATIONLIST *);
    HRESULT (* AddPronunciation)(struct ISpLexicon *, LPCWSTR, WORD, enum SPPARTOFSPEECH, PCSPPHONEID);
    HRESULT (* RemovePronunciation)(struct ISpLexicon *, LPCWSTR, WORD, enum SPPARTOFSPEECH, PCSPPHONEID);
    HRESULT (* GetGeneration)(struct ISpLexicon *, DWORD *);
    HRESULT (* GetGenerationChange)(struct ISpLexicon *, DWORD, DWORD *, struct SPWORDLIST *);
    HRESULT (* GetWords)(struct ISpLexicon *, DWORD, DWORD *, DWORD *, struct SPWORDLIST *);
};

typedef struct ISpeechAudio ISpeechAudio, *PISpeechAudio;

typedef struct ISpeechAudioVtbl ISpeechAudioVtbl, *PISpeechAudioVtbl;

typedef struct ISpeechAudioFormat ISpeechAudioFormat, *PISpeechAudioFormat;

typedef enum SpeechStreamSeekPositionType {
    SSSPTRelativeToCurrentPosition=1,
    SSSPTRelativeToEnd=2,
    SSSPTRelativeToStart=0
} SpeechStreamSeekPositionType;

typedef struct ISpeechAudioStatus ISpeechAudioStatus, *PISpeechAudioStatus;

typedef struct ISpeechAudioBufferInfo ISpeechAudioBufferInfo, *PISpeechAudioBufferInfo;

typedef enum SpeechAudioState {
    SASClosed=0,
    SASPause=2,
    SASRun=3,
    SASStop=1
} SpeechAudioState;

typedef struct ISpeechAudioFormatVtbl ISpeechAudioFormatVtbl, *PISpeechAudioFormatVtbl;

typedef enum SpeechAudioFormatType {
    SAFT11kHz16BitMono=10,
    SAFT11kHz16BitStereo=11,
    SAFT11kHz8BitMono=8,
    SAFT11kHz8BitStereo=9,
    SAFT12kHz16BitMono=14,
    SAFT12kHz16BitStereo=15,
    SAFT12kHz8BitMono=12,
    SAFT12kHz8BitStereo=13,
    SAFT16kHz16BitMono=18,
    SAFT16kHz16BitStereo=19,
    SAFT16kHz8BitMono=16,
    SAFT16kHz8BitStereo=17,
    SAFT22kHz16BitMono=22,
    SAFT22kHz16BitStereo=23,
    SAFT22kHz8BitMono=20,
    SAFT22kHz8BitStereo=21,
    SAFT24kHz16BitMono=26,
    SAFT24kHz16BitStereo=27,
    SAFT24kHz8BitMono=24,
    SAFT24kHz8BitStereo=25,
    SAFT32kHz16BitMono=30,
    SAFT32kHz16BitStereo=31,
    SAFT32kHz8BitMono=28,
    SAFT32kHz8BitStereo=29,
    SAFT44kHz16BitMono=34,
    SAFT44kHz16BitStereo=35,
    SAFT44kHz8BitMono=32,
    SAFT44kHz8BitStereo=33,
    SAFT48kHz16BitMono=38,
    SAFT48kHz16BitStereo=39,
    SAFT48kHz8BitMono=36,
    SAFT48kHz8BitStereo=37,
    SAFT8kHz16BitMono=6,
    SAFT8kHz16BitStereo=7,
    SAFT8kHz8BitMono=4,
    SAFT8kHz8BitStereo=5,
    SAFTADPCM_11kHzMono=59,
    SAFTADPCM_11kHzStereo=60,
    SAFTADPCM_22kHzMono=61,
    SAFTADPCM_22kHzStereo=62,
    SAFTADPCM_44kHzMono=63,
    SAFTADPCM_44kHzStereo=64,
    SAFTADPCM_8kHzMono=57,
    SAFTADPCM_8kHzStereo=58,
    SAFTCCITT_ALaw_11kHzMono=43,
    SAFTCCITT_ALaw_11kHzStereo=44,
    SAFTCCITT_ALaw_22kHzMono=45,
    SAFTCCITT_ALaw_22kHzStereo=46,
    SAFTCCITT_ALaw_44kHzMono=47,
    SAFTCCITT_ALaw_44kHzStereo=48,
    SAFTCCITT_ALaw_8kHzMono=41,
    SAFTCCITT_ALaw_8kHzStereo=42,
    SAFTCCITT_uLaw_11kHzMono=51,
    SAFTCCITT_uLaw_11kHzStereo=52,
    SAFTCCITT_uLaw_22kHzMono=53,
    SAFTCCITT_uLaw_22kHzStereo=54,
    SAFTCCITT_uLaw_44kHzMono=55,
    SAFTCCITT_uLaw_44kHzStereo=56,
    SAFTCCITT_uLaw_8kHzMono=49,
    SAFTCCITT_uLaw_8kHzStereo=50,
    SAFTDefault=0,
    SAFTExtendedAudioFormat=3,
    SAFTGSM610_11kHzMono=66,
    SAFTGSM610_22kHzMono=67,
    SAFTGSM610_44kHzMono=68,
    SAFTGSM610_8kHzMono=65,
    SAFTNoAssignedFormat=0,
    SAFTNonStandardFormat=2,
    SAFTText=1,
    SAFTTrueSpeech_8kHz1BitMono=40
} SpeechAudioFormatType;

typedef struct ISpeechWaveFormatEx ISpeechWaveFormatEx, *PISpeechWaveFormatEx;

typedef struct ISpeechAudioStatusVtbl ISpeechAudioStatusVtbl, *PISpeechAudioStatusVtbl;

typedef struct ISpeechAudioBufferInfoVtbl ISpeechAudioBufferInfoVtbl, *PISpeechAudioBufferInfoVtbl;

typedef struct ISpeechWaveFormatExVtbl ISpeechWaveFormatExVtbl, *PISpeechWaveFormatExVtbl;

struct ISpeechWaveFormatEx {
    struct ISpeechWaveFormatExVtbl * lpVtbl;
};

struct ISpeechAudioBufferInfoVtbl {
    HRESULT (* QueryInterface)(struct ISpeechAudioBufferInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechAudioBufferInfo *);
    ULONG (* Release)(struct ISpeechAudioBufferInfo *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechAudioBufferInfo *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechAudioBufferInfo *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechAudioBufferInfo *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechAudioBufferInfo *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_MinNotification)(struct ISpeechAudioBufferInfo *, long *);
    HRESULT (* put_MinNotification)(struct ISpeechAudioBufferInfo *, long);
    HRESULT (* get_BufferSize)(struct ISpeechAudioBufferInfo *, long *);
    HRESULT (* put_BufferSize)(struct ISpeechAudioBufferInfo *, long);
    HRESULT (* get_EventBias)(struct ISpeechAudioBufferInfo *, long *);
    HRESULT (* put_EventBias)(struct ISpeechAudioBufferInfo *, long);
};

struct ISpeechAudioBufferInfo {
    struct ISpeechAudioBufferInfoVtbl * lpVtbl;
};

struct ISpeechAudioVtbl {
    HRESULT (* QueryInterface)(struct ISpeechAudio *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechAudio *);
    ULONG (* Release)(struct ISpeechAudio *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechAudio *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechAudio *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechAudio *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechAudio *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Format)(struct ISpeechAudio *, struct ISpeechAudioFormat * *);
    HRESULT (* putref_Format)(struct ISpeechAudio *, struct ISpeechAudioFormat *);
    HRESULT (* Read)(struct ISpeechAudio *, VARIANT *, long, long *);
    HRESULT (* Write)(struct ISpeechAudio *, VARIANT, long *);
    HRESULT (* Seek)(struct ISpeechAudio *, VARIANT, enum SpeechStreamSeekPositionType, VARIANT *);
    HRESULT (* get_Status)(struct ISpeechAudio *, struct ISpeechAudioStatus * *);
    HRESULT (* get_BufferInfo)(struct ISpeechAudio *, struct ISpeechAudioBufferInfo * *);
    HRESULT (* get_DefaultFormat)(struct ISpeechAudio *, struct ISpeechAudioFormat * *);
    HRESULT (* get_Volume)(struct ISpeechAudio *, long *);
    HRESULT (* put_Volume)(struct ISpeechAudio *, long);
    HRESULT (* get_BufferNotifySize)(struct ISpeechAudio *, long *);
    HRESULT (* put_BufferNotifySize)(struct ISpeechAudio *, long);
    HRESULT (* get_EventHandle)(struct ISpeechAudio *, long *);
    HRESULT (* SetState)(struct ISpeechAudio *, enum SpeechAudioState);
};

struct ISpeechAudioFormat {
    struct ISpeechAudioFormatVtbl * lpVtbl;
};

struct ISpeechAudio {
    struct ISpeechAudioVtbl * lpVtbl;
};

struct ISpeechAudioStatusVtbl {
    HRESULT (* QueryInterface)(struct ISpeechAudioStatus *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechAudioStatus *);
    ULONG (* Release)(struct ISpeechAudioStatus *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechAudioStatus *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechAudioStatus *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechAudioStatus *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechAudioStatus *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_FreeBufferSpace)(struct ISpeechAudioStatus *, long *);
    HRESULT (* get_NonBlockingIO)(struct ISpeechAudioStatus *, long *);
    HRESULT (* get_State)(struct ISpeechAudioStatus *, enum SpeechAudioState *);
    HRESULT (* get_CurrentSeekPosition)(struct ISpeechAudioStatus *, VARIANT *);
    HRESULT (* get_CurrentDevicePosition)(struct ISpeechAudioStatus *, VARIANT *);
};

struct ISpeechAudioFormatVtbl {
    HRESULT (* QueryInterface)(struct ISpeechAudioFormat *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechAudioFormat *);
    ULONG (* Release)(struct ISpeechAudioFormat *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechAudioFormat *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechAudioFormat *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechAudioFormat *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechAudioFormat *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Type)(struct ISpeechAudioFormat *, enum SpeechAudioFormatType *);
    HRESULT (* put_Type)(struct ISpeechAudioFormat *, enum SpeechAudioFormatType);
    HRESULT (* get_Guid)(struct ISpeechAudioFormat *, BSTR *);
    HRESULT (* put_Guid)(struct ISpeechAudioFormat *, BSTR);
    HRESULT (* GetWaveFormatEx)(struct ISpeechAudioFormat *, struct ISpeechWaveFormatEx * *);
    HRESULT (* SetWaveFormatEx)(struct ISpeechAudioFormat *, struct ISpeechWaveFormatEx *);
};

struct ISpeechAudioStatus {
    struct ISpeechAudioStatusVtbl * lpVtbl;
};

struct ISpeechWaveFormatExVtbl {
    HRESULT (* QueryInterface)(struct ISpeechWaveFormatEx *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechWaveFormatEx *);
    ULONG (* Release)(struct ISpeechWaveFormatEx *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechWaveFormatEx *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechWaveFormatEx *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechWaveFormatEx *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechWaveFormatEx *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_FormatTag)(struct ISpeechWaveFormatEx *, short *);
    HRESULT (* put_FormatTag)(struct ISpeechWaveFormatEx *, short);
    HRESULT (* get_Channels)(struct ISpeechWaveFormatEx *, short *);
    HRESULT (* put_Channels)(struct ISpeechWaveFormatEx *, short);
    HRESULT (* get_SamplesPerSec)(struct ISpeechWaveFormatEx *, long *);
    HRESULT (* put_SamplesPerSec)(struct ISpeechWaveFormatEx *, long);
    HRESULT (* get_AvgBytesPerSec)(struct ISpeechWaveFormatEx *, long *);
    HRESULT (* put_AvgBytesPerSec)(struct ISpeechWaveFormatEx *, long);
    HRESULT (* get_BlockAlign)(struct ISpeechWaveFormatEx *, short *);
    HRESULT (* put_BlockAlign)(struct ISpeechWaveFormatEx *, short);
    HRESULT (* get_BitsPerSample)(struct ISpeechWaveFormatEx *, short *);
    HRESULT (* put_BitsPerSample)(struct ISpeechWaveFormatEx *, short);
    HRESULT (* get_ExtraData)(struct ISpeechWaveFormatEx *, VARIANT *);
    HRESULT (* put_ExtraData)(struct ISpeechWaveFormatEx *, VARIANT);
};

typedef struct ISpeechBaseStream ISpeechBaseStream, *PISpeechBaseStream;

typedef struct ISpeechBaseStreamVtbl ISpeechBaseStreamVtbl, *PISpeechBaseStreamVtbl;

struct ISpeechBaseStream {
    struct ISpeechBaseStreamVtbl * lpVtbl;
};

struct ISpeechBaseStreamVtbl {
    HRESULT (* QueryInterface)(struct ISpeechBaseStream *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechBaseStream *);
    ULONG (* Release)(struct ISpeechBaseStream *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechBaseStream *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechBaseStream *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechBaseStream *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechBaseStream *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Format)(struct ISpeechBaseStream *, struct ISpeechAudioFormat * *);
    HRESULT (* putref_Format)(struct ISpeechBaseStream *, struct ISpeechAudioFormat *);
    HRESULT (* Read)(struct ISpeechBaseStream *, VARIANT *, long, long *);
    HRESULT (* Write)(struct ISpeechBaseStream *, VARIANT, long *);
    HRESULT (* Seek)(struct ISpeechBaseStream *, VARIANT, enum SpeechStreamSeekPositionType, VARIANT *);
};

typedef struct ISpeechCustomStream ISpeechCustomStream, *PISpeechCustomStream;

typedef struct ISpeechCustomStreamVtbl ISpeechCustomStreamVtbl, *PISpeechCustomStreamVtbl;

struct ISpeechCustomStream {
    struct ISpeechCustomStreamVtbl * lpVtbl;
};

struct ISpeechCustomStreamVtbl {
    HRESULT (* QueryInterface)(struct ISpeechCustomStream *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechCustomStream *);
    ULONG (* Release)(struct ISpeechCustomStream *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechCustomStream *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechCustomStream *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechCustomStream *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechCustomStream *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Format)(struct ISpeechCustomStream *, struct ISpeechAudioFormat * *);
    HRESULT (* putref_Format)(struct ISpeechCustomStream *, struct ISpeechAudioFormat *);
    HRESULT (* Read)(struct ISpeechCustomStream *, VARIANT *, long, long *);
    HRESULT (* Write)(struct ISpeechCustomStream *, VARIANT, long *);
    HRESULT (* Seek)(struct ISpeechCustomStream *, VARIANT, enum SpeechStreamSeekPositionType, VARIANT *);
    HRESULT (* get_BaseStream)(struct ISpeechCustomStream *, struct IUnknown * *);
    HRESULT (* putref_BaseStream)(struct ISpeechCustomStream *, struct IUnknown *);
};

typedef struct ISpeechDataKey ISpeechDataKey, *PISpeechDataKey;

typedef struct ISpeechDataKeyVtbl ISpeechDataKeyVtbl, *PISpeechDataKeyVtbl;

struct ISpeechDataKey {
    struct ISpeechDataKeyVtbl * lpVtbl;
};

struct ISpeechDataKeyVtbl {
    HRESULT (* QueryInterface)(struct ISpeechDataKey *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechDataKey *);
    ULONG (* Release)(struct ISpeechDataKey *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechDataKey *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechDataKey *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechDataKey *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechDataKey *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* SetBinaryValue)(struct ISpeechDataKey *, BSTR, VARIANT);
    HRESULT (* GetBinaryValue)(struct ISpeechDataKey *, BSTR, VARIANT *);
    HRESULT (* SetStringValue)(struct ISpeechDataKey *, BSTR, BSTR);
    HRESULT (* GetStringValue)(struct ISpeechDataKey *, BSTR, BSTR *);
    HRESULT (* SetLongValue)(struct ISpeechDataKey *, BSTR, long);
    HRESULT (* GetLongValue)(struct ISpeechDataKey *, BSTR, long *);
    HRESULT (* OpenKey)(struct ISpeechDataKey *, BSTR, struct ISpeechDataKey * *);
    HRESULT (* CreateKey)(struct ISpeechDataKey *, BSTR, struct ISpeechDataKey * *);
    HRESULT (* DeleteKey)(struct ISpeechDataKey *, BSTR);
    HRESULT (* DeleteValue)(struct ISpeechDataKey *, BSTR);
    HRESULT (* EnumKeys)(struct ISpeechDataKey *, long, BSTR *);
    HRESULT (* EnumValues)(struct ISpeechDataKey *, long, BSTR *);
};

typedef struct ISpeechFileStream ISpeechFileStream, *PISpeechFileStream;

typedef struct ISpeechFileStreamVtbl ISpeechFileStreamVtbl, *PISpeechFileStreamVtbl;

typedef enum SpeechStreamFileMode {
    SSFMCreate=2,
    SSFMCreateForWrite=3,
    SSFMOpenForRead=0,
    SSFMOpenReadWrite=1
} SpeechStreamFileMode;

struct ISpeechFileStreamVtbl {
    HRESULT (* QueryInterface)(struct ISpeechFileStream *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechFileStream *);
    ULONG (* Release)(struct ISpeechFileStream *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechFileStream *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechFileStream *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechFileStream *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechFileStream *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Format)(struct ISpeechFileStream *, struct ISpeechAudioFormat * *);
    HRESULT (* putref_Format)(struct ISpeechFileStream *, struct ISpeechAudioFormat *);
    HRESULT (* Read)(struct ISpeechFileStream *, VARIANT *, long, long *);
    HRESULT (* Write)(struct ISpeechFileStream *, VARIANT, long *);
    HRESULT (* Seek)(struct ISpeechFileStream *, VARIANT, enum SpeechStreamSeekPositionType, VARIANT *);
    HRESULT (* Open)(struct ISpeechFileStream *, BSTR, enum SpeechStreamFileMode, VARIANT_BOOL);
    HRESULT (* Close)(struct ISpeechFileStream *);
};

struct ISpeechFileStream {
    struct ISpeechFileStreamVtbl * lpVtbl;
};

typedef struct ISpeechGrammarRule ISpeechGrammarRule, *PISpeechGrammarRule;

typedef struct ISpeechGrammarRuleVtbl ISpeechGrammarRuleVtbl, *PISpeechGrammarRuleVtbl;

typedef enum SpeechRuleAttributes {
    SRADefaultToActive=1,
    SRADynamic=5,
    SRAExport=2,
    SRAImport=3,
    SRAInterpreter=4,
    SRARoot=6,
    SRATopLevel=0
} SpeechRuleAttributes;

typedef struct ISpeechGrammarRuleState ISpeechGrammarRuleState, *PISpeechGrammarRuleState;

typedef struct ISpeechGrammarRuleStateVtbl ISpeechGrammarRuleStateVtbl, *PISpeechGrammarRuleStateVtbl;

typedef struct ISpeechGrammarRuleStateTransitions ISpeechGrammarRuleStateTransitions, *PISpeechGrammarRuleStateTransitions;

typedef enum SpeechGrammarWordType {
    SGDisplay=0,
    SGLexical=1,
    SGLexicalNoSpecialChars=3,
    SGPronounciation=2
} SpeechGrammarWordType;

typedef enum SpeechSpecialTransitionType {
    SSTTDictation=2,
    SSTTTextBuffer=3,
    SSTTWildcard=1
} SpeechSpecialTransitionType;

typedef struct ISpeechGrammarRuleStateTransitionsVtbl ISpeechGrammarRuleStateTransitionsVtbl, *PISpeechGrammarRuleStateTransitionsVtbl;

typedef struct ISpeechGrammarRuleStateTransition ISpeechGrammarRuleStateTransition, *PISpeechGrammarRuleStateTransition;

typedef struct ISpeechGrammarRuleStateTransitionVtbl ISpeechGrammarRuleStateTransitionVtbl, *PISpeechGrammarRuleStateTransitionVtbl;

typedef enum SpeechGrammarRuleStateTransitionType {
    SGRSTTDictation=3,
    SGRSTTEpsilon=0,
    SGRSTTRule=2,
    SGRSTTTextBuffer=5,
    SGRSTTWildcard=4,
    SGRSTTWord=1
} SpeechGrammarRuleStateTransitionType;

struct ISpeechGrammarRuleState {
    struct ISpeechGrammarRuleStateVtbl * lpVtbl;
};

struct ISpeechGrammarRuleStateTransition {
    struct ISpeechGrammarRuleStateTransitionVtbl * lpVtbl;
};

struct ISpeechGrammarRuleVtbl {
    HRESULT (* QueryInterface)(struct ISpeechGrammarRule *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechGrammarRule *);
    ULONG (* Release)(struct ISpeechGrammarRule *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechGrammarRule *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechGrammarRule *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechGrammarRule *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechGrammarRule *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Attributes)(struct ISpeechGrammarRule *, enum SpeechRuleAttributes *);
    HRESULT (* get_InitialState)(struct ISpeechGrammarRule *, struct ISpeechGrammarRuleState * *);
    HRESULT (* get_Name)(struct ISpeechGrammarRule *, BSTR *);
    HRESULT (* get_Id)(struct ISpeechGrammarRule *, long *);
    HRESULT (* Clear)(struct ISpeechGrammarRule *);
    HRESULT (* AddResource)(struct ISpeechGrammarRule *, BSTR, BSTR);
    HRESULT (* AddState)(struct ISpeechGrammarRule *, struct ISpeechGrammarRuleState * *);
};

struct ISpeechGrammarRuleStateTransitionsVtbl {
    HRESULT (* QueryInterface)(struct ISpeechGrammarRuleStateTransitions *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechGrammarRuleStateTransitions *);
    ULONG (* Release)(struct ISpeechGrammarRuleStateTransitions *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechGrammarRuleStateTransitions *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechGrammarRuleStateTransitions *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechGrammarRuleStateTransitions *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechGrammarRuleStateTransitions *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechGrammarRuleStateTransitions *, long *);
    HRESULT (* Item)(struct ISpeechGrammarRuleStateTransitions *, long, struct ISpeechGrammarRuleStateTransition * *);
    HRESULT (* get__NewEnum)(struct ISpeechGrammarRuleStateTransitions *, struct IUnknown * *);
};

struct ISpeechGrammarRuleStateTransitions {
    struct ISpeechGrammarRuleStateTransitionsVtbl * lpVtbl;
};

struct ISpeechGrammarRule {
    struct ISpeechGrammarRuleVtbl * lpVtbl;
};

struct ISpeechGrammarRuleStateTransitionVtbl {
    HRESULT (* QueryInterface)(struct ISpeechGrammarRuleStateTransition *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechGrammarRuleStateTransition *);
    ULONG (* Release)(struct ISpeechGrammarRuleStateTransition *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechGrammarRuleStateTransition *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechGrammarRuleStateTransition *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechGrammarRuleStateTransition *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechGrammarRuleStateTransition *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Type)(struct ISpeechGrammarRuleStateTransition *, enum SpeechGrammarRuleStateTransitionType *);
    HRESULT (* get_Text)(struct ISpeechGrammarRuleStateTransition *, BSTR *);
    HRESULT (* get_Rule)(struct ISpeechGrammarRuleStateTransition *, struct ISpeechGrammarRule * *);
    HRESULT (* get_Weight)(struct ISpeechGrammarRuleStateTransition *, VARIANT *);
    HRESULT (* get_PropertyName)(struct ISpeechGrammarRuleStateTransition *, BSTR *);
    HRESULT (* get_PropertyId)(struct ISpeechGrammarRuleStateTransition *, long *);
    HRESULT (* get_PropertyValue)(struct ISpeechGrammarRuleStateTransition *, VARIANT *);
    HRESULT (* get_NextState)(struct ISpeechGrammarRuleStateTransition *, struct ISpeechGrammarRuleState * *);
};

struct ISpeechGrammarRuleStateVtbl {
    HRESULT (* QueryInterface)(struct ISpeechGrammarRuleState *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechGrammarRuleState *);
    ULONG (* Release)(struct ISpeechGrammarRuleState *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechGrammarRuleState *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechGrammarRuleState *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechGrammarRuleState *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechGrammarRuleState *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Rule)(struct ISpeechGrammarRuleState *, struct ISpeechGrammarRule * *);
    HRESULT (* get_Transitions)(struct ISpeechGrammarRuleState *, struct ISpeechGrammarRuleStateTransitions * *);
    HRESULT (* AddWordTransition)(struct ISpeechGrammarRuleState *, struct ISpeechGrammarRuleState *, BSTR, BSTR, enum SpeechGrammarWordType, BSTR, long, VARIANT *, float);
    HRESULT (* AddRuleTransition)(struct ISpeechGrammarRuleState *, struct ISpeechGrammarRuleState *, struct ISpeechGrammarRule *, BSTR, long, VARIANT *, float);
    HRESULT (* AddSpecialTransition)(struct ISpeechGrammarRuleState *, struct ISpeechGrammarRuleState *, enum SpeechSpecialTransitionType, BSTR, long, VARIANT *, float);
};

typedef struct ISpeechGrammarRules ISpeechGrammarRules, *PISpeechGrammarRules;

typedef struct ISpeechGrammarRulesVtbl ISpeechGrammarRulesVtbl, *PISpeechGrammarRulesVtbl;

struct ISpeechGrammarRulesVtbl {
    HRESULT (* QueryInterface)(struct ISpeechGrammarRules *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechGrammarRules *);
    ULONG (* Release)(struct ISpeechGrammarRules *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechGrammarRules *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechGrammarRules *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechGrammarRules *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechGrammarRules *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechGrammarRules *, long *);
    HRESULT (* FindRule)(struct ISpeechGrammarRules *, VARIANT, struct ISpeechGrammarRule * *);
    HRESULT (* Item)(struct ISpeechGrammarRules *, long, struct ISpeechGrammarRule * *);
    HRESULT (* get__NewEnum)(struct ISpeechGrammarRules *, struct IUnknown * *);
    HRESULT (* get_Dynamic)(struct ISpeechGrammarRules *, VARIANT_BOOL *);
    HRESULT (* Add)(struct ISpeechGrammarRules *, BSTR, enum SpeechRuleAttributes, long, struct ISpeechGrammarRule * *);
    HRESULT (* Commit)(struct ISpeechGrammarRules *);
    HRESULT (* CommitAndSave)(struct ISpeechGrammarRules *, BSTR *, VARIANT *);
};

struct ISpeechGrammarRules {
    struct ISpeechGrammarRulesVtbl * lpVtbl;
};

typedef struct ISpeechLexicon ISpeechLexicon, *PISpeechLexicon;

typedef struct ISpeechLexiconVtbl ISpeechLexiconVtbl, *PISpeechLexiconVtbl;

typedef enum SpeechLexiconType {
    SLTApp=1,
    SLTUser=0
} SpeechLexiconType;

typedef struct ISpeechLexiconWords ISpeechLexiconWords, *PISpeechLexiconWords;

typedef long SpeechLanguageId;

typedef enum SpeechPartOfSpeech {
    SPSFunction=5,
    SPSInterjection=6,
    SPSLMA=7,
    SPSModifier=4,
    SPSNotOverriden=0,
    SPSNoun=2,
    SPSSuppressWord=8,
    SPSUnknown=1,
    SPSVerb=3
} SpeechPartOfSpeech;

typedef struct ISpeechLexiconPronunciations ISpeechLexiconPronunciations, *PISpeechLexiconPronunciations;

typedef struct ISpeechLexiconWordsVtbl ISpeechLexiconWordsVtbl, *PISpeechLexiconWordsVtbl;

typedef struct ISpeechLexiconWord ISpeechLexiconWord, *PISpeechLexiconWord;

typedef struct ISpeechLexiconPronunciationsVtbl ISpeechLexiconPronunciationsVtbl, *PISpeechLexiconPronunciationsVtbl;

typedef struct ISpeechLexiconPronunciation ISpeechLexiconPronunciation, *PISpeechLexiconPronunciation;

typedef struct ISpeechLexiconWordVtbl ISpeechLexiconWordVtbl, *PISpeechLexiconWordVtbl;

typedef enum SpeechWordType {
    SWTAdded=0,
    SWTDeleted=1
} SpeechWordType;

typedef struct ISpeechLexiconPronunciationVtbl ISpeechLexiconPronunciationVtbl, *PISpeechLexiconPronunciationVtbl;

struct ISpeechLexicon {
    struct ISpeechLexiconVtbl * lpVtbl;
};

struct ISpeechLexiconVtbl {
    HRESULT (* QueryInterface)(struct ISpeechLexicon *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechLexicon *);
    ULONG (* Release)(struct ISpeechLexicon *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechLexicon *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechLexicon *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechLexicon *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechLexicon *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_GenerationId)(struct ISpeechLexicon *, long *);
    HRESULT (* GetWords)(struct ISpeechLexicon *, enum SpeechLexiconType, long *, struct ISpeechLexiconWords * *);
    HRESULT (* AddPronunciation)(struct ISpeechLexicon *, BSTR, SpeechLanguageId, enum SpeechPartOfSpeech, BSTR);
    HRESULT (* AddPronunciationByPhoneIds)(struct ISpeechLexicon *, BSTR, SpeechLanguageId, enum SpeechPartOfSpeech, VARIANT *);
    HRESULT (* RemovePronunciation)(struct ISpeechLexicon *, BSTR, SpeechLanguageId, enum SpeechPartOfSpeech, BSTR);
    HRESULT (* RemovePronunciationByPhoneIds)(struct ISpeechLexicon *, BSTR, SpeechLanguageId, enum SpeechPartOfSpeech, VARIANT *);
    HRESULT (* GetPronunciations)(struct ISpeechLexicon *, BSTR, SpeechLanguageId, enum SpeechLexiconType, struct ISpeechLexiconPronunciations * *);
    HRESULT (* GetGenerationChange)(struct ISpeechLexicon *, long *, struct ISpeechLexiconWords * *);
};

struct ISpeechLexiconWord {
    struct ISpeechLexiconWordVtbl * lpVtbl;
};

struct ISpeechLexiconWordsVtbl {
    HRESULT (* QueryInterface)(struct ISpeechLexiconWords *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechLexiconWords *);
    ULONG (* Release)(struct ISpeechLexiconWords *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechLexiconWords *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechLexiconWords *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechLexiconWords *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechLexiconWords *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechLexiconWords *, long *);
    HRESULT (* Item)(struct ISpeechLexiconWords *, long, struct ISpeechLexiconWord * *);
    HRESULT (* get__NewEnum)(struct ISpeechLexiconWords *, struct IUnknown * *);
};

struct ISpeechLexiconPronunciation {
    struct ISpeechLexiconPronunciationVtbl * lpVtbl;
};

struct ISpeechLexiconPronunciationsVtbl {
    HRESULT (* QueryInterface)(struct ISpeechLexiconPronunciations *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechLexiconPronunciations *);
    ULONG (* Release)(struct ISpeechLexiconPronunciations *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechLexiconPronunciations *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechLexiconPronunciations *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechLexiconPronunciations *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechLexiconPronunciations *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechLexiconPronunciations *, long *);
    HRESULT (* Item)(struct ISpeechLexiconPronunciations *, long, struct ISpeechLexiconPronunciation * *);
    HRESULT (* get__NewEnum)(struct ISpeechLexiconPronunciations *, struct IUnknown * *);
};

struct ISpeechLexiconWordVtbl {
    HRESULT (* QueryInterface)(struct ISpeechLexiconWord *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechLexiconWord *);
    ULONG (* Release)(struct ISpeechLexiconWord *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechLexiconWord *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechLexiconWord *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechLexiconWord *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechLexiconWord *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_LangId)(struct ISpeechLexiconWord *, SpeechLanguageId *);
    HRESULT (* get_Type)(struct ISpeechLexiconWord *, enum SpeechWordType *);
    HRESULT (* get_Word)(struct ISpeechLexiconWord *, BSTR *);
    HRESULT (* get_Pronunciations)(struct ISpeechLexiconWord *, struct ISpeechLexiconPronunciations * *);
};

struct ISpeechLexiconPronunciations {
    struct ISpeechLexiconPronunciationsVtbl * lpVtbl;
};

struct ISpeechLexiconWords {
    struct ISpeechLexiconWordsVtbl * lpVtbl;
};

struct ISpeechLexiconPronunciationVtbl {
    HRESULT (* QueryInterface)(struct ISpeechLexiconPronunciation *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechLexiconPronunciation *);
    ULONG (* Release)(struct ISpeechLexiconPronunciation *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechLexiconPronunciation *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechLexiconPronunciation *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechLexiconPronunciation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechLexiconPronunciation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Type)(struct ISpeechLexiconPronunciation *, enum SpeechLexiconType *);
    HRESULT (* get_LangId)(struct ISpeechLexiconPronunciation *, SpeechLanguageId *);
    HRESULT (* get_PartOfSpeech)(struct ISpeechLexiconPronunciation *, enum SpeechPartOfSpeech *);
    HRESULT (* get_PhoneIds)(struct ISpeechLexiconPronunciation *, VARIANT *);
    HRESULT (* get_Symbolic)(struct ISpeechLexiconPronunciation *, BSTR *);
};

typedef struct ISpeechMemoryStream ISpeechMemoryStream, *PISpeechMemoryStream;

typedef struct ISpeechMemoryStreamVtbl ISpeechMemoryStreamVtbl, *PISpeechMemoryStreamVtbl;

struct ISpeechMemoryStreamVtbl {
    HRESULT (* QueryInterface)(struct ISpeechMemoryStream *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechMemoryStream *);
    ULONG (* Release)(struct ISpeechMemoryStream *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechMemoryStream *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechMemoryStream *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechMemoryStream *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechMemoryStream *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Format)(struct ISpeechMemoryStream *, struct ISpeechAudioFormat * *);
    HRESULT (* putref_Format)(struct ISpeechMemoryStream *, struct ISpeechAudioFormat *);
    HRESULT (* Read)(struct ISpeechMemoryStream *, VARIANT *, long, long *);
    HRESULT (* Write)(struct ISpeechMemoryStream *, VARIANT, long *);
    HRESULT (* Seek)(struct ISpeechMemoryStream *, VARIANT, enum SpeechStreamSeekPositionType, VARIANT *);
    HRESULT (* SetData)(struct ISpeechMemoryStream *, VARIANT);
    HRESULT (* GetData)(struct ISpeechMemoryStream *, VARIANT *);
};

struct ISpeechMemoryStream {
    struct ISpeechMemoryStreamVtbl * lpVtbl;
};

typedef struct ISpeechMMSysAudio ISpeechMMSysAudio, *PISpeechMMSysAudio;

typedef struct ISpeechMMSysAudioVtbl ISpeechMMSysAudioVtbl, *PISpeechMMSysAudioVtbl;

struct ISpeechMMSysAudioVtbl {
    HRESULT (* QueryInterface)(struct ISpeechMMSysAudio *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechMMSysAudio *);
    ULONG (* Release)(struct ISpeechMMSysAudio *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechMMSysAudio *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechMMSysAudio *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechMMSysAudio *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechMMSysAudio *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Format)(struct ISpeechMMSysAudio *, struct ISpeechAudioFormat * *);
    HRESULT (* putref_Format)(struct ISpeechMMSysAudio *, struct ISpeechAudioFormat *);
    HRESULT (* Read)(struct ISpeechMMSysAudio *, VARIANT *, long, long *);
    HRESULT (* Write)(struct ISpeechMMSysAudio *, VARIANT, long *);
    HRESULT (* Seek)(struct ISpeechMMSysAudio *, VARIANT, enum SpeechStreamSeekPositionType, VARIANT *);
    HRESULT (* get_Status)(struct ISpeechMMSysAudio *, struct ISpeechAudioStatus * *);
    HRESULT (* get_BufferInfo)(struct ISpeechMMSysAudio *, struct ISpeechAudioBufferInfo * *);
    HRESULT (* get_DefaultFormat)(struct ISpeechMMSysAudio *, struct ISpeechAudioFormat * *);
    HRESULT (* get_Volume)(struct ISpeechMMSysAudio *, long *);
    HRESULT (* put_Volume)(struct ISpeechMMSysAudio *, long);
    HRESULT (* get_BufferNotifySize)(struct ISpeechMMSysAudio *, long *);
    HRESULT (* put_BufferNotifySize)(struct ISpeechMMSysAudio *, long);
    HRESULT (* get_EventHandle)(struct ISpeechMMSysAudio *, long *);
    HRESULT (* SetState)(struct ISpeechMMSysAudio *, enum SpeechAudioState);
    HRESULT (* get_DeviceId)(struct ISpeechMMSysAudio *, long *);
    HRESULT (* put_DeviceId)(struct ISpeechMMSysAudio *, long);
    HRESULT (* get_LineId)(struct ISpeechMMSysAudio *, long *);
    HRESULT (* put_LineId)(struct ISpeechMMSysAudio *, long);
    HRESULT (* get_MMHandle)(struct ISpeechMMSysAudio *, long *);
};

struct ISpeechMMSysAudio {
    struct ISpeechMMSysAudioVtbl * lpVtbl;
};

typedef struct ISpeechObjectToken ISpeechObjectToken, *PISpeechObjectToken;

typedef struct ISpeechObjectTokenVtbl ISpeechObjectTokenVtbl, *PISpeechObjectTokenVtbl;

typedef struct ISpeechObjectTokenCategory ISpeechObjectTokenCategory, *PISpeechObjectTokenCategory;

typedef enum SpeechTokenContext {
    STCAll=4,
    STCInprocHandler=1,
    STCInprocServer=0,
    STCLocalServer=2,
    STCRemoteServer=3
} SpeechTokenContext;

typedef enum SpeechTokenShellFolder {
    STSF_AppData=26,
    STSF_CommonAppData=35,
    STSF_FlagCreate=32768,
    STSF_LocalAppData=28
} SpeechTokenShellFolder;

typedef struct ISpeechObjectTokenCategoryVtbl ISpeechObjectTokenCategoryVtbl, *PISpeechObjectTokenCategoryVtbl;

typedef enum SpeechDataKeyLocation {
    SDKLCurrentConfig=3,
    SDKLCurrentUser=1,
    SDKLDefaultLocation=0,
    SDKLLocalMachine=2
} SpeechDataKeyLocation;

typedef struct ISpeechObjectTokens ISpeechObjectTokens, *PISpeechObjectTokens;

typedef struct ISpeechObjectTokensVtbl ISpeechObjectTokensVtbl, *PISpeechObjectTokensVtbl;

struct ISpeechObjectTokens {
    struct ISpeechObjectTokensVtbl * lpVtbl;
};

struct ISpeechObjectTokenCategory {
    struct ISpeechObjectTokenCategoryVtbl * lpVtbl;
};

struct ISpeechObjectTokenVtbl {
    HRESULT (* QueryInterface)(struct ISpeechObjectToken *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechObjectToken *);
    ULONG (* Release)(struct ISpeechObjectToken *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechObjectToken *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechObjectToken *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechObjectToken *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechObjectToken *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Id)(struct ISpeechObjectToken *, BSTR *);
    HRESULT (* get_DataKey)(struct ISpeechObjectToken *, struct ISpeechDataKey * *);
    HRESULT (* get_Category)(struct ISpeechObjectToken *, struct ISpeechObjectTokenCategory * *);
    HRESULT (* GetDescription)(struct ISpeechObjectToken *, long, BSTR *);
    HRESULT (* SetId)(struct ISpeechObjectToken *, BSTR, BSTR, VARIANT_BOOL);
    HRESULT (* GetAttribute)(struct ISpeechObjectToken *, BSTR, BSTR *);
    HRESULT (* CreateInstance)(struct ISpeechObjectToken *, struct IUnknown *, enum SpeechTokenContext, struct IUnknown * *);
    HRESULT (* Remove)(struct ISpeechObjectToken *, BSTR);
    HRESULT (* GetStorageFileName)(struct ISpeechObjectToken *, BSTR, BSTR, BSTR, enum SpeechTokenShellFolder, BSTR *);
    HRESULT (* RemoveStorageFileName)(struct ISpeechObjectToken *, BSTR, BSTR, VARIANT_BOOL);
    HRESULT (* IsUISupported)(struct ISpeechObjectToken *, BSTR, VARIANT *, struct IUnknown *, VARIANT_BOOL *);
    HRESULT (* DisplayUI)(struct ISpeechObjectToken *, long, BSTR, BSTR, VARIANT *, struct IUnknown *);
    HRESULT (* MatchesAttributes)(struct ISpeechObjectToken *, BSTR, VARIANT_BOOL *);
};

struct ISpeechObjectTokenCategoryVtbl {
    HRESULT (* QueryInterface)(struct ISpeechObjectTokenCategory *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechObjectTokenCategory *);
    ULONG (* Release)(struct ISpeechObjectTokenCategory *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechObjectTokenCategory *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechObjectTokenCategory *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechObjectTokenCategory *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechObjectTokenCategory *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Id)(struct ISpeechObjectTokenCategory *, BSTR *);
    HRESULT (* put_Default)(struct ISpeechObjectTokenCategory *, BSTR);
    HRESULT (* get_Default)(struct ISpeechObjectTokenCategory *, BSTR *);
    HRESULT (* SetId)(struct ISpeechObjectTokenCategory *, BSTR, VARIANT_BOOL);
    HRESULT (* GetDataKey)(struct ISpeechObjectTokenCategory *, enum SpeechDataKeyLocation, struct ISpeechDataKey * *);
    HRESULT (* EnumerateTokens)(struct ISpeechObjectTokenCategory *, BSTR, BSTR, struct ISpeechObjectTokens * *);
};

struct ISpeechObjectToken {
    struct ISpeechObjectTokenVtbl * lpVtbl;
};

struct ISpeechObjectTokensVtbl {
    HRESULT (* QueryInterface)(struct ISpeechObjectTokens *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechObjectTokens *);
    ULONG (* Release)(struct ISpeechObjectTokens *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechObjectTokens *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechObjectTokens *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechObjectTokens *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechObjectTokens *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechObjectTokens *, long *);
    HRESULT (* Item)(struct ISpeechObjectTokens *, long, struct ISpeechObjectToken * *);
    HRESULT (* get__NewEnum)(struct ISpeechObjectTokens *, struct IUnknown * *);
};

typedef struct ISpeechPhoneConverter ISpeechPhoneConverter, *PISpeechPhoneConverter;

typedef struct ISpeechPhoneConverterVtbl ISpeechPhoneConverterVtbl, *PISpeechPhoneConverterVtbl;

struct ISpeechPhoneConverter {
    struct ISpeechPhoneConverterVtbl * lpVtbl;
};

struct ISpeechPhoneConverterVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhoneConverter *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhoneConverter *);
    ULONG (* Release)(struct ISpeechPhoneConverter *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhoneConverter *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhoneConverter *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhoneConverter *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhoneConverter *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_LanguageId)(struct ISpeechPhoneConverter *, SpeechLanguageId *);
    HRESULT (* put_LanguageId)(struct ISpeechPhoneConverter *, SpeechLanguageId);
    HRESULT (* PhoneToId)(struct ISpeechPhoneConverter *, BSTR, VARIANT *);
    HRESULT (* IdToPhone)(struct ISpeechPhoneConverter *, VARIANT, BSTR *);
};

typedef struct ISpeechPhraseAlternate ISpeechPhraseAlternate, *PISpeechPhraseAlternate;

typedef struct ISpeechPhraseAlternateVtbl ISpeechPhraseAlternateVtbl, *PISpeechPhraseAlternateVtbl;

typedef struct ISpeechRecoResult ISpeechRecoResult, *PISpeechRecoResult;

typedef struct ISpeechPhraseInfo ISpeechPhraseInfo, *PISpeechPhraseInfo;

typedef struct ISpeechRecoResultVtbl ISpeechRecoResultVtbl, *PISpeechRecoResultVtbl;

typedef struct ISpeechRecoContext ISpeechRecoContext, *PISpeechRecoContext;

typedef struct ISpeechRecoResultTimes ISpeechRecoResultTimes, *PISpeechRecoResultTimes;

typedef struct ISpeechPhraseAlternates ISpeechPhraseAlternates, *PISpeechPhraseAlternates;

typedef enum SpeechVoiceSpeakFlags {
    SVSFDefault=0,
    SVSFIsFilename=3,
    SVSFIsNotXML=5,
    SVSFIsXML=4,
    SVSFNLPMask=11,
    SVSFNLPSpeakPunc=7,
    SVSFParseAutodetect=10,
    SVSFParseMask=12,
    SVSFParseSapi=8,
    SVSFParseSsml=9,
    SVSFPersistXML=6,
    SVSFPurgeBeforeSpeak=2,
    SVSFUnusedFlags=14,
    SVSFVoiceMask=13,
    SVSFlagsAsync=1
} SpeechVoiceSpeakFlags;

typedef enum SpeechDiscardType {
    SDTAll=8,
    SDTAlternates=7,
    SDTAudio=6,
    SDTDisplayText=3,
    SDTLexicalForm=4,
    SDTPronunciation=5,
    SDTProperty=0,
    SDTReplacement=1,
    SDTRule=2
} SpeechDiscardType;

typedef struct ISpeechPhraseInfoVtbl ISpeechPhraseInfoVtbl, *PISpeechPhraseInfoVtbl;

typedef struct ISpeechPhraseRule ISpeechPhraseRule, *PISpeechPhraseRule;

typedef struct ISpeechPhraseProperties ISpeechPhraseProperties, *PISpeechPhraseProperties;

typedef struct ISpeechPhraseElements ISpeechPhraseElements, *PISpeechPhraseElements;

typedef struct ISpeechPhraseReplacements ISpeechPhraseReplacements, *PISpeechPhraseReplacements;

typedef enum SpeechDisplayAttributes {
    SDA_Consume_Leading_Spaces=3,
    SDA_No_Trailing_Space=0,
    SDA_One_Trailing_Space=1,
    SDA_Two_Trailing_Spaces=2
} SpeechDisplayAttributes;

typedef struct ISpeechRecoContextVtbl ISpeechRecoContextVtbl, *PISpeechRecoContextVtbl;

typedef struct ISpeechRecognizer ISpeechRecognizer, *PISpeechRecognizer;

typedef enum SpeechInterference {
    SINoSignal=2,
    SINoise=1,
    SINone=0,
    SITooFast=5,
    SITooLoud=3,
    SITooQuiet=4,
    SITooSlow=6
} SpeechInterference;

typedef struct ISpeechVoice ISpeechVoice, *PISpeechVoice;

typedef enum SpeechRecoEvents {
    SREAdaptation=8192,
    SREAllEvents=393215,
    SREAudioLevel=65536,
    SREBookmark=64,
    SREFalseRecognition=512,
    SREHypothesis=32,
    SREInterference=1024,
    SREPhraseStart=8,
    SREPrivate=262144,
    SREPropertyNumChange=128,
    SREPropertyStringChange=256,
    SRERecoOtherContext=32768,
    SRERecognition=16,
    SRERequestUI=2048,
    SRESoundEnd=4,
    SRESoundStart=2,
    SREStateChange=4096,
    SREStreamEnd=1,
    SREStreamStart=16384
} SpeechRecoEvents;

typedef enum SpeechRecoContextState {
    SRCS_Disabled=0,
    SRCS_Enabled=1
} SpeechRecoContextState;

typedef enum SpeechRetainedAudioOptions {
    SRAONone=0,
    SRAORetainAudio=1
} SpeechRetainedAudioOptions;

typedef struct ISpeechRecoGrammar ISpeechRecoGrammar, *PISpeechRecoGrammar;

typedef enum SpeechBookmarkOptions {
    SBONone=0,
    SBOPause=1
} SpeechBookmarkOptions;

typedef struct ISpeechRecoResultTimesVtbl ISpeechRecoResultTimesVtbl, *PISpeechRecoResultTimesVtbl;

typedef struct ISpeechPhraseAlternatesVtbl ISpeechPhraseAlternatesVtbl, *PISpeechPhraseAlternatesVtbl;

typedef struct ISpeechPhraseRuleVtbl ISpeechPhraseRuleVtbl, *PISpeechPhraseRuleVtbl;

typedef struct ISpeechPhraseRules ISpeechPhraseRules, *PISpeechPhraseRules;

typedef enum SpeechEngineConfidence {
    SECHighConfidence=1,
    SECLowConfidence=0,
    SECNormalConfidence=0
} SpeechEngineConfidence;

typedef struct ISpeechPhrasePropertiesVtbl ISpeechPhrasePropertiesVtbl, *PISpeechPhrasePropertiesVtbl;

typedef struct ISpeechPhraseProperty ISpeechPhraseProperty, *PISpeechPhraseProperty;

typedef struct ISpeechPhraseElementsVtbl ISpeechPhraseElementsVtbl, *PISpeechPhraseElementsVtbl;

typedef struct ISpeechPhraseElement ISpeechPhraseElement, *PISpeechPhraseElement;

typedef struct ISpeechPhraseReplacementsVtbl ISpeechPhraseReplacementsVtbl, *PISpeechPhraseReplacementsVtbl;

typedef struct ISpeechPhraseReplacement ISpeechPhraseReplacement, *PISpeechPhraseReplacement;

typedef struct ISpeechRecognizerVtbl ISpeechRecognizerVtbl, *PISpeechRecognizerVtbl;

typedef enum SpeechRecognizerState {
    SRSActive=1,
    SRSActiveAlways=2,
    SRSInactive=0,
    SRSInactiveWithPurge=3
} SpeechRecognizerState;

typedef struct ISpeechRecognizerStatus ISpeechRecognizerStatus, *PISpeechRecognizerStatus;

typedef enum SpeechFormatType {
    SFTInput=0,
    SFTSREngine=1
} SpeechFormatType;

typedef struct ISpeechVoiceVtbl ISpeechVoiceVtbl, *PISpeechVoiceVtbl;

typedef struct ISpeechVoiceStatus ISpeechVoiceStatus, *PISpeechVoiceStatus;

typedef enum SpeechVoiceEvents {
    SVEAllEvents=33790,
    SVEAudioLevel=512,
    SVEBookmark=16,
    SVEEndInputStream=4,
    SVEPhoneme=64,
    SVEPrivate=32768,
    SVESentenceBoundary=128,
    SVEStartInputStream=2,
    SVEViseme=256,
    SVEVoiceChange=8,
    SVEWordBoundary=32
} SpeechVoiceEvents;

typedef enum SpeechVoicePriority {
    SVPAlert=1,
    SVPNormal=0,
    SVPOver=2
} SpeechVoicePriority;

typedef struct ISpeechRecoGrammarVtbl ISpeechRecoGrammarVtbl, *PISpeechRecoGrammarVtbl;

typedef enum SpeechGrammarState {
    SGSDisabled=1,
    SGSEnabled=0,
    SGSExclusive=2
} SpeechGrammarState;

typedef enum SpeechLoadOption {
    SLODynamic=1,
    SLOStatic=0
} SpeechLoadOption;

typedef enum SpeechRuleState {
    SGDSActive=1,
    SGDSActiveUserDelimited=3,
    SGDSActiveWithAutoPause=2,
    SGDSInactive=0
} SpeechRuleState;

typedef struct ISpeechTextSelectionInformation ISpeechTextSelectionInformation, *PISpeechTextSelectionInformation;

typedef enum SpeechWordPronounceable {
    SWPKnownWordPronounceable=2,
    SWPUnknownWordPronounceable=1,
    SWPUnknownWordUnpronounceable=0
} SpeechWordPronounceable;

typedef struct ISpeechPhraseRulesVtbl ISpeechPhraseRulesVtbl, *PISpeechPhraseRulesVtbl;

typedef struct ISpeechPhrasePropertyVtbl ISpeechPhrasePropertyVtbl, *PISpeechPhrasePropertyVtbl;

typedef struct ISpeechPhraseElementVtbl ISpeechPhraseElementVtbl, *PISpeechPhraseElementVtbl;

typedef struct ISpeechPhraseReplacementVtbl ISpeechPhraseReplacementVtbl, *PISpeechPhraseReplacementVtbl;

typedef struct ISpeechRecognizerStatusVtbl ISpeechRecognizerStatusVtbl, *PISpeechRecognizerStatusVtbl;

typedef struct ISpeechVoiceStatusVtbl ISpeechVoiceStatusVtbl, *PISpeechVoiceStatusVtbl;

typedef enum SpeechRunState {
    SRSEDone=0,
    SRSEIsSpeaking=1
} SpeechRunState;

typedef struct ISpeechTextSelectionInformationVtbl ISpeechTextSelectionInformationVtbl, *PISpeechTextSelectionInformationVtbl;

struct ISpeechRecognizerStatusVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecognizerStatus *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecognizerStatus *);
    ULONG (* Release)(struct ISpeechRecognizerStatus *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecognizerStatus *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecognizerStatus *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecognizerStatus *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecognizerStatus *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_AudioStatus)(struct ISpeechRecognizerStatus *, struct ISpeechAudioStatus * *);
    HRESULT (* get_CurrentStreamPosition)(struct ISpeechRecognizerStatus *, VARIANT *);
    HRESULT (* get_CurrentStreamNumber)(struct ISpeechRecognizerStatus *, long *);
    HRESULT (* get_NumberOfActiveRules)(struct ISpeechRecognizerStatus *, long *);
    HRESULT (* get_ClsidEngine)(struct ISpeechRecognizerStatus *, BSTR *);
    HRESULT (* get_SupportedLanguages)(struct ISpeechRecognizerStatus *, VARIANT *);
};

struct ISpeechPhraseProperties {
    struct ISpeechPhrasePropertiesVtbl * lpVtbl;
};

struct ISpeechRecoResultTimesVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecoResultTimes *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecoResultTimes *);
    ULONG (* Release)(struct ISpeechRecoResultTimes *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecoResultTimes *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecoResultTimes *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecoResultTimes *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecoResultTimes *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_StreamTime)(struct ISpeechRecoResultTimes *, VARIANT *);
    HRESULT (* get_Length)(struct ISpeechRecoResultTimes *, VARIANT *);
    HRESULT (* get_TickCount)(struct ISpeechRecoResultTimes *, long *);
    HRESULT (* get_OffsetFromStart)(struct ISpeechRecoResultTimes *, VARIANT *);
};

struct ISpeechVoiceStatus {
    struct ISpeechVoiceStatusVtbl * lpVtbl;
};

struct ISpeechVoiceStatusVtbl {
    HRESULT (* QueryInterface)(struct ISpeechVoiceStatus *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechVoiceStatus *);
    ULONG (* Release)(struct ISpeechVoiceStatus *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechVoiceStatus *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechVoiceStatus *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechVoiceStatus *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechVoiceStatus *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_CurrentStreamNumber)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_LastStreamNumberQueued)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_LastHResult)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_RunningState)(struct ISpeechVoiceStatus *, enum SpeechRunState *);
    HRESULT (* get_InputWordPosition)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_InputWordLength)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_InputSentencePosition)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_InputSentenceLength)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_LastBookmark)(struct ISpeechVoiceStatus *, BSTR *);
    HRESULT (* get_LastBookmarkId)(struct ISpeechVoiceStatus *, long *);
    HRESULT (* get_PhonemeId)(struct ISpeechVoiceStatus *, short *);
    HRESULT (* get_VisemeId)(struct ISpeechVoiceStatus *, short *);
};

struct ISpeechPhraseAlternates {
    struct ISpeechPhraseAlternatesVtbl * lpVtbl;
};

struct ISpeechVoiceVtbl {
    HRESULT (* QueryInterface)(struct ISpeechVoice *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechVoice *);
    ULONG (* Release)(struct ISpeechVoice *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechVoice *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechVoice *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechVoice *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechVoice *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Status)(struct ISpeechVoice *, struct ISpeechVoiceStatus * *);
    HRESULT (* get_Voice)(struct ISpeechVoice *, struct ISpeechObjectToken * *);
    HRESULT (* putref_Voice)(struct ISpeechVoice *, struct ISpeechObjectToken *);
    HRESULT (* get_AudioOutput)(struct ISpeechVoice *, struct ISpeechObjectToken * *);
    HRESULT (* putref_AudioOutput)(struct ISpeechVoice *, struct ISpeechObjectToken *);
    HRESULT (* get_AudioOutputStream)(struct ISpeechVoice *, struct ISpeechBaseStream * *);
    HRESULT (* putref_AudioOutputStream)(struct ISpeechVoice *, struct ISpeechBaseStream *);
    HRESULT (* get_Rate)(struct ISpeechVoice *, long *);
    HRESULT (* put_Rate)(struct ISpeechVoice *, long);
    HRESULT (* get_Volume)(struct ISpeechVoice *, long *);
    HRESULT (* put_Volume)(struct ISpeechVoice *, long);
    HRESULT (* put_AllowAudioOutputFormatChangesOnNextSet)(struct ISpeechVoice *, VARIANT_BOOL);
    HRESULT (* get_AllowAudioOutputFormatChangesOnNextSet)(struct ISpeechVoice *, VARIANT_BOOL *);
    HRESULT (* get_EventInterests)(struct ISpeechVoice *, enum SpeechVoiceEvents *);
    HRESULT (* put_EventInterests)(struct ISpeechVoice *, enum SpeechVoiceEvents);
    HRESULT (* put_Priority)(struct ISpeechVoice *, enum SpeechVoicePriority);
    HRESULT (* get_Priority)(struct ISpeechVoice *, enum SpeechVoicePriority *);
    HRESULT (* put_AlertBoundary)(struct ISpeechVoice *, enum SpeechVoiceEvents);
    HRESULT (* get_AlertBoundary)(struct ISpeechVoice *, enum SpeechVoiceEvents *);
    HRESULT (* put_SynchronousSpeakTimeout)(struct ISpeechVoice *, long);
    HRESULT (* get_SynchronousSpeakTimeout)(struct ISpeechVoice *, long *);
    HRESULT (* Speak)(struct ISpeechVoice *, BSTR, enum SpeechVoiceSpeakFlags, long *);
    HRESULT (* SpeakStream)(struct ISpeechVoice *, struct ISpeechBaseStream *, enum SpeechVoiceSpeakFlags, long *);
    HRESULT (* Pause)(struct ISpeechVoice *);
    HRESULT (* Resume)(struct ISpeechVoice *);
    HRESULT (* Skip)(struct ISpeechVoice *, BSTR, long, long *);
    HRESULT (* GetVoices)(struct ISpeechVoice *, BSTR, BSTR, struct ISpeechObjectTokens * *);
    HRESULT (* GetAudioOutputs)(struct ISpeechVoice *, BSTR, BSTR, struct ISpeechObjectTokens * *);
    HRESULT (* WaitUntilDone)(struct ISpeechVoice *, long, VARIANT_BOOL *);
    HRESULT (* SpeakCompleteEvent)(struct ISpeechVoice *, long *);
    HRESULT (* IsUISupported)(struct ISpeechVoice *, BSTR, VARIANT *, VARIANT_BOOL *);
    HRESULT (* DisplayUI)(struct ISpeechVoice *, long, BSTR, BSTR, VARIANT *);
};

struct ISpeechPhraseReplacements {
    struct ISpeechPhraseReplacementsVtbl * lpVtbl;
};

struct ISpeechPhraseInfo {
    struct ISpeechPhraseInfoVtbl * lpVtbl;
};

struct ISpeechPhraseRules {
    struct ISpeechPhraseRulesVtbl * lpVtbl;
};

struct ISpeechPhraseElement {
    struct ISpeechPhraseElementVtbl * lpVtbl;
};

struct ISpeechTextSelectionInformation {
    struct ISpeechTextSelectionInformationVtbl * lpVtbl;
};

struct ISpeechPhraseRulesVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseRules *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseRules *);
    ULONG (* Release)(struct ISpeechPhraseRules *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseRules *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseRules *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseRules *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseRules *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechPhraseRules *, long *);
    HRESULT (* Item)(struct ISpeechPhraseRules *, long, struct ISpeechPhraseRule * *);
    HRESULT (* get__NewEnum)(struct ISpeechPhraseRules *, struct IUnknown * *);
};

struct ISpeechPhraseReplacement {
    struct ISpeechPhraseReplacementVtbl * lpVtbl;
};

struct ISpeechRecoGrammarVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecoGrammar *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecoGrammar *);
    ULONG (* Release)(struct ISpeechRecoGrammar *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecoGrammar *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecoGrammar *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecoGrammar *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecoGrammar *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Id)(struct ISpeechRecoGrammar *, VARIANT *);
    HRESULT (* get_RecoContext)(struct ISpeechRecoGrammar *, struct ISpeechRecoContext * *);
    HRESULT (* put_State)(struct ISpeechRecoGrammar *, enum SpeechGrammarState);
    HRESULT (* get_State)(struct ISpeechRecoGrammar *, enum SpeechGrammarState *);
    HRESULT (* get_Rules)(struct ISpeechRecoGrammar *, struct ISpeechGrammarRules * *);
    HRESULT (* Reset)(struct ISpeechRecoGrammar *, SpeechLanguageId);
    HRESULT (* CmdLoadFromFile)(struct ISpeechRecoGrammar *, BSTR, enum SpeechLoadOption);
    HRESULT (* CmdLoadFromObject)(struct ISpeechRecoGrammar *, BSTR, BSTR, enum SpeechLoadOption);
    HRESULT (* CmdLoadFromResource)(struct ISpeechRecoGrammar *, long, VARIANT, VARIANT, SpeechLanguageId, enum SpeechLoadOption);
    HRESULT (* CmdLoadFromMemory)(struct ISpeechRecoGrammar *, VARIANT, enum SpeechLoadOption);
    HRESULT (* CmdLoadFromProprietaryGrammar)(struct ISpeechRecoGrammar *, BSTR, BSTR, VARIANT, enum SpeechLoadOption);
    HRESULT (* CmdSetRuleState)(struct ISpeechRecoGrammar *, BSTR, enum SpeechRuleState);
    HRESULT (* CmdSetRuleIdState)(struct ISpeechRecoGrammar *, long, enum SpeechRuleState);
    HRESULT (* DictationLoad)(struct ISpeechRecoGrammar *, BSTR, enum SpeechLoadOption);
    HRESULT (* DictationUnload)(struct ISpeechRecoGrammar *);
    HRESULT (* DictationSetState)(struct ISpeechRecoGrammar *, enum SpeechRuleState);
    HRESULT (* SetWordSequenceData)(struct ISpeechRecoGrammar *, BSTR, long, struct ISpeechTextSelectionInformation *);
    HRESULT (* SetTextSelection)(struct ISpeechRecoGrammar *, struct ISpeechTextSelectionInformation *);
    HRESULT (* IsPronounceable)(struct ISpeechRecoGrammar *, BSTR, enum SpeechWordPronounceable *);
};

struct ISpeechPhraseRuleVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseRule *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseRule *);
    ULONG (* Release)(struct ISpeechPhraseRule *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseRule *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseRule *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseRule *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseRule *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Name)(struct ISpeechPhraseRule *, BSTR *);
    HRESULT (* get_Id)(struct ISpeechPhraseRule *, long *);
    HRESULT (* get_FirstElement)(struct ISpeechPhraseRule *, long *);
    HRESULT (* get_NumberOfElements)(struct ISpeechPhraseRule *, long *);
    HRESULT (* get_Parent)(struct ISpeechPhraseRule *, struct ISpeechPhraseRule * *);
    HRESULT (* get_Children)(struct ISpeechPhraseRule *, struct ISpeechPhraseRules * *);
    HRESULT (* get_Confidence)(struct ISpeechPhraseRule *, enum SpeechEngineConfidence *);
    HRESULT (* get_EngineConfidence)(struct ISpeechPhraseRule *, float *);
};

struct ISpeechVoice {
    struct ISpeechVoiceVtbl * lpVtbl;
};

struct ISpeechTextSelectionInformationVtbl {
    HRESULT (* QueryInterface)(struct ISpeechTextSelectionInformation *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechTextSelectionInformation *);
    ULONG (* Release)(struct ISpeechTextSelectionInformation *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechTextSelectionInformation *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechTextSelectionInformation *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechTextSelectionInformation *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechTextSelectionInformation *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* put_ActiveOffset)(struct ISpeechTextSelectionInformation *, long);
    HRESULT (* get_ActiveOffset)(struct ISpeechTextSelectionInformation *, long *);
    HRESULT (* put_ActiveLength)(struct ISpeechTextSelectionInformation *, long);
    HRESULT (* get_ActiveLength)(struct ISpeechTextSelectionInformation *, long *);
    HRESULT (* put_SelectionOffset)(struct ISpeechTextSelectionInformation *, long);
    HRESULT (* get_SelectionOffset)(struct ISpeechTextSelectionInformation *, long *);
    HRESULT (* put_SelectionLength)(struct ISpeechTextSelectionInformation *, long);
    HRESULT (* get_SelectionLength)(struct ISpeechTextSelectionInformation *, long *);
};

struct ISpeechPhraseReplacementsVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseReplacements *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseReplacements *);
    ULONG (* Release)(struct ISpeechPhraseReplacements *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseReplacements *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseReplacements *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseReplacements *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseReplacements *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechPhraseReplacements *, long *);
    HRESULT (* Item)(struct ISpeechPhraseReplacements *, long, struct ISpeechPhraseReplacement * *);
    HRESULT (* get__NewEnum)(struct ISpeechPhraseReplacements *, struct IUnknown * *);
};

struct ISpeechPhraseInfoVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseInfo *);
    ULONG (* Release)(struct ISpeechPhraseInfo *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseInfo *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseInfo *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseInfo *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseInfo *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_LanguageId)(struct ISpeechPhraseInfo *, long *);
    HRESULT (* get_GrammarId)(struct ISpeechPhraseInfo *, VARIANT *);
    HRESULT (* get_StartTime)(struct ISpeechPhraseInfo *, VARIANT *);
    HRESULT (* get_AudioStreamPosition)(struct ISpeechPhraseInfo *, VARIANT *);
    HRESULT (* get_AudioSizeBytes)(struct ISpeechPhraseInfo *, long *);
    HRESULT (* get_RetainedSizeBytes)(struct ISpeechPhraseInfo *, long *);
    HRESULT (* get_AudioSizeTime)(struct ISpeechPhraseInfo *, long *);
    HRESULT (* get_Rule)(struct ISpeechPhraseInfo *, struct ISpeechPhraseRule * *);
    HRESULT (* get_Properties)(struct ISpeechPhraseInfo *, struct ISpeechPhraseProperties * *);
    HRESULT (* get_Elements)(struct ISpeechPhraseInfo *, struct ISpeechPhraseElements * *);
    HRESULT (* get_Replacements)(struct ISpeechPhraseInfo *, struct ISpeechPhraseReplacements * *);
    HRESULT (* get_EngineId)(struct ISpeechPhraseInfo *, BSTR *);
    HRESULT (* get_EnginePrivateData)(struct ISpeechPhraseInfo *, VARIANT *);
    HRESULT (* SaveToMemory)(struct ISpeechPhraseInfo *, VARIANT *);
    HRESULT (* GetText)(struct ISpeechPhraseInfo *, long, long, VARIANT_BOOL, BSTR *);
    HRESULT (* GetDisplayAttributes)(struct ISpeechPhraseInfo *, long, long, VARIANT_BOOL, enum SpeechDisplayAttributes *);
};

struct ISpeechRecoGrammar {
    struct ISpeechRecoGrammarVtbl * lpVtbl;
};

struct ISpeechPhraseElements {
    struct ISpeechPhraseElementsVtbl * lpVtbl;
};

struct ISpeechRecognizerVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecognizer *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecognizer *);
    ULONG (* Release)(struct ISpeechRecognizer *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecognizer *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecognizer *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecognizer *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecognizer *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* putref_Recognizer)(struct ISpeechRecognizer *, struct ISpeechObjectToken *);
    HRESULT (* get_Recognizer)(struct ISpeechRecognizer *, struct ISpeechObjectToken * *);
    HRESULT (* put_AllowAudioInputFormatChangesOnNextSet)(struct ISpeechRecognizer *, VARIANT_BOOL);
    HRESULT (* get_AllowAudioInputFormatChangesOnNextSet)(struct ISpeechRecognizer *, VARIANT_BOOL *);
    HRESULT (* putref_AudioInput)(struct ISpeechRecognizer *, struct ISpeechObjectToken *);
    HRESULT (* get_AudioInput)(struct ISpeechRecognizer *, struct ISpeechObjectToken * *);
    HRESULT (* putref_AudioInputStream)(struct ISpeechRecognizer *, struct ISpeechBaseStream *);
    HRESULT (* get_AudioInputStream)(struct ISpeechRecognizer *, struct ISpeechBaseStream * *);
    HRESULT (* get_IsShared)(struct ISpeechRecognizer *, VARIANT_BOOL *);
    HRESULT (* put_State)(struct ISpeechRecognizer *, enum SpeechRecognizerState);
    HRESULT (* get_State)(struct ISpeechRecognizer *, enum SpeechRecognizerState *);
    HRESULT (* get_Status)(struct ISpeechRecognizer *, struct ISpeechRecognizerStatus * *);
    HRESULT (* putref_Profile)(struct ISpeechRecognizer *, struct ISpeechObjectToken *);
    HRESULT (* get_Profile)(struct ISpeechRecognizer *, struct ISpeechObjectToken * *);
    HRESULT (* EmulateRecognition)(struct ISpeechRecognizer *, VARIANT, VARIANT *, long);
    HRESULT (* CreateRecoContext)(struct ISpeechRecognizer *, struct ISpeechRecoContext * *);
    HRESULT (* GetFormat)(struct ISpeechRecognizer *, enum SpeechFormatType, struct ISpeechAudioFormat * *);
    HRESULT (* SetPropertyNumber)(struct ISpeechRecognizer *, BSTR, long, VARIANT_BOOL *);
    HRESULT (* GetPropertyNumber)(struct ISpeechRecognizer *, BSTR, long *, VARIANT_BOOL *);
    HRESULT (* SetPropertyString)(struct ISpeechRecognizer *, BSTR, BSTR, VARIANT_BOOL *);
    HRESULT (* GetPropertyString)(struct ISpeechRecognizer *, BSTR, BSTR *, VARIANT_BOOL *);
    HRESULT (* IsUISupported)(struct ISpeechRecognizer *, BSTR, VARIANT *, VARIANT_BOOL *);
    HRESULT (* DisplayUI)(struct ISpeechRecognizer *, long, BSTR, BSTR, VARIANT *);
    HRESULT (* GetRecognizers)(struct ISpeechRecognizer *, BSTR, BSTR, struct ISpeechObjectTokens * *);
    HRESULT (* GetAudioInputs)(struct ISpeechRecognizer *, BSTR, BSTR, struct ISpeechObjectTokens * *);
    HRESULT (* GetProfiles)(struct ISpeechRecognizer *, BSTR, BSTR, struct ISpeechObjectTokens * *);
};

struct ISpeechPhraseElementVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseElement *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseElement *);
    ULONG (* Release)(struct ISpeechPhraseElement *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseElement *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseElement *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseElement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseElement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_AudioTimeOffset)(struct ISpeechPhraseElement *, long *);
    HRESULT (* get_AudioSizeTime)(struct ISpeechPhraseElement *, long *);
    HRESULT (* get_AudioStreamOffset)(struct ISpeechPhraseElement *, long *);
    HRESULT (* get_AudioSizeBytes)(struct ISpeechPhraseElement *, long *);
    HRESULT (* get_RetainedStreamOffset)(struct ISpeechPhraseElement *, long *);
    HRESULT (* get_RetainedSizeBytes)(struct ISpeechPhraseElement *, long *);
    HRESULT (* get_DisplayText)(struct ISpeechPhraseElement *, BSTR *);
    HRESULT (* get_LexicalForm)(struct ISpeechPhraseElement *, BSTR *);
    HRESULT (* get_Pronunciation)(struct ISpeechPhraseElement *, VARIANT *);
    HRESULT (* get_DisplayAttributes)(struct ISpeechPhraseElement *, enum SpeechDisplayAttributes *);
    HRESULT (* get_RequiredConfidence)(struct ISpeechPhraseElement *, enum SpeechEngineConfidence *);
    HRESULT (* get_ActualConfidence)(struct ISpeechPhraseElement *, enum SpeechEngineConfidence *);
    HRESULT (* get_EngineConfidence)(struct ISpeechPhraseElement *, float *);
};

struct ISpeechPhraseAlternateVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseAlternate *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseAlternate *);
    ULONG (* Release)(struct ISpeechPhraseAlternate *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseAlternate *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseAlternate *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseAlternate *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseAlternate *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_RecoResult)(struct ISpeechPhraseAlternate *, struct ISpeechRecoResult * *);
    HRESULT (* get_StartElementInResult)(struct ISpeechPhraseAlternate *, long *);
    HRESULT (* get_NumberOfElementsInResult)(struct ISpeechPhraseAlternate *, long *);
    HRESULT (* get_PhraseInfo)(struct ISpeechPhraseAlternate *, struct ISpeechPhraseInfo * *);
    HRESULT (* Commit)(struct ISpeechPhraseAlternate *);
};

struct ISpeechPhraseAlternate {
    struct ISpeechPhraseAlternateVtbl * lpVtbl;
};

struct ISpeechRecoContextVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecoContext *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecoContext *);
    ULONG (* Release)(struct ISpeechRecoContext *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecoContext *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecoContext *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecoContext *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecoContext *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Recognizer)(struct ISpeechRecoContext *, struct ISpeechRecognizer * *);
    HRESULT (* get_AudioInputInterferenceStatus)(struct ISpeechRecoContext *, enum SpeechInterference *);
    HRESULT (* get_RequestedUIType)(struct ISpeechRecoContext *, BSTR *);
    HRESULT (* putref_Voice)(struct ISpeechRecoContext *, struct ISpeechVoice *);
    HRESULT (* get_Voice)(struct ISpeechRecoContext *, struct ISpeechVoice * *);
    HRESULT (* put_AllowVoiceFormatMatchingOnNextSet)(struct ISpeechRecoContext *, VARIANT_BOOL);
    HRESULT (* get_AllowVoiceFormatMatchingOnNextSet)(struct ISpeechRecoContext *, VARIANT_BOOL *);
    HRESULT (* put_VoicePurgeEvent)(struct ISpeechRecoContext *, enum SpeechRecoEvents);
    HRESULT (* get_VoicePurgeEvent)(struct ISpeechRecoContext *, enum SpeechRecoEvents *);
    HRESULT (* put_EventInterests)(struct ISpeechRecoContext *, enum SpeechRecoEvents);
    HRESULT (* get_EventInterests)(struct ISpeechRecoContext *, enum SpeechRecoEvents *);
    HRESULT (* put_CmdMaxAlternates)(struct ISpeechRecoContext *, long);
    HRESULT (* get_CmdMaxAlternates)(struct ISpeechRecoContext *, long *);
    HRESULT (* put_State)(struct ISpeechRecoContext *, enum SpeechRecoContextState);
    HRESULT (* get_State)(struct ISpeechRecoContext *, enum SpeechRecoContextState *);
    HRESULT (* put_RetainedAudio)(struct ISpeechRecoContext *, enum SpeechRetainedAudioOptions);
    HRESULT (* get_RetainedAudio)(struct ISpeechRecoContext *, enum SpeechRetainedAudioOptions *);
    HRESULT (* putref_RetainedAudioFormat)(struct ISpeechRecoContext *, struct ISpeechAudioFormat *);
    HRESULT (* get_RetainedAudioFormat)(struct ISpeechRecoContext *, struct ISpeechAudioFormat * *);
    HRESULT (* Pause)(struct ISpeechRecoContext *);
    HRESULT (* Resume)(struct ISpeechRecoContext *);
    HRESULT (* CreateGrammar)(struct ISpeechRecoContext *, VARIANT, struct ISpeechRecoGrammar * *);
    HRESULT (* CreateResultFromMemory)(struct ISpeechRecoContext *, VARIANT *, struct ISpeechRecoResult * *);
    HRESULT (* Bookmark)(struct ISpeechRecoContext *, enum SpeechBookmarkOptions, VARIANT, VARIANT);
    HRESULT (* SetAdaptationData)(struct ISpeechRecoContext *, BSTR);
};

struct ISpeechPhraseProperty {
    struct ISpeechPhrasePropertyVtbl * lpVtbl;
};

struct ISpeechRecoContext {
    struct ISpeechRecoContextVtbl * lpVtbl;
};

struct ISpeechPhrasePropertiesVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseProperties *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseProperties *);
    ULONG (* Release)(struct ISpeechPhraseProperties *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseProperties *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseProperties *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseProperties *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseProperties *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechPhraseProperties *, long *);
    HRESULT (* Item)(struct ISpeechPhraseProperties *, long, struct ISpeechPhraseProperty * *);
    HRESULT (* get__NewEnum)(struct ISpeechPhraseProperties *, struct IUnknown * *);
};

struct ISpeechPhrasePropertyVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseProperty *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseProperty *);
    ULONG (* Release)(struct ISpeechPhraseProperty *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseProperty *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseProperty *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseProperty *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseProperty *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Name)(struct ISpeechPhraseProperty *, BSTR *);
    HRESULT (* get_Id)(struct ISpeechPhraseProperty *, long *);
    HRESULT (* get_Value)(struct ISpeechPhraseProperty *, VARIANT *);
    HRESULT (* get_FirstElement)(struct ISpeechPhraseProperty *, long *);
    HRESULT (* get_NumberOfElements)(struct ISpeechPhraseProperty *, long *);
    HRESULT (* get_EngineConfidence)(struct ISpeechPhraseProperty *, float *);
    HRESULT (* get_Confidence)(struct ISpeechPhraseProperty *, enum SpeechEngineConfidence *);
    HRESULT (* get_Parent)(struct ISpeechPhraseProperty *, struct ISpeechPhraseProperty * *);
    HRESULT (* get_Children)(struct ISpeechPhraseProperty *, struct ISpeechPhraseProperties * *);
};

struct ISpeechRecoResult {
    struct ISpeechRecoResultVtbl * lpVtbl;
};

struct ISpeechRecognizerStatus {
    struct ISpeechRecognizerStatusVtbl * lpVtbl;
};

struct ISpeechPhraseReplacementVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseReplacement *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseReplacement *);
    ULONG (* Release)(struct ISpeechPhraseReplacement *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseReplacement *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseReplacement *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseReplacement *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseReplacement *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_DisplayAttributes)(struct ISpeechPhraseReplacement *, enum SpeechDisplayAttributes *);
    HRESULT (* get_Text)(struct ISpeechPhraseReplacement *, BSTR *);
    HRESULT (* get_FirstElement)(struct ISpeechPhraseReplacement *, long *);
    HRESULT (* get_NumberOfElements)(struct ISpeechPhraseReplacement *, long *);
};

struct ISpeechPhraseElementsVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseElements *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseElements *);
    ULONG (* Release)(struct ISpeechPhraseElements *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseElements *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseElements *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseElements *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseElements *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechPhraseElements *, long *);
    HRESULT (* Item)(struct ISpeechPhraseElements *, long, struct ISpeechPhraseElement * *);
    HRESULT (* get__NewEnum)(struct ISpeechPhraseElements *, struct IUnknown * *);
};

struct ISpeechRecognizer {
    struct ISpeechRecognizerVtbl * lpVtbl;
};

struct ISpeechPhraseAlternatesVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseAlternates *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseAlternates *);
    ULONG (* Release)(struct ISpeechPhraseAlternates *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseAlternates *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseAlternates *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseAlternates *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseAlternates *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct ISpeechPhraseAlternates *, long *);
    HRESULT (* Item)(struct ISpeechPhraseAlternates *, long, struct ISpeechPhraseAlternate * *);
    HRESULT (* get__NewEnum)(struct ISpeechPhraseAlternates *, struct IUnknown * *);
};

struct ISpeechRecoResultVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecoResult *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecoResult *);
    ULONG (* Release)(struct ISpeechRecoResult *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecoResult *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecoResult *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecoResult *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecoResult *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_RecoContext)(struct ISpeechRecoResult *, struct ISpeechRecoContext * *);
    HRESULT (* get_Times)(struct ISpeechRecoResult *, struct ISpeechRecoResultTimes * *);
    HRESULT (* putref_AudioFormat)(struct ISpeechRecoResult *, struct ISpeechAudioFormat *);
    HRESULT (* get_AudioFormat)(struct ISpeechRecoResult *, struct ISpeechAudioFormat * *);
    HRESULT (* get_PhraseInfo)(struct ISpeechRecoResult *, struct ISpeechPhraseInfo * *);
    HRESULT (* Alternates)(struct ISpeechRecoResult *, long, long, long, struct ISpeechPhraseAlternates * *);
    HRESULT (* Audio)(struct ISpeechRecoResult *, long, long, struct ISpeechMemoryStream * *);
    HRESULT (* SpeakAudio)(struct ISpeechRecoResult *, long, long, enum SpeechVoiceSpeakFlags, long *);
    HRESULT (* SaveToMemory)(struct ISpeechRecoResult *, VARIANT *);
    HRESULT (* DiscardResultInfo)(struct ISpeechRecoResult *, enum SpeechDiscardType);
};

struct ISpeechRecoResultTimes {
    struct ISpeechRecoResultTimesVtbl * lpVtbl;
};

struct ISpeechPhraseRule {
    struct ISpeechPhraseRuleVtbl * lpVtbl;
};

typedef struct ISpeechPhraseInfoBuilder ISpeechPhraseInfoBuilder, *PISpeechPhraseInfoBuilder;

typedef struct ISpeechPhraseInfoBuilderVtbl ISpeechPhraseInfoBuilderVtbl, *PISpeechPhraseInfoBuilderVtbl;

struct ISpeechPhraseInfoBuilder {
    struct ISpeechPhraseInfoBuilderVtbl * lpVtbl;
};

struct ISpeechPhraseInfoBuilderVtbl {
    HRESULT (* QueryInterface)(struct ISpeechPhraseInfoBuilder *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechPhraseInfoBuilder *);
    ULONG (* Release)(struct ISpeechPhraseInfoBuilder *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechPhraseInfoBuilder *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechPhraseInfoBuilder *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechPhraseInfoBuilder *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechPhraseInfoBuilder *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* RestorePhraseFromMemory)(struct ISpeechPhraseInfoBuilder *, VARIANT *, struct ISpeechPhraseInfo * *);
};

typedef struct ISpeechRecoResult2 ISpeechRecoResult2, *PISpeechRecoResult2;

typedef struct ISpeechRecoResult2Vtbl ISpeechRecoResult2Vtbl, *PISpeechRecoResult2Vtbl;

struct ISpeechRecoResult2 {
    struct ISpeechRecoResult2Vtbl * lpVtbl;
};

struct ISpeechRecoResult2Vtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecoResult2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecoResult2 *);
    ULONG (* Release)(struct ISpeechRecoResult2 *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecoResult2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecoResult2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecoResult2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecoResult2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_RecoContext)(struct ISpeechRecoResult2 *, struct ISpeechRecoContext * *);
    HRESULT (* get_Times)(struct ISpeechRecoResult2 *, struct ISpeechRecoResultTimes * *);
    HRESULT (* putref_AudioFormat)(struct ISpeechRecoResult2 *, struct ISpeechAudioFormat *);
    HRESULT (* get_AudioFormat)(struct ISpeechRecoResult2 *, struct ISpeechAudioFormat * *);
    HRESULT (* get_PhraseInfo)(struct ISpeechRecoResult2 *, struct ISpeechPhraseInfo * *);
    HRESULT (* Alternates)(struct ISpeechRecoResult2 *, long, long, long, struct ISpeechPhraseAlternates * *);
    HRESULT (* Audio)(struct ISpeechRecoResult2 *, long, long, struct ISpeechMemoryStream * *);
    HRESULT (* SpeakAudio)(struct ISpeechRecoResult2 *, long, long, enum SpeechVoiceSpeakFlags, long *);
    HRESULT (* SaveToMemory)(struct ISpeechRecoResult2 *, VARIANT *);
    HRESULT (* DiscardResultInfo)(struct ISpeechRecoResult2 *, enum SpeechDiscardType);
    HRESULT (* SetTextFeedback)(struct ISpeechRecoResult2 *, BSTR, VARIANT_BOOL);
};

typedef struct ISpeechRecoResultDispatch ISpeechRecoResultDispatch, *PISpeechRecoResultDispatch;

typedef struct ISpeechRecoResultDispatchVtbl ISpeechRecoResultDispatchVtbl, *PISpeechRecoResultDispatchVtbl;

typedef enum SPXMLRESULTOPTIONS {
    SPXRO_Alternates_SML=1,
    SPXRO_SML=0
} SPXMLRESULTOPTIONS;

struct ISpeechRecoResultDispatchVtbl {
    HRESULT (* QueryInterface)(struct ISpeechRecoResultDispatch *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechRecoResultDispatch *);
    ULONG (* Release)(struct ISpeechRecoResultDispatch *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechRecoResultDispatch *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechRecoResultDispatch *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechRecoResultDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechRecoResultDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_RecoContext)(struct ISpeechRecoResultDispatch *, struct ISpeechRecoContext * *);
    HRESULT (* get_Times)(struct ISpeechRecoResultDispatch *, struct ISpeechRecoResultTimes * *);
    HRESULT (* putref_AudioFormat)(struct ISpeechRecoResultDispatch *, struct ISpeechAudioFormat *);
    HRESULT (* get_AudioFormat)(struct ISpeechRecoResultDispatch *, struct ISpeechAudioFormat * *);
    HRESULT (* get_PhraseInfo)(struct ISpeechRecoResultDispatch *, struct ISpeechPhraseInfo * *);
    HRESULT (* Alternates)(struct ISpeechRecoResultDispatch *, long, long, long, struct ISpeechPhraseAlternates * *);
    HRESULT (* Audio)(struct ISpeechRecoResultDispatch *, long, long, struct ISpeechMemoryStream * *);
    HRESULT (* SpeakAudio)(struct ISpeechRecoResultDispatch *, long, long, enum SpeechVoiceSpeakFlags, long *);
    HRESULT (* SaveToMemory)(struct ISpeechRecoResultDispatch *, VARIANT *);
    HRESULT (* DiscardResultInfo)(struct ISpeechRecoResultDispatch *, enum SpeechDiscardType);
    HRESULT (* GetXMLResult)(struct ISpeechRecoResultDispatch *, enum SPXMLRESULTOPTIONS, BSTR *);
    HRESULT (* GetXMLErrorInfo)(struct ISpeechRecoResultDispatch *, long *, BSTR *, BSTR *, BSTR *, HRESULT *, VARIANT_BOOL *);
    HRESULT (* SetTextFeedback)(struct ISpeechRecoResultDispatch *, BSTR, VARIANT_BOOL);
};

struct ISpeechRecoResultDispatch {
    struct ISpeechRecoResultDispatchVtbl * lpVtbl;
};

typedef struct ISpeechResourceLoader ISpeechResourceLoader, *PISpeechResourceLoader;

typedef struct ISpeechResourceLoaderVtbl ISpeechResourceLoaderVtbl, *PISpeechResourceLoaderVtbl;

struct ISpeechResourceLoader {
    struct ISpeechResourceLoaderVtbl * lpVtbl;
};

struct ISpeechResourceLoaderVtbl {
    HRESULT (* QueryInterface)(struct ISpeechResourceLoader *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechResourceLoader *);
    ULONG (* Release)(struct ISpeechResourceLoader *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechResourceLoader *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechResourceLoader *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechResourceLoader *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechResourceLoader *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* LoadResource)(struct ISpeechResourceLoader *, BSTR, VARIANT_BOOL, struct IUnknown * *, BSTR *, VARIANT_BOOL *, BSTR *);
    HRESULT (* GetLocalCopy)(struct ISpeechResourceLoader *, BSTR, BSTR *, BSTR *, BSTR *);
    HRESULT (* ReleaseLocalCopy)(struct ISpeechResourceLoader *, BSTR);
};

typedef struct ISpeechXMLRecoResult ISpeechXMLRecoResult, *PISpeechXMLRecoResult;

typedef struct ISpeechXMLRecoResultVtbl ISpeechXMLRecoResultVtbl, *PISpeechXMLRecoResultVtbl;

struct ISpeechXMLRecoResultVtbl {
    HRESULT (* QueryInterface)(struct ISpeechXMLRecoResult *, IID *, void * *);
    ULONG (* AddRef)(struct ISpeechXMLRecoResult *);
    ULONG (* Release)(struct ISpeechXMLRecoResult *);
    HRESULT (* GetTypeInfoCount)(struct ISpeechXMLRecoResult *, UINT *);
    HRESULT (* GetTypeInfo)(struct ISpeechXMLRecoResult *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct ISpeechXMLRecoResult *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct ISpeechXMLRecoResult *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_RecoContext)(struct ISpeechXMLRecoResult *, struct ISpeechRecoContext * *);
    HRESULT (* get_Times)(struct ISpeechXMLRecoResult *, struct ISpeechRecoResultTimes * *);
    HRESULT (* putref_AudioFormat)(struct ISpeechXMLRecoResult *, struct ISpeechAudioFormat *);
    HRESULT (* get_AudioFormat)(struct ISpeechXMLRecoResult *, struct ISpeechAudioFormat * *);
    HRESULT (* get_PhraseInfo)(struct ISpeechXMLRecoResult *, struct ISpeechPhraseInfo * *);
    HRESULT (* Alternates)(struct ISpeechXMLRecoResult *, long, long, long, struct ISpeechPhraseAlternates * *);
    HRESULT (* Audio)(struct ISpeechXMLRecoResult *, long, long, struct ISpeechMemoryStream * *);
    HRESULT (* SpeakAudio)(struct ISpeechXMLRecoResult *, long, long, enum SpeechVoiceSpeakFlags, long *);
    HRESULT (* SaveToMemory)(struct ISpeechXMLRecoResult *, VARIANT *);
    HRESULT (* DiscardResultInfo)(struct ISpeechXMLRecoResult *, enum SpeechDiscardType);
    HRESULT (* GetXMLResult)(struct ISpeechXMLRecoResult *, enum SPXMLRESULTOPTIONS, BSTR *);
    HRESULT (* GetXMLErrorInfo)(struct ISpeechXMLRecoResult *, long *, BSTR *, BSTR *, BSTR *, long *, VARIANT_BOOL *);
};

struct ISpeechXMLRecoResult {
    struct ISpeechXMLRecoResultVtbl * lpVtbl;
};

typedef struct ISpEnginePronunciation ISpEnginePronunciation, *PISpEnginePronunciation;

typedef struct ISpEnginePronunciationVtbl ISpEnginePronunciationVtbl, *PISpEnginePronunciationVtbl;

typedef struct SPNORMALIZATIONLIST SPNORMALIZATIONLIST, *PSPNORMALIZATIONLIST;

struct SPNORMALIZATIONLIST {
    ULONG ulSize;
    WCHAR * * ppszzNormalizedList;
};

struct ISpEnginePronunciation {
    struct ISpEnginePronunciationVtbl * lpVtbl;
};

struct ISpEnginePronunciationVtbl {
    HRESULT (* QueryInterface)(struct ISpEnginePronunciation *, IID *, void * *);
    ULONG (* AddRef)(struct ISpEnginePronunciation *);
    ULONG (* Release)(struct ISpEnginePronunciation *);
    HRESULT (* Normalize)(struct ISpEnginePronunciation *, LPCWSTR, LPCWSTR, LPCWSTR, WORD, struct SPNORMALIZATIONLIST *);
    HRESULT (* GetPronunciations)(struct ISpEnginePronunciation *, LPCWSTR, LPCWSTR, LPCWSTR, WORD, struct SPWORDPRONUNCIATIONLIST *);
};

typedef struct ISpEventSink ISpEventSink, *PISpEventSink;

typedef struct ISpEventSinkVtbl ISpEventSinkVtbl, *PISpEventSinkVtbl;

typedef struct SPEVENT SPEVENT, *PSPEVENT;

struct SPEVENT {
    union anon__struct_7271_bitfield_1 field_0x0;
    union anon__struct_7271_bitfield_2 field_0x4;
    ULONG ulStreamNum;
    ULONGLONG ullAudioStreamOffset;
    WPARAM wParam;
    LPARAM lParam;
};

struct ISpEventSink {
    struct ISpEventSinkVtbl * lpVtbl;
};

struct ISpEventSinkVtbl {
    HRESULT (* QueryInterface)(struct ISpEventSink *, IID *, void * *);
    ULONG (* AddRef)(struct ISpEventSink *);
    ULONG (* Release)(struct ISpEventSink *);
    HRESULT (* AddEvents)(struct ISpEventSink *, struct SPEVENT *, ULONG);
    HRESULT (* GetEventInterest)(struct ISpEventSink *, ULONGLONG *);
};

typedef struct ISpEventSource ISpEventSource, *PISpEventSource;

typedef struct ISpEventSourceVtbl ISpEventSourceVtbl, *PISpEventSourceVtbl;

typedef struct ISpNotifySink ISpNotifySink, *PISpNotifySink;

typedef void (SPNOTIFYCALLBACK)(WPARAM, LPARAM);

typedef void * ISpNotifyCallback;

typedef struct SPEVENTSOURCEINFO SPEVENTSOURCEINFO, *PSPEVENTSOURCEINFO;

typedef struct ISpNotifySinkVtbl ISpNotifySinkVtbl, *PISpNotifySinkVtbl;

struct ISpEventSourceVtbl {
    HRESULT (* QueryInterface)(struct ISpEventSource *, IID *, void * *);
    ULONG (* AddRef)(struct ISpEventSource *);
    ULONG (* Release)(struct ISpEventSource *);
    HRESULT (* SetNotifySink)(struct ISpEventSource *, struct ISpNotifySink *);
    HRESULT (* SetNotifyWindowMessage)(struct ISpEventSource *, HWND, UINT, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackFunction)(struct ISpEventSource *, SPNOTIFYCALLBACK *, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackInterface)(struct ISpEventSource *, ISpNotifyCallback *, WPARAM, LPARAM);
    HRESULT (* SetNotifyWin32Event)(struct ISpEventSource *);
    HRESULT (* WaitForNotifyEvent)(struct ISpEventSource *, DWORD);
    HANDLE (* GetNotifyEventHandle)(struct ISpEventSource *);
    HRESULT (* SetInterest)(struct ISpEventSource *, ULONGLONG, ULONGLONG);
    HRESULT (* GetEvents)(struct ISpEventSource *, ULONG, struct SPEVENT *, ULONG *);
    HRESULT (* GetInfo)(struct ISpEventSource *, struct SPEVENTSOURCEINFO *);
};

struct ISpNotifySink {
    struct ISpNotifySinkVtbl * lpVtbl;
};

struct ISpEventSource {
    struct ISpEventSourceVtbl * lpVtbl;
};

struct SPEVENTSOURCEINFO {
    ULONGLONG ullEventInterest;
    ULONGLONG ullQueuedInterest;
    ULONG ulCount;
};

struct ISpNotifySinkVtbl {
    HRESULT (* QueryInterface)(struct ISpNotifySink *, IID *, void * *);
    ULONG (* AddRef)(struct ISpNotifySink *);
    ULONG (* Release)(struct ISpNotifySink *);
    HRESULT (* Notify)(struct ISpNotifySink *);
};

typedef struct ISpEventSource2 ISpEventSource2, *PISpEventSource2;

typedef struct ISpEventSource2Vtbl ISpEventSource2Vtbl, *PISpEventSource2Vtbl;

typedef struct SPEVENTEX SPEVENTEX, *PSPEVENTEX;

struct ISpEventSource2Vtbl {
    HRESULT (* QueryInterface)(struct ISpEventSource2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpEventSource2 *);
    ULONG (* Release)(struct ISpEventSource2 *);
    HRESULT (* SetNotifySink)(struct ISpEventSource2 *, struct ISpNotifySink *);
    HRESULT (* SetNotifyWindowMessage)(struct ISpEventSource2 *, HWND, UINT, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackFunction)(struct ISpEventSource2 *, SPNOTIFYCALLBACK *, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackInterface)(struct ISpEventSource2 *, ISpNotifyCallback *, WPARAM, LPARAM);
    HRESULT (* SetNotifyWin32Event)(struct ISpEventSource2 *);
    HRESULT (* WaitForNotifyEvent)(struct ISpEventSource2 *, DWORD);
    HANDLE (* GetNotifyEventHandle)(struct ISpEventSource2 *);
    HRESULT (* SetInterest)(struct ISpEventSource2 *, ULONGLONG, ULONGLONG);
    HRESULT (* GetEvents)(struct ISpEventSource2 *, ULONG, struct SPEVENT *, ULONG *);
    HRESULT (* GetInfo)(struct ISpEventSource2 *, struct SPEVENTSOURCEINFO *);
    HRESULT (* GetEventsEx)(struct ISpEventSource2 *, ULONG, struct SPEVENTEX *, ULONG *);
};

struct ISpEventSource2 {
    struct ISpEventSource2Vtbl * lpVtbl;
};

struct SPEVENTEX {
    union anon__struct_7274_bitfield_1 field_0x0;
    union anon__struct_7274_bitfield_2 field_0x4;
    ULONG ulStreamNum;
    ULONGLONG ullAudioStreamOffset;
    WPARAM wParam;
    LPARAM lParam;
    ULONGLONG ullAudioTimeOffset;
};

typedef struct ISpGrammarBuilder ISpGrammarBuilder, *PISpGrammarBuilder;

typedef struct ISpGrammarBuilderVtbl ISpGrammarBuilderVtbl, *PISpGrammarBuilderVtbl;

typedef struct SPSTATEHANDLE__ SPSTATEHANDLE__, *PSPSTATEHANDLE__;

typedef struct SPSTATEHANDLE__ * SPSTATEHANDLE;

typedef enum SPGRAMMARWORDTYPE {
    SPWT_DISPLAY=0,
    SPWT_LEXICAL=1,
    SPWT_LEXICAL_NO_SPECIAL_CHARS=3,
    SPWT_PRONUNCIATION=2
} SPGRAMMARWORDTYPE;

typedef struct tagSPPROPERTYINFO tagSPPROPERTYINFO, *PtagSPPROPERTYINFO;

typedef struct tagSPPROPERTYINFO SPPROPERTYINFO;

struct ISpGrammarBuilder {
    struct ISpGrammarBuilderVtbl * lpVtbl;
};

struct SPSTATEHANDLE__ {
    int unused;
};

struct ISpGrammarBuilderVtbl {
    HRESULT (* QueryInterface)(struct ISpGrammarBuilder *, IID *, void * *);
    ULONG (* AddRef)(struct ISpGrammarBuilder *);
    ULONG (* Release)(struct ISpGrammarBuilder *);
    HRESULT (* ResetGrammar)(struct ISpGrammarBuilder *, WORD);
    HRESULT (* GetRule)(struct ISpGrammarBuilder *, LPCWSTR, DWORD, DWORD, BOOL, SPSTATEHANDLE *);
    HRESULT (* ClearRule)(struct ISpGrammarBuilder *, SPSTATEHANDLE);
    HRESULT (* CreateNewState)(struct ISpGrammarBuilder *, SPSTATEHANDLE, SPSTATEHANDLE *);
    HRESULT (* AddWordTransition)(struct ISpGrammarBuilder *, SPSTATEHANDLE, SPSTATEHANDLE, LPCWSTR, LPCWSTR, enum SPGRAMMARWORDTYPE, float, SPPROPERTYINFO *);
    HRESULT (* AddRuleTransition)(struct ISpGrammarBuilder *, SPSTATEHANDLE, SPSTATEHANDLE, SPSTATEHANDLE, float, SPPROPERTYINFO *);
    HRESULT (* AddResource)(struct ISpGrammarBuilder *, SPSTATEHANDLE, LPCWSTR, LPCWSTR);
    HRESULT (* Commit)(struct ISpGrammarBuilder *, DWORD);
};

struct tagSPPROPERTYINFO {
    LPCWSTR pszName;
    ULONG ulId;
    LPCWSTR pszValue;
    VARIANT vValue;
};

typedef struct ISpGrammarBuilder2 ISpGrammarBuilder2, *PISpGrammarBuilder2;

typedef struct ISpGrammarBuilder2Vtbl ISpGrammarBuilder2Vtbl, *PISpGrammarBuilder2Vtbl;

typedef enum SPMATCHINGMODE {
    AllWords=0,
    OrderedSubset=3,
    OrderedSubsetContentRequired=7,
    Subsequence=1,
    SubsequenceContentRequired=5
} SPMATCHINGMODE;

typedef enum PHONETICALPHABET {
    PA_Ipa=0,
    PA_Sapi=2,
    PA_Ups=1
} PHONETICALPHABET;

struct ISpGrammarBuilder2Vtbl {
    HRESULT (* QueryInterface)(struct ISpGrammarBuilder2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpGrammarBuilder2 *);
    ULONG (* Release)(struct ISpGrammarBuilder2 *);
    HRESULT (* AddTextSubset)(struct ISpGrammarBuilder2 *, SPSTATEHANDLE, SPSTATEHANDLE, LPCWSTR, enum SPMATCHINGMODE);
    HRESULT (* SetPhoneticAlphabet)(struct ISpGrammarBuilder2 *, enum PHONETICALPHABET);
};

struct ISpGrammarBuilder2 {
    struct ISpGrammarBuilder2Vtbl * lpVtbl;
};

typedef struct ISpMMSysAudio ISpMMSysAudio, *PISpMMSysAudio;

typedef struct ISpMMSysAudioVtbl ISpMMSysAudioVtbl, *PISpMMSysAudioVtbl;

struct ISpMMSysAudio {
    struct ISpMMSysAudioVtbl * lpVtbl;
};

struct ISpMMSysAudioVtbl {
    HRESULT (* QueryInterface)(struct ISpMMSysAudio *, IID *, void * *);
    ULONG (* AddRef)(struct ISpMMSysAudio *);
    ULONG (* Release)(struct ISpMMSysAudio *);
    HRESULT (* Read)(struct ISpMMSysAudio *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct ISpMMSysAudio *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct ISpMMSysAudio *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct ISpMMSysAudio *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct ISpMMSysAudio *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct ISpMMSysAudio *, DWORD);
    HRESULT (* Revert)(struct ISpMMSysAudio *);
    HRESULT (* LockRegion)(struct ISpMMSysAudio *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct ISpMMSysAudio *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct ISpMMSysAudio *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct ISpMMSysAudio *, struct IStream * *);
    HRESULT (* GetFormat)(struct ISpMMSysAudio *, GUID *, WAVEFORMATEX * *);
    HRESULT (* SetState)(struct ISpMMSysAudio *, SPAUDIOSTATE, ULONGLONG);
    HRESULT (* SetFormat)(struct ISpMMSysAudio *, GUID *, WAVEFORMATEX *);
    HRESULT (* GetStatus)(struct ISpMMSysAudio *, struct SPAUDIOSTATUS *);
    HRESULT (* SetBufferInfo)(struct ISpMMSysAudio *, struct SPAUDIOBUFFERINFO *);
    HRESULT (* GetBufferInfo)(struct ISpMMSysAudio *, struct SPAUDIOBUFFERINFO *);
    HRESULT (* GetDefaultFormat)(struct ISpMMSysAudio *, GUID *, WAVEFORMATEX * *);
    HANDLE (* EventHandle)(struct ISpMMSysAudio *);
    HRESULT (* GetVolumeLevel)(struct ISpMMSysAudio *, ULONG *);
    HRESULT (* SetVolumeLevel)(struct ISpMMSysAudio *, ULONG);
    HRESULT (* GetBufferNotifySize)(struct ISpMMSysAudio *, ULONG *);
    HRESULT (* SetBufferNotifySize)(struct ISpMMSysAudio *, ULONG);
    HRESULT (* GetDeviceId)(struct ISpMMSysAudio *, UINT *);
    HRESULT (* SetDeviceId)(struct ISpMMSysAudio *, UINT);
    HRESULT (* GetMMHandle)(struct ISpMMSysAudio *, void * *);
    HRESULT (* GetLineId)(struct ISpMMSysAudio *, UINT *);
    HRESULT (* SetLineId)(struct ISpMMSysAudio *, UINT);
};

typedef struct ISpNotifySource ISpNotifySource, *PISpNotifySource;

typedef struct ISpNotifySourceVtbl ISpNotifySourceVtbl, *PISpNotifySourceVtbl;

struct ISpNotifySource {
    struct ISpNotifySourceVtbl * lpVtbl;
};

struct ISpNotifySourceVtbl {
    HRESULT (* QueryInterface)(struct ISpNotifySource *, IID *, void * *);
    ULONG (* AddRef)(struct ISpNotifySource *);
    ULONG (* Release)(struct ISpNotifySource *);
    HRESULT (* SetNotifySink)(struct ISpNotifySource *, struct ISpNotifySink *);
    HRESULT (* SetNotifyWindowMessage)(struct ISpNotifySource *, HWND, UINT, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackFunction)(struct ISpNotifySource *, SPNOTIFYCALLBACK *, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackInterface)(struct ISpNotifySource *, ISpNotifyCallback *, WPARAM, LPARAM);
    HRESULT (* SetNotifyWin32Event)(struct ISpNotifySource *);
    HRESULT (* WaitForNotifyEvent)(struct ISpNotifySource *, DWORD);
    HANDLE (* GetNotifyEventHandle)(struct ISpNotifySource *);
};

typedef struct ISpNotifyTranslator ISpNotifyTranslator, *PISpNotifyTranslator;

typedef struct ISpNotifyTranslatorVtbl ISpNotifyTranslatorVtbl, *PISpNotifyTranslatorVtbl;

struct ISpNotifyTranslatorVtbl {
    HRESULT (* QueryInterface)(struct ISpNotifyTranslator *, IID *, void * *);
    ULONG (* AddRef)(struct ISpNotifyTranslator *);
    ULONG (* Release)(struct ISpNotifyTranslator *);
    HRESULT (* Notify)(struct ISpNotifyTranslator *);
    HRESULT (* InitWindowMessage)(struct ISpNotifyTranslator *, HWND, UINT, WPARAM, LPARAM);
    HRESULT (* InitCallback)(struct ISpNotifyTranslator *, SPNOTIFYCALLBACK *, WPARAM, LPARAM);
    HRESULT (* InitSpNotifyCallback)(struct ISpNotifyTranslator *, ISpNotifyCallback *, WPARAM, LPARAM);
    HRESULT (* InitWin32Event)(struct ISpNotifyTranslator *, HANDLE, BOOL);
    HRESULT (* Wait)(struct ISpNotifyTranslator *, DWORD);
    HANDLE (* GetEventHandle)(struct ISpNotifyTranslator *);
};

struct ISpNotifyTranslator {
    struct ISpNotifyTranslatorVtbl * lpVtbl;
};

typedef struct ISpObjectTokenInit ISpObjectTokenInit, *PISpObjectTokenInit;

typedef struct ISpObjectTokenInitVtbl ISpObjectTokenInitVtbl, *PISpObjectTokenInitVtbl;

struct ISpObjectTokenInit {
    struct ISpObjectTokenInitVtbl * lpVtbl;
};

struct ISpObjectTokenInitVtbl {
    HRESULT (* QueryInterface)(struct ISpObjectTokenInit *, IID *, void * *);
    ULONG (* AddRef)(struct ISpObjectTokenInit *);
    ULONG (* Release)(struct ISpObjectTokenInit *);
    HRESULT (* SetData)(struct ISpObjectTokenInit *, LPCWSTR, ULONG, BYTE *);
    HRESULT (* GetData)(struct ISpObjectTokenInit *, LPCWSTR, ULONG *, BYTE *);
    HRESULT (* SetStringValue)(struct ISpObjectTokenInit *, LPCWSTR, LPCWSTR);
    HRESULT (* GetStringValue)(struct ISpObjectTokenInit *, LPCWSTR, LPWSTR *);
    HRESULT (* SetDWORD)(struct ISpObjectTokenInit *, LPCWSTR, DWORD);
    HRESULT (* GetDWORD)(struct ISpObjectTokenInit *, LPCWSTR, DWORD *);
    HRESULT (* OpenKey)(struct ISpObjectTokenInit *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* CreateKey)(struct ISpObjectTokenInit *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* DeleteKey)(struct ISpObjectTokenInit *, LPCWSTR);
    HRESULT (* DeleteValue)(struct ISpObjectTokenInit *, LPCWSTR);
    HRESULT (* EnumKeys)(struct ISpObjectTokenInit *, ULONG, LPWSTR *);
    HRESULT (* EnumValues)(struct ISpObjectTokenInit *, ULONG, LPWSTR *);
    HRESULT (* SetId)(struct ISpObjectTokenInit *, LPCWSTR, LPCWSTR, BOOL);
    HRESULT (* GetId)(struct ISpObjectTokenInit *, LPWSTR *);
    HRESULT (* GetCategory)(struct ISpObjectTokenInit *, struct ISpObjectTokenCategory * *);
    HRESULT (* CreateInstance)(struct ISpObjectTokenInit *, struct IUnknown *, DWORD, IID *, void * *);
    HRESULT (* GetStorageFileName)(struct ISpObjectTokenInit *, IID *, LPCWSTR, LPCWSTR, ULONG, LPWSTR *);
    HRESULT (* RemoveStorageFileName)(struct ISpObjectTokenInit *, IID *, LPCWSTR, BOOL);
    HRESULT (* Remove)(struct ISpObjectTokenInit *, CLSID *);
    HRESULT (* IsUISupported)(struct ISpObjectTokenInit *, LPCWSTR, void *, ULONG, struct IUnknown *, BOOL *);
    HRESULT (* DisplayUI)(struct ISpObjectTokenInit *, HWND, LPCWSTR, LPCWSTR, void *, ULONG, struct IUnknown *);
    HRESULT (* MatchesAttributes)(struct ISpObjectTokenInit *, LPCWSTR, BOOL *);
    HRESULT (* InitFromDataKey)(struct ISpObjectTokenInit *, LPCWSTR, LPCWSTR, struct ISpDataKey *);
};

typedef struct ISpObjectWithToken ISpObjectWithToken, *PISpObjectWithToken;

typedef struct ISpObjectWithTokenVtbl ISpObjectWithTokenVtbl, *PISpObjectWithTokenVtbl;

struct ISpObjectWithToken {
    struct ISpObjectWithTokenVtbl * lpVtbl;
};

struct ISpObjectWithTokenVtbl {
    HRESULT (* QueryInterface)(struct ISpObjectWithToken *, IID *, void * *);
    ULONG (* AddRef)(struct ISpObjectWithToken *);
    ULONG (* Release)(struct ISpObjectWithToken *);
    HRESULT (* SetObjectToken)(struct ISpObjectWithToken *, struct ISpObjectToken *);
    HRESULT (* GetObjectToken)(struct ISpObjectWithToken *, struct ISpObjectToken * *);
};

typedef struct ISpPhoneConverter ISpPhoneConverter, *PISpPhoneConverter;

typedef struct ISpPhoneConverterVtbl ISpPhoneConverterVtbl, *PISpPhoneConverterVtbl;

struct ISpPhoneConverter {
    struct ISpPhoneConverterVtbl * lpVtbl;
};

struct ISpPhoneConverterVtbl {
    HRESULT (* QueryInterface)(struct ISpPhoneConverter *, IID *, void * *);
    ULONG (* AddRef)(struct ISpPhoneConverter *);
    ULONG (* Release)(struct ISpPhoneConverter *);
    HRESULT (* SetObjectToken)(struct ISpPhoneConverter *, struct ISpObjectToken *);
    HRESULT (* GetObjectToken)(struct ISpPhoneConverter *, struct ISpObjectToken * *);
    HRESULT (* PhoneToId)(struct ISpPhoneConverter *, LPCWSTR, SPPHONEID *);
    HRESULT (* IdToPhone)(struct ISpPhoneConverter *, PCSPPHONEID, WCHAR *);
};

typedef struct ISpPhoneticAlphabetConverter ISpPhoneticAlphabetConverter, *PISpPhoneticAlphabetConverter;

typedef struct ISpPhoneticAlphabetConverterVtbl ISpPhoneticAlphabetConverterVtbl, *PISpPhoneticAlphabetConverterVtbl;

struct ISpPhoneticAlphabetConverterVtbl {
    HRESULT (* QueryInterface)(struct ISpPhoneticAlphabetConverter *, IID *, void * *);
    ULONG (* AddRef)(struct ISpPhoneticAlphabetConverter *);
    ULONG (* Release)(struct ISpPhoneticAlphabetConverter *);
    HRESULT (* GetLangId)(struct ISpPhoneticAlphabetConverter *, WORD *);
    HRESULT (* SetLangId)(struct ISpPhoneticAlphabetConverter *, WORD);
    HRESULT (* SAPI2UPS)(struct ISpPhoneticAlphabetConverter *, SPPHONEID *, SPPHONEID *, DWORD);
    HRESULT (* UPS2SAPI)(struct ISpPhoneticAlphabetConverter *, SPPHONEID *, SPPHONEID *, DWORD);
    HRESULT (* GetMaxConvertLength)(struct ISpPhoneticAlphabetConverter *, DWORD, BOOL, DWORD *);
};

struct ISpPhoneticAlphabetConverter {
    struct ISpPhoneticAlphabetConverterVtbl * lpVtbl;
};

typedef struct ISpPhoneticAlphabetSelection ISpPhoneticAlphabetSelection, *PISpPhoneticAlphabetSelection;

typedef struct ISpPhoneticAlphabetSelectionVtbl ISpPhoneticAlphabetSelectionVtbl, *PISpPhoneticAlphabetSelectionVtbl;

struct ISpPhoneticAlphabetSelection {
    struct ISpPhoneticAlphabetSelectionVtbl * lpVtbl;
};

struct ISpPhoneticAlphabetSelectionVtbl {
    HRESULT (* QueryInterface)(struct ISpPhoneticAlphabetSelection *, IID *, void * *);
    ULONG (* AddRef)(struct ISpPhoneticAlphabetSelection *);
    ULONG (* Release)(struct ISpPhoneticAlphabetSelection *);
    HRESULT (* IsAlphabetUPS)(struct ISpPhoneticAlphabetSelection *, BOOL *);
    HRESULT (* SetAlphabetToUPS)(struct ISpPhoneticAlphabetSelection *, BOOL);
};

typedef struct ISpPhrase ISpPhrase, *PISpPhrase;

typedef struct ISpPhraseVtbl ISpPhraseVtbl, *PISpPhraseVtbl;

typedef struct SPPHRASE SPPHRASE, *PSPPHRASE;

typedef struct SPSERIALIZEDPHRASE SPSERIALIZEDPHRASE, *PSPSERIALIZEDPHRASE;

typedef struct SPPHRASERULE SPPHRASERULE, *PSPPHRASERULE;

typedef struct SPPHRASEPROPERTY SPPHRASEPROPERTY, *PSPPHRASEPROPERTY;

typedef struct SPPHRASEELEMENT SPPHRASEELEMENT, *PSPPHRASEELEMENT;

typedef struct SPPHRASEREPLACEMENT SPPHRASEREPLACEMENT, *PSPPHRASEREPLACEMENT;

typedef struct SPSEMANTICERRORINFO SPSEMANTICERRORINFO, *PSPSEMANTICERRORINFO;

typedef enum SPSEMANTICFORMAT {
    SPSMF_SAPI_PROPERTIES=0,
    SPSMF_SRGS_SAPIPROPERTIES=2,
    SPSMF_SRGS_SEMANTICINTERPRETATION_MS=1,
    SPSMF_SRGS_SEMANTICINTERPRETATION_W3C=8,
    SPSMF_UPS=4
} SPSEMANTICFORMAT;

struct SPPHRASERULE {
    LPCWSTR pszName;
    ULONG ulId;
    ULONG ulFirstElement;
    ULONG ulCountOfElements;
    struct SPPHRASERULE * pNextSibling;
    struct SPPHRASERULE * pFirstChild;
    float SREngineConfidence;
    char Confidence;
};

struct SPPHRASE {
    ULONG cbSize;
    WORD LangID;
    WORD wHomophoneGroupId;
    ULONGLONG ullGrammarID;
    ULONGLONG ftStartTime;
    ULONGLONG ullAudioStreamPosition;
    ULONG ulAudioSizeBytes;
    ULONG ulRetainedSizeBytes;
    ULONG ulAudioSizeTime;
    struct SPPHRASERULE Rule;
    struct SPPHRASEPROPERTY * pProperties;
    struct SPPHRASEELEMENT * pElements;
    ULONG cReplacements;
    struct SPPHRASEREPLACEMENT * pReplacements;
    GUID SREngineID;
    ULONG ulSREnginePrivateDataSize;
    BYTE * pSREnginePrivateData;
    LPWSTR pSML;
    struct SPSEMANTICERRORINFO * pSemanticErrorInfo;
    enum SPSEMANTICFORMAT SemanticTagFormat;
};

struct SPPHRASEELEMENT {
    ULONG ulAudioTimeOffset;
    ULONG ulAudioSizeTime;
    ULONG ulAudioStreamOffset;
    ULONG ulAudioSizeBytes;
    ULONG ulRetainedStreamOffset;
    ULONG ulRetainedSizeBytes;
    LPCWSTR pszDisplayText;
    LPCWSTR pszLexicalForm;
    SPPHONEID * pszPronunciation;
    BYTE bDisplayAttributes;
    char RequiredConfidence;
    char ActualConfidence;
    BYTE Reserved;
    float SREngineConfidence;
};

struct SPPHRASEPROPERTY {
    LPCWSTR pszName;
    union _union_7310 field_0x4;
    LPCWSTR pszValue;
    VARIANT vValue;
    ULONG ulFirstElement;
    ULONG ulCountOfElements;
    struct SPPHRASEPROPERTY * pNextSibling;
    struct SPPHRASEPROPERTY * pFirstChild;
    float SREngineConfidence;
    char Confidence;
};

struct SPSEMANTICERRORINFO {
    ULONG ulLineNumber;
    LPWSTR pszScriptLine;
    LPWSTR pszSource;
    LPWSTR pszDescription;
    HRESULT hrResultCode;
};

struct SPSERIALIZEDPHRASE {
    ULONG ulSerializedSize;
};

struct ISpPhrase {
    struct ISpPhraseVtbl * lpVtbl;
};

struct SPPHRASEREPLACEMENT {
    BYTE bDisplayAttributes;
    LPCWSTR pszReplacementText;
    ULONG ulFirstElement;
    ULONG ulCountOfElements;
};

struct ISpPhraseVtbl {
    HRESULT (* QueryInterface)(struct ISpPhrase *, IID *, void * *);
    ULONG (* AddRef)(struct ISpPhrase *);
    ULONG (* Release)(struct ISpPhrase *);
    HRESULT (* GetPhrase)(struct ISpPhrase *, struct SPPHRASE * *);
    HRESULT (* GetSerializedPhrase)(struct ISpPhrase *, struct SPSERIALIZEDPHRASE * *);
    HRESULT (* GetText)(struct ISpPhrase *, ULONG, ULONG, BOOL, LPWSTR *, BYTE *);
    HRESULT (* Discard)(struct ISpPhrase *, DWORD);
};

typedef struct ISpPhrase2 ISpPhrase2, *PISpPhrase2;

typedef struct ISpPhrase2Vtbl ISpPhrase2Vtbl, *PISpPhrase2Vtbl;

typedef struct ISpStreamFormat ISpStreamFormat, *PISpStreamFormat;

typedef struct ISpStreamFormatVtbl ISpStreamFormatVtbl, *PISpStreamFormatVtbl;

struct ISpStreamFormatVtbl {
    HRESULT (* QueryInterface)(struct ISpStreamFormat *, IID *, void * *);
    ULONG (* AddRef)(struct ISpStreamFormat *);
    ULONG (* Release)(struct ISpStreamFormat *);
    HRESULT (* Read)(struct ISpStreamFormat *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct ISpStreamFormat *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct ISpStreamFormat *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct ISpStreamFormat *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct ISpStreamFormat *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct ISpStreamFormat *, DWORD);
    HRESULT (* Revert)(struct ISpStreamFormat *);
    HRESULT (* LockRegion)(struct ISpStreamFormat *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct ISpStreamFormat *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct ISpStreamFormat *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct ISpStreamFormat *, struct IStream * *);
    HRESULT (* GetFormat)(struct ISpStreamFormat *, GUID *, WAVEFORMATEX * *);
};

struct ISpPhrase2Vtbl {
    HRESULT (* QueryInterface)(struct ISpPhrase2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpPhrase2 *);
    ULONG (* Release)(struct ISpPhrase2 *);
    HRESULT (* GetPhrase)(struct ISpPhrase2 *, struct SPPHRASE * *);
    HRESULT (* GetSerializedPhrase)(struct ISpPhrase2 *, struct SPSERIALIZEDPHRASE * *);
    HRESULT (* GetText)(struct ISpPhrase2 *, ULONG, ULONG, BOOL, LPWSTR *, BYTE *);
    HRESULT (* Discard)(struct ISpPhrase2 *, DWORD);
    HRESULT (* GetXMLResult)(struct ISpPhrase2 *, LPWSTR *, enum SPXMLRESULTOPTIONS);
    HRESULT (* GetXMLErrorInfo)(struct ISpPhrase2 *, struct SPSEMANTICERRORINFO *);
    HRESULT (* GetAudio)(struct ISpPhrase2 *, ULONG, ULONG, struct ISpStreamFormat * *);
};

struct ISpStreamFormat {
    struct ISpStreamFormatVtbl * lpVtbl;
};

struct ISpPhrase2 {
    struct ISpPhrase2Vtbl * lpVtbl;
};

typedef struct ISpPhraseAlt ISpPhraseAlt, *PISpPhraseAlt;

typedef struct ISpPhraseAltVtbl ISpPhraseAltVtbl, *PISpPhraseAltVtbl;

struct ISpPhraseAlt {
    struct ISpPhraseAltVtbl * lpVtbl;
};

struct ISpPhraseAltVtbl {
    HRESULT (* QueryInterface)(struct ISpPhraseAlt *, IID *, void * *);
    ULONG (* AddRef)(struct ISpPhraseAlt *);
    ULONG (* Release)(struct ISpPhraseAlt *);
    HRESULT (* GetPhrase)(struct ISpPhraseAlt *, struct SPPHRASE * *);
    HRESULT (* GetSerializedPhrase)(struct ISpPhraseAlt *, struct SPSERIALIZEDPHRASE * *);
    HRESULT (* GetText)(struct ISpPhraseAlt *, ULONG, ULONG, BOOL, LPWSTR *, BYTE *);
    HRESULT (* Discard)(struct ISpPhraseAlt *, DWORD);
    HRESULT (* GetAltInfo)(struct ISpPhraseAlt *, struct ISpPhrase * *, ULONG *, ULONG *, ULONG *);
    HRESULT (* Commit)(struct ISpPhraseAlt *);
};

typedef struct ISpProperties ISpProperties, *PISpProperties;

typedef struct ISpPropertiesVtbl ISpPropertiesVtbl, *PISpPropertiesVtbl;

struct ISpPropertiesVtbl {
    HRESULT (* QueryInterface)(struct ISpProperties *, IID *, void * *);
    ULONG (* AddRef)(struct ISpProperties *);
    ULONG (* Release)(struct ISpProperties *);
    HRESULT (* SetPropertyNum)(struct ISpProperties *, LPCWSTR, LONG);
    HRESULT (* GetPropertyNum)(struct ISpProperties *, LPCWSTR, LONG *);
    HRESULT (* SetPropertyString)(struct ISpProperties *, LPCWSTR, LPCWSTR);
    HRESULT (* GetPropertyString)(struct ISpProperties *, LPCWSTR, LPWSTR *);
};

struct ISpProperties {
    struct ISpPropertiesVtbl * lpVtbl;
};

typedef struct ISpRecoCategory ISpRecoCategory, *PISpRecoCategory;

typedef struct ISpRecoCategoryVtbl ISpRecoCategoryVtbl, *PISpRecoCategoryVtbl;

typedef enum SPCATEGORYTYPE {
    SPCT_COMMAND=0,
    SPCT_DICTATION=1,
    SPCT_SLEEP=2,
    SPCT_SUB_COMMAND=3,
    SPCT_SUB_DICTATION=4
} SPCATEGORYTYPE;

struct ISpRecoCategoryVtbl {
    HRESULT (* QueryInterface)(struct ISpRecoCategory *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoCategory *);
    ULONG (* Release)(struct ISpRecoCategory *);
    HRESULT (* GetType)(struct ISpRecoCategory *, enum SPCATEGORYTYPE *);
};

struct ISpRecoCategory {
    struct ISpRecoCategoryVtbl * lpVtbl;
};

typedef struct ISpRecoContext ISpRecoContext, *PISpRecoContext;

typedef struct ISpRecoContextVtbl ISpRecoContextVtbl, *PISpRecoContextVtbl;

typedef struct ISpRecognizer ISpRecognizer, *PISpRecognizer;

typedef struct ISpRecoGrammar ISpRecoGrammar, *PISpRecoGrammar;

typedef struct SPRECOCONTEXTSTATUS SPRECOCONTEXTSTATUS, *PSPRECOCONTEXTSTATUS;

typedef enum SPAUDIOOPTIONS {
    SPAO_NONE=0,
    SPAO_RETAIN_AUDIO=1
} SPAUDIOOPTIONS;

typedef struct SPSERIALIZEDRESULT SPSERIALIZEDRESULT, *PSPSERIALIZEDRESULT;

typedef struct ISpRecoResult ISpRecoResult, *PISpRecoResult;

typedef enum SPBOOKMARKOPTIONS {
    SPBO_AHEAD=2,
    SPBO_NONE=0,
    SPBO_PAUSE=1,
    SPBO_TIME_UNITS=4
} SPBOOKMARKOPTIONS;

typedef struct ISpVoice ISpVoice, *PISpVoice;

typedef enum SPCONTEXTSTATE {
    SPCS_DISABLED=0,
    SPCS_ENABLED=1
} SPCONTEXTSTATE;

typedef struct ISpRecognizerVtbl ISpRecognizerVtbl, *PISpRecognizerVtbl;

typedef enum SPRECOSTATE {
    SPRST_ACTIVE=1,
    SPRST_ACTIVE_ALWAYS=2,
    SPRST_INACTIVE=0,
    SPRST_INACTIVE_WITH_PURGE=3,
    SPRST_NUM_STATES=4
} SPRECOSTATE;

typedef struct SPRECOGNIZERSTATUS SPRECOGNIZERSTATUS, *PSPRECOGNIZERSTATUS;

typedef enum SPWAVEFORMATTYPE {
    SPWF_INPUT=0,
    SPWF_SRENGINE=1
} SPWAVEFORMATTYPE;

typedef enum SPWAVEFORMATTYPE SPSTREAMFORMATTYPE;

typedef struct ISpRecoGrammarVtbl ISpRecoGrammarVtbl, *PISpRecoGrammarVtbl;

typedef enum SPLOADOPTIONS {
    SPLO_DYNAMIC=1,
    SPLO_STATIC=0
} SPLOADOPTIONS;

typedef struct SPBINARYGRAMMAR SPBINARYGRAMMAR, *PSPBINARYGRAMMAR;

typedef enum SPRULESTATE {
    SPRS_ACTIVE=1,
    SPRS_ACTIVE_USER_DELIMITED=4,
    SPRS_ACTIVE_WITH_AUTO_PAUSE=3,
    SPRS_INACTIVE=0
} SPRULESTATE;

typedef struct tagSPTEXTSELECTIONINFO tagSPTEXTSELECTIONINFO, *PtagSPTEXTSELECTIONINFO;

typedef struct tagSPTEXTSELECTIONINFO SPTEXTSELECTIONINFO;

typedef enum SPWORDPRONOUNCEABLE {
    SPWP_KNOWN_WORD_PRONOUNCEABLE=2,
    SPWP_UNKNOWN_WORD_PRONOUNCEABLE=1,
    SPWP_UNKNOWN_WORD_UNPRONOUNCEABLE=0
} SPWORDPRONOUNCEABLE;

typedef enum SPGRAMMARSTATE {
    SPGS_DISABLED=0,
    SPGS_ENABLED=1,
    SPGS_EXCLUSIVE=3
} SPGRAMMARSTATE;

typedef enum SPINTERFERENCE {
    SPINTERFERENCE_NOISE=1,
    SPINTERFERENCE_NONE=0,
    SPINTERFERENCE_NOSIGNAL=2,
    SPINTERFERENCE_TOOFAST=5,
    SPINTERFERENCE_TOOLOUD=3,
    SPINTERFERENCE_TOOQUIET=4,
    SPINTERFERENCE_TOOSLOW=6
} SPINTERFERENCE;

typedef struct ISpRecoResultVtbl ISpRecoResultVtbl, *PISpRecoResultVtbl;

typedef struct SPRECORESULTTIMES SPRECORESULTTIMES, *PSPRECORESULTTIMES;

typedef struct ISpVoiceVtbl ISpVoiceVtbl, *PISpVoiceVtbl;

typedef struct SPVOICESTATUS SPVOICESTATUS, *PSPVOICESTATUS;

typedef enum SPVPRIORITY {
    SPVPRI_ALERT=1,
    SPVPRI_NORMAL=0,
    SPVPRI_OVER=2
} SPVPRIORITY;

typedef enum SPVISEMES {
    SP_VISEME_0=0,
    SP_VISEME_1=1,
    SP_VISEME_10=10,
    SP_VISEME_11=11,
    SP_VISEME_12=12,
    SP_VISEME_13=13,
    SP_VISEME_14=14,
    SP_VISEME_15=15,
    SP_VISEME_16=16,
    SP_VISEME_17=17,
    SP_VISEME_18=18,
    SP_VISEME_19=19,
    SP_VISEME_2=2,
    SP_VISEME_20=20,
    SP_VISEME_21=21,
    SP_VISEME_3=3,
    SP_VISEME_4=4,
    SP_VISEME_5=5,
    SP_VISEME_6=6,
    SP_VISEME_7=7,
    SP_VISEME_8=8,
    SP_VISEME_9=9
} SPVISEMES;

struct SPBINARYGRAMMAR {
    ULONG ulTotalSerializedSize;
};

struct tagSPTEXTSELECTIONINFO {
    ULONG ulStartActiveOffset;
    ULONG cchActiveChars;
    ULONG ulStartSelection;
    ULONG cchSelection;
};

struct SPRECOGNIZERSTATUS {
    struct SPAUDIOSTATUS AudioStatus;
    ULONGLONG ullRecognitionStreamPos;
    ULONG ulStreamNumber;
    ULONG ulNumActive;
    CLSID clsidEngine;
    ULONG cLangIDs;
    WORD aLangID[20];
    ULONGLONG ullRecognitionStreamTime;
};

struct SPSERIALIZEDRESULT {
    ULONG ulSerializedSize;
};

struct ISpRecognizerVtbl {
    HRESULT (* QueryInterface)(struct ISpRecognizer *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecognizer *);
    ULONG (* Release)(struct ISpRecognizer *);
    HRESULT (* SetPropertyNum)(struct ISpRecognizer *, LPCWSTR, LONG);
    HRESULT (* GetPropertyNum)(struct ISpRecognizer *, LPCWSTR, LONG *);
    HRESULT (* SetPropertyString)(struct ISpRecognizer *, LPCWSTR, LPCWSTR);
    HRESULT (* GetPropertyString)(struct ISpRecognizer *, LPCWSTR, LPWSTR *);
    HRESULT (* SetRecognizer)(struct ISpRecognizer *, struct ISpObjectToken *);
    HRESULT (* GetRecognizer)(struct ISpRecognizer *, struct ISpObjectToken * *);
    HRESULT (* SetInput)(struct ISpRecognizer *, struct IUnknown *, BOOL);
    HRESULT (* GetInputObjectToken)(struct ISpRecognizer *, struct ISpObjectToken * *);
    HRESULT (* GetInputStream)(struct ISpRecognizer *, struct ISpStreamFormat * *);
    HRESULT (* CreateRecoContext)(struct ISpRecognizer *, struct ISpRecoContext * *);
    HRESULT (* GetRecoProfile)(struct ISpRecognizer *, struct ISpObjectToken * *);
    HRESULT (* SetRecoProfile)(struct ISpRecognizer *, struct ISpObjectToken *);
    HRESULT (* IsSharedInstance)(struct ISpRecognizer *);
    HRESULT (* GetRecoState)(struct ISpRecognizer *, enum SPRECOSTATE *);
    HRESULT (* SetRecoState)(struct ISpRecognizer *, enum SPRECOSTATE);
    HRESULT (* GetStatus)(struct ISpRecognizer *, struct SPRECOGNIZERSTATUS *);
    HRESULT (* GetFormat)(struct ISpRecognizer *, SPSTREAMFORMATTYPE, GUID *, WAVEFORMATEX * *);
    HRESULT (* IsUISupported)(struct ISpRecognizer *, LPCWSTR, void *, ULONG, BOOL *);
    HRESULT (* DisplayUI)(struct ISpRecognizer *, HWND, LPCWSTR, LPCWSTR, void *, ULONG);
    HRESULT (* EmulateRecognition)(struct ISpRecognizer *, struct ISpPhrase *);
};

struct ISpRecoGrammar {
    struct ISpRecoGrammarVtbl * lpVtbl;
};

struct ISpVoiceVtbl {
    HRESULT (* QueryInterface)(struct ISpVoice *, IID *, void * *);
    ULONG (* AddRef)(struct ISpVoice *);
    ULONG (* Release)(struct ISpVoice *);
    HRESULT (* SetNotifySink)(struct ISpVoice *, struct ISpNotifySink *);
    HRESULT (* SetNotifyWindowMessage)(struct ISpVoice *, HWND, UINT, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackFunction)(struct ISpVoice *, SPNOTIFYCALLBACK *, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackInterface)(struct ISpVoice *, ISpNotifyCallback *, WPARAM, LPARAM);
    HRESULT (* SetNotifyWin32Event)(struct ISpVoice *);
    HRESULT (* WaitForNotifyEvent)(struct ISpVoice *, DWORD);
    HANDLE (* GetNotifyEventHandle)(struct ISpVoice *);
    HRESULT (* SetInterest)(struct ISpVoice *, ULONGLONG, ULONGLONG);
    HRESULT (* GetEvents)(struct ISpVoice *, ULONG, struct SPEVENT *, ULONG *);
    HRESULT (* GetInfo)(struct ISpVoice *, struct SPEVENTSOURCEINFO *);
    HRESULT (* SetOutput)(struct ISpVoice *, struct IUnknown *, BOOL);
    HRESULT (* GetOutputObjectToken)(struct ISpVoice *, struct ISpObjectToken * *);
    HRESULT (* GetOutputStream)(struct ISpVoice *, struct ISpStreamFormat * *);
    HRESULT (* Pause)(struct ISpVoice *);
    HRESULT (* Resume)(struct ISpVoice *);
    HRESULT (* SetVoice)(struct ISpVoice *, struct ISpObjectToken *);
    HRESULT (* GetVoice)(struct ISpVoice *, struct ISpObjectToken * *);
    HRESULT (* Speak)(struct ISpVoice *, LPCWSTR, DWORD, ULONG *);
    HRESULT (* SpeakStream)(struct ISpVoice *, struct IStream *, DWORD, ULONG *);
    HRESULT (* GetStatus)(struct ISpVoice *, struct SPVOICESTATUS *, LPWSTR *);
    HRESULT (* Skip)(struct ISpVoice *, LPCWSTR, long, ULONG *);
    HRESULT (* SetPriority)(struct ISpVoice *, enum SPVPRIORITY);
    HRESULT (* GetPriority)(struct ISpVoice *, enum SPVPRIORITY *);
    HRESULT (* SetAlertBoundary)(struct ISpVoice *, enum SPEVENTENUM);
    HRESULT (* GetAlertBoundary)(struct ISpVoice *, enum SPEVENTENUM *);
    HRESULT (* SetRate)(struct ISpVoice *, long);
    HRESULT (* GetRate)(struct ISpVoice *, long *);
    HRESULT (* SetVolume)(struct ISpVoice *, USHORT);
    HRESULT (* GetVolume)(struct ISpVoice *, USHORT *);
    HRESULT (* WaitUntilDone)(struct ISpVoice *, ULONG);
    HRESULT (* SetSyncSpeakTimeout)(struct ISpVoice *, ULONG);
    HRESULT (* GetSyncSpeakTimeout)(struct ISpVoice *, ULONG *);
    HANDLE (* SpeakCompleteEvent)(struct ISpVoice *);
    HRESULT (* IsUISupported)(struct ISpVoice *, LPCWSTR, void *, ULONG, BOOL *);
    HRESULT (* DisplayUI)(struct ISpVoice *, HWND, LPCWSTR, LPCWSTR, void *, ULONG);
};

struct SPRECOCONTEXTSTATUS {
    enum SPINTERFERENCE eInterference;
    WCHAR szRequestTypeOfUI[255];
    DWORD dwReserved1;
    DWORD dwReserved2;
};

struct ISpRecoContextVtbl {
    HRESULT (* QueryInterface)(struct ISpRecoContext *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoContext *);
    ULONG (* Release)(struct ISpRecoContext *);
    HRESULT (* SetNotifySink)(struct ISpRecoContext *, struct ISpNotifySink *);
    HRESULT (* SetNotifyWindowMessage)(struct ISpRecoContext *, HWND, UINT, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackFunction)(struct ISpRecoContext *, SPNOTIFYCALLBACK *, WPARAM, LPARAM);
    HRESULT (* SetNotifyCallbackInterface)(struct ISpRecoContext *, ISpNotifyCallback *, WPARAM, LPARAM);
    HRESULT (* SetNotifyWin32Event)(struct ISpRecoContext *);
    HRESULT (* WaitForNotifyEvent)(struct ISpRecoContext *, DWORD);
    HANDLE (* GetNotifyEventHandle)(struct ISpRecoContext *);
    HRESULT (* SetInterest)(struct ISpRecoContext *, ULONGLONG, ULONGLONG);
    HRESULT (* GetEvents)(struct ISpRecoContext *, ULONG, struct SPEVENT *, ULONG *);
    HRESULT (* GetInfo)(struct ISpRecoContext *, struct SPEVENTSOURCEINFO *);
    HRESULT (* GetRecognizer)(struct ISpRecoContext *, struct ISpRecognizer * *);
    HRESULT (* CreateGrammar)(struct ISpRecoContext *, ULONGLONG, struct ISpRecoGrammar * *);
    HRESULT (* GetStatus)(struct ISpRecoContext *, struct SPRECOCONTEXTSTATUS *);
    HRESULT (* GetMaxAlternates)(struct ISpRecoContext *, ULONG *);
    HRESULT (* SetMaxAlternates)(struct ISpRecoContext *, ULONG);
    HRESULT (* SetAudioOptions)(struct ISpRecoContext *, enum SPAUDIOOPTIONS, GUID *, WAVEFORMATEX *);
    HRESULT (* GetAudioOptions)(struct ISpRecoContext *, enum SPAUDIOOPTIONS *, GUID *, WAVEFORMATEX * *);
    HRESULT (* DeserializeResult)(struct ISpRecoContext *, struct SPSERIALIZEDRESULT *, struct ISpRecoResult * *);
    HRESULT (* Bookmark)(struct ISpRecoContext *, enum SPBOOKMARKOPTIONS, ULONGLONG, LPARAM);
    HRESULT (* SetAdaptationData)(struct ISpRecoContext *, LPCWSTR, ULONG);
    HRESULT (* Pause)(struct ISpRecoContext *, DWORD);
    HRESULT (* Resume)(struct ISpRecoContext *, DWORD);
    HRESULT (* SetVoice)(struct ISpRecoContext *, struct ISpVoice *, BOOL);
    HRESULT (* GetVoice)(struct ISpRecoContext *, struct ISpVoice * *);
    HRESULT (* SetVoicePurgeEvent)(struct ISpRecoContext *, ULONGLONG);
    HRESULT (* GetVoicePurgeEvent)(struct ISpRecoContext *, ULONGLONG *);
    HRESULT (* SetContextState)(struct ISpRecoContext *, enum SPCONTEXTSTATE);
    HRESULT (* GetContextState)(struct ISpRecoContext *, enum SPCONTEXTSTATE *);
};

struct SPVOICESTATUS {
    ULONG ulCurrentStream;
    ULONG ulLastStreamQueued;
    HRESULT hrLastResult;
    DWORD dwRunningState;
    ULONG ulInputWordPos;
    ULONG ulInputWordLen;
    ULONG ulInputSentPos;
    ULONG ulInputSentLen;
    LONG lBookmarkId;
    SPPHONEID PhonemeId;
    enum SPVISEMES VisemeId;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

struct ISpRecoContext {
    struct ISpRecoContextVtbl * lpVtbl;
};

struct ISpVoice {
    struct ISpVoiceVtbl * lpVtbl;
};

struct ISpRecoResultVtbl {
    HRESULT (* QueryInterface)(struct ISpRecoResult *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoResult *);
    ULONG (* Release)(struct ISpRecoResult *);
    HRESULT (* GetPhrase)(struct ISpRecoResult *, struct SPPHRASE * *);
    HRESULT (* GetSerializedPhrase)(struct ISpRecoResult *, struct SPSERIALIZEDPHRASE * *);
    HRESULT (* GetText)(struct ISpRecoResult *, ULONG, ULONG, BOOL, LPWSTR *, BYTE *);
    HRESULT (* Discard)(struct ISpRecoResult *, DWORD);
    HRESULT (* GetResultTimes)(struct ISpRecoResult *, struct SPRECORESULTTIMES *);
    HRESULT (* GetAlternates)(struct ISpRecoResult *, ULONG, ULONG, ULONG, struct ISpPhraseAlt * *, ULONG *);
    HRESULT (* GetAudio)(struct ISpRecoResult *, ULONG, ULONG, struct ISpStreamFormat * *);
    HRESULT (* SpeakAudio)(struct ISpRecoResult *, ULONG, ULONG, DWORD, ULONG *);
    HRESULT (* Serialize)(struct ISpRecoResult *, struct SPSERIALIZEDRESULT * *);
    HRESULT (* ScaleAudio)(struct ISpRecoResult *, GUID *, WAVEFORMATEX *);
    HRESULT (* GetRecoContext)(struct ISpRecoResult *, struct ISpRecoContext * *);
};

struct ISpRecoResult {
    struct ISpRecoResultVtbl * lpVtbl;
};

struct SPRECORESULTTIMES {
    FILETIME ftStreamTime;
    ULONGLONG ullLength;
    DWORD dwTickCount;
    ULONGLONG ullStart;
};

struct ISpRecoGrammarVtbl {
    HRESULT (* QueryInterface)(struct ISpRecoGrammar *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoGrammar *);
    ULONG (* Release)(struct ISpRecoGrammar *);
    HRESULT (* ResetGrammar)(struct ISpRecoGrammar *, WORD);
    HRESULT (* GetRule)(struct ISpRecoGrammar *, LPCWSTR, DWORD, DWORD, BOOL, SPSTATEHANDLE *);
    HRESULT (* ClearRule)(struct ISpRecoGrammar *, SPSTATEHANDLE);
    HRESULT (* CreateNewState)(struct ISpRecoGrammar *, SPSTATEHANDLE, SPSTATEHANDLE *);
    HRESULT (* AddWordTransition)(struct ISpRecoGrammar *, SPSTATEHANDLE, SPSTATEHANDLE, LPCWSTR, LPCWSTR, enum SPGRAMMARWORDTYPE, float, SPPROPERTYINFO *);
    HRESULT (* AddRuleTransition)(struct ISpRecoGrammar *, SPSTATEHANDLE, SPSTATEHANDLE, SPSTATEHANDLE, float, SPPROPERTYINFO *);
    HRESULT (* AddResource)(struct ISpRecoGrammar *, SPSTATEHANDLE, LPCWSTR, LPCWSTR);
    HRESULT (* Commit)(struct ISpRecoGrammar *, DWORD);
    HRESULT (* GetGrammarId)(struct ISpRecoGrammar *, ULONGLONG *);
    HRESULT (* GetRecoContext)(struct ISpRecoGrammar *, struct ISpRecoContext * *);
    HRESULT (* LoadCmdFromFile)(struct ISpRecoGrammar *, LPCWSTR, enum SPLOADOPTIONS);
    HRESULT (* LoadCmdFromObject)(struct ISpRecoGrammar *, IID *, LPCWSTR, enum SPLOADOPTIONS);
    HRESULT (* LoadCmdFromResource)(struct ISpRecoGrammar *, HMODULE, LPCWSTR, LPCWSTR, WORD, enum SPLOADOPTIONS);
    HRESULT (* LoadCmdFromMemory)(struct ISpRecoGrammar *, struct SPBINARYGRAMMAR *, enum SPLOADOPTIONS);
    HRESULT (* LoadCmdFromProprietaryGrammar)(struct ISpRecoGrammar *, GUID *, LPCWSTR, void *, ULONG, enum SPLOADOPTIONS);
    HRESULT (* SetRuleState)(struct ISpRecoGrammar *, LPCWSTR, void *, enum SPRULESTATE);
    HRESULT (* SetRuleIdState)(struct ISpRecoGrammar *, ULONG, enum SPRULESTATE);
    HRESULT (* LoadDictation)(struct ISpRecoGrammar *, LPCWSTR, enum SPLOADOPTIONS);
    HRESULT (* UnloadDictation)(struct ISpRecoGrammar *);
    HRESULT (* SetDictationState)(struct ISpRecoGrammar *, enum SPRULESTATE);
    HRESULT (* SetWordSequenceData)(struct ISpRecoGrammar *, WCHAR *, ULONG, SPTEXTSELECTIONINFO *);
    HRESULT (* SetTextSelection)(struct ISpRecoGrammar *, SPTEXTSELECTIONINFO *);
    HRESULT (* IsPronounceable)(struct ISpRecoGrammar *, LPCWSTR, enum SPWORDPRONOUNCEABLE *);
    HRESULT (* SetGrammarState)(struct ISpRecoGrammar *, enum SPGRAMMARSTATE);
    HRESULT (* SaveCmd)(struct ISpRecoGrammar *, struct IStream *, LPWSTR *);
    HRESULT (* GetGrammarState)(struct ISpRecoGrammar *, enum SPGRAMMARSTATE *);
};

struct ISpRecognizer {
    struct ISpRecognizerVtbl * lpVtbl;
};

typedef struct ISpRecoContext2 ISpRecoContext2, *PISpRecoContext2;

typedef struct ISpRecoContext2Vtbl ISpRecoContext2Vtbl, *PISpRecoContext2Vtbl;

typedef enum SPADAPTATIONRELEVANCE {
    SPAR_High=3,
    SPAR_Low=1,
    SPAR_Medium=2,
    SPAR_Unknown=0
} SPADAPTATIONRELEVANCE;

struct ISpRecoContext2 {
    struct ISpRecoContext2Vtbl * lpVtbl;
};

struct ISpRecoContext2Vtbl {
    HRESULT (* QueryInterface)(struct ISpRecoContext2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoContext2 *);
    ULONG (* Release)(struct ISpRecoContext2 *);
    HRESULT (* SetGrammarOptions)(struct ISpRecoContext2 *, DWORD);
    HRESULT (* GetGrammarOptions)(struct ISpRecoContext2 *, DWORD *);
    HRESULT (* SetAdaptationData2)(struct ISpRecoContext2 *, LPCWSTR, ULONG, LPCWSTR, DWORD, enum SPADAPTATIONRELEVANCE);
};

typedef struct ISpRecognizer2 ISpRecognizer2, *PISpRecognizer2;

typedef struct ISpRecognizer2Vtbl ISpRecognizer2Vtbl, *PISpRecognizer2Vtbl;

struct ISpRecognizer2Vtbl {
    HRESULT (* QueryInterface)(struct ISpRecognizer2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecognizer2 *);
    ULONG (* Release)(struct ISpRecognizer2 *);
    HRESULT (* EmulateRecognitionEx)(struct ISpRecognizer2 *, struct ISpPhrase *, DWORD);
    HRESULT (* SetTrainingState)(struct ISpRecognizer2 *, BOOL, BOOL);
    HRESULT (* ResetAcousticModelAdaptation)(struct ISpRecognizer2 *);
};

struct ISpRecognizer2 {
    struct ISpRecognizer2Vtbl * lpVtbl;
};

typedef struct ISpRecognizer3 ISpRecognizer3, *PISpRecognizer3;

typedef struct ISpRecognizer3Vtbl ISpRecognizer3Vtbl, *PISpRecognizer3Vtbl;

struct ISpRecognizer3Vtbl {
    HRESULT (* QueryInterface)(struct ISpRecognizer3 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecognizer3 *);
    ULONG (* Release)(struct ISpRecognizer3 *);
    HRESULT (* GetCategory)(struct ISpRecognizer3 *, enum SPCATEGORYTYPE, struct ISpRecoCategory * *);
    HRESULT (* SetActiveCategory)(struct ISpRecognizer3 *, struct ISpRecoCategory *);
    HRESULT (* GetActiveCategory)(struct ISpRecognizer3 *, struct ISpRecoCategory * *);
};

struct ISpRecognizer3 {
    struct ISpRecognizer3Vtbl * lpVtbl;
};

typedef struct ISpRecoGrammar2 ISpRecoGrammar2, *PISpRecoGrammar2;

typedef struct ISpRecoGrammar2Vtbl ISpRecoGrammar2Vtbl, *PISpRecoGrammar2Vtbl;

typedef struct SPRULE SPRULE, *PSPRULE;

typedef struct IInternetSecurityManager IInternetSecurityManager, *PIInternetSecurityManager;

typedef struct IInternetSecurityManagerVtbl IInternetSecurityManagerVtbl, *PIInternetSecurityManagerVtbl;

typedef struct IInternetSecurityMgrSite IInternetSecurityMgrSite, *PIInternetSecurityMgrSite;

typedef struct IInternetSecurityMgrSiteVtbl IInternetSecurityMgrSiteVtbl, *PIInternetSecurityMgrSiteVtbl;

struct IInternetSecurityManager {
    struct IInternetSecurityManagerVtbl * lpVtbl;
};

struct ISpRecoGrammar2Vtbl {
    HRESULT (* QueryInterface)(struct ISpRecoGrammar2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoGrammar2 *);
    ULONG (* Release)(struct ISpRecoGrammar2 *);
    HRESULT (* GetRules)(struct ISpRecoGrammar2 *, struct SPRULE * *, UINT *);
    HRESULT (* LoadCmdFromFile2)(struct ISpRecoGrammar2 *, LPCWSTR, enum SPLOADOPTIONS, LPCWSTR, LPCWSTR);
    HRESULT (* LoadCmdFromMemory2)(struct ISpRecoGrammar2 *, struct SPBINARYGRAMMAR *, enum SPLOADOPTIONS, LPCWSTR, LPCWSTR);
    HRESULT (* SetRulePriority)(struct ISpRecoGrammar2 *, LPCWSTR, ULONG, int);
    HRESULT (* SetRuleWeight)(struct ISpRecoGrammar2 *, LPCWSTR, ULONG, float);
    HRESULT (* SetDictationWeight)(struct ISpRecoGrammar2 *, float);
    HRESULT (* SetGrammarLoader)(struct ISpRecoGrammar2 *, struct ISpeechResourceLoader *);
    HRESULT (* SetSMLSecurityManager)(struct ISpRecoGrammar2 *, struct IInternetSecurityManager *);
};

struct IInternetSecurityMgrSiteVtbl {
    HRESULT (* QueryInterface)(struct IInternetSecurityMgrSite *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetSecurityMgrSite *);
    ULONG (* Release)(struct IInternetSecurityMgrSite *);
    HRESULT (* GetWindow)(struct IInternetSecurityMgrSite *, HWND *);
    HRESULT (* EnableModeless)(struct IInternetSecurityMgrSite *, BOOL);
};

struct ISpRecoGrammar2 {
    struct ISpRecoGrammar2Vtbl * lpVtbl;
};

struct SPRULE {
    LPCWSTR pszRuleName;
    ULONG ulRuleId;
    DWORD dwAttributes;
};

struct IInternetSecurityManagerVtbl {
    HRESULT (* QueryInterface)(struct IInternetSecurityManager *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetSecurityManager *);
    ULONG (* Release)(struct IInternetSecurityManager *);
    HRESULT (* SetSecuritySite)(struct IInternetSecurityManager *, struct IInternetSecurityMgrSite *);
    HRESULT (* GetSecuritySite)(struct IInternetSecurityManager *, struct IInternetSecurityMgrSite * *);
    HRESULT (* MapUrlToZone)(struct IInternetSecurityManager *, LPCWSTR, DWORD *, DWORD);
    HRESULT (* GetSecurityId)(struct IInternetSecurityManager *, LPCWSTR, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (* ProcessUrlAction)(struct IInternetSecurityManager *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (* QueryCustomPolicy)(struct IInternetSecurityManager *, LPCWSTR, GUID *, BYTE * *, DWORD *, BYTE *, DWORD, DWORD);
    HRESULT (* SetZoneMapping)(struct IInternetSecurityManager *, DWORD, LPCWSTR, DWORD);
    HRESULT (* GetZoneMappings)(struct IInternetSecurityManager *, DWORD, struct IEnumString * *, DWORD);
};

struct IInternetSecurityMgrSite {
    struct IInternetSecurityMgrSiteVtbl * lpVtbl;
};

typedef struct ISpRecoResult2 ISpRecoResult2, *PISpRecoResult2;

typedef struct ISpRecoResult2Vtbl ISpRecoResult2Vtbl, *PISpRecoResult2Vtbl;

struct ISpRecoResult2Vtbl {
    HRESULT (* QueryInterface)(struct ISpRecoResult2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRecoResult2 *);
    ULONG (* Release)(struct ISpRecoResult2 *);
    HRESULT (* GetPhrase)(struct ISpRecoResult2 *, struct SPPHRASE * *);
    HRESULT (* GetSerializedPhrase)(struct ISpRecoResult2 *, struct SPSERIALIZEDPHRASE * *);
    HRESULT (* GetText)(struct ISpRecoResult2 *, ULONG, ULONG, BOOL, LPWSTR *, BYTE *);
    HRESULT (* Discard)(struct ISpRecoResult2 *, DWORD);
    HRESULT (* GetResultTimes)(struct ISpRecoResult2 *, struct SPRECORESULTTIMES *);
    HRESULT (* GetAlternates)(struct ISpRecoResult2 *, ULONG, ULONG, ULONG, struct ISpPhraseAlt * *, ULONG *);
    HRESULT (* GetAudio)(struct ISpRecoResult2 *, ULONG, ULONG, struct ISpStreamFormat * *);
    HRESULT (* SpeakAudio)(struct ISpRecoResult2 *, ULONG, ULONG, DWORD, ULONG *);
    HRESULT (* Serialize)(struct ISpRecoResult2 *, struct SPSERIALIZEDRESULT * *);
    HRESULT (* ScaleAudio)(struct ISpRecoResult2 *, GUID *, WAVEFORMATEX *);
    HRESULT (* GetRecoContext)(struct ISpRecoResult2 *, struct ISpRecoContext * *);
    HRESULT (* CommitAlternate)(struct ISpRecoResult2 *, struct ISpPhraseAlt *, struct ISpRecoResult * *);
    HRESULT (* CommitText)(struct ISpRecoResult2 *, ULONG, ULONG, LPCWSTR, DWORD);
    HRESULT (* SetTextFeedback)(struct ISpRecoResult2 *, LPCWSTR, BOOL);
};

struct ISpRecoResult2 {
    struct ISpRecoResult2Vtbl * lpVtbl;
};

typedef struct ISpRegDataKey ISpRegDataKey, *PISpRegDataKey;

typedef struct ISpRegDataKeyVtbl ISpRegDataKeyVtbl, *PISpRegDataKeyVtbl;

struct ISpRegDataKeyVtbl {
    HRESULT (* QueryInterface)(struct ISpRegDataKey *, IID *, void * *);
    ULONG (* AddRef)(struct ISpRegDataKey *);
    ULONG (* Release)(struct ISpRegDataKey *);
    HRESULT (* SetData)(struct ISpRegDataKey *, LPCWSTR, ULONG, BYTE *);
    HRESULT (* GetData)(struct ISpRegDataKey *, LPCWSTR, ULONG *, BYTE *);
    HRESULT (* SetStringValue)(struct ISpRegDataKey *, LPCWSTR, LPCWSTR);
    HRESULT (* GetStringValue)(struct ISpRegDataKey *, LPCWSTR, LPWSTR *);
    HRESULT (* SetDWORD)(struct ISpRegDataKey *, LPCWSTR, DWORD);
    HRESULT (* GetDWORD)(struct ISpRegDataKey *, LPCWSTR, DWORD *);
    HRESULT (* OpenKey)(struct ISpRegDataKey *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* CreateKey)(struct ISpRegDataKey *, LPCWSTR, struct ISpDataKey * *);
    HRESULT (* DeleteKey)(struct ISpRegDataKey *, LPCWSTR);
    HRESULT (* DeleteValue)(struct ISpRegDataKey *, LPCWSTR);
    HRESULT (* EnumKeys)(struct ISpRegDataKey *, ULONG, LPWSTR *);
    HRESULT (* EnumValues)(struct ISpRegDataKey *, ULONG, LPWSTR *);
    HRESULT (* SetKey)(struct ISpRegDataKey *, HKEY, BOOL);
};

struct ISpRegDataKey {
    struct ISpRegDataKeyVtbl * lpVtbl;
};

typedef struct ISpResourceManager ISpResourceManager, *PISpResourceManager;

typedef struct ISpResourceManagerVtbl ISpResourceManagerVtbl, *PISpResourceManagerVtbl;

struct ISpResourceManagerVtbl {
    HRESULT (* QueryInterface)(struct ISpResourceManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISpResourceManager *);
    ULONG (* Release)(struct ISpResourceManager *);
    HRESULT (* QueryService)(struct ISpResourceManager *, GUID *, IID *, void * *);
    HRESULT (* SetObject)(struct ISpResourceManager *, GUID *, struct IUnknown *);
    HRESULT (* GetObjectA)(struct ISpResourceManager *, GUID *, IID *, IID *, BOOL, void * *);
};

struct ISpResourceManager {
    struct ISpResourceManagerVtbl * lpVtbl;
};

typedef struct ISpSerializeState ISpSerializeState, *PISpSerializeState;

typedef struct ISpSerializeStateVtbl ISpSerializeStateVtbl, *PISpSerializeStateVtbl;

struct ISpSerializeState {
    struct ISpSerializeStateVtbl * lpVtbl;
};

struct ISpSerializeStateVtbl {
    HRESULT (* QueryInterface)(struct ISpSerializeState *, IID *, void * *);
    ULONG (* AddRef)(struct ISpSerializeState *);
    ULONG (* Release)(struct ISpSerializeState *);
    HRESULT (* GetSerializedState)(struct ISpSerializeState *, BYTE * *, ULONG *, DWORD);
    HRESULT (* SetSerializedState)(struct ISpSerializeState *, BYTE *, ULONG, DWORD);
};

typedef struct ISpShortcut ISpShortcut, *PISpShortcut;

typedef struct ISpShortcutVtbl ISpShortcutVtbl, *PISpShortcutVtbl;

typedef enum SPSHORTCUTTYPE {
    SPPS_RESERVED1=12288,
    SPPS_RESERVED2=16384,
    SPPS_RESERVED3=20480,
    SPPS_RESERVED4=61440,
    SPSHT_EMAIL=4096,
    SPSHT_NotOverriden=0,
    SPSHT_OTHER=8192,
    SPSHT_Unknown=0
} SPSHORTCUTTYPE;

typedef struct SPSHORTCUTPAIRLIST SPSHORTCUTPAIRLIST, *PSPSHORTCUTPAIRLIST;

typedef struct SPSHORTCUTPAIR SPSHORTCUTPAIR, *PSPSHORTCUTPAIR;

struct SPSHORTCUTPAIRLIST {
    ULONG ulSize;
    BYTE * pvBuffer;
    struct SPSHORTCUTPAIR * pFirstShortcutPair;
};

struct ISpShortcut {
    struct ISpShortcutVtbl * lpVtbl;
};

struct SPSHORTCUTPAIR {
    struct SPSHORTCUTPAIR * pNextSHORTCUTPAIR;
    WORD LangID;
    enum SPSHORTCUTTYPE shType;
    LPWSTR pszDisplay;
    LPWSTR pszSpoken;
};

struct ISpShortcutVtbl {
    HRESULT (* QueryInterface)(struct ISpShortcut *, IID *, void * *);
    ULONG (* AddRef)(struct ISpShortcut *);
    ULONG (* Release)(struct ISpShortcut *);
    HRESULT (* AddShortcut)(struct ISpShortcut *, LPCWSTR, WORD, LPCWSTR, enum SPSHORTCUTTYPE);
    HRESULT (* RemoveShortcut)(struct ISpShortcut *, LPCWSTR, WORD, LPCWSTR, enum SPSHORTCUTTYPE);
    HRESULT (* GetShortcuts)(struct ISpShortcut *, WORD, struct SPSHORTCUTPAIRLIST *);
    HRESULT (* GetGeneration)(struct ISpShortcut *, DWORD *);
    HRESULT (* GetWordsFromGenerationChange)(struct ISpShortcut *, DWORD *, struct SPWORDLIST *);
    HRESULT (* GetWords)(struct ISpShortcut *, DWORD *, DWORD *, struct SPWORDLIST *);
    HRESULT (* GetShortcutsForGeneration)(struct ISpShortcut *, DWORD *, DWORD *, struct SPSHORTCUTPAIRLIST *);
    HRESULT (* GetGenerationChange)(struct ISpShortcut *, DWORD *, struct SPSHORTCUTPAIRLIST *);
};

typedef struct ISpStream ISpStream, *PISpStream;

typedef struct ISpStreamVtbl ISpStreamVtbl, *PISpStreamVtbl;

typedef enum SPFILEMODE {
    SPFM_CREATE=2,
    SPFM_CREATE_ALWAYS=3,
    SPFM_NUM_MODES=4,
    SPFM_OPEN_READONLY=0,
    SPFM_OPEN_READWRITE=1
} SPFILEMODE;

struct ISpStreamVtbl {
    HRESULT (* QueryInterface)(struct ISpStream *, IID *, void * *);
    ULONG (* AddRef)(struct ISpStream *);
    ULONG (* Release)(struct ISpStream *);
    HRESULT (* Read)(struct ISpStream *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct ISpStream *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct ISpStream *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct ISpStream *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct ISpStream *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct ISpStream *, DWORD);
    HRESULT (* Revert)(struct ISpStream *);
    HRESULT (* LockRegion)(struct ISpStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct ISpStream *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct ISpStream *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct ISpStream *, struct IStream * *);
    HRESULT (* GetFormat)(struct ISpStream *, GUID *, WAVEFORMATEX * *);
    HRESULT (* SetBaseStream)(struct ISpStream *, struct IStream *, GUID *, WAVEFORMATEX *);
    HRESULT (* GetBaseStream)(struct ISpStream *, struct IStream * *);
    HRESULT (* BindToFile)(struct ISpStream *, LPCWSTR, enum SPFILEMODE, GUID *, WAVEFORMATEX *, ULONGLONG);
    HRESULT (* Close)(struct ISpStream *);
};

struct ISpStream {
    struct ISpStreamVtbl * lpVtbl;
};

typedef struct ISpStreamFormatConverter ISpStreamFormatConverter, *PISpStreamFormatConverter;

typedef struct ISpStreamFormatConverterVtbl ISpStreamFormatConverterVtbl, *PISpStreamFormatConverterVtbl;

struct ISpStreamFormatConverterVtbl {
    HRESULT (* QueryInterface)(struct ISpStreamFormatConverter *, IID *, void * *);
    ULONG (* AddRef)(struct ISpStreamFormatConverter *);
    ULONG (* Release)(struct ISpStreamFormatConverter *);
    HRESULT (* Read)(struct ISpStreamFormatConverter *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct ISpStreamFormatConverter *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct ISpStreamFormatConverter *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct ISpStreamFormatConverter *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct ISpStreamFormatConverter *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct ISpStreamFormatConverter *, DWORD);
    HRESULT (* Revert)(struct ISpStreamFormatConverter *);
    HRESULT (* LockRegion)(struct ISpStreamFormatConverter *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct ISpStreamFormatConverter *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct ISpStreamFormatConverter *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct ISpStreamFormatConverter *, struct IStream * *);
    HRESULT (* GetFormat)(struct ISpStreamFormatConverter *, GUID *, WAVEFORMATEX * *);
    HRESULT (* SetBaseStream)(struct ISpStreamFormatConverter *, struct ISpStreamFormat *, BOOL, BOOL);
    HRESULT (* GetBaseStream)(struct ISpStreamFormatConverter *, struct ISpStreamFormat * *);
    HRESULT (* SetFormat)(struct ISpStreamFormatConverter *, GUID *, WAVEFORMATEX *);
    HRESULT (* ResetSeekPosition)(struct ISpStreamFormatConverter *);
    HRESULT (* ScaleConvertedToBaseOffset)(struct ISpStreamFormatConverter *, ULONGLONG, ULONGLONG *);
    HRESULT (* ScaleBaseToConvertedOffset)(struct ISpStreamFormatConverter *, ULONGLONG, ULONGLONG *);
};

struct ISpStreamFormatConverter {
    struct ISpStreamFormatConverterVtbl * lpVtbl;
};

typedef struct ISpTranscript ISpTranscript, *PISpTranscript;

typedef struct ISpTranscriptVtbl ISpTranscriptVtbl, *PISpTranscriptVtbl;

struct ISpTranscriptVtbl {
    HRESULT (* QueryInterface)(struct ISpTranscript *, IID *, void * *);
    ULONG (* AddRef)(struct ISpTranscript *);
    ULONG (* Release)(struct ISpTranscript *);
    HRESULT (* GetTranscript)(struct ISpTranscript *, LPWSTR *);
    HRESULT (* AppendTranscript)(struct ISpTranscript *, LPCWSTR);
};

struct ISpTranscript {
    struct ISpTranscriptVtbl * lpVtbl;
};

typedef struct ISpXMLRecoResult ISpXMLRecoResult, *PISpXMLRecoResult;

typedef struct ISpXMLRecoResultVtbl ISpXMLRecoResultVtbl, *PISpXMLRecoResultVtbl;

struct ISpXMLRecoResultVtbl {
    HRESULT (* QueryInterface)(struct ISpXMLRecoResult *, IID *, void * *);
    ULONG (* AddRef)(struct ISpXMLRecoResult *);
    ULONG (* Release)(struct ISpXMLRecoResult *);
    HRESULT (* GetPhrase)(struct ISpXMLRecoResult *, struct SPPHRASE * *);
    HRESULT (* GetSerializedPhrase)(struct ISpXMLRecoResult *, struct SPSERIALIZEDPHRASE * *);
    HRESULT (* GetText)(struct ISpXMLRecoResult *, ULONG, ULONG, BOOL, LPWSTR *, BYTE *);
    HRESULT (* Discard)(struct ISpXMLRecoResult *, DWORD);
    HRESULT (* GetResultTimes)(struct ISpXMLRecoResult *, struct SPRECORESULTTIMES *);
    HRESULT (* GetAlternates)(struct ISpXMLRecoResult *, ULONG, ULONG, ULONG, struct ISpPhraseAlt * *, ULONG *);
    HRESULT (* GetAudio)(struct ISpXMLRecoResult *, ULONG, ULONG, struct ISpStreamFormat * *);
    HRESULT (* SpeakAudio)(struct ISpXMLRecoResult *, ULONG, ULONG, DWORD, ULONG *);
    HRESULT (* Serialize)(struct ISpXMLRecoResult *, struct SPSERIALIZEDRESULT * *);
    HRESULT (* ScaleAudio)(struct ISpXMLRecoResult *, GUID *, WAVEFORMATEX *);
    HRESULT (* GetRecoContext)(struct ISpXMLRecoResult *, struct ISpRecoContext * *);
    HRESULT (* GetXMLResult)(struct ISpXMLRecoResult *, LPWSTR *, enum SPXMLRESULTOPTIONS);
    HRESULT (* GetXMLErrorInfo)(struct ISpXMLRecoResult *, struct SPSEMANTICERRORINFO *);
};

struct ISpXMLRecoResult {
    struct ISpXMLRecoResultVtbl * lpVtbl;
};

typedef LPWSTR PSPPHONEID;

typedef enum SPADAPTATIONSETTINGS {
    SPADS_CurrentRecognizer=1,
    SPADS_Default=0,
    SPADS_HighVolumeDataSource=16,
    SPADS_Immediate=4,
    SPADS_RecoProfile=2,
    SPADS_Reset=8
} SPADAPTATIONSETTINGS;

typedef struct SpAudioFormat SpAudioFormat, *PSpAudioFormat;

struct SpAudioFormat {
};

typedef enum SPCFGRULEATTRIBUTES {
    SPRAF_Active=2,
    SPRAF_AutoPause=65536,
    SPRAF_Dynamic=32,
    SPRAF_Export=4,
    SPRAF_Import=8,
    SPRAF_Interpreter=16,
    SPRAF_Root=64,
    SPRAF_TopLevel=1,
    SPRAF_UserDelimited=131072
} SPCFGRULEATTRIBUTES;

typedef enum SPCOMMITFLAGS {
    SPCF_ADD_TO_USER_LEXICON=1,
    SPCF_DEFINITE_CORRECTION=2,
    SPCF_NONE=0
} SPCOMMITFLAGS;

typedef struct SpCompressedLexicon SpCompressedLexicon, *PSpCompressedLexicon;

struct SpCompressedLexicon {
};

typedef struct SpCustomStream SpCustomStream, *PSpCustomStream;

struct SpCustomStream {
};

typedef enum SPDISPLYATTRIBUTES {
    SPAF_ALL=31,
    SPAF_BUFFER_POSITION=16,
    SPAF_CONSUME_LEADING_SPACES=8,
    SPAF_ONE_TRAILING_SPACE=2,
    SPAF_TWO_TRAILING_SPACES=4,
    SPAF_USER_SPECIFIED=128
} SPDISPLYATTRIBUTES;

typedef enum SPDISPLYATTRIBUTES SPDISPLAYATTRIBUTES;

typedef enum SPEAKFLAGS {
    SPF_ASYNC=1,
    SPF_DEFAULT=0,
    SPF_IS_FILENAME=4,
    SPF_IS_NOT_XML=16,
    SPF_IS_XML=8,
    SPF_NLP_MASK=1,
    SPF_NLP_SPEAK_PUNC=64,
    SPF_PARSE_AUTODETECT=0,
    SPF_PARSE_MASK=2,
    SPF_PARSE_SAPI=128,
    SPF_PARSE_SSML=256,
    SPF_PERSIST_XML=32,
    SPF_PURGEBEFORESPEAK=2,
    SPF_UNUSED_FLAGS=4,
    SPF_VOICE_MASK=3
} SPEAKFLAGS;

typedef enum SpeechEmulationCompareFlags {
    SECFDefault=1073741825,
    SECFEmulateResult=1073741824,
    SECFIgnoreCase=1,
    SECFIgnoreKanaType=65536,
    SECFIgnoreWidth=131072,
    SECFNoSpecialChars=536870912
} SpeechEmulationCompareFlags;

typedef enum SpeechRecognitionType {
    SRTAutopause=1,
    SRTEmulated=2,
    SRTExtendableParse=4,
    SRTReSent=5,
    SRTSMLTimeout=3,
    SRTStandard=0
} SpeechRecognitionType;

typedef enum SpeechVisemeFeature {
    SVF_Emphasis=2,
    SVF_None=0,
    SVF_Stressed=1
} SpeechVisemeFeature;

typedef enum SpeechVisemeType {
    SVP_0=0,
    SVP_1=1,
    SVP_10=10,
    SVP_11=11,
    SVP_12=12,
    SVP_13=13,
    SVP_14=14,
    SVP_15=15,
    SVP_16=16,
    SVP_17=17,
    SVP_18=18,
    SVP_19=19,
    SVP_2=2,
    SVP_20=20,
    SVP_21=21,
    SVP_3=3,
    SVP_4=4,
    SVP_5=5,
    SVP_6=6,
    SVP_7=7,
    SVP_8=8,
    SVP_9=9
} SpeechVisemeType;

typedef enum SPENDSRSTREAMFLAGS {
    SPESF_EMULATED=2,
    SPESF_NONE=0,
    SPESF_STREAM_RELEASED=1
} SPENDSRSTREAMFLAGS;

typedef struct SpFileStream SpFileStream, *PSpFileStream;

struct SpFileStream {
};

typedef enum SPGRAMMAROPTIONS {
    SPGO_ALL=1023,
    SPGO_DEFAULT=1019,
    SPGO_FILE=16,
    SPGO_HTTP=32,
    SPGO_OBJECT=128,
    SPGO_RES=64,
    SPGO_SAPI=1,
    SPGO_SRGS=2,
    SPGO_SRGS_MS_SCRIPT=8,
    SPGO_SRGS_SCRIPT=513,
    SPGO_SRGS_STG_SCRIPT=512,
    SPGO_SRGS_W3C_SCRIPT=256,
    SPGO_UPS=4
} SPGRAMMAROPTIONS;

typedef struct SpInProcRecoContext SpInProcRecoContext, *PSpInProcRecoContext;

struct SpInProcRecoContext {
};

typedef struct SpInprocRecognizer SpInprocRecognizer, *PSpInprocRecognizer;

struct SpInprocRecognizer {
};

typedef struct SpLexicon SpLexicon, *PSpLexicon;

struct SpLexicon {
};

typedef struct SpMemoryStream SpMemoryStream, *PSpMemoryStream;

struct SpMemoryStream {
};

typedef struct SpMMAudioEnum SpMMAudioEnum, *PSpMMAudioEnum;

struct SpMMAudioEnum {
};

typedef struct SpMMAudioIn SpMMAudioIn, *PSpMMAudioIn;

struct SpMMAudioIn {
};

typedef struct SpMMAudioOut SpMMAudioOut, *PSpMMAudioOut;

struct SpMMAudioOut {
};

typedef struct SpNotifyTranslator SpNotifyTranslator, *PSpNotifyTranslator;

struct SpNotifyTranslator {
};

typedef struct SpNullPhoneConverter SpNullPhoneConverter, *PSpNullPhoneConverter;

struct SpNullPhoneConverter {
};

typedef struct SpObjectToken SpObjectToken, *PSpObjectToken;

struct SpObjectToken {
};

typedef struct SpObjectTokenCategory SpObjectTokenCategory, *PSpObjectTokenCategory;

struct SpObjectTokenCategory {
};

typedef struct SpPhoneConverter SpPhoneConverter, *PSpPhoneConverter;

struct SpPhoneConverter {
};

typedef struct SpPhoneticAlphabetConverter SpPhoneticAlphabetConverter, *PSpPhoneticAlphabetConverter;

struct SpPhoneticAlphabetConverter {
};

typedef struct SPPHRASE_50 SPPHRASE_50, *PSPPHRASE_50;

struct SPPHRASE_50 {
    ULONG cbSize;
    WORD LangID;
    WORD wHomophoneGroupId;
    ULONGLONG ullGrammarID;
    ULONGLONG ftStartTime;
    ULONGLONG ullAudioStreamPosition;
    ULONG ulAudioSizeBytes;
    ULONG ulRetainedSizeBytes;
    ULONG ulAudioSizeTime;
    struct SPPHRASERULE Rule;
    struct SPPHRASEPROPERTY * pProperties;
    struct SPPHRASEELEMENT * pElements;
    ULONG cReplacements;
    struct SPPHRASEREPLACEMENT * pReplacements;
    GUID SREngineID;
    ULONG ulSREnginePrivateDataSize;
    BYTE * pSREnginePrivateData;
};

typedef struct SPPHRASE_53 SPPHRASE_53, *PSPPHRASE_53;

struct SPPHRASE_53 {
    ULONG cbSize;
    WORD LangID;
    WORD wHomophoneGroupId;
    ULONGLONG ullGrammarID;
    ULONGLONG ftStartTime;
    ULONGLONG ullAudioStreamPosition;
    ULONG ulAudioSizeBytes;
    ULONG ulRetainedSizeBytes;
    ULONG ulAudioSizeTime;
    struct SPPHRASERULE Rule;
    struct SPPHRASEPROPERTY * pProperties;
    struct SPPHRASEELEMENT * pElements;
    ULONG cReplacements;
    struct SPPHRASEREPLACEMENT * pReplacements;
    GUID SREngineID;
    ULONG ulSREnginePrivateDataSize;
    BYTE * pSREnginePrivateData;
    LPWSTR pSML;
    struct SPSEMANTICERRORINFO * pSemanticErrorInfo;
};

typedef struct SpPhraseInfoBuilder SpPhraseInfoBuilder, *PSpPhraseInfoBuilder;

struct SpPhraseInfoBuilder {
};

typedef enum SPPHRASEPROPERTYUNIONTYPE {
    SPPPUT_ARRAY_INDEX=1,
    SPPPUT_UNUSED=0
} SPPHRASEPROPERTYUNIONTYPE;

typedef enum SPPHRASERNG {
    SPPR_ALL_ELEMENTS=0
} SPPHRASERNG;

typedef enum SPPRONUNCIATIONFLAGS {
    ePRONFLAG_USED=1
} SPPRONUNCIATIONFLAGS;

typedef enum SPRECOEVENTFLAGS {
    SPREF_AutoPause=1,
    SPREF_Emulated=2,
    SPREF_ExtendableParse=8,
    SPREF_FalseRecognition=64,
    SPREF_Hypothesis=32,
    SPREF_ReSent=16,
    SPREF_SMLTimeout=4
} SPRECOEVENTFLAGS;

typedef struct SpResourceManager SpResourceManager, *PSpResourceManager;

struct SpResourceManager {
};

typedef enum SPRUNSTATE {
    SPRS_DONE=1,
    SPRS_IS_SPEAKING=2
} SPRUNSTATE;

typedef struct SPSERIALIZEDEVENT SPSERIALIZEDEVENT, *PSPSERIALIZEDEVENT;

struct SPSERIALIZEDEVENT {
    union anon__struct_7272_bitfield_1 field_0x0;
    union anon__struct_7272_bitfield_2 field_0x4;
    ULONG ulStreamNum;
    ULONGLONG ullAudioStreamOffset;
    ULONG SerializedwParam;
    LONG SerializedlParam;
};

typedef struct SPSERIALIZEDEVENT64 SPSERIALIZEDEVENT64, *PSPSERIALIZEDEVENT64;

struct SPSERIALIZEDEVENT64 {
    union anon__struct_7273_bitfield_1 field_0x0;
    union anon__struct_7273_bitfield_2 field_0x4;
    ULONG ulStreamNum;
    ULONGLONG ullAudioStreamOffset;
    ULONGLONG SerializedwParam;
    LONGLONG SerializedlParam;
};

typedef struct SpSharedRecoContext SpSharedRecoContext, *PSpSharedRecoContext;

struct SpSharedRecoContext {
};

typedef struct SpSharedRecognizer SpSharedRecognizer, *PSpSharedRecognizer;

struct SpSharedRecognizer {
};

typedef struct SpShortcut SpShortcut, *PSpShortcut;

struct SpShortcut {
};

typedef struct SpStream SpStream, *PSpStream;

struct SpStream {
};

typedef enum SPSTREAMFORMAT {
    SPSF_11kHz16BitMono=10,
    SPSF_11kHz16BitStereo=11,
    SPSF_11kHz8BitMono=8,
    SPSF_11kHz8BitStereo=9,
    SPSF_12kHz16BitMono=14,
    SPSF_12kHz16BitStereo=15,
    SPSF_12kHz8BitMono=12,
    SPSF_12kHz8BitStereo=13,
    SPSF_16kHz16BitMono=18,
    SPSF_16kHz16BitStereo=19,
    SPSF_16kHz8BitMono=16,
    SPSF_16kHz8BitStereo=17,
    SPSF_22kHz16BitMono=22,
    SPSF_22kHz16BitStereo=23,
    SPSF_22kHz8BitMono=20,
    SPSF_22kHz8BitStereo=21,
    SPSF_24kHz16BitMono=26,
    SPSF_24kHz16BitStereo=27,
    SPSF_24kHz8BitMono=24,
    SPSF_24kHz8BitStereo=25,
    SPSF_32kHz16BitMono=30,
    SPSF_32kHz16BitStereo=31,
    SPSF_32kHz8BitMono=28,
    SPSF_32kHz8BitStereo=29,
    SPSF_44kHz16BitMono=34,
    SPSF_44kHz16BitStereo=35,
    SPSF_44kHz8BitMono=32,
    SPSF_44kHz8BitStereo=33,
    SPSF_48kHz16BitMono=38,
    SPSF_48kHz16BitStereo=39,
    SPSF_48kHz8BitMono=36,
    SPSF_48kHz8BitStereo=37,
    SPSF_8kHz16BitMono=6,
    SPSF_8kHz16BitStereo=7,
    SPSF_8kHz8BitMono=4,
    SPSF_8kHz8BitStereo=5,
    SPSF_ADPCM_11kHzMono=59,
    SPSF_ADPCM_11kHzStereo=60,
    SPSF_ADPCM_22kHzMono=61,
    SPSF_ADPCM_22kHzStereo=62,
    SPSF_ADPCM_44kHzMono=63,
    SPSF_ADPCM_44kHzStereo=64,
    SPSF_ADPCM_8kHzMono=57,
    SPSF_ADPCM_8kHzStereo=58,
    SPSF_CCITT_ALaw_11kHzMono=43,
    SPSF_CCITT_ALaw_11kHzStereo=44,
    SPSF_CCITT_ALaw_22kHzMono=45,
    SPSF_CCITT_ALaw_22kHzStereo=46,
    SPSF_CCITT_ALaw_44kHzMono=47,
    SPSF_CCITT_ALaw_44kHzStereo=48,
    SPSF_CCITT_ALaw_8kHzMono=41,
    SPSF_CCITT_ALaw_8kHzStereo=42,
    SPSF_CCITT_uLaw_11kHzMono=51,
    SPSF_CCITT_uLaw_11kHzStereo=52,
    SPSF_CCITT_uLaw_22kHzMono=53,
    SPSF_CCITT_uLaw_22kHzStereo=54,
    SPSF_CCITT_uLaw_44kHzMono=55,
    SPSF_CCITT_uLaw_44kHzStereo=56,
    SPSF_CCITT_uLaw_8kHzMono=49,
    SPSF_CCITT_uLaw_8kHzStereo=50,
    SPSF_Default=0,
    SPSF_ExtendedAudioFormat=3,
    SPSF_GSM610_11kHzMono=66,
    SPSF_GSM610_22kHzMono=67,
    SPSF_GSM610_44kHzMono=68,
    SPSF_GSM610_8kHzMono=65,
    SPSF_NUM_FORMATS=69,
    SPSF_NoAssignedFormat=0,
    SPSF_NonStandardFormat=2,
    SPSF_Text=1,
    SPSF_TrueSpeech_8kHz1BitMono=40
} SPSTREAMFORMAT;

typedef struct SpStreamFormatConverter SpStreamFormatConverter, *PSpStreamFormatConverter;

struct SpStreamFormatConverter {
};

typedef struct SpTextSelectionInformation SpTextSelectionInformation, *PSpTextSelectionInformation;

struct SpTextSelectionInformation {
};

typedef struct SpUnCompressedLexicon SpUnCompressedLexicon, *PSpUnCompressedLexicon;

struct SpUnCompressedLexicon {
};

typedef enum SPVACTIONS {
    SPVA_Bookmark=3,
    SPVA_ParseUnknownTag=6,
    SPVA_Pronounce=2,
    SPVA_Section=5,
    SPVA_Silence=1,
    SPVA_Speak=0,
    SPVA_SpellOut=4
} SPVACTIONS;

typedef enum SPVALUETYPE {
    SPDF_ALL=255,
    SPDF_ALTERNATES=128,
    SPDF_AUDIO=64,
    SPDF_DISPLAYTEXT=8,
    SPDF_LEXICALFORM=16,
    SPDF_PRONUNCIATION=32,
    SPDF_PROPERTY=1,
    SPDF_REPLACEMENT=2,
    SPDF_RULE=4
} SPVALUETYPE;

typedef struct SPVCONTEXT SPVCONTEXT, *PSPVCONTEXT;

struct SPVCONTEXT {
    LPCWSTR pCategory;
    LPCWSTR pBefore;
    LPCWSTR pAfter;
};

typedef enum SPVFEATURE {
    SPVFEATURE_EMPHASIS=2,
    SPVFEATURE_STRESSED=1
} SPVFEATURE;

typedef enum SPVLIMITS {
    SPMAX_RATE=10,
    SPMAX_VOLUME=100,
    SPMIN_RATE=101,
    SPMIN_VOLUME=0
} SPVLIMITS;

typedef struct SpVoice SpVoice, *PSpVoice;

struct SpVoice {
};

typedef struct SPVPITCH SPVPITCH, *PSPVPITCH;

struct SPVPITCH {
    long MiddleAdj;
    long RangeAdj;
};

typedef struct SPVSTATE SPVSTATE, *PSPVSTATE;

struct SPVSTATE {
    enum SPVACTIONS eAction;
    WORD LangID;
    WORD wReserved;
    long EmphAdj;
    long RateAdj;
    ULONG Volume;
    struct SPVPITCH PitchAdj;
    ULONG SilenceMSecs;
    SPPHONEID * pPhoneIds;
    enum SPPARTOFSPEECH ePartOfSpeech;
    struct SPVCONTEXT Context;
};

typedef struct SpWaveFormatEx SpWaveFormatEx, *PSpWaveFormatEx;

struct SpWaveFormatEx {
};

#define SCHEDULE_BANDWIDTH 1

#define SCHEDULE_DATA_ENTRIES 168

#define SCHEDULE_INTERVAL 0

#define SCHEDULE_PRIORITY 2

typedef struct _SCHEDULE _SCHEDULE, *P_SCHEDULE;

typedef struct _SCHEDULE_HEADER _SCHEDULE_HEADER, *P_SCHEDULE_HEADER;

typedef struct _SCHEDULE_HEADER SCHEDULE_HEADER;

struct _SCHEDULE_HEADER {
    ULONG Type;
    ULONG Offset;
};

struct _SCHEDULE {
    ULONG Size;
    ULONG Bandwidth;
    ULONG NumberOfSchedules;
    SCHEDULE_HEADER Schedules[1];
};

typedef struct _SCHEDULE * PSCHEDULE;

typedef struct _SCHEDULE_HEADER * PSCHEDULE_HEADER;

typedef struct _SCHEDULE SCHEDULE;

#define _WIN32_IE 2048

#define _WIN32_IE_IE20 512

#define _WIN32_IE_IE30 768

#define _WIN32_IE_IE302 770

#define _WIN32_IE_IE40 1024

#define _WIN32_IE_IE401 1025

#define _WIN32_IE_IE50 1280

#define _WIN32_IE_IE501 1281

#define _WIN32_IE_IE55 1360

#define _WIN32_IE_IE60 1536

#define _WIN32_IE_IE60SP1 1537

#define _WIN32_IE_IE60SP2 1539

#define _WIN32_IE_IE70 1792

#define _WIN32_IE_IE80 2048

#define _WIN32_IE_LONGHORN 1792

#define _WIN32_IE_NT4 512

#define _WIN32_IE_NT4SP1 512

#define _WIN32_IE_NT4SP2 512

#define _WIN32_IE_NT4SP3 770

#define _WIN32_IE_NT4SP4 1025

#define _WIN32_IE_NT4SP5 1025

#define _WIN32_IE_NT4SP6 1280

#define _WIN32_IE_WIN2K 1281

#define _WIN32_IE_WIN2KSP1 1281

#define _WIN32_IE_WIN2KSP2 1281

#define _WIN32_IE_WIN2KSP3 1281

#define _WIN32_IE_WIN2KSP4 1281

#define _WIN32_IE_WIN6 1792

#define _WIN32_IE_WIN7 2048

#define _WIN32_IE_WIN98 1025

#define _WIN32_IE_WIN98SE 1280

#define _WIN32_IE_WINME 1360

#define _WIN32_IE_WS03 1538

#define _WIN32_IE_WS03SP1 1539

#define _WIN32_IE_XP 1536

#define _WIN32_IE_XPSP1 1537

#define _WIN32_IE_XPSP2 1539

#define _WIN32_WINNT 1537

#define _WIN32_WINNT_LONGHORN 1536

#define _WIN32_WINNT_NT4 1024

#define _WIN32_WINNT_VISTA 1536

#define _WIN32_WINNT_WIN2K 1280

#define _WIN32_WINNT_WIN6 1536

#define _WIN32_WINNT_WIN7 1537

#define _WIN32_WINNT_WINXP 1281

#define _WIN32_WINNT_WS03 1282

#define _WIN32_WINNT_WS08 1536

#define NTDDI_LONGHORN 100663296

#define NTDDI_VISTA 100663296

#define NTDDI_VISTASP1 100663552

#define NTDDI_VISTASP2 100663808

#define NTDDI_VISTASP3 100664064

#define NTDDI_VISTASP4 100664320

#define NTDDI_WIN2K 83886080

#define NTDDI_WIN2KSP1 83886336

#define NTDDI_WIN2KSP2 83886592

#define NTDDI_WIN2KSP3 83886848

#define NTDDI_WIN2KSP4 83887104

#define NTDDI_WIN6 100663296

#define NTDDI_WIN6SP1 100663552

#define NTDDI_WIN6SP2 100663808

#define NTDDI_WIN6SP3 100664064

#define NTDDI_WIN6SP4 100664320

#define NTDDI_WIN7 100728832

#define NTDDI_WINXP 83951616

#define NTDDI_WINXPSP1 83951872

#define NTDDI_WINXPSP2 83952128

#define NTDDI_WINXPSP3 83952384

#define NTDDI_WINXPSP4 83952640

#define NTDDI_WS03 84017152

#define NTDDI_WS03SP1 84017408

#define NTDDI_WS03SP2 84017664

#define NTDDI_WS03SP3 84017920

#define NTDDI_WS03SP4 84018176

#define NTDDI_WS08 100663552

#define NTDDI_WS08SP2 100663808

#define NTDDI_WS08SP3 100664064

#define NTDDI_WS08SP4 100664320

#define OSVERSION_MASK 4294901760

#define PSAPI_VERSION 1

#define SPVERSION_MASK 65280

#define SUBVERSION_MASK 255

typedef enum __MIDL___MIDL_itf_searchapi_0000_0013_0001 {
    CLUSIONREASON_DEFAULT=1,
    CLUSIONREASON_GROUPPOLICY=3,
    CLUSIONREASON_UNKNOWNSCOPE=0,
    CLUSIONREASON_USER=2
} __MIDL___MIDL_itf_searchapi_0000_0013_0001;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0025_0001 {
    PRIORITY_LEVEL_DEFAULT=3,
    PRIORITY_LEVEL_FOREGROUND=0,
    PRIORITY_LEVEL_HIGH=1,
    PRIORITY_LEVEL_LOW=2
} __MIDL___MIDL_itf_searchapi_0000_0025_0001;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0026_0001 {
    ROWSETEVENT_ITEMSTATE_INROWSET=1,
    ROWSETEVENT_ITEMSTATE_NOTINROWSET=0,
    ROWSETEVENT_ITEMSTATE_UNKNOWN=2
} __MIDL___MIDL_itf_searchapi_0000_0026_0001;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0026_0002 {
    ROWSETEVENT_TYPE_DATAEXPIRED=0,
    ROWSETEVENT_TYPE_FOREGROUNDLOST=1,
    ROWSETEVENT_TYPE_SCOPESTATISTICS=2
} __MIDL___MIDL_itf_searchapi_0000_0026_0002;

typedef enum _AUTH_TYPE {
    eAUTH_TYPE_ANONYMOUS=0,
    eAUTH_TYPE_BASIC=2,
    eAUTH_TYPE_NTLM=1
} _AUTH_TYPE;

typedef struct _AUTHENTICATION_INFO _AUTHENTICATION_INFO, *P_AUTHENTICATION_INFO;

typedef enum _AUTH_TYPE AUTH_TYPE;

struct _AUTHENTICATION_INFO {
    DWORD dwSize;
    AUTH_TYPE atAuthenticationType;
    LPCWSTR pcwszUser;
    LPCWSTR pcwszPassword;
};

typedef enum _CatalogPausedReason {
    CATALOG_PAUSED_REASON_DELAYED_RECOVERY=7,
    CATALOG_PAUSED_REASON_EXTERNAL=9,
    CATALOG_PAUSED_REASON_HIGH_CPU=2,
    CATALOG_PAUSED_REASON_HIGH_IO=1,
    CATALOG_PAUSED_REASON_HIGH_NTF_RATE=3,
    CATALOG_PAUSED_REASON_LOW_BATTERY=4,
    CATALOG_PAUSED_REASON_LOW_DISK=6,
    CATALOG_PAUSED_REASON_LOW_MEMORY=5,
    CATALOG_PAUSED_REASON_NONE=0,
    CATALOG_PAUSED_REASON_UPGRADING=10,
    CATALOG_PAUSED_REASON_USER_ACTIVE=8
} _CatalogPausedReason;

typedef enum _CatalogStatus {
    CATALOG_STATUS_FULL_CRAWL=3,
    CATALOG_STATUS_IDLE=0,
    CATALOG_STATUS_INCREMENTAL_CRAWL=4,
    CATALOG_STATUS_PAUSED=1,
    CATALOG_STATUS_PROCESSING_NOTIFICATIONS=5,
    CATALOG_STATUS_RECOVERING=2,
    CATALOG_STATUS_SHUTTING_DOWN=6
} _CatalogStatus;

typedef enum _FOLLOW_FLAGS {
    FF_INDEXCOMPLEXURLS=1,
    FF_SUPPRESSINDEXING=2
} _FOLLOW_FLAGS;

typedef struct _INCREMENTAL_ACCESS_INFO _INCREMENTAL_ACCESS_INFO, *P_INCREMENTAL_ACCESS_INFO;

struct _INCREMENTAL_ACCESS_INFO {
    DWORD dwSize;
    FILETIME ftLastModifiedTime;
};

typedef struct _INLINE_NOTIFY_DATA_CHANGE_ENTRY _INLINE_NOTIFY_DATA_CHANGE_ENTRY, *P_INLINE_NOTIFY_DATA_CHANGE_ENTRY;

struct _INLINE_NOTIFY_DATA_CHANGE_ENTRY {
    LONG eChangeAdviseCode;
    LPCWSTR pszPhysicalAddress;
    BLOB * pUserData;
};

typedef struct _ITEM_INFO _ITEM_INFO, *P_ITEM_INFO;

struct _ITEM_INFO {
    DWORD dwSize;
    LPCWSTR pcwszFromEMail;
    LPCWSTR pcwszApplicationName;
    LPCWSTR pcwszCatalogName;
    LPCWSTR pcwszContentClass;
};

typedef enum _PROXY_ACCESS {
    PROXY_ACCESS_DIRECT=1,
    PROXY_ACCESS_PRECONFIG=0,
    PROXY_ACCESS_PROXY=2
} _PROXY_ACCESS;

typedef struct _PROXY_INFO _PROXY_INFO, *P_PROXY_INFO;

typedef enum _PROXY_ACCESS PROXY_ACCESS;

struct _PROXY_INFO {
    DWORD dwSize;
    LPCWSTR pcwszUserAgent;
    PROXY_ACCESS paUseProxy;
    BOOL fLocalBypass;
    DWORD dwPortNumber;
    LPCWSTR pcwszProxyName;
    LPCWSTR pcwszBypassList;
};

typedef struct _SEARCH_COLUMN_PROPERTIES _SEARCH_COLUMN_PROPERTIES, *P_SEARCH_COLUMN_PROPERTIES;

struct _SEARCH_COLUMN_PROPERTIES {
    PROPVARIANT Value;
    LCID lcid;
};

typedef enum _SEARCH_INDEXING_PHASE {
    SEARCH_INDEXING_PHASE_GATHERER=0,
    SEARCH_INDEXING_PHASE_PERSISTED=2,
    SEARCH_INDEXING_PHASE_QUERYABLE=1
} _SEARCH_INDEXING_PHASE;

typedef struct _SEARCH_ITEM_CHANGE _SEARCH_ITEM_CHANGE, *P_SEARCH_ITEM_CHANGE;

typedef enum _SEARCH_KIND_OF_CHANGE {
    SEARCH_CHANGE_ADD=0,
    SEARCH_CHANGE_DELETE=1,
    SEARCH_CHANGE_MODIFY=2,
    SEARCH_CHANGE_MOVE_RENAME=3,
    SEARCH_CHANGE_SEMANTICS_DIRECTORY=262144,
    SEARCH_CHANGE_SEMANTICS_SHALLOW=524288,
    SEARCH_CHANGE_SEMANTICS_UPDATE_SECURITY=4194304
} _SEARCH_KIND_OF_CHANGE;

typedef enum _SEARCH_KIND_OF_CHANGE SEARCH_KIND_OF_CHANGE;

typedef enum _SEARCH_NOTIFICATION_PRIORITY {
    SEARCH_HIGH_PRIORITY=1,
    SEARCH_NORMAL_PRIORITY=0
} _SEARCH_NOTIFICATION_PRIORITY;

typedef enum _SEARCH_NOTIFICATION_PRIORITY SEARCH_NOTIFICATION_PRIORITY;

struct _SEARCH_ITEM_CHANGE {
    SEARCH_KIND_OF_CHANGE Change;
    SEARCH_NOTIFICATION_PRIORITY Priority;
    BLOB * pUserData;
    LPWSTR lpwszURL;
    LPWSTR lpwszOldURL;
};

typedef struct _SEARCH_ITEM_INDEXING_STATUS _SEARCH_ITEM_INDEXING_STATUS, *P_SEARCH_ITEM_INDEXING_STATUS;

struct _SEARCH_ITEM_INDEXING_STATUS {
    DWORD dwDocID;
    HRESULT hrIndexingStatus;
};

typedef struct _SEARCH_ITEM_PERSISTENT_CHANGE _SEARCH_ITEM_PERSISTENT_CHANGE, *P_SEARCH_ITEM_PERSISTENT_CHANGE;

struct _SEARCH_ITEM_PERSISTENT_CHANGE {
    SEARCH_KIND_OF_CHANGE Change;
    LPWSTR URL;
    LPWSTR OldURL;
    SEARCH_NOTIFICATION_PRIORITY Priority;
};

typedef enum _SEARCH_QUERY_SYNTAX {
    SEARCH_ADVANCED_QUERY_SYNTAX=1,
    SEARCH_NATURAL_QUERY_SYNTAX=2,
    SEARCH_NO_QUERY_SYNTAX=0
} _SEARCH_QUERY_SYNTAX;

typedef enum _SEARCH_TERM_EXPANSION {
    SEARCH_TERM_NO_EXPANSION=0,
    SEARCH_TERM_PREFIX_ALL=1,
    SEARCH_TERM_STEM_ALL=2
} _SEARCH_TERM_EXPANSION;

typedef struct _TIMEOUT_INFO _TIMEOUT_INFO, *P_TIMEOUT_INFO;

struct _TIMEOUT_INFO {
    DWORD dwSize;
    DWORD dwConnectTimeout;
    DWORD dwDataTimeout;
};

typedef struct _AUTHENTICATION_INFO AUTHENTICATION_INFO;

typedef enum _CatalogPausedReason CatalogPausedReason;

typedef enum _CatalogStatus CatalogStatus;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0013_0001 CLUSION_REASON;

typedef struct CSearchManager CSearchManager, *PCSearchManager;

struct CSearchManager {
};

typedef struct CSearchRoot CSearchRoot, *PCSearchRoot;

struct CSearchRoot {
};

typedef struct CSearchScopeRule CSearchScopeRule, *PCSearchScopeRule;

struct CSearchScopeRule {
};

typedef struct FilterRegistration FilterRegistration, *PFilterRegistration;

struct FilterRegistration {
};

typedef enum _FOLLOW_FLAGS FOLLOW_FLAGS;

typedef struct IEnumSearchRoots IEnumSearchRoots, *PIEnumSearchRoots;

typedef struct IEnumSearchRootsVtbl IEnumSearchRootsVtbl, *PIEnumSearchRootsVtbl;

typedef struct ISearchRoot ISearchRoot, *PISearchRoot;

typedef struct ISearchRootVtbl ISearchRootVtbl, *PISearchRootVtbl;

struct ISearchRootVtbl {
    HRESULT (* QueryInterface)(struct ISearchRoot *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchRoot *);
    ULONG (* Release)(struct ISearchRoot *);
    HRESULT (* put_Schedule)(struct ISearchRoot *, LPCWSTR);
    HRESULT (* get_Schedule)(struct ISearchRoot *, LPWSTR *);
    HRESULT (* put_RootURL)(struct ISearchRoot *, LPCWSTR);
    HRESULT (* get_RootURL)(struct ISearchRoot *, LPWSTR *);
    HRESULT (* put_IsHierarchical)(struct ISearchRoot *, BOOL);
    HRESULT (* get_IsHierarchical)(struct ISearchRoot *, BOOL *);
    HRESULT (* put_ProvidesNotifications)(struct ISearchRoot *, BOOL);
    HRESULT (* get_ProvidesNotifications)(struct ISearchRoot *, BOOL *);
    HRESULT (* put_UseNotificationsOnly)(struct ISearchRoot *, BOOL);
    HRESULT (* get_UseNotificationsOnly)(struct ISearchRoot *, BOOL *);
    HRESULT (* put_EnumerationDepth)(struct ISearchRoot *, DWORD);
    HRESULT (* get_EnumerationDepth)(struct ISearchRoot *, DWORD *);
    HRESULT (* put_HostDepth)(struct ISearchRoot *, DWORD);
    HRESULT (* get_HostDepth)(struct ISearchRoot *, DWORD *);
    HRESULT (* put_FollowDirectories)(struct ISearchRoot *, BOOL);
    HRESULT (* get_FollowDirectories)(struct ISearchRoot *, BOOL *);
    HRESULT (* put_AuthenticationType)(struct ISearchRoot *, AUTH_TYPE);
    HRESULT (* get_AuthenticationType)(struct ISearchRoot *, AUTH_TYPE *);
    HRESULT (* put_User)(struct ISearchRoot *, LPCWSTR);
    HRESULT (* get_User)(struct ISearchRoot *, LPWSTR *);
    HRESULT (* put_Password)(struct ISearchRoot *, LPCWSTR);
    HRESULT (* get_Password)(struct ISearchRoot *, LPWSTR *);
};

struct IEnumSearchRootsVtbl {
    HRESULT (* QueryInterface)(struct IEnumSearchRoots *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSearchRoots *);
    ULONG (* Release)(struct IEnumSearchRoots *);
    HRESULT (* Next)(struct IEnumSearchRoots *, ULONG, struct ISearchRoot * *, ULONG *);
    HRESULT (* Skip)(struct IEnumSearchRoots *, ULONG);
    HRESULT (* Reset)(struct IEnumSearchRoots *);
    HRESULT (* Clone)(struct IEnumSearchRoots *, struct IEnumSearchRoots * *);
};

struct IEnumSearchRoots {
    struct IEnumSearchRootsVtbl * lpVtbl;
};

struct ISearchRoot {
    struct ISearchRootVtbl * lpVtbl;
};

typedef struct IEnumSearchScopeRules IEnumSearchScopeRules, *PIEnumSearchScopeRules;

typedef struct IEnumSearchScopeRulesVtbl IEnumSearchScopeRulesVtbl, *PIEnumSearchScopeRulesVtbl;

typedef struct ISearchScopeRule ISearchScopeRule, *PISearchScopeRule;

typedef struct ISearchScopeRuleVtbl ISearchScopeRuleVtbl, *PISearchScopeRuleVtbl;

struct ISearchScopeRuleVtbl {
    HRESULT (* QueryInterface)(struct ISearchScopeRule *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchScopeRule *);
    ULONG (* Release)(struct ISearchScopeRule *);
    HRESULT (* get_PatternOrURL)(struct ISearchScopeRule *, LPWSTR *);
    HRESULT (* get_IsIncluded)(struct ISearchScopeRule *, BOOL *);
    HRESULT (* get_IsDefault)(struct ISearchScopeRule *, BOOL *);
    HRESULT (* get_FollowFlags)(struct ISearchScopeRule *, DWORD *);
};

struct IEnumSearchScopeRules {
    struct IEnumSearchScopeRulesVtbl * lpVtbl;
};

struct IEnumSearchScopeRulesVtbl {
    HRESULT (* QueryInterface)(struct IEnumSearchScopeRules *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumSearchScopeRules *);
    ULONG (* Release)(struct IEnumSearchScopeRules *);
    HRESULT (* Next)(struct IEnumSearchScopeRules *, ULONG, struct ISearchScopeRule * *, ULONG *);
    HRESULT (* Skip)(struct IEnumSearchScopeRules *, ULONG);
    HRESULT (* Reset)(struct IEnumSearchScopeRules *);
    HRESULT (* Clone)(struct IEnumSearchScopeRules *, struct IEnumSearchScopeRules * *);
};

struct ISearchScopeRule {
    struct ISearchScopeRuleVtbl * lpVtbl;
};

typedef struct IGatherInlineStatus IGatherInlineStatus, *PIGatherInlineStatus;

typedef struct IGatherInlineStatusVtbl IGatherInlineStatusVtbl, *PIGatherInlineStatusVtbl;

typedef enum _SEARCH_INDEXING_PHASE SEARCH_INDEXING_PHASE;

typedef struct _SEARCH_ITEM_INDEXING_STATUS SEARCH_ITEM_INDEXING_STATUS;

struct IGatherInlineStatusVtbl {
    HRESULT (* QueryInterface)(struct IGatherInlineStatus *, IID *, void * *);
    ULONG (* AddRef)(struct IGatherInlineStatus *);
    ULONG (* Release)(struct IGatherInlineStatus *);
    HRESULT (* SendInlineStatusChange)(struct IGatherInlineStatus *, DWORD, SEARCH_INDEXING_PHASE, DWORD, SEARCH_ITEM_INDEXING_STATUS *);
};

struct IGatherInlineStatus {
    struct IGatherInlineStatusVtbl * lpVtbl;
};

typedef struct IGatherNotifyInline IGatherNotifyInline, *PIGatherNotifyInline;

typedef struct IGatherNotifyInlineVtbl IGatherNotifyInlineVtbl, *PIGatherNotifyInlineVtbl;

typedef struct ISearchNotifyInlineSite ISearchNotifyInlineSite, *PISearchNotifyInlineSite;

typedef struct _INLINE_NOTIFY_DATA_CHANGE_ENTRY INLINE_NOTIFY_DATA_CHANGE_ENTRY;

typedef struct ISearchNotifyInlineSiteVtbl ISearchNotifyInlineSiteVtbl, *PISearchNotifyInlineSiteVtbl;

struct ISearchNotifyInlineSite {
    struct ISearchNotifyInlineSiteVtbl * lpVtbl;
};

struct ISearchNotifyInlineSiteVtbl {
    HRESULT (* QueryInterface)(struct ISearchNotifyInlineSite *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchNotifyInlineSite *);
    ULONG (* Release)(struct ISearchNotifyInlineSite *);
    HRESULT (* OnItemIndexedStatusChange)(struct ISearchNotifyInlineSite *, SEARCH_INDEXING_PHASE, DWORD, SEARCH_ITEM_INDEXING_STATUS *);
    HRESULT (* OnCatalogStatusChange)(struct ISearchNotifyInlineSite *, GUID *, GUID *, DWORD);
};

struct IGatherNotifyInline {
    struct IGatherNotifyInlineVtbl * lpVtbl;
};

struct IGatherNotifyInlineVtbl {
    HRESULT (* QueryInterface)(struct IGatherNotifyInline *, IID *, void * *);
    ULONG (* AddRef)(struct IGatherNotifyInline *);
    ULONG (* Release)(struct IGatherNotifyInline *);
    HRESULT (* Initialize)(struct IGatherNotifyInline *, LPCWSTR, LPCWSTR, struct ISearchNotifyInlineSite *, GUID *, GUID *, DWORD *);
    HRESULT (* OnDataChange)(struct IGatherNotifyInline *, DWORD, INLINE_NOTIFY_DATA_CHANGE_ENTRY *, DWORD *, HRESULT *);
};

typedef struct IGatherNotifyInlineInternal IGatherNotifyInlineInternal, *PIGatherNotifyInlineInternal;

typedef struct IGatherNotifyInlineInternalVtbl IGatherNotifyInlineInternalVtbl, *PIGatherNotifyInlineInternalVtbl;

struct IGatherNotifyInlineInternal {
    struct IGatherNotifyInlineInternalVtbl * lpVtbl;
};

struct IGatherNotifyInlineInternalVtbl {
    HRESULT (* QueryInterface)(struct IGatherNotifyInlineInternal *, IID *, void * *);
    ULONG (* AddRef)(struct IGatherNotifyInlineInternal *);
    ULONG (* Release)(struct IGatherNotifyInlineInternal *);
    HRESULT (* RegisterInlineNotificationClient)(struct IGatherNotifyInlineInternal *, struct ISearchNotifyInlineSite *, GUID *, GUID *, DWORD *, DWORD *);
    HRESULT (* OnDataChangeInline)(struct IGatherNotifyInlineInternal *, DWORD, DWORD, INLINE_NOTIFY_DATA_CHANGE_ENTRY *, DWORD *, HRESULT *);
    HRESULT (* SendItemIndexedStatusChange)(struct IGatherNotifyInlineInternal *, DWORD, SEARCH_INDEXING_PHASE, DWORD, SEARCH_ITEM_INDEXING_STATUS *);
    HRESULT (* ReleaseInlineNotificationClient)(struct IGatherNotifyInlineInternal *, DWORD);
};

typedef struct _INCREMENTAL_ACCESS_INFO INCREMENTAL_ACCESS_INFO;

typedef struct IOpLockStatus IOpLockStatus, *PIOpLockStatus;

typedef struct IOpLockStatusVtbl IOpLockStatusVtbl, *PIOpLockStatusVtbl;

struct IOpLockStatus {
    struct IOpLockStatusVtbl * lpVtbl;
};

struct IOpLockStatusVtbl {
    HRESULT (* QueryInterface)(struct IOpLockStatus *, IID *, void * *);
    ULONG (* AddRef)(struct IOpLockStatus *);
    ULONG (* Release)(struct IOpLockStatus *);
    HRESULT (* IsOplockValid)(struct IOpLockStatus *, BOOL *);
    HRESULT (* IsOplockBroken)(struct IOpLockStatus *, BOOL *);
    HRESULT (* GetOplockEventHandle)(struct IOpLockStatus *, HANDLE *);
};

typedef struct IProtocolHandlerSite IProtocolHandlerSite, *PIProtocolHandlerSite;

typedef struct IProtocolHandlerSiteVtbl IProtocolHandlerSiteVtbl, *PIProtocolHandlerSiteVtbl;

struct IProtocolHandlerSite {
    struct IProtocolHandlerSiteVtbl * lpVtbl;
};

struct IProtocolHandlerSiteVtbl {
    HRESULT (* QueryInterface)(struct IProtocolHandlerSite *, IID *, void * *);
    ULONG (* AddRef)(struct IProtocolHandlerSite *);
    ULONG (* Release)(struct IProtocolHandlerSite *);
    HRESULT (* GetFilter)(struct IProtocolHandlerSite *, CLSID *, LPCWSTR, LPCWSTR, struct IFilter * *);
};

typedef struct IRowsetEvents IRowsetEvents, *PIRowsetEvents;

typedef struct IRowsetEventsVtbl IRowsetEventsVtbl, *PIRowsetEventsVtbl;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0026_0001 ROWSETEVENT_ITEMSTATE;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0026_0002 ROWSETEVENT_TYPE;

struct IRowsetEvents {
    struct IRowsetEventsVtbl * lpVtbl;
};

struct IRowsetEventsVtbl {
    HRESULT (* QueryInterface)(struct IRowsetEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetEvents *);
    ULONG (* Release)(struct IRowsetEvents *);
    HRESULT (* OnNewItem)(struct IRowsetEvents *, PROPVARIANT *, ROWSETEVENT_ITEMSTATE);
    HRESULT (* OnChangedItem)(struct IRowsetEvents *, PROPVARIANT *, ROWSETEVENT_ITEMSTATE, ROWSETEVENT_ITEMSTATE);
    HRESULT (* OnDeletedItem)(struct IRowsetEvents *, PROPVARIANT *, ROWSETEVENT_ITEMSTATE);
    HRESULT (* OnRowsetEvent)(struct IRowsetEvents *, ROWSETEVENT_TYPE, PROPVARIANT *);
};

typedef struct IRowsetPrioritization IRowsetPrioritization, *PIRowsetPrioritization;

typedef struct IRowsetPrioritizationVtbl IRowsetPrioritizationVtbl, *PIRowsetPrioritizationVtbl;

typedef enum __MIDL___MIDL_itf_searchapi_0000_0025_0001 PRIORITY_LEVEL;

struct IRowsetPrioritizationVtbl {
    HRESULT (* QueryInterface)(struct IRowsetPrioritization *, IID *, void * *);
    ULONG (* AddRef)(struct IRowsetPrioritization *);
    ULONG (* Release)(struct IRowsetPrioritization *);
    HRESULT (* SetScopePriority)(struct IRowsetPrioritization *, PRIORITY_LEVEL, DWORD);
    HRESULT (* GetScopePriority)(struct IRowsetPrioritization *, PRIORITY_LEVEL *, DWORD *);
    HRESULT (* GetScopeStatistics)(struct IRowsetPrioritization *, DWORD *, DWORD *, DWORD *);
};

struct IRowsetPrioritization {
    struct IRowsetPrioritizationVtbl * lpVtbl;
};

typedef struct ISearchCatalogManager ISearchCatalogManager, *PISearchCatalogManager;

typedef struct ISearchCatalogManagerVtbl ISearchCatalogManagerVtbl, *PISearchCatalogManagerVtbl;

typedef struct ISearchPersistentItemsChangedSink ISearchPersistentItemsChangedSink, *PISearchPersistentItemsChangedSink;

typedef struct ISearchViewChangedSink ISearchViewChangedSink, *PISearchViewChangedSink;

typedef struct ISearchQueryHelper ISearchQueryHelper, *PISearchQueryHelper;

typedef struct ISearchCrawlScopeManager ISearchCrawlScopeManager, *PISearchCrawlScopeManager;

typedef struct ISearchPersistentItemsChangedSinkVtbl ISearchPersistentItemsChangedSinkVtbl, *PISearchPersistentItemsChangedSinkVtbl;

typedef struct _SEARCH_ITEM_PERSISTENT_CHANGE SEARCH_ITEM_PERSISTENT_CHANGE;

typedef struct ISearchViewChangedSinkVtbl ISearchViewChangedSinkVtbl, *PISearchViewChangedSinkVtbl;

typedef LONG ITEMID;

typedef struct _SEARCH_ITEM_CHANGE SEARCH_ITEM_CHANGE;

typedef struct ISearchQueryHelperVtbl ISearchQueryHelperVtbl, *PISearchQueryHelperVtbl;

typedef enum _SEARCH_TERM_EXPANSION SEARCH_TERM_EXPANSION;

typedef enum _SEARCH_QUERY_SYNTAX SEARCH_QUERY_SYNTAX;

typedef struct _SEARCH_COLUMN_PROPERTIES SEARCH_COLUMN_PROPERTIES;

typedef struct ISearchCrawlScopeManagerVtbl ISearchCrawlScopeManagerVtbl, *PISearchCrawlScopeManagerVtbl;

struct ISearchQueryHelperVtbl {
    HRESULT (* QueryInterface)(struct ISearchQueryHelper *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchQueryHelper *);
    ULONG (* Release)(struct ISearchQueryHelper *);
    HRESULT (* get_ConnectionString)(struct ISearchQueryHelper *, LPWSTR *);
    HRESULT (* put_QueryContentLocale)(struct ISearchQueryHelper *, LCID);
    HRESULT (* get_QueryContentLocale)(struct ISearchQueryHelper *, LCID *);
    HRESULT (* put_QueryKeywordLocale)(struct ISearchQueryHelper *, LCID);
    HRESULT (* get_QueryKeywordLocale)(struct ISearchQueryHelper *, LCID *);
    HRESULT (* put_QueryTermExpansion)(struct ISearchQueryHelper *, SEARCH_TERM_EXPANSION);
    HRESULT (* get_QueryTermExpansion)(struct ISearchQueryHelper *, SEARCH_TERM_EXPANSION *);
    HRESULT (* put_QuerySyntax)(struct ISearchQueryHelper *, SEARCH_QUERY_SYNTAX);
    HRESULT (* get_QuerySyntax)(struct ISearchQueryHelper *, SEARCH_QUERY_SYNTAX *);
    HRESULT (* put_QueryContentProperties)(struct ISearchQueryHelper *, LPCWSTR);
    HRESULT (* get_QueryContentProperties)(struct ISearchQueryHelper *, LPWSTR *);
    HRESULT (* put_QuerySelectColumns)(struct ISearchQueryHelper *, LPCWSTR);
    HRESULT (* get_QuerySelectColumns)(struct ISearchQueryHelper *, LPWSTR *);
    HRESULT (* put_QueryWhereRestrictions)(struct ISearchQueryHelper *, LPCWSTR);
    HRESULT (* get_QueryWhereRestrictions)(struct ISearchQueryHelper *, LPWSTR *);
    HRESULT (* put_QuerySorting)(struct ISearchQueryHelper *, LPCWSTR);
    HRESULT (* get_QuerySorting)(struct ISearchQueryHelper *, LPWSTR *);
    HRESULT (* GenerateSQLFromUserQuery)(struct ISearchQueryHelper *, LPCWSTR, LPWSTR *);
    HRESULT (* WriteProperties)(struct ISearchQueryHelper *, ITEMID, DWORD, PROPERTYKEY *, SEARCH_COLUMN_PROPERTIES *, FILETIME *);
    HRESULT (* put_QueryMaxResults)(struct ISearchQueryHelper *, LONG);
    HRESULT (* get_QueryMaxResults)(struct ISearchQueryHelper *, LONG *);
};

struct ISearchViewChangedSinkVtbl {
    HRESULT (* QueryInterface)(struct ISearchViewChangedSink *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchViewChangedSink *);
    ULONG (* Release)(struct ISearchViewChangedSink *);
    HRESULT (* OnChange)(struct ISearchViewChangedSink *, ITEMID *, SEARCH_ITEM_CHANGE *, BOOL *);
};

struct ISearchQueryHelper {
    struct ISearchQueryHelperVtbl * lpVtbl;
};

struct ISearchCrawlScopeManager {
    struct ISearchCrawlScopeManagerVtbl * lpVtbl;
};

struct ISearchCatalogManager {
    struct ISearchCatalogManagerVtbl * lpVtbl;
};

struct ISearchCrawlScopeManagerVtbl {
    HRESULT (* QueryInterface)(struct ISearchCrawlScopeManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchCrawlScopeManager *);
    ULONG (* Release)(struct ISearchCrawlScopeManager *);
    HRESULT (* AddDefaultScopeRule)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL, DWORD);
    HRESULT (* AddRoot)(struct ISearchCrawlScopeManager *, struct ISearchRoot *);
    HRESULT (* RemoveRoot)(struct ISearchCrawlScopeManager *, LPCWSTR);
    HRESULT (* EnumerateRoots)(struct ISearchCrawlScopeManager *, struct IEnumSearchRoots * *);
    HRESULT (* AddHierarchicalScope)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL, BOOL, BOOL);
    HRESULT (* AddUserScopeRule)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL, BOOL, DWORD);
    HRESULT (* RemoveScopeRule)(struct ISearchCrawlScopeManager *, LPCWSTR);
    HRESULT (* EnumerateScopeRules)(struct ISearchCrawlScopeManager *, struct IEnumSearchScopeRules * *);
    HRESULT (* HasParentScopeRule)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL *);
    HRESULT (* HasChildScopeRule)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL *);
    HRESULT (* IncludedInCrawlScope)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL *);
    HRESULT (* IncludedInCrawlScopeEx)(struct ISearchCrawlScopeManager *, LPCWSTR, BOOL *, CLUSION_REASON *);
    HRESULT (* RevertToDefaultScopes)(struct ISearchCrawlScopeManager *);
    HRESULT (* SaveAll)(struct ISearchCrawlScopeManager *);
    HRESULT (* GetParentScopeVersionId)(struct ISearchCrawlScopeManager *, LPCWSTR, LONG *);
    HRESULT (* RemoveDefaultScopeRule)(struct ISearchCrawlScopeManager *, LPCWSTR);
};

struct ISearchPersistentItemsChangedSinkVtbl {
    HRESULT (* QueryInterface)(struct ISearchPersistentItemsChangedSink *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchPersistentItemsChangedSink *);
    ULONG (* Release)(struct ISearchPersistentItemsChangedSink *);
    HRESULT (* StartedMonitoringScope)(struct ISearchPersistentItemsChangedSink *, LPCWSTR);
    HRESULT (* StoppedMonitoringScope)(struct ISearchPersistentItemsChangedSink *, LPCWSTR);
    HRESULT (* OnItemsChanged)(struct ISearchPersistentItemsChangedSink *, DWORD, SEARCH_ITEM_PERSISTENT_CHANGE *, HRESULT *);
};

struct ISearchPersistentItemsChangedSink {
    struct ISearchPersistentItemsChangedSinkVtbl * lpVtbl;
};

struct ISearchViewChangedSink {
    struct ISearchViewChangedSinkVtbl * lpVtbl;
};

struct ISearchCatalogManagerVtbl {
    HRESULT (* QueryInterface)(struct ISearchCatalogManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchCatalogManager *);
    ULONG (* Release)(struct ISearchCatalogManager *);
    HRESULT (* get_Name)(struct ISearchCatalogManager *, LPWSTR *);
    HRESULT (* GetParameter)(struct ISearchCatalogManager *, LPCWSTR, PROPVARIANT * *);
    HRESULT (* SetParameter)(struct ISearchCatalogManager *, LPCWSTR, PROPVARIANT *);
    HRESULT (* GetCatalogStatus)(struct ISearchCatalogManager *, CatalogStatus *, CatalogPausedReason *);
    HRESULT (* Reset)(struct ISearchCatalogManager *);
    HRESULT (* Reindex)(struct ISearchCatalogManager *);
    HRESULT (* ReindexMatchingURLs)(struct ISearchCatalogManager *, LPCWSTR);
    HRESULT (* ReindexSearchRoot)(struct ISearchCatalogManager *, LPCWSTR);
    HRESULT (* put_ConnectTimeout)(struct ISearchCatalogManager *, DWORD);
    HRESULT (* get_ConnectTimeout)(struct ISearchCatalogManager *, DWORD *);
    HRESULT (* put_DataTimeout)(struct ISearchCatalogManager *, DWORD);
    HRESULT (* get_DataTimeout)(struct ISearchCatalogManager *, DWORD *);
    HRESULT (* NumberOfItems)(struct ISearchCatalogManager *, LONG *);
    HRESULT (* NumberOfItemsToIndex)(struct ISearchCatalogManager *, LONG *, LONG *, LONG *);
    HRESULT (* URLBeingIndexed)(struct ISearchCatalogManager *, LPWSTR *);
    HRESULT (* GetURLIndexingState)(struct ISearchCatalogManager *, LPCWSTR, DWORD *);
    HRESULT (* GetPersistentItemsChangedSink)(struct ISearchCatalogManager *, struct ISearchPersistentItemsChangedSink * *);
    HRESULT (* RegisterViewForNotification)(struct ISearchCatalogManager *, LPCWSTR, struct ISearchViewChangedSink *, DWORD *);
    HRESULT (* GetItemsChangedSink)(struct ISearchCatalogManager *, struct ISearchNotifyInlineSite *, IID *, void * *, GUID *, GUID *, DWORD *);
    HRESULT (* UnregisterViewForNotification)(struct ISearchCatalogManager *, DWORD);
    HRESULT (* SetExtensionClusion)(struct ISearchCatalogManager *, LPCWSTR, BOOL);
    HRESULT (* EnumerateExcludedExtensions)(struct ISearchCatalogManager *, struct IEnumString * *);
    HRESULT (* GetQueryHelper)(struct ISearchCatalogManager *, struct ISearchQueryHelper * *);
    HRESULT (* put_DiacriticSensitivity)(struct ISearchCatalogManager *, BOOL);
    HRESULT (* get_DiacriticSensitivity)(struct ISearchCatalogManager *, BOOL *);
    HRESULT (* GetCrawlScopeManager)(struct ISearchCatalogManager *, struct ISearchCrawlScopeManager * *);
};

typedef struct ISearchCatalogManager2 ISearchCatalogManager2, *PISearchCatalogManager2;

typedef struct ISearchCatalogManager2Vtbl ISearchCatalogManager2Vtbl, *PISearchCatalogManager2Vtbl;

typedef int PRIORITIZE_FLAGS;

struct ISearchCatalogManager2Vtbl {
    HRESULT (* QueryInterface)(struct ISearchCatalogManager2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchCatalogManager2 *);
    ULONG (* Release)(struct ISearchCatalogManager2 *);
    HRESULT (* get_Name)(struct ISearchCatalogManager2 *, LPWSTR *);
    HRESULT (* GetParameter)(struct ISearchCatalogManager2 *, LPCWSTR, PROPVARIANT * *);
    HRESULT (* SetParameter)(struct ISearchCatalogManager2 *, LPCWSTR, PROPVARIANT *);
    HRESULT (* GetCatalogStatus)(struct ISearchCatalogManager2 *, CatalogStatus *, CatalogPausedReason *);
    HRESULT (* Reset)(struct ISearchCatalogManager2 *);
    HRESULT (* Reindex)(struct ISearchCatalogManager2 *);
    HRESULT (* ReindexMatchingURLs)(struct ISearchCatalogManager2 *, LPCWSTR);
    HRESULT (* ReindexSearchRoot)(struct ISearchCatalogManager2 *, LPCWSTR);
    HRESULT (* put_ConnectTimeout)(struct ISearchCatalogManager2 *, DWORD);
    HRESULT (* get_ConnectTimeout)(struct ISearchCatalogManager2 *, DWORD *);
    HRESULT (* put_DataTimeout)(struct ISearchCatalogManager2 *, DWORD);
    HRESULT (* get_DataTimeout)(struct ISearchCatalogManager2 *, DWORD *);
    HRESULT (* NumberOfItems)(struct ISearchCatalogManager2 *, LONG *);
    HRESULT (* NumberOfItemsToIndex)(struct ISearchCatalogManager2 *, LONG *, LONG *, LONG *);
    HRESULT (* URLBeingIndexed)(struct ISearchCatalogManager2 *, LPWSTR *);
    HRESULT (* GetURLIndexingState)(struct ISearchCatalogManager2 *, LPCWSTR, DWORD *);
    HRESULT (* GetPersistentItemsChangedSink)(struct ISearchCatalogManager2 *, struct ISearchPersistentItemsChangedSink * *);
    HRESULT (* RegisterViewForNotification)(struct ISearchCatalogManager2 *, LPCWSTR, struct ISearchViewChangedSink *, DWORD *);
    HRESULT (* GetItemsChangedSink)(struct ISearchCatalogManager2 *, struct ISearchNotifyInlineSite *, IID *, void * *, GUID *, GUID *, DWORD *);
    HRESULT (* UnregisterViewForNotification)(struct ISearchCatalogManager2 *, DWORD);
    HRESULT (* SetExtensionClusion)(struct ISearchCatalogManager2 *, LPCWSTR, BOOL);
    HRESULT (* EnumerateExcludedExtensions)(struct ISearchCatalogManager2 *, struct IEnumString * *);
    HRESULT (* GetQueryHelper)(struct ISearchCatalogManager2 *, struct ISearchQueryHelper * *);
    HRESULT (* put_DiacriticSensitivity)(struct ISearchCatalogManager2 *, BOOL);
    HRESULT (* get_DiacriticSensitivity)(struct ISearchCatalogManager2 *, BOOL *);
    HRESULT (* GetCrawlScopeManager)(struct ISearchCatalogManager2 *, struct ISearchCrawlScopeManager * *);
    HRESULT (* PrioritizeMatchingURLs)(struct ISearchCatalogManager2 *, LPCWSTR, PRIORITIZE_FLAGS);
};

struct ISearchCatalogManager2 {
    struct ISearchCatalogManager2Vtbl * lpVtbl;
};

typedef struct ISearchCrawlScopeManager2 ISearchCrawlScopeManager2, *PISearchCrawlScopeManager2;

typedef struct ISearchCrawlScopeManager2Vtbl ISearchCrawlScopeManager2Vtbl, *PISearchCrawlScopeManager2Vtbl;

struct ISearchCrawlScopeManager2Vtbl {
    HRESULT (* QueryInterface)(struct ISearchCrawlScopeManager2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchCrawlScopeManager2 *);
    ULONG (* Release)(struct ISearchCrawlScopeManager2 *);
    HRESULT (* AddDefaultScopeRule)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL, DWORD);
    HRESULT (* AddRoot)(struct ISearchCrawlScopeManager2 *, struct ISearchRoot *);
    HRESULT (* RemoveRoot)(struct ISearchCrawlScopeManager2 *, LPCWSTR);
    HRESULT (* EnumerateRoots)(struct ISearchCrawlScopeManager2 *, struct IEnumSearchRoots * *);
    HRESULT (* AddHierarchicalScope)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL, BOOL, BOOL);
    HRESULT (* AddUserScopeRule)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL, BOOL, DWORD);
    HRESULT (* RemoveScopeRule)(struct ISearchCrawlScopeManager2 *, LPCWSTR);
    HRESULT (* EnumerateScopeRules)(struct ISearchCrawlScopeManager2 *, struct IEnumSearchScopeRules * *);
    HRESULT (* HasParentScopeRule)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL *);
    HRESULT (* HasChildScopeRule)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL *);
    HRESULT (* IncludedInCrawlScope)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL *);
    HRESULT (* IncludedInCrawlScopeEx)(struct ISearchCrawlScopeManager2 *, LPCWSTR, BOOL *, CLUSION_REASON *);
    HRESULT (* RevertToDefaultScopes)(struct ISearchCrawlScopeManager2 *);
    HRESULT (* SaveAll)(struct ISearchCrawlScopeManager2 *);
    HRESULT (* GetParentScopeVersionId)(struct ISearchCrawlScopeManager2 *, LPCWSTR, LONG *);
    HRESULT (* RemoveDefaultScopeRule)(struct ISearchCrawlScopeManager2 *, LPCWSTR);
    HRESULT (* GetVersion)(struct ISearchCrawlScopeManager2 *, long * *, HANDLE *);
};

struct ISearchCrawlScopeManager2 {
    struct ISearchCrawlScopeManager2Vtbl * lpVtbl;
};

typedef struct ISearchItemsChangedSink ISearchItemsChangedSink, *PISearchItemsChangedSink;

typedef struct ISearchItemsChangedSinkVtbl ISearchItemsChangedSinkVtbl, *PISearchItemsChangedSinkVtbl;

struct ISearchItemsChangedSink {
    struct ISearchItemsChangedSinkVtbl * lpVtbl;
};

struct ISearchItemsChangedSinkVtbl {
    HRESULT (* QueryInterface)(struct ISearchItemsChangedSink *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchItemsChangedSink *);
    ULONG (* Release)(struct ISearchItemsChangedSink *);
    HRESULT (* StartedMonitoringScope)(struct ISearchItemsChangedSink *, LPCWSTR);
    HRESULT (* StoppedMonitoringScope)(struct ISearchItemsChangedSink *, LPCWSTR);
    HRESULT (* OnItemsChanged)(struct ISearchItemsChangedSink *, DWORD, SEARCH_ITEM_CHANGE *, DWORD *, HRESULT *);
};

typedef struct ISearchLanguageSupport ISearchLanguageSupport, *PISearchLanguageSupport;

typedef struct ISearchLanguageSupportVtbl ISearchLanguageSupportVtbl, *PISearchLanguageSupportVtbl;

struct ISearchLanguageSupportVtbl {
    HRESULT (* QueryInterface)(struct ISearchLanguageSupport *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchLanguageSupport *);
    ULONG (* Release)(struct ISearchLanguageSupport *);
    HRESULT (* SetDiacriticSensitivity)(struct ISearchLanguageSupport *, BOOL);
    HRESULT (* GetDiacriticSensitivity)(struct ISearchLanguageSupport *, BOOL *);
    HRESULT (* LoadWordBreaker)(struct ISearchLanguageSupport *, LCID, IID *, void * *, LCID *);
    HRESULT (* LoadStemmer)(struct ISearchLanguageSupport *, LCID, IID *, void * *, LCID *);
    HRESULT (* IsPrefixNormalized)(struct ISearchLanguageSupport *, LPCWSTR, ULONG, LPCWSTR, ULONG, ULONG *);
};

struct ISearchLanguageSupport {
    struct ISearchLanguageSupportVtbl * lpVtbl;
};

typedef struct ISearchManager ISearchManager, *PISearchManager;

typedef struct ISearchManagerVtbl ISearchManagerVtbl, *PISearchManagerVtbl;

struct ISearchManager {
    struct ISearchManagerVtbl * lpVtbl;
};

struct ISearchManagerVtbl {
    HRESULT (* QueryInterface)(struct ISearchManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchManager *);
    ULONG (* Release)(struct ISearchManager *);
    HRESULT (* GetIndexerVersionStr)(struct ISearchManager *, LPWSTR *);
    HRESULT (* GetIndexerVersion)(struct ISearchManager *, DWORD *, DWORD *);
    HRESULT (* GetParameter)(struct ISearchManager *, LPCWSTR, PROPVARIANT * *);
    HRESULT (* SetParameter)(struct ISearchManager *, LPCWSTR, PROPVARIANT *);
    HRESULT (* get_ProxyName)(struct ISearchManager *, LPWSTR *);
    HRESULT (* get_BypassList)(struct ISearchManager *, LPWSTR *);
    HRESULT (* SetProxy)(struct ISearchManager *, PROXY_ACCESS, BOOL, DWORD, LPCWSTR, LPCWSTR);
    HRESULT (* GetCatalog)(struct ISearchManager *, LPCWSTR, struct ISearchCatalogManager * *);
    HRESULT (* get_UserAgent)(struct ISearchManager *, LPWSTR *);
    HRESULT (* put_UserAgent)(struct ISearchManager *, LPCWSTR);
    HRESULT (* get_UseProxy)(struct ISearchManager *, PROXY_ACCESS *);
    HRESULT (* get_LocalBypass)(struct ISearchManager *, BOOL *);
    HRESULT (* get_PortNumber)(struct ISearchManager *, DWORD *);
};

typedef struct ISearchProtocol ISearchProtocol, *PISearchProtocol;

typedef struct ISearchProtocolVtbl ISearchProtocolVtbl, *PISearchProtocolVtbl;

typedef struct _TIMEOUT_INFO TIMEOUT_INFO;

typedef struct _PROXY_INFO PROXY_INFO;

typedef struct _ITEM_INFO ITEM_INFO;

typedef struct IUrlAccessor IUrlAccessor, *PIUrlAccessor;

typedef struct IUrlAccessorVtbl IUrlAccessorVtbl, *PIUrlAccessorVtbl;

struct IUrlAccessor {
    struct IUrlAccessorVtbl * lpVtbl;
};

struct ISearchProtocol {
    struct ISearchProtocolVtbl * lpVtbl;
};

struct IUrlAccessorVtbl {
    HRESULT (* QueryInterface)(struct IUrlAccessor *, IID *, void * *);
    ULONG (* AddRef)(struct IUrlAccessor *);
    ULONG (* Release)(struct IUrlAccessor *);
    HRESULT (* AddRequestParameter)(struct IUrlAccessor *, PROPSPEC *, PROPVARIANT *);
    HRESULT (* GetDocFormat)(struct IUrlAccessor *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetCLSID)(struct IUrlAccessor *, CLSID *);
    HRESULT (* GetHost)(struct IUrlAccessor *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDirectory)(struct IUrlAccessor *);
    HRESULT (* GetSize)(struct IUrlAccessor *, ULONGLONG *);
    HRESULT (* GetLastModified)(struct IUrlAccessor *, FILETIME *);
    HRESULT (* GetFileName)(struct IUrlAccessor *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityDescriptor)(struct IUrlAccessor *, BYTE *, DWORD, DWORD *);
    HRESULT (* GetRedirectedURL)(struct IUrlAccessor *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityProvider)(struct IUrlAccessor *, CLSID *);
    HRESULT (* BindToStream)(struct IUrlAccessor *, struct IStream * *);
    HRESULT (* BindToFilter)(struct IUrlAccessor *, struct IFilter * *);
};

struct ISearchProtocolVtbl {
    HRESULT (* QueryInterface)(struct ISearchProtocol *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchProtocol *);
    ULONG (* Release)(struct ISearchProtocol *);
    HRESULT (* Init)(struct ISearchProtocol *, TIMEOUT_INFO *, struct IProtocolHandlerSite *, PROXY_INFO *);
    HRESULT (* CreateAccessor)(struct ISearchProtocol *, LPCWSTR, AUTHENTICATION_INFO *, INCREMENTAL_ACCESS_INFO *, ITEM_INFO *, struct IUrlAccessor * *);
    HRESULT (* CloseAccessor)(struct ISearchProtocol *, struct IUrlAccessor *);
    HRESULT (* ShutDown)(struct ISearchProtocol *);
};

typedef struct ISearchProtocol2 ISearchProtocol2, *PISearchProtocol2;

typedef struct ISearchProtocol2Vtbl ISearchProtocol2Vtbl, *PISearchProtocol2Vtbl;

struct ISearchProtocol2Vtbl {
    HRESULT (* QueryInterface)(struct ISearchProtocol2 *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchProtocol2 *);
    ULONG (* Release)(struct ISearchProtocol2 *);
    HRESULT (* Init)(struct ISearchProtocol2 *, TIMEOUT_INFO *, struct IProtocolHandlerSite *, PROXY_INFO *);
    HRESULT (* CreateAccessor)(struct ISearchProtocol2 *, LPCWSTR, AUTHENTICATION_INFO *, INCREMENTAL_ACCESS_INFO *, ITEM_INFO *, struct IUrlAccessor * *);
    HRESULT (* CloseAccessor)(struct ISearchProtocol2 *, struct IUrlAccessor *);
    HRESULT (* ShutDown)(struct ISearchProtocol2 *);
    HRESULT (* CreateAccessorEx)(struct ISearchProtocol2 *, LPCWSTR, AUTHENTICATION_INFO *, INCREMENTAL_ACCESS_INFO *, ITEM_INFO *, BLOB *, struct IUrlAccessor * *);
};

struct ISearchProtocol2 {
    struct ISearchProtocol2Vtbl * lpVtbl;
};

typedef struct ISearchProtocolThreadContext ISearchProtocolThreadContext, *PISearchProtocolThreadContext;

typedef struct ISearchProtocolThreadContextVtbl ISearchProtocolThreadContextVtbl, *PISearchProtocolThreadContextVtbl;

struct ISearchProtocolThreadContext {
    struct ISearchProtocolThreadContextVtbl * lpVtbl;
};

struct ISearchProtocolThreadContextVtbl {
    HRESULT (* QueryInterface)(struct ISearchProtocolThreadContext *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchProtocolThreadContext *);
    ULONG (* Release)(struct ISearchProtocolThreadContext *);
    HRESULT (* ThreadInit)(struct ISearchProtocolThreadContext *);
    HRESULT (* ThreadShutdown)(struct ISearchProtocolThreadContext *);
    HRESULT (* ThreadIdle)(struct ISearchProtocolThreadContext *, DWORD);
};

typedef struct IUrlAccessor2 IUrlAccessor2, *PIUrlAccessor2;

typedef struct IUrlAccessor2Vtbl IUrlAccessor2Vtbl, *PIUrlAccessor2Vtbl;

struct IUrlAccessor2 {
    struct IUrlAccessor2Vtbl * lpVtbl;
};

struct IUrlAccessor2Vtbl {
    HRESULT (* QueryInterface)(struct IUrlAccessor2 *, IID *, void * *);
    ULONG (* AddRef)(struct IUrlAccessor2 *);
    ULONG (* Release)(struct IUrlAccessor2 *);
    HRESULT (* AddRequestParameter)(struct IUrlAccessor2 *, PROPSPEC *, PROPVARIANT *);
    HRESULT (* GetDocFormat)(struct IUrlAccessor2 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetCLSID)(struct IUrlAccessor2 *, CLSID *);
    HRESULT (* GetHost)(struct IUrlAccessor2 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDirectory)(struct IUrlAccessor2 *);
    HRESULT (* GetSize)(struct IUrlAccessor2 *, ULONGLONG *);
    HRESULT (* GetLastModified)(struct IUrlAccessor2 *, FILETIME *);
    HRESULT (* GetFileName)(struct IUrlAccessor2 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityDescriptor)(struct IUrlAccessor2 *, BYTE *, DWORD, DWORD *);
    HRESULT (* GetRedirectedURL)(struct IUrlAccessor2 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityProvider)(struct IUrlAccessor2 *, CLSID *);
    HRESULT (* BindToStream)(struct IUrlAccessor2 *, struct IStream * *);
    HRESULT (* BindToFilter)(struct IUrlAccessor2 *, struct IFilter * *);
    HRESULT (* GetDisplayUrl)(struct IUrlAccessor2 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDocument)(struct IUrlAccessor2 *);
    HRESULT (* GetCodePage)(struct IUrlAccessor2 *, WCHAR *, DWORD, DWORD *);
};

typedef struct IUrlAccessor3 IUrlAccessor3, *PIUrlAccessor3;

typedef struct IUrlAccessor3Vtbl IUrlAccessor3Vtbl, *PIUrlAccessor3Vtbl;

struct IUrlAccessor3 {
    struct IUrlAccessor3Vtbl * lpVtbl;
};

struct IUrlAccessor3Vtbl {
    HRESULT (* QueryInterface)(struct IUrlAccessor3 *, IID *, void * *);
    ULONG (* AddRef)(struct IUrlAccessor3 *);
    ULONG (* Release)(struct IUrlAccessor3 *);
    HRESULT (* AddRequestParameter)(struct IUrlAccessor3 *, PROPSPEC *, PROPVARIANT *);
    HRESULT (* GetDocFormat)(struct IUrlAccessor3 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetCLSID)(struct IUrlAccessor3 *, CLSID *);
    HRESULT (* GetHost)(struct IUrlAccessor3 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDirectory)(struct IUrlAccessor3 *);
    HRESULT (* GetSize)(struct IUrlAccessor3 *, ULONGLONG *);
    HRESULT (* GetLastModified)(struct IUrlAccessor3 *, FILETIME *);
    HRESULT (* GetFileName)(struct IUrlAccessor3 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityDescriptor)(struct IUrlAccessor3 *, BYTE *, DWORD, DWORD *);
    HRESULT (* GetRedirectedURL)(struct IUrlAccessor3 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityProvider)(struct IUrlAccessor3 *, CLSID *);
    HRESULT (* BindToStream)(struct IUrlAccessor3 *, struct IStream * *);
    HRESULT (* BindToFilter)(struct IUrlAccessor3 *, struct IFilter * *);
    HRESULT (* GetDisplayUrl)(struct IUrlAccessor3 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDocument)(struct IUrlAccessor3 *);
    HRESULT (* GetCodePage)(struct IUrlAccessor3 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetImpersonationSidBlobs)(struct IUrlAccessor3 *, LPCWSTR, DWORD *, BLOB * *);
};

typedef struct IUrlAccessor4 IUrlAccessor4, *PIUrlAccessor4;

typedef struct IUrlAccessor4Vtbl IUrlAccessor4Vtbl, *PIUrlAccessor4Vtbl;

struct IUrlAccessor4 {
    struct IUrlAccessor4Vtbl * lpVtbl;
};

struct IUrlAccessor4Vtbl {
    HRESULT (* QueryInterface)(struct IUrlAccessor4 *, IID *, void * *);
    ULONG (* AddRef)(struct IUrlAccessor4 *);
    ULONG (* Release)(struct IUrlAccessor4 *);
    HRESULT (* AddRequestParameter)(struct IUrlAccessor4 *, PROPSPEC *, PROPVARIANT *);
    HRESULT (* GetDocFormat)(struct IUrlAccessor4 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetCLSID)(struct IUrlAccessor4 *, CLSID *);
    HRESULT (* GetHost)(struct IUrlAccessor4 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDirectory)(struct IUrlAccessor4 *);
    HRESULT (* GetSize)(struct IUrlAccessor4 *, ULONGLONG *);
    HRESULT (* GetLastModified)(struct IUrlAccessor4 *, FILETIME *);
    HRESULT (* GetFileName)(struct IUrlAccessor4 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityDescriptor)(struct IUrlAccessor4 *, BYTE *, DWORD, DWORD *);
    HRESULT (* GetRedirectedURL)(struct IUrlAccessor4 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetSecurityProvider)(struct IUrlAccessor4 *, CLSID *);
    HRESULT (* BindToStream)(struct IUrlAccessor4 *, struct IStream * *);
    HRESULT (* BindToFilter)(struct IUrlAccessor4 *, struct IFilter * *);
    HRESULT (* GetDisplayUrl)(struct IUrlAccessor4 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* IsDocument)(struct IUrlAccessor4 *);
    HRESULT (* GetCodePage)(struct IUrlAccessor4 *, WCHAR *, DWORD, DWORD *);
    HRESULT (* GetImpersonationSidBlobs)(struct IUrlAccessor4 *, LPCWSTR, DWORD *, BLOB * *);
    HRESULT (* ShouldIndexItemContent)(struct IUrlAccessor4 *, BOOL *);
    HRESULT (* ShouldIndexProperty)(struct IUrlAccessor4 *, PROPERTYKEY *, BOOL *);
};

typedef enum tagPRIORITIZE_FLAGS {
    PRIORITIZE_FLAG_IGNOREFAILURECOUNT=2,
    PRIORITIZE_FLAG_RETRYFAILEDITEMS=1
} tagPRIORITIZE_FLAGS;

#define NETWORK_ALIVE_AOL 4

#define NETWORK_ALIVE_INTERNET 8

#define NETWORK_ALIVE_LAN 1

#define NETWORK_ALIVE_WAN 2

typedef struct tagQOCINFO tagQOCINFO, *PtagQOCINFO;

typedef struct tagQOCINFO * LPQOCINFO;

struct tagQOCINFO {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwInSpeed;
    DWORD dwOutSpeed;
};

typedef struct tagQOCINFO QOCINFO;

typedef enum __MIDL___MIDL_itf_sensorsapi_0000_0000_0001 {
    SENSOR_STATE_ACCESS_DENIED=5,
    SENSOR_STATE_ERROR=6,
    SENSOR_STATE_INITIALIZING=4,
    SENSOR_STATE_MAX=7,
    SENSOR_STATE_MIN=0,
    SENSOR_STATE_NOT_AVAILABLE=2,
    SENSOR_STATE_NO_DATA=3,
    SENSOR_STATE_READY=1
} __MIDL___MIDL_itf_sensorsapi_0000_0000_0001;

typedef enum __MIDL___MIDL_itf_sensorsapi_0000_0000_0002 {
    SENSOR_CONNECTION_TYPE_PC_ATTACHED=1,
    SENSOR_CONNECTION_TYPE_PC_EXTERNAL=2,
    SENSOR_CONNECTION_TYPE_PC_INTEGRATED=0
} __MIDL___MIDL_itf_sensorsapi_0000_0000_0002;

typedef struct ILogicalSensorManager ILogicalSensorManager, *PILogicalSensorManager;

typedef struct ILogicalSensorManagerVtbl ILogicalSensorManagerVtbl, *PILogicalSensorManagerVtbl;

struct ILogicalSensorManagerVtbl {
    HRESULT (* QueryInterface)(struct ILogicalSensorManager *, IID *, void * *);
    ULONG (* AddRef)(struct ILogicalSensorManager *);
    ULONG (* Release)(struct ILogicalSensorManager *);
    HRESULT (* Connect)(struct ILogicalSensorManager *, GUID *, struct IPropertyStore *);
    HRESULT (* Uninstall)(struct ILogicalSensorManager *, GUID *);
    HRESULT (* Disconnect)(struct ILogicalSensorManager *, GUID *);
};

struct ILogicalSensorManager {
    struct ILogicalSensorManagerVtbl * lpVtbl;
};

typedef struct ISensor ISensor, *PISensor;

typedef struct ISensorVtbl ISensorVtbl, *PISensorVtbl;

typedef GUID SENSOR_CATEGORY_ID;

typedef GUID SENSOR_TYPE_ID;

typedef enum __MIDL___MIDL_itf_sensorsapi_0000_0000_0001 SensorState;

typedef struct ISensorDataReport ISensorDataReport, *PISensorDataReport;

typedef struct ISensorEvents ISensorEvents, *PISensorEvents;

typedef struct ISensorDataReportVtbl ISensorDataReportVtbl, *PISensorDataReportVtbl;

typedef struct ISensorEventsVtbl ISensorEventsVtbl, *PISensorEventsVtbl;

typedef GUID * REFSENSOR_ID;

struct ISensorDataReportVtbl {
    HRESULT (* QueryInterface)(struct ISensorDataReport *, IID *, void * *);
    ULONG (* AddRef)(struct ISensorDataReport *);
    ULONG (* Release)(struct ISensorDataReport *);
    HRESULT (* GetTimestamp)(struct ISensorDataReport *, SYSTEMTIME *);
    HRESULT (* GetSensorValue)(struct ISensorDataReport *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetSensorValues)(struct ISensorDataReport *, struct IPortableDeviceKeyCollection *, struct IPortableDeviceValues * *);
};

struct ISensorVtbl {
    HRESULT (* QueryInterface)(struct ISensor *, IID *, void * *);
    ULONG (* AddRef)(struct ISensor *);
    ULONG (* Release)(struct ISensor *);
    HRESULT (* GetID)(struct ISensor *, SENSOR_ID *);
    HRESULT (* GetCategory)(struct ISensor *, SENSOR_CATEGORY_ID *);
    HRESULT (* GetType)(struct ISensor *, SENSOR_TYPE_ID *);
    HRESULT (* GetFriendlyName)(struct ISensor *, BSTR *);
    HRESULT (* GetProperty)(struct ISensor *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetProperties)(struct ISensor *, struct IPortableDeviceKeyCollection *, struct IPortableDeviceValues * *);
    HRESULT (* GetSupportedDataFields)(struct ISensor *, struct IPortableDeviceKeyCollection * *);
    HRESULT (* SetProperties)(struct ISensor *, struct IPortableDeviceValues *, struct IPortableDeviceValues * *);
    HRESULT (* SupportsDataField)(struct ISensor *, PROPERTYKEY *, VARIANT_BOOL *);
    HRESULT (* GetState)(struct ISensor *, SensorState *);
    HRESULT (* GetData)(struct ISensor *, struct ISensorDataReport * *);
    HRESULT (* SupportsEvent)(struct ISensor *, GUID *, VARIANT_BOOL *);
    HRESULT (* GetEventInterest)(struct ISensor *, GUID * *, ULONG *);
    HRESULT (* SetEventInterest)(struct ISensor *, GUID *, ULONG);
    HRESULT (* SetEventSink)(struct ISensor *, struct ISensorEvents *);
};

struct ISensorEvents {
    struct ISensorEventsVtbl * lpVtbl;
};

struct ISensorEventsVtbl {
    HRESULT (* QueryInterface)(struct ISensorEvents *, IID *, void * *);
    ULONG (* AddRef)(struct ISensorEvents *);
    ULONG (* Release)(struct ISensorEvents *);
    HRESULT (* OnStateChanged)(struct ISensorEvents *, struct ISensor *, SensorState);
    HRESULT (* OnDataUpdated)(struct ISensorEvents *, struct ISensor *, struct ISensorDataReport *);
    HRESULT (* OnEvent)(struct ISensorEvents *, struct ISensor *, GUID *, struct IPortableDeviceValues *);
    HRESULT (* OnLeave)(struct ISensorEvents *, REFSENSOR_ID);
};

struct ISensor {
    struct ISensorVtbl * lpVtbl;
};

struct ISensorDataReport {
    struct ISensorDataReportVtbl * lpVtbl;
};

typedef struct ISensorCollection ISensorCollection, *PISensorCollection;

typedef struct ISensorCollectionVtbl ISensorCollectionVtbl, *PISensorCollectionVtbl;

struct ISensorCollectionVtbl {
    HRESULT (* QueryInterface)(struct ISensorCollection *, IID *, void * *);
    ULONG (* AddRef)(struct ISensorCollection *);
    ULONG (* Release)(struct ISensorCollection *);
    HRESULT (* GetAt)(struct ISensorCollection *, ULONG, struct ISensor * *);
    HRESULT (* GetCount)(struct ISensorCollection *, ULONG *);
    HRESULT (* Add)(struct ISensorCollection *, struct ISensor *);
    HRESULT (* Remove)(struct ISensorCollection *, struct ISensor *);
    HRESULT (* RemoveByID)(struct ISensorCollection *, REFSENSOR_ID);
    HRESULT (* Clear)(struct ISensorCollection *);
};

struct ISensorCollection {
    struct ISensorCollectionVtbl * lpVtbl;
};

typedef struct ISensorManager ISensorManager, *PISensorManager;

typedef struct ISensorManagerVtbl ISensorManagerVtbl, *PISensorManagerVtbl;

typedef GUID * REFSENSOR_CATEGORY_ID;

typedef GUID * REFSENSOR_TYPE_ID;

typedef struct ISensorManagerEvents ISensorManagerEvents, *PISensorManagerEvents;

typedef struct ISensorManagerEventsVtbl ISensorManagerEventsVtbl, *PISensorManagerEventsVtbl;

struct ISensorManagerEventsVtbl {
    HRESULT (* QueryInterface)(struct ISensorManagerEvents *, IID *, void * *);
    ULONG (* AddRef)(struct ISensorManagerEvents *);
    ULONG (* Release)(struct ISensorManagerEvents *);
    HRESULT (* OnSensorEnter)(struct ISensorManagerEvents *, struct ISensor *, SensorState);
};

struct ISensorManagerEvents {
    struct ISensorManagerEventsVtbl * lpVtbl;
};

struct ISensorManager {
    struct ISensorManagerVtbl * lpVtbl;
};

struct ISensorManagerVtbl {
    HRESULT (* QueryInterface)(struct ISensorManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISensorManager *);
    ULONG (* Release)(struct ISensorManager *);
    HRESULT (* GetSensorsByCategory)(struct ISensorManager *, REFSENSOR_CATEGORY_ID, struct ISensorCollection * *);
    HRESULT (* GetSensorsByType)(struct ISensorManager *, REFSENSOR_TYPE_ID, struct ISensorCollection * *);
    HRESULT (* GetSensorByID)(struct ISensorManager *, REFSENSOR_ID, struct ISensor * *);
    HRESULT (* SetEventSink)(struct ISensorManager *, struct ISensorManagerEvents *);
    HRESULT (* RequestPermissions)(struct ISensorManager *, HWND, struct ISensorCollection *, BOOL);
};

typedef struct LogicalSensorManager LogicalSensorManager, *PLogicalSensorManager;

struct LogicalSensorManager {
};

typedef struct Sensor Sensor, *PSensor;

struct Sensor {
};

typedef struct SensorCollection SensorCollection, *PSensorCollection;

struct SensorCollection {
};

typedef enum __MIDL___MIDL_itf_sensorsapi_0000_0000_0002 SensorConnectionType;

typedef struct SensorDataReport SensorDataReport, *PSensorDataReport;

struct SensorDataReport {
};

typedef struct SensorManager SensorManager, *PSensorManager;

struct SensorManager {
};

typedef struct IServiceProvider * LPSERVICEPROVIDER;

#define _JBLEN 16

typedef struct __JUMP_BUFFER __JUMP_BUFFER, *P__JUMP_BUFFER;

struct __JUMP_BUFFER {
    ulong Ebp;
    ulong Ebx;
    ulong Edi;
    ulong Esi;
    ulong Esp;
    ulong Eip;
    ulong Registration;
    ulong TryLevel;
    ulong Cookie;
    ulong UnwindFunc;
    ulong UnwindData[6];
};

typedef struct __JUMP_BUFFER _JUMP_BUFFER;

typedef int jmp_buf[16];

#define _CLOCALECP 0

#define _COFFSET 127

#define _GLOBAL_LOCALE_BIT 1

#define _PER_THREAD_LOCALE_BIT 2

typedef struct tagLC_STRINGS tagLC_STRINGS, *PtagLC_STRINGS;

typedef struct tagLC_STRINGS LC_STRINGS;

struct tagLC_STRINGS {
    wchar_t szLanguage[64];
    wchar_t szCountry[64];
    wchar_t szCodePage[16];
    wchar_t szLocaleName[85];
};

typedef struct tagLC_STRINGS * LPLC_STRINGS;

#define _SETUPAPI_VER 1537

#define COPYFLG_FORCE_FILE_IN_USE 8

#define COPYFLG_IN_USE_TRY_RENAME 16384

#define COPYFLG_NO_OVERWRITE 16

#define COPYFLG_NO_VERSION_DIALOG 32

#define COPYFLG_NODECOMP 2048

#define COPYFLG_NOPRUNE 8192

#define COPYFLG_NOSKIP 2

#define COPYFLG_NOVERSIONCHECK 4

#define COPYFLG_OVERWRITE_OLDER_ONLY 64

#define COPYFLG_PROTECTED_WINDOWS_DRIVER_FILE 256

#define COPYFLG_REPLACE_BOOT_FILE 4096

#define COPYFLG_REPLACEONLY 1024

#define COPYFLG_WARN_IF_SKIP 1

#define DELFLG_IN_USE 1

#define DELFLG_IN_USE1 65536

#define DI_AUTOASSIGNRES 64

#define DI_CLASSINSTALLPARAMS 1048576

#define DI_COMPAT_FROM_CLASS 524288

#define DI_DIDCLASS 32

#define DI_DIDCOMPAT 16

#define DI_DISABLED 2048

#define DI_DONOTCALLCONFIGMG 131072

#define DI_DRIVERPAGE_ADDED 67108864

#define DI_ENUMSINGLEINF 65536

#define DI_FLAGSEX_ALLOWEXCLUDEDDRVS 2048

#define DI_FLAGSEX_ALTPLATFORM_DRVSEARCH 268435456

#define DI_FLAGSEX_ALWAYSWRITEIDS 512

#define DI_FLAGSEX_APPENDDRIVERLIST 262144

#define DI_FLAGSEX_BACKUPONREPLACE 1048576

#define DI_FLAGSEX_CI_FAILED 4

#define DI_FLAGSEX_DEVICECHANGE 256

#define DI_FLAGSEX_DIDCOMPATINFO 32

#define DI_FLAGSEX_DIDINFOLIST 16

#define DI_FLAGSEX_DRIVERLIST_FROM_URL 2097152

#define DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS 8388608

#define DI_FLAGSEX_FILTERCLASSES 64

#define DI_FLAGSEX_FILTERSIMILARDRIVERS 33554432

#define DI_FLAGSEX_FINISHINSTALL_ACTION 8

#define DI_FLAGSEX_IN_SYSTEM_SETUP 65536

#define DI_FLAGSEX_INET_DRIVER 131072

#define DI_FLAGSEX_INSTALLEDDRIVER 67108864

#define DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE 134217728

#define DI_FLAGSEX_NO_DRVREG_MODIFY 32768

#define DI_FLAGSEX_NOUIONQUERYREMOVE 4096

#define DI_FLAGSEX_POWERPAGE_ADDED 16777216

#define DI_FLAGSEX_PREINSTALLBACKUP 524288

#define DI_FLAGSEX_PROPCHANGE_PENDING 1024

#define DI_FLAGSEX_RECURSIVESEARCH 1073741824

#define DI_FLAGSEX_RESERVED1 4194304

#define DI_FLAGSEX_RESERVED2 1

#define DI_FLAGSEX_RESERVED3 2

#define DI_FLAGSEX_RESERVED4 16384

#define DI_FLAGSEX_RESTART_DEVICE_ONLY 536870912

#define DI_FLAGSEX_SEARCH_PUBLISHED_INFS 2147483648

#define DI_FLAGSEX_SETFAILEDINSTALL 128

#define DI_FLAGSEX_USECLASSFORCOMPAT 8192

#define DI_FORCECOPY 33554432

#define DI_GENERALPAGE_ADDED 4096

#define DI_INF_IS_SORTED 32768

#define DI_INSTALLDISABLED 262144

#define DI_MULTMFGS 1024

#define DI_NEEDREBOOT 256

#define DI_NEEDRESTART 128

#define DI_NOBROWSE 512

#define DI_NODI_DEFAULTACTION 2097152

#define DI_NOFILECOPY 16777216

#define DI_NOSELECTICONS 1073741824

#define DI_NOVCP 8

#define DI_NOWRITE_IDS 2147483648

#define DI_OVERRIDE_INFFLAGS 268435456

#define DI_PROPERTIES_CHANGE 16384

#define DI_PROPS_NOCHANGEUSAGE 536870912

#define DI_QUIETINSTALL 8388608

#define DI_REMOVEDEVICE_CONFIGSPECIFIC 2

#define DI_REMOVEDEVICE_GLOBAL 1

#define DI_RESOURCEPAGE_ADDED 8192

#define DI_SHOWALL 7

#define DI_SHOWCLASS 4

#define DI_SHOWCOMPAT 2

#define DI_SHOWOEM 1

#define DI_UNREMOVEDEVICE_CONFIGSPECIFIC 2

#define DI_USECI_SELECTSTRINGS 134217728

#define DIBCI_NODISPLAYCLASS 2

#define DIBCI_NOINSTALLCLASS 1

#define DICD_GENERATE_ID 1

#define DICD_INHERIT_CLASSDRVS 2

#define DICLASSPROP_INSTALLER 1

#define DICLASSPROP_INTERFACE 2

#define DICS_DISABLE 2

#define DICS_ENABLE 1

#define DICS_FLAG_CONFIGGENERAL 4

#define DICS_FLAG_CONFIGSPECIFIC 2

#define DICS_FLAG_GLOBAL 1

#define DICS_PROPCHANGE 3

#define DICS_START 4

#define DICS_STOP 5

#define DICUSTOMDEVPROP_MERGE_MULTISZ 1

#define DIF_ADDPROPERTYPAGE_ADVANCED 35

#define DIF_ADDPROPERTYPAGE_BASIC 36

#define DIF_ADDREMOTEPROPERTYPAGE_ADVANCED 40

#define DIF_ALLOW_INSTALL 24

#define DIF_ASSIGNRESOURCES 3

#define DIF_CALCDISKSPACE 11

#define DIF_DESTROYPRIVATEDATA 12

#define DIF_DESTROYWIZARDDATA 17

#define DIF_DETECT 15

#define DIF_DETECTCANCEL 33

#define DIF_DETECTVERIFY 20

#define DIF_ENABLECLASS 19

#define DIF_FINISHINSTALL_ACTION 42

#define DIF_FIRSTTIMESETUP 6

#define DIF_FOUNDDEVICE 7

#define DIF_INSTALLCLASSDRIVERS 10

#define DIF_INSTALLDEVICE 2

#define DIF_INSTALLDEVICEFILES 21

#define DIF_INSTALLINTERFACES 32

#define DIF_INSTALLWIZARD 16

#define DIF_MOVEDEVICE 14

#define DIF_NEWDEVICEWIZARD_FINISHINSTALL 30

#define DIF_NEWDEVICEWIZARD_POSTANALYZE 29

#define DIF_NEWDEVICEWIZARD_PREANALYZE 28

#define DIF_NEWDEVICEWIZARD_PRESELECT 26

#define DIF_NEWDEVICEWIZARD_SELECT 27

#define DIF_POWERMESSAGEWAKE 39

#define DIF_PROPERTIES 4

#define DIF_PROPERTYCHANGE 18

#define DIF_REGISTER_COINSTALLERS 34

#define DIF_REGISTERDEVICE 25

#define DIF_REMOVE 5

#define DIF_RESERVED1 37

#define DIF_RESERVED2 48

#define DIF_SELECTBESTCOMPATDRV 23

#define DIF_SELECTCLASSDRIVERS 8

#define DIF_SELECTDEVICE 1

#define DIF_TROUBLESHOOTER 38

#define DIF_UNREMOVE 22

#define DIF_UNUSED1 31

#define DIF_UPDATEDRIVER_UI 41

#define DIF_VALIDATECLASSDRIVERS 9

#define DIF_VALIDATEDRIVER 13

#define DIGCDP_FLAG_ADVANCED 2

#define DIGCDP_FLAG_BASIC 1

#define DIGCDP_FLAG_REMOTE_ADVANCED 4

#define DIGCDP_FLAG_REMOTE_BASIC 3

#define DIGCF_ALLCLASSES 4

#define DIGCF_DEFAULT 1

#define DIGCF_DEVICEINTERFACE 16

#define DIGCF_INTERFACEDEVICE 16

#define DIGCF_PRESENT 2

#define DIGCF_PROFILE 8

#define DIOCR_INSTALLER 1

#define DIOCR_INTERFACE 2

#define DIOD_CANCEL_REMOVE 4

#define DIOD_INHERIT_CLASSDRVS 2

#define DIODI_NO_ADD 1

#define DIREG_BOTH 4

#define DIREG_DEV 1

#define DIREG_DRV 2

#define DIRID_ABSOLUTE -1

#define DIRID_ABSOLUTE_16BIT 65535

#define DIRID_APPS 24

#define DIRID_BOOT 30

#define DIRID_COLOR 23

#define DIRID_COMMON_APPDATA 16419

#define DIRID_COMMON_DESKTOPDIRECTORY 16409

#define DIRID_COMMON_DOCUMENTS 16430

#define DIRID_COMMON_FAVORITES 16415

#define DIRID_COMMON_PROGRAMS 16407

#define DIRID_COMMON_STARTMENU 16406

#define DIRID_COMMON_STARTUP 16408

#define DIRID_COMMON_TEMPLATES 16429

#define DIRID_DEFAULT 11

#define DIRID_DRIVERS 12

#define DIRID_FONTS 20

#define DIRID_HELP 18

#define DIRID_INF 17

#define DIRID_IOSUBSYS 12

#define DIRID_LOADER 54

#define DIRID_NULL 0

#define DIRID_PRINTPROCESSOR 55

#define DIRID_PROGRAM_FILES 16422

#define DIRID_PROGRAM_FILES_COMMON 16427

#define DIRID_PROGRAM_FILES_COMMONX86 16428

#define DIRID_PROGRAM_FILES_X86 16426

#define DIRID_SHARED 25

#define DIRID_SPOOL 51

#define DIRID_SPOOLDRIVERS 52

#define DIRID_SRCPATH 1

#define DIRID_SYSTEM 11

#define DIRID_SYSTEM16 50

#define DIRID_SYSTEM_X86 16425

#define DIRID_USER 32768

#define DIRID_USERPROFILE 53

#define DIRID_VIEWERS 21

#define DIRID_WINDOWS 10

#define DMI_BKCOLOR 2

#define DMI_MASK 1

#define DMI_USERECT 4

#define DNF_ALWAYSEXCLUDEFROMLIST 524288

#define DNF_AUTHENTICODE_SIGNED 131072

#define DNF_BAD_DRIVER 2048

#define DNF_BASIC_DRIVER 65536

#define DNF_CLASS_DRIVER 32

#define DNF_COMPATIBLE_DRIVER 64

#define DNF_DUPDESC 1

#define DNF_DUPDRIVERVER 32768

#define DNF_DUPPROVIDER 4096

#define DNF_EXCLUDEFROMLIST 4

#define DNF_INBOX_DRIVER 1048576

#define DNF_INET_DRIVER 128

#define DNF_INF_IS_SIGNED 8192

#define DNF_INSTALLEDDRIVER 262144

#define DNF_LEGACYINF 16

#define DNF_NODRIVER 8

#define DNF_OEM_F6_INF 16384

#define DNF_OLD_INET_DRIVER 1024

#define DNF_OLDDRIVER 2

#define DNF_REQUESTADDITIONALSOFTWARE 2097152

#define DNF_UNUSED1 256

#define DNF_UNUSED2 512

#define DNF_UNUSED_22 4194304

#define DNF_UNUSED_23 8388608

#define DNF_UNUSED_24 16777216

#define DNF_UNUSED_25 33554432

#define DNF_UNUSED_26 67108864

#define DNF_UNUSED_27 134217728

#define DNF_UNUSED_28 268435456

#define DNF_UNUSED_29 536870912

#define DNF_UNUSED_30 1073741824

#define DNF_UNUSED_31 2147483648

#define DPROMPT_BUFFERTOOSMALL 3

#define DPROMPT_CANCEL 1

#define DPROMPT_OUTOFMEMORY 4

#define DPROMPT_SKIPFILE 2

#define DPROMPT_SUCCESS 0

#define DRIVER_HARDWAREID_MASK 2147487743

#define DRIVER_HARDWAREID_RANK 4095

#define DRIVER_UNTRUSTED_RANK 2147483648

#define DRIVER_W9X_SUSPECT_RANK 3221225472

#define DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT 8

#define DYNAWIZ_FLAG_INSTALLDET_NEXT 2

#define DYNAWIZ_FLAG_INSTALLDET_PREV 4

#define DYNAWIZ_FLAG_PAGESADDED 1

#define ENABLECLASS_FAILURE 2

#define ENABLECLASS_QUERY 0

#define ENABLECLASS_SUCCESS 1

#define ERROR_AUTHENTICODE_DISALLOWED 3758096960

#define ERROR_AUTHENTICODE_PUBLISHER_NOT_TRUSTED 3758096963

#define ERROR_AUTHENTICODE_TRUST_NOT_ESTABLISHED 3758096962

#define ERROR_AUTHENTICODE_TRUSTED_PUBLISHER 3758096961

#define ERROR_BAD_INTERFACE_INSTALLSECT 3758096925

#define ERROR_BAD_SECTION_NAME_LINE 3758096385

#define ERROR_BAD_SERVICE_INSTALLSECT 3758096919

#define ERROR_CANT_LOAD_CLASS_ICON 3758096908

#define ERROR_CANT_REMOVE_DEVINST 3758096946

#define ERROR_CLASS_MISMATCH 3758096897

#define ERROR_DEVICE_INSTALL_BLOCKED 3758096968

#define ERROR_DEVICE_INSTALLER_NOT_READY 3758096966

#define ERROR_DEVICE_INTERFACE_ACTIVE 3758096923

#define ERROR_DEVICE_INTERFACE_REMOVED 3758096924

#define ERROR_DEVINFO_DATA_LOCKED 3758096915

#define ERROR_DEVINFO_LIST_LOCKED 3758096914

#define ERROR_DEVINFO_NOT_REGISTERED 3758096904

#define ERROR_DEVINST_ALREADY_EXISTS 3758096903

#define ERROR_DEVINSTALL_QUEUE_NONNATIVE 3758096944

#define ERROR_DI_BAD_PATH 3758096916

#define ERROR_DI_DO_DEFAULT 3758096910

#define ERROR_DI_DONT_INSTALL 3758096939

#define ERROR_DI_FUNCTION_OBSOLETE 3758096958

#define ERROR_DI_NOFILECOPY 3758096911

#define ERROR_DI_POSTPROCESSING_REQUIRED 3758096934

#define ERROR_DRIVER_INSTALL_BLOCKED 3758096969

#define ERROR_DRIVER_NONNATIVE 3758096948

#define ERROR_DRIVER_STORE_ADD_FAILED 3758096967

#define ERROR_DRIVER_STORE_DELETE_FAILED 3758096972

#define ERROR_DUPLICATE_FOUND 3758096898

#define ERROR_EXPECTED_SECTION_NAME 3758096384

#define ERROR_FILE_HASH_NOT_IN_CATALOG 3758096971

#define ERROR_FILEQUEUE_LOCKED 3758096918

#define ERROR_GENERAL_SYNTAX 3758096387

#define ERROR_IN_WOW64 3758096949

#define ERROR_INF_IN_USE_BY_DEVICES 3758096957

#define ERROR_INTERFACE_DEVICE_ACTIVE 3758096923

#define ERROR_INTERFACE_DEVICE_REMOVED 3758096924

#define ERROR_INVALID_CLASS 3758096902

#define ERROR_INVALID_CLASS_INSTALLER 3758096909

#define ERROR_INVALID_COINSTALLER 3758096935

#define ERROR_INVALID_DEVINST_NAME 3758096901

#define ERROR_INVALID_FILTER_DRIVER 3758096940

#define ERROR_INVALID_HWPROFILE 3758096912

#define ERROR_INVALID_INF_LOGCONFIG 3758096938

#define ERROR_INVALID_MACHINENAME 3758096928

#define ERROR_INVALID_PROPPAGE_PROVIDER 3758096932

#define ERROR_INVALID_REFERENCE_STRING 3758096927

#define ERROR_INVALID_REG_PROPERTY 3758096905

#define ERROR_INVALID_TARGET 3758096947

#define ERROR_KEY_DOES_NOT_EXIST 3758096900

#define ERROR_LINE_NOT_FOUND 3758096642

#define ERROR_MACHINE_UNAVAILABLE 3758096930

#define ERROR_NO_ASSOCIATED_CLASS 3758096896

#define ERROR_NO_ASSOCIATED_SERVICE 3758096921

#define ERROR_NO_AUTHENTICODE_CATALOG 3758096959

#define ERROR_NO_BACKUP 3758096643

#define ERROR_NO_CATALOG_FOR_OEM_INF 3758096943

#define ERROR_NO_CLASS_DRIVER_LIST 3758096920

#define ERROR_NO_CLASSINSTALL_PARAMS 3758096917

#define ERROR_NO_COMPAT_DRIVERS 3758096936

#define ERROR_NO_CONFIGMGR_SERVICES 3758096931

#define ERROR_NO_DEFAULT_DEVICE_INTERFACE 3758096922

#define ERROR_NO_DEFAULT_INTERFACE_DEVICE 3758096922

#define ERROR_NO_DEVICE_ICON 3758096937

#define ERROR_NO_DEVICE_SELECTED 3758096913

#define ERROR_NO_DRIVER_SELECTED 3758096899

#define ERROR_NO_INF 3758096906

#define ERROR_NO_SUCH_DEVICE_INTERFACE 3758096933

#define ERROR_NO_SUCH_DEVINST 3758096907

#define ERROR_NO_SUCH_INTERFACE_CLASS 3758096926

#define ERROR_NO_SUCH_INTERFACE_DEVICE 3758096933

#define ERROR_NON_WINDOWS_DRIVER 3758096942

#define ERROR_NON_WINDOWS_NT_DRIVER 3758096941

#define ERROR_NOT_AN_INSTALLED_OEM_INF 3758096956

#define ERROR_NOT_DISABLEABLE 3758096945

#define ERROR_NOT_INSTALLED 3758100480

#define ERROR_ONLY_VALIDATE_VIA_AUTHENTICODE 3758096965

#define ERROR_PNP_REGISTRY_ERROR 3758096954

#define ERROR_REMOTE_COMM_FAILURE 3758096929

#define ERROR_REMOTE_REQUEST_UNSUPPORTED 3758096955

#define ERROR_SCE_DISABLED 3758096952

#define ERROR_SECTION_NAME_TOO_LONG 3758096386

#define ERROR_SECTION_NOT_FOUND 3758096641

#define ERROR_SET_SYSTEM_RESTORE_POINT 3758096950

#define ERROR_SIGNATURE_OSATTRIBUTE_MISMATCH 3758096964

#define ERROR_UNKNOWN_EXCEPTION 3758096953

#define ERROR_UNRECOVERABLE_STACK_OVERFLOW 3758097152

#define ERROR_WRONG_INF_STYLE 3758096640

#define ERROR_WRONG_INF_TYPE 3758096970

#define EXCEPTION_SPAPI_UNRECOVERABLE_STACK_OVERFLOW 3758097152

#define FILE_COMPRESSION_MSZIP 2

#define FILE_COMPRESSION_NONE 0

#define FILE_COMPRESSION_NTCAB 3

#define FILE_COMPRESSION_WINLZA 1

#define FILEOP_ABORT 0

#define FILEOP_BACKUP 3

#define FILEOP_COPY 0

#define FILEOP_DELETE 2

#define FILEOP_DOIT 1

#define FILEOP_NEWPATH 4

#define FILEOP_RENAME 1

#define FILEOP_RETRY 1

#define FILEOP_SKIP 2

#define FLG_ADDPROPERTY_AND 16

#define FLG_ADDPROPERTY_APPEND 4

#define FLG_ADDPROPERTY_NOCLOBBER 1

#define FLG_ADDPROPERTY_OR 8

#define FLG_ADDPROPERTY_OVERWRITEONLY 2

#define FLG_ADDREG_32BITKEY 16384

#define FLG_ADDREG_64BITKEY 4096

#define FLG_ADDREG_APPEND 8

#define FLG_ADDREG_BINVALUETYPE 1

#define FLG_ADDREG_DELREG_BIT 32768

#define FLG_ADDREG_DELVAL 4

#define FLG_ADDREG_KEYONLY 16

#define FLG_ADDREG_KEYONLY_COMMON 8192

#define FLG_ADDREG_NOCLOBBER 2

#define FLG_ADDREG_OVERWRITEONLY 32

#define FLG_ADDREG_TYPE_BINARY 1

#define FLG_ADDREG_TYPE_DWORD 65537

#define FLG_ADDREG_TYPE_EXPAND_SZ 131072

#define FLG_ADDREG_TYPE_MASK 4294901761

#define FLG_ADDREG_TYPE_MULTI_SZ 65536

#define FLG_ADDREG_TYPE_NONE 131073

#define FLG_ADDREG_TYPE_SZ 0

#define FLG_BITREG_32BITKEY 16384

#define FLG_BITREG_64BITKEY 4096

#define FLG_BITREG_CLEARBITS 0

#define FLG_BITREG_SETBITS 1

#define FLG_DELPROPERTY_MULTI_SZ_DELSTRING 1

#define FLG_DELREG_32BITKEY 16384

#define FLG_DELREG_64BITKEY 4096

#define FLG_DELREG_KEYONLY_COMMON 8192

#define FLG_DELREG_MULTI_SZ_DELSTRING 98306

#define FLG_DELREG_OPERATION_MASK 254

#define FLG_DELREG_TYPE_BINARY 1

#define FLG_DELREG_TYPE_DWORD 65537

#define FLG_DELREG_TYPE_EXPAND_SZ 131072

#define FLG_DELREG_TYPE_MASK 4294901761

#define FLG_DELREG_TYPE_MULTI_SZ 65536

#define FLG_DELREG_TYPE_NONE 131073

#define FLG_DELREG_TYPE_SZ 0

#define FLG_DELREG_VALUE 0

#define FLG_INI2REG_32BITKEY 16384

#define FLG_INI2REG_64BITKEY 4096

#define FLG_PROFITEM_CSIDL 8

#define FLG_PROFITEM_CURRENTUSER 1

#define FLG_PROFITEM_DELETE 2

#define FLG_PROFITEM_GROUP 4

#define FLG_REGSVR_DLLINSTALL 2

#define FLG_REGSVR_DLLREGISTER 1

#define IDD_DYNAWIZ_ANALYZE_NEXTPAGE 10004

#define IDD_DYNAWIZ_ANALYZE_PREVPAGE 10003

#define IDD_DYNAWIZ_ANALYZEDEV_PAGE 10010

#define IDD_DYNAWIZ_FIRSTPAGE 10000

#define IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE 10007

#define IDD_DYNAWIZ_INSTALLDETECTED_NODEVS 10008

#define IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE 10006

#define IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE 10011

#define IDD_DYNAWIZ_SELECT_NEXTPAGE 10002

#define IDD_DYNAWIZ_SELECT_PREVPAGE 10001

#define IDD_DYNAWIZ_SELECTCLASS_PAGE 10012

#define IDD_DYNAWIZ_SELECTDEV_PAGE 10009

#define IDF_CHECKFIRST 256

#define IDF_NOBEEP 512

#define IDF_NOBROWSE 1

#define IDF_NOCOMPRESSED 8

#define IDF_NODETAILS 4

#define IDF_NOFOREGROUND 1024

#define IDF_NOREMOVABLEMEDIAPROMPT 4096

#define IDF_NOSKIP 2

#define IDF_OEMDISK 2147483648

#define IDF_USEDISKNAMEASPROMPT 8192

#define IDF_WARNIFSKIP 2048

#define IDI_CLASSICON_OVERLAYFIRST 500

#define IDI_CLASSICON_OVERLAYLAST 502

#define IDI_CONFLICT 161

#define IDI_DISABLED_OVL 501

#define IDI_FORCED_OVL 502

#define IDI_PROBLEM_OVL 500

#define IDI_RESOURCE 159

#define IDI_RESOURCEFIRST 159

#define IDI_RESOURCELAST 161

#define IDI_RESOURCEOVERLAYFIRST 161

#define IDI_RESOURCEOVERLAYLAST 161

#define INF_STYLE_CACHE_DISABLE 32

#define INF_STYLE_CACHE_ENABLE 16

#define INF_STYLE_CACHE_IGNORE 64

#define INF_STYLE_NONE 0

#define INF_STYLE_OLDNT 1

#define INF_STYLE_WIN4 2

#define INFINFO_DEFAULT_SEARCH 3

#define INFINFO_INF_NAME_IS_ABSOLUTE 2

#define INFINFO_INF_PATH_LIST_SEARCH 5

#define INFINFO_INF_SPEC_IS_HINF 1

#define INFINFO_REVERSE_DEFAULT_SEARCH 4

#define LINE_LEN 256

#define LogSevError 2

#define LogSevFatalError 3

#define LogSevInformation 0

#define LogSevMaximum 4

#define LogSevWarning 1

#define MAX_IDD_DYNAWIZ_RESOURCE_ID 11000

#define MAX_INF_SECTION_NAME_LENGTH 255

#define MAX_INF_STRING_LENGTH 4096

#define MAX_INSTALLWIZARD_DYNAPAGES 20

#define MAX_INSTRUCTION_LEN 256

#define MAX_LABEL_LEN 30

#define MAX_SERVICE_NAME_LEN 256

#define MAX_SUBTITLE_LEN 256

#define MAX_TITLE_LEN 60

#define MIN_IDD_DYNAWIZ_RESOURCE_ID 10000

#define NDW_INSTALLFLAG_CI_PICKED_OEM 32768

#define NDW_INSTALLFLAG_DIDFACTDEFS 1

#define NDW_INSTALLFLAG_EXPRESSINTRO 1024

#define NDW_INSTALLFLAG_HARDWAREALLREADYIN 2

#define NDW_INSTALLFLAG_INSTALLSPECIFIC 8192

#define NDW_INSTALLFLAG_KNOWNCLASS 524288

#define NDW_INSTALLFLAG_NEEDREBOOT 256

#define NDW_INSTALLFLAG_NEEDRESTART 128

#define NDW_INSTALLFLAG_NEEDSHUTDOWN 512

#define NDW_INSTALLFLAG_NODETECTEDDEVS 4096

#define NDW_INSTALLFLAG_PCMCIADEVICE 131072

#define NDW_INSTALLFLAG_PCMCIAMODE 65536

#define NDW_INSTALLFLAG_SKIPCLASSLIST 16384

#define NDW_INSTALLFLAG_SKIPISDEVINSTALLED 2048

#define NDW_INSTALLFLAG_USERCANCEL 262144

#define SCWMI_CLOBBER_SECURITY 1

#define SETDIRID_NOT_FULL_PATH 1

#define SIGNERSCORE_AUTHENTICODE 251658240

#define SIGNERSCORE_INBOX 218103811

#define SIGNERSCORE_LOGO_PREMIUM 218103809

#define SIGNERSCORE_LOGO_STANDARD 218103810

#define SIGNERSCORE_MASK 4278190080

#define SIGNERSCORE_SIGNED_MASK 4026531840

#define SIGNERSCORE_UNCLASSIFIED 218103812

#define SIGNERSCORE_UNKNOWN 4278190080

#define SIGNERSCORE_UNSIGNED 2147483648

#define SIGNERSCORE_W9X_SUSPECT 3221225472

#define SIGNERSCORE_WHQL 218103813

#define SP_ALTPLATFORM_FLAGS_VERSION_RANGE 1

#define SP_BACKUP_BACKUPPASS 1

#define SP_BACKUP_BOOTFILE 8

#define SP_BACKUP_DEMANDPASS 2

#define SP_BACKUP_SPECIAL 4

#define SP_COPY_ALREADYDECOMP 4194304

#define SP_COPY_DELETESOURCE 1

#define SP_COPY_FORCE_IN_USE 512

#define SP_COPY_FORCE_NEWER 8192

#define SP_COPY_FORCE_NOOVERWRITE 4096

#define SP_COPY_HARDLINK 268435456

#define SP_COPY_IN_USE_NEEDS_REBOOT 256

#define SP_COPY_IN_USE_TRY_RENAME 67108864

#define SP_COPY_INBOX_INF 134217728

#define SP_COPY_LANGUAGEAWARE 32

#define SP_COPY_NEWER 4

#define SP_COPY_NEWER_ONLY 65536

#define SP_COPY_NEWER_OR_SAME 4

#define SP_COPY_NOBROWSE 32768

#define SP_COPY_NODECOMP 16

#define SP_COPY_NOOVERWRITE 8

#define SP_COPY_NOPRUNE 1048576

#define SP_COPY_NOSKIP 1024

#define SP_COPY_OEM_F6_INF 2097152

#define SP_COPY_OEMINF_CATALOG_ONLY 262144

#define SP_COPY_PNPLOCKED 33554432

#define SP_COPY_REPLACE_BOOT_FILE 524288

#define SP_COPY_REPLACEONLY 2

#define SP_COPY_RESERVED 131072

#define SP_COPY_SOURCE_ABSOLUTE 64

#define SP_COPY_SOURCEPATH_ABSOLUTE 128

#define SP_COPY_WARNIFSKIP 16384

#define SP_COPY_WINDOWS_SIGNED 16777216

#define SP_FLAG_CABINETCONTINUATION 2048

#define SP_MAX_MACHINENAME_LENGTH 263

#define SPCRP_CHARACTERISTICS 27

#define SPCRP_DEVTYPE 25

#define SPCRP_EXCLUSIVE 26

#define SPCRP_LOWERFILTERS 18

#define SPCRP_MAXIMUM_PROPERTY 28

#define SPCRP_SECURITY 23

#define SPCRP_SECURITY_SDS 24

#define SPCRP_UPPERFILTERS 17

#define SPDIT_CLASSDRIVER 1

#define SPDIT_COMPATDRIVER 2

#define SPDIT_NODRIVER 0

#define SPDRP_ADDRESS 28

#define SPDRP_BASE_CONTAINERID 36

#define SPDRP_BUSNUMBER 21

#define SPDRP_BUSTYPEGUID 19

#define SPDRP_CAPABILITIES 15

#define SPDRP_CHARACTERISTICS 27

#define SPDRP_CLASS 7

#define SPDRP_CLASSGUID 8

#define SPDRP_COMPATIBLEIDS 2

#define SPDRP_CONFIGFLAGS 10

#define SPDRP_DEVICE_POWER_DATA 30

#define SPDRP_DEVICEDESC 0

#define SPDRP_DEVTYPE 25

#define SPDRP_DRIVER 9

#define SPDRP_ENUMERATOR_NAME 22

#define SPDRP_EXCLUSIVE 26

#define SPDRP_FRIENDLYNAME 12

#define SPDRP_HARDWAREID 1

#define SPDRP_INSTALL_STATE 34

#define SPDRP_LEGACYBUSTYPE 20

#define SPDRP_LOCATION_INFORMATION 13

#define SPDRP_LOCATION_PATHS 35

#define SPDRP_LOWERFILTERS 18

#define SPDRP_MAXIMUM_PROPERTY 37

#define SPDRP_MFG 11

#define SPDRP_PHYSICAL_DEVICE_OBJECT_NAME 14

#define SPDRP_REMOVAL_POLICY 31

#define SPDRP_REMOVAL_POLICY_HW_DEFAULT 32

#define SPDRP_REMOVAL_POLICY_OVERRIDE 33

#define SPDRP_SECURITY 23

#define SPDRP_SECURITY_SDS 24

#define SPDRP_SERVICE 4

#define SPDRP_UI_NUMBER 16

#define SPDRP_UI_NUMBER_DESC_FORMAT 29

#define SPDRP_UNUSED0 3

#define SPDRP_UNUSED1 5

#define SPDRP_UNUSED2 6

#define SPDRP_UPPERFILTERS 17

#define SPDSL_DISALLOW_NEGATIVE_ADJUST 2

#define SPDSL_IGNORE_DISK 1

#define SPFILELOG_FORCENEW 2

#define SPFILELOG_OEMFILE 1

#define SPFILELOG_QUERYONLY 4

#define SPFILELOG_SYSTEMLOG 1

#define SPFILENOTIFY_BACKUPERROR 22

#define SPFILENOTIFY_CABINETINFO 16

#define SPFILENOTIFY_COPYERROR 13

#define SPFILENOTIFY_DELETEERROR 7

#define SPFILENOTIFY_ENDBACKUP 23

#define SPFILENOTIFY_ENDCOPY 12

#define SPFILENOTIFY_ENDDELETE 6

#define SPFILENOTIFY_ENDQUEUE 2

#define SPFILENOTIFY_ENDREGISTRATION 32

#define SPFILENOTIFY_ENDRENAME 9

#define SPFILENOTIFY_ENDSUBQUEUE 4

#define SPFILENOTIFY_FILEEXTRACTED 19

#define SPFILENOTIFY_FILEINCABINET 17

#define SPFILENOTIFY_FILEOPDELAYED 20

#define SPFILENOTIFY_LANGMISMATCH 65536

#define SPFILENOTIFY_NEEDMEDIA 14

#define SPFILENOTIFY_NEEDNEWCABINET 18

#define SPFILENOTIFY_QUEUESCAN 15

#define SPFILENOTIFY_QUEUESCAN_EX 24

#define SPFILENOTIFY_QUEUESCAN_SIGNERINFO 64

#define SPFILENOTIFY_RENAMEERROR 10

#define SPFILENOTIFY_STARTBACKUP 21

#define SPFILENOTIFY_STARTCOPY 11

#define SPFILENOTIFY_STARTDELETE 5

#define SPFILENOTIFY_STARTQUEUE 1

#define SPFILENOTIFY_STARTREGISTRATION 25

#define SPFILENOTIFY_STARTRENAME 8

#define SPFILENOTIFY_STARTSUBQUEUE 3

#define SPFILENOTIFY_TARGETEXISTS 131072

#define SPFILENOTIFY_TARGETNEWER 262144

#define SPFILEQ_FILE_IN_USE 1

#define SPFILEQ_REBOOT_IN_PROGRESS 4

#define SPFILEQ_REBOOT_RECOMMENDED 2

#define SPID_ACTIVE 1

#define SPID_DEFAULT 2

#define SPID_REMOVED 4

#define SPINST_ALL 2047

#define SPINST_BITREG 32

#define SPINST_COPYINF 512

#define SPINST_DEVICEINSTALL 1048576

#define SPINST_FILES 16

#define SPINST_INI2REG 8

#define SPINST_INIFILES 2

#define SPINST_LOGCONFIG 1

#define SPINST_LOGCONFIG_IS_FORCED 131072

#define SPINST_LOGCONFIGS_ARE_OVERRIDES 262144

#define SPINST_PROFILEITEMS 256

#define SPINST_PROPERTIES 1024

#define SPINST_REGISTERCALLBACKAWARE 524288

#define SPINST_REGISTRY 4

#define SPINST_REGSVR 64

#define SPINST_SINGLESECTION 65536

#define SPINST_UNREGSVR 128

#define SPINT_ACTIVE 1

#define SPINT_DEFAULT 2

#define SPINT_REMOVED 4

#define SPOST_MAX 3

#define SPOST_NONE 0

#define SPOST_PATH 1

#define SPOST_URL 2

#define SPPSR_ENUM_ADV_DEVICE_PROPERTIES 3

#define SPPSR_ENUM_BASIC_DEVICE_PROPERTIES 2

#define SPPSR_SELECT_DEVICE_RESOURCES 1

#define SPQ_DELAYED_COPY 1

#define SPQ_FLAG_ABORT_IF_UNSIGNED 2

#define SPQ_FLAG_BACKUP_AWARE 1

#define SPQ_FLAG_DO_SHUFFLEMOVE 8

#define SPQ_FLAG_FILES_MODIFIED 4

#define SPQ_FLAG_VALID 15

#define SPQ_SCAN_ACTIVATE_DRP 1024

#define SPQ_SCAN_FILE_COMPARISON 512

#define SPQ_SCAN_FILE_PRESENCE 1

#define SPQ_SCAN_FILE_PRESENCE_WITHOUT_SOURCE 256

#define SPQ_SCAN_FILE_VALIDITY 2

#define SPQ_SCAN_INFORM_USER 16

#define SPQ_SCAN_PRUNE_COPY_QUEUE 32

#define SPQ_SCAN_PRUNE_DELREN 128

#define SPQ_SCAN_USE_CALLBACK 4

#define SPQ_SCAN_USE_CALLBACK_SIGNERINFO 64

#define SPQ_SCAN_USE_CALLBACKEX 8

#define SPRDI_FIND_DUPS 1

#define SPREG_DLLINSTALL 4

#define SPREG_GETPROCADDR 2

#define SPREG_LOADLIBRARY 1

#define SPREG_REGSVR 3

#define SPREG_SUCCESS 0

#define SPREG_TIMEOUT 5

#define SPREG_UNKNOWN 4294967295

#define SPSVCINST_ASSOCSERVICE 2

#define SPSVCINST_CLOBBER_SECURITY 1024

#define SPSVCINST_DELETEEVENTLOGENTRY 4

#define SPSVCINST_NOCLOBBER_DEPENDENCIES 128

#define SPSVCINST_NOCLOBBER_DESCRIPTION 256

#define SPSVCINST_NOCLOBBER_DISPLAYNAME 8

#define SPSVCINST_NOCLOBBER_ERRORCONTROL 32

#define SPSVCINST_NOCLOBBER_LOADORDERGROUP 64

#define SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES 4096

#define SPSVCINST_NOCLOBBER_STARTTYPE 16

#define SPSVCINST_STARTSERVICE 2048

#define SPSVCINST_STOPSERVICE 512

#define SPSVCINST_TAGTOFRONT 1

#define SPWP_USE_DEVINFO_DATA 1

#define SPWPT_SELECTDEVICE 1

#define SRC_FLAGS_CABFILE 16

#define SRCINFO_DESCRIPTION 3

#define SRCINFO_FLAGS 4

#define SRCINFO_PATH 1

#define SRCINFO_TAGFILE 2

#define SRCINFO_TAGFILE2 5

#define SRCLIST_APPEND 512

#define SRCLIST_NOBROWSE 2

#define SRCLIST_NOSTRIPPLATFORM 1024

#define SRCLIST_SUBDIRS 256

#define SRCLIST_SYSIFADMIN 64

#define SRCLIST_SYSTEM 16

#define SRCLIST_TEMPORARY 1

#define SRCLIST_USER 32

#define SUOI_FORCEDELETE 1

#define SUOI_INTERNAL1 2

typedef struct _CABINET_INFO_A _CABINET_INFO_A, *P_CABINET_INFO_A;

typedef CHAR * PCSTR;

struct _CABINET_INFO_A {
    PCSTR CabinetPath;
    PCSTR CabinetFile;
    PCSTR DiskName;
    USHORT SetId;
    USHORT CabinetNumber;
};

typedef struct _CABINET_INFO_W _CABINET_INFO_W, *P_CABINET_INFO_W;

struct _CABINET_INFO_W {
    PCWSTR CabinetPath;
    PCWSTR CabinetFile;
    PCWSTR DiskName;
    USHORT SetId;
    USHORT CabinetNumber;
};

typedef struct _COINSTALLER_CONTEXT_DATA _COINSTALLER_CONTEXT_DATA, *P_COINSTALLER_CONTEXT_DATA;

struct _COINSTALLER_CONTEXT_DATA {
    BOOL PostProcessing;
    DWORD InstallResult;
    PVOID PrivateData;
};

typedef struct _FILE_IN_CABINET_INFO_A _FILE_IN_CABINET_INFO_A, *P_FILE_IN_CABINET_INFO_A;

struct _FILE_IN_CABINET_INFO_A {
    PCSTR NameInCabinet;
    DWORD FileSize;
    DWORD Win32Error;
    WORD DosDate;
    WORD DosTime;
    WORD DosAttribs;
    CHAR FullTargetName[260];
};

typedef struct _FILE_IN_CABINET_INFO_W _FILE_IN_CABINET_INFO_W, *P_FILE_IN_CABINET_INFO_W;

struct _FILE_IN_CABINET_INFO_W {
    PCWSTR NameInCabinet;
    DWORD FileSize;
    DWORD Win32Error;
    WORD DosDate;
    WORD DosTime;
    WORD DosAttribs;
    WCHAR FullTargetName[260];
};

typedef struct _FILEPATHS_A _FILEPATHS_A, *P_FILEPATHS_A;

struct _FILEPATHS_A {
    PCSTR Target;
    PCSTR Source;
    UINT Win32Error;
    DWORD Flags;
};

typedef struct _FILEPATHS_SIGNERINFO_A _FILEPATHS_SIGNERINFO_A, *P_FILEPATHS_SIGNERINFO_A;

struct _FILEPATHS_SIGNERINFO_A {
    PCSTR Target;
    PCSTR Source;
    UINT Win32Error;
    DWORD Flags;
    PCSTR DigitalSigner;
    PCSTR Version;
    PCSTR CatalogFile;
};

typedef struct _FILEPATHS_SIGNERINFO_W _FILEPATHS_SIGNERINFO_W, *P_FILEPATHS_SIGNERINFO_W;

struct _FILEPATHS_SIGNERINFO_W {
    PCWSTR Target;
    PCWSTR Source;
    UINT Win32Error;
    DWORD Flags;
    PCWSTR DigitalSigner;
    PCWSTR Version;
    PCWSTR CatalogFile;
};

typedef struct _FILEPATHS_W _FILEPATHS_W, *P_FILEPATHS_W;

struct _FILEPATHS_W {
    PCWSTR Target;
    PCWSTR Source;
    UINT Win32Error;
    DWORD Flags;
};

typedef struct _INFCONTEXT _INFCONTEXT, *P_INFCONTEXT;

struct _INFCONTEXT {
    PVOID Inf;
    PVOID CurrentInf;
    UINT Section;
    UINT Line;
};

typedef struct _SOURCE_MEDIA_A _SOURCE_MEDIA_A, *P_SOURCE_MEDIA_A;

struct _SOURCE_MEDIA_A {
    PCSTR Reserved;
    PCSTR Tagfile;
    PCSTR Description;
    PCSTR SourcePath;
    PCSTR SourceFile;
    DWORD Flags;
};

typedef struct _SOURCE_MEDIA_W _SOURCE_MEDIA_W, *P_SOURCE_MEDIA_W;

struct _SOURCE_MEDIA_W {
    PCWSTR Reserved;
    PCWSTR Tagfile;
    PCWSTR Description;
    PCWSTR SourcePath;
    PCWSTR SourceFile;
    DWORD Flags;
};

typedef struct _SP_ALTPLATFORM_INFO_V1 _SP_ALTPLATFORM_INFO_V1, *P_SP_ALTPLATFORM_INFO_V1;

struct _SP_ALTPLATFORM_INFO_V1 {
    DWORD cbSize;
    DWORD Platform;
    DWORD MajorVersion;
    DWORD MinorVersion;
    WORD ProcessorArchitecture;
    WORD Reserved;
};

typedef struct _SP_ALTPLATFORM_INFO_V2 _SP_ALTPLATFORM_INFO_V2, *P_SP_ALTPLATFORM_INFO_V2;

typedef union _union_8180 _union_8180, *P_union_8180;

union _union_8180 {
    WORD Reserved;
    WORD Flags;
};

struct _SP_ALTPLATFORM_INFO_V2 {
    DWORD cbSize;
    DWORD Platform;
    DWORD MajorVersion;
    DWORD MinorVersion;
    WORD ProcessorArchitecture;
    union _union_8180 u;
    DWORD FirstValidatedMajorVersion;
    DWORD FirstValidatedMinorVersion;
};

typedef struct _SP_BACKUP_QUEUE_PARAMS_V1_A _SP_BACKUP_QUEUE_PARAMS_V1_A, *P_SP_BACKUP_QUEUE_PARAMS_V1_A;

struct _SP_BACKUP_QUEUE_PARAMS_V1_A {
    DWORD cbSize;
    CHAR FullInfPath[260];
    INT FilenameOffset;
};

typedef struct _SP_BACKUP_QUEUE_PARAMS_V1_W _SP_BACKUP_QUEUE_PARAMS_V1_W, *P_SP_BACKUP_QUEUE_PARAMS_V1_W;

struct _SP_BACKUP_QUEUE_PARAMS_V1_W {
    DWORD cbSize;
    WCHAR FullInfPath[260];
    INT FilenameOffset;
};

typedef struct _SP_BACKUP_QUEUE_PARAMS_V2_A _SP_BACKUP_QUEUE_PARAMS_V2_A, *P_SP_BACKUP_QUEUE_PARAMS_V2_A;

struct _SP_BACKUP_QUEUE_PARAMS_V2_A {
    DWORD cbSize;
    CHAR FullInfPath[260];
    INT FilenameOffset;
    CHAR ReinstallInstance[260];
};

typedef struct _SP_BACKUP_QUEUE_PARAMS_V2_W _SP_BACKUP_QUEUE_PARAMS_V2_W, *P_SP_BACKUP_QUEUE_PARAMS_V2_W;

struct _SP_BACKUP_QUEUE_PARAMS_V2_W {
    DWORD cbSize;
    WCHAR FullInfPath[260];
    INT FilenameOffset;
    WCHAR ReinstallInstance[260];
};

typedef struct _SP_CLASSIMAGELIST_DATA _SP_CLASSIMAGELIST_DATA, *P_SP_CLASSIMAGELIST_DATA;

struct _SP_CLASSIMAGELIST_DATA {
    DWORD cbSize;
    HIMAGELIST ImageList;
    ULONG_PTR Reserved;
};

typedef struct _SP_CLASSINSTALL_HEADER _SP_CLASSINSTALL_HEADER, *P_SP_CLASSINSTALL_HEADER;

typedef UINT DI_FUNCTION;

struct _SP_CLASSINSTALL_HEADER {
    DWORD cbSize;
    DI_FUNCTION InstallFunction;
};

typedef struct _SP_DETECTDEVICE_PARAMS _SP_DETECTDEVICE_PARAMS, *P_SP_DETECTDEVICE_PARAMS;

typedef struct _SP_CLASSINSTALL_HEADER SP_CLASSINSTALL_HEADER;

typedef BOOL (* PDETECT_PROGRESS_NOTIFY)(PVOID, DWORD);

struct _SP_DETECTDEVICE_PARAMS {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    PDETECT_PROGRESS_NOTIFY DetectProgressNotify;
    PVOID ProgressNotifyParam;
};

typedef struct _SP_DEVICE_INTERFACE_DATA _SP_DEVICE_INTERFACE_DATA, *P_SP_DEVICE_INTERFACE_DATA;

struct _SP_DEVICE_INTERFACE_DATA {
    DWORD cbSize;
    GUID InterfaceClassGuid;
    DWORD Flags;
    ULONG_PTR Reserved;
};

typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA_A _SP_DEVICE_INTERFACE_DETAIL_DATA_A, *P_SP_DEVICE_INTERFACE_DETAIL_DATA_A;

struct _SP_DEVICE_INTERFACE_DETAIL_DATA_A {
    DWORD cbSize;
    CHAR DevicePath[1];
};

typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA_W _SP_DEVICE_INTERFACE_DETAIL_DATA_W, *P_SP_DEVICE_INTERFACE_DETAIL_DATA_W;

struct _SP_DEVICE_INTERFACE_DETAIL_DATA_W {
    DWORD cbSize;
    WCHAR DevicePath[1];
};

typedef struct _SP_DEVINFO_DATA _SP_DEVINFO_DATA, *P_SP_DEVINFO_DATA;

struct _SP_DEVINFO_DATA {
    DWORD cbSize;
    GUID ClassGuid;
    DWORD DevInst;
    ULONG_PTR Reserved;
};

typedef struct _SP_DEVINFO_LIST_DETAIL_DATA_A _SP_DEVINFO_LIST_DETAIL_DATA_A, *P_SP_DEVINFO_LIST_DETAIL_DATA_A;

struct _SP_DEVINFO_LIST_DETAIL_DATA_A {
    DWORD cbSize;
    GUID ClassGuid;
    HANDLE RemoteMachineHandle;
    CHAR RemoteMachineName[263];
};

typedef struct _SP_DEVINFO_LIST_DETAIL_DATA_W _SP_DEVINFO_LIST_DETAIL_DATA_W, *P_SP_DEVINFO_LIST_DETAIL_DATA_W;

struct _SP_DEVINFO_LIST_DETAIL_DATA_W {
    DWORD cbSize;
    GUID ClassGuid;
    HANDLE RemoteMachineHandle;
    WCHAR RemoteMachineName[263];
};

typedef struct _SP_DEVINSTALL_PARAMS_A _SP_DEVINSTALL_PARAMS_A, *P_SP_DEVINSTALL_PARAMS_A;

typedef UINT (* PSP_FILE_CALLBACK_A)(PVOID, UINT, UINT_PTR, UINT_PTR);

typedef PVOID HSPFILEQ;

struct _SP_DEVINSTALL_PARAMS_A {
    DWORD cbSize;
    DWORD Flags;
    DWORD FlagsEx;
    HWND hwndParent;
    PSP_FILE_CALLBACK_A InstallMsgHandler;
    PVOID InstallMsgHandlerContext;
    HSPFILEQ FileQueue;
    ULONG_PTR ClassInstallReserved;
    DWORD Reserved;
    CHAR DriverPath[260];
};

typedef struct _SP_DEVINSTALL_PARAMS_W _SP_DEVINSTALL_PARAMS_W, *P_SP_DEVINSTALL_PARAMS_W;

struct _SP_DEVINSTALL_PARAMS_W {
    DWORD cbSize;
    DWORD Flags;
    DWORD FlagsEx;
    HWND hwndParent;
    PSP_FILE_CALLBACK_A InstallMsgHandler;
    PVOID InstallMsgHandlerContext;
    HSPFILEQ FileQueue;
    ULONG_PTR ClassInstallReserved;
    DWORD Reserved;
    WCHAR DriverPath[260];
};

typedef struct _SP_DRVINFO_DATA_V1_A _SP_DRVINFO_DATA_V1_A, *P_SP_DRVINFO_DATA_V1_A;

struct _SP_DRVINFO_DATA_V1_A {
    DWORD cbSize;
    DWORD DriverType;
    ULONG_PTR Reserved;
    CHAR Description[256];
    CHAR MfgName[256];
    CHAR ProviderName[256];
};

typedef struct _SP_DRVINFO_DATA_V1_W _SP_DRVINFO_DATA_V1_W, *P_SP_DRVINFO_DATA_V1_W;

struct _SP_DRVINFO_DATA_V1_W {
    DWORD cbSize;
    DWORD DriverType;
    ULONG_PTR Reserved;
    WCHAR Description[256];
    WCHAR MfgName[256];
    WCHAR ProviderName[256];
};

typedef struct _SP_DRVINFO_DATA_V2_A _SP_DRVINFO_DATA_V2_A, *P_SP_DRVINFO_DATA_V2_A;

struct _SP_DRVINFO_DATA_V2_A {
    DWORD cbSize;
    DWORD DriverType;
    ULONG_PTR Reserved;
    CHAR Description[256];
    CHAR MfgName[256];
    CHAR ProviderName[256];
    FILETIME DriverDate;
    DWORDLONG DriverVersion;
};

typedef struct _SP_DRVINFO_DATA_V2_W _SP_DRVINFO_DATA_V2_W, *P_SP_DRVINFO_DATA_V2_W;

struct _SP_DRVINFO_DATA_V2_W {
    DWORD cbSize;
    DWORD DriverType;
    ULONG_PTR Reserved;
    WCHAR Description[256];
    WCHAR MfgName[256];
    WCHAR ProviderName[256];
    FILETIME DriverDate;
    DWORDLONG DriverVersion;
};

typedef struct _SP_DRVINFO_DETAIL_DATA_A _SP_DRVINFO_DETAIL_DATA_A, *P_SP_DRVINFO_DETAIL_DATA_A;

struct _SP_DRVINFO_DETAIL_DATA_A {
    DWORD cbSize;
    FILETIME InfDate;
    DWORD CompatIDsOffset;
    DWORD CompatIDsLength;
    ULONG_PTR Reserved;
    CHAR SectionName[256];
    CHAR InfFileName[260];
    CHAR DrvDescription[256];
    CHAR HardwareID[1];
};

typedef struct _SP_DRVINFO_DETAIL_DATA_W _SP_DRVINFO_DETAIL_DATA_W, *P_SP_DRVINFO_DETAIL_DATA_W;

struct _SP_DRVINFO_DETAIL_DATA_W {
    DWORD cbSize;
    FILETIME InfDate;
    DWORD CompatIDsOffset;
    DWORD CompatIDsLength;
    ULONG_PTR Reserved;
    WCHAR SectionName[256];
    WCHAR InfFileName[260];
    WCHAR DrvDescription[256];
    WCHAR HardwareID[1];
};

typedef struct _SP_DRVINSTALL_PARAMS _SP_DRVINSTALL_PARAMS, *P_SP_DRVINSTALL_PARAMS;

struct _SP_DRVINSTALL_PARAMS {
    DWORD cbSize;
    DWORD Rank;
    DWORD Flags;
    DWORD_PTR PrivateData;
    DWORD Reserved;
};

typedef struct _SP_ENABLECLASS_PARAMS _SP_ENABLECLASS_PARAMS, *P_SP_ENABLECLASS_PARAMS;

struct _SP_ENABLECLASS_PARAMS {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    GUID ClassGuid;
    DWORD EnableMessage;
};

typedef struct _SP_FILE_COPY_PARAMS_A _SP_FILE_COPY_PARAMS_A, *P_SP_FILE_COPY_PARAMS_A;

typedef PVOID HINF;

struct _SP_FILE_COPY_PARAMS_A {
    DWORD cbSize;
    HSPFILEQ QueueHandle;
    PCSTR SourceRootPath;
    PCSTR SourcePath;
    PCSTR SourceFilename;
    PCSTR SourceDescription;
    PCSTR SourceTagfile;
    PCSTR TargetDirectory;
    PCSTR TargetFilename;
    DWORD CopyStyle;
    HINF LayoutInf;
    PCSTR SecurityDescriptor;
};

typedef struct _SP_FILE_COPY_PARAMS_W _SP_FILE_COPY_PARAMS_W, *P_SP_FILE_COPY_PARAMS_W;

struct _SP_FILE_COPY_PARAMS_W {
    DWORD cbSize;
    HSPFILEQ QueueHandle;
    PCWSTR SourceRootPath;
    PCWSTR SourcePath;
    PCWSTR SourceFilename;
    PCWSTR SourceDescription;
    PCWSTR SourceTagfile;
    PCWSTR TargetDirectory;
    PCWSTR TargetFilename;
    DWORD CopyStyle;
    HINF LayoutInf;
    PCWSTR SecurityDescriptor;
};

typedef struct _SP_INF_INFORMATION _SP_INF_INFORMATION, *P_SP_INF_INFORMATION;

struct _SP_INF_INFORMATION {
    DWORD InfStyle;
    DWORD InfCount;
    BYTE VersionData[1];
};

typedef struct _SP_INF_SIGNER_INFO_V1_A _SP_INF_SIGNER_INFO_V1_A, *P_SP_INF_SIGNER_INFO_V1_A;

struct _SP_INF_SIGNER_INFO_V1_A {
    DWORD cbSize;
    CHAR CatalogFile[260];
    CHAR DigitalSigner[260];
    CHAR DigitalSignerVersion[260];
};

typedef struct _SP_INF_SIGNER_INFO_V1_W _SP_INF_SIGNER_INFO_V1_W, *P_SP_INF_SIGNER_INFO_V1_W;

struct _SP_INF_SIGNER_INFO_V1_W {
    DWORD cbSize;
    WCHAR CatalogFile[260];
    WCHAR DigitalSigner[260];
    WCHAR DigitalSignerVersion[260];
};

typedef struct _SP_INF_SIGNER_INFO_V2_A _SP_INF_SIGNER_INFO_V2_A, *P_SP_INF_SIGNER_INFO_V2_A;

struct _SP_INF_SIGNER_INFO_V2_A {
    DWORD cbSize;
    CHAR CatalogFile[260];
    CHAR DigitalSigner[260];
    CHAR DigitalSignerVersion[260];
    DWORD SignerScore;
};

typedef struct _SP_INF_SIGNER_INFO_V2_W _SP_INF_SIGNER_INFO_V2_W, *P_SP_INF_SIGNER_INFO_V2_W;

struct _SP_INF_SIGNER_INFO_V2_W {
    DWORD cbSize;
    WCHAR CatalogFile[260];
    WCHAR DigitalSigner[260];
    WCHAR DigitalSignerVersion[260];
    DWORD SignerScore;
};

typedef struct _SP_INSTALLWIZARD_DATA _SP_INSTALLWIZARD_DATA, *P_SP_INSTALLWIZARD_DATA;

struct _SP_INSTALLWIZARD_DATA {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    DWORD Flags;
    HPROPSHEETPAGE DynamicPages[20];
    DWORD NumDynamicPages;
    DWORD DynamicPageFlags;
    DWORD PrivateFlags;
    LPARAM PrivateData;
    HWND hwndWizardDlg;
};

typedef struct _SP_NEWDEVICEWIZARD_DATA _SP_NEWDEVICEWIZARD_DATA, *P_SP_NEWDEVICEWIZARD_DATA;

struct _SP_NEWDEVICEWIZARD_DATA {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    DWORD Flags;
    HPROPSHEETPAGE DynamicPages[20];
    DWORD NumDynamicPages;
    HWND hwndWizardDlg;
};

typedef struct _SP_ORIGINAL_FILE_INFO_A _SP_ORIGINAL_FILE_INFO_A, *P_SP_ORIGINAL_FILE_INFO_A;

struct _SP_ORIGINAL_FILE_INFO_A {
    DWORD cbSize;
    CHAR OriginalInfName[260];
    CHAR OriginalCatalogName[260];
};

typedef struct _SP_ORIGINAL_FILE_INFO_W _SP_ORIGINAL_FILE_INFO_W, *P_SP_ORIGINAL_FILE_INFO_W;

struct _SP_ORIGINAL_FILE_INFO_W {
    DWORD cbSize;
    WCHAR OriginalInfName[260];
    WCHAR OriginalCatalogName[260];
};

typedef struct _SP_POWERMESSAGEWAKE_PARAMS_A _SP_POWERMESSAGEWAKE_PARAMS_A, *P_SP_POWERMESSAGEWAKE_PARAMS_A;

struct _SP_POWERMESSAGEWAKE_PARAMS_A {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    CHAR PowerMessageWake[512];
};

typedef struct _SP_POWERMESSAGEWAKE_PARAMS_W _SP_POWERMESSAGEWAKE_PARAMS_W, *P_SP_POWERMESSAGEWAKE_PARAMS_W;

struct _SP_POWERMESSAGEWAKE_PARAMS_W {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    WCHAR PowerMessageWake[512];
};

typedef struct _SP_PROPCHANGE_PARAMS _SP_PROPCHANGE_PARAMS, *P_SP_PROPCHANGE_PARAMS;

struct _SP_PROPCHANGE_PARAMS {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    DWORD StateChange;
    DWORD Scope;
    DWORD HwProfile;
};

typedef struct _SP_PROPSHEETPAGE_REQUEST _SP_PROPSHEETPAGE_REQUEST, *P_SP_PROPSHEETPAGE_REQUEST;

typedef PVOID HDEVINFO;

typedef struct _SP_DEVINFO_DATA * PSP_DEVINFO_DATA;

struct _SP_PROPSHEETPAGE_REQUEST {
    DWORD cbSize;
    DWORD PageRequested;
    HDEVINFO DeviceInfoSet;
    PSP_DEVINFO_DATA DeviceInfoData;
};

typedef struct _SP_REGISTER_CONTROL_STATUSA _SP_REGISTER_CONTROL_STATUSA, *P_SP_REGISTER_CONTROL_STATUSA;

struct _SP_REGISTER_CONTROL_STATUSA {
    DWORD cbSize;
    PCSTR FileName;
    DWORD Win32Error;
    DWORD FailureCode;
};

typedef struct _SP_REGISTER_CONTROL_STATUSW _SP_REGISTER_CONTROL_STATUSW, *P_SP_REGISTER_CONTROL_STATUSW;

struct _SP_REGISTER_CONTROL_STATUSW {
    DWORD cbSize;
    PCWSTR FileName;
    DWORD Win32Error;
    DWORD FailureCode;
};

typedef struct _SP_REMOVEDEVICE_PARAMS _SP_REMOVEDEVICE_PARAMS, *P_SP_REMOVEDEVICE_PARAMS;

struct _SP_REMOVEDEVICE_PARAMS {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    DWORD Scope;
    DWORD HwProfile;
};

typedef struct _SP_SELECTDEVICE_PARAMS_A _SP_SELECTDEVICE_PARAMS_A, *P_SP_SELECTDEVICE_PARAMS_A;

struct _SP_SELECTDEVICE_PARAMS_A {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    CHAR Title[60];
    CHAR Instructions[256];
    CHAR ListLabel[30];
    CHAR SubTitle[256];
    BYTE Reserved[2];
};

typedef struct _SP_SELECTDEVICE_PARAMS_W _SP_SELECTDEVICE_PARAMS_W, *P_SP_SELECTDEVICE_PARAMS_W;

struct _SP_SELECTDEVICE_PARAMS_W {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    WCHAR Title[60];
    WCHAR Instructions[256];
    WCHAR ListLabel[30];
    WCHAR SubTitle[256];
};

typedef struct _SP_TROUBLESHOOTER_PARAMS_A _SP_TROUBLESHOOTER_PARAMS_A, *P_SP_TROUBLESHOOTER_PARAMS_A;

struct _SP_TROUBLESHOOTER_PARAMS_A {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    CHAR ChmFile[260];
    CHAR HtmlTroubleShooter[260];
};

typedef struct _SP_TROUBLESHOOTER_PARAMS_W _SP_TROUBLESHOOTER_PARAMS_W, *P_SP_TROUBLESHOOTER_PARAMS_W;

struct _SP_TROUBLESHOOTER_PARAMS_W {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    WCHAR ChmFile[260];
    WCHAR HtmlTroubleShooter[260];
};

typedef struct _SP_UNREMOVEDEVICE_PARAMS _SP_UNREMOVEDEVICE_PARAMS, *P_SP_UNREMOVEDEVICE_PARAMS;

struct _SP_UNREMOVEDEVICE_PARAMS {
    SP_CLASSINSTALL_HEADER ClassInstallHeader;
    DWORD Scope;
    DWORD HwProfile;
};

typedef struct _CABINET_INFO_A CABINET_INFO_A;

typedef CABINET_INFO_A CABINET_INFO;

typedef struct _CABINET_INFO_W CABINET_INFO_W;

typedef struct _COINSTALLER_CONTEXT_DATA COINSTALLER_CONTEXT_DATA;

typedef enum enum_8234 {
    SetupFileLogChecksum=1,
    SetupFileLogDiskDescription=3,
    SetupFileLogDiskTagfile=2,
    SetupFileLogMax=5,
    SetupFileLogOtherInfo=4,
    SetupFileLogSourceFilename=0
} enum_8234;

typedef struct _FILE_IN_CABINET_INFO_A FILE_IN_CABINET_INFO_A;

typedef FILE_IN_CABINET_INFO_A FILE_IN_CABINET_INFO;

typedef struct _FILE_IN_CABINET_INFO_W FILE_IN_CABINET_INFO_W;

typedef struct _FILEPATHS_A FILEPATHS_A;

typedef FILEPATHS_A FILEPATHS;

typedef struct _FILEPATHS_SIGNERINFO_A FILEPATHS_SIGNERINFO_A;

typedef FILEPATHS_SIGNERINFO_A FILEPATHS_SIGNERINFO;

typedef struct _FILEPATHS_SIGNERINFO_W FILEPATHS_SIGNERINFO_W;

typedef struct _FILEPATHS_W FILEPATHS_W;

typedef PVOID HDSKSPC;

typedef PVOID HSPFILELOG;

typedef struct _INFCONTEXT INFCONTEXT;

typedef struct _CABINET_INFO_A * PCABINET_INFO_A;

typedef PCABINET_INFO_A PCABINET_INFO;

typedef struct _CABINET_INFO_W * PCABINET_INFO_W;

typedef struct _COINSTALLER_CONTEXT_DATA * PCOINSTALLER_CONTEXT_DATA;

typedef struct _FILE_IN_CABINET_INFO_A * PFILE_IN_CABINET_INFO_A;

typedef PFILE_IN_CABINET_INFO_A PFILE_IN_CABINET_INFO;

typedef struct _FILE_IN_CABINET_INFO_W * PFILE_IN_CABINET_INFO_W;

typedef struct _FILEPATHS_A * PFILEPATHS_A;

typedef PFILEPATHS_A PFILEPATHS;

typedef struct _FILEPATHS_SIGNERINFO_A * PFILEPATHS_SIGNERINFO_A;

typedef PFILEPATHS_SIGNERINFO_A PFILEPATHS_SIGNERINFO;

typedef struct _FILEPATHS_SIGNERINFO_W * PFILEPATHS_SIGNERINFO_W;

typedef struct _FILEPATHS_W * PFILEPATHS_W;

typedef struct _INFCONTEXT * PINFCONTEXT;

typedef struct _SOURCE_MEDIA_A * PSOURCE_MEDIA_A;

typedef PSOURCE_MEDIA_A PSOURCE_MEDIA;

typedef struct _SOURCE_MEDIA_W * PSOURCE_MEDIA_W;

typedef struct _SP_NEWDEVICEWIZARD_DATA * PSP_NEWDEVICEWIZARD_DATA;

typedef PSP_NEWDEVICEWIZARD_DATA PSP_ADDPROPERTYPAGE_DATA;

typedef struct _SP_ALTPLATFORM_INFO_V2 * PSP_ALTPLATFORM_INFO_V2;

typedef PSP_ALTPLATFORM_INFO_V2 PSP_ALTPLATFORM_INFO;

typedef struct _SP_ALTPLATFORM_INFO_V1 * PSP_ALTPLATFORM_INFO_V1;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V2_A * PSP_BACKUP_QUEUE_PARAMS_V2_A;

typedef PSP_BACKUP_QUEUE_PARAMS_V2_A PSP_BACKUP_QUEUE_PARAMS_V2;

typedef PSP_BACKUP_QUEUE_PARAMS_V2 PSP_BACKUP_QUEUE_PARAMS;

typedef PSP_BACKUP_QUEUE_PARAMS_V2_A PSP_BACKUP_QUEUE_PARAMS_A;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V1_A * PSP_BACKUP_QUEUE_PARAMS_V1_A;

typedef PSP_BACKUP_QUEUE_PARAMS_V1_A PSP_BACKUP_QUEUE_PARAMS_V1;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V1_W * PSP_BACKUP_QUEUE_PARAMS_V1_W;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V2_W * PSP_BACKUP_QUEUE_PARAMS_V2_W;

typedef PSP_BACKUP_QUEUE_PARAMS_V2_W PSP_BACKUP_QUEUE_PARAMS_W;

typedef struct _SP_CLASSIMAGELIST_DATA * PSP_CLASSIMAGELIST_DATA;

typedef struct _SP_CLASSINSTALL_HEADER * PSP_CLASSINSTALL_HEADER;

typedef struct _SP_DETECTDEVICE_PARAMS * PSP_DETECTDEVICE_PARAMS;

typedef DWORD (* PSP_DETSIG_CMPPROC)(HDEVINFO, PSP_DEVINFO_DATA, PSP_DEVINFO_DATA, PVOID);

typedef struct _SP_DEVICE_INTERFACE_DATA * PSP_DEVICE_INTERFACE_DATA;

typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA_A * PSP_DEVICE_INTERFACE_DETAIL_DATA_A;

typedef PSP_DEVICE_INTERFACE_DETAIL_DATA_A PSP_DEVICE_INTERFACE_DETAIL_DATA;

typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA_W * PSP_DEVICE_INTERFACE_DETAIL_DATA_W;

typedef struct _SP_DEVINFO_LIST_DETAIL_DATA_A * PSP_DEVINFO_LIST_DETAIL_DATA_A;

typedef PSP_DEVINFO_LIST_DETAIL_DATA_A PSP_DEVINFO_LIST_DETAIL_DATA;

typedef struct _SP_DEVINFO_LIST_DETAIL_DATA_W * PSP_DEVINFO_LIST_DETAIL_DATA_W;

typedef struct _SP_DEVINSTALL_PARAMS_A * PSP_DEVINSTALL_PARAMS_A;

typedef PSP_DEVINSTALL_PARAMS_A PSP_DEVINSTALL_PARAMS;

typedef struct _SP_DEVINSTALL_PARAMS_W * PSP_DEVINSTALL_PARAMS_W;

typedef struct _SP_DRVINFO_DATA_V2_A * PSP_DRVINFO_DATA_V2_A;

typedef PSP_DRVINFO_DATA_V2_A PSP_DRVINFO_DATA_V2;

typedef PSP_DRVINFO_DATA_V2 PSP_DRVINFO_DATA;

typedef PSP_DRVINFO_DATA_V2_A PSP_DRVINFO_DATA_A;

typedef struct _SP_DRVINFO_DATA_V1_A * PSP_DRVINFO_DATA_V1_A;

typedef PSP_DRVINFO_DATA_V1_A PSP_DRVINFO_DATA_V1;

typedef struct _SP_DRVINFO_DATA_V1_W * PSP_DRVINFO_DATA_V1_W;

typedef struct _SP_DRVINFO_DATA_V2_W * PSP_DRVINFO_DATA_V2_W;

typedef PSP_DRVINFO_DATA_V2_W PSP_DRVINFO_DATA_W;

typedef struct _SP_DRVINFO_DETAIL_DATA_A * PSP_DRVINFO_DETAIL_DATA_A;

typedef PSP_DRVINFO_DETAIL_DATA_A PSP_DRVINFO_DETAIL_DATA;

typedef struct _SP_DRVINFO_DETAIL_DATA_W * PSP_DRVINFO_DETAIL_DATA_W;

typedef struct _SP_DRVINSTALL_PARAMS * PSP_DRVINSTALL_PARAMS;

typedef struct _SP_ENABLECLASS_PARAMS * PSP_ENABLECLASS_PARAMS;

typedef UINT (* PSP_FILE_CALLBACK_W)(PVOID, UINT, UINT_PTR, UINT_PTR);

typedef struct _SP_FILE_COPY_PARAMS_A * PSP_FILE_COPY_PARAMS_A;

typedef PSP_FILE_COPY_PARAMS_A PSP_FILE_COPY_PARAMS;

typedef struct _SP_FILE_COPY_PARAMS_W * PSP_FILE_COPY_PARAMS_W;

typedef struct _SP_INF_INFORMATION * PSP_INF_INFORMATION;

typedef struct _SP_INF_SIGNER_INFO_V2_A * PSP_INF_SIGNER_INFO_V2_A;

typedef PSP_INF_SIGNER_INFO_V2_A PSP_INF_SIGNER_INFO_V2;

typedef PSP_INF_SIGNER_INFO_V2 PSP_INF_SIGNER_INFO;

typedef PSP_INF_SIGNER_INFO_V2_A PSP_INF_SIGNER_INFO_A;

typedef struct _SP_INF_SIGNER_INFO_V1_A * PSP_INF_SIGNER_INFO_V1_A;

typedef PSP_INF_SIGNER_INFO_V1_A PSP_INF_SIGNER_INFO_V1;

typedef struct _SP_INF_SIGNER_INFO_V1_W * PSP_INF_SIGNER_INFO_V1_W;

typedef struct _SP_INF_SIGNER_INFO_V2_W * PSP_INF_SIGNER_INFO_V2_W;

typedef PSP_INF_SIGNER_INFO_V2_W PSP_INF_SIGNER_INFO_W;

typedef struct _SP_INSTALLWIZARD_DATA * PSP_INSTALLWIZARD_DATA;

typedef PSP_DEVICE_INTERFACE_DATA PSP_INTERFACE_DEVICE_DATA;

typedef PSP_DEVICE_INTERFACE_DETAIL_DATA_A PSP_INTERFACE_DEVICE_DETAIL_DATA_A;

typedef PSP_INTERFACE_DEVICE_DETAIL_DATA_A PSP_INTERFACE_DEVICE_DETAIL_DATA;

typedef PSP_DEVICE_INTERFACE_DETAIL_DATA_W PSP_INTERFACE_DEVICE_DETAIL_DATA_W;

typedef struct _SP_ORIGINAL_FILE_INFO_A * PSP_ORIGINAL_FILE_INFO_A;

typedef PSP_ORIGINAL_FILE_INFO_A PSP_ORIGINAL_FILE_INFO;

typedef struct _SP_ORIGINAL_FILE_INFO_W * PSP_ORIGINAL_FILE_INFO_W;

typedef struct _SP_POWERMESSAGEWAKE_PARAMS_A * PSP_POWERMESSAGEWAKE_PARAMS_A;

typedef PSP_POWERMESSAGEWAKE_PARAMS_A PSP_POWERMESSAGEWAKE_PARAMS;

typedef struct _SP_POWERMESSAGEWAKE_PARAMS_W * PSP_POWERMESSAGEWAKE_PARAMS_W;

typedef struct _SP_PROPCHANGE_PARAMS * PSP_PROPCHANGE_PARAMS;

typedef struct _SP_PROPSHEETPAGE_REQUEST * PSP_PROPSHEETPAGE_REQUEST;

typedef struct _SP_REGISTER_CONTROL_STATUSA * PSP_REGISTER_CONTROL_STATUSA;

typedef PSP_REGISTER_CONTROL_STATUSA PSP_REGISTER_CONTROL_STATUS;

typedef struct _SP_REGISTER_CONTROL_STATUSW * PSP_REGISTER_CONTROL_STATUSW;

typedef struct _SP_REMOVEDEVICE_PARAMS * PSP_REMOVEDEVICE_PARAMS;

typedef struct _SP_SELECTDEVICE_PARAMS_A * PSP_SELECTDEVICE_PARAMS_A;

typedef PSP_SELECTDEVICE_PARAMS_A PSP_SELECTDEVICE_PARAMS;

typedef struct _SP_SELECTDEVICE_PARAMS_W * PSP_SELECTDEVICE_PARAMS_W;

typedef struct _SP_TROUBLESHOOTER_PARAMS_A * PSP_TROUBLESHOOTER_PARAMS_A;

typedef PSP_TROUBLESHOOTER_PARAMS_A PSP_TROUBLESHOOTER_PARAMS;

typedef struct _SP_TROUBLESHOOTER_PARAMS_W * PSP_TROUBLESHOOTER_PARAMS_W;

typedef struct _SP_UNREMOVEDEVICE_PARAMS * PSP_UNREMOVEDEVICE_PARAMS;

typedef enum enum_8234 SetupFileLogInfo;

typedef struct _SOURCE_MEDIA_A SOURCE_MEDIA_A;

typedef SOURCE_MEDIA_A SOURCE_MEDIA;

typedef struct _SOURCE_MEDIA_W SOURCE_MEDIA_W;

typedef struct _SP_NEWDEVICEWIZARD_DATA SP_NEWDEVICEWIZARD_DATA;

typedef SP_NEWDEVICEWIZARD_DATA SP_ADDPROPERTYPAGE_DATA;

typedef struct _SP_ALTPLATFORM_INFO_V2 SP_ALTPLATFORM_INFO_V2;

typedef SP_ALTPLATFORM_INFO_V2 SP_ALTPLATFORM_INFO;

typedef struct _SP_ALTPLATFORM_INFO_V1 SP_ALTPLATFORM_INFO_V1;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V2_A SP_BACKUP_QUEUE_PARAMS_V2_A;

typedef SP_BACKUP_QUEUE_PARAMS_V2_A SP_BACKUP_QUEUE_PARAMS_V2;

typedef SP_BACKUP_QUEUE_PARAMS_V2 SP_BACKUP_QUEUE_PARAMS;

typedef SP_BACKUP_QUEUE_PARAMS_V2_A SP_BACKUP_QUEUE_PARAMS_A;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V1_A SP_BACKUP_QUEUE_PARAMS_V1_A;

typedef SP_BACKUP_QUEUE_PARAMS_V1_A SP_BACKUP_QUEUE_PARAMS_V1;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V1_W SP_BACKUP_QUEUE_PARAMS_V1_W;

typedef struct _SP_BACKUP_QUEUE_PARAMS_V2_W SP_BACKUP_QUEUE_PARAMS_V2_W;

typedef SP_BACKUP_QUEUE_PARAMS_V2_W SP_BACKUP_QUEUE_PARAMS_W;

typedef struct _SP_CLASSIMAGELIST_DATA SP_CLASSIMAGELIST_DATA;

typedef struct _SP_DETECTDEVICE_PARAMS SP_DETECTDEVICE_PARAMS;

typedef struct _SP_DEVICE_INTERFACE_DATA SP_DEVICE_INTERFACE_DATA;

typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA_A SP_DEVICE_INTERFACE_DETAIL_DATA_A;

typedef SP_DEVICE_INTERFACE_DETAIL_DATA_A SP_DEVICE_INTERFACE_DETAIL_DATA;

typedef struct _SP_DEVICE_INTERFACE_DETAIL_DATA_W SP_DEVICE_INTERFACE_DETAIL_DATA_W;

typedef struct _SP_DEVINFO_DATA SP_DEVINFO_DATA;

typedef struct _SP_DEVINFO_LIST_DETAIL_DATA_A SP_DEVINFO_LIST_DETAIL_DATA_A;

typedef SP_DEVINFO_LIST_DETAIL_DATA_A SP_DEVINFO_LIST_DETAIL_DATA;

typedef struct _SP_DEVINFO_LIST_DETAIL_DATA_W SP_DEVINFO_LIST_DETAIL_DATA_W;

typedef struct _SP_DEVINSTALL_PARAMS_A SP_DEVINSTALL_PARAMS_A;

typedef SP_DEVINSTALL_PARAMS_A SP_DEVINSTALL_PARAMS;

typedef struct _SP_DEVINSTALL_PARAMS_W SP_DEVINSTALL_PARAMS_W;

typedef struct _SP_DRVINFO_DATA_V2_A SP_DRVINFO_DATA_V2_A;

typedef SP_DRVINFO_DATA_V2_A SP_DRVINFO_DATA_V2;

typedef SP_DRVINFO_DATA_V2 SP_DRVINFO_DATA;

typedef SP_DRVINFO_DATA_V2_A SP_DRVINFO_DATA_A;

typedef struct _SP_DRVINFO_DATA_V1_A SP_DRVINFO_DATA_V1_A;

typedef SP_DRVINFO_DATA_V1_A SP_DRVINFO_DATA_V1;

typedef struct _SP_DRVINFO_DATA_V1_W SP_DRVINFO_DATA_V1_W;

typedef struct _SP_DRVINFO_DATA_V2_W SP_DRVINFO_DATA_V2_W;

typedef SP_DRVINFO_DATA_V2_W SP_DRVINFO_DATA_W;

typedef struct _SP_DRVINFO_DETAIL_DATA_A SP_DRVINFO_DETAIL_DATA_A;

typedef SP_DRVINFO_DETAIL_DATA_A SP_DRVINFO_DETAIL_DATA;

typedef struct _SP_DRVINFO_DETAIL_DATA_W SP_DRVINFO_DETAIL_DATA_W;

typedef struct _SP_DRVINSTALL_PARAMS SP_DRVINSTALL_PARAMS;

typedef struct _SP_ENABLECLASS_PARAMS SP_ENABLECLASS_PARAMS;

typedef struct _SP_FILE_COPY_PARAMS_A SP_FILE_COPY_PARAMS_A;

typedef SP_FILE_COPY_PARAMS_A SP_FILE_COPY_PARAMS;

typedef struct _SP_FILE_COPY_PARAMS_W SP_FILE_COPY_PARAMS_W;

typedef struct _SP_INF_INFORMATION SP_INF_INFORMATION;

typedef struct _SP_INF_SIGNER_INFO_V2_A SP_INF_SIGNER_INFO_V2_A;

typedef SP_INF_SIGNER_INFO_V2_A SP_INF_SIGNER_INFO_V2;

typedef SP_INF_SIGNER_INFO_V2 SP_INF_SIGNER_INFO;

typedef SP_INF_SIGNER_INFO_V2_A SP_INF_SIGNER_INFO_A;

typedef struct _SP_INF_SIGNER_INFO_V1_A SP_INF_SIGNER_INFO_V1_A;

typedef SP_INF_SIGNER_INFO_V1_A SP_INF_SIGNER_INFO_V1;

typedef struct _SP_INF_SIGNER_INFO_V1_W SP_INF_SIGNER_INFO_V1_W;

typedef struct _SP_INF_SIGNER_INFO_V2_W SP_INF_SIGNER_INFO_V2_W;

typedef SP_INF_SIGNER_INFO_V2_W SP_INF_SIGNER_INFO_W;

typedef struct _SP_INSTALLWIZARD_DATA SP_INSTALLWIZARD_DATA;

typedef SP_DEVICE_INTERFACE_DATA SP_INTERFACE_DEVICE_DATA;

typedef SP_DEVICE_INTERFACE_DETAIL_DATA_A SP_INTERFACE_DEVICE_DETAIL_DATA_A;

typedef SP_INTERFACE_DEVICE_DETAIL_DATA_A SP_INTERFACE_DEVICE_DETAIL_DATA;

typedef SP_DEVICE_INTERFACE_DETAIL_DATA_W SP_INTERFACE_DEVICE_DETAIL_DATA_W;

typedef struct _SP_ORIGINAL_FILE_INFO_A SP_ORIGINAL_FILE_INFO_A;

typedef SP_ORIGINAL_FILE_INFO_A SP_ORIGINAL_FILE_INFO;

typedef struct _SP_ORIGINAL_FILE_INFO_W SP_ORIGINAL_FILE_INFO_W;

typedef struct _SP_POWERMESSAGEWAKE_PARAMS_A SP_POWERMESSAGEWAKE_PARAMS_A;

typedef SP_POWERMESSAGEWAKE_PARAMS_A SP_POWERMESSAGEWAKE_PARAMS;

typedef struct _SP_POWERMESSAGEWAKE_PARAMS_W SP_POWERMESSAGEWAKE_PARAMS_W;

typedef struct _SP_PROPCHANGE_PARAMS SP_PROPCHANGE_PARAMS;

typedef struct _SP_PROPSHEETPAGE_REQUEST SP_PROPSHEETPAGE_REQUEST;

typedef struct _SP_REGISTER_CONTROL_STATUSA SP_REGISTER_CONTROL_STATUSA;

typedef SP_REGISTER_CONTROL_STATUSA SP_REGISTER_CONTROL_STATUS;

typedef struct _SP_REGISTER_CONTROL_STATUSW SP_REGISTER_CONTROL_STATUSW;

typedef struct _SP_REMOVEDEVICE_PARAMS SP_REMOVEDEVICE_PARAMS;

typedef struct _SP_SELECTDEVICE_PARAMS_A SP_SELECTDEVICE_PARAMS_A;

typedef SP_SELECTDEVICE_PARAMS_A SP_SELECTDEVICE_PARAMS;

typedef struct _SP_SELECTDEVICE_PARAMS_W SP_SELECTDEVICE_PARAMS_W;

typedef struct _SP_TROUBLESHOOTER_PARAMS_A SP_TROUBLESHOOTER_PARAMS_A;

typedef SP_TROUBLESHOOTER_PARAMS_A SP_TROUBLESHOOTER_PARAMS;

typedef struct _SP_TROUBLESHOOTER_PARAMS_W SP_TROUBLESHOOTER_PARAMS_W;

typedef struct _SP_UNREMOVEDEVICE_PARAMS SP_UNREMOVEDEVICE_PARAMS;

#define _SH_DENYNO 64

#define _SH_DENYRD 48

#define _SH_DENYRW 16

#define _SH_DENYWR 32

#define _SH_SECURE 128

#define SH_DENYNO 64

#define SH_DENYRD 48

#define SH_DENYRW 16

#define SH_DENYWR 32

#define ABE_BOTTOM 3

#define ABE_LEFT 0

#define ABE_RIGHT 2

#define ABE_TOP 1

#define ABM_ACTIVATE 6

#define ABM_GETAUTOHIDEBAR 7

#define ABM_GETSTATE 4

#define ABM_GETTASKBARPOS 5

#define ABM_NEW 0

#define ABM_QUERYPOS 2

#define ABM_REMOVE 1

#define ABM_SETAUTOHIDEBAR 8

#define ABM_SETPOS 3

#define ABM_WINDOWPOSCHANGED 9

#define ABN_FULLSCREENAPP 2

#define ABN_POSCHANGED 1

#define ABN_STATECHANGE 0

#define ABN_WINDOWARRANGE 3

#define ABS_ALWAYSONTOP 2

#define ABS_AUTOHIDE 1

#define FO_COPY 2

#define FO_DELETE 3

#define FO_MOVE 1

#define FO_RENAME 4

#define FOF_ALLOWUNDO 64

#define FOF_CONFIRMMOUSE 2

#define FOF_FILESONLY 128

#define FOF_MULTIDESTFILES 1

#define FOF_NO_CONNECTED_ELEMENTS 8192

#define FOF_NO_UI 1556

#define FOF_NOCONFIRMATION 16

#define FOF_NOCONFIRMMKDIR 512

#define FOF_NOCOPYSECURITYATTRIBS 2048

#define FOF_NOERRORUI 1024

#define FOF_NORECURSEREPARSE 32768

#define FOF_NORECURSION 4096

#define FOF_RENAMEONCOLLISION 8

#define FOF_SILENT 4

#define FOF_SIMPLEPROGRESS 256

#define FOF_WANTMAPPINGHANDLE 32

#define FOF_WANTNUKEWARNING 16384

#define NIF_GUID 32

#define NIF_ICON 2

#define NIF_INFO 16

#define NIF_MESSAGE 1

#define NIF_STATE 8

#define NIF_TIP 4

#define NIIF_ERROR 3

#define NIIF_ICON_MASK 15

#define NIIF_INFO 1

#define NIIF_NONE 0

#define NIIF_NOSOUND 16

#define NIIF_USER 4

#define NIIF_WARNING 2

#define NIM_ADD 0

#define NIM_DELETE 2

#define NIM_MODIFY 1

#define NIM_SETFOCUS 3

#define NIM_SETVERSION 4

#define NIN_BALLOONHIDE 1027

#define NIN_BALLOONSHOW 1026

#define NIN_BALLOONTIMEOUT 1028

#define NIN_BALLOONUSERCLICK 1029

#define NIN_KEYSELECT 1025

#define NIN_SELECT 1024

#define NINF_KEY 1

#define NIS_HIDDEN 1

#define NIS_SHAREDICON 2

#define NOTIFYICON_VERSION 3

#define OFFLINE_STATUS_INCOMPLETE 4

#define OFFLINE_STATUS_LOCAL 1

#define OFFLINE_STATUS_REMOTE 2

#define PO_DELETE 19

#define PO_PORTCHANGE 32

#define PO_REN_PORT 52

#define PO_RENAME 20

#define SE_ERR_ACCESSDENIED 5

#define SE_ERR_ASSOCINCOMPLETE 27

#define SE_ERR_DDEBUSY 30

#define SE_ERR_DDEFAIL 29

#define SE_ERR_DDETIMEOUT 28

#define SE_ERR_DLLNOTFOUND 32

#define SE_ERR_FNF 2

#define SE_ERR_NOASSOC 31

#define SE_ERR_OOM 8

#define SE_ERR_PNF 3

#define SE_ERR_SHARE 26

#define SEE_MASK_ASYNCOK 1048576

#define SEE_MASK_CLASSKEY 3

#define SEE_MASK_CLASSNAME 1

#define SEE_MASK_CONNECTNETDRV 128

#define SEE_MASK_DEFAULT 0

#define SEE_MASK_DOENVSUBST 512

#define SEE_MASK_FLAG_DDEWAIT 256

#define SEE_MASK_FLAG_NO_UI 1024

#define SEE_MASK_HOTKEY 32

#define SEE_MASK_ICON 16

#define SEE_MASK_IDLIST 4

#define SEE_MASK_INVOKEIDLIST 12

#define SEE_MASK_NO_CONSOLE 32768

#define SEE_MASK_NOASYNC 256

#define SEE_MASK_NOCLOSEPROCESS 64

#define SEE_MASK_UNICODE 16384

#define SHGFI_ADDOVERLAYS 32

#define SHGFI_ATTRIBUTES 2048

#define SHGFI_DISPLAYNAME 512

#define SHGFI_EXETYPE 8192

#define SHGFI_ICON 256

#define SHGFI_ICONLOCATION 4096

#define SHGFI_LARGEICON 0

#define SHGFI_LINKOVERLAY 32768

#define SHGFI_OPENICON 2

#define SHGFI_OVERLAYINDEX 64

#define SHGFI_PIDL 8

#define SHGFI_SELECTED 65536

#define SHGFI_SHELLICONSIZE 4

#define SHGFI_SMALLICON 1

#define SHGFI_SYSICONINDEX 16384

#define SHGFI_TYPENAME 1024

#define SHGFI_USEFILEATTRIBUTES 16

typedef struct _AppBarData _AppBarData, *P_AppBarData;

struct _AppBarData {
    DWORD cbSize;
    HWND hWnd;
    UINT uCallbackMessage;
    UINT uEdge;
    RECT rc;
    LPARAM lParam;
};

typedef struct _DRAGINFOA _DRAGINFOA, *P_DRAGINFOA;

struct _DRAGINFOA {
    UINT uSize;
    POINT pt;
    BOOL fNC;
    LPSTR lpFileList;
    DWORD grfKeyState;
};

typedef struct _DRAGINFOW _DRAGINFOW, *P_DRAGINFOW;

struct _DRAGINFOW {
    UINT uSize;
    POINT pt;
    BOOL fNC;
    LPWSTR lpFileList;
    DWORD grfKeyState;
};

typedef struct _NOTIFYICONDATAA _NOTIFYICONDATAA, *P_NOTIFYICONDATAA;

struct _NOTIFYICONDATAA {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    UINT uFlags;
    UINT uCallbackMessage;
    HICON hIcon;
    CHAR szTip[64];
};

typedef struct _NOTIFYICONDATAW _NOTIFYICONDATAW, *P_NOTIFYICONDATAW;

struct _NOTIFYICONDATAW {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    UINT uFlags;
    UINT uCallbackMessage;
    HICON hIcon;
    WCHAR szTip[64];
};

typedef struct _NOTIFYICONIDENTIFIER _NOTIFYICONIDENTIFIER, *P_NOTIFYICONIDENTIFIER;

struct _NOTIFYICONIDENTIFIER {
    DWORD cbSize;
    HWND hWnd;
    UINT uID;
    GUID guidItem;
};

typedef struct _SHELLEXECUTEINFOA _SHELLEXECUTEINFOA, *P_SHELLEXECUTEINFOA;

typedef union _union_1206 _union_1206, *P_union_1206;

union _union_1206 {
    HANDLE hIcon;
};

struct _SHELLEXECUTEINFOA {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpFile;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    void * lpIDList;
    LPCSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_1206 u;
    HANDLE hProcess;
};

typedef struct _SHELLEXECUTEINFOW _SHELLEXECUTEINFOW, *P_SHELLEXECUTEINFOW;

typedef union _union_1208 _union_1208, *P_union_1208;

union _union_1208 {
    HANDLE hIcon;
};

struct _SHELLEXECUTEINFOW {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCWSTR lpVerb;
    LPCWSTR lpFile;
    LPCWSTR lpParameters;
    LPCWSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    void * lpIDList;
    LPCWSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_1208 u;
    HANDLE hProcess;
};

typedef struct _SHFILEINFOA _SHFILEINFOA, *P_SHFILEINFOA;

struct _SHFILEINFOA {
    HICON hIcon;
    int iIcon;
    DWORD dwAttributes;
    CHAR szDisplayName[260];
    CHAR szTypeName[80];
};

typedef struct _SHFILEINFOW _SHFILEINFOW, *P_SHFILEINFOW;

struct _SHFILEINFOW {
    HICON hIcon;
    int iIcon;
    DWORD dwAttributes;
    WCHAR szDisplayName[260];
    WCHAR szTypeName[80];
};

typedef struct _SHFILEOPSTRUCTA _SHFILEOPSTRUCTA, *P_SHFILEOPSTRUCTA;

typedef WORD FILEOP_FLAGS;

struct _SHFILEOPSTRUCTA {
    HWND hwnd;
    UINT wFunc;
    LPCSTR pFrom;
    LPCSTR pTo;
    FILEOP_FLAGS fFlags;
    BOOL fAnyOperationsAborted;
    LPVOID hNameMappings;
    LPCSTR lpszProgressTitle;
};

typedef struct _SHFILEOPSTRUCTW _SHFILEOPSTRUCTW, *P_SHFILEOPSTRUCTW;

struct _SHFILEOPSTRUCTW {
    HWND hwnd;
    UINT wFunc;
    LPCWSTR pFrom;
    LPCWSTR pTo;
    FILEOP_FLAGS fFlags;
    BOOL fAnyOperationsAborted;
    LPVOID hNameMappings;
    LPCWSTR lpszProgressTitle;
};

typedef struct _SHNAMEMAPPINGA _SHNAMEMAPPINGA, *P_SHNAMEMAPPINGA;

struct _SHNAMEMAPPINGA {
    LPSTR pszOldPath;
    LPSTR pszNewPath;
    int cchOldPath;
    int cchNewPath;
};

typedef struct _SHNAMEMAPPINGW _SHNAMEMAPPINGW, *P_SHNAMEMAPPINGW;

struct _SHNAMEMAPPINGW {
    LPWSTR pszOldPath;
    LPWSTR pszNewPath;
    int cchOldPath;
    int cchNewPath;
};

typedef struct _AppBarData APPBARDATA;

typedef struct _DRAGINFOA DRAGINFOA;

typedef DRAGINFOA DRAGINFO;

typedef struct _DRAGINFOW DRAGINFOW;

typedef struct HDROP__ HDROP__, *PHDROP__;

typedef struct HDROP__ * HDROP;

struct HDROP__ {
    int unused;
};

typedef struct _DRAGINFOA * LPDRAGINFOA;

typedef LPDRAGINFOA LPDRAGINFO;

typedef struct _DRAGINFOW * LPDRAGINFOW;

typedef struct _SHELLEXECUTEINFOA * LPSHELLEXECUTEINFOA;

typedef LPSHELLEXECUTEINFOA LPSHELLEXECUTEINFO;

typedef struct _SHELLEXECUTEINFOW * LPSHELLEXECUTEINFOW;

typedef struct _SHFILEOPSTRUCTA * LPSHFILEOPSTRUCTA;

typedef LPSHFILEOPSTRUCTA LPSHFILEOPSTRUCT;

typedef struct _SHFILEOPSTRUCTW * LPSHFILEOPSTRUCTW;

typedef struct _SHNAMEMAPPINGA * LPSHNAMEMAPPINGA;

typedef LPSHNAMEMAPPINGA LPSHNAMEMAPPING;

typedef struct _SHNAMEMAPPINGW * LPSHNAMEMAPPINGW;

typedef struct _NOTIFYICONDATAA NOTIFYICONDATAA;

typedef NOTIFYICONDATAA NOTIFYICONDATA;

typedef struct _NOTIFYICONDATAW NOTIFYICONDATAW;

typedef struct _NOTIFYICONIDENTIFIER NOTIFYICONIDENTIFIER;

typedef struct _AppBarData * PAPPBARDATA;

typedef HRESULT (* PFNCANSHAREFOLDERW)(LPCWSTR);

typedef HRESULT (* PFNSHOWSHAREFOLDERUIW)(HWND, LPCWSTR);

typedef struct _NOTIFYICONDATAA * PNOTIFYICONDATAA;

typedef PNOTIFYICONDATAA PNOTIFYICONDATA;

typedef struct _NOTIFYICONDATAW * PNOTIFYICONDATAW;

typedef struct _NOTIFYICONIDENTIFIER * PNOTIFYICONIDENTIFIER;

typedef WORD PRINTEROP_FLAGS;

typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFOA;

typedef SHELLEXECUTEINFOA SHELLEXECUTEINFO;

typedef struct _SHELLEXECUTEINFOW SHELLEXECUTEINFOW;

typedef struct _SHFILEINFOA SHFILEINFOA;

typedef SHFILEINFOA SHFILEINFO;

typedef struct _SHFILEINFOW SHFILEINFOW;

typedef struct _SHFILEOPSTRUCTA SHFILEOPSTRUCTA;

typedef SHFILEOPSTRUCTA SHFILEOPSTRUCT;

typedef struct _SHFILEOPSTRUCTW SHFILEOPSTRUCTW;

typedef struct _SHNAMEMAPPINGA SHNAMEMAPPINGA;

typedef SHNAMEMAPPINGA SHNAMEMAPPING;

typedef struct _SHNAMEMAPPINGW SHNAMEMAPPINGW;

#define COPYENGINE_E_ACCESS_DENIED_DEST 2150039586

#define COPYENGINE_E_ACCESS_DENIED_SRC 2150039585

#define COPYENGINE_E_ACCESSDENIED_READONLY 2150039615

#define COPYENGINE_E_ALREADY_EXISTS_FOLDER 2150039596

#define COPYENGINE_E_ALREADY_EXISTS_NORMAL 2150039593

#define COPYENGINE_E_ALREADY_EXISTS_READONLY 2150039594

#define COPYENGINE_E_ALREADY_EXISTS_SYSTEM 2150039595

#define COPYENGINE_E_CANCELLED 2150039553

#define COPYENGINE_E_CANT_REACH_SOURCE 2150039605

#define COPYENGINE_E_DEST_IS_R_CD 2150039569

#define COPYENGINE_E_DEST_IS_R_DVD 2150039572

#define COPYENGINE_E_DEST_IS_RO_CD 2150039567

#define COPYENGINE_E_DEST_IS_RO_DVD 2150039570

#define COPYENGINE_E_DEST_IS_RW_CD 2150039568

#define COPYENGINE_E_DEST_IS_RW_DVD 2150039571

#define COPYENGINE_E_DEST_SAME_TREE 2150039562

#define COPYENGINE_E_DEST_SUBTREE 2150039561

#define COPYENGINE_E_DIFF_DIR 2150039556

#define COPYENGINE_E_DIR_NOT_EMPTY 2150039613

#define COPYENGINE_E_DISK_FULL 2150039602

#define COPYENGINE_E_DISK_FULL_CLEAN 2150039603

#define COPYENGINE_E_EA_LOSS 2150039598

#define COPYENGINE_E_EA_NOT_SUPPORTED 2150039604

#define COPYENGINE_E_ENCRYPTION_LOSS 2150039601

#define COPYENGINE_E_FAT_MAX_IN_ROOT 2150039614

#define COPYENGINE_E_FILE_IS_FLD_DEST 2150039564

#define COPYENGINE_E_FILE_TOO_LARGE 2150039565

#define COPYENGINE_E_FLD_IS_FILE_DEST 2150039563

#define COPYENGINE_E_INVALID_FILES_DEST 2150039580

#define COPYENGINE_E_INVALID_FILES_SRC 2150039579

#define COPYENGINE_E_MANY_SRC_1_DEST 2150039557

#define COPYENGINE_E_NET_DISCONNECT_DEST 2150039590

#define COPYENGINE_E_NET_DISCONNECT_SRC 2150039589

#define COPYENGINE_E_NEWFILE_NAME_TOO_LONG 2150039611

#define COPYENGINE_E_NEWFOLDER_NAME_TOO_LONG 2150039612

#define COPYENGINE_E_PATH_NOT_FOUND_DEST 2150039588

#define COPYENGINE_E_PATH_NOT_FOUND_SRC 2150039587

#define COPYENGINE_E_PATH_TOO_DEEP_DEST 2150039582

#define COPYENGINE_E_PATH_TOO_DEEP_SRC 2150039581

#define COPYENGINE_E_PROPERTIES_LOSS 2150039600

#define COPYENGINE_E_PROPERTY_LOSS 2150039599

#define COPYENGINE_E_RECYCLE_BIN_NOT_FOUND 2150039610

#define COPYENGINE_E_RECYCLE_FORCE_NUKE 2150039606

#define COPYENGINE_E_RECYCLE_PATH_TOO_LONG 2150039608

#define COPYENGINE_E_RECYCLE_SIZE_TOO_BIG 2150039607

#define COPYENGINE_E_RECYCLE_UNKNOWN_ERROR 2150039605

#define COPYENGINE_E_REDIRECTED_TO_WEBPAGE 2150039616

#define COPYENGINE_E_REMOVABLE_FULL 2150039566

#define COPYENGINE_E_REQUIRES_ELEVATION 2150039554

#define COPYENGINE_E_ROOT_DIR_DEST 2150039584

#define COPYENGINE_E_ROOT_DIR_SRC 2150039583

#define COPYENGINE_E_SAME_FILE 2150039555

#define COPYENGINE_E_SERVER_BAD_FILE_TYPE 2150039617

#define COPYENGINE_E_SHARING_VIOLATION_DEST 2150039592

#define COPYENGINE_E_SHARING_VIOLATION_SRC 2150039591

#define COPYENGINE_E_SRC_IS_R_CD 2150039575

#define COPYENGINE_E_SRC_IS_R_DVD 2150039578

#define COPYENGINE_E_SRC_IS_RO_CD 2150039573

#define COPYENGINE_E_SRC_IS_RO_DVD 2150039576

#define COPYENGINE_E_SRC_IS_RW_CD 2150039574

#define COPYENGINE_E_SRC_IS_RW_DVD 2150039577

#define COPYENGINE_E_STREAM_LOSS 2150039597

#define COPYENGINE_E_USER_CANCELLED 2150039552

#define COPYENGINE_S_ALREADY_DONE 2555914

#define COPYENGINE_S_CLOSE_PROGRAM 2555917

#define COPYENGINE_S_COLLISIONRESOLVED 2555918

#define COPYENGINE_S_DONT_PROCESS_CHILDREN 2555912

#define COPYENGINE_S_KEEP_BOTH 2555916

#define COPYENGINE_S_MERGE 2555910

#define COPYENGINE_S_NOT_HANDLED 2555907

#define COPYENGINE_S_PENDING 2555915

#define COPYENGINE_S_USER_IGNORED 2555909

#define COPYENGINE_S_USER_RETRY 2555908

#define COPYENGINE_S_YES 2555905

#define EXECUTE_E_LAUNCH_APPLICATION 2150039809

#define LIBRARY_E_NO_ACCESSIBLE_LOCATION 2150040065

#define LIBRARY_E_NO_SAVE_LOCATION 2150040064

#define LINK_E_DELETE 2150039811

#define NETCACHE_E_NEGATIVE_CACHE 2150039808

#define SHELL_E_WRONG_BITDEPTH 2150039810

typedef enum _tagACENUMOPTION {
    ACEO_FIRSTUNUSED=65536,
    ACEO_MOSTRECENTFIRST=1,
    ACEO_NONE=0
} _tagACENUMOPTION;

typedef enum _tagAUTOCOMPLETEOPTIONS {
    ACO_AUTOAPPEND=2,
    ACO_AUTOSUGGEST=1,
    ACO_FILTERPREFIXES=8,
    ACO_NONE=0,
    ACO_NOPREFIXFILTERING=256,
    ACO_RTLREADING=64,
    ACO_SEARCH=4,
    ACO_UPDOWNKEYDROPSLIST=32,
    ACO_USETAB=16,
    ACO_WORD_FILTER=128
} _tagAUTOCOMPLETEOPTIONS;

typedef enum _tagACENUMOPTION ACENUMOPTION;

typedef enum _tagAUTOCOMPLETEOPTIONS AUTOCOMPLETEOPTIONS;

typedef struct DFConstraint DFConstraint, *PDFConstraint;

typedef struct DFConstraintVtbl DFConstraintVtbl, *PDFConstraintVtbl;

struct DFConstraintVtbl {
    HRESULT (* QueryInterface)(struct DFConstraint *, IID *, void * *);
    ULONG (* AddRef)(struct DFConstraint *);
    ULONG (* Release)(struct DFConstraint *);
    HRESULT (* GetTypeInfoCount)(struct DFConstraint *, UINT *);
    HRESULT (* GetTypeInfo)(struct DFConstraint *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct DFConstraint *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct DFConstraint *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Name)(struct DFConstraint *, BSTR *);
    HRESULT (* get_Value)(struct DFConstraint *, VARIANT *);
};

struct DFConstraint {
    struct DFConstraintVtbl * lpVtbl;
};

typedef struct DShellFolderViewEvents DShellFolderViewEvents, *PDShellFolderViewEvents;

typedef struct DShellFolderViewEventsVtbl DShellFolderViewEventsVtbl, *PDShellFolderViewEventsVtbl;

struct DShellFolderViewEventsVtbl {
    HRESULT (* QueryInterface)(struct DShellFolderViewEvents *, IID *, void * *);
    ULONG (* AddRef)(struct DShellFolderViewEvents *);
    ULONG (* Release)(struct DShellFolderViewEvents *);
    HRESULT (* GetTypeInfoCount)(struct DShellFolderViewEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct DShellFolderViewEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct DShellFolderViewEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct DShellFolderViewEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct DShellFolderViewEvents {
    struct DShellFolderViewEventsVtbl * lpVtbl;
};

typedef struct FileSearchBand FileSearchBand, *PFileSearchBand;

struct FileSearchBand {
};

typedef struct Folder Folder, *PFolder;

typedef struct FolderVtbl FolderVtbl, *PFolderVtbl;

typedef struct FolderItems FolderItems, *PFolderItems;

typedef struct FolderItem FolderItem, *PFolderItem;

typedef struct FolderItemsVtbl FolderItemsVtbl, *PFolderItemsVtbl;

typedef struct FolderItemVtbl FolderItemVtbl, *PFolderItemVtbl;

typedef struct FolderItemVerbs FolderItemVerbs, *PFolderItemVerbs;

typedef struct FolderItemVerbsVtbl FolderItemVerbsVtbl, *PFolderItemVerbsVtbl;

typedef struct FolderItemVerb FolderItemVerb, *PFolderItemVerb;

typedef struct FolderItemVerbVtbl FolderItemVerbVtbl, *PFolderItemVerbVtbl;

struct FolderVtbl {
    HRESULT (* QueryInterface)(struct Folder *, IID *, void * *);
    ULONG (* AddRef)(struct Folder *);
    ULONG (* Release)(struct Folder *);
    HRESULT (* GetTypeInfoCount)(struct Folder *, UINT *);
    HRESULT (* GetTypeInfo)(struct Folder *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct Folder *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct Folder *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Title)(struct Folder *, BSTR *);
    HRESULT (* get_Application)(struct Folder *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct Folder *, struct IDispatch * *);
    HRESULT (* get_ParentFolder)(struct Folder *, struct Folder * *);
    HRESULT (* Items)(struct Folder *, struct FolderItems * *);
    HRESULT (* ParseName)(struct Folder *, BSTR, struct FolderItem * *);
    HRESULT (* NewFolder)(struct Folder *, BSTR, VARIANT);
    HRESULT (* MoveHere)(struct Folder *, VARIANT, VARIANT);
    HRESULT (* CopyHere)(struct Folder *, VARIANT, VARIANT);
    HRESULT (* GetDetailsOf)(struct Folder *, VARIANT, int, BSTR *);
};

struct Folder {
    struct FolderVtbl * lpVtbl;
};

struct FolderItemVtbl {
    HRESULT (* QueryInterface)(struct FolderItem *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItem *);
    ULONG (* Release)(struct FolderItem *);
    HRESULT (* GetTypeInfoCount)(struct FolderItem *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItem *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItem *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItem *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct FolderItem *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItem *, struct IDispatch * *);
    HRESULT (* get_Name)(struct FolderItem *, BSTR *);
    HRESULT (* put_Name)(struct FolderItem *, BSTR);
    HRESULT (* get_Path)(struct FolderItem *, BSTR *);
    HRESULT (* get_GetLink)(struct FolderItem *, struct IDispatch * *);
    HRESULT (* get_GetFolder)(struct FolderItem *, struct IDispatch * *);
    HRESULT (* get_IsLink)(struct FolderItem *, VARIANT_BOOL *);
    HRESULT (* get_IsFolder)(struct FolderItem *, VARIANT_BOOL *);
    HRESULT (* get_IsFileSystem)(struct FolderItem *, VARIANT_BOOL *);
    HRESULT (* get_IsBrowsable)(struct FolderItem *, VARIANT_BOOL *);
    HRESULT (* get_ModifyDate)(struct FolderItem *, DATE *);
    HRESULT (* put_ModifyDate)(struct FolderItem *, DATE);
    HRESULT (* get_Size)(struct FolderItem *, LONG *);
    HRESULT (* get_Type)(struct FolderItem *, BSTR *);
    HRESULT (* Verbs)(struct FolderItem *, struct FolderItemVerbs * *);
    HRESULT (* InvokeVerb)(struct FolderItem *, VARIANT);
};

struct FolderItemsVtbl {
    HRESULT (* QueryInterface)(struct FolderItems *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItems *);
    ULONG (* Release)(struct FolderItems *);
    HRESULT (* GetTypeInfoCount)(struct FolderItems *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItems *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItems *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItems *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct FolderItems *, long *);
    HRESULT (* get_Application)(struct FolderItems *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItems *, struct IDispatch * *);
    HRESULT (* Item)(struct FolderItems *, VARIANT, struct FolderItem * *);
    HRESULT (* _NewEnum)(struct FolderItems *, struct IUnknown * *);
};

struct FolderItems {
    struct FolderItemsVtbl * lpVtbl;
};

struct FolderItemVerbs {
    struct FolderItemVerbsVtbl * lpVtbl;
};

struct FolderItemVerbsVtbl {
    HRESULT (* QueryInterface)(struct FolderItemVerbs *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItemVerbs *);
    ULONG (* Release)(struct FolderItemVerbs *);
    HRESULT (* GetTypeInfoCount)(struct FolderItemVerbs *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItemVerbs *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItemVerbs *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItemVerbs *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct FolderItemVerbs *, long *);
    HRESULT (* get_Application)(struct FolderItemVerbs *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItemVerbs *, struct IDispatch * *);
    HRESULT (* Item)(struct FolderItemVerbs *, VARIANT, struct FolderItemVerb * *);
    HRESULT (* _NewEnum)(struct FolderItemVerbs *, struct IUnknown * *);
};

struct FolderItemVerbVtbl {
    HRESULT (* QueryInterface)(struct FolderItemVerb *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItemVerb *);
    ULONG (* Release)(struct FolderItemVerb *);
    HRESULT (* GetTypeInfoCount)(struct FolderItemVerb *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItemVerb *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItemVerb *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItemVerb *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct FolderItemVerb *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItemVerb *, struct IDispatch * *);
    HRESULT (* get_Name)(struct FolderItemVerb *, BSTR *);
    HRESULT (* DoIt)(struct FolderItemVerb *);
};

struct FolderItem {
    struct FolderItemVtbl * lpVtbl;
};

struct FolderItemVerb {
    struct FolderItemVerbVtbl * lpVtbl;
};

typedef struct Folder2 Folder2, *PFolder2;

typedef struct Folder2Vtbl Folder2Vtbl, *PFolder2Vtbl;

struct Folder2 {
    struct Folder2Vtbl * lpVtbl;
};

struct Folder2Vtbl {
    HRESULT (* QueryInterface)(struct Folder2 *, IID *, void * *);
    ULONG (* AddRef)(struct Folder2 *);
    ULONG (* Release)(struct Folder2 *);
    HRESULT (* GetTypeInfoCount)(struct Folder2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct Folder2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct Folder2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct Folder2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Title)(struct Folder2 *, BSTR *);
    HRESULT (* get_Application)(struct Folder2 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct Folder2 *, struct IDispatch * *);
    HRESULT (* get_ParentFolder)(struct Folder2 *, struct Folder * *);
    HRESULT (* Items)(struct Folder2 *, struct FolderItems * *);
    HRESULT (* ParseName)(struct Folder2 *, BSTR, struct FolderItem * *);
    HRESULT (* NewFolder)(struct Folder2 *, BSTR, VARIANT);
    HRESULT (* MoveHere)(struct Folder2 *, VARIANT, VARIANT);
    HRESULT (* CopyHere)(struct Folder2 *, VARIANT, VARIANT);
    HRESULT (* GetDetailsOf)(struct Folder2 *, VARIANT, int, BSTR *);
    HRESULT (* get_Self)(struct Folder2 *, struct FolderItem * *);
    HRESULT (* get_OfflineStatus)(struct Folder2 *, LONG *);
    HRESULT (* Synchronize)(struct Folder2 *);
    HRESULT (* get_HaveToShowWebViewBarricade)(struct Folder2 *, VARIANT_BOOL *);
    HRESULT (* DismissedWebViewBarricade)(struct Folder2 *);
};

typedef struct Folder3 Folder3, *PFolder3;

typedef struct Folder3Vtbl Folder3Vtbl, *PFolder3Vtbl;

struct Folder3Vtbl {
    HRESULT (* QueryInterface)(struct Folder3 *, IID *, void * *);
    ULONG (* AddRef)(struct Folder3 *);
    ULONG (* Release)(struct Folder3 *);
    HRESULT (* GetTypeInfoCount)(struct Folder3 *, UINT *);
    HRESULT (* GetTypeInfo)(struct Folder3 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct Folder3 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct Folder3 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Title)(struct Folder3 *, BSTR *);
    HRESULT (* get_Application)(struct Folder3 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct Folder3 *, struct IDispatch * *);
    HRESULT (* get_ParentFolder)(struct Folder3 *, struct Folder * *);
    HRESULT (* Items)(struct Folder3 *, struct FolderItems * *);
    HRESULT (* ParseName)(struct Folder3 *, BSTR, struct FolderItem * *);
    HRESULT (* NewFolder)(struct Folder3 *, BSTR, VARIANT);
    HRESULT (* MoveHere)(struct Folder3 *, VARIANT, VARIANT);
    HRESULT (* CopyHere)(struct Folder3 *, VARIANT, VARIANT);
    HRESULT (* GetDetailsOf)(struct Folder3 *, VARIANT, int, BSTR *);
    HRESULT (* get_Self)(struct Folder3 *, struct FolderItem * *);
    HRESULT (* get_OfflineStatus)(struct Folder3 *, LONG *);
    HRESULT (* Synchronize)(struct Folder3 *);
    HRESULT (* get_HaveToShowWebViewBarricade)(struct Folder3 *, VARIANT_BOOL *);
    HRESULT (* DismissedWebViewBarricade)(struct Folder3 *);
    HRESULT (* get_ShowWebViewBarricade)(struct Folder3 *, VARIANT_BOOL *);
    HRESULT (* put_ShowWebViewBarricade)(struct Folder3 *, VARIANT_BOOL);
};

struct Folder3 {
    struct Folder3Vtbl * lpVtbl;
};

typedef struct FolderItem2 FolderItem2, *PFolderItem2;

typedef struct FolderItem2Vtbl FolderItem2Vtbl, *PFolderItem2Vtbl;

struct FolderItem2 {
    struct FolderItem2Vtbl * lpVtbl;
};

struct FolderItem2Vtbl {
    HRESULT (* QueryInterface)(struct FolderItem2 *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItem2 *);
    ULONG (* Release)(struct FolderItem2 *);
    HRESULT (* GetTypeInfoCount)(struct FolderItem2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItem2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItem2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItem2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct FolderItem2 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItem2 *, struct IDispatch * *);
    HRESULT (* get_Name)(struct FolderItem2 *, BSTR *);
    HRESULT (* put_Name)(struct FolderItem2 *, BSTR);
    HRESULT (* get_Path)(struct FolderItem2 *, BSTR *);
    HRESULT (* get_GetLink)(struct FolderItem2 *, struct IDispatch * *);
    HRESULT (* get_GetFolder)(struct FolderItem2 *, struct IDispatch * *);
    HRESULT (* get_IsLink)(struct FolderItem2 *, VARIANT_BOOL *);
    HRESULT (* get_IsFolder)(struct FolderItem2 *, VARIANT_BOOL *);
    HRESULT (* get_IsFileSystem)(struct FolderItem2 *, VARIANT_BOOL *);
    HRESULT (* get_IsBrowsable)(struct FolderItem2 *, VARIANT_BOOL *);
    HRESULT (* get_ModifyDate)(struct FolderItem2 *, DATE *);
    HRESULT (* put_ModifyDate)(struct FolderItem2 *, DATE);
    HRESULT (* get_Size)(struct FolderItem2 *, LONG *);
    HRESULT (* get_Type)(struct FolderItem2 *, BSTR *);
    HRESULT (* Verbs)(struct FolderItem2 *, struct FolderItemVerbs * *);
    HRESULT (* InvokeVerb)(struct FolderItem2 *, VARIANT);
    HRESULT (* InvokeVerbEx)(struct FolderItem2 *, VARIANT, VARIANT);
    HRESULT (* ExtendedProperty)(struct FolderItem2 *, BSTR, VARIANT *);
};

typedef struct FolderItems2 FolderItems2, *PFolderItems2;

typedef struct FolderItems2Vtbl FolderItems2Vtbl, *PFolderItems2Vtbl;

struct FolderItems2 {
    struct FolderItems2Vtbl * lpVtbl;
};

struct FolderItems2Vtbl {
    HRESULT (* QueryInterface)(struct FolderItems2 *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItems2 *);
    ULONG (* Release)(struct FolderItems2 *);
    HRESULT (* GetTypeInfoCount)(struct FolderItems2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItems2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItems2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItems2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct FolderItems2 *, long *);
    HRESULT (* get_Application)(struct FolderItems2 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItems2 *, struct IDispatch * *);
    HRESULT (* Item)(struct FolderItems2 *, VARIANT, struct FolderItem * *);
    HRESULT (* _NewEnum)(struct FolderItems2 *, struct IUnknown * *);
    HRESULT (* InvokeVerbEx)(struct FolderItems2 *, VARIANT, VARIANT);
};

typedef struct FolderItems3 FolderItems3, *PFolderItems3;

typedef struct FolderItems3Vtbl FolderItems3Vtbl, *PFolderItems3Vtbl;

struct FolderItems3 {
    struct FolderItems3Vtbl * lpVtbl;
};

struct FolderItems3Vtbl {
    HRESULT (* QueryInterface)(struct FolderItems3 *, IID *, void * *);
    ULONG (* AddRef)(struct FolderItems3 *);
    ULONG (* Release)(struct FolderItems3 *);
    HRESULT (* GetTypeInfoCount)(struct FolderItems3 *, UINT *);
    HRESULT (* GetTypeInfo)(struct FolderItems3 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct FolderItems3 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct FolderItems3 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Count)(struct FolderItems3 *, long *);
    HRESULT (* get_Application)(struct FolderItems3 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct FolderItems3 *, struct IDispatch * *);
    HRESULT (* Item)(struct FolderItems3 *, VARIANT, struct FolderItem * *);
    HRESULT (* _NewEnum)(struct FolderItems3 *, struct IUnknown * *);
    HRESULT (* InvokeVerbEx)(struct FolderItems3 *, VARIANT, VARIANT);
    HRESULT (* Filter)(struct FolderItems3 *, long, BSTR);
    HRESULT (* get_Verbs)(struct FolderItems3 *, struct FolderItemVerbs * *);
};

typedef struct IAsyncOperation IAsyncOperation, *PIAsyncOperation;

typedef struct IAsyncOperationVtbl IAsyncOperationVtbl, *PIAsyncOperationVtbl;

struct IAsyncOperationVtbl {
    HRESULT (* QueryInterface)(struct IAsyncOperation *, IID *, void * *);
    ULONG (* AddRef)(struct IAsyncOperation *);
    ULONG (* Release)(struct IAsyncOperation *);
    HRESULT (* SetAsyncMode)(struct IAsyncOperation *, BOOL);
    HRESULT (* GetAsyncMode)(struct IAsyncOperation *, BOOL *);
    HRESULT (* StartOperation)(struct IAsyncOperation *, struct IBindCtx *);
    HRESULT (* InOperation)(struct IAsyncOperation *, BOOL *);
    HRESULT (* EndOperation)(struct IAsyncOperation *, HRESULT, struct IBindCtx *, DWORD);
};

struct IAsyncOperation {
    struct IAsyncOperationVtbl * lpVtbl;
};

typedef struct IAutoComplete IAutoComplete, *PIAutoComplete;

typedef struct IAutoCompleteVtbl IAutoCompleteVtbl, *PIAutoCompleteVtbl;

struct IAutoComplete {
    struct IAutoCompleteVtbl * lpVtbl;
};

struct IAutoCompleteVtbl {
    HRESULT (* QueryInterface)(struct IAutoComplete *, IID *, void * *);
    ULONG (* AddRef)(struct IAutoComplete *);
    ULONG (* Release)(struct IAutoComplete *);
    HRESULT (* Init)(struct IAutoComplete *, HWND, struct IUnknown *, LPCWSTR, LPCWSTR);
    HRESULT (* Enable)(struct IAutoComplete *, BOOL);
};

typedef struct IAutoComplete2 IAutoComplete2, *PIAutoComplete2;

typedef struct IAutoComplete2Vtbl IAutoComplete2Vtbl, *PIAutoComplete2Vtbl;

struct IAutoComplete2Vtbl {
    HRESULT (* QueryInterface)(struct IAutoComplete2 *, IID *, void * *);
    ULONG (* AddRef)(struct IAutoComplete2 *);
    ULONG (* Release)(struct IAutoComplete2 *);
    HRESULT (* Init)(struct IAutoComplete2 *, HWND, struct IUnknown *, LPCWSTR, LPCWSTR);
    HRESULT (* Enable)(struct IAutoComplete2 *, BOOL);
    HRESULT (* SetOptions)(struct IAutoComplete2 *, DWORD);
    HRESULT (* GetOptions)(struct IAutoComplete2 *, DWORD *);
};

struct IAutoComplete2 {
    struct IAutoComplete2Vtbl * lpVtbl;
};

typedef struct IEnumACString IEnumACString, *PIEnumACString;

typedef struct IEnumACStringVtbl IEnumACStringVtbl, *PIEnumACStringVtbl;

struct IEnumACStringVtbl {
    HRESULT (* QueryInterface)(struct IEnumACString *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumACString *);
    ULONG (* Release)(struct IEnumACString *);
    HRESULT (* Next)(struct IEnumACString *, ULONG, LPOLESTR *, ULONG *);
    HRESULT (* Skip)(struct IEnumACString *, ULONG);
    HRESULT (* Reset)(struct IEnumACString *);
    HRESULT (* Clone)(struct IEnumACString *, struct IEnumString * *);
    HRESULT (* NextItem)(struct IEnumACString *, LPWSTR, ULONG, ULONG *);
    HRESULT (* SetEnumOptions)(struct IEnumACString *, DWORD);
    HRESULT (* GetEnumOptions)(struct IEnumACString *, DWORD *);
};

struct IEnumACString {
    struct IEnumACStringVtbl * lpVtbl;
};

typedef struct IFileSearchBand IFileSearchBand, *PIFileSearchBand;

typedef struct IFileSearchBandVtbl IFileSearchBandVtbl, *PIFileSearchBandVtbl;

struct IFileSearchBand {
    struct IFileSearchBandVtbl * lpVtbl;
};

struct IFileSearchBandVtbl {
    HRESULT (* QueryInterface)(struct IFileSearchBand *, IID *, void * *);
    ULONG (* AddRef)(struct IFileSearchBand *);
    ULONG (* Release)(struct IFileSearchBand *);
    HRESULT (* GetTypeInfoCount)(struct IFileSearchBand *, UINT *);
    HRESULT (* GetTypeInfo)(struct IFileSearchBand *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IFileSearchBand *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IFileSearchBand *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* SetFocus)(struct IFileSearchBand *);
    HRESULT (* SetSearchParameters)(struct IFileSearchBand *, BSTR *, VARIANT_BOOL, VARIANT *, VARIANT *);
    HRESULT (* get_SearchID)(struct IFileSearchBand *, BSTR *);
    HRESULT (* get_Scope)(struct IFileSearchBand *, VARIANT *);
    HRESULT (* get_QueryFile)(struct IFileSearchBand *, VARIANT *);
};

typedef struct IFolderViewOC IFolderViewOC, *PIFolderViewOC;

typedef struct IFolderViewOCVtbl IFolderViewOCVtbl, *PIFolderViewOCVtbl;

struct IFolderViewOC {
    struct IFolderViewOCVtbl * lpVtbl;
};

struct IFolderViewOCVtbl {
    HRESULT (* QueryInterface)(struct IFolderViewOC *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderViewOC *);
    ULONG (* Release)(struct IFolderViewOC *);
    HRESULT (* GetTypeInfoCount)(struct IFolderViewOC *, UINT *);
    HRESULT (* GetTypeInfo)(struct IFolderViewOC *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IFolderViewOC *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IFolderViewOC *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* SetFolderView)(struct IFolderViewOC *, struct IDispatch *);
};

typedef struct INewWDEvents INewWDEvents, *PINewWDEvents;

typedef struct INewWDEventsVtbl INewWDEventsVtbl, *PINewWDEventsVtbl;

struct INewWDEventsVtbl {
    HRESULT (* QueryInterface)(struct INewWDEvents *, IID *, void * *);
    ULONG (* AddRef)(struct INewWDEvents *);
    ULONG (* Release)(struct INewWDEvents *);
    HRESULT (* GetTypeInfoCount)(struct INewWDEvents *, UINT *);
    HRESULT (* GetTypeInfo)(struct INewWDEvents *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct INewWDEvents *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct INewWDEvents *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* FinalBack)(struct INewWDEvents *);
    HRESULT (* FinalNext)(struct INewWDEvents *);
    HRESULT (* Cancel)(struct INewWDEvents *);
    HRESULT (* put_Caption)(struct INewWDEvents *, BSTR);
    HRESULT (* get_Caption)(struct INewWDEvents *, BSTR *);
    HRESULT (* put_Property)(struct INewWDEvents *, BSTR, VARIANT *);
    HRESULT (* get_Property)(struct INewWDEvents *, BSTR, VARIANT *);
    HRESULT (* SetWizardButtons)(struct INewWDEvents *, VARIANT_BOOL, VARIANT_BOOL, VARIANT_BOOL);
    HRESULT (* SetHeaderText)(struct INewWDEvents *, BSTR, BSTR);
    HRESULT (* PassportAuthenticate)(struct INewWDEvents *, BSTR, VARIANT_BOOL *);
};

struct INewWDEvents {
    struct INewWDEventsVtbl * lpVtbl;
};

typedef struct IShellDispatch IShellDispatch, *PIShellDispatch;

typedef struct IShellDispatchVtbl IShellDispatchVtbl, *PIShellDispatchVtbl;

struct IShellDispatch {
    struct IShellDispatchVtbl * lpVtbl;
};

struct IShellDispatchVtbl {
    HRESULT (* QueryInterface)(struct IShellDispatch *, IID *, void * *);
    ULONG (* AddRef)(struct IShellDispatch *);
    ULONG (* Release)(struct IShellDispatch *);
    HRESULT (* GetTypeInfoCount)(struct IShellDispatch *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellDispatch *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellDispatch *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellDispatch *, struct IDispatch * *);
    HRESULT (* NameSpace)(struct IShellDispatch *, VARIANT, struct Folder * *);
    HRESULT (* BrowseForFolder)(struct IShellDispatch *, long, BSTR, long, VARIANT, struct Folder * *);
    HRESULT (* Windows)(struct IShellDispatch *, struct IDispatch * *);
    HRESULT (* Open)(struct IShellDispatch *, VARIANT);
    HRESULT (* Explore)(struct IShellDispatch *, VARIANT);
    HRESULT (* MinimizeAll)(struct IShellDispatch *);
    HRESULT (* UndoMinimizeALL)(struct IShellDispatch *);
    HRESULT (* FileRun)(struct IShellDispatch *);
    HRESULT (* CascadeWindows)(struct IShellDispatch *);
    HRESULT (* TileVertically)(struct IShellDispatch *);
    HRESULT (* TileHorizontally)(struct IShellDispatch *);
    HRESULT (* ShutdownWindows)(struct IShellDispatch *);
    HRESULT (* Suspend)(struct IShellDispatch *);
    HRESULT (* EjectPC)(struct IShellDispatch *);
    HRESULT (* SetTime)(struct IShellDispatch *);
    HRESULT (* TrayProperties)(struct IShellDispatch *);
    HRESULT (* Help)(struct IShellDispatch *);
    HRESULT (* FindFiles)(struct IShellDispatch *);
    HRESULT (* FindComputer)(struct IShellDispatch *);
    HRESULT (* RefreshMenu)(struct IShellDispatch *);
    HRESULT (* ControlPanelItem)(struct IShellDispatch *, BSTR);
};

typedef struct IShellDispatch2 IShellDispatch2, *PIShellDispatch2;

typedef struct IShellDispatch2Vtbl IShellDispatch2Vtbl, *PIShellDispatch2Vtbl;

struct IShellDispatch2Vtbl {
    HRESULT (* QueryInterface)(struct IShellDispatch2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellDispatch2 *);
    ULONG (* Release)(struct IShellDispatch2 *);
    HRESULT (* GetTypeInfoCount)(struct IShellDispatch2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellDispatch2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellDispatch2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellDispatch2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellDispatch2 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellDispatch2 *, struct IDispatch * *);
    HRESULT (* NameSpace)(struct IShellDispatch2 *, VARIANT, struct Folder * *);
    HRESULT (* BrowseForFolder)(struct IShellDispatch2 *, long, BSTR, long, VARIANT, struct Folder * *);
    HRESULT (* Windows)(struct IShellDispatch2 *, struct IDispatch * *);
    HRESULT (* Open)(struct IShellDispatch2 *, VARIANT);
    HRESULT (* Explore)(struct IShellDispatch2 *, VARIANT);
    HRESULT (* MinimizeAll)(struct IShellDispatch2 *);
    HRESULT (* UndoMinimizeALL)(struct IShellDispatch2 *);
    HRESULT (* FileRun)(struct IShellDispatch2 *);
    HRESULT (* CascadeWindows)(struct IShellDispatch2 *);
    HRESULT (* TileVertically)(struct IShellDispatch2 *);
    HRESULT (* TileHorizontally)(struct IShellDispatch2 *);
    HRESULT (* ShutdownWindows)(struct IShellDispatch2 *);
    HRESULT (* Suspend)(struct IShellDispatch2 *);
    HRESULT (* EjectPC)(struct IShellDispatch2 *);
    HRESULT (* SetTime)(struct IShellDispatch2 *);
    HRESULT (* TrayProperties)(struct IShellDispatch2 *);
    HRESULT (* Help)(struct IShellDispatch2 *);
    HRESULT (* FindFiles)(struct IShellDispatch2 *);
    HRESULT (* FindComputer)(struct IShellDispatch2 *);
    HRESULT (* RefreshMenu)(struct IShellDispatch2 *);
    HRESULT (* ControlPanelItem)(struct IShellDispatch2 *, BSTR);
    HRESULT (* IsRestricted)(struct IShellDispatch2 *, BSTR, BSTR, long *);
    HRESULT (* ShellExecuteA)(struct IShellDispatch2 *, BSTR, VARIANT, VARIANT, VARIANT, VARIANT);
    HRESULT (* FindPrinter)(struct IShellDispatch2 *, BSTR, BSTR, BSTR);
    HRESULT (* GetSystemInformation)(struct IShellDispatch2 *, BSTR, VARIANT *);
    HRESULT (* ServiceStart)(struct IShellDispatch2 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* ServiceStop)(struct IShellDispatch2 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* IsServiceRunning)(struct IShellDispatch2 *, BSTR, VARIANT *);
    HRESULT (* CanStartStopService)(struct IShellDispatch2 *, BSTR, VARIANT *);
    HRESULT (* ShowBrowserBar)(struct IShellDispatch2 *, BSTR, VARIANT, VARIANT *);
};

struct IShellDispatch2 {
    struct IShellDispatch2Vtbl * lpVtbl;
};

typedef struct IShellDispatch3 IShellDispatch3, *PIShellDispatch3;

typedef struct IShellDispatch3Vtbl IShellDispatch3Vtbl, *PIShellDispatch3Vtbl;

struct IShellDispatch3 {
    struct IShellDispatch3Vtbl * lpVtbl;
};

struct IShellDispatch3Vtbl {
    HRESULT (* QueryInterface)(struct IShellDispatch3 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellDispatch3 *);
    ULONG (* Release)(struct IShellDispatch3 *);
    HRESULT (* GetTypeInfoCount)(struct IShellDispatch3 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellDispatch3 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellDispatch3 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellDispatch3 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellDispatch3 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellDispatch3 *, struct IDispatch * *);
    HRESULT (* NameSpace)(struct IShellDispatch3 *, VARIANT, struct Folder * *);
    HRESULT (* BrowseForFolder)(struct IShellDispatch3 *, long, BSTR, long, VARIANT, struct Folder * *);
    HRESULT (* Windows)(struct IShellDispatch3 *, struct IDispatch * *);
    HRESULT (* Open)(struct IShellDispatch3 *, VARIANT);
    HRESULT (* Explore)(struct IShellDispatch3 *, VARIANT);
    HRESULT (* MinimizeAll)(struct IShellDispatch3 *);
    HRESULT (* UndoMinimizeALL)(struct IShellDispatch3 *);
    HRESULT (* FileRun)(struct IShellDispatch3 *);
    HRESULT (* CascadeWindows)(struct IShellDispatch3 *);
    HRESULT (* TileVertically)(struct IShellDispatch3 *);
    HRESULT (* TileHorizontally)(struct IShellDispatch3 *);
    HRESULT (* ShutdownWindows)(struct IShellDispatch3 *);
    HRESULT (* Suspend)(struct IShellDispatch3 *);
    HRESULT (* EjectPC)(struct IShellDispatch3 *);
    HRESULT (* SetTime)(struct IShellDispatch3 *);
    HRESULT (* TrayProperties)(struct IShellDispatch3 *);
    HRESULT (* Help)(struct IShellDispatch3 *);
    HRESULT (* FindFiles)(struct IShellDispatch3 *);
    HRESULT (* FindComputer)(struct IShellDispatch3 *);
    HRESULT (* RefreshMenu)(struct IShellDispatch3 *);
    HRESULT (* ControlPanelItem)(struct IShellDispatch3 *, BSTR);
    HRESULT (* IsRestricted)(struct IShellDispatch3 *, BSTR, BSTR, long *);
    HRESULT (* ShellExecuteA)(struct IShellDispatch3 *, BSTR, VARIANT, VARIANT, VARIANT, VARIANT);
    HRESULT (* FindPrinter)(struct IShellDispatch3 *, BSTR, BSTR, BSTR);
    HRESULT (* GetSystemInformation)(struct IShellDispatch3 *, BSTR, VARIANT *);
    HRESULT (* ServiceStart)(struct IShellDispatch3 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* ServiceStop)(struct IShellDispatch3 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* IsServiceRunning)(struct IShellDispatch3 *, BSTR, VARIANT *);
    HRESULT (* CanStartStopService)(struct IShellDispatch3 *, BSTR, VARIANT *);
    HRESULT (* ShowBrowserBar)(struct IShellDispatch3 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* AddToRecent)(struct IShellDispatch3 *, VARIANT, BSTR);
};

typedef struct IShellDispatch4 IShellDispatch4, *PIShellDispatch4;

typedef struct IShellDispatch4Vtbl IShellDispatch4Vtbl, *PIShellDispatch4Vtbl;

struct IShellDispatch4Vtbl {
    HRESULT (* QueryInterface)(struct IShellDispatch4 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellDispatch4 *);
    ULONG (* Release)(struct IShellDispatch4 *);
    HRESULT (* GetTypeInfoCount)(struct IShellDispatch4 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellDispatch4 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellDispatch4 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellDispatch4 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellDispatch4 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellDispatch4 *, struct IDispatch * *);
    HRESULT (* NameSpace)(struct IShellDispatch4 *, VARIANT, struct Folder * *);
    HRESULT (* BrowseForFolder)(struct IShellDispatch4 *, long, BSTR, long, VARIANT, struct Folder * *);
    HRESULT (* Windows)(struct IShellDispatch4 *, struct IDispatch * *);
    HRESULT (* Open)(struct IShellDispatch4 *, VARIANT);
    HRESULT (* Explore)(struct IShellDispatch4 *, VARIANT);
    HRESULT (* MinimizeAll)(struct IShellDispatch4 *);
    HRESULT (* UndoMinimizeALL)(struct IShellDispatch4 *);
    HRESULT (* FileRun)(struct IShellDispatch4 *);
    HRESULT (* CascadeWindows)(struct IShellDispatch4 *);
    HRESULT (* TileVertically)(struct IShellDispatch4 *);
    HRESULT (* TileHorizontally)(struct IShellDispatch4 *);
    HRESULT (* ShutdownWindows)(struct IShellDispatch4 *);
    HRESULT (* Suspend)(struct IShellDispatch4 *);
    HRESULT (* EjectPC)(struct IShellDispatch4 *);
    HRESULT (* SetTime)(struct IShellDispatch4 *);
    HRESULT (* TrayProperties)(struct IShellDispatch4 *);
    HRESULT (* Help)(struct IShellDispatch4 *);
    HRESULT (* FindFiles)(struct IShellDispatch4 *);
    HRESULT (* FindComputer)(struct IShellDispatch4 *);
    HRESULT (* RefreshMenu)(struct IShellDispatch4 *);
    HRESULT (* ControlPanelItem)(struct IShellDispatch4 *, BSTR);
    HRESULT (* IsRestricted)(struct IShellDispatch4 *, BSTR, BSTR, long *);
    HRESULT (* ShellExecuteA)(struct IShellDispatch4 *, BSTR, VARIANT, VARIANT, VARIANT, VARIANT);
    HRESULT (* FindPrinter)(struct IShellDispatch4 *, BSTR, BSTR, BSTR);
    HRESULT (* GetSystemInformation)(struct IShellDispatch4 *, BSTR, VARIANT *);
    HRESULT (* ServiceStart)(struct IShellDispatch4 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* ServiceStop)(struct IShellDispatch4 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* IsServiceRunning)(struct IShellDispatch4 *, BSTR, VARIANT *);
    HRESULT (* CanStartStopService)(struct IShellDispatch4 *, BSTR, VARIANT *);
    HRESULT (* ShowBrowserBar)(struct IShellDispatch4 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* AddToRecent)(struct IShellDispatch4 *, VARIANT, BSTR);
    HRESULT (* WindowsSecurity)(struct IShellDispatch4 *);
    HRESULT (* ToggleDesktop)(struct IShellDispatch4 *);
    HRESULT (* ExplorerPolicy)(struct IShellDispatch4 *, BSTR, VARIANT *);
    HRESULT (* GetSetting)(struct IShellDispatch4 *, long, VARIANT_BOOL *);
};

struct IShellDispatch4 {
    struct IShellDispatch4Vtbl * lpVtbl;
};

typedef struct IShellDispatch5 IShellDispatch5, *PIShellDispatch5;

typedef struct IShellDispatch5Vtbl IShellDispatch5Vtbl, *PIShellDispatch5Vtbl;

struct IShellDispatch5Vtbl {
    HRESULT (* QueryInterface)(struct IShellDispatch5 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellDispatch5 *);
    ULONG (* Release)(struct IShellDispatch5 *);
    HRESULT (* GetTypeInfoCount)(struct IShellDispatch5 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellDispatch5 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellDispatch5 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellDispatch5 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellDispatch5 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellDispatch5 *, struct IDispatch * *);
    HRESULT (* NameSpace)(struct IShellDispatch5 *, VARIANT, struct Folder * *);
    HRESULT (* BrowseForFolder)(struct IShellDispatch5 *, long, BSTR, long, VARIANT, struct Folder * *);
    HRESULT (* Windows)(struct IShellDispatch5 *, struct IDispatch * *);
    HRESULT (* Open)(struct IShellDispatch5 *, VARIANT);
    HRESULT (* Explore)(struct IShellDispatch5 *, VARIANT);
    HRESULT (* MinimizeAll)(struct IShellDispatch5 *);
    HRESULT (* UndoMinimizeALL)(struct IShellDispatch5 *);
    HRESULT (* FileRun)(struct IShellDispatch5 *);
    HRESULT (* CascadeWindows)(struct IShellDispatch5 *);
    HRESULT (* TileVertically)(struct IShellDispatch5 *);
    HRESULT (* TileHorizontally)(struct IShellDispatch5 *);
    HRESULT (* ShutdownWindows)(struct IShellDispatch5 *);
    HRESULT (* Suspend)(struct IShellDispatch5 *);
    HRESULT (* EjectPC)(struct IShellDispatch5 *);
    HRESULT (* SetTime)(struct IShellDispatch5 *);
    HRESULT (* TrayProperties)(struct IShellDispatch5 *);
    HRESULT (* Help)(struct IShellDispatch5 *);
    HRESULT (* FindFiles)(struct IShellDispatch5 *);
    HRESULT (* FindComputer)(struct IShellDispatch5 *);
    HRESULT (* RefreshMenu)(struct IShellDispatch5 *);
    HRESULT (* ControlPanelItem)(struct IShellDispatch5 *, BSTR);
    HRESULT (* IsRestricted)(struct IShellDispatch5 *, BSTR, BSTR, long *);
    HRESULT (* ShellExecuteA)(struct IShellDispatch5 *, BSTR, VARIANT, VARIANT, VARIANT, VARIANT);
    HRESULT (* FindPrinter)(struct IShellDispatch5 *, BSTR, BSTR, BSTR);
    HRESULT (* GetSystemInformation)(struct IShellDispatch5 *, BSTR, VARIANT *);
    HRESULT (* ServiceStart)(struct IShellDispatch5 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* ServiceStop)(struct IShellDispatch5 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* IsServiceRunning)(struct IShellDispatch5 *, BSTR, VARIANT *);
    HRESULT (* CanStartStopService)(struct IShellDispatch5 *, BSTR, VARIANT *);
    HRESULT (* ShowBrowserBar)(struct IShellDispatch5 *, BSTR, VARIANT, VARIANT *);
    HRESULT (* AddToRecent)(struct IShellDispatch5 *, VARIANT, BSTR);
    HRESULT (* WindowsSecurity)(struct IShellDispatch5 *);
    HRESULT (* ToggleDesktop)(struct IShellDispatch5 *);
    HRESULT (* ExplorerPolicy)(struct IShellDispatch5 *, BSTR, VARIANT *);
    HRESULT (* GetSetting)(struct IShellDispatch5 *, long, VARIANT_BOOL *);
    HRESULT (* WindowSwitcher)(struct IShellDispatch5 *);
};

struct IShellDispatch5 {
    struct IShellDispatch5Vtbl * lpVtbl;
};

typedef struct IShellFolderViewDual IShellFolderViewDual, *PIShellFolderViewDual;

typedef struct IShellFolderViewDualVtbl IShellFolderViewDualVtbl, *PIShellFolderViewDualVtbl;

struct IShellFolderViewDual {
    struct IShellFolderViewDualVtbl * lpVtbl;
};

struct IShellFolderViewDualVtbl {
    HRESULT (* QueryInterface)(struct IShellFolderViewDual *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolderViewDual *);
    ULONG (* Release)(struct IShellFolderViewDual *);
    HRESULT (* GetTypeInfoCount)(struct IShellFolderViewDual *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellFolderViewDual *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellFolderViewDual *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellFolderViewDual *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellFolderViewDual *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellFolderViewDual *, struct IDispatch * *);
    HRESULT (* get_Folder)(struct IShellFolderViewDual *, struct Folder * *);
    HRESULT (* SelectedItems)(struct IShellFolderViewDual *, struct FolderItems * *);
    HRESULT (* get_FocusedItem)(struct IShellFolderViewDual *, struct FolderItem * *);
    HRESULT (* SelectItem)(struct IShellFolderViewDual *, VARIANT *, int);
    HRESULT (* PopupItemMenu)(struct IShellFolderViewDual *, struct FolderItem *, VARIANT, VARIANT, BSTR *);
    HRESULT (* get_Script)(struct IShellFolderViewDual *, struct IDispatch * *);
    HRESULT (* get_ViewOptions)(struct IShellFolderViewDual *, long *);
};

typedef struct IShellFolderViewDual2 IShellFolderViewDual2, *PIShellFolderViewDual2;

typedef struct IShellFolderViewDual2Vtbl IShellFolderViewDual2Vtbl, *PIShellFolderViewDual2Vtbl;

struct IShellFolderViewDual2Vtbl {
    HRESULT (* QueryInterface)(struct IShellFolderViewDual2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolderViewDual2 *);
    ULONG (* Release)(struct IShellFolderViewDual2 *);
    HRESULT (* GetTypeInfoCount)(struct IShellFolderViewDual2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellFolderViewDual2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellFolderViewDual2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellFolderViewDual2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellFolderViewDual2 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellFolderViewDual2 *, struct IDispatch * *);
    HRESULT (* get_Folder)(struct IShellFolderViewDual2 *, struct Folder * *);
    HRESULT (* SelectedItems)(struct IShellFolderViewDual2 *, struct FolderItems * *);
    HRESULT (* get_FocusedItem)(struct IShellFolderViewDual2 *, struct FolderItem * *);
    HRESULT (* SelectItem)(struct IShellFolderViewDual2 *, VARIANT *, int);
    HRESULT (* PopupItemMenu)(struct IShellFolderViewDual2 *, struct FolderItem *, VARIANT, VARIANT, BSTR *);
    HRESULT (* get_Script)(struct IShellFolderViewDual2 *, struct IDispatch * *);
    HRESULT (* get_ViewOptions)(struct IShellFolderViewDual2 *, long *);
    HRESULT (* get_CurrentViewMode)(struct IShellFolderViewDual2 *, UINT *);
    HRESULT (* put_CurrentViewMode)(struct IShellFolderViewDual2 *, UINT);
    HRESULT (* SelectItemRelative)(struct IShellFolderViewDual2 *, int);
};

struct IShellFolderViewDual2 {
    struct IShellFolderViewDual2Vtbl * lpVtbl;
};

typedef struct IShellFolderViewDual3 IShellFolderViewDual3, *PIShellFolderViewDual3;

typedef struct IShellFolderViewDual3Vtbl IShellFolderViewDual3Vtbl, *PIShellFolderViewDual3Vtbl;

struct IShellFolderViewDual3 {
    struct IShellFolderViewDual3Vtbl * lpVtbl;
};

struct IShellFolderViewDual3Vtbl {
    HRESULT (* QueryInterface)(struct IShellFolderViewDual3 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolderViewDual3 *);
    ULONG (* Release)(struct IShellFolderViewDual3 *);
    HRESULT (* GetTypeInfoCount)(struct IShellFolderViewDual3 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellFolderViewDual3 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellFolderViewDual3 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellFolderViewDual3 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Application)(struct IShellFolderViewDual3 *, struct IDispatch * *);
    HRESULT (* get_Parent)(struct IShellFolderViewDual3 *, struct IDispatch * *);
    HRESULT (* get_Folder)(struct IShellFolderViewDual3 *, struct Folder * *);
    HRESULT (* SelectedItems)(struct IShellFolderViewDual3 *, struct FolderItems * *);
    HRESULT (* get_FocusedItem)(struct IShellFolderViewDual3 *, struct FolderItem * *);
    HRESULT (* SelectItem)(struct IShellFolderViewDual3 *, VARIANT *, int);
    HRESULT (* PopupItemMenu)(struct IShellFolderViewDual3 *, struct FolderItem *, VARIANT, VARIANT, BSTR *);
    HRESULT (* get_Script)(struct IShellFolderViewDual3 *, struct IDispatch * *);
    HRESULT (* get_ViewOptions)(struct IShellFolderViewDual3 *, long *);
    HRESULT (* get_CurrentViewMode)(struct IShellFolderViewDual3 *, UINT *);
    HRESULT (* put_CurrentViewMode)(struct IShellFolderViewDual3 *, UINT);
    HRESULT (* SelectItemRelative)(struct IShellFolderViewDual3 *, int);
    HRESULT (* get_GroupBy)(struct IShellFolderViewDual3 *, BSTR *);
    HRESULT (* put_GroupBy)(struct IShellFolderViewDual3 *, BSTR);
    HRESULT (* get_FolderFlags)(struct IShellFolderViewDual3 *, DWORD *);
    HRESULT (* put_FolderFlags)(struct IShellFolderViewDual3 *, DWORD);
    HRESULT (* get_SortColumns)(struct IShellFolderViewDual3 *, BSTR *);
    HRESULT (* put_SortColumns)(struct IShellFolderViewDual3 *, BSTR);
    HRESULT (* put_IconSize)(struct IShellFolderViewDual3 *, int);
    HRESULT (* get_IconSize)(struct IShellFolderViewDual3 *, int *);
    HRESULT (* FilterView)(struct IShellFolderViewDual3 *, BSTR);
};

typedef struct IShellLinkDual IShellLinkDual, *PIShellLinkDual;

typedef struct IShellLinkDualVtbl IShellLinkDualVtbl, *PIShellLinkDualVtbl;

struct IShellLinkDual {
    struct IShellLinkDualVtbl * lpVtbl;
};

struct IShellLinkDualVtbl {
    HRESULT (* QueryInterface)(struct IShellLinkDual *, IID *, void * *);
    ULONG (* AddRef)(struct IShellLinkDual *);
    ULONG (* Release)(struct IShellLinkDual *);
    HRESULT (* GetTypeInfoCount)(struct IShellLinkDual *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellLinkDual *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellLinkDual *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellLinkDual *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Path)(struct IShellLinkDual *, BSTR *);
    HRESULT (* put_Path)(struct IShellLinkDual *, BSTR);
    HRESULT (* get_Description)(struct IShellLinkDual *, BSTR *);
    HRESULT (* put_Description)(struct IShellLinkDual *, BSTR);
    HRESULT (* get_WorkingDirectory)(struct IShellLinkDual *, BSTR *);
    HRESULT (* put_WorkingDirectory)(struct IShellLinkDual *, BSTR);
    HRESULT (* get_Arguments)(struct IShellLinkDual *, BSTR *);
    HRESULT (* put_Arguments)(struct IShellLinkDual *, BSTR);
    HRESULT (* get_Hotkey)(struct IShellLinkDual *, int *);
    HRESULT (* put_Hotkey)(struct IShellLinkDual *, int);
    HRESULT (* get_ShowCommand)(struct IShellLinkDual *, int *);
    HRESULT (* put_ShowCommand)(struct IShellLinkDual *, int);
    HRESULT (* Resolve)(struct IShellLinkDual *, int);
    HRESULT (* GetIconLocation)(struct IShellLinkDual *, BSTR *, int *);
    HRESULT (* SetIconLocation)(struct IShellLinkDual *, BSTR, int);
    HRESULT (* Save)(struct IShellLinkDual *, VARIANT);
};

typedef struct IShellLinkDual2 IShellLinkDual2, *PIShellLinkDual2;

typedef struct IShellLinkDual2Vtbl IShellLinkDual2Vtbl, *PIShellLinkDual2Vtbl;

struct IShellLinkDual2Vtbl {
    HRESULT (* QueryInterface)(struct IShellLinkDual2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellLinkDual2 *);
    ULONG (* Release)(struct IShellLinkDual2 *);
    HRESULT (* GetTypeInfoCount)(struct IShellLinkDual2 *, UINT *);
    HRESULT (* GetTypeInfo)(struct IShellLinkDual2 *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IShellLinkDual2 *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IShellLinkDual2 *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* get_Path)(struct IShellLinkDual2 *, BSTR *);
    HRESULT (* put_Path)(struct IShellLinkDual2 *, BSTR);
    HRESULT (* get_Description)(struct IShellLinkDual2 *, BSTR *);
    HRESULT (* put_Description)(struct IShellLinkDual2 *, BSTR);
    HRESULT (* get_WorkingDirectory)(struct IShellLinkDual2 *, BSTR *);
    HRESULT (* put_WorkingDirectory)(struct IShellLinkDual2 *, BSTR);
    HRESULT (* get_Arguments)(struct IShellLinkDual2 *, BSTR *);
    HRESULT (* put_Arguments)(struct IShellLinkDual2 *, BSTR);
    HRESULT (* get_Hotkey)(struct IShellLinkDual2 *, int *);
    HRESULT (* put_Hotkey)(struct IShellLinkDual2 *, int);
    HRESULT (* get_ShowCommand)(struct IShellLinkDual2 *, int *);
    HRESULT (* put_ShowCommand)(struct IShellLinkDual2 *, int);
    HRESULT (* Resolve)(struct IShellLinkDual2 *, int);
    HRESULT (* GetIconLocation)(struct IShellLinkDual2 *, BSTR *, int *);
    HRESULT (* SetIconLocation)(struct IShellLinkDual2 *, BSTR, int);
    HRESULT (* Save)(struct IShellLinkDual2 *, VARIANT);
    HRESULT (* get_Target)(struct IShellLinkDual2 *, struct FolderItem * *);
};

struct IShellLinkDual2 {
    struct IShellLinkDual2Vtbl * lpVtbl;
};

typedef struct IWebWizardHost IWebWizardHost, *PIWebWizardHost;

typedef struct IWebWizardHostVtbl IWebWizardHostVtbl, *PIWebWizardHostVtbl;

struct IWebWizardHostVtbl {
    HRESULT (* QueryInterface)(struct IWebWizardHost *, IID *, void * *);
    ULONG (* AddRef)(struct IWebWizardHost *);
    ULONG (* Release)(struct IWebWizardHost *);
    HRESULT (* GetTypeInfoCount)(struct IWebWizardHost *, UINT *);
    HRESULT (* GetTypeInfo)(struct IWebWizardHost *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IWebWizardHost *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IWebWizardHost *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* FinalBack)(struct IWebWizardHost *);
    HRESULT (* FinalNext)(struct IWebWizardHost *);
    HRESULT (* Cancel)(struct IWebWizardHost *);
    HRESULT (* put_Caption)(struct IWebWizardHost *, BSTR);
    HRESULT (* get_Caption)(struct IWebWizardHost *, BSTR *);
    HRESULT (* put_Property)(struct IWebWizardHost *, BSTR, VARIANT *);
    HRESULT (* get_Property)(struct IWebWizardHost *, BSTR, VARIANT *);
    HRESULT (* SetWizardButtons)(struct IWebWizardHost *, VARIANT_BOOL, VARIANT_BOOL, VARIANT_BOOL);
    HRESULT (* SetHeaderText)(struct IWebWizardHost *, BSTR, BSTR);
};

struct IWebWizardHost {
    struct IWebWizardHostVtbl * lpVtbl;
};

typedef struct IAsyncOperation * LPASYNCOPERATION;

typedef struct IAutoComplete * LPAUTOCOMPLETE;

typedef struct IAutoComplete2 * LPAUTOCOMPLETE2;

typedef struct IEnumACString * LPENUMACSTRING;

typedef struct FolderItem * LPFOLDERITEM;

typedef enum OfflineFolderStatus {
    OFS_DIRTYCACHE=4,
    OFS_INACTIVE=0,
    OFS_OFFLINE=2,
    OFS_ONLINE=1,
    OFS_SERVERBACK=3
} OfflineFolderStatus;

typedef struct IEnumACString * PENUMACSTRING;

typedef struct Shell Shell, *PShell;

struct Shell {
};

typedef struct ShellDispatchInproc ShellDispatchInproc, *PShellDispatchInproc;

struct ShellDispatchInproc {
};

typedef struct ShellFolderItem ShellFolderItem, *PShellFolderItem;

struct ShellFolderItem {
};

typedef struct ShellFolderView ShellFolderView, *PShellFolderView;

struct ShellFolderView {
};

typedef struct ShellFolderViewOC ShellFolderViewOC, *PShellFolderViewOC;

struct ShellFolderViewOC {
};

typedef enum ShellFolderViewOptions {
    SFVVO_DESKTOPHTML=512,
    SFVVO_DOUBLECLICKINWEBVIEW=128,
    SFVVO_SHOWALLOBJECTS=1,
    SFVVO_SHOWCOMPCOLOR=8,
    SFVVO_SHOWEXTENSIONS=2,
    SFVVO_SHOWSYSFILES=32,
    SFVVO_WIN95CLASSIC=64
} ShellFolderViewOptions;

typedef struct ShellLinkObject ShellLinkObject, *PShellLinkObject;

struct ShellLinkObject {
};

typedef enum ShellSpecialFolderConstants {
    ssfALTSTARTUP=29,
    ssfAPPDATA=26,
    ssfBITBUCKET=10,
    ssfCOMMONALTSTARTUP=30,
    ssfCOMMONAPPDATA=35,
    ssfCOMMONDESKTOPDIR=25,
    ssfCOMMONFAVORITES=31,
    ssfCOMMONPROGRAMS=23,
    ssfCOMMONSTARTMENU=22,
    ssfCOMMONSTARTUP=24,
    ssfCONTROLS=3,
    ssfCOOKIES=33,
    ssfDESKTOP=0,
    ssfDESKTOPDIRECTORY=16,
    ssfDRIVES=17,
    ssfFAVORITES=6,
    ssfFONTS=20,
    ssfHISTORY=34,
    ssfINTERNETCACHE=32,
    ssfLOCALAPPDATA=28,
    ssfMYPICTURES=39,
    ssfNETHOOD=19,
    ssfNETWORK=18,
    ssfPERSONAL=5,
    ssfPRINTERS=4,
    ssfPRINTHOOD=27,
    ssfPROFILE=40,
    ssfPROGRAMFILES=38,
    ssfPROGRAMFILESx86=48,
    ssfPROGRAMS=2,
    ssfRECENT=8,
    ssfSENDTO=9,
    ssfSTARTMENU=11,
    ssfSTARTUP=7,
    ssfSYSTEM=37,
    ssfSYSTEMx86=41,
    ssfTEMPLATES=21,
    ssfWINDOWS=36
} ShellSpecialFolderConstants;

#define PID_COMPUTERNAME 5

#define PID_CONTROLPANEL_CATEGORY 2

#define PID_DESCRIPTIONID 2

#define PID_DISPLACED_DATE 3

#define PID_DISPLACED_FROM 2

#define PID_DISPLAY_PROPERTIES 0

#define PID_FINDDATA 0

#define PID_HTMLINFOTIPFILE 5

#define PID_INTROTEXT 1

#define PID_LINK_TARGET 2

#define PID_LINK_TARGET_TYPE 3

#define PID_MISC_ACCESSCOUNT 3

#define PID_MISC_OWNER 4

#define PID_MISC_PICS 6

#define PID_MISC_STATUS 2

#define PID_NETRESOURCE 1

#define PID_NETWORKLOCATION 4

#define PID_QUERY_RANK 2

#define PID_SHARE_CSC_STATUS 2

#define PID_SYNC_COPY_IN 2

#define PID_VOLUME_CAPACITY 3

#define PID_VOLUME_FILESYSTEM 4

#define PID_VOLUME_FREE 2

#define PID_WHICHFOLDER 3

#define PIDASI_AVG_DATA_RATE 4

#define PIDASI_CHANNEL_COUNT 7

#define PIDASI_COMPRESSION 10

#define PIDASI_FORMAT 2

#define PIDASI_SAMPLE_RATE 5

#define PIDASI_SAMPLE_SIZE 6

#define PIDASI_STREAM_NAME 9

#define PIDASI_STREAM_NUMBER 8

#define PIDASI_TIMELENGTH 3

#define PIDDRSI_DESCRIPTION 3

#define PIDDRSI_PLAYCOUNT 4

#define PIDDRSI_PLAYEXPIRES 6

#define PIDDRSI_PLAYSTARTS 5

#define PIDDRSI_PROTECTED 2

#define PIDSI_ALBUM 4

#define PIDSI_ARTIST 2

#define PIDSI_COMMENT 6

#define PIDSI_GENRE 11

#define PIDSI_LYRICS 12

#define PIDSI_SONGTITLE 3

#define PIDSI_TRACK 7

#define PIDSI_YEAR 5

#define PIDVSI_COMPRESSION 10

#define PIDVSI_DATA_RATE 8

#define PIDVSI_FRAME_COUNT 5

#define PIDVSI_FRAME_HEIGHT 4

#define PIDVSI_FRAME_RATE 6

#define PIDVSI_FRAME_WIDTH 3

#define PIDVSI_SAMPLE_SIZE 9

#define PIDVSI_STREAM_NAME 2

#define PIDVSI_STREAM_NUMBER 11

#define PIDVSI_TIMELENGTH 7

#define BFFM_ENABLEOK 1125

#define BFFM_INITIALIZED 1

#define BFFM_IUNKNOWN 5

#define BFFM_SELCHANGED 2

#define BFFM_SETEXPANDED 1130

#define BFFM_SETOKTEXT 1129

#define BFFM_SETSELECTION 1126

#define BFFM_SETSELECTIONA 1126

#define BFFM_SETSELECTIONW 1127

#define BFFM_SETSTATUSTEXT 1124

#define BFFM_SETSTATUSTEXTA 1124

#define BFFM_SETSTATUSTEXTW 1128

#define BFFM_VALIDATEFAILED 3

#define BFFM_VALIDATEFAILEDA 3

#define BFFM_VALIDATEFAILEDW 4

#define BIF_BROWSEFILEJUNCTIONS 65536

#define BIF_BROWSEFORCOMPUTER 4096

#define BIF_BROWSEFORPRINTER 8192

#define BIF_BROWSEINCLUDEFILES 16384

#define BIF_BROWSEINCLUDEURLS 128

#define BIF_DONTGOBELOWDOMAIN 2

#define BIF_EDITBOX 16

#define BIF_NEWDIALOGSTYLE 64

#define BIF_NONEWFOLDERBUTTON 512

#define BIF_NOTRANSLATETARGETS 1024

#define BIF_RETURNFSANCESTORS 8

#define BIF_RETURNONLYFSDIRS 1

#define BIF_SHAREABLE 32768

#define BIF_STATUSTEXT 4

#define BIF_UAHINT 256

#define BIF_USENEWUI 80

#define BIF_VALIDATE 32

#define CABINETSTATE_VERSION 2

#define CLOSEPROPS_DISCARD 1

#define CLOSEPROPS_NONE 0

#define CSIDL_ADMINTOOLS 48

#define CSIDL_ALTSTARTUP 29

#define CSIDL_APPDATA 26

#define CSIDL_BITBUCKET 10

#define CSIDL_CDBURN_AREA 59

#define CSIDL_COMMON_ADMINTOOLS 47

#define CSIDL_COMMON_ALTSTARTUP 30

#define CSIDL_COMMON_APPDATA 35

#define CSIDL_COMMON_DESKTOPDIRECTORY 25

#define CSIDL_COMMON_DOCUMENTS 46

#define CSIDL_COMMON_FAVORITES 31

#define CSIDL_COMMON_MUSIC 53

#define CSIDL_COMMON_OEM_LINKS 58

#define CSIDL_COMMON_PICTURES 54

#define CSIDL_COMMON_PROGRAMS 23

#define CSIDL_COMMON_STARTMENU 22

#define CSIDL_COMMON_STARTUP 24

#define CSIDL_COMMON_TEMPLATES 45

#define CSIDL_COMMON_VIDEO 55

#define CSIDL_COMPUTERSNEARME 61

#define CSIDL_CONNECTIONS 49

#define CSIDL_CONTROLS 3

#define CSIDL_COOKIES 33

#define CSIDL_DESKTOP 0

#define CSIDL_DESKTOPDIRECTORY 16

#define CSIDL_DRIVES 17

#define CSIDL_FAVORITES 6

#define CSIDL_FLAG_CREATE 32768

#define CSIDL_FLAG_DONT_UNEXPAND 8192

#define CSIDL_FLAG_DONT_VERIFY 16384

#define CSIDL_FLAG_MASK 65280

#define CSIDL_FONTS 20

#define CSIDL_HISTORY 34

#define CSIDL_INTERNET 1

#define CSIDL_INTERNET_CACHE 32

#define CSIDL_LOCAL_APPDATA 28

#define CSIDL_MYDOCUMENTS 5

#define CSIDL_MYMUSIC 13

#define CSIDL_MYPICTURES 39

#define CSIDL_MYVIDEO 14

#define CSIDL_NETHOOD 19

#define CSIDL_NETWORK 18

#define CSIDL_PERSONAL 5

#define CSIDL_PRINTERS 4

#define CSIDL_PRINTHOOD 27

#define CSIDL_PROFILE 40

#define CSIDL_PROGRAM_FILES 38

#define CSIDL_PROGRAM_FILES_COMMON 43

#define CSIDL_PROGRAM_FILES_COMMONX86 44

#define CSIDL_PROGRAM_FILESX86 42

#define CSIDL_PROGRAMS 2

#define CSIDL_RECENT 8

#define CSIDL_RESOURCES 56

#define CSIDL_RESOURCES_LOCALIZED 57

#define CSIDL_SENDTO 9

#define CSIDL_STARTMENU 11

#define CSIDL_STARTUP 7

#define CSIDL_SYSTEM 37

#define CSIDL_SYSTEMX86 41

#define CSIDL_TEMPLATES 21

#define CSIDL_WINDOWS 36

#define DBC_GS_IDEAL 0

#define DBC_GS_SIZEDOWN 1

#define DBC_HIDE 0

#define DBC_SHOW 1

#define DBC_SHOWOBSCURE 2

#define DFM_CMD_COPY -3

#define DFM_CMD_DELETE -1

#define DFM_CMD_LINK -4

#define DFM_CMD_MODALPROP -12

#define DFM_CMD_MOVE -2

#define DFM_CMD_NEWFOLDER -6

#define DFM_CMD_PASTE -7

#define DFM_CMD_PASTELINK -10

#define DFM_CMD_PASTESPECIAL -11

#define DFM_CMD_PROPERTIES -5

#define DFM_CMD_RENAME -13

#define DFM_CMD_VIEWDETAILS -9

#define DFM_CMD_VIEWLIST -8

#define DFM_GETDEFSTATICID 14

#define DFM_GETHELPTEXT 5

#define DFM_GETHELPTEXTW 11

#define DFM_GETVERBA 16

#define DFM_GETVERBW 15

#define DFM_INVOKECOMMAND 2

#define DFM_INVOKECOMMANDEX 12

#define DFM_MAPCOMMANDNAME 13

#define DFM_MERGECONTEXTMENU 1

#define DFM_MERGECONTEXTMENU_BOTTOM 17

#define DFM_MERGECONTEXTMENU_TOP 10

#define DFM_MODIFYQCMFLAGS 18

#define DFM_VALIDATECMD 9

#define DFM_WM_DRAWITEM 7

#define DFM_WM_INITMENUPOPUP 8

#define DFM_WM_MEASUREITEM 6

#define DVASPECT_COPY 3

#define DVASPECT_LINK 4

#define DVASPECT_SHORTNAME 2

#define DWFAF_AUTOHIDE 16

#define DWFAF_GROUP1 2

#define DWFAF_GROUP2 4

#define DWFAF_HIDDEN 1

#define DWFRF_DELETECONFIGDATA 1

#define DWFRF_NORMAL 0

#define EXP_DARWIN_ID_SIG 2684354566

#define EXP_SPECIAL_FOLDER_SIG 2684354565

#define EXP_SZ_ICON_SIG 2684354567

#define EXP_SZ_LINK_SIG 2684354561

#define FCIDM_BROWSERFIRST 40960

#define FCIDM_BROWSERLAST 48896

#define FCIDM_GLOBALFIRST 32768

#define FCIDM_GLOBALLAST 40959

#define FCIDM_MENU_EDIT 32832

#define FCIDM_MENU_EXPLORE 33104

#define FCIDM_MENU_FAVORITES 33136

#define FCIDM_MENU_FILE 32768

#define FCIDM_MENU_FIND 33088

#define FCIDM_MENU_HELP 33024

#define FCIDM_MENU_TOOLS 32960

#define FCIDM_MENU_TOOLS_SEP_GOTO 32961

#define FCIDM_MENU_VIEW 32896

#define FCIDM_MENU_VIEW_SEP_OPTIONS 32897

#define FCIDM_SHVIEWFIRST 0

#define FCIDM_SHVIEWLAST 32767

#define FCIDM_STATUS 40961

#define FCIDM_TOOLBAR 40960

#define FVSIF_CANVIEWIT 1073741824

#define FVSIF_NEWFAILED 134217728

#define FVSIF_NEWFILE 2147483648

#define FVSIF_PINNED 2

#define FVSIF_RECT 1

#define GETPROPS_NONE 0

#define GIL_ASYNC 32

#define GIL_CHECKSHIELD 512

#define GIL_DEFAULTICON 64

#define GIL_DONTCACHE 16

#define GIL_FORCENOSHIELD 1024

#define GIL_FORSHELL 2

#define GIL_FORSHORTCUT 128

#define GIL_NOTFILENAME 8

#define GIL_OPENICON 1

#define GIL_PERCLASS 4

#define GIL_PERINSTANCE 2

#define GIL_SHIELD 512

#define GIL_SIMULATEDOC 1

#define IDC_OFFLINE_HAND 103

#define IDC_PANTOOL_HAND_CLOSED 105

#define IDC_PANTOOL_HAND_OPEN 104

#define IDO_SHGIOI_DEFAULT 4294967292

#define IDO_SHGIOI_LINK 268435454

#define IDO_SHGIOI_SHARE 268435455

#define IDO_SHGIOI_SLOWFILE 4294967293

#define ISFB_MASK_BKCOLOR 2

#define ISFB_MASK_COLORS 32

#define ISFB_MASK_IDLIST 16

#define ISFB_MASK_SHELLFOLDER 8

#define ISFB_MASK_STATE 1

#define ISFB_MASK_VIEWMODE 4

#define ISFB_STATE_ALLOWRENAME 2

#define ISFB_STATE_BTNMINSIZE 256

#define ISFB_STATE_CHANNELBAR 16

#define ISFB_STATE_DEBOSSED 1

#define ISFB_STATE_DEFAULT 0

#define ISFB_STATE_FULLOPEN 64

#define ISFB_STATE_NONAMESORT 128

#define ISFB_STATE_NOSHOWTEXT 4

#define ISFB_STATE_QLINKSMODE 32

#define ISFBVIEWMODE_LARGEICONS 2

#define ISFBVIEWMODE_SMALLICONS 1

#define ISIOI_ICONFILE 1

#define ISIOI_ICONINDEX 2

#define MAX_COLUMN_DESC_LEN 128

#define MAX_COLUMN_NAME_LEN 80

#define MM_ADDSEPARATOR 1

#define MM_DONTREMOVESEPS 4

#define MM_SUBMENUSHAVEIDS 2

#define NT_CONSOLE_PROPS_SIG 2684354562

#define NT_FE_CONSOLE_PROPS_SIG 2684354564

#define NUM_POINTS 3

#define OI_ASYNC 4294962926

#define OI_DEFAULT 0

#define OPENPROPS_INHIBITPIF 32768

#define OPENPROPS_NONE 0

#define PANE_NAVIGATION 5

#define PANE_NONE -1

#define PANE_OFFLINE 2

#define PANE_PRINTER 3

#define PANE_PRIVACY 7

#define PANE_PROGRESS 6

#define PANE_SSL 4

#define PANE_ZONE 1

#define PCS_FATAL 2147483648

#define PCS_PATHTOOLONG 8

#define PCS_REMOVEDCHAR 2

#define PCS_REPLACEDCHAR 1

#define PCS_TRUNCATED 4

#define PDTIMER_PAUSE 2

#define PDTIMER_RESET 1

#define PDTIMER_RESUME 3

#define PID_INTSITE_AUTHOR 3

#define PID_INTSITE_CODEPAGE 18

#define PID_INTSITE_COMMENT 8

#define PID_INTSITE_CONTENTCODE 11

#define PID_INTSITE_CONTENTLEN 10

#define PID_INTSITE_DESCRIPTION 7

#define PID_INTSITE_FLAGS 9

#define PID_INTSITE_ICONFILE 21

#define PID_INTSITE_ICONINDEX 20

#define PID_INTSITE_LASTMOD 5

#define PID_INTSITE_LASTVISIT 4

#define PID_INTSITE_RECURSE 12

#define PID_INTSITE_SUBSCRIPTION 14

#define PID_INTSITE_TITLE 16

#define PID_INTSITE_TRACKING 19

#define PID_INTSITE_URL 15

#define PID_INTSITE_VISITCOUNT 6

#define PID_INTSITE_WATCH 13

#define PID_INTSITE_WHATSNEW 2

#define PID_IS_AUTHOR 11

#define PID_IS_COMMENT 13

#define PID_IS_DESCRIPTION 12

#define PID_IS_HOTKEY 6

#define PID_IS_ICONFILE 9

#define PID_IS_ICONINDEX 8

#define PID_IS_NAME 4

#define PID_IS_SHOWCMD 7

#define PID_IS_URL 2

#define PID_IS_WHATSNEW 10

#define PID_IS_WORKINGDIR 5

#define PIDISF_CACHEDSTICKY 2

#define PIDISF_CACHEIMAGES 16

#define PIDISF_FOLLOWALLLINKS 32

#define PIDISF_RECENTLYCHANGED 1

#define PIDISM_DONTWATCH 2

#define PIDISM_GLOBAL 0

#define PIDISM_WATCH 1

#define PIFDEFFILESIZE 80

#define PIFDEFPATHSIZE 64

#define PIFMAXFILEPATH 260

#define PIFNAMESIZE 30

#define PIFPARAMSSIZE 64

#define PIFSHDATASIZE 64

#define PIFSHPROGSIZE 64

#define PIFSTARTLOCSIZE 63

#define PPCF_ADDARGUMENTS 3

#define PPCF_ADDQUOTES 1

#define PPCF_FORCEQUALIFY 64

#define PPCF_LONGESTPOSSIBLE 128

#define PPCF_NODIRECTORIES 16

#define PRF_DONTFINDLNK 8

#define PRF_FIRSTDIRDEF 4

#define PRF_TRYPROGRAMEXTENSIONS 3

#define PRF_VERIFYEXISTS 1

#define PROGDLG_AUTOTIME 2

#define PROGDLG_MARQUEEPROGRESS 32

#define PROGDLG_MODAL 1

#define PROGDLG_NOCANCEL 64

#define PROGDLG_NOMINIMIZE 8

#define PROGDLG_NOPROGRESSBAR 16

#define PROGDLG_NORMAL 0

#define PROGDLG_NOTIME 4

#define QCMINFO_PLACE_AFTER 1

#define QCMINFO_PLACE_BEFORE 0

#define QIF_CACHED 1

#define QIF_DONTEXPANDFOLDER 2

#define QITIPF_DEFAULT 0

#define QITIPF_LINKNOTARGET 2

#define QITIPF_LINKUSETARGET 4

#define QITIPF_USENAME 1

#define SETPROPS_NONE 0

#define SFVM_ADDOBJECT 3

#define SFVM_ADDPROPERTYPAGES 47

#define SFVM_BACKGROUNDENUM 32

#define SFVM_BACKGROUNDENUMDONE 48

#define SFVM_COLUMNCLICK 24

#define SFVM_DEFITEMCOUNT 26

#define SFVM_DEFVIEWMODE 27

#define SFVM_DIDDRAGDROP 36

#define SFVM_FSNOTIFY 14

#define SFVM_GETANIMATION 68

#define SFVM_GETBUTTONINFO 5

#define SFVM_GETBUTTONS 6

#define SFVM_GETDETAILSOF 23

#define SFVM_GETHELPTEXT 3

#define SFVM_GETHELPTOPIC 63

#define SFVM_GETNOTIFY 49

#define SFVM_GETPANE 59

#define SFVM_GETSELECTEDOBJECTS 9

#define SFVM_GETSORTDEFAULTS 53

#define SFVM_GETTOOLTIPTEXT 4

#define SFVM_GETZONE 58

#define SFVM_INITMENUPOPUP 7

#define SFVM_INVOKECOMMAND 2

#define SFVM_MERGEMENU 1

#define SFVM_QUERYFSNOTIFY 25

#define SFVM_REARRANGE 1

#define SFVM_REMOVEOBJECT 6

#define SFVM_SETCLIPBOARD 16

#define SFVM_SETISFV 39

#define SFVM_SETITEMPOS 14

#define SFVM_SETPOINTS 23

#define SFVM_SIZE 57

#define SFVM_THISIDLIST 41

#define SFVM_UNMERGEMENU 28

#define SFVM_UPDATEOBJECT 7

#define SFVM_UPDATESTATUSBAR 31

#define SFVM_WINDOWCREATED 15

#define SFVS_SELECT_ALLITEMS 1

#define SFVS_SELECT_INVERT 2

#define SFVS_SELECT_NONE 0

#define SFVSOC_INVALIDATE_ALL 1

#define SFVSOC_NOSCROLL 2

#define SHCDF_UPDATEITEM 1

#define SHCNE_ALLEVENTS 2147483647

#define SHCNE_ASSOCCHANGED 134217728

#define SHCNE_ATTRIBUTES 2048

#define SHCNE_CREATE 2

#define SHCNE_DELETE 4

#define SHCNE_DISKEVENTS 145439

#define SHCNE_DRIVEADD 256

#define SHCNE_DRIVEADDGUI 65536

#define SHCNE_DRIVEREMOVED 128

#define SHCNE_EXTENDED_EVENT 67108864

#define SHCNE_FREESPACE 262144

#define SHCNE_GLOBALEVENTS 201687520

#define SHCNE_INTERRUPT 2147483648

#define SHCNE_MEDIAINSERTED 32

#define SHCNE_MEDIAREMOVED 64

#define SHCNE_MKDIR 8

#define SHCNE_NETSHARE 512

#define SHCNE_NETUNSHARE 1024

#define SHCNE_RENAMEFOLDER 131072

#define SHCNE_RENAMEITEM 1

#define SHCNE_RMDIR 16

#define SHCNE_SERVERDISCONNECT 16384

#define SHCNE_UPDATEDIR 4096

#define SHCNE_UPDATEIMAGE 32768

#define SHCNE_UPDATEITEM 8192

#define SHCNEE_MSI_CHANGE 4

#define SHCNEE_MSI_UNINSTALL 5

#define SHCNEE_ORDERCHANGED 2

#define SHCNF_DWORD 3

#define SHCNF_FLUSH 4096

#define SHCNF_FLUSHNOWAIT 12288

#define SHCNF_IDLIST 0

#define SHCNF_NOTIFYRECURSIVE 65536

#define SHCNF_PATH 1

#define SHCNF_PATHA 1

#define SHCNF_PATHW 5

#define SHCNF_PRINTER 2

#define SHCNF_PRINTERA 2

#define SHCNF_PRINTERW 6

#define SHCNF_TYPE 255

#define SHCNRF_InterruptLevel 1

#define SHCNRF_NewDelivery 32768

#define SHCNRF_RecursiveInterrupt 4096

#define SHCNRF_ShellLevel 2

#define SHDID_COMPUTER_CDROM 10

#define SHDID_COMPUTER_DRIVE35 5

#define SHDID_COMPUTER_DRIVE525 6

#define SHDID_COMPUTER_FIXED 8

#define SHDID_COMPUTER_NETDRIVE 9

#define SHDID_COMPUTER_OTHER 12

#define SHDID_COMPUTER_RAMDISK 11

#define SHDID_COMPUTER_REMOVABLE 7

#define SHDID_FS_DIRECTORY 3

#define SHDID_FS_FILE 2

#define SHDID_FS_OTHER 4

#define SHDID_NET_DOMAIN 13

#define SHDID_NET_OTHER 17

#define SHDID_NET_RESTOFNET 16

#define SHDID_NET_SERVER 14

#define SHDID_NET_SHARE 15

#define SHDID_ROOT_REGITEM 1

#define SHELLSTATEVERSION_IE4 9

#define SHELLSTATEVERSION_WIN2K 10

#define SHFMT_CANCEL 4294967294

#define SHFMT_ERROR 4294967295

#define SHFMT_ID_DEFAULT 65535

#define SHFMT_NOFORMAT 4294967293

#define SHFMT_OPT_FULL 1

#define SHFMT_OPT_SYSONLY 2

#define SHGDFIL_DESCRIPTIONID 3

#define SHGDFIL_FINDDATA 1

#define SHGDFIL_NETRESOURCE 2

#define SHOP_FILEPATH 2

#define SHOP_PRINTERNAME 1

#define SHOP_VOLUMEGUID 4

#define SHPPFW_ASKDIRCREATE 2

#define SHPPFW_DEFAULT 1

#define SHPPFW_DIRCREATE 1

#define SHPPFW_IGNOREFILENAME 4

#define SHPPFW_NONE 0

#define SHPPFW_NOWRITECHECK 8

#define SIOM_ICONINDEX 2

#define SIOM_OVERLAYINDEX 1

#define SIOM_RESERVED_DEFAULT 3

#define SIOM_RESERVED_LINK 1

#define SIOM_RESERVED_SHARED 0

#define SIOM_RESERVED_SLOWFILE 2

#define SSF_DESKTOPHTML 512

#define SSF_DONTPRETTYPATH 2048

#define SSF_DOUBLECLICKINWEBVIEW 128

#define SSF_FILTER 65536

#define SSF_HIDDENFILEEXTS 4

#define SSF_HIDEICONS 16384

#define SSF_MAPNETDRVBUTTON 4096

#define SSF_NOCONFIRMRECYCLE 32768

#define SSF_SEPPROCESS 524288

#define SSF_SERVERADMINUI 4

#define SSF_SHOWALLOBJECTS 1

#define SSF_SHOWATTRIBCOL 256

#define SSF_SHOWCOMPCOLOR 8

#define SSF_SHOWEXTENSIONS 2

#define SSF_SHOWINFOTIP 8192

#define SSF_SHOWSUPERHIDDEN 262144

#define SSF_SHOWSYSFILES 32

#define SSF_SORTCOLUMNS 16

#define SSF_WEBVIEW 131072

#define SSF_WIN95CLASSIC 1024

#define TBIF_APPEND 0

#define TBIF_DEFAULT 0

#define TBIF_INTERNETBAR 65536

#define TBIF_NOTOOLBAR 196608

#define TBIF_PREPEND 1

#define TBIF_REPLACE 2

#define TBIF_STANDARDTOOLBAR 131072

#define VALIDATEUNC_CONNECT 1

#define VALIDATEUNC_NOUI 2

#define VALIDATEUNC_PRINT 4

#define VALIDATEUNC_VALID 7

typedef struct _browseinfoA _browseinfoA, *P_browseinfoA;

typedef struct _ITEMIDLIST _ITEMIDLIST, *P_ITEMIDLIST;

typedef struct _ITEMIDLIST ITEMIDLIST;

typedef ITEMIDLIST * LPCITEMIDLIST;

typedef int (* BFFCALLBACK)(HWND, UINT, LPARAM, LPARAM);

typedef struct _SHITEMID _SHITEMID, *P_SHITEMID;

typedef struct _SHITEMID SHITEMID;

struct _SHITEMID {
    USHORT cb;
    BYTE abID[1];
};

struct _ITEMIDLIST {
    SHITEMID mkid;
};

struct _browseinfoA {
    HWND hwndOwner;
    LPCITEMIDLIST pidlRoot;
    LPSTR pszDisplayName;
    LPCSTR lpszTitle;
    UINT ulFlags;
    BFFCALLBACK lpfn;
    LPARAM lParam;
    int iImage;
};

typedef struct _browseinfoW _browseinfoW, *P_browseinfoW;

struct _browseinfoW {
    HWND hwndOwner;
    LPCITEMIDLIST pidlRoot;
    LPWSTR pszDisplayName;
    LPCWSTR lpszTitle;
    UINT ulFlags;
    BFFCALLBACK lpfn;
    LPARAM lParam;
    int iImage;
};

typedef struct _CSFV _CSFV, *P_CSFV;

typedef struct IShellFolder IShellFolder, *PIShellFolder;

typedef struct IShellView IShellView, *PIShellView;

typedef HRESULT (* LPFNVIEWCALLBACK)(struct IShellView *, struct IShellFolder *, HWND, UINT, WPARAM, LPARAM);

typedef enum FOLDERVIEWMODE {
    FVM_AUTO=0,
    FVM_CONTENT=8,
    FVM_DETAILS=4,
    FVM_FIRST=1,
    FVM_ICON=1,
    FVM_LAST=8,
    FVM_LIST=3,
    FVM_SMALLICON=2,
    FVM_THUMBNAIL=5,
    FVM_THUMBSTRIP=7,
    FVM_TILE=6
} FOLDERVIEWMODE;

typedef struct IShellFolderVtbl IShellFolderVtbl, *PIShellFolderVtbl;

typedef ITEMIDLIST * LPITEMIDLIST;

typedef DWORD SHCONTF;

typedef struct IEnumIDList IEnumIDList, *PIEnumIDList;

typedef ULONG SFGAOF;

typedef DWORD SHGDNF;

typedef struct _STRRET _STRRET, *P_STRRET;

typedef struct _STRRET STRRET;

typedef struct IShellViewVtbl IShellViewVtbl, *PIShellViewVtbl;

typedef struct FOLDERSETTINGS FOLDERSETTINGS, *PFOLDERSETTINGS;

typedef struct FOLDERSETTINGS * LPCFOLDERSETTINGS;

typedef struct IShellBrowser IShellBrowser, *PIShellBrowser;

typedef struct FOLDERSETTINGS * LPFOLDERSETTINGS;

typedef LPFNADDPROPSHEETPAGE LPFNSVADDPROPSHEETPAGE;

typedef UINT SVSIF;

typedef struct IEnumIDListVtbl IEnumIDListVtbl, *PIEnumIDListVtbl;

typedef union _union_3888 _union_3888, *P_union_3888;

typedef struct IShellBrowserVtbl IShellBrowserVtbl, *PIShellBrowserVtbl;

typedef LPTBBUTTON LPTBBUTTONSB;

struct _CSFV {
    UINT cbSize;
    struct IShellFolder * pshf;
    struct IShellView * psvOuter;
    LPCITEMIDLIST pidl;
    LONG lEvents;
    LPFNVIEWCALLBACK pfnCallback;
    enum FOLDERVIEWMODE fvm;
};

struct IShellViewVtbl {
    HRESULT (* QueryInterface)(struct IShellView *, IID *, void * *);
    ULONG (* AddRef)(struct IShellView *);
    ULONG (* Release)(struct IShellView *);
    HRESULT (* GetWindow)(struct IShellView *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IShellView *, BOOL);
    HRESULT (* TranslateAcceleratorA)(struct IShellView *, MSG *);
    HRESULT (* EnableModeless)(struct IShellView *, BOOL);
    HRESULT (* UIActivate)(struct IShellView *, UINT);
    HRESULT (* Refresh)(struct IShellView *);
    HRESULT (* CreateViewWindow)(struct IShellView *, struct IShellView *, LPCFOLDERSETTINGS, struct IShellBrowser *, RECT *, HWND *);
    HRESULT (* DestroyViewWindow)(struct IShellView *);
    HRESULT (* GetCurrentInfo)(struct IShellView *, LPFOLDERSETTINGS);
    HRESULT (* AddPropertySheetPages)(struct IShellView *, DWORD, LPFNSVADDPROPSHEETPAGE, LPARAM);
    HRESULT (* SaveViewState)(struct IShellView *);
    HRESULT (* SelectItem)(struct IShellView *, LPCITEMIDLIST, SVSIF);
    HRESULT (* GetItemObject)(struct IShellView *, UINT, IID *, void * *);
};

struct IEnumIDList {
    struct IEnumIDListVtbl * lpVtbl;
};

struct IEnumIDListVtbl {
    HRESULT (* QueryInterface)(struct IEnumIDList *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumIDList *);
    ULONG (* Release)(struct IEnumIDList *);
    HRESULT (* Next)(struct IEnumIDList *, ULONG, LPITEMIDLIST *, ULONG *);
    HRESULT (* Skip)(struct IEnumIDList *, ULONG);
    HRESULT (* Reset)(struct IEnumIDList *);
    HRESULT (* Clone)(struct IEnumIDList *, struct IEnumIDList * *);
};

struct FOLDERSETTINGS {
    UINT ViewMode;
    UINT fFlags;
};

struct IShellBrowserVtbl {
    HRESULT (* QueryInterface)(struct IShellBrowser *, IID *, void * *);
    ULONG (* AddRef)(struct IShellBrowser *);
    ULONG (* Release)(struct IShellBrowser *);
    HRESULT (* GetWindow)(struct IShellBrowser *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IShellBrowser *, BOOL);
    HRESULT (* InsertMenusSB)(struct IShellBrowser *, HMENU, LPOLEMENUGROUPWIDTHS);
    HRESULT (* SetMenuSB)(struct IShellBrowser *, HMENU, HOLEMENU, HWND);
    HRESULT (* RemoveMenusSB)(struct IShellBrowser *, HMENU);
    HRESULT (* SetStatusTextSB)(struct IShellBrowser *, LPCWSTR);
    HRESULT (* EnableModelessSB)(struct IShellBrowser *, BOOL);
    HRESULT (* TranslateAcceleratorSB)(struct IShellBrowser *, MSG *, WORD);
    HRESULT (* BrowseObject)(struct IShellBrowser *, LPCITEMIDLIST, UINT);
    HRESULT (* GetViewStateStream)(struct IShellBrowser *, DWORD, struct IStream * *);
    HRESULT (* GetControlWindow)(struct IShellBrowser *, UINT, HWND *);
    HRESULT (* SendControlMsg)(struct IShellBrowser *, UINT, UINT, WPARAM, LPARAM, LRESULT *);
    HRESULT (* QueryActiveShellView)(struct IShellBrowser *, struct IShellView * *);
    HRESULT (* OnViewWindowActive)(struct IShellBrowser *, struct IShellView *);
    HRESULT (* SetToolbarItems)(struct IShellBrowser *, LPTBBUTTONSB, UINT, UINT);
};

struct IShellBrowser {
    struct IShellBrowserVtbl * lpVtbl;
};

struct IShellFolder {
    struct IShellFolderVtbl * lpVtbl;
};

struct IShellFolderVtbl {
    HRESULT (* QueryInterface)(struct IShellFolder *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolder *);
    ULONG (* Release)(struct IShellFolder *);
    HRESULT (* ParseDisplayName)(struct IShellFolder *, HWND, struct IBindCtx *, LPWSTR, ULONG *, LPITEMIDLIST *, ULONG *);
    HRESULT (* EnumObjects)(struct IShellFolder *, HWND, SHCONTF, struct IEnumIDList * *);
    HRESULT (* BindToObject)(struct IShellFolder *, LPCITEMIDLIST, struct IBindCtx *, IID *, void * *);
    HRESULT (* BindToStorage)(struct IShellFolder *, LPCITEMIDLIST, struct IBindCtx *, IID *, void * *);
    HRESULT (* CompareIDs)(struct IShellFolder *, LPARAM, LPCITEMIDLIST, LPCITEMIDLIST);
    HRESULT (* CreateViewObject)(struct IShellFolder *, HWND, IID *, void * *);
    HRESULT (* GetAttributesOf)(struct IShellFolder *, UINT, LPCITEMIDLIST *, SFGAOF *);
    HRESULT (* GetUIObjectOf)(struct IShellFolder *, HWND, UINT, LPCITEMIDLIST *, IID *, UINT *, void * *);
    HRESULT (* GetDisplayNameOf)(struct IShellFolder *, LPCITEMIDLIST, SHGDNF, STRRET *);
    HRESULT (* SetNameOf)(struct IShellFolder *, HWND, LPCITEMIDLIST, LPCWSTR, SHGDNF, LPITEMIDLIST *);
};

union _union_3888 {
    LPWSTR pOleStr;
    UINT uOffset;
    char cStr[260];
};

struct _STRRET {
    UINT uType;
    union _union_3888 u;
};

struct IShellView {
    struct IShellViewVtbl * lpVtbl;
};

typedef struct _DETAILSINFO _DETAILSINFO, *P_DETAILSINFO;

struct _DETAILSINFO {
    LPCITEMIDLIST pidl;
    int fmt;
    int cxChar;
    STRRET str;
    int iImage;
};

typedef struct _DROPFILES _DROPFILES, *P_DROPFILES;

struct _DROPFILES {
    DWORD pFiles;
    POINT pt;
    BOOL fNC;
    BOOL fWide;
};

typedef struct _FILEDESCRIPTORA _FILEDESCRIPTORA, *P_FILEDESCRIPTORA;

struct _FILEDESCRIPTORA {
    DWORD dwFlags;
    CLSID clsid;
    SIZEL sizel;
    POINTL pointl;
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    CHAR cFileName[260];
};

typedef struct _FILEDESCRIPTORW _FILEDESCRIPTORW, *P_FILEDESCRIPTORW;

struct _FILEDESCRIPTORW {
    DWORD dwFlags;
    CLSID clsid;
    SIZEL sizel;
    POINTL pointl;
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    WCHAR cFileName[260];
};

typedef struct _FILEGROUPDESCRIPTORA _FILEGROUPDESCRIPTORA, *P_FILEGROUPDESCRIPTORA;

typedef struct _FILEDESCRIPTORA FILEDESCRIPTORA;

struct _FILEGROUPDESCRIPTORA {
    UINT cItems;
    FILEDESCRIPTORA fgd[1];
};

typedef struct _FILEGROUPDESCRIPTORW _FILEGROUPDESCRIPTORW, *P_FILEGROUPDESCRIPTORW;

typedef struct _FILEDESCRIPTORW FILEDESCRIPTORW;

struct _FILEGROUPDESCRIPTORW {
    UINT cItems;
    FILEDESCRIPTORW fgd[1];
};

typedef struct _IDA _IDA, *P_IDA;

struct _IDA {
    UINT cidl;
    UINT aoffset[1];
};

typedef struct _ITEMSPACING _ITEMSPACING, *P_ITEMSPACING;

struct _ITEMSPACING {
    int cxSmall;
    int cySmall;
    int cxLarge;
    int cyLarge;
};

typedef struct _NRESARRAY _NRESARRAY, *P_NRESARRAY;

struct _NRESARRAY {
    UINT cItems;
    NETRESOURCE nr[1];
};

typedef struct _openasinfo _openasinfo, *P_openasinfo;

typedef int OPEN_AS_INFO_FLAGS;

struct _openasinfo {
    LPCWSTR pcszFile;
    LPCWSTR pcszClass;
    OPEN_AS_INFO_FLAGS oaifInFlags;
};

typedef struct _QCMINFO _QCMINFO, *P_QCMINFO;

typedef struct _QCMINFO_IDMAP _QCMINFO_IDMAP, *P_QCMINFO_IDMAP;

typedef struct _QCMINFO_IDMAP QCMINFO_IDMAP;

typedef struct _QCMINFO_IDMAP_PLACEMENT _QCMINFO_IDMAP_PLACEMENT, *P_QCMINFO_IDMAP_PLACEMENT;

typedef struct _QCMINFO_IDMAP_PLACEMENT QCMINFO_IDMAP_PLACEMENT;

struct _QCMINFO_IDMAP_PLACEMENT {
    UINT id;
    UINT fFlags;
};

struct _QCMINFO_IDMAP {
    UINT nMaxIds;
    QCMINFO_IDMAP_PLACEMENT pIdList[1];
};

struct _QCMINFO {
    HMENU hmenu;
    UINT indexMenu;
    UINT idCmdFirst;
    UINT idCmdLast;
    QCMINFO_IDMAP * pIdMap;
};

typedef struct _SFV_CREATE _SFV_CREATE, *P_SFV_CREATE;

typedef struct IShellFolderViewCB IShellFolderViewCB, *PIShellFolderViewCB;

typedef struct IShellFolderViewCBVtbl IShellFolderViewCBVtbl, *PIShellFolderViewCBVtbl;

struct _SFV_CREATE {
    UINT cbSize;
    struct IShellFolder * pshf;
    struct IShellView * psvOuter;
    struct IShellFolderViewCB * psfvcb;
};

struct IShellFolderViewCBVtbl {
    HRESULT (* QueryInterface)(struct IShellFolderViewCB *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolderViewCB *);
    ULONG (* Release)(struct IShellFolderViewCB *);
    HRESULT (* MessageSFVCB)(struct IShellFolderViewCB *, UINT, WPARAM, LPARAM);
};

struct IShellFolderViewCB {
    struct IShellFolderViewCBVtbl * lpVtbl;
};

typedef struct _SFV_SETITEMPOS _SFV_SETITEMPOS, *P_SFV_SETITEMPOS;

struct _SFV_SETITEMPOS {
    LPCITEMIDLIST pidl;
    POINT pt;
};

typedef struct _SFVM_HELPTOPIC_DATA _SFVM_HELPTOPIC_DATA, *P_SFVM_HELPTOPIC_DATA;

struct _SFVM_HELPTOPIC_DATA {
    WCHAR wszHelpFile[260];
    WCHAR wszHelpTopic[260];
};

typedef struct _SFVM_PROPPAGE_DATA _SFVM_PROPPAGE_DATA, *P_SFVM_PROPPAGE_DATA;

struct _SFVM_PROPPAGE_DATA {
    DWORD dwReserved;
    LPFNADDPROPSHEETPAGE pfn;
    LPARAM lParam;
};

typedef struct _SHChangeDWORDAsIDList _SHChangeDWORDAsIDList, *P_SHChangeDWORDAsIDList;

struct _SHChangeDWORDAsIDList {
    USHORT cb;
    DWORD dwItem1;
    DWORD dwItem2;
    USHORT cbZero;
};

typedef struct _SHChangeNotifyEntry _SHChangeNotifyEntry, *P_SHChangeNotifyEntry;

struct _SHChangeNotifyEntry {
    LPCITEMIDLIST pidl;
    BOOL fRecursive;
};

typedef struct _SHDESCRIPTIONID _SHDESCRIPTIONID, *P_SHDESCRIPTIONID;

struct _SHDESCRIPTIONID {
    DWORD dwDescriptionId;
    CLSID clsid;
};

typedef enum _tagAUTOCOMPLETELISTOPTIONS {
    ACLO_CURRENTDIR=1,
    ACLO_DESKTOP=4,
    ACLO_FAVORITES=8,
    ACLO_FILESYSDIRS=32,
    ACLO_FILESYSONLY=16,
    ACLO_MYCOMPUTER=2,
    ACLO_NONE=0,
    ACLO_VIRTUALNAMESPACE=64
} _tagAUTOCOMPLETELISTOPTIONS;

typedef struct _TBINFO _TBINFO, *P_TBINFO;

struct _TBINFO {
    UINT cbuttons;
    UINT uFlags;
};

typedef struct tagAAMENUFILENAME tagAAMENUFILENAME, *PtagAAMENUFILENAME;

typedef struct tagAAMENUFILENAME AASHELLMENUFILENAME;

struct tagAAMENUFILENAME {
    SHORT cbTotal;
    BYTE rgbReserved[12];
    WCHAR szFileName[1];
};

typedef struct tagAASHELLMENUITEM tagAASHELLMENUITEM, *PtagAASHELLMENUITEM;

typedef struct tagAASHELLMENUITEM AASHELLMENUITEM;

typedef struct tagAAMENUFILENAME * LPAASHELLMENUFILENAME;

struct tagAASHELLMENUITEM {
    void * lpReserved1;
    int iReserved;
    UINT uiReserved;
    LPAASHELLMENUFILENAME lpName;
    LPWSTR psz;
};

typedef union anon__struct_4902_bitfield_1 anon__struct_4902_bitfield_1, *Panon__struct_4902_bitfield_1;

union anon__struct_4902_bitfield_1 {
    BOOL fFullPathTitle:1; /* : bits 0 */
    BOOL fSaveLocalView:1; /* : bits 1 */
    BOOL fNotShell:1; /* : bits 2 */
    BOOL fSimpleDefault:1; /* : bits 3 */
    BOOL fDontShowDescBar:1; /* : bits 4 */
    BOOL fNewWindowMode:1; /* : bits 5 */
    BOOL fShowCompColor:1; /* : bits 6 */
    BOOL fDontPrettyNames:1; /* : bits 7 */
    BOOL fAdminsCreateCommonGroups:1; /* : bits 8 */
};

typedef union anon__struct_4902_bitfield_2 anon__struct_4902_bitfield_2, *Panon__struct_4902_bitfield_2;

union anon__struct_4902_bitfield_2 {
    UINT fUnusedFlags:7; /* : bits 0-6 */
};

typedef union anon__struct_4941_bitfield_1 anon__struct_4941_bitfield_1, *Panon__struct_4941_bitfield_1;

union anon__struct_4941_bitfield_1 {
    BOOL fShowAllObjects:1; /* : bits 0 */
    BOOL fShowExtensions:1; /* : bits 1 */
    BOOL fNoConfirmRecycle:1; /* : bits 2 */
    BOOL fShowSysFiles:1; /* : bits 3 */
    BOOL fShowCompColor:1; /* : bits 4 */
    BOOL fDoubleClickInWebView:1; /* : bits 5 */
    BOOL fDesktopHTML:1; /* : bits 6 */
    BOOL fWin95Classic:1; /* : bits 7 */
    BOOL fDontPrettyPath:1; /* : bits 8 */
    BOOL fShowAttribCol:1; /* : bits 9 */
    BOOL fMapNetDrvBtn:1; /* : bits 10 */
    BOOL fShowInfoTip:1; /* : bits 11 */
    BOOL fHideIcons:1; /* : bits 12 */
    BOOL fWebView:1; /* : bits 13 */
    BOOL fFilter:1; /* : bits 14 */
    BOOL fShowSuperHidden:1; /* : bits 15 */
    BOOL fNoNetCrawling:1; /* : bits 16 */
};

typedef union anon__struct_4941_bitfield_2 anon__struct_4941_bitfield_2, *Panon__struct_4941_bitfield_2;

union anon__struct_4941_bitfield_2 {
    BOOL fSepProcess:1; /* : bits 0 */
    BOOL fStartPanelOn:1; /* : bits 1 */
    BOOL fShowStartPage:1; /* : bits 2 */
    BOOL fAutoCheckSelect:1; /* : bits 3 */
    BOOL fIconsOnly:1; /* : bits 4 */
    BOOL fShowTypeOverlay:1; /* : bits 5 */
};

typedef union anon__struct_4941_bitfield_3 anon__struct_4941_bitfield_3, *Panon__struct_4941_bitfield_3;

union anon__struct_4941_bitfield_3 {
    UINT fSpareFlags:11; /* : bits 0-10 */
};

typedef union anon__struct_4942_bitfield_1 anon__struct_4942_bitfield_1, *Panon__struct_4942_bitfield_1;

union anon__struct_4942_bitfield_1 {
    BOOL fShowAllObjects:1; /* : bits 0 */
    BOOL fShowExtensions:1; /* : bits 1 */
    BOOL fNoConfirmRecycle:1; /* : bits 2 */
    BOOL fShowSysFiles:1; /* : bits 3 */
    BOOL fShowCompColor:1; /* : bits 4 */
    BOOL fDoubleClickInWebView:1; /* : bits 5 */
    BOOL fDesktopHTML:1; /* : bits 6 */
    BOOL fWin95Classic:1; /* : bits 7 */
    BOOL fDontPrettyPath:1; /* : bits 8 */
    BOOL fShowAttribCol:1; /* : bits 9 */
    BOOL fMapNetDrvBtn:1; /* : bits 10 */
    BOOL fShowInfoTip:1; /* : bits 11 */
    BOOL fHideIcons:1; /* : bits 12 */
    BOOL fWebView:1; /* : bits 13 */
    BOOL fFilter:1; /* : bits 14 */
    BOOL fShowSuperHidden:1; /* : bits 15 */
    BOOL fNoNetCrawling:1; /* : bits 16 */
};

typedef union anon__struct_4942_bitfield_2 anon__struct_4942_bitfield_2, *Panon__struct_4942_bitfield_2;

union anon__struct_4942_bitfield_2 {
    BOOL fSepProcess:1; /* : bits 0 */
    BOOL fStartPanelOn:1; /* : bits 1 */
    BOOL fShowStartPage:1; /* : bits 2 */
    BOOL fAutoCheckSelect:1; /* : bits 3 */
    BOOL fIconsOnly:1; /* : bits 4 */
    BOOL fShowTypeOverlay:1; /* : bits 5 */
};

typedef union anon__struct_4942_bitfield_3 anon__struct_4942_bitfield_3, *Panon__struct_4942_bitfield_3;

union anon__struct_4942_bitfield_3 {
    UINT fSpareFlags:11; /* : bits 0-10 */
};

typedef union anon__struct_4943_bitfield_1 anon__struct_4943_bitfield_1, *Panon__struct_4943_bitfield_1;

union anon__struct_4943_bitfield_1 {
    BOOL fShowAllObjects:1; /* : bits 0 */
    BOOL fShowExtensions:1; /* : bits 1 */
    BOOL fNoConfirmRecycle:1; /* : bits 2 */
    BOOL fShowSysFiles:1; /* : bits 3 */
    BOOL fShowCompColor:1; /* : bits 4 */
    BOOL fDoubleClickInWebView:1; /* : bits 5 */
    BOOL fDesktopHTML:1; /* : bits 6 */
    BOOL fWin95Classic:1; /* : bits 7 */
    BOOL fDontPrettyPath:1; /* : bits 8 */
    BOOL fShowAttribCol:1; /* : bits 9 */
    BOOL fMapNetDrvBtn:1; /* : bits 10 */
    BOOL fShowInfoTip:1; /* : bits 11 */
    BOOL fHideIcons:1; /* : bits 12 */
};

typedef union anon__struct_4943_bitfield_2 anon__struct_4943_bitfield_2, *Panon__struct_4943_bitfield_2;

union anon__struct_4943_bitfield_2 {
    UINT fRestFlags:3; /* : bits 0-2 */
};

typedef struct AUTO_SCROLL_DATA AUTO_SCROLL_DATA, *PAUTO_SCROLL_DATA;

struct AUTO_SCROLL_DATA {
    int iNextSample;
    DWORD dwLastScroll;
    BOOL bFull;
    POINT pts[3];
    DWORD dwTimes[3];
};

typedef enum _tagAUTOCOMPLETELISTOPTIONS AUTOCOMPLETELISTOPTIONS;

typedef struct BANDINFOSFB BANDINFOSFB, *PBANDINFOSFB;

struct BANDINFOSFB {
    DWORD dwMask;
    DWORD dwStateMask;
    DWORD dwState;
    COLORREF crBkgnd;
    COLORREF crBtnLt;
    COLORREF crBtnDk;
    WORD wViewMode;
    WORD wAlign;
    struct IShellFolder * psf;
    LPITEMIDLIST pidl;
};

typedef struct _browseinfoA BROWSEINFOA;

typedef struct _browseinfoW BROWSEINFOW;

typedef struct CABINETSTATE CABINETSTATE, *PCABINETSTATE;

struct CABINETSTATE {
    WORD cLength;
    WORD nVersion;
    union anon__struct_4902_bitfield_1 field_0x4;
    union anon__struct_4902_bitfield_2 field_0x8;
    UINT fMenuEnumFilter;
};

typedef struct _IDA CIDA;

typedef struct _CSFV CSFV;

typedef struct tagDATABLOCKHEADER tagDATABLOCKHEADER, *PtagDATABLOCKHEADER;

typedef struct tagDATABLOCKHEADER DATABLOCK_HEADER;

struct tagDATABLOCKHEADER {
    DWORD cbSize;
    DWORD dwSignature;
};

typedef struct DEFCONTEXTMENU DEFCONTEXTMENU, *PDEFCONTEXTMENU;

typedef struct IContextMenuCB IContextMenuCB, *PIContextMenuCB;

struct DEFCONTEXTMENU {
    HWND hwnd;
    struct IContextMenuCB * pcmcb;
    LPCITEMIDLIST pidlFolder;
    struct IShellFolder * psf;
    UINT cidl;
    LPCITEMIDLIST * apidl;
    struct IUnknown * punkAssociationInfo;
    UINT cKeys;
    HKEY * aKeys;
};

struct IContextMenuCB {
};

typedef struct _DETAILSINFO DETAILSINFO;

typedef struct DFMICS DFMICS, *PDFMICS;

typedef struct _CMINVOKECOMMANDINFO _CMINVOKECOMMANDINFO, *P_CMINVOKECOMMANDINFO;

typedef struct _CMINVOKECOMMANDINFO CMINVOKECOMMANDINFO;

typedef CMINVOKECOMMANDINFO * LPCMINVOKECOMMANDINFO;

struct DFMICS {
    DWORD cbSize;
    DWORD fMask;
    LPARAM lParam;
    UINT idCmdFirst;
    UINT idDefMax;
    LPCMINVOKECOMMANDINFO pici;
};

struct _CMINVOKECOMMANDINFO {
    DWORD cbSize;
    DWORD fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    DWORD dwHotKey;
    HANDLE hIcon;
};

typedef struct _DROPFILES DROPFILES;

typedef enum enum_4767 {
    SLDF_DEFAULT=0,
    SLDF_FORCE_NO_LINKINFO=256,
    SLDF_HAS_ARGS=32,
    SLDF_HAS_DARWINID=4096,
    SLDF_HAS_EXP_ICON_SZ=16384,
    SLDF_HAS_EXP_SZ=512,
    SLDF_HAS_ICONLOCATION=64,
    SLDF_HAS_ID_LIST=1,
    SLDF_HAS_LINK_INFO=2,
    SLDF_HAS_LOGO3ID=2048,
    SLDF_HAS_NAME=4,
    SLDF_HAS_RELPATH=8,
    SLDF_HAS_WORKINGDIR=16,
    SLDF_RUNAS_USER=8192,
    SLDF_RUN_IN_SEPARATE=1024,
    SLDF_UNICODE=128
} enum_4767;

typedef enum enum_4825 {
    ISHCUTCMDID_COMMITHISTORY=2,
    ISHCUTCMDID_DOWNLOADICON=0,
    ISHCUTCMDID_INTSHORTCUTCREATE=1,
    ISHCUTCMDID_SETUSERAWURL=3
} enum_4825;

typedef enum enum_4867 {
    SFBID_PIDLCHANGED=0
} enum_4867;

typedef enum enum_4872 {
    DBCID_CLSIDOFBAR=2,
    DBCID_EMPTY=0,
    DBCID_GETBAR=4,
    DBCID_ONDRAG=1,
    DBCID_RESIZE=3
} enum_4872;

typedef enum enum_4882 {
    FD_ACCESSTIME=16,
    FD_ATTRIBUTES=4,
    FD_CLSID=1,
    FD_CREATETIME=8,
    FD_FILESIZE=64,
    FD_LINKUI=32768,
    FD_PROGRESSUI=16384,
    FD_SIZEPOINT=2,
    FD_WRITESTIME=32
} enum_4882;

typedef enum enum_4897 {
    SHARD_PATHA=2,
    SHARD_PATHW=3,
    SHARD_PIDL=1
} enum_4897;

typedef enum enum_4899 {
    SCNRT_DISABLE=1,
    SCNRT_ENABLE=0
} enum_4899;

typedef enum enum_4915 {
    BMICON_LARGE=0,
    BMICON_SMALL=1
} enum_4915;

typedef struct EXP_DARWIN_LINK EXP_DARWIN_LINK, *PEXP_DARWIN_LINK;

struct EXP_DARWIN_LINK {
    DATABLOCK_HEADER s;
    CHAR szDarwinID[260];
    WCHAR szwDarwinID[260];
};

typedef struct EXP_SPECIAL_FOLDER EXP_SPECIAL_FOLDER, *PEXP_SPECIAL_FOLDER;

struct EXP_SPECIAL_FOLDER {
    DWORD cbSize;
    DWORD dwSignature;
    DWORD idSpecialFolder;
    DWORD cbOffset;
};

typedef struct EXP_SZ_LINK EXP_SZ_LINK, *PEXP_SZ_LINK;

struct EXP_SZ_LINK {
    DWORD cbSize;
    DWORD dwSignature;
    CHAR szTarget[260];
    WCHAR swzTarget[260];
};

typedef enum enum_4882 FD_FLAGS;

typedef struct _FILEGROUPDESCRIPTORA FILEGROUPDESCRIPTORA;

typedef struct _FILEGROUPDESCRIPTORW FILEGROUPDESCRIPTORW;

typedef struct FVSHOWINFO FVSHOWINFO, *PFVSHOWINFO;

struct FVSHOWINFO {
    DWORD cbSize;
    HWND hwndOwner;
    int iShow;
    DWORD dwFlags;
    RECT rect;
    struct IUnknown * punkRel;
    OLECHAR strNewFile[260];
};

typedef struct HPSXA__ HPSXA__, *PHPSXA__;

typedef struct HPSXA__ * HPSXA;

struct HPSXA__ {
    int unused;
};

typedef struct IACList IACList, *PIACList;

typedef struct IACListVtbl IACListVtbl, *PIACListVtbl;

struct IACListVtbl {
    HRESULT (* QueryInterface)(struct IACList *, IID *, void * *);
    ULONG (* AddRef)(struct IACList *);
    ULONG (* Release)(struct IACList *);
    HRESULT (* Expand)(struct IACList *, LPCWSTR);
};

struct IACList {
    struct IACListVtbl * lpVtbl;
};

typedef struct IACList2 IACList2, *PIACList2;

typedef struct IACList2Vtbl IACList2Vtbl, *PIACList2Vtbl;

struct IACList2 {
    struct IACList2Vtbl * lpVtbl;
};

struct IACList2Vtbl {
    HRESULT (* SetOptions)(struct IACList2 *, DWORD);
    HRESULT (* GetOptions)(struct IACList2 *, DWORD *);
};

typedef struct IBanneredBar IBanneredBar, *PIBanneredBar;

typedef struct IBanneredBarVtbl IBanneredBarVtbl, *PIBanneredBarVtbl;

struct IBanneredBar {
    struct IBanneredBarVtbl * lpVtbl;
};

struct IBanneredBarVtbl {
    HRESULT (* QueryInterface)(struct IBanneredBar *, IID *, void * *);
    ULONG (* AddRef)(struct IBanneredBar *);
    ULONG (* Release)(struct IBanneredBar *);
    HRESULT (* SetIconSize)(struct IBanneredBar *, DWORD);
    HRESULT (* GetIconSize)(struct IBanneredBar *, DWORD *);
    HRESULT (* SetBitmap)(struct IBanneredBar *, HBITMAP);
    HRESULT (* GetBitmap)(struct IBanneredBar *, HBITMAP *);
};

typedef struct IColumnProvider IColumnProvider, *PIColumnProvider;

typedef struct IColumnProviderVtbl IColumnProviderVtbl, *PIColumnProviderVtbl;

typedef struct SHCOLUMNINIT SHCOLUMNINIT, *PSHCOLUMNINIT;

typedef struct SHCOLUMNINIT * LPCSHCOLUMNINIT;

typedef struct SHCOLUMNINFO SHCOLUMNINFO, *PSHCOLUMNINFO;

typedef PROPERTYKEY SHCOLUMNID;

typedef SHCOLUMNID * LPCSHCOLUMNID;

typedef struct SHCOLUMNDATA SHCOLUMNDATA, *PSHCOLUMNDATA;

typedef struct SHCOLUMNDATA * LPCSHCOLUMNDATA;

struct SHCOLUMNINFO {
    SHCOLUMNID scid;
    VARTYPE vt;
    DWORD fmt;
    UINT cChars;
    DWORD csFlags;
    WCHAR wszTitle[80];
    WCHAR wszDescription[128];
};

struct SHCOLUMNDATA {
    ULONG dwFlags;
    DWORD dwFileAttributes;
    ULONG dwReserved;
    WCHAR * pwszExt;
    WCHAR wszFile[260];
};

struct IColumnProvider {
    struct IColumnProviderVtbl * lpVtbl;
};

struct SHCOLUMNINIT {
    ULONG dwFlags;
    ULONG dwReserved;
    WCHAR wszFolder[260];
};

struct IColumnProviderVtbl {
    HRESULT (* QueryInterface)(struct IColumnProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IColumnProvider *);
    ULONG (* Release)(struct IColumnProvider *);
    HRESULT (* Initialize)(struct IColumnProvider *, LPCSHCOLUMNINIT);
    HRESULT (* GetColumnInfo)(struct IColumnProvider *, DWORD, struct SHCOLUMNINFO *);
    HRESULT (* GetItemData)(struct IColumnProvider *, LPCSHCOLUMNID, LPCSHCOLUMNDATA, VARIANT *);
};

typedef struct ICopyHookA ICopyHookA, *PICopyHookA;

typedef struct ICopyHookAVtbl ICopyHookAVtbl, *PICopyHookAVtbl;

struct ICopyHookA {
    struct ICopyHookAVtbl * lpVtbl;
};

struct ICopyHookAVtbl {
    HRESULT (* QueryInterface)(struct ICopyHookA *, IID *, void * *);
    ULONG (* AddRef)(struct ICopyHookA *);
    ULONG (* Release)(struct ICopyHookA *);
    UINT (* CopyCallback)(struct ICopyHookA *, HWND, UINT, UINT, LPCSTR, DWORD, LPCSTR, DWORD);
};

typedef struct ICopyHookW ICopyHookW, *PICopyHookW;

typedef struct ICopyHookWVtbl ICopyHookWVtbl, *PICopyHookWVtbl;

struct ICopyHookW {
    struct ICopyHookWVtbl * lpVtbl;
};

struct ICopyHookWVtbl {
    HRESULT (* QueryInterface)(struct ICopyHookW *, IID *, void * *);
    ULONG (* AddRef)(struct ICopyHookW *);
    ULONG (* Release)(struct ICopyHookW *);
    UINT (* CopyCallback)(struct ICopyHookW *, HWND, UINT, UINT, LPCWSTR, DWORD, LPCWSTR, DWORD);
};

typedef struct ICurrentWorkingDirectory ICurrentWorkingDirectory, *PICurrentWorkingDirectory;

typedef struct ICurrentWorkingDirectoryVtbl ICurrentWorkingDirectoryVtbl, *PICurrentWorkingDirectoryVtbl;

struct ICurrentWorkingDirectory {
    struct ICurrentWorkingDirectoryVtbl * lpVtbl;
};

struct ICurrentWorkingDirectoryVtbl {
    HRESULT (* QueryInterface)(struct ICurrentWorkingDirectory *, IID *, void * *);
    ULONG (* AddRef)(struct ICurrentWorkingDirectory *);
    ULONG (* Release)(struct ICurrentWorkingDirectory *);
    HRESULT (* GetDirectory)(struct ICurrentWorkingDirectory *, LPWSTR, DWORD);
    HRESULT (* SetDirectory)(struct ICurrentWorkingDirectory *, LPCWSTR);
};

typedef struct IDeskBarClient IDeskBarClient, *PIDeskBarClient;

typedef struct IDeskBarClientVtbl IDeskBarClientVtbl, *PIDeskBarClientVtbl;

struct IDeskBarClientVtbl {
    HRESULT (* QueryInterface)(struct IDeskBarClient *, IID *, void * *);
    ULONG (* AddRef)(struct IDeskBarClient *);
    ULONG (* Release)(struct IDeskBarClient *);
    HRESULT (* GetWindow)(struct IDeskBarClient *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IDeskBarClient *, BOOL);
    HRESULT (* SetDeskBarSite)(struct IDeskBarClient *, struct IUnknown *);
    HRESULT (* SetModeDBC)(struct IDeskBarClient *, DWORD);
    HRESULT (* UIActivateDBC)(struct IDeskBarClient *, DWORD);
    HRESULT (* GetSize)(struct IDeskBarClient *, DWORD, LPRECT);
};

struct IDeskBarClient {
    struct IDeskBarClientVtbl * lpVtbl;
};

typedef struct IDockingWindowFrame IDockingWindowFrame, *PIDockingWindowFrame;

typedef struct IDockingWindowFrameVtbl IDockingWindowFrameVtbl, *PIDockingWindowFrameVtbl;

struct IDockingWindowFrameVtbl {
    HRESULT (* QueryInterface)(struct IDockingWindowFrame *, IID *, void * *);
    ULONG (* AddRef)(struct IDockingWindowFrame *);
    ULONG (* Release)(struct IDockingWindowFrame *);
    HRESULT (* GetWindow)(struct IDockingWindowFrame *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IDockingWindowFrame *, BOOL);
    HRESULT (* AddToolbar)(struct IDockingWindowFrame *, struct IUnknown *, LPCWSTR, DWORD);
    HRESULT (* RemoveToolbar)(struct IDockingWindowFrame *, struct IUnknown *, DWORD);
    HRESULT (* FindToolbar)(struct IDockingWindowFrame *, LPCWSTR, IID *, void * *);
};

struct IDockingWindowFrame {
    struct IDockingWindowFrameVtbl * lpVtbl;
};

typedef struct IDockingWindowSite IDockingWindowSite, *PIDockingWindowSite;

typedef struct IDockingWindowSiteVtbl IDockingWindowSiteVtbl, *PIDockingWindowSiteVtbl;

struct IDockingWindowSite {
    struct IDockingWindowSiteVtbl * lpVtbl;
};

struct IDockingWindowSiteVtbl {
    HRESULT (* QueryInterface)(struct IDockingWindowSite *, IID *, void * *);
    ULONG (* AddRef)(struct IDockingWindowSite *);
    ULONG (* Release)(struct IDockingWindowSite *);
    HRESULT (* GetWindow)(struct IDockingWindowSite *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IDockingWindowSite *, BOOL);
    HRESULT (* GetBorderDW)(struct IDockingWindowSite *, struct IUnknown *, LPRECT);
    HRESULT (* RequestBorderSpaceDW)(struct IDockingWindowSite *, struct IUnknown *, LPCBORDERWIDTHS);
    HRESULT (* SetBorderSpaceDW)(struct IDockingWindowSite *, struct IUnknown *, LPCBORDERWIDTHS);
};

typedef struct IDocViewSite IDocViewSite, *PIDocViewSite;

typedef struct IDocViewSiteVtbl IDocViewSiteVtbl, *PIDocViewSiteVtbl;

struct IDocViewSite {
    struct IDocViewSiteVtbl * lpVtbl;
};

struct IDocViewSiteVtbl {
    HRESULT (* QueryInterface)(struct IDocViewSite *, IID *, void * *);
    ULONG (* AddRef)(struct IDocViewSite *);
    ULONG (* Release)(struct IDocViewSite *);
    HRESULT (* OnSetTitle)(struct IDocViewSite *, VARIANTARG *);
};

typedef struct IEnumPrivacyRecords IEnumPrivacyRecords, *PIEnumPrivacyRecords;

struct IEnumPrivacyRecords {
};

typedef enum tagIESHORTCUTFLAGS {
    IESHORTCUT_BACKGROUNDTAB=8,
    IESHORTCUT_FORCENAVIGATE=4,
    IESHORTCUT_NEWBROWSER=1,
    IESHORTCUT_OPENNEWTAB=2
} tagIESHORTCUTFLAGS;

typedef enum tagIESHORTCUTFLAGS IESHORTCUTFLAGS;

typedef struct IExtractIconA IExtractIconA, *PIExtractIconA;

typedef struct IExtractIconAVtbl IExtractIconAVtbl, *PIExtractIconAVtbl;

struct IExtractIconAVtbl {
    HRESULT (* QueryInterface)(struct IExtractIconA *, IID *, void * *);
    ULONG (* AddRef)(struct IExtractIconA *);
    ULONG (* Release)(struct IExtractIconA *);
    HRESULT (* GetIconLocation)(struct IExtractIconA *, UINT, LPSTR, UINT, int *, UINT *);
    HRESULT (* Extract)(struct IExtractIconA *, LPCSTR, UINT, HICON *, HICON *, UINT);
};

struct IExtractIconA {
    struct IExtractIconAVtbl * lpVtbl;
};

typedef struct IExtractIconW IExtractIconW, *PIExtractIconW;

typedef struct IExtractIconWVtbl IExtractIconWVtbl, *PIExtractIconWVtbl;

struct IExtractIconWVtbl {
    HRESULT (* QueryInterface)(struct IExtractIconW *, IID *, void * *);
    ULONG (* AddRef)(struct IExtractIconW *);
    ULONG (* Release)(struct IExtractIconW *);
    HRESULT (* GetIconLocation)(struct IExtractIconW *, UINT, LPWSTR, UINT, int *, UINT *);
    HRESULT (* Extract)(struct IExtractIconW *, LPCWSTR, UINT, HICON *, HICON *, UINT);
};

struct IExtractIconW {
    struct IExtractIconWVtbl * lpVtbl;
};

typedef struct IFileViewerA IFileViewerA, *PIFileViewerA;

typedef struct IFileViewerAVtbl IFileViewerAVtbl, *PIFileViewerAVtbl;

typedef struct IFileViewerSite IFileViewerSite, *PIFileViewerSite;

typedef struct IFileViewerSite * LPFILEVIEWERSITE;

typedef struct FVSHOWINFO * LPFVSHOWINFO;

typedef struct IFileViewerSiteVtbl IFileViewerSiteVtbl, *PIFileViewerSiteVtbl;

struct IFileViewerSiteVtbl {
    HRESULT (* QueryInterface)(struct IFileViewerSite *, IID *, void * *);
    ULONG (* AddRef)(struct IFileViewerSite *);
    ULONG (* Release)(struct IFileViewerSite *);
    HRESULT (* SetPinnedWindow)(struct IFileViewerSite *, HWND);
    HRESULT (* GetPinnedWindow)(struct IFileViewerSite *, HWND *);
};

struct IFileViewerAVtbl {
    HRESULT (* QueryInterface)(struct IFileViewerA *, IID *, void * *);
    ULONG (* AddRef)(struct IFileViewerA *);
    ULONG (* Release)(struct IFileViewerA *);
    HRESULT (* ShowInitialize)(struct IFileViewerA *, LPFILEVIEWERSITE);
    HRESULT (* Show)(struct IFileViewerA *, LPFVSHOWINFO);
    HRESULT (* PrintTo)(struct IFileViewerA *, LPSTR, BOOL);
};

struct IFileViewerA {
    struct IFileViewerAVtbl * lpVtbl;
};

struct IFileViewerSite {
    struct IFileViewerSiteVtbl * lpVtbl;
};

typedef struct IFileViewerW IFileViewerW, *PIFileViewerW;

typedef struct IFileViewerWVtbl IFileViewerWVtbl, *PIFileViewerWVtbl;

struct IFileViewerWVtbl {
    HRESULT (* QueryInterface)(struct IFileViewerW *, IID *, void * *);
    ULONG (* AddRef)(struct IFileViewerW *);
    ULONG (* Release)(struct IFileViewerW *);
    HRESULT (* ShowInitialize)(struct IFileViewerW *, LPFILEVIEWERSITE);
    HRESULT (* Show)(struct IFileViewerW *, LPFVSHOWINFO);
    HRESULT (* PrintTo)(struct IFileViewerW *, LPWSTR, BOOL);
};

struct IFileViewerW {
    struct IFileViewerWVtbl * lpVtbl;
};

typedef struct IInitializeObject IInitializeObject, *PIInitializeObject;

typedef struct IInitializeObjectVtbl IInitializeObjectVtbl, *PIInitializeObjectVtbl;

struct IInitializeObject {
    struct IInitializeObjectVtbl * lpVtbl;
};

struct IInitializeObjectVtbl {
    HRESULT (* QueryInterface)(struct IInitializeObject *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeObject *);
    ULONG (* Release)(struct IInitializeObject *);
    HRESULT (* Initialize)(struct IInitializeObject *);
};

typedef struct INamedPropertyBag INamedPropertyBag, *PINamedPropertyBag;

typedef struct INamedPropertyBagVtbl INamedPropertyBagVtbl, *PINamedPropertyBagVtbl;

struct INamedPropertyBagVtbl {
    HRESULT (* QueryInterface)(struct INamedPropertyBag *, IID *, void * *);
    ULONG (* AddRef)(struct INamedPropertyBag *);
    ULONG (* Release)(struct INamedPropertyBag *);
    HRESULT (* ReadPropertyNPB)(struct INamedPropertyBag *, LPCWSTR, LPCWSTR, PROPVARIANT *);
    HRESULT (* WritePropertyNPB)(struct INamedPropertyBag *, LPCWSTR, LPCWSTR, PROPVARIANT *);
    HRESULT (* RemovePropertyNPB)(struct INamedPropertyBag *, LPCWSTR, LPCWSTR);
};

struct INamedPropertyBag {
    struct INamedPropertyBagVtbl * lpVtbl;
};

typedef struct INewShortcutHookA INewShortcutHookA, *PINewShortcutHookA;

typedef struct INewShortcutHookAVtbl INewShortcutHookAVtbl, *PINewShortcutHookAVtbl;

struct INewShortcutHookAVtbl {
    HRESULT (* QueryInterface)(struct INewShortcutHookA *, IID *, void * *);
    ULONG (* AddRef)(struct INewShortcutHookA *);
    ULONG (* Release)(struct INewShortcutHookA *);
    HRESULT (* SetReferent)(struct INewShortcutHookA *, LPCSTR, HWND);
    HRESULT (* GetReferent)(struct INewShortcutHookA *, LPSTR, int);
    HRESULT (* SetFolder)(struct INewShortcutHookA *, LPCSTR);
    HRESULT (* GetFolder)(struct INewShortcutHookA *, LPSTR, int);
    HRESULT (* GetName)(struct INewShortcutHookA *, LPSTR, int);
    HRESULT (* GetExtension)(struct INewShortcutHookA *, LPSTR, int);
};

struct INewShortcutHookA {
    struct INewShortcutHookAVtbl * lpVtbl;
};

typedef struct INewShortcutHookW INewShortcutHookW, *PINewShortcutHookW;

typedef struct INewShortcutHookWVtbl INewShortcutHookWVtbl, *PINewShortcutHookWVtbl;

struct INewShortcutHookW {
    struct INewShortcutHookWVtbl * lpVtbl;
};

struct INewShortcutHookWVtbl {
    HRESULT (* QueryInterface)(struct INewShortcutHookW *, IID *, void * *);
    ULONG (* AddRef)(struct INewShortcutHookW *);
    ULONG (* Release)(struct INewShortcutHookW *);
    HRESULT (* SetReferent)(struct INewShortcutHookW *, LPCWSTR, HWND);
    HRESULT (* GetReferent)(struct INewShortcutHookW *, LPWSTR, int);
    HRESULT (* SetFolder)(struct INewShortcutHookW *, LPCWSTR);
    HRESULT (* GetFolder)(struct INewShortcutHookW *, LPWSTR, int);
    HRESULT (* GetName)(struct INewShortcutHookW *, LPWSTR, int);
    HRESULT (* GetExtension)(struct INewShortcutHookW *, LPWSTR, int);
};

typedef struct IObjMgr IObjMgr, *PIObjMgr;

typedef struct IObjMgrVtbl IObjMgrVtbl, *PIObjMgrVtbl;

struct IObjMgr {
    struct IObjMgrVtbl * lpVtbl;
};

struct IObjMgrVtbl {
    HRESULT (* QueryInterface)(struct IObjMgr *, IID *, void * *);
    ULONG (* AddRef)(struct IObjMgr *);
    ULONG (* Release)(struct IObjMgr *);
    HRESULT (* Append)(struct IObjMgr *, struct IUnknown *);
    HRESULT (* Remove)(struct IObjMgr *, struct IUnknown *);
};

typedef struct IProgressDialog IProgressDialog, *PIProgressDialog;

typedef struct IProgressDialogVtbl IProgressDialogVtbl, *PIProgressDialogVtbl;

typedef void * LPCVOID;

struct IProgressDialog {
    struct IProgressDialogVtbl * lpVtbl;
};

struct IProgressDialogVtbl {
    HRESULT (* QueryInterface)(struct IProgressDialog *, IID *, void * *);
    ULONG (* AddRef)(struct IProgressDialog *);
    ULONG (* Release)(struct IProgressDialog *);
    HRESULT (* StartProgressDialog)(struct IProgressDialog *, HWND, struct IUnknown *, DWORD, LPCVOID);
    HRESULT (* StopProgressDialog)(struct IProgressDialog *);
    HRESULT (* SetTitle)(struct IProgressDialog *, LPCWSTR);
    HRESULT (* SetAnimation)(struct IProgressDialog *, HINSTANCE, UINT);
    BOOL (* HasUserCancelled)(struct IProgressDialog *);
    HRESULT (* SetProgress)(struct IProgressDialog *, DWORD, DWORD);
    HRESULT (* SetProgress64)(struct IProgressDialog *, ULONGLONG, ULONGLONG);
    HRESULT (* SetLine)(struct IProgressDialog *, DWORD, LPCWSTR, BOOL, LPCVOID);
    HRESULT (* SetCancelMsg)(struct IProgressDialog *, LPCWSTR, LPCVOID);
    HRESULT (* Timer)(struct IProgressDialog *, DWORD, LPCVOID);
};

typedef struct IQueryInfo IQueryInfo, *PIQueryInfo;

typedef struct IQueryInfoVtbl IQueryInfoVtbl, *PIQueryInfoVtbl;

struct IQueryInfoVtbl {
    HRESULT (* QueryInterface)(struct IQueryInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryInfo *);
    ULONG (* Release)(struct IQueryInfo *);
    HRESULT (* GetInfoTip)(struct IQueryInfo *, DWORD, WCHAR * *);
    HRESULT (* GetInfoFlags)(struct IQueryInfo *, DWORD *);
};

struct IQueryInfo {
    struct IQueryInfoVtbl * lpVtbl;
};

typedef struct ISearchContext ISearchContext, *PISearchContext;

typedef struct ISearchContextVtbl ISearchContextVtbl, *PISearchContextVtbl;

struct ISearchContextVtbl {
    HRESULT (* QueryInterface)(struct ISearchContext *, IID *, void * *);
    ULONG (* AddRef)(struct ISearchContext *);
    ULONG (* Release)(struct ISearchContext *);
    HRESULT (* GetSearchUrl)(struct ISearchContext *, BSTR *);
    HRESULT (* GetSearchText)(struct ISearchContext *, BSTR *);
    HRESULT (* GetSearchStyle)(struct ISearchContext *, DWORD *);
};

struct ISearchContext {
    struct ISearchContextVtbl * lpVtbl;
};

typedef struct IShellChangeNotify IShellChangeNotify, *PIShellChangeNotify;

typedef struct IShellChangeNotifyVtbl IShellChangeNotifyVtbl, *PIShellChangeNotifyVtbl;

struct IShellChangeNotifyVtbl {
    HRESULT (* QueryInterface)(struct IShellChangeNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IShellChangeNotify *);
    ULONG (* Release)(struct IShellChangeNotify *);
    HRESULT (* OnChange)(struct IShellChangeNotify *, LONG, LPCITEMIDLIST, LPCITEMIDLIST);
};

struct IShellChangeNotify {
    struct IShellChangeNotifyVtbl * lpVtbl;
};

typedef struct IShellDetails IShellDetails, *PIShellDetails;

typedef struct IShellDetailsVtbl IShellDetailsVtbl, *PIShellDetailsVtbl;

typedef struct _SHELLDETAILS _SHELLDETAILS, *P_SHELLDETAILS;

typedef struct _SHELLDETAILS SHELLDETAILS;

struct _SHELLDETAILS {
    int fmt;
    int cxChar;
    STRRET str;
};

struct IShellDetailsVtbl {
    HRESULT (* QueryInterface)(struct IShellDetails *, IID *, void * *);
    ULONG (* AddRef)(struct IShellDetails *);
    ULONG (* Release)(struct IShellDetails *);
    HRESULT (* GetDetailsOf)(struct IShellDetails *, LPCITEMIDLIST, UINT, SHELLDETAILS *);
    HRESULT (* ColumnClick)(struct IShellDetails *, UINT);
};

struct IShellDetails {
    struct IShellDetailsVtbl * lpVtbl;
};

typedef struct IShellExecuteHookA IShellExecuteHookA, *PIShellExecuteHookA;

typedef struct IShellExecuteHookAVtbl IShellExecuteHookAVtbl, *PIShellExecuteHookAVtbl;

struct IShellExecuteHookA {
    struct IShellExecuteHookAVtbl * lpVtbl;
};

struct IShellExecuteHookAVtbl {
    HRESULT (* QueryInterface)(struct IShellExecuteHookA *, IID *, void * *);
    ULONG (* AddRef)(struct IShellExecuteHookA *);
    ULONG (* Release)(struct IShellExecuteHookA *);
    HRESULT (* Execute)(struct IShellExecuteHookA *, LPSHELLEXECUTEINFOA);
};

typedef struct IShellExecuteHookW IShellExecuteHookW, *PIShellExecuteHookW;

typedef struct IShellExecuteHookWVtbl IShellExecuteHookWVtbl, *PIShellExecuteHookWVtbl;

struct IShellExecuteHookWVtbl {
    HRESULT (* QueryInterface)(struct IShellExecuteHookW *, IID *, void * *);
    ULONG (* AddRef)(struct IShellExecuteHookW *);
    ULONG (* Release)(struct IShellExecuteHookW *);
    HRESULT (* Execute)(struct IShellExecuteHookW *, LPSHELLEXECUTEINFOW);
};

struct IShellExecuteHookW {
    struct IShellExecuteHookWVtbl * lpVtbl;
};

typedef struct IShellFolderBand IShellFolderBand, *PIShellFolderBand;

typedef struct IShellFolderBandVtbl IShellFolderBandVtbl, *PIShellFolderBandVtbl;

struct IShellFolderBand {
    struct IShellFolderBandVtbl * lpVtbl;
};

struct IShellFolderBandVtbl {
    HRESULT (* QueryInterface)(struct IShellFolderBand *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolderBand *);
    ULONG (* Release)(struct IShellFolderBand *);
    HRESULT (* InitializeSFB)(struct IShellFolderBand *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* SetBandInfoSFB)(struct IShellFolderBand *, PBANDINFOSFB);
    HRESULT (* GetBandInfoSFB)(struct IShellFolderBand *, PBANDINFOSFB);
};

typedef struct IShellFolderView IShellFolderView, *PIShellFolderView;

typedef struct IShellFolderViewVtbl IShellFolderViewVtbl, *PIShellFolderViewVtbl;

typedef struct _ITEMSPACING ITEMSPACING;

struct IShellFolderView {
    struct IShellFolderViewVtbl * lpVtbl;
};

struct IShellFolderViewVtbl {
    HRESULT (* QueryInterface)(struct IShellFolderView *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolderView *);
    ULONG (* Release)(struct IShellFolderView *);
    HRESULT (* Rearrange)(struct IShellFolderView *, LPARAM);
    HRESULT (* GetArrangeParam)(struct IShellFolderView *, LPARAM *);
    HRESULT (* ArrangeGrid)(struct IShellFolderView *);
    HRESULT (* AutoArrange)(struct IShellFolderView *);
    HRESULT (* GetAutoArrange)(struct IShellFolderView *);
    HRESULT (* AddObject)(struct IShellFolderView *, LPITEMIDLIST, UINT *);
    HRESULT (* GetObjectA)(struct IShellFolderView *, LPITEMIDLIST *, UINT);
    HRESULT (* RemoveObject)(struct IShellFolderView *, LPITEMIDLIST, UINT *);
    HRESULT (* GetObjectCount)(struct IShellFolderView *, UINT *);
    HRESULT (* SetObjectCount)(struct IShellFolderView *, UINT, UINT);
    HRESULT (* UpdateObject)(struct IShellFolderView *, LPITEMIDLIST, LPITEMIDLIST, UINT *);
    HRESULT (* RefreshObject)(struct IShellFolderView *, LPITEMIDLIST, UINT *);
    HRESULT (* SetRedraw)(struct IShellFolderView *, BOOL);
    HRESULT (* GetSelectedCount)(struct IShellFolderView *, UINT *);
    HRESULT (* GetSelectedObjects)(struct IShellFolderView *, LPCITEMIDLIST * *, UINT *);
    HRESULT (* IsDropOnSource)(struct IShellFolderView *, struct IDropTarget *);
    HRESULT (* GetDragPoint)(struct IShellFolderView *, POINT *);
    HRESULT (* GetDropPoint)(struct IShellFolderView *, POINT *);
    HRESULT (* MoveIcons)(struct IShellFolderView *, struct IDataObject *);
    HRESULT (* SetItemPos)(struct IShellFolderView *, LPCITEMIDLIST, POINT *);
    HRESULT (* IsBkDropTarget)(struct IShellFolderView *, struct IDropTarget *);
    HRESULT (* SetClipboard)(struct IShellFolderView *, BOOL);
    HRESULT (* SetPoints)(struct IShellFolderView *, struct IDataObject *);
    HRESULT (* GetItemSpacing)(struct IShellFolderView *, ITEMSPACING *);
    HRESULT (* SetCallback)(struct IShellFolderView *, struct IShellFolderViewCB *, struct IShellFolderViewCB * *);
    HRESULT (* Select)(struct IShellFolderView *, UINT);
    HRESULT (* QuerySupport)(struct IShellFolderView *, UINT *);
    HRESULT (* SetAutomationObject)(struct IShellFolderView *, struct IDispatch *);
};

typedef struct IShellIconOverlay IShellIconOverlay, *PIShellIconOverlay;

typedef struct IShellIconOverlayVtbl IShellIconOverlayVtbl, *PIShellIconOverlayVtbl;

struct IShellIconOverlayVtbl {
    HRESULT (* QueryInterface)(struct IShellIconOverlay *, IID *, void * *);
    ULONG (* AddRef)(struct IShellIconOverlay *);
    ULONG (* Release)(struct IShellIconOverlay *);
    HRESULT (* GetOverlayIndex)(struct IShellIconOverlay *, LPCITEMIDLIST, int *);
    HRESULT (* GetOverlayIconIndex)(struct IShellIconOverlay *, LPCITEMIDLIST, int *);
};

struct IShellIconOverlay {
    struct IShellIconOverlayVtbl * lpVtbl;
};

typedef struct IShellIconOverlayIdentifier IShellIconOverlayIdentifier, *PIShellIconOverlayIdentifier;

typedef struct IShellIconOverlayIdentifierVtbl IShellIconOverlayIdentifierVtbl, *PIShellIconOverlayIdentifierVtbl;

struct IShellIconOverlayIdentifier {
    struct IShellIconOverlayIdentifierVtbl * lpVtbl;
};

struct IShellIconOverlayIdentifierVtbl {
    HRESULT (* QueryInterface)(struct IShellIconOverlayIdentifier *, IID *, void * *);
    ULONG (* AddRef)(struct IShellIconOverlayIdentifier *);
    ULONG (* Release)(struct IShellIconOverlayIdentifier *);
    HRESULT (* IsMemberOf)(struct IShellIconOverlayIdentifier *, LPCWSTR, DWORD);
    HRESULT (* GetOverlayInfo)(struct IShellIconOverlayIdentifier *, LPWSTR, int, int *, DWORD *);
    HRESULT (* GetPriority)(struct IShellIconOverlayIdentifier *, int *);
};

typedef struct IShellIconOverlayManager IShellIconOverlayManager, *PIShellIconOverlayManager;

typedef struct IShellIconOverlayManagerVtbl IShellIconOverlayManagerVtbl, *PIShellIconOverlayManagerVtbl;

struct IShellIconOverlayManager {
    struct IShellIconOverlayManagerVtbl * lpVtbl;
};

struct IShellIconOverlayManagerVtbl {
    HRESULT (* QueryInterface)(struct IShellIconOverlayManager *, IID *, void * *);
    ULONG (* AddRef)(struct IShellIconOverlayManager *);
    ULONG (* Release)(struct IShellIconOverlayManager *);
    HRESULT (* GetFileOverlayInfo)(struct IShellIconOverlayManager *, LPCWSTR, DWORD, int *, DWORD);
    HRESULT (* GetReservedOverlayInfo)(struct IShellIconOverlayManager *, LPCWSTR, DWORD, int *, DWORD, int);
    HRESULT (* RefreshOverlayImages)(struct IShellIconOverlayManager *, DWORD);
    HRESULT (* LoadNonloadedOverlayIdentifiers)(struct IShellIconOverlayManager *);
    HRESULT (* OverlayIndexFromImageIndex)(struct IShellIconOverlayManager *, int, int *, BOOL);
};

typedef struct IThumbnailCapture IThumbnailCapture, *PIThumbnailCapture;

typedef struct IThumbnailCaptureVtbl IThumbnailCaptureVtbl, *PIThumbnailCaptureVtbl;

struct IThumbnailCapture {
    struct IThumbnailCaptureVtbl * lpVtbl;
};

struct IThumbnailCaptureVtbl {
    HRESULT (* CaptureThumbnail)(struct IThumbnailCapture *, SIZE *, struct IUnknown *, HBITMAP *);
};

typedef struct IURLSearchHook IURLSearchHook, *PIURLSearchHook;

typedef struct IURLSearchHookVtbl IURLSearchHookVtbl, *PIURLSearchHookVtbl;

struct IURLSearchHook {
    struct IURLSearchHookVtbl * lpVtbl;
};

struct IURLSearchHookVtbl {
    HRESULT (* QueryInterface)(struct IURLSearchHook *, IID *, void * *);
    ULONG (* AddRef)(struct IURLSearchHook *);
    ULONG (* Release)(struct IURLSearchHook *);
    HRESULT (* Translate)(struct IURLSearchHook *, LPWSTR, DWORD);
};

typedef struct IURLSearchHook2 IURLSearchHook2, *PIURLSearchHook2;

typedef struct IURLSearchHook2Vtbl IURLSearchHook2Vtbl, *PIURLSearchHook2Vtbl;

struct IURLSearchHook2 {
    struct IURLSearchHook2Vtbl * lpVtbl;
};

struct IURLSearchHook2Vtbl {
    HRESULT (* TranslateWithSearchContext)(struct IURLSearchHook2 *, LPWSTR, DWORD, struct ISearchContext *);
};

typedef struct tagAASHELLMENUITEM * LPAASHELLMENUITEM;

typedef struct _browseinfoA * LPBROWSEINFOA;

typedef struct _browseinfoW * LPBROWSEINFOW;

typedef struct CABINETSTATE * LPCABINETSTATE;

typedef struct ICopyHookA * LPCOPYHOOKA;

typedef struct ICopyHookW * LPCOPYHOOKW;

typedef struct PROPPRG PROPPRG, *PPROPPRG;

typedef struct PROPPRG * LPCPROPPRG;

struct PROPPRG {
    WORD flPrg;
    WORD flPrgInit;
    CHAR achTitle[30];
    CHAR achCmdLine[128];
    CHAR achWorkDir[64];
    WORD wHotKey;
    CHAR achIconFile[80];
    WORD wIconIndex;
    DWORD dwEnhModeFlags;
    DWORD dwRealModeFlags;
    CHAR achOtherFile[80];
    CHAR achPIFFile[260];
};

typedef struct _CSFV * LPCSFV;

typedef struct SHCOLUMNINFO * LPCSHCOLUMNINFO;

typedef struct tagDATABLOCKHEADER * LPDATABLOCK_HEADER;

typedef struct tagDATABLOCKHEADER * LPDBLIST;

typedef struct _DROPFILES * LPDROPFILES;

typedef struct EXP_DARWIN_LINK * LPEXP_DARWIN_LINK;

typedef struct EXP_SPECIAL_FOLDER * LPEXP_SPECIAL_FOLDER;

typedef struct EXP_SZ_LINK * LPEXP_SZ_LINK;

typedef struct IExtractIconA * LPEXTRACTICONA;

typedef struct IExtractIconW * LPEXTRACTICONW;

typedef struct _FILEDESCRIPTORA * LPFILEDESCRIPTORA;

typedef struct _FILEDESCRIPTORW * LPFILEDESCRIPTORW;

typedef struct _FILEGROUPDESCRIPTORA * LPFILEGROUPDESCRIPTORA;

typedef struct _FILEGROUPDESCRIPTORW * LPFILEGROUPDESCRIPTORW;

typedef struct IFileViewerA * LPFILEVIEWERA;

typedef struct IFileViewerW * LPFILEVIEWERW;

typedef HRESULT (* LPFNDFMCALLBACK)(struct IShellFolder *, HWND, struct IDataObject *, UINT, WPARAM, LPARAM);

typedef struct _IDA * LPIDA;

typedef struct _NRESARRAY * LPNRESARRAY;

typedef struct NT_CONSOLE_PROPS NT_CONSOLE_PROPS, *PNT_CONSOLE_PROPS;

typedef struct NT_CONSOLE_PROPS * LPNT_CONSOLE_PROPS;

typedef struct _COORD _COORD, *P_COORD;

typedef struct _COORD COORD;

struct _COORD {
    SHORT X;
    SHORT Y;
};

struct NT_CONSOLE_PROPS {
    DATABLOCK_HEADER s;
    WORD wFillAttribute;
    WORD wPopupFillAttribute;
    COORD dwScreenBufferSize;
    COORD dwWindowSize;
    COORD dwWindowOrigin;
    DWORD nFont;
    DWORD nInputBufferSize;
    COORD dwFontSize;
    UINT uFontFamily;
    UINT uFontWeight;
    WCHAR FaceName[32];
    UINT uCursorSize;
    BOOL bFullScreen;
    BOOL bQuickEdit;
    BOOL bInsertMode;
    BOOL bAutoPosition;
    UINT uHistoryBufferSize;
    UINT uNumberOfHistoryBuffers;
    BOOL bHistoryNoDup;
    COLORREF ColorTable[16];
};

typedef struct NT_FE_CONSOLE_PROPS NT_FE_CONSOLE_PROPS, *PNT_FE_CONSOLE_PROPS;

typedef struct NT_FE_CONSOLE_PROPS * LPNT_FE_CONSOLE_PROPS;

struct NT_FE_CONSOLE_PROPS {
    DATABLOCK_HEADER s;
    UINT uCodePage;
};

typedef struct PROPPRG * LPPROPPRG;

typedef struct _QCMINFO QCMINFO;

typedef QCMINFO * LPQCMINFO;

typedef struct _SFV_SETITEMPOS SFV_SETITEMPOS;

typedef SFV_SETITEMPOS * LPSFV_SETITEMPOS;

typedef struct _SHChangeDWORDAsIDList * LPSHChangeDWORDAsIDList;

typedef struct SHCOLUMNDATA * LPSHCOLUMNDATA;

typedef struct SHCOLUMNINFO * LPSHCOLUMNINFO;

typedef struct SHCOLUMNINIT * LPSHCOLUMNINIT;

typedef struct _SHDESCRIPTIONID * LPSHDESCRIPTIONID;

typedef struct SHELLFLAGSTATE SHELLFLAGSTATE, *PSHELLFLAGSTATE;

typedef struct SHELLFLAGSTATE * LPSHELLFLAGSTATE;

struct SHELLFLAGSTATE {
    union anon__struct_4943_bitfield_1 field_0x0;
    union anon__struct_4943_bitfield_2 field_0x4;
};

typedef struct SHELLSTATEA SHELLSTATEA, *PSHELLSTATEA;

typedef struct SHELLSTATEA * LPSHELLSTATEA;

struct SHELLSTATEA {
    union anon__struct_4941_bitfield_1 field_0x0;
    DWORD dwWin95Unused;
    UINT uWin95Unused;
    LONG lParamSort;
    int iSortDirection;
    UINT version;
    UINT uNotUsed;
    union anon__struct_4941_bitfield_2 field_0x1c;
    union anon__struct_4941_bitfield_3 field_0x20;
};

typedef struct SHELLSTATEW SHELLSTATEW, *PSHELLSTATEW;

typedef struct SHELLSTATEW * LPSHELLSTATEW;

struct SHELLSTATEW {
    union anon__struct_4942_bitfield_1 field_0x0;
    DWORD dwWin95Unused;
    UINT uWin95Unused;
    LONG lParamSort;
    int iSortDirection;
    UINT version;
    UINT uNotUsed;
    union anon__struct_4942_bitfield_2 field_0x1c;
    union anon__struct_4942_bitfield_3 field_0x20;
};

typedef struct _TBINFO TBINFO;

typedef TBINFO * LPTBINFO;

typedef struct IThumbnailCapture * LPTHUMBNAILCAPTURE;

typedef struct _NRESARRAY NRESARRAY;

typedef struct _openasinfo OPENASINFO;

typedef struct _browseinfoA * PBROWSEINFOA;

typedef struct _browseinfoW * PBROWSEINFOW;

typedef SFV_SETITEMPOS * PCSFV_SETITEMPOS;

typedef DETAILSINFO * PDETAILSINFO;

typedef struct _openasinfo * POPENASINFO;

typedef enum RESTRICTIONS {
    REST_ALLOWLEGACYWEBVIEW=1073741955,
    REST_ARP_DONTGROUPPATCHES=1073741996,
    REST_ARP_NOADDPAGE=1073741867,
    REST_ARP_NOARP=1073741865,
    REST_ARP_NOCHOOSEPROGRAMSPAGE=1073741997,
    REST_ARP_NOREMOVEPAGE=1073741866,
    REST_ARP_NOWINSETUPPAGE=1073741868,
    REST_ARP_ShowPostSetup=1073741861,
    REST_CLASSICSHELL=1073741832,
    REST_CLEARRECENTDOCSONEXIT=1073741831,
    REST_DISALLOWCPL=1073741889,
    REST_DISALLOWRUN=1073741886,
    REST_DONTSHOWSUPERHIDDEN=1073741879,
    REST_ENFORCESHELLEXTSECURITY=1048576,
    REST_ENUMWORKGROUP=1073741864,
    REST_FORCEACTIVEDESKTOPON=1073741898,
    REST_FORCECOPYACLWITHFILE=1073741851,
    REST_FORCESTARTMENULOGOFF=1073741874,
    REST_GREYMSIADS=1073741869,
    REST_HASFINDCOMPUTERS=1073741858,
    REST_INTELLIMENUS=1073741859,
    REST_LINKRESOLVEIGNORELINKINFO=2097152,
    REST_MYDOCSONNET=262144,
    REST_MaxRecentDocs=1073741872,
    REST_NOACTIVEDESKTOP=1073741828,
    REST_NOACTIVEDESKTOPCHANGES=1073741829,
    REST_NOADDDESKCOMP=1073741843,
    REST_NOCHANGEMAPPEDDRIVECOMMENT=1073741871,
    REST_NOCHANGEMAPPEDDRIVELABEL=1073741870,
    REST_NOCHANGESTARMENU=1073741856,
    REST_NOCHANGINGWALLPAPER=1073741841,
    REST_NOCLOSE=2,
    REST_NOCLOSEDESKCOMP=1073741845,
    REST_NOCLOSE_DRAGDROPBAND=1073741846,
    REST_NOCOMMONGROUPS=4194304,
    REST_NOCONTROLPANEL=1073741863,
    REST_NOCSC=1073741862,
    REST_NOCURRENTUSERRUN=1073741895,
    REST_NOCURRENTUSERRUNONCE=1073741897,
    REST_NOCUSTOMIZETHISFOLDER=1073741876,
    REST_NOCUSTOMIZEWEBVIEW=1073741833,
    REST_NODELDESKCOMP=1073741844,
    REST_NODESKCOMP=1073741842,
    REST_NODESKTOP=64,
    REST_NODISCONNECT=1090519041,
    REST_NODRIVEAUTORUN=512,
    REST_NODRIVES=256,
    REST_NODRIVETYPEAUTORUN=1024,
    REST_NOEDITDESKCOMP=1073741848,
    REST_NOENCRYPTION=1073741877,
    REST_NOENCRYPTONMOVE=1073741893,
    REST_NOEXITTODOS=524288,
    REST_NOFAVORITESMENU=1073741830,
    REST_NOFILEASSOCIATE=1090519043,
    REST_NOFILEMENU=8,
    REST_NOFIND=128,
    REST_NOFOLDEROPTIONS=1073741857,
    REST_NOFORGETSOFTWAREUPDATE=1073741853,
    REST_NOHARDWARETAB=1073741881,
    REST_NOHTMLWALLPAPER=1073741840,
    REST_NOINTERNETICON=1073741825,
    REST_NOLOCALMACHINERUN=1073741894,
    REST_NOLOCALMACHINERUNONCE=1073741896,
    REST_NOLOGO3CHANNELNOTIFY=1073741852,
    REST_NOMANAGEMYCOMPUTERVERB=1073741884,
    REST_NOMOVINGBAND=1073741847,
    REST_NONE=0,
    REST_NONETCONNECTDISCONNECT=134217728,
    REST_NONETHOOD=2048,
    REST_NONETWORKCONNECTIONS=1073741873,
    REST_NOPRINTERADD=65536,
    REST_NOPRINTERDELETE=32768,
    REST_NOPRINTERTABS=16384,
    REST_NORECENTDOCSHISTORY=1073741826,
    REST_NORECENTDOCSMENU=1073741827,
    REST_NORESOLVESEARCH=1073741849,
    REST_NORESOLVETRACK=1073741850,
    REST_NORUN=1,
    REST_NORUNASINSTALLPROMPT=1073741882,
    REST_NOSAVESET=4,
    REST_NOSECURITY=1090519042,
    REST_NOSETACTIVEDESKTOP=1073741854,
    REST_NOSETFOLDERS=16,
    REST_NOSETTASKBAR=32,
    REST_NOSETTINGSASSIST=536870912,
    REST_NOSHELLSEARCHBUTTON=1073741880,
    REST_NOSMBALLOONTIP=1073741890,
    REST_NOSMHELP=1073741891,
    REST_NOSMMYDOCS=1073741903,
    REST_NOSTARTMENUSUBFOLDERS=131072,
    REST_NOTRAYCONTEXTMENU=33554432,
    REST_NOUPDATEWINDOWS=1073741855,
    REST_NOVIEWCONTEXTMENU=67108864,
    REST_NOVIEWONDRIVE=1073741900,
    REST_NOWEB=16777216,
    REST_NOWEBVIEW=1073741875,
    REST_NOWELCOMESCREEN=1073741887,
    REST_NOWINKEYS=1073741892,
    REST_PROMPTRUNASINSTALLNETPATH=1073741883,
    REST_RESTRICTCPL=1073741888,
    REST_RESTRICTRUN=8192,
    REST_RUNDLGMEMCHECKBOX=1073741860,
    REST_SEPARATEDESKTOPPROCESS=8388608,
    REST_STARTBANNER=4096,
    REST_STARTMENULOGOFF=268435456
} RESTRICTIONS;

typedef enum enum_4899 SCNRT_STATUS;

typedef struct _SFV_CREATE SFV_CREATE;

typedef struct _SFVM_HELPTOPIC_DATA SFVM_HELPTOPIC_DATA;

typedef struct _SFVM_PROPPAGE_DATA SFVM_PROPPAGE_DATA;

typedef enum enum_4897 SHARD;

typedef struct _SHChangeDWORDAsIDList SHChangeDWORDAsIDList;

typedef struct _SHChangeNotifyEntry SHChangeNotifyEntry;

typedef struct _SHDESCRIPTIONID SHDESCRIPTIONID;

typedef enum enum_4767 SHELL_LINK_DATA_FLAGS;

typedef enum tagOPEN_AS_INFO_FLAGS {
    OAIF_ALLOW_REGISTRATION=1,
    OAIF_EXEC=4,
    OAIF_FORCE_REGISTRATION=8,
    OAIF_REGISTER_EXT=2
} tagOPEN_AS_INFO_FLAGS;

#define DLLVER_BUILD_MASK 4294901760

#define DLLVER_MAJOR_MASK -281474976710656

#define DLLVER_MINOR_MASK 281470681743360

#define DLLVER_PLATFORM_NT 2

#define DLLVER_PLATFORM_WINDOWS 1

#define DLLVER_QFE_MASK 65535

#define FDTF_DEFAULT 3

#define FDTF_LONGDATE 4

#define FDTF_LONGTIME 8

#define FDTF_LTRDATE 256

#define FDTF_NOAUTOREADINGORDER 1024

#define FDTF_RELATIVE 16

#define FDTF_RTLDATE 512

#define FDTF_SHORTDATE 2

#define FDTF_SHORTTIME 1

#define GCT_INVALID 0

#define GCT_LFNCHAR 1

#define GCT_SEPARATOR 8

#define GCT_SHORTCHAR 2

#define GCT_WILD 4

#define ILMM_IE4 0

#define OS_ADVSERVER 22

#define OS_ANYSERVER 29

#define OS_APPLIANCE 36

#define OS_DATACENTER 21

#define OS_DOMAINMEMBER 28

#define OS_EMBEDDED 13

#define OS_FASTUSERSWITCHING 26

#define OS_HOME 19

#define OS_MEDIACENTER 35

#define OS_MEORGREATER 17

#define OS_NT 1

#define OS_NT4ORGREATER 3

#define OS_PERSONALTERMINALSERVER 25

#define OS_PROFESSIONAL 20

#define OS_SERVER 23

#define OS_SERVERADMINUI 34

#define OS_SMALLBUSINESSSERVER 32

#define OS_TABLETPC 33

#define OS_TERMINALCLIENT 14

#define OS_TERMINALREMOTEADMIN 15

#define OS_TERMINALSERVER 24

#define OS_WEBSERVER 31

#define OS_WELCOMELOGONUI 27

#define OS_WIN2000ADVSERVER 10

#define OS_WIN2000DATACENTER 11

#define OS_WIN2000ORGREATER 7

#define OS_WIN2000PRO 8

#define OS_WIN2000SERVER 9

#define OS_WIN2000TERMINAL 12

#define OS_WIN95_GOLD 16

#define OS_WIN95ORGREATER 2

#define OS_WIN98_GOLD 6

#define OS_WIN98ORGREATER 5

#define OS_WINDOWS 0

#define OS_WOW6432 30

#define OS_XPORGREATER 18

#define PLATFORM_BROWSERONLY 1

#define PLATFORM_IE3 1

#define PLATFORM_INTEGRATED 2

#define PLATFORM_UNKNOWN 0

#define PMSF_DONT_STRIP_SPACES 65536

#define PMSF_MULTIPLE 1

#define PMSF_NORMAL 0

#define SHACF_AUTOAPPEND_FORCE_OFF 2147483648

#define SHACF_AUTOAPPEND_FORCE_ON 1073741824

#define SHACF_AUTOSUGGEST_FORCE_OFF 536870912

#define SHACF_AUTOSUGGEST_FORCE_ON 268435456

#define SHACF_DEFAULT 0

#define SHACF_FILESYS_DIRS 32

#define SHACF_FILESYS_ONLY 16

#define SHACF_FILESYSTEM 1

#define SHACF_URLALL 6

#define SHACF_URLHISTORY 2

#define SHACF_URLMRU 4

#define SHACF_USETAB 8

#define SHACF_VIRTUAL_NAMESPACE 64

#define SHGVSPB_ALLFOLDERS 8

#define SHGVSPB_ALLUSERS 2

#define SHGVSPB_FOLDER 5

#define SHGVSPB_FOLDERNODEFAULTS 2147483653

#define SHGVSPB_GLOBALDEFAULTS 10

#define SHGVSPB_INHERIT 16

#define SHGVSPB_NOAUTODEFAULTS 2147483648

#define SHGVSPB_PERFOLDER 4

#define SHGVSPB_PERUSER 1

#define SHGVSPB_ROAM 32

#define SHGVSPB_USERDEFAULTS 9

#define SHREGSET_DEFAULT 6

#define SHREGSET_FORCE_HKCU 2

#define SHREGSET_FORCE_HKLM 8

#define SHREGSET_HKCU 1

#define SHREGSET_HKLM 4

#define SRRF_NOEXPAND 268435456

#define SRRF_NOVIRT 1073741824

#define SRRF_RM_ANY 0

#define SRRF_RM_NORMAL 65536

#define SRRF_RM_SAFE 131072

#define SRRF_RM_SAFENETWORK 262144

#define SRRF_RT_ANY 65535

#define SRRF_RT_DWORD 24

#define SRRF_RT_QWORD 72

#define SRRF_RT_REG_BINARY 8

#define SRRF_RT_REG_DWORD 16

#define SRRF_RT_REG_EXPAND_SZ 4

#define SRRF_RT_REG_MULTI_SZ 32

#define SRRF_RT_REG_NONE 1

#define SRRF_RT_REG_QWORD 64

#define SRRF_RT_REG_SZ 2

#define SRRF_ZEROONFAILURE 536870912

#define STIF_DEFAULT 0

#define STIF_SUPPORT_HEX 1

#define URL_APPLY_DEFAULT 1

#define URL_APPLY_FORCEAPPLY 8

#define URL_APPLY_GUESSFILE 4

#define URL_APPLY_GUESSSCHEME 2

#define URL_BROWSER_MODE 33554432

#define URL_CONVERT_IF_DOSPATH 2097152

#define URL_DONT_ESCAPE_EXTRA_INFO 33554432

#define URL_DONT_SIMPLIFY 134217728

#define URL_DONT_UNESCAPE 131072

#define URL_DONT_UNESCAPE_EXTRA_INFO 33554432

#define URL_ESCAPE_PERCENT 4096

#define URL_ESCAPE_SEGMENT_ONLY 8192

#define URL_ESCAPE_SPACES_ONLY 67108864

#define URL_ESCAPE_UNSAFE 536870912

#define URL_FILE_USE_PATHURL 65536

#define URL_INTERNAL_PATH 8388608

#define URL_NO_META 134217728

#define URL_PARTFLAG_KEEPSCHEME 1

#define URL_PLUGGABLE_PROTOCOL 1073741824

#define URL_UNESCAPE 268435456

#define URL_UNESCAPE_HIGH_ANSI_ONLY 4194304

#define URL_UNESCAPE_INPLACE 1048576

#define URL_WININET_COMPATIBILITY 2147483648

typedef struct _DLLVERSIONINFO _DLLVERSIONINFO, *P_DLLVERSIONINFO;

struct _DLLVERSIONINFO {
    DWORD cbSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformID;
};

typedef struct _DLLVERSIONINFO2 _DLLVERSIONINFO2, *P_DLLVERSIONINFO2;

typedef struct _DLLVERSIONINFO DLLVERSIONINFO;

struct _DLLVERSIONINFO2 {
    DLLVERSIONINFO info1;
    DWORD dwFlags;
    ULONGLONG ullVersion;
};

typedef enum enum_8249 {
    ASSOCDATA_EDITFLAGS=5,
    ASSOCDATA_HASPERUSERASSOC=4,
    ASSOCDATA_MAX=7,
    ASSOCDATA_MSIDESCRIPTOR=1,
    ASSOCDATA_NOACTIVATEHANDLER=2,
    ASSOCDATA_QUERYCLASSSTORE=3,
    ASSOCDATA_VALUE=6
} enum_8249;

typedef enum enum_8249 ASSOCDATA;

typedef enum enum_8250 {
    ASSOCENUM_NONE=0
} enum_8250;

typedef enum enum_8250 ASSOCENUM;

typedef DWORD ASSOCF;

typedef enum enum_8248 {
    ASSOCKEY_APP=2,
    ASSOCKEY_BASECLASS=4,
    ASSOCKEY_CLASS=3,
    ASSOCKEY_MAX=5,
    ASSOCKEY_SHELLEXECCLASS=1
} enum_8248;

typedef enum enum_8248 ASSOCKEY;

typedef enum enum_8247 {
    ASSOCSTR_COMMAND=1,
    ASSOCSTR_CONTENTTYPE=14,
    ASSOCSTR_DDEAPPLICATION=9,
    ASSOCSTR_DDECOMMAND=7,
    ASSOCSTR_DDEIFEXEC=8,
    ASSOCSTR_DDETOPIC=10,
    ASSOCSTR_DEFAULTICON=15,
    ASSOCSTR_DELEGATEEXECUTE=18,
    ASSOCSTR_DROPTARGET=17,
    ASSOCSTR_EXECUTABLE=2,
    ASSOCSTR_FRIENDLYAPPNAME=4,
    ASSOCSTR_FRIENDLYDOCNAME=3,
    ASSOCSTR_INFOTIP=11,
    ASSOCSTR_MAX=19,
    ASSOCSTR_NOOPEN=5,
    ASSOCSTR_QUICKTIP=12,
    ASSOCSTR_SHELLEXTENSION=16,
    ASSOCSTR_SHELLNEWVALUE=6,
    ASSOCSTR_TILEINFO=13
} enum_8247;

typedef enum enum_8247 ASSOCSTR;

typedef HRESULT (* DLLGETVERSIONPROC)(DLLVERSIONINFO *);

typedef struct _DLLVERSIONINFO2 DLLVERSIONINFO2;

typedef enum enum_8239 {
    URL_SCHEME_ABOUT=17,
    URL_SCHEME_FILE=9,
    URL_SCHEME_FTP=1,
    URL_SCHEME_GOPHER=3,
    URL_SCHEME_HTTP=2,
    URL_SCHEME_HTTPS=11,
    URL_SCHEME_INVALID=0,
    URL_SCHEME_JAVASCRIPT=15,
    URL_SCHEME_LOCAL=14,
    URL_SCHEME_MAILTO=4,
    URL_SCHEME_MAXVALUE=24,
    URL_SCHEME_MK=10,
    URL_SCHEME_MSHELP=21,
    URL_SCHEME_MSSHELLDEVICE=22,
    URL_SCHEME_MSSHELLIDLIST=20,
    URL_SCHEME_MSSHELLROOTED=19,
    URL_SCHEME_NEWS=5,
    URL_SCHEME_NNTP=6,
    URL_SCHEME_RES=18,
    URL_SCHEME_SHELL=12,
    URL_SCHEME_SNEWS=13,
    URL_SCHEME_TELNET=7,
    URL_SCHEME_UNKNOWN=0,
    URL_SCHEME_VBSCRIPT=16,
    URL_SCHEME_WAIS=8,
    URL_SCHEME_WILDCARD=23
} enum_8239;

typedef enum enum_8240 {
    URL_PART_HOSTNAME=2,
    URL_PART_NONE=0,
    URL_PART_PASSWORD=4,
    URL_PART_PORT=5,
    URL_PART_QUERY=6,
    URL_PART_SCHEME=1,
    URL_PART_USERNAME=3
} enum_8240;

typedef enum enum_8241 {
    URLIS_APPLIABLE=4,
    URLIS_DIRECTORY=5,
    URLIS_FILEURL=3,
    URLIS_HASQUERY=6,
    URLIS_NOHISTORY=2,
    URLIS_OPAQUE=1,
    URLIS_URL=0
} enum_8241;

typedef enum enum_8244 {
    SHREGDEL_BOTH=17,
    SHREGDEL_DEFAULT=0,
    SHREGDEL_HKCU=1,
    SHREGDEL_HKLM=16
} enum_8244;

typedef enum enum_8245 {
    SHREGENUM_BOTH=17,
    SHREGENUM_DEFAULT=0,
    SHREGENUM_HKCU=1,
    SHREGENUM_HKLM=16
} enum_8245;

typedef enum enum_8246 {
    ASSOCF_IGNOREBASECLASS=512,
    ASSOCF_INIT_BYEXENAME=2,
    ASSOCF_INIT_DEFAULTTOFOLDER=8,
    ASSOCF_INIT_DEFAULTTOSTAR=4,
    ASSOCF_INIT_IGNOREUNKNOWN=1024,
    ASSOCF_INIT_NOREMAPCLSID=1,
    ASSOCF_NOFIXUPS=256,
    ASSOCF_NOTRUNCATE=32,
    ASSOCF_NOUSERSETTINGS=16,
    ASSOCF_OPEN_BYEXENAME=2,
    ASSOCF_REMAPRUNDLL=128,
    ASSOCF_VERIFY=64
} enum_8246;

typedef enum enum_8255 {
    GLOBALCOUNTER_APPLICATION_DESTINATIONS=12,
    GLOBALCOUNTER_APPROVEDSITES=4,
    GLOBALCOUNTER_ASSOCCHANGED=52,
    GLOBALCOUNTER_BITBUCKETNUMDELETERS=14,
    GLOBALCOUNTER_COMMONPLACES_LIST_CACHE=50,
    GLOBALCOUNTER_FOLDERDEFINITION_CACHE=49,
    GLOBALCOUNTER_FOLDERSETTINGSCHANGE=2,
    GLOBALCOUNTER_IEONLY_SESSIONS=11,
    GLOBALCOUNTER_IESESSIONS=10,
    GLOBALCOUNTER_INTERNETTOOLBAR_LAYOUT=48,
    GLOBALCOUNTER_MAXIMUMVALUE=53,
    GLOBALCOUNTER_OVERLAYMANAGER=8,
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE=47,
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE_MACHINEWIDE=51,
    GLOBALCOUNTER_QUERYASSOCIATIONS=9,
    GLOBALCOUNTER_RATINGS=3,
    GLOBALCOUNTER_RATINGS_STATECOUNTER=46,
    GLOBALCOUNTER_RECYCLEBINCORRUPTED=45,
    GLOBALCOUNTER_RECYCLEBINENUM=44,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_A=16,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_B=17,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_C=18,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_D=19,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_E=20,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_F=21,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_G=22,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_H=23,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_I=24,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_J=25,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_K=26,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_L=27,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_M=28,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_N=29,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_O=30,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_P=31,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Q=32,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_R=33,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_S=34,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_T=35,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_U=36,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_V=37,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_W=38,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_X=39,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Y=40,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Z=41,
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SHARES=15,
    GLOBALCOUNTER_RESTRICTIONS=5,
    GLOBALCOUNTER_SEARCHMANAGER=0,
    GLOBALCOUNTER_SEARCHOPTIONS=1,
    GLOBALCOUNTER_SHELLSETTINGSCHANGED=6,
    GLOBALCOUNTER_SYSTEMPIDLCHANGE=7,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_CSCSYNCINPROGRESS=13,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SERVERDRIVE=42,
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEGLOBALDIRTYCOUNT=43
} enum_8255;

typedef enum enum_8257 {
    CTF_COINIT=8,
    CTF_COINIT_STA=8,
    CTF_FREELIBANDEXIT=16,
    CTF_INHERITWOW64=256,
    CTF_INSIST=1,
    CTF_PROCESS_REF=4,
    CTF_REF_COUNTED=32,
    CTF_THREAD_REF=2,
    CTF_UNUSED=128,
    CTF_WAIT_ALLOWCOM=64
} enum_8257;

typedef HANDLE HUSKEY;

typedef struct IQueryAssociations IQueryAssociations, *PIQueryAssociations;

typedef struct IQueryAssociationsVtbl IQueryAssociationsVtbl, *PIQueryAssociationsVtbl;

struct IQueryAssociations {
    struct IQueryAssociationsVtbl * lpVtbl;
};

struct IQueryAssociationsVtbl {
    HRESULT (* QueryInterface)(struct IQueryAssociations *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryAssociations *);
    ULONG (* Release)(struct IQueryAssociations *);
    HRESULT (* Init)(struct IQueryAssociations *, ASSOCF, LPCWSTR, HKEY, HWND);
    HRESULT (* GetString)(struct IQueryAssociations *, ASSOCF, ASSOCSTR, LPCWSTR, LPWSTR, DWORD *);
    HRESULT (* GetKey)(struct IQueryAssociations *, ASSOCF, ASSOCKEY, LPCWSTR, HKEY *);
    HRESULT (* GetData)(struct IQueryAssociations *, ASSOCF, ASSOCDATA, LPCWSTR, void *, DWORD *);
    HRESULT (* GetEnum)(struct IQueryAssociations *, ASSOCF, ASSOCENUM, LPCWSTR, IID *, void * *);
};

typedef struct QITAB QITAB, *PQITAB;

typedef struct QITAB * LPCQITAB;

struct QITAB {
    IID * piid;
    int dwOffset;
};

typedef struct QITAB * LPQITAB;

typedef struct tagPARSEDURLA tagPARSEDURLA, *PtagPARSEDURLA;

typedef struct tagPARSEDURLA PARSEDURLA;

typedef PARSEDURLA PARSEDURL;

struct tagPARSEDURLA {
    DWORD cbSize;
    LPCSTR pszProtocol;
    UINT cchProtocol;
    LPCSTR pszSuffix;
    UINT cchSuffix;
    UINT nScheme;
};

typedef struct tagPARSEDURLW tagPARSEDURLW, *PtagPARSEDURLW;

typedef struct tagPARSEDURLW PARSEDURLW;

struct tagPARSEDURLW {
    DWORD cbSize;
    LPCWSTR pszProtocol;
    UINT cchProtocol;
    LPCWSTR pszSuffix;
    UINT cchSuffix;
    UINT nScheme;
};

typedef HUSKEY * PHUSKEY;

typedef struct tagPARSEDURLA * PPARSEDURLA;

typedef PPARSEDURLA PPARSEDURL;

typedef struct tagPARSEDURLW * PPARSEDURLW;

typedef int SFBS_FLAGS;

typedef DWORD SHCT_FLAGS;

typedef enum enum_8255 SHGLOBALCOUNTER;

typedef enum enum_8244 SHREGDEL_FLAGS;

typedef enum enum_8245 SHREGENUM_FLAGS;

typedef int SRRF;

typedef int STIF_FLAGS;

typedef enum tagSFBS_FLAGS {
    SFBS_FLAGS_ROUND_TO_NEAREST_DISPLAYED_DIGIT=1,
    SFBS_FLAGS_TRUNCATE_UNDISPLAYED_DECIMAL_DIGITS=2
} tagSFBS_FLAGS;

typedef enum enum_8240 URL_PART;

typedef enum enum_8239 URL_SCHEME;

typedef enum enum_8241 URLIS;

#define ACDD_VISIBLE 1

#define ANCESTORDEFAULT -1

#define ARCONTENT_AUDIOCD 4

#define ARCONTENT_AUTOPLAYMUSIC 256

#define ARCONTENT_AUTOPLAYPIX 128

#define ARCONTENT_AUTOPLAYVIDEO 512

#define ARCONTENT_AUTORUNINF 2

#define ARCONTENT_BLANKCD 16

#define ARCONTENT_BLANKDVD 32

#define ARCONTENT_DVDMOVIE 8

#define ARCONTENT_UNKNOWNCONTENT 64

#define BSIM_STATE 1

#define BSIM_STYLE 2

#define BSIS_ALWAYSGRIPPER 2

#define BSIS_AUTOGRIPPER 0

#define BSIS_FIXEDORDER 1024

#define BSIS_LEFTALIGN 4

#define BSIS_LOCKED 256

#define BSIS_NOCAPTION 64

#define BSIS_NOCONTEXTMENU 16

#define BSIS_NODROPTARGET 32

#define BSIS_NOGRIPPER 1

#define BSIS_PREFERNOLINEBREAK 128

#define BSIS_PRESERVEORDERDURINGLAYOUT 512

#define BSIS_SINGLECLICK 8

#define BSSF_NOTITLE 2

#define BSSF_UNDELETEABLE 4096

#define BSSF_VISIBLE 1

#define CDBOSC_KILLFOCUS 1

#define CDBOSC_RENAME 3

#define CDBOSC_SELCHANGE 2

#define CDBOSC_SETFOCUS 0

#define CDBOSC_STATECHANGE 4

#define CMF_ASYNCVERBSTATE 1024

#define CMF_CANRENAME 16

#define CMF_DEFAULTONLY 1

#define CMF_DONOTPICKDEFAULT 8192

#define CMF_EXPLORE 4

#define CMF_EXTENDEDVERBS 256

#define CMF_INCLUDESTATIC 64

#define CMF_NODEFAULT 32

#define CMF_NORMAL 0

#define CMF_NOVERBS 8

#define CMF_OPTIMIZEFORINVOKE 2048

#define CMF_RESERVED 4294901760

#define CMF_SYNCCASCADEMENU 4096

#define CMF_VERBSONLY 2

#define CMIC_MASK_ASYNCOK 1048576

#define CMIC_MASK_CONTROL_DOWN 1073741824

#define CMIC_MASK_FLAG_NO_UI 1024

#define CMIC_MASK_HOTKEY 32

#define CMIC_MASK_ICON 16

#define CMIC_MASK_NO_CONSOLE 32768

#define CMIC_MASK_PTINVOKE 536870912

#define CMIC_MASK_SHIFT_DOWN 268435456

#define CMIC_MASK_UNICODE 16384

#define CSIDL_FLAG_PFTI_TRACKTARGET 16384

#define DBIF_VIEWMODE_FLOATING 2

#define DBIF_VIEWMODE_NORMAL 0

#define DBIF_VIEWMODE_TRANSPARENT 4

#define DBIF_VIEWMODE_VERTICAL 1

#define DBIM_ACTUAL 8

#define DBIM_BKCOLOR 64

#define DBIM_INTEGRAL 4

#define DBIM_MAXSIZE 2

#define DBIM_MINSIZE 1

#define DBIM_MODEFLAGS 32

#define DBIM_TITLE 16

#define DBIMF_ADDTOFRONT 512

#define DBIMF_BKCOLOR 64

#define DBIMF_BREAK 256

#define DBIMF_DEBOSSED 32

#define DBIMF_FIXED 1

#define DBIMF_FIXEDBMP 4

#define DBIMF_NORMAL 0

#define DBIMF_TOPALIGN 1024

#define DBIMF_UNDELETEABLE 16

#define DBIMF_USECHEVRON 128

#define DBIMF_VARIABLEHEIGHT 8

#define DBPC_SELECTFIRST -1

#define DBPC_SELECTLAST -2

#define E_PREVIEWHANDLER_CORRUPT 2252472324

#define E_PREVIEWHANDLER_DRM_FAIL 2252472321

#define E_PREVIEWHANDLER_NOAUTH 2252472322

#define E_PREVIEWHANDLER_NOTFOUND 2252472323

#define FCT_ADDTOEND 4

#define FCT_CONFIGABLE 2

#define FCT_MERGE 1

#define FCW_INTERNETBAR 6

#define FCW_PROGRESS 8

#define FCW_STATUS 1

#define FCW_TOOLBAR 2

#define FCW_TREE 3

#define FOFX_COPYASDOWNLOAD 1073741824

#define FOFX_DONTDISPLAYDESTPATH 134217728

#define FOFX_DONTDISPLAYLOCATIONS 2147483648

#define FOFX_DONTDISPLAYSOURCEPATH 67108864

#define FOFX_EARLYFAILURE 1048576

#define FOFX_KEEPNEWERFILE 4194304

#define FOFX_MOVEACLSACROSSVOLUMES 33554432

#define FOFX_NOCOPYHOOKS 8388608

#define FOFX_NOMINIMIZEBOX 16777216

#define FOFX_NOSKIPJUNCTIONS 65536

#define FOFX_PREFERHARDLINK 131072

#define FOFX_PRESERVEFILEEXTENSIONS 2097152

#define FOFX_REQUIREELEVATION 268435456

#define FOFX_SHOWELEVATIONPROMPT 262144

#define GCS_HELPTEXT 1

#define GCS_HELPTEXTA 1

#define GCS_HELPTEXTW 5

#define GCS_UNICODE 4

#define GCS_VALIDATE 2

#define GCS_VALIDATEA 2

#define GCS_VALIDATEW 6

#define GCS_VERB 0

#define GCS_VERBA 0

#define GCS_VERBICONW 20

#define GCS_VERBW 4

#define IDD_WIZEXTN_FIRST 20480

#define IDD_WIZEXTN_LAST 20736

#define IEI_PRIORITY_MAX 2147483647

#define IEI_PRIORITY_MIN 0

#define IEIFLAG_ASPECT 4

#define IEIFLAG_ASYNC 1

#define IEIFLAG_CACHE 2

#define IEIFLAG_GLEAM 16

#define IEIFLAG_NOBORDER 256

#define IEIFLAG_NOSTAMP 128

#define IEIFLAG_OFFLINE 8

#define IEIFLAG_ORIGSIZE 64

#define IEIFLAG_QUALITY 512

#define IEIFLAG_REFRESH 1024

#define IEIFLAG_SCREEN 32

#define IEIT_PRIORITY_NORMAL 268435456

#define IRTIR_TASK_FINISHED 4

#define IRTIR_TASK_NOT_RUNNING 0

#define IRTIR_TASK_PENDING 3

#define IRTIR_TASK_RUNNING 1

#define IRTIR_TASK_SUSPENDED 2

#define ITSAT_DEFAULT_LPARAM -1

#define ITSAT_DEFAULT_PRIORITY 268435456

#define ITSAT_MAX_PRIORITY 2147483647

#define ITSAT_MIN_PRIORITY 0

#define ITSS_THREAD_DESTROY_DEFAULT_TIMEOUT 10000

#define ITSS_THREAD_TERMINATE_TIMEOUT 4294967295

#define ITSS_THREAD_TIMEOUT_NO_CHANGE 4294967294

#define ITSSFLAG_COMPLETE_ON_DESTROY 0

#define ITSSFLAG_FLAGS_MASK 3

#define ITSSFLAG_KILL_ON_DESTROY 1

#define NSTCDHPOS_ONTOP -1

#define SBSP_ABSOLUTE 0

#define SBSP_ALLOW_AUTONAVIGATE 65536

#define SBSP_CALLERUNTRUSTED 8388608

#define SBSP_DEFBROWSER 0

#define SBSP_DEFMODE 0

#define SBSP_EXPLOREMODE 32

#define SBSP_FEEDNAVIGATION 536870912

#define SBSP_HELPMODE 64

#define SBSP_INITIATEDBYHLINKFRAME 2147483648

#define SBSP_NAVIGATEBACK 16384

#define SBSP_NAVIGATEFORWARD 32768

#define SBSP_NEWBROWSER 2

#define SBSP_NOAUTOSELECT 67108864

#define SBSP_NOTRANSFERHIST 128

#define SBSP_OPENMODE 16

#define SBSP_PARENT 8192

#define SBSP_REDIRECT 1073741824

#define SBSP_RELATIVE 4096

#define SBSP_SAMEBROWSER 1

#define SBSP_TRUSTEDFORACTIVEX 268435456

#define SBSP_TRUSTFIRSTDOWNLOAD 16777216

#define SBSP_UNTRUSTEDFORDOWNLOAD 33554432

#define SBSP_WRITENOHISTORY 134217728

#define SFGAO_BROWSABLE 134217728

#define SFGAO_CANCOPY 1

#define SFGAO_CANDELETE 32

#define SFGAO_CANLINK 4

#define SFGAO_CANMONIKER 4194304

#define SFGAO_CANMOVE 2

#define SFGAO_CANRENAME 16

#define SFGAO_CAPABILITYMASK 375

#define SFGAO_COMPRESSED 67108864

#define SFGAO_CONTENTSMASK 2147483648

#define SFGAO_DISPLAYATTRMASK 1032192

#define SFGAO_DROPTARGET 256

#define SFGAO_ENCRYPTED 8192

#define SFGAO_FILESYSANCESTOR 268435456

#define SFGAO_FILESYSTEM 1073741824

#define SFGAO_FOLDER 536870912

#define SFGAO_GHOSTED 32768

#define SFGAO_HASPROPSHEET 64

#define SFGAO_HASSTORAGE 4194304

#define SFGAO_HASSUBFOLDER 2147483648

#define SFGAO_HIDDEN 524288

#define SFGAO_ISSLOW 16384

#define SFGAO_LINK 65536

#define SFGAO_NEWCONTENT 2097152

#define SFGAO_NONENUMERATED 1048576

#define SFGAO_PKEYSFGAOMASK 2164539392

#define SFGAO_READONLY 262144

#define SFGAO_REMOVABLE 33554432

#define SFGAO_SHARE 131072

#define SFGAO_STORAGE 8

#define SFGAO_STORAGEANCESTOR 8388608

#define SFGAO_STORAGECAPMASK 1891958792

#define SFGAO_STREAM 4194304

#define SFGAO_SYSTEM 4096

#define SFGAO_VALIDATE 16777216

#define SHCIDS_ALLFIELDS 2147483648

#define SHCIDS_BITMASK 4294901760

#define SHCIDS_CANONICALONLY 268435456

#define SHCIDS_COLUMNMASK 65535

#define SHPWHF_NOFILESELECTOR 4

#define SHPWHF_NONETPLACECREATE 2

#define SHPWHF_NORECOMPRESS 1

#define SHPWHF_USEMRU 8

#define SHPWHF_VALIDATEVIAWEBFOLDERS 65536

#define SMAE_CONTRACTED 2

#define SMAE_EXPANDED 1

#define SMAE_USER 4

#define SMAE_VALID 7

#define SMC_AUTOEXPANDCHANGE 66

#define SMC_CHEVRONEXPAND 25

#define SMC_CHEVRONGETTIP 47

#define SMC_CREATE 2

#define SMC_DEFAULTICON 22

#define SMC_DEMOTE 17

#define SMC_DISPLAYCHEVRONTIP 42

#define SMC_EXITMENU 3

#define SMC_GETAUTOEXPANDSTATE 65

#define SMC_GETBKCONTEXTMENU 68

#define SMC_GETCONTEXTMENUMODIFIER 67

#define SMC_GETINFO 5

#define SMC_GETOBJECT 7

#define SMC_GETSFINFO 6

#define SMC_GETSFOBJECT 8

#define SMC_INITMENU 1

#define SMC_NEWITEM 23

#define SMC_OPEN 69

#define SMC_PROMOTE 18

#define SMC_REFRESH 16

#define SMC_SETSFOBJECT 45

#define SMC_SFDDRESTRICTED 48

#define SMC_SFEXEC 9

#define SMC_SFEXEC_MIDDLE 49

#define SMC_SFSELECTITEM 10

#define SMC_SHCHANGENOTIFY 46

#define SMDM_HMENU 2

#define SMDM_SHELLFOLDER 1

#define SMDM_TOOLBAR 4

#define SMINIT_AUTOEXPAND 256

#define SMINIT_AUTOTOOLTIP 512

#define SMINIT_CACHED 16

#define SMINIT_DEFAULT 0

#define SMINIT_DROPONCONTAINER 1024

#define SMINIT_HORIZONTAL 536870912

#define SMINIT_RESTRICT_DRAGDROP 2

#define SMINIT_TOPLEVEL 4

#define SMINIT_VERTICAL 268435456

#define SMINV_ID 8

#define SMINV_REFRESH 1

#define SMSET_BOTTOM 536870912

#define SMSET_DONTOWN 1

#define SMSET_TOP 268435456

#define SV2GV_CURRENTVIEW -1

#define SV2GV_DEFAULTVIEW -2

#define SVSI_NOSTATECHANGE 2147483648

#define THBN_CLICKED 6144

typedef enum __MIDL_INamespaceWalk_0001 {
    NSWF_ACCUMULATE_FOLDERS=2048,
    NSWF_ASYNC=512,
    NSWF_DEFAULT=0,
    NSWF_DONT_ACCUMULATE_RESULT=8,
    NSWF_DONT_RESOLVE_LINKS=1024,
    NSWF_DONT_SORT=4096,
    NSWF_DONT_TRAVERSE_LINKS=4,
    NSWF_DONT_TRAVERSE_STREAM_JUNCTIONS=16384,
    NSWF_FILESYSTEM_ONLY=32,
    NSWF_FLAG_VIEWORDER=128,
    NSWF_IGNORE_AUTOPLAY_HIDA=256,
    NSWF_NONE_IMPLIES_ALL=1,
    NSWF_ONE_IMPLIES_ALL=2,
    NSWF_SHOW_PROGRESS=64,
    NSWF_TRAVERSE_STREAM_JUNCTIONS=16,
    NSWF_USE_TRANSFER_MEDIUM=8192
} __MIDL_INamespaceWalk_0001;

typedef struct __MIDL_IPreviewHandlerFrame_0001 __MIDL_IPreviewHandlerFrame_0001, *P__MIDL_IPreviewHandlerFrame_0001;

struct __MIDL_IPreviewHandlerFrame_0001 {
    HACCEL haccel;
    UINT cAccelEntries;
};

typedef enum _BROWSERFRAMEOPTIONS {
    BFO_ADD_IE_TOCAPTIONBAR=512,
    BFO_BOTH_OPTIONS=4,
    BFO_BROWSER_PERSIST_SETTINGS=1,
    BFO_BROWSE_NO_IN_NEW_PROCESS=16,
    BFO_ENABLE_HYPERLINK_TRACKING=32,
    BFO_GO_HOME_PAGE=16384,
    BFO_NONE=0,
    BFO_NO_PARENT_FOLDER_SUPPORT=4096,
    BFO_NO_REOPEN_NEXT_RESTART=8192,
    BFO_PREFER_IEPROCESS=32768,
    BFO_QUERY_ALL=131073,
    BFO_RENAME_FOLDER_OPTIONS_TOINTERNET=2,
    BFO_SHOW_NAVIGATION_CANCELLED=65536,
    BFO_SUBSTITUE_INTERNET_START_PAGE=128,
    BFO_USE_DIALUP_REF=1024,
    BFO_USE_IE_LOGOBANDING=256,
    BFO_USE_IE_OFFLINE_SUPPORT=64,
    BFO_USE_IE_STATUSBAR=131072,
    BFO_USE_IE_TOOLBAR=2048,
    BIF_PREFER_INTERNET_SHORTCUT=8
} _BROWSERFRAMEOPTIONS;

typedef struct _CMINVOKECOMMANDINFOEX _CMINVOKECOMMANDINFOEX, *P_CMINVOKECOMMANDINFOEX;

struct _CMINVOKECOMMANDINFOEX {
    DWORD cbSize;
    DWORD fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    DWORD dwHotKey;
    HANDLE hIcon;
    LPCSTR lpTitle;
    LPCWSTR lpVerbW;
    LPCWSTR lpParametersW;
    LPCWSTR lpDirectoryW;
    LPCWSTR lpTitleW;
    POINT ptInvoke;
};

typedef enum _EXPCMDFLAGS {
    ECF_DEFAULT=0,
    ECF_HASLUASHIELD=16,
    ECF_HASSPLITBUTTON=2,
    ECF_HASSUBCOMMANDS=1,
    ECF_HIDELABEL=4,
    ECF_ISDROPDOWN=128,
    ECF_ISSEPARATOR=8,
    ECF_SEPARATORAFTER=64,
    ECF_SEPARATORBEFORE=32
} _EXPCMDFLAGS;

typedef enum _EXPCMDSTATE {
    ECS_CHECKBOX=4,
    ECS_CHECKED=8,
    ECS_DISABLED=1,
    ECS_ENABLED=0,
    ECS_HIDDEN=2,
    ECS_RADIOCHECK=16
} _EXPCMDSTATE;

typedef enum _EXPPS {
    EXPPS_FILETYPES=1
} _EXPPS;

typedef enum _MARKUPSTATE {
    MARKUPSTATE_ALLOWMARKUP=1073741824,
    MARKUPSTATE_DEFAULTCOLORS=16,
    MARKUPSTATE_ENABLED=2,
    MARKUPSTATE_FOCUSED=1,
    MARKUPSTATE_HOT=8,
    MARKUPSTATE_VISITED=4
} _MARKUPSTATE;

typedef enum _NMCII_FLAGS {
    NMCII_FOLDERS=2,
    NMCII_ITEMS=1
} _NMCII_FLAGS;

typedef enum _NMCSAEI_FLAGS {
    NMCSAEI_EDIT=1,
    NMCSAEI_SELECT=0
} _NMCSAEI_FLAGS;

typedef enum _NSTCECLICKTYPE {
    NSTCECT_BUTTON=3,
    NSTCECT_DBLCLICK=4,
    NSTCECT_LBUTTON=1,
    NSTCECT_MBUTTON=2,
    NSTCECT_RBUTTON=3
} _NSTCECLICKTYPE;

typedef enum _NSTCEHITTEST {
    NSTCEHT_NOWHERE=1,
    NSTCEHT_ONITEM=70,
    NSTCEHT_ONITEMBUTTON=16,
    NSTCEHT_ONITEMICON=2,
    NSTCEHT_ONITEMINDENT=8,
    NSTCEHT_ONITEMLABEL=4,
    NSTCEHT_ONITEMRIGHT=32,
    NSTCEHT_ONITEMSTATEICON=64,
    NSTCEHT_ONITEMTABBUTTON=4096
} _NSTCEHITTEST;

typedef enum _NSTCITEMSTATE {
    NSTCIS_BOLD=4,
    NSTCIS_DISABLED=8,
    NSTCIS_EXPANDED=2,
    NSTCIS_NONE=0,
    NSTCIS_SELECTED=1,
    NSTCIS_SELECTEDNOEXPAND=16
} _NSTCITEMSTATE;

typedef enum _NSTCROOTSTYLE {
    NSTCRS_EXPANDED=2,
    NSTCRS_HIDDEN=1,
    NSTCRS_VISIBLE=0
} _NSTCROOTSTYLE;

typedef enum _NSTCSTYLE {
    NSTCS_ALLOWJUNCTIONS=268435456,
    NSTCS_AUTOHSCROLL=1048576,
    NSTCS_BORDER=32768,
    NSTCS_CHECKBOXES=8388608,
    NSTCS_DIMMEDCHECKBOXES=67108864,
    NSTCS_DISABLEDRAGDROP=4096,
    NSTCS_EMPTYTEXT=4194304,
    NSTCS_EVENHEIGHT=1024,
    NSTCS_EXCLUSIONCHECKBOXES=33554432,
    NSTCS_FADEINOUTEXPANDOS=2097152,
    NSTCS_FAVORITESMODE=524288,
    NSTCS_FULLROWSELECT=8,
    NSTCS_HASEXPANDOS=1,
    NSTCS_HASLINES=2,
    NSTCS_HORIZONTALSCROLL=32,
    NSTCS_NOEDITLABELS=65536,
    NSTCS_NOINDENTCHECKS=134217728,
    NSTCS_NOINFOTIP=512,
    NSTCS_NOORDERSTREAM=8192,
    NSTCS_NOREPLACEOPEN=2048,
    NSTCS_PARTIALCHECKBOXES=16777216,
    NSTCS_RICHTOOLTIP=16384,
    NSTCS_ROOTHASEXPANDO=64,
    NSTCS_SHOWDELETEBUTTON=1073741824,
    NSTCS_SHOWREFRESHBUTTON=1073741825,
    NSTCS_SHOWSELECTIONALWAYS=128,
    NSTCS_SHOWTABSBUTTON=536870912,
    NSTCS_SINGLECLICKEXPAND=4,
    NSTCS_SPRINGEXPAND=16,
    NSTCS_TABSTOP=131072
} _NSTCSTYLE;

typedef enum _OPPROGDLGF {
    OPPROGDLG_ALLOWUNDO=256,
    OPPROGDLG_DEFAULT=0,
    OPPROGDLG_DONTDISPLAYDESTPATH=1024,
    OPPROGDLG_DONTDISPLAYLOCATIONS=4096,
    OPPROGDLG_DONTDISPLAYSOURCEPATH=512,
    OPPROGDLG_ENABLEPAUSE=128,
    OPPROGDLG_NOMULTIDAYESTIMATES=2048
} _OPPROGDLGF;

typedef enum _PDMODE {
    PDM_DEFAULT=0,
    PDM_ERRORSBLOCKING=8,
    PDM_INDETERMINATE=16,
    PDM_PREFLIGHT=2,
    PDM_RUN=1,
    PDM_UNDOING=4
} _PDMODE;

typedef struct _PERSIST_FOLDER_TARGET_INFO _PERSIST_FOLDER_TARGET_INFO, *P_PERSIST_FOLDER_TARGET_INFO;

struct _PERSIST_FOLDER_TARGET_INFO {
    LPITEMIDLIST pidlTargetFolder;
    WCHAR szTargetParsingName[260];
    WCHAR szNetworkProvider[260];
    DWORD dwAttributes;
    int csidl;
};

typedef enum _PROPERTYUI_FLAGS {
    PUIF_DEFAULT=0,
    PUIF_NOLABELININFOTIP=2,
    PUIF_RIGHTALIGN=1
} _PROPERTYUI_FLAGS;

typedef enum _PROPERTYUI_FORMAT_FLAGS {
    PUIFFDF_DEFAULT=0,
    PUIFFDF_FRIENDLYDATE=8,
    PUIFFDF_NOTIME=4,
    PUIFFDF_RIGHTTOLEFT=1,
    PUIFFDF_SHORTFORMAT=2
} _PROPERTYUI_FORMAT_FLAGS;

typedef enum _PROPERTYUI_NAME_FLAGS {
    PUIFNF_DEFAULT=0,
    PUIFNF_MNEMONIC=1
} _PROPERTYUI_NAME_FLAGS;

typedef enum _SHCONTF {
    SHCONTF_CHECKING_FOR_CHILDREN=16,
    SHCONTF_ENABLE_ASYNC=32768,
    SHCONTF_FASTITEMS=8192,
    SHCONTF_FLATLIST=16384,
    SHCONTF_FOLDERS=32,
    SHCONTF_INCLUDEHIDDEN=128,
    SHCONTF_INCLUDESUPERHIDDEN=65536,
    SHCONTF_INIT_ON_FIRST_NEXT=256,
    SHCONTF_NAVIGATION_ENUM=4096,
    SHCONTF_NETPRINTERSRCH=512,
    SHCONTF_NONFOLDERS=64,
    SHCONTF_SHAREABLE=1024,
    SHCONTF_STORAGE=2048
} _SHCONTF;

typedef enum _SHGDNF {
    SHGDN_FORADDRESSBAR=16384,
    SHGDN_FOREDITING=4096,
    SHGDN_FORPARSING=32768,
    SHGDN_INFOLDER=1,
    SHGDN_NORMAL=0
} _SHGDNF;

typedef enum _SICHINTF {
    SICHINT_ALLFIELDS=1,
    SICHINT_CANONICAL=268435456,
    SICHINT_DISPLAY=0,
    SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL=536870912
} _SICHINTF;

typedef enum _SIGDN {
    SIGDN_DESKTOPABSOLUTEEDITING=4,
    SIGDN_DESKTOPABSOLUTEPARSING=2,
    SIGDN_FILESYSPATH=5,
    SIGDN_NORMALDISPLAY=0,
    SIGDN_PARENTRELATIVE=8,
    SIGDN_PARENTRELATIVEEDITING=3,
    SIGDN_PARENTRELATIVEFORADDRESSBAR=7,
    SIGDN_PARENTRELATIVEPARSING=1,
    SIGDN_URL=6
} _SIGDN;

typedef enum _SIIGBF {
    SIIGBF_BIGGERSIZEOK=1,
    SIIGBF_ICONONLY=4,
    SIIGBF_INCACHEONLY=16,
    SIIGBF_MEMORYONLY=2,
    SIIGBF_RESIZETOFIT=0,
    SIIGBF_THUMBNAILONLY=8
} _SIIGBF;

typedef enum _SPACTION {
    SPACTION_APPLYINGATTRIBS=4,
    SPACTION_CALCULATING=7,
    SPACTION_COPYING=2,
    SPACTION_COPY_MOVING=13,
    SPACTION_DELETING=10,
    SPACTION_DOWNLOADING=5,
    SPACTION_FORMATTING=12,
    SPACTION_MOVING=1,
    SPACTION_NONE=0,
    SPACTION_RECYCLING=3,
    SPACTION_RENAMING=11,
    SPACTION_SEARCHING_FILES=9,
    SPACTION_SEARCHING_INTERNET=6,
    SPACTION_UPLOADING=8
} _SPACTION;

typedef enum _SPBEGINF {
    SPBEGINF_AUTOTIME=2,
    SPBEGINF_MARQUEEPROGRESS=32,
    SPBEGINF_NOCANCELBUTTON=64,
    SPBEGINF_NOPROGRESSBAR=16,
    SPBEGINF_NORMAL=0
} _SPBEGINF;

typedef enum _SPINITF {
    SPINITF_MODAL=1,
    SPINITF_NOMINIMIZE=8,
    SPINITF_NORMAL=0
} _SPINITF;

typedef enum _SPTEXT {
    SPTEXT_ACTIONDESCRIPTION=1,
    SPTEXT_ACTIONDETAIL=2
} _SPTEXT;

typedef struct _SV2CVW2_PARAMS _SV2CVW2_PARAMS, *P_SV2CVW2_PARAMS;

typedef GUID SHELLVIEWID;

struct _SV2CVW2_PARAMS {
    DWORD cbSize;
    struct IShellView * psvPrev;
    LPCFOLDERSETTINGS pfs;
    struct IShellBrowser * psbOwner;
    RECT * prcView;
    SHELLVIEWID * pvid;
    HWND hwndView;
};

typedef enum _SVGIO {
    SVGIO_ALLVIEW=2,
    SVGIO_BACKGROUND=0,
    SVGIO_CHECKED=3,
    SVGIO_FLAG_VIEWORDER=-2147483648,
    SVGIO_SELECTION=1,
    SVGIO_TYPE_MASK=15
} _SVGIO;

typedef enum _SVSIF {
    SVSI_CHECK=256,
    SVSI_CHECK2=512,
    SVSI_DESELECT=0,
    SVSI_DESELECTOTHERS=4,
    SVSI_EDIT=3,
    SVSI_ENSUREVISIBLE=8,
    SVSI_FOCUSED=16,
    SVSI_KEYBOARDSELECT=1025,
    SVSI_NOTAKEFOCUS=1073741824,
    SVSI_POSITIONITEM=128,
    SVSI_SELECT=1,
    SVSI_SELECTIONMARK=64,
    SVSI_TRANSLATEPT=32
} _SVSIF;

typedef enum _TRANSFER_ADVISE_STATE {
    TS_INDETERMINATE=4,
    TS_NONE=0,
    TS_PERFORMING=1,
    TS_PREPARING=2
} _TRANSFER_ADVISE_STATE;

typedef enum _TRANSFER_SOURCE_FLAGS {
    TSF_ALLOW_DECRYPTION=4,
    TSF_COPY_CREATION_TIME=16,
    TSF_COPY_HARD_LINK=256,
    TSF_COPY_LOCALIZED_NAME=512,
    TSF_COPY_WRITE_TIME=32,
    TSF_DELETE_RECYCLE_IF_POSSIBLE=128,
    TSF_FAIL_EXIST=0,
    TSF_MOVE_AS_COPY_DELETE=1024,
    TSF_NORMAL=0,
    TSF_NO_SECURITY=8,
    TSF_OVERWRITE_EXIST=2,
    TSF_RENAME_EXIST=1,
    TSF_SUSPEND_SHELLEVENTS=2048,
    TSF_USE_FULL_ACCESS=64
} _TRANSFER_SOURCE_FLAGS;

typedef struct AlphabeticalCategorizer AlphabeticalCategorizer, *PAlphabeticalCategorizer;

struct AlphabeticalCategorizer {
};

typedef struct ApplicationAssociationRegistration ApplicationAssociationRegistration, *PApplicationAssociationRegistration;

struct ApplicationAssociationRegistration {
};

typedef struct ApplicationAssociationRegistrationUI ApplicationAssociationRegistrationUI, *PApplicationAssociationRegistrationUI;

struct ApplicationAssociationRegistrationUI {
};

typedef struct ApplicationDestinations ApplicationDestinations, *PApplicationDestinations;

struct ApplicationDestinations {
};

typedef struct ApplicationDocumentLists ApplicationDocumentLists, *PApplicationDocumentLists;

struct ApplicationDocumentLists {
};

typedef struct AppStartupLink AppStartupLink, *PAppStartupLink;

struct AppStartupLink {
};

typedef enum ATTACHMENT_ACTION {
    ATTACHMENT_ACTION_CANCEL=0,
    ATTACHMENT_ACTION_EXEC=2,
    ATTACHMENT_ACTION_SAVE=1
} ATTACHMENT_ACTION;

typedef enum ATTACHMENT_PROMPT {
    ATTACHMENT_PROMPT_EXEC=2,
    ATTACHMENT_PROMPT_EXEC_OR_SAVE=3,
    ATTACHMENT_PROMPT_NONE=0,
    ATTACHMENT_PROMPT_SAVE=1
} ATTACHMENT_PROMPT;

typedef struct AttachmentServices AttachmentServices, *PAttachmentServices;

struct AttachmentServices {
};

typedef struct tagBANDSITEINFO tagBANDSITEINFO, *PtagBANDSITEINFO;

typedef struct tagBANDSITEINFO BANDSITEINFO;

struct tagBANDSITEINFO {
    DWORD dwMask;
    DWORD dwState;
    DWORD dwStyle;
};

typedef DWORD BROWSERFRAMEOPTIONS;

typedef struct CATEGORY_INFO CATEGORY_INFO, *PCATEGORY_INFO;

typedef enum CATEGORYINFO_FLAGS {
    CATINFO_COLLAPSED=1,
    CATINFO_EXPANDED=4,
    CATINFO_HIDDEN=2,
    CATINFO_NOHEADER=8,
    CATINFO_NOHEADERCOUNT=32,
    CATINFO_NORMAL=0,
    CATINFO_NOTCOLLAPSIBLE=16,
    CATINFO_SUBSETTED=64
} CATEGORYINFO_FLAGS;

struct CATEGORY_INFO {
    enum CATEGORYINFO_FLAGS cif;
    WCHAR wszName[260];
};

typedef enum CATSORT_FLAGS {
    CATSORT_DEFAULT=0,
    CATSORT_NAME=1
} CATSORT_FLAGS;

typedef struct CDBurn CDBurn, *PCDBurn;

struct CDBurn {
};

typedef struct CM_COLUMNINFO CM_COLUMNINFO, *PCM_COLUMNINFO;

struct CM_COLUMNINFO {
    DWORD cbSize;
    DWORD dwMask;
    DWORD dwState;
    UINT uWidth;
    UINT uDefaultWidth;
    UINT uIdealWidth;
    WCHAR wszName[80];
};

typedef enum CM_ENUM_FLAGS {
    CM_ENUM_ALL=1,
    CM_ENUM_VISIBLE=2
} CM_ENUM_FLAGS;

typedef enum CM_MASK {
    CM_MASK_DEFAULTWIDTH=2,
    CM_MASK_IDEALWIDTH=4,
    CM_MASK_NAME=8,
    CM_MASK_STATE=16,
    CM_MASK_WIDTH=1
} CM_MASK;

typedef enum CM_SET_WIDTH_VALUE {
    CM_WIDTH_AUTOSIZE=1,
    CM_WIDTH_USEDEFAULT=0
} CM_SET_WIDTH_VALUE;

typedef enum CM_STATE {
    CM_STATE_ALWAYSVISIBLE=8,
    CM_STATE_FIXEDWIDTH=2,
    CM_STATE_NONE=0,
    CM_STATE_NOSORTBYFOLDERNESS=4,
    CM_STATE_VISIBLE=1
} CM_STATE;

typedef struct _CMINVOKECOMMANDINFOEX CMINVOKECOMMANDINFOEX;

typedef enum CPVIEW {
    CPVIEW_ALLITEMS=1,
    CPVIEW_CATEGORY=1,
    CPVIEW_CLASSIC=0,
    CPVIEW_HOME=2
} CPVIEW;

typedef enum DEFAULTSAVEFOLDERTYPE {
    DSFT_DETECT=1,
    DSFT_PRIVATE=2,
    DSFT_PUBLIC=3
} DEFAULTSAVEFOLDERTYPE;

typedef struct DELEGATEITEMID DELEGATEITEMID, *PDELEGATEITEMID;

struct DELEGATEITEMID {
    WORD cbSize;
    WORD wOuter;
    WORD cbInner;
    BYTE rgb[1];
};

typedef HRESULT DEPRECATED_HRESULT;

typedef struct DESKBANDINFO DESKBANDINFO, *PDESKBANDINFO;

struct DESKBANDINFO {
    DWORD dwMask;
    POINTL ptMinSize;
    POINTL ptMaxSize;
    POINTL ptIntegral;
    POINTL ptActual;
    WCHAR wszTitle[256];
    DWORD dwModeFlags;
    COLORREF crBkgnd;
};

typedef struct DesktopGadget DesktopGadget, *PDesktopGadget;

struct DesktopGadget {
};

typedef struct DestinationList DestinationList, *PDestinationList;

struct DestinationList {
};

typedef struct DocPropShellExtension DocPropShellExtension, *PDocPropShellExtension;

struct DocPropShellExtension {
};

typedef struct DriveSizeCategorizer DriveSizeCategorizer, *PDriveSizeCategorizer;

struct DriveSizeCategorizer {
};

typedef struct DriveTypeCategorizer DriveTypeCategorizer, *PDriveTypeCategorizer;

struct DriveTypeCategorizer {
};

typedef struct EnumerableObjectCollection EnumerableObjectCollection, *PEnumerableObjectCollection;

struct EnumerableObjectCollection {
};

typedef DWORD EXPCMDFLAGS;

typedef DWORD EXPCMDSTATE;

typedef enum EXPLORER_BROWSER_FILL_FLAGS {
    EBF_NODROPTARGET=512,
    EBF_NONE=0,
    EBF_SELECTFROMDATAOBJECT=256
} EXPLORER_BROWSER_FILL_FLAGS;

typedef enum EXPLORER_BROWSER_OPTIONS {
    EBO_ALWAYSNAVIGATE=4,
    EBO_HTMLSHAREPOINTVIEW=32,
    EBO_NAVIGATEONCE=1,
    EBO_NONE=0,
    EBO_NOTRAVELLOG=8,
    EBO_NOWRAPPERWINDOW=16,
    EBO_SHOWFRAMES=2
} EXPLORER_BROWSER_OPTIONS;

typedef struct ExplorerBrowser ExplorerBrowser, *PExplorerBrowser;

struct ExplorerBrowser {
};

typedef UINT EXPPS;

typedef struct EXTRASEARCH EXTRASEARCH, *PEXTRASEARCH;

struct EXTRASEARCH {
    GUID guidSearch;
    WCHAR wszFriendlyName[80];
    WCHAR wszUrl[2084];
};

typedef struct FileOpenDialog FileOpenDialog, *PFileOpenDialog;

struct FileOpenDialog {
};

typedef struct FileOperation FileOperation, *PFileOperation;

struct FileOperation {
};

typedef struct FileSaveDialog FileSaveDialog, *PFileSaveDialog;

struct FileSaveDialog {
};

typedef enum FOLDERFLAGS {
    FWF_ABBREVIATEDNAMES=2,
    FWF_ALIGNLEFT=2048,
    FWF_ALLOWRTLREADING=-2147483648,
    FWF_AUTOARRANGE=1,
    FWF_AUTOCHECKSELECT=134217728,
    FWF_BESTFITWINDOW=16,
    FWF_CHECKSELECT=262144,
    FWF_DESKTOP=32,
    FWF_EXTENDEDTILES=33554432,
    FWF_FULLROWSELECT=2097152,
    FWF_HIDEFILENAMES=131072,
    FWF_NOBROWSERVIEWSTATE=268435456,
    FWF_NOCLIENTEDGE=512,
    FWF_NOCOLUMNHEADER=8388608,
    FWF_NOENUMREFRESH=524288,
    FWF_NOFILTERS=4194304,
    FWF_NOGROUPING=1048576,
    FWF_NOHEADERINALLVIEWS=16777216,
    FWF_NOICONS=4096,
    FWF_NONE=0,
    FWF_NOSCROLL=1024,
    FWF_NOSUBFOLDERS=128,
    FWF_NOVISIBLE=16384,
    FWF_NOWEBVIEW=65536,
    FWF_OWNERDATA=8,
    FWF_SHOWSELALWAYS=8192,
    FWF_SINGLECLICKACTIVATE=32768,
    FWF_SINGLESEL=64,
    FWF_SNAPTOGRID=4,
    FWF_SUBSETGROUPS=536870912,
    FWF_TRANSPARENT=256,
    FWF_TRICHECKSELECT=67108864,
    FWF_USESEARCHFOLDER=1073741824
} FOLDERFLAGS;

typedef struct FolderViewHost FolderViewHost, *PFolderViewHost;

struct FolderViewHost {
};

typedef enum FOLDERVIEWOPTIONS {
    FVO_CUSTOMORDERING=4,
    FVO_CUSTOMPOSITION=2,
    FVO_DEFAULT=0,
    FVO_NOANIMATIONS=16,
    FVO_NOSCROLLTIPS=32,
    FVO_SUPPORTHYPERLINKS=8,
    FVO_VISTALAYOUT=1
} FOLDERVIEWOPTIONS;

typedef struct FreeSpaceCategorizer FreeSpaceCategorizer, *PFreeSpaceCategorizer;

struct FreeSpaceCategorizer {
};

typedef struct FSCopyHandler FSCopyHandler, *PFSCopyHandler;

struct FSCopyHandler {
};

typedef enum FVTEXTTYPE {
    FVST_EMPTYTEXT=0
} FVTEXTTYPE;

typedef struct HomeGroup HomeGroup, *PHomeGroup;

struct HomeGroup {
};

typedef enum HOMEGROUPSHARINGCHOICES {
    HGSC_DOCUMENTSLIBRARY=8,
    HGSC_MUSICLIBRARY=1,
    HGSC_NONE=0,
    HGSC_PICTURESLIBRARY=2,
    HGSC_PRINTERS=16,
    HGSC_VIDEOSLIBRARY=4
} HOMEGROUPSHARINGCHOICES;

typedef HANDLE HTHEME;

typedef struct IAccessibleObject IAccessibleObject, *PIAccessibleObject;

typedef struct IAccessibleObjectVtbl IAccessibleObjectVtbl, *PIAccessibleObjectVtbl;

struct IAccessibleObject {
    struct IAccessibleObjectVtbl * lpVtbl;
};

struct IAccessibleObjectVtbl {
    HRESULT (* QueryInterface)(struct IAccessibleObject *, IID *, void * *);
    ULONG (* AddRef)(struct IAccessibleObject *);
    ULONG (* Release)(struct IAccessibleObject *);
    HRESULT (* SetAccessibleName)(struct IAccessibleObject *, LPCWSTR);
};

typedef struct IActionProgress IActionProgress, *PIActionProgress;

typedef struct IActionProgressVtbl IActionProgressVtbl, *PIActionProgressVtbl;

typedef enum _SPACTION SPACTION;

typedef DWORD SPBEGINF;

typedef enum _SPTEXT SPTEXT;

struct IActionProgress {
    struct IActionProgressVtbl * lpVtbl;
};

struct IActionProgressVtbl {
    HRESULT (* QueryInterface)(struct IActionProgress *, IID *, void * *);
    ULONG (* AddRef)(struct IActionProgress *);
    ULONG (* Release)(struct IActionProgress *);
    HRESULT (* Begin)(struct IActionProgress *, SPACTION, SPBEGINF);
    HRESULT (* UpdateProgress)(struct IActionProgress *, ULONGLONG, ULONGLONG);
    HRESULT (* UpdateText)(struct IActionProgress *, SPTEXT, LPCWSTR, BOOL);
    HRESULT (* QueryCancel)(struct IActionProgress *, BOOL *);
    HRESULT (* ResetCancel)(struct IActionProgress *);
    HRESULT (* End)(struct IActionProgress *);
};

typedef struct IActionProgressDialog IActionProgressDialog, *PIActionProgressDialog;

typedef struct IActionProgressDialogVtbl IActionProgressDialogVtbl, *PIActionProgressDialogVtbl;

typedef DWORD SPINITF;

struct IActionProgressDialog {
    struct IActionProgressDialogVtbl * lpVtbl;
};

struct IActionProgressDialogVtbl {
    HRESULT (* QueryInterface)(struct IActionProgressDialog *, IID *, void * *);
    ULONG (* AddRef)(struct IActionProgressDialog *);
    ULONG (* Release)(struct IActionProgressDialog *);
    HRESULT (* Initialize)(struct IActionProgressDialog *, SPINITF, LPCWSTR, LPCWSTR);
    HRESULT (* Stop)(struct IActionProgressDialog *);
};

typedef struct IApplicationAssociationRegistration IApplicationAssociationRegistration, *PIApplicationAssociationRegistration;

struct IApplicationAssociationRegistration {
};

typedef struct IApplicationAssociationRegistrationUI IApplicationAssociationRegistrationUI, *PIApplicationAssociationRegistrationUI;

struct IApplicationAssociationRegistrationUI {
};

typedef struct IApplicationDestinations IApplicationDestinations, *PIApplicationDestinations;

struct IApplicationDestinations {
};

typedef struct IApplicationDocumentLists IApplicationDocumentLists, *PIApplicationDocumentLists;

struct IApplicationDocumentLists {
};

typedef struct IAssocHandler IAssocHandler, *PIAssocHandler;

struct IAssocHandler {
};

typedef struct IAssocHandlerInvoker IAssocHandlerInvoker, *PIAssocHandlerInvoker;

struct IAssocHandlerInvoker {
};

typedef struct IAttachmentExecute IAttachmentExecute, *PIAttachmentExecute;

typedef struct IAttachmentExecuteVtbl IAttachmentExecuteVtbl, *PIAttachmentExecuteVtbl;

struct IAttachmentExecuteVtbl {
    HRESULT (* QueryInterface)(struct IAttachmentExecute *, IID *, void * *);
    ULONG (* AddRef)(struct IAttachmentExecute *);
    ULONG (* Release)(struct IAttachmentExecute *);
    HRESULT (* SetClientTitle)(struct IAttachmentExecute *, LPCWSTR);
    HRESULT (* SetClientGuid)(struct IAttachmentExecute *, GUID *);
    HRESULT (* SetLocalPath)(struct IAttachmentExecute *, LPCWSTR);
    HRESULT (* SetFileName)(struct IAttachmentExecute *, LPCWSTR);
    HRESULT (* SetSource)(struct IAttachmentExecute *, LPCWSTR);
    HRESULT (* SetReferrer)(struct IAttachmentExecute *, LPCWSTR);
    HRESULT (* CheckPolicy)(struct IAttachmentExecute *);
    HRESULT (* Prompt)(struct IAttachmentExecute *, HWND, enum ATTACHMENT_PROMPT, enum ATTACHMENT_ACTION *);
    HRESULT (* Save)(struct IAttachmentExecute *);
    HRESULT (* Execute)(struct IAttachmentExecute *, HWND, LPCWSTR, HANDLE *);
    HRESULT (* SaveWithUI)(struct IAttachmentExecute *, HWND);
    HRESULT (* ClearClientState)(struct IAttachmentExecute *);
};

struct IAttachmentExecute {
    struct IAttachmentExecuteVtbl * lpVtbl;
};

typedef struct IAutoCompleteDropDown IAutoCompleteDropDown, *PIAutoCompleteDropDown;

typedef struct IAutoCompleteDropDownVtbl IAutoCompleteDropDownVtbl, *PIAutoCompleteDropDownVtbl;

struct IAutoCompleteDropDownVtbl {
    HRESULT (* QueryInterface)(struct IAutoCompleteDropDown *, IID *, void * *);
    ULONG (* AddRef)(struct IAutoCompleteDropDown *);
    ULONG (* Release)(struct IAutoCompleteDropDown *);
    HRESULT (* GetDropDownStatus)(struct IAutoCompleteDropDown *, DWORD *, LPWSTR *);
    HRESULT (* ResetEnumerator)(struct IAutoCompleteDropDown *);
};

struct IAutoCompleteDropDown {
    struct IAutoCompleteDropDownVtbl * lpVtbl;
};

typedef struct IBandHost IBandHost, *PIBandHost;

struct IBandHost {
};

typedef struct IBandSite IBandSite, *PIBandSite;

typedef struct IBandSiteVtbl IBandSiteVtbl, *PIBandSiteVtbl;

typedef struct IDeskBand IDeskBand, *PIDeskBand;

typedef struct IDeskBandVtbl IDeskBandVtbl, *PIDeskBandVtbl;

struct IBandSiteVtbl {
    HRESULT (* QueryInterface)(struct IBandSite *, IID *, void * *);
    ULONG (* AddRef)(struct IBandSite *);
    ULONG (* Release)(struct IBandSite *);
    HRESULT (* AddBand)(struct IBandSite *, struct IUnknown *);
    HRESULT (* EnumBands)(struct IBandSite *, UINT, DWORD *);
    HRESULT (* QueryBand)(struct IBandSite *, DWORD, struct IDeskBand * *, DWORD *, LPWSTR, int);
    HRESULT (* SetBandState)(struct IBandSite *, DWORD, DWORD, DWORD);
    HRESULT (* RemoveBand)(struct IBandSite *, DWORD);
    HRESULT (* GetBandObject)(struct IBandSite *, DWORD, IID *, void * *);
    HRESULT (* SetBandSiteInfo)(struct IBandSite *, BANDSITEINFO *);
    HRESULT (* GetBandSiteInfo)(struct IBandSite *, BANDSITEINFO *);
};

struct IBandSite {
    struct IBandSiteVtbl * lpVtbl;
};

struct IDeskBandVtbl {
    HRESULT (* QueryInterface)(struct IDeskBand *, IID *, void * *);
    ULONG (* AddRef)(struct IDeskBand *);
    ULONG (* Release)(struct IDeskBand *);
    HRESULT (* GetWindow)(struct IDeskBand *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IDeskBand *, BOOL);
    HRESULT (* ShowDW)(struct IDeskBand *, BOOL);
    HRESULT (* CloseDW)(struct IDeskBand *, DWORD);
    HRESULT (* ResizeBorderDW)(struct IDeskBand *, LPCRECT, struct IUnknown *, BOOL);
    HRESULT (* GetBandInfo)(struct IDeskBand *, DWORD, DWORD, struct DESKBANDINFO *);
};

struct IDeskBand {
    struct IDeskBandVtbl * lpVtbl;
};

typedef struct IBrowserFrameOptions IBrowserFrameOptions, *PIBrowserFrameOptions;

typedef struct IBrowserFrameOptionsVtbl IBrowserFrameOptionsVtbl, *PIBrowserFrameOptionsVtbl;

struct IBrowserFrameOptions {
    struct IBrowserFrameOptionsVtbl * lpVtbl;
};

struct IBrowserFrameOptionsVtbl {
    HRESULT (* QueryInterface)(struct IBrowserFrameOptions *, IID *, void * *);
    ULONG (* AddRef)(struct IBrowserFrameOptions *);
    ULONG (* Release)(struct IBrowserFrameOptions *);
    HRESULT (* GetFrameOptions)(struct IBrowserFrameOptions *, BROWSERFRAMEOPTIONS, BROWSERFRAMEOPTIONS *);
};

typedef struct ICategorizer ICategorizer, *PICategorizer;

typedef struct ICategorizerVtbl ICategorizerVtbl, *PICategorizerVtbl;

struct ICategorizer {
    struct ICategorizerVtbl * lpVtbl;
};

struct ICategorizerVtbl {
    HRESULT (* QueryInterface)(struct ICategorizer *, IID *, void * *);
    ULONG (* AddRef)(struct ICategorizer *);
    ULONG (* Release)(struct ICategorizer *);
    HRESULT (* GetDescription)(struct ICategorizer *, LPWSTR, UINT);
    HRESULT (* GetCategory)(struct ICategorizer *, UINT, LPCITEMIDLIST *, DWORD *);
    HRESULT (* GetCategoryInfo)(struct ICategorizer *, DWORD, struct CATEGORY_INFO *);
    HRESULT (* CompareCategory)(struct ICategorizer *, enum CATSORT_FLAGS, DWORD, DWORD);
};

typedef struct ICategoryProvider ICategoryProvider, *PICategoryProvider;

typedef struct ICategoryProviderVtbl ICategoryProviderVtbl, *PICategoryProviderVtbl;

struct ICategoryProviderVtbl {
    HRESULT (* QueryInterface)(struct ICategoryProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ICategoryProvider *);
    ULONG (* Release)(struct ICategoryProvider *);
    HRESULT (* CanCategorizeOnSCID)(struct ICategoryProvider *, SHCOLUMNID *);
    HRESULT (* GetDefaultCategory)(struct ICategoryProvider *, GUID *, SHCOLUMNID *);
    HRESULT (* GetCategoryForSCID)(struct ICategoryProvider *, SHCOLUMNID *, GUID *);
    HRESULT (* EnumCategories)(struct ICategoryProvider *, struct IEnumGUID * *);
    HRESULT (* GetCategoryName)(struct ICategoryProvider *, GUID *, LPWSTR, UINT);
    HRESULT (* CreateCategory)(struct ICategoryProvider *, GUID *, IID *, void * *);
};

struct ICategoryProvider {
    struct ICategoryProviderVtbl * lpVtbl;
};

typedef struct ICDBurn ICDBurn, *PICDBurn;

typedef struct ICDBurnVtbl ICDBurnVtbl, *PICDBurnVtbl;

struct ICDBurn {
    struct ICDBurnVtbl * lpVtbl;
};

struct ICDBurnVtbl {
    HRESULT (* QueryInterface)(struct ICDBurn *, IID *, void * *);
    ULONG (* AddRef)(struct ICDBurn *);
    ULONG (* Release)(struct ICDBurn *);
    HRESULT (* GetRecorderDriveLetter)(struct ICDBurn *, LPWSTR, UINT);
    HRESULT (* Burn)(struct ICDBurn *, HWND);
    HRESULT (* HasRecordableDrive)(struct ICDBurn *, BOOL *);
};

typedef struct ICDBurnExt ICDBurnExt, *PICDBurnExt;

struct ICDBurnExt {
};

typedef struct IColumnManager IColumnManager, *PIColumnManager;

typedef struct IColumnManagerVtbl IColumnManagerVtbl, *PIColumnManagerVtbl;

struct IColumnManagerVtbl {
    HRESULT (* QueryInterface)(struct IColumnManager *, IID *, void * *);
    ULONG (* AddRef)(struct IColumnManager *);
    ULONG (* Release)(struct IColumnManager *);
    HRESULT (* SetColumnInfo)(struct IColumnManager *, PROPERTYKEY *, struct CM_COLUMNINFO *);
    HRESULT (* GetColumnInfo)(struct IColumnManager *, PROPERTYKEY *, struct CM_COLUMNINFO *);
    HRESULT (* GetColumnCount)(struct IColumnManager *, enum CM_ENUM_FLAGS, UINT *);
    HRESULT (* GetColumns)(struct IColumnManager *, enum CM_ENUM_FLAGS, PROPERTYKEY *, UINT);
    HRESULT (* SetColumns)(struct IColumnManager *, PROPERTYKEY *, UINT);
};

struct IColumnManager {
    struct IColumnManagerVtbl * lpVtbl;
};

typedef struct ICommDlgBrowser ICommDlgBrowser, *PICommDlgBrowser;

typedef struct ICommDlgBrowserVtbl ICommDlgBrowserVtbl, *PICommDlgBrowserVtbl;

struct ICommDlgBrowserVtbl {
    HRESULT (* QueryInterface)(struct ICommDlgBrowser *, IID *, void * *);
    ULONG (* AddRef)(struct ICommDlgBrowser *);
    ULONG (* Release)(struct ICommDlgBrowser *);
    HRESULT (* OnDefaultCommand)(struct ICommDlgBrowser *, struct IShellView *);
    HRESULT (* OnStateChange)(struct ICommDlgBrowser *, struct IShellView *, ULONG);
    HRESULT (* IncludeObject)(struct ICommDlgBrowser *, struct IShellView *, LPCITEMIDLIST);
};

struct ICommDlgBrowser {
    struct ICommDlgBrowserVtbl * lpVtbl;
};

typedef struct ICommDlgBrowser2 ICommDlgBrowser2, *PICommDlgBrowser2;

struct ICommDlgBrowser2 {
};

typedef struct ICommDlgBrowser3 ICommDlgBrowser3, *PICommDlgBrowser3;

typedef struct ICommDlgBrowser3Vtbl ICommDlgBrowser3Vtbl, *PICommDlgBrowser3Vtbl;

struct ICommDlgBrowser3 {
    struct ICommDlgBrowser3Vtbl * lpVtbl;
};

struct ICommDlgBrowser3Vtbl {
    HRESULT (* QueryInterface)(struct ICommDlgBrowser3 *, IID *, void * *);
    ULONG (* AddRef)(struct ICommDlgBrowser3 *);
    ULONG (* Release)(struct ICommDlgBrowser3 *);
    HRESULT (* OnDefaultCommand)(struct ICommDlgBrowser3 *, struct IShellView *);
    HRESULT (* OnStateChange)(struct ICommDlgBrowser3 *, struct IShellView *, ULONG);
    HRESULT (* IncludeObject)(struct ICommDlgBrowser3 *, struct IShellView *, LPCITEMIDLIST);
    HRESULT (* Notify)(struct ICommDlgBrowser3 *, struct IShellView *, DWORD);
    HRESULT (* GetDefaultMenuText)(struct ICommDlgBrowser3 *, struct IShellView *, LPWSTR, int);
    HRESULT (* GetViewFlags)(struct ICommDlgBrowser3 *, DWORD *);
    HRESULT (* OnColumnClicked)(struct ICommDlgBrowser3 *, struct IShellView *, int);
    HRESULT (* GetCurrentFilter)(struct ICommDlgBrowser3 *, LPWSTR, int);
    HRESULT (* OnPreViewCreated)(struct ICommDlgBrowser3 *, struct IShellView *);
};

typedef struct IComputerInfoChangeNotify IComputerInfoChangeNotify, *PIComputerInfoChangeNotify;

typedef struct IComputerInfoChangeNotifyVtbl IComputerInfoChangeNotifyVtbl, *PIComputerInfoChangeNotifyVtbl;

struct IComputerInfoChangeNotifyVtbl {
    HRESULT (* QueryInterface)(struct IComputerInfoChangeNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IComputerInfoChangeNotify *);
    ULONG (* Release)(struct IComputerInfoChangeNotify *);
    HRESULT (* ComputerInfoChanged)(struct IComputerInfoChangeNotify *);
};

struct IComputerInfoChangeNotify {
    struct IComputerInfoChangeNotifyVtbl * lpVtbl;
};

typedef struct IContextMenu IContextMenu, *PIContextMenu;

typedef struct IContextMenuVtbl IContextMenuVtbl, *PIContextMenuVtbl;

struct IContextMenu {
    struct IContextMenuVtbl * lpVtbl;
};

struct IContextMenuVtbl {
    HRESULT (* QueryInterface)(struct IContextMenu *, IID *, void * *);
    ULONG (* AddRef)(struct IContextMenu *);
    ULONG (* Release)(struct IContextMenu *);
    HRESULT (* QueryContextMenu)(struct IContextMenu *, HMENU, UINT, UINT, UINT, UINT);
    HRESULT (* InvokeCommand)(struct IContextMenu *, CMINVOKECOMMANDINFO *);
    HRESULT (* GetCommandString)(struct IContextMenu *, UINT_PTR, UINT, UINT *, LPSTR, UINT);
};

typedef struct IContextMenu2 IContextMenu2, *PIContextMenu2;

typedef struct IContextMenu2Vtbl IContextMenu2Vtbl, *PIContextMenu2Vtbl;

struct IContextMenu2 {
    struct IContextMenu2Vtbl * lpVtbl;
};

struct IContextMenu2Vtbl {
    HRESULT (* QueryInterface)(struct IContextMenu2 *, IID *, void * *);
    ULONG (* AddRef)(struct IContextMenu2 *);
    ULONG (* Release)(struct IContextMenu2 *);
    HRESULT (* QueryContextMenu)(struct IContextMenu2 *, HMENU, UINT, UINT, UINT, UINT);
    HRESULT (* InvokeCommand)(struct IContextMenu2 *, CMINVOKECOMMANDINFO *);
    HRESULT (* GetCommandString)(struct IContextMenu2 *, UINT_PTR, UINT, UINT *, LPSTR, UINT);
    HRESULT (* HandleMenuMsg)(struct IContextMenu2 *, UINT, WPARAM, LPARAM);
};

typedef struct IContextMenu3 IContextMenu3, *PIContextMenu3;

typedef struct IContextMenu3Vtbl IContextMenu3Vtbl, *PIContextMenu3Vtbl;

struct IContextMenu3 {
    struct IContextMenu3Vtbl * lpVtbl;
};

struct IContextMenu3Vtbl {
    HRESULT (* QueryInterface)(struct IContextMenu3 *, IID *, void * *);
    ULONG (* AddRef)(struct IContextMenu3 *);
    ULONG (* Release)(struct IContextMenu3 *);
    HRESULT (* QueryContextMenu)(struct IContextMenu3 *, HMENU, UINT, UINT, UINT, UINT);
    HRESULT (* InvokeCommand)(struct IContextMenu3 *, CMINVOKECOMMANDINFO *);
    HRESULT (* GetCommandString)(struct IContextMenu3 *, UINT_PTR, UINT, UINT *, LPSTR, UINT);
    HRESULT (* HandleMenuMsg)(struct IContextMenu3 *, UINT, WPARAM, LPARAM);
    HRESULT (* HandleMenuMsg2)(struct IContextMenu3 *, UINT, WPARAM, LPARAM, LRESULT *);
};

typedef struct IContextMenuSite IContextMenuSite, *PIContextMenuSite;

typedef struct IContextMenuSiteVtbl IContextMenuSiteVtbl, *PIContextMenuSiteVtbl;

struct IContextMenuSite {
    struct IContextMenuSiteVtbl * lpVtbl;
};

struct IContextMenuSiteVtbl {
    HRESULT (* QueryInterface)(struct IContextMenuSite *, IID *, void * *);
    ULONG (* AddRef)(struct IContextMenuSite *);
    ULONG (* Release)(struct IContextMenuSite *);
    HRESULT (* DoContextMenuPopup)(struct IContextMenuSite *, struct IUnknown *, UINT, POINT);
};

typedef struct IControlMarkup IControlMarkup, *PIControlMarkup;

typedef struct IControlMarkupVtbl IControlMarkupVtbl, *PIControlMarkupVtbl;

struct IControlMarkup {
    struct IControlMarkupVtbl * lpVtbl;
};

struct IControlMarkupVtbl {
    HRESULT (* QueryInterface)(struct IControlMarkup *, IID *, void * *);
    ULONG (* AddRef)(struct IControlMarkup *);
    ULONG (* Release)(struct IControlMarkup *);
    HRESULT (* SetCallback)(struct IControlMarkup *, struct IUnknown *);
    HRESULT (* GetCallback)(struct IControlMarkup *, IID *, void * *);
    HRESULT (* SetId)(struct IControlMarkup *, DWORD);
    HRESULT (* GetId)(struct IControlMarkup *, DWORD *);
    HRESULT (* SetFonts)(struct IControlMarkup *, HFONT, HFONT);
    HRESULT (* GetFonts)(struct IControlMarkup *, HFONT *, HFONT *);
    HRESULT (* SetText)(struct IControlMarkup *, LPCWSTR);
    HRESULT (* GetText)(struct IControlMarkup *, BOOL, LPWSTR, DWORD *);
    HRESULT (* SetLinkText)(struct IControlMarkup *, int, UINT, LPCWSTR);
    HRESULT (* GetLinkText)(struct IControlMarkup *, int, UINT, LPWSTR, DWORD *);
    HRESULT (* SetRenderFlags)(struct IControlMarkup *, UINT);
    HRESULT (* GetRenderFlags)(struct IControlMarkup *, UINT *, HTHEME *, int *, int *, int *);
    HRESULT (* SetThemeRenderFlags)(struct IControlMarkup *, UINT, HTHEME, int, int, int);
    HRESULT (* GetState)(struct IControlMarkup *, int, UINT, UINT *);
    HRESULT (* SetState)(struct IControlMarkup *, int, UINT, UINT);
    HRESULT (* DrawTextA)(struct IControlMarkup *, HDC, LPCRECT);
    HRESULT (* SetLinkCursor)(struct IControlMarkup *);
    HRESULT (* CalcIdealSize)(struct IControlMarkup *, HDC, UINT, RECT *);
    HRESULT (* SetFocus)(struct IControlMarkup *);
    HRESULT (* KillFocus)(struct IControlMarkup *);
    HRESULT (* IsTabbable)(struct IControlMarkup *);
    HRESULT (* OnButtonDown)(struct IControlMarkup *, POINT);
    HRESULT (* OnButtonUp)(struct IControlMarkup *, POINT);
    HRESULT (* OnKeyDown)(struct IControlMarkup *, UINT);
    HRESULT (* HitTest)(struct IControlMarkup *, POINT, int *);
    HRESULT (* GetLinkRect)(struct IControlMarkup *, int, RECT *);
    HRESULT (* GetControlRect)(struct IControlMarkup *, RECT *);
    HRESULT (* GetLinkCount)(struct IControlMarkup *, UINT *);
};

typedef struct ICurrentItem ICurrentItem, *PICurrentItem;

struct ICurrentItem {
};

typedef struct ICustomDestinationList ICustomDestinationList, *PICustomDestinationList;

struct ICustomDestinationList {
};

typedef struct IDefaultExtractIconInit IDefaultExtractIconInit, *PIDefaultExtractIconInit;

typedef struct IDefaultExtractIconInitVtbl IDefaultExtractIconInitVtbl, *PIDefaultExtractIconInitVtbl;

struct IDefaultExtractIconInit {
    struct IDefaultExtractIconInitVtbl * lpVtbl;
};

struct IDefaultExtractIconInitVtbl {
    HRESULT (* QueryInterface)(struct IDefaultExtractIconInit *, IID *, void * *);
    ULONG (* AddRef)(struct IDefaultExtractIconInit *);
    ULONG (* Release)(struct IDefaultExtractIconInit *);
    HRESULT (* SetFlags)(struct IDefaultExtractIconInit *, UINT);
    HRESULT (* SetKey)(struct IDefaultExtractIconInit *, HKEY);
    HRESULT (* SetNormalIcon)(struct IDefaultExtractIconInit *, LPCWSTR, int);
    HRESULT (* SetOpenIcon)(struct IDefaultExtractIconInit *, LPCWSTR, int);
    HRESULT (* SetShortcutIcon)(struct IDefaultExtractIconInit *, LPCWSTR, int);
    HRESULT (* SetDefaultIcon)(struct IDefaultExtractIconInit *, LPCWSTR, int);
};

typedef struct IDelegateFolder IDelegateFolder, *PIDelegateFolder;

typedef struct IDelegateFolderVtbl IDelegateFolderVtbl, *PIDelegateFolderVtbl;

struct IDelegateFolder {
    struct IDelegateFolderVtbl * lpVtbl;
};

struct IDelegateFolderVtbl {
    HRESULT (* QueryInterface)(struct IDelegateFolder *, IID *, void * *);
    ULONG (* AddRef)(struct IDelegateFolder *);
    ULONG (* Release)(struct IDelegateFolder *);
    HRESULT (* SetItemAlloc)(struct IDelegateFolder *, struct IMalloc *);
};

typedef struct IDelegateItem IDelegateItem, *PIDelegateItem;

struct IDelegateItem {
};

typedef struct IDeskBand2 IDeskBand2, *PIDeskBand2;

struct IDeskBand2 {
};

typedef struct IDeskBandInfo IDeskBandInfo, *PIDeskBandInfo;

struct IDeskBandInfo {
};

typedef struct IDeskBar IDeskBar, *PIDeskBar;

typedef struct IDeskBarVtbl IDeskBarVtbl, *PIDeskBarVtbl;

struct IDeskBar {
    struct IDeskBarVtbl * lpVtbl;
};

struct IDeskBarVtbl {
    HRESULT (* QueryInterface)(struct IDeskBar *, IID *, void * *);
    ULONG (* AddRef)(struct IDeskBar *);
    ULONG (* Release)(struct IDeskBar *);
    HRESULT (* GetWindow)(struct IDeskBar *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IDeskBar *, BOOL);
    HRESULT (* SetClient)(struct IDeskBar *, struct IUnknown *);
    HRESULT (* GetClient)(struct IDeskBar *, struct IUnknown * *);
    HRESULT (* OnPosRectChangeDB)(struct IDeskBar *, RECT *);
};

typedef struct IDesktopGadget IDesktopGadget, *PIDesktopGadget;

typedef struct IDesktopGadgetVtbl IDesktopGadgetVtbl, *PIDesktopGadgetVtbl;

struct IDesktopGadget {
    struct IDesktopGadgetVtbl * lpVtbl;
};

struct IDesktopGadgetVtbl {
    HRESULT (* QueryInterface)(struct IDesktopGadget *, IID *, void * *);
    ULONG (* AddRef)(struct IDesktopGadget *);
    ULONG (* Release)(struct IDesktopGadget *);
    HRESULT (* RunGadget)(struct IDesktopGadget *, LPCWSTR);
};

typedef struct IDestinationStreamFactory IDestinationStreamFactory, *PIDestinationStreamFactory;

typedef struct IDestinationStreamFactoryVtbl IDestinationStreamFactoryVtbl, *PIDestinationStreamFactoryVtbl;

struct IDestinationStreamFactory {
    struct IDestinationStreamFactoryVtbl * lpVtbl;
};

struct IDestinationStreamFactoryVtbl {
    HRESULT (* QueryInterface)(struct IDestinationStreamFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IDestinationStreamFactory *);
    ULONG (* Release)(struct IDestinationStreamFactory *);
    HRESULT (* GetDestinationStream)(struct IDestinationStreamFactory *, struct IStream * *);
};

typedef struct IDisplayItem IDisplayItem, *PIDisplayItem;

struct IDisplayItem {
};

typedef struct IDockingWindow IDockingWindow, *PIDockingWindow;

typedef struct IDockingWindowVtbl IDockingWindowVtbl, *PIDockingWindowVtbl;

struct IDockingWindowVtbl {
    HRESULT (* QueryInterface)(struct IDockingWindow *, IID *, void * *);
    ULONG (* AddRef)(struct IDockingWindow *);
    ULONG (* Release)(struct IDockingWindow *);
    HRESULT (* GetWindow)(struct IDockingWindow *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IDockingWindow *, BOOL);
    HRESULT (* ShowDW)(struct IDockingWindow *, BOOL);
    HRESULT (* CloseDW)(struct IDockingWindow *, DWORD);
    HRESULT (* ResizeBorderDW)(struct IDockingWindow *, LPCRECT, struct IUnknown *, BOOL);
};

struct IDockingWindow {
    struct IDockingWindowVtbl * lpVtbl;
};

typedef struct IDragSourceHelper IDragSourceHelper, *PIDragSourceHelper;

struct IDragSourceHelper {
};

typedef struct IDragSourceHelper2 IDragSourceHelper2, *PIDragSourceHelper2;

struct IDragSourceHelper2 {
};

typedef struct IDropTargetHelper IDropTargetHelper, *PIDropTargetHelper;

struct IDropTargetHelper {
};

typedef struct IDynamicHWHandler IDynamicHWHandler, *PIDynamicHWHandler;

struct IDynamicHWHandler {
};

typedef struct IENamespaceTreeControl IENamespaceTreeControl, *PIENamespaceTreeControl;

struct IENamespaceTreeControl {
};

typedef struct IEnumAssocHandlers IEnumAssocHandlers, *PIEnumAssocHandlers;

struct IEnumAssocHandlers {
};

typedef struct IEnumerableView IEnumerableView, *PIEnumerableView;

typedef struct IEnumerableViewVtbl IEnumerableViewVtbl, *PIEnumerableViewVtbl;

typedef struct IEnumReadyCallback IEnumReadyCallback, *PIEnumReadyCallback;

typedef struct IEnumReadyCallbackVtbl IEnumReadyCallbackVtbl, *PIEnumReadyCallbackVtbl;

struct IEnumerableViewVtbl {
    HRESULT (* QueryInterface)(struct IEnumerableView *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumerableView *);
    ULONG (* Release)(struct IEnumerableView *);
    HRESULT (* SetEnumReadyCallback)(struct IEnumerableView *, struct IEnumReadyCallback *);
    HRESULT (* CreateEnumIDListFromContents)(struct IEnumerableView *, LPCITEMIDLIST, DWORD, struct IEnumIDList * *);
};

struct IEnumerableView {
    struct IEnumerableViewVtbl * lpVtbl;
};

struct IEnumReadyCallbackVtbl {
    HRESULT (* QueryInterface)(struct IEnumReadyCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumReadyCallback *);
    ULONG (* Release)(struct IEnumReadyCallback *);
    HRESULT (* EnumReady)(struct IEnumReadyCallback *);
};

struct IEnumReadyCallback {
    struct IEnumReadyCallbackVtbl * lpVtbl;
};

typedef struct IEnumExplorerCommand IEnumExplorerCommand, *PIEnumExplorerCommand;

typedef struct IEnumExplorerCommandVtbl IEnumExplorerCommandVtbl, *PIEnumExplorerCommandVtbl;

typedef struct IExplorerCommand IExplorerCommand, *PIExplorerCommand;

typedef struct IExplorerCommandVtbl IExplorerCommandVtbl, *PIExplorerCommandVtbl;

typedef struct IShellItemArray IShellItemArray, *PIShellItemArray;

typedef struct IShellItemArrayVtbl IShellItemArrayVtbl, *PIShellItemArrayVtbl;

typedef enum SIATTRIBFLAGS {
    SIATTRIBFLAGS_ALLITEMS=16384,
    SIATTRIBFLAGS_AND=1,
    SIATTRIBFLAGS_APPCOMPAT=3,
    SIATTRIBFLAGS_MASK=3,
    SIATTRIBFLAGS_OR=2
} SIATTRIBFLAGS;

typedef struct IShellItem IShellItem, *PIShellItem;

typedef struct IEnumShellItems IEnumShellItems, *PIEnumShellItems;

typedef struct IShellItemVtbl IShellItemVtbl, *PIShellItemVtbl;

typedef enum _SIGDN SIGDN;

typedef DWORD SICHINTF;

struct IShellItemVtbl {
    HRESULT (* QueryInterface)(struct IShellItem *, IID *, void * *);
    ULONG (* AddRef)(struct IShellItem *);
    ULONG (* Release)(struct IShellItem *);
    HRESULT (* BindToHandler)(struct IShellItem *, struct IBindCtx *, GUID *, IID *, void * *);
    HRESULT (* GetParent)(struct IShellItem *, struct IShellItem * *);
    HRESULT (* GetDisplayName)(struct IShellItem *, SIGDN, LPWSTR *);
    HRESULT (* GetAttributes)(struct IShellItem *, SFGAOF, SFGAOF *);
    HRESULT (* Compare)(struct IShellItem *, struct IShellItem *, SICHINTF, int *);
};

struct IShellItem {
    struct IShellItemVtbl * lpVtbl;
};

struct IEnumExplorerCommand {
    struct IEnumExplorerCommandVtbl * lpVtbl;
};

struct IEnumShellItems {
};

struct IEnumExplorerCommandVtbl {
    HRESULT (* QueryInterface)(struct IEnumExplorerCommand *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumExplorerCommand *);
    ULONG (* Release)(struct IEnumExplorerCommand *);
    HRESULT (* Next)(struct IEnumExplorerCommand *, ULONG, struct IExplorerCommand * *, ULONG *);
    HRESULT (* Skip)(struct IEnumExplorerCommand *, ULONG);
    HRESULT (* Reset)(struct IEnumExplorerCommand *);
    HRESULT (* Clone)(struct IEnumExplorerCommand *, struct IEnumExplorerCommand * *);
};

struct IShellItemArray {
    struct IShellItemArrayVtbl * lpVtbl;
};

struct IShellItemArrayVtbl {
    HRESULT (* QueryInterface)(struct IShellItemArray *, IID *, void * *);
    ULONG (* AddRef)(struct IShellItemArray *);
    ULONG (* Release)(struct IShellItemArray *);
    HRESULT (* BindToHandler)(struct IShellItemArray *, struct IBindCtx *, GUID *, IID *, void * *);
    HRESULT (* GetPropertyStore)(struct IShellItemArray *, enum GETPROPERTYSTOREFLAGS, IID *, void * *);
    HRESULT (* GetPropertyDescriptionList)(struct IShellItemArray *, PROPERTYKEY *, IID *, void * *);
    HRESULT (* GetAttributes)(struct IShellItemArray *, enum SIATTRIBFLAGS, SFGAOF, SFGAOF *);
    HRESULT (* GetCount)(struct IShellItemArray *, DWORD *);
    HRESULT (* GetItemAt)(struct IShellItemArray *, DWORD, struct IShellItem * *);
    HRESULT (* EnumItems)(struct IShellItemArray *, struct IEnumShellItems * *);
};

struct IExplorerCommand {
    struct IExplorerCommandVtbl * lpVtbl;
};

struct IExplorerCommandVtbl {
    HRESULT (* QueryInterface)(struct IExplorerCommand *, IID *, void * *);
    ULONG (* AddRef)(struct IExplorerCommand *);
    ULONG (* Release)(struct IExplorerCommand *);
    HRESULT (* GetTitle)(struct IExplorerCommand *, struct IShellItemArray *, LPWSTR *);
    HRESULT (* GetIcon)(struct IExplorerCommand *, struct IShellItemArray *, LPWSTR *);
    HRESULT (* GetToolTip)(struct IExplorerCommand *, struct IShellItemArray *, LPWSTR *);
    HRESULT (* GetCanonicalName)(struct IExplorerCommand *, GUID *);
    HRESULT (* GetState)(struct IExplorerCommand *, struct IShellItemArray *, BOOL, EXPCMDSTATE *);
    HRESULT (* Invoke)(struct IExplorerCommand *, struct IShellItemArray *, struct IBindCtx *);
    HRESULT (* GetFlags)(struct IExplorerCommand *, EXPCMDFLAGS *);
    HRESULT (* EnumSubCommands)(struct IExplorerCommand *, struct IEnumExplorerCommand * *);
};

typedef struct IEnumExtraSearch IEnumExtraSearch, *PIEnumExtraSearch;

typedef struct IEnumExtraSearchVtbl IEnumExtraSearchVtbl, *PIEnumExtraSearchVtbl;

struct IEnumExtraSearchVtbl {
    HRESULT (* QueryInterface)(struct IEnumExtraSearch *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumExtraSearch *);
    ULONG (* Release)(struct IEnumExtraSearch *);
    HRESULT (* Next)(struct IEnumExtraSearch *, ULONG, struct EXTRASEARCH *, ULONG *);
    HRESULT (* Skip)(struct IEnumExtraSearch *, ULONG);
    HRESULT (* Reset)(struct IEnumExtraSearch *);
    HRESULT (* Clone)(struct IEnumExtraSearch *, struct IEnumExtraSearch * *);
};

struct IEnumExtraSearch {
    struct IEnumExtraSearchVtbl * lpVtbl;
};

typedef struct IEnumFullIDList IEnumFullIDList, *PIEnumFullIDList;

typedef struct IEnumFullIDListVtbl IEnumFullIDListVtbl, *PIEnumFullIDListVtbl;

struct IEnumFullIDListVtbl {
    HRESULT (* QueryInterface)(struct IEnumFullIDList *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumFullIDList *);
    ULONG (* Release)(struct IEnumFullIDList *);
    HRESULT (* Next)(struct IEnumFullIDList *, ULONG, LPITEMIDLIST *, ULONG *);
    HRESULT (* Skip)(struct IEnumFullIDList *, ULONG);
    HRESULT (* Reset)(struct IEnumFullIDList *);
    HRESULT (* Clone)(struct IEnumFullIDList *, struct IEnumFullIDList * *);
};

struct IEnumFullIDList {
    struct IEnumFullIDListVtbl * lpVtbl;
};

typedef struct IEnumObjects IEnumObjects, *PIEnumObjects;

typedef struct IEnumObjectsVtbl IEnumObjectsVtbl, *PIEnumObjectsVtbl;

struct IEnumObjects {
    struct IEnumObjectsVtbl * lpVtbl;
};

struct IEnumObjectsVtbl {
    HRESULT (* QueryInterface)(struct IEnumObjects *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumObjects *);
    ULONG (* Release)(struct IEnumObjects *);
    HRESULT (* Next)(struct IEnumObjects *, ULONG, IID *, void * *, ULONG *);
    HRESULT (* Skip)(struct IEnumObjects *, ULONG);
    HRESULT (* Reset)(struct IEnumObjects *);
    HRESULT (* Clone)(struct IEnumObjects *, struct IEnumObjects * *);
};

typedef struct IEnumResources IEnumResources, *PIEnumResources;

typedef struct IEnumResourcesVtbl IEnumResourcesVtbl, *PIEnumResourcesVtbl;

typedef struct SHELL_ITEM_RESOURCE SHELL_ITEM_RESOURCE, *PSHELL_ITEM_RESOURCE;

struct IEnumResourcesVtbl {
    HRESULT (* QueryInterface)(struct IEnumResources *, IID *, void * *);
    ULONG (* AddRef)(struct IEnumResources *);
    ULONG (* Release)(struct IEnumResources *);
    HRESULT (* Next)(struct IEnumResources *, ULONG, struct SHELL_ITEM_RESOURCE *, ULONG *);
    HRESULT (* Skip)(struct IEnumResources *, ULONG);
    HRESULT (* Reset)(struct IEnumResources *);
    HRESULT (* Clone)(struct IEnumResources *, struct IEnumResources * *);
};

struct SHELL_ITEM_RESOURCE {
    GUID guidType;
    WCHAR szName[260];
};

struct IEnumResources {
    struct IEnumResourcesVtbl * lpVtbl;
};

typedef struct IExecuteCommand IExecuteCommand, *PIExecuteCommand;

typedef struct IExecuteCommandVtbl IExecuteCommandVtbl, *PIExecuteCommandVtbl;

struct IExecuteCommand {
    struct IExecuteCommandVtbl * lpVtbl;
};

struct IExecuteCommandVtbl {
    HRESULT (* QueryInterface)(struct IExecuteCommand *, IID *, void * *);
    ULONG (* AddRef)(struct IExecuteCommand *);
    ULONG (* Release)(struct IExecuteCommand *);
    HRESULT (* SetKeyState)(struct IExecuteCommand *, DWORD);
    HRESULT (* SetParameters)(struct IExecuteCommand *, LPCWSTR);
    HRESULT (* SetPosition)(struct IExecuteCommand *, POINT);
    HRESULT (* SetShowWindow)(struct IExecuteCommand *, int);
    HRESULT (* SetNoShowUI)(struct IExecuteCommand *, BOOL);
    HRESULT (* SetDirectory)(struct IExecuteCommand *, LPCWSTR);
    HRESULT (* Execute)(struct IExecuteCommand *);
};

typedef struct IExplorerBrowser IExplorerBrowser, *PIExplorerBrowser;

typedef struct IExplorerBrowserVtbl IExplorerBrowserVtbl, *PIExplorerBrowserVtbl;

typedef HANDLE HDWP;

typedef struct IExplorerBrowserEvents IExplorerBrowserEvents, *PIExplorerBrowserEvents;

typedef struct IExplorerBrowserEventsVtbl IExplorerBrowserEventsVtbl, *PIExplorerBrowserEventsVtbl;

struct IExplorerBrowserEvents {
    struct IExplorerBrowserEventsVtbl * lpVtbl;
};

struct IExplorerBrowser {
    struct IExplorerBrowserVtbl * lpVtbl;
};

struct IExplorerBrowserVtbl {
    HRESULT (* QueryInterface)(struct IExplorerBrowser *, IID *, void * *);
    ULONG (* AddRef)(struct IExplorerBrowser *);
    ULONG (* Release)(struct IExplorerBrowser *);
    HRESULT (* Initialize)(struct IExplorerBrowser *, HWND, RECT *, struct FOLDERSETTINGS *);
    HRESULT (* Destroy)(struct IExplorerBrowser *);
    HRESULT (* SetRect)(struct IExplorerBrowser *, HDWP *, RECT);
    HRESULT (* SetPropertyBag)(struct IExplorerBrowser *, LPCWSTR);
    HRESULT (* SetEmptyText)(struct IExplorerBrowser *, LPCWSTR);
    HRESULT (* SetFolderSettings)(struct IExplorerBrowser *, struct FOLDERSETTINGS *);
    HRESULT (* Advise)(struct IExplorerBrowser *, struct IExplorerBrowserEvents *, DWORD *);
    HRESULT (* Unadvise)(struct IExplorerBrowser *, DWORD);
    HRESULT (* SetOptions)(struct IExplorerBrowser *, enum EXPLORER_BROWSER_OPTIONS);
    HRESULT (* GetOptions)(struct IExplorerBrowser *, enum EXPLORER_BROWSER_OPTIONS *);
    HRESULT (* BrowseToIDList)(struct IExplorerBrowser *, LPCITEMIDLIST, UINT);
    HRESULT (* BrowseToObject)(struct IExplorerBrowser *, struct IUnknown *, UINT);
    HRESULT (* FillFromObject)(struct IExplorerBrowser *, struct IUnknown *, enum EXPLORER_BROWSER_FILL_FLAGS);
    HRESULT (* RemoveAll)(struct IExplorerBrowser *);
    HRESULT (* GetCurrentView)(struct IExplorerBrowser *, IID *, void * *);
};

struct IExplorerBrowserEventsVtbl {
    HRESULT (* QueryInterface)(struct IExplorerBrowserEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IExplorerBrowserEvents *);
    ULONG (* Release)(struct IExplorerBrowserEvents *);
    HRESULT (* OnNavigationPending)(struct IExplorerBrowserEvents *, LPCITEMIDLIST);
    HRESULT (* OnViewCreated)(struct IExplorerBrowserEvents *, struct IShellView *);
    HRESULT (* OnNavigationComplete)(struct IExplorerBrowserEvents *, LPCITEMIDLIST);
    HRESULT (* OnNavigationFailed)(struct IExplorerBrowserEvents *, LPCITEMIDLIST);
};

typedef struct IExplorerCommandProvider IExplorerCommandProvider, *PIExplorerCommandProvider;

typedef struct IExplorerCommandProviderVtbl IExplorerCommandProviderVtbl, *PIExplorerCommandProviderVtbl;

struct IExplorerCommandProvider {
    struct IExplorerCommandProviderVtbl * lpVtbl;
};

struct IExplorerCommandProviderVtbl {
    HRESULT (* QueryInterface)(struct IExplorerCommandProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IExplorerCommandProvider *);
    ULONG (* Release)(struct IExplorerCommandProvider *);
    HRESULT (* GetCommands)(struct IExplorerCommandProvider *, struct IUnknown *, IID *, void * *);
    HRESULT (* GetCommand)(struct IExplorerCommandProvider *, GUID *, IID *, void * *);
};

typedef struct IExplorerCommandState IExplorerCommandState, *PIExplorerCommandState;

typedef struct IExplorerCommandStateVtbl IExplorerCommandStateVtbl, *PIExplorerCommandStateVtbl;

struct IExplorerCommandStateVtbl {
    HRESULT (* QueryInterface)(struct IExplorerCommandState *, IID *, void * *);
    ULONG (* AddRef)(struct IExplorerCommandState *);
    ULONG (* Release)(struct IExplorerCommandState *);
    HRESULT (* GetState)(struct IExplorerCommandState *, struct IShellItemArray *, BOOL, EXPCMDSTATE *);
};

struct IExplorerCommandState {
    struct IExplorerCommandStateVtbl * lpVtbl;
};

typedef struct IExplorerPaneVisibility IExplorerPaneVisibility, *PIExplorerPaneVisibility;

struct IExplorerPaneVisibility {
};

typedef struct IExtractImage IExtractImage, *PIExtractImage;

typedef struct IExtractImageVtbl IExtractImageVtbl, *PIExtractImageVtbl;

struct IExtractImage {
    struct IExtractImageVtbl * lpVtbl;
};

struct IExtractImageVtbl {
    HRESULT (* QueryInterface)(struct IExtractImage *, IID *, void * *);
    ULONG (* AddRef)(struct IExtractImage *);
    ULONG (* Release)(struct IExtractImage *);
    HRESULT (* GetLocation)(struct IExtractImage *, LPWSTR, DWORD, DWORD *, SIZE *, DWORD, DWORD *);
    HRESULT (* Extract)(struct IExtractImage *, HBITMAP *);
};

typedef struct IExtractImage2 IExtractImage2, *PIExtractImage2;

typedef struct IExtractImage2Vtbl IExtractImage2Vtbl, *PIExtractImage2Vtbl;

struct IExtractImage2Vtbl {
    HRESULT (* QueryInterface)(struct IExtractImage2 *, IID *, void * *);
    ULONG (* AddRef)(struct IExtractImage2 *);
    ULONG (* Release)(struct IExtractImage2 *);
    HRESULT (* GetLocation)(struct IExtractImage2 *, LPWSTR, DWORD, DWORD *, SIZE *, DWORD, DWORD *);
    HRESULT (* Extract)(struct IExtractImage2 *, HBITMAP *);
    HRESULT (* GetDateStamp)(struct IExtractImage2 *, FILETIME *);
};

struct IExtractImage2 {
    struct IExtractImage2Vtbl * lpVtbl;
};

typedef struct IFileDialog IFileDialog, *PIFileDialog;

struct IFileDialog {
};

typedef struct IFileDialog2 IFileDialog2, *PIFileDialog2;

struct IFileDialog2 {
};

typedef struct IFileDialogControlEvents IFileDialogControlEvents, *PIFileDialogControlEvents;

struct IFileDialogControlEvents {
};

typedef struct IFileDialogCustomize IFileDialogCustomize, *PIFileDialogCustomize;

struct IFileDialogCustomize {
};

typedef struct IFileDialogEvents IFileDialogEvents, *PIFileDialogEvents;

struct IFileDialogEvents {
};

typedef struct IFileIsInUse IFileIsInUse, *PIFileIsInUse;

struct IFileIsInUse {
};

typedef struct IFileOpenDialog IFileOpenDialog, *PIFileOpenDialog;

struct IFileOpenDialog {
};

typedef struct IFileOperation IFileOperation, *PIFileOperation;

typedef struct IFileOperationVtbl IFileOperationVtbl, *PIFileOperationVtbl;

typedef struct IFileOperationProgressSink IFileOperationProgressSink, *PIFileOperationProgressSink;

typedef struct IOperationsProgressDialog IOperationsProgressDialog, *PIOperationsProgressDialog;

typedef struct IFileOperationProgressSinkVtbl IFileOperationProgressSinkVtbl, *PIFileOperationProgressSinkVtbl;

typedef struct IOperationsProgressDialogVtbl IOperationsProgressDialogVtbl, *PIOperationsProgressDialogVtbl;

typedef DWORD OPPROGDLGF;

typedef DWORD PDMODE;

typedef enum PDOPSTATUS {
    PDOPS_CANCELLED=3,
    PDOPS_ERRORS=5,
    PDOPS_PAUSED=2,
    PDOPS_RUNNING=1,
    PDOPS_STOPPED=4
} PDOPSTATUS;

struct IOperationsProgressDialog {
    struct IOperationsProgressDialogVtbl * lpVtbl;
};

struct IOperationsProgressDialogVtbl {
    HRESULT (* QueryInterface)(struct IOperationsProgressDialog *, IID *, void * *);
    ULONG (* AddRef)(struct IOperationsProgressDialog *);
    ULONG (* Release)(struct IOperationsProgressDialog *);
    HRESULT (* StartProgressDialog)(struct IOperationsProgressDialog *, HWND, OPPROGDLGF);
    HRESULT (* StopProgressDialog)(struct IOperationsProgressDialog *);
    HRESULT (* SetOperation)(struct IOperationsProgressDialog *, SPACTION);
    HRESULT (* SetMode)(struct IOperationsProgressDialog *, PDMODE);
    HRESULT (* UpdateProgress)(struct IOperationsProgressDialog *, ULONGLONG, ULONGLONG, ULONGLONG, ULONGLONG, ULONGLONG, ULONGLONG);
    HRESULT (* UpdateLocations)(struct IOperationsProgressDialog *, struct IShellItem *, struct IShellItem *, struct IShellItem *);
    HRESULT (* ResetTimer)(struct IOperationsProgressDialog *);
    HRESULT (* PauseTimer)(struct IOperationsProgressDialog *);
    HRESULT (* ResumeTimer)(struct IOperationsProgressDialog *);
    HRESULT (* GetMilliseconds)(struct IOperationsProgressDialog *, ULONGLONG *, ULONGLONG *);
    HRESULT (* GetOperationStatus)(struct IOperationsProgressDialog *, enum PDOPSTATUS *);
};

struct IFileOperationVtbl {
    HRESULT (* QueryInterface)(struct IFileOperation *, IID *, void * *);
    ULONG (* AddRef)(struct IFileOperation *);
    ULONG (* Release)(struct IFileOperation *);
    HRESULT (* Advise)(struct IFileOperation *, struct IFileOperationProgressSink *, DWORD *);
    HRESULT (* Unadvise)(struct IFileOperation *, DWORD);
    HRESULT (* SetOperationFlags)(struct IFileOperation *, DWORD);
    HRESULT (* SetProgressMessage)(struct IFileOperation *, LPCWSTR);
    HRESULT (* SetProgressDialog)(struct IFileOperation *, struct IOperationsProgressDialog *);
    HRESULT (* SetProperties)(struct IFileOperation *, struct IPropertyChangeArray *);
    HRESULT (* SetOwnerWindow)(struct IFileOperation *, HWND);
    HRESULT (* ApplyPropertiesToItem)(struct IFileOperation *, struct IShellItem *);
    HRESULT (* ApplyPropertiesToItems)(struct IFileOperation *, struct IUnknown *);
    HRESULT (* RenameItem)(struct IFileOperation *, struct IShellItem *, LPCWSTR, struct IFileOperationProgressSink *);
    HRESULT (* RenameItems)(struct IFileOperation *, struct IUnknown *, LPCWSTR);
    HRESULT (* MoveItem)(struct IFileOperation *, struct IShellItem *, struct IShellItem *, LPCWSTR, struct IFileOperationProgressSink *);
    HRESULT (* MoveItems)(struct IFileOperation *, struct IUnknown *, struct IShellItem *);
    HRESULT (* CopyItem)(struct IFileOperation *, struct IShellItem *, struct IShellItem *, LPCWSTR, struct IFileOperationProgressSink *);
    HRESULT (* CopyItems)(struct IFileOperation *, struct IUnknown *, struct IShellItem *);
    HRESULT (* DeleteItem)(struct IFileOperation *, struct IShellItem *, struct IFileOperationProgressSink *);
    HRESULT (* DeleteItems)(struct IFileOperation *, struct IUnknown *);
    HRESULT (* NewItem)(struct IFileOperation *, struct IShellItem *, DWORD, LPCWSTR, LPCWSTR, struct IFileOperationProgressSink *);
    HRESULT (* PerformOperations)(struct IFileOperation *);
    HRESULT (* GetAnyOperationsAborted)(struct IFileOperation *, BOOL *);
};

struct IFileOperationProgressSink {
    struct IFileOperationProgressSinkVtbl * lpVtbl;
};

struct IFileOperation {
    struct IFileOperationVtbl * lpVtbl;
};

struct IFileOperationProgressSinkVtbl {
    HRESULT (* QueryInterface)(struct IFileOperationProgressSink *, IID *, void * *);
    ULONG (* AddRef)(struct IFileOperationProgressSink *);
    ULONG (* Release)(struct IFileOperationProgressSink *);
    HRESULT (* StartOperations)(struct IFileOperationProgressSink *);
    HRESULT (* FinishOperations)(struct IFileOperationProgressSink *, HRESULT);
    HRESULT (* PreRenameItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, LPCWSTR);
    HRESULT (* PostRenameItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, LPCWSTR, HRESULT, struct IShellItem *);
    HRESULT (* PreMoveItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, struct IShellItem *, LPCWSTR);
    HRESULT (* PostMoveItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, struct IShellItem *, LPCWSTR, HRESULT, struct IShellItem *);
    HRESULT (* PreCopyItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, struct IShellItem *, LPCWSTR);
    HRESULT (* PostCopyItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, struct IShellItem *, LPCWSTR, HRESULT, struct IShellItem *);
    HRESULT (* PreDeleteItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *);
    HRESULT (* PostDeleteItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, HRESULT, struct IShellItem *);
    HRESULT (* PreNewItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, LPCWSTR);
    HRESULT (* PostNewItem)(struct IFileOperationProgressSink *, DWORD, struct IShellItem *, LPCWSTR, LPCWSTR, DWORD, HRESULT, struct IShellItem *);
    HRESULT (* UpdateProgress)(struct IFileOperationProgressSink *, UINT, UINT);
    HRESULT (* ResetTimer)(struct IFileOperationProgressSink *);
    HRESULT (* PauseTimer)(struct IFileOperationProgressSink *);
    HRESULT (* ResumeTimer)(struct IFileOperationProgressSink *);
};

typedef struct IFileSaveDialog IFileSaveDialog, *PIFileSaveDialog;

struct IFileSaveDialog {
};

typedef struct IFileSystemBindData IFileSystemBindData, *PIFileSystemBindData;

typedef struct IFileSystemBindDataVtbl IFileSystemBindDataVtbl, *PIFileSystemBindDataVtbl;

typedef struct _WIN32_FIND_DATAW _WIN32_FIND_DATAW, *P_WIN32_FIND_DATAW;

typedef struct _WIN32_FIND_DATAW WIN32_FIND_DATAW;

struct IFileSystemBindDataVtbl {
    HRESULT (* QueryInterface)(struct IFileSystemBindData *, IID *, void * *);
    ULONG (* AddRef)(struct IFileSystemBindData *);
    ULONG (* Release)(struct IFileSystemBindData *);
    HRESULT (* SetFindData)(struct IFileSystemBindData *, WIN32_FIND_DATAW *);
    HRESULT (* GetFindData)(struct IFileSystemBindData *, WIN32_FIND_DATAW *);
};

struct _WIN32_FIND_DATAW {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    WCHAR cFileName[260];
    WCHAR cAlternateFileName[14];
};

struct IFileSystemBindData {
    struct IFileSystemBindDataVtbl * lpVtbl;
};

typedef struct IFileSystemBindData2 IFileSystemBindData2, *PIFileSystemBindData2;

typedef struct IFileSystemBindData2Vtbl IFileSystemBindData2Vtbl, *PIFileSystemBindData2Vtbl;

struct IFileSystemBindData2 {
    struct IFileSystemBindData2Vtbl * lpVtbl;
};

struct IFileSystemBindData2Vtbl {
    HRESULT (* QueryInterface)(struct IFileSystemBindData2 *, IID *, void * *);
    ULONG (* AddRef)(struct IFileSystemBindData2 *);
    ULONG (* Release)(struct IFileSystemBindData2 *);
    HRESULT (* SetFindData)(struct IFileSystemBindData2 *, WIN32_FIND_DATAW *);
    HRESULT (* GetFindData)(struct IFileSystemBindData2 *, WIN32_FIND_DATAW *);
    HRESULT (* SetFileID)(struct IFileSystemBindData2 *, LARGE_INTEGER);
    HRESULT (* GetFileID)(struct IFileSystemBindData2 *, LARGE_INTEGER *);
    HRESULT (* SetJunctionCLSID)(struct IFileSystemBindData2 *, IID *);
    HRESULT (* GetJunctionCLSID)(struct IFileSystemBindData2 *, CLSID *);
};

typedef struct IFolderBandPriv IFolderBandPriv, *PIFolderBandPriv;

struct IFolderBandPriv {
};

typedef struct IFolderFilter IFolderFilter, *PIFolderFilter;

typedef struct IFolderFilterVtbl IFolderFilterVtbl, *PIFolderFilterVtbl;

struct IFolderFilterVtbl {
    HRESULT (* QueryInterface)(struct IFolderFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderFilter *);
    ULONG (* Release)(struct IFolderFilter *);
    HRESULT (* ShouldShow)(struct IFolderFilter *, struct IShellFolder *, LPCITEMIDLIST, LPCITEMIDLIST);
    HRESULT (* GetEnumFlags)(struct IFolderFilter *, struct IShellFolder *, LPCITEMIDLIST, HWND *, DWORD *);
};

struct IFolderFilter {
    struct IFolderFilterVtbl * lpVtbl;
};

typedef struct IFolderFilterSite IFolderFilterSite, *PIFolderFilterSite;

typedef struct IFolderFilterSiteVtbl IFolderFilterSiteVtbl, *PIFolderFilterSiteVtbl;

struct IFolderFilterSiteVtbl {
    HRESULT (* QueryInterface)(struct IFolderFilterSite *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderFilterSite *);
    ULONG (* Release)(struct IFolderFilterSite *);
    HRESULT (* SetFilter)(struct IFolderFilterSite *, struct IUnknown *);
};

struct IFolderFilterSite {
    struct IFolderFilterSiteVtbl * lpVtbl;
};

typedef struct IFolderView IFolderView, *PIFolderView;

typedef struct IFolderViewVtbl IFolderViewVtbl, *PIFolderViewVtbl;

struct IFolderViewVtbl {
    HRESULT (* QueryInterface)(struct IFolderView *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderView *);
    ULONG (* Release)(struct IFolderView *);
    HRESULT (* GetCurrentViewMode)(struct IFolderView *, UINT *);
    HRESULT (* SetCurrentViewMode)(struct IFolderView *, UINT);
    HRESULT (* GetFolder)(struct IFolderView *, IID *, void * *);
    HRESULT (* Item)(struct IFolderView *, int, LPITEMIDLIST *);
    HRESULT (* ItemCount)(struct IFolderView *, UINT, int *);
    HRESULT (* Items)(struct IFolderView *, UINT, IID *, void * *);
    HRESULT (* GetSelectionMarkedItem)(struct IFolderView *, int *);
    HRESULT (* GetFocusedItem)(struct IFolderView *, int *);
    HRESULT (* GetItemPosition)(struct IFolderView *, LPCITEMIDLIST, POINT *);
    HRESULT (* GetSpacing)(struct IFolderView *, POINT *);
    HRESULT (* GetDefaultSpacing)(struct IFolderView *, POINT *);
    HRESULT (* GetAutoArrange)(struct IFolderView *);
    HRESULT (* SelectItem)(struct IFolderView *, int, DWORD);
    HRESULT (* SelectAndPositionItems)(struct IFolderView *, UINT, LPCITEMIDLIST *, POINT *, DWORD);
};

struct IFolderView {
    struct IFolderViewVtbl * lpVtbl;
};

typedef struct IFolderView2 IFolderView2, *PIFolderView2;

typedef struct IFolderView2Vtbl IFolderView2Vtbl, *PIFolderView2Vtbl;

typedef struct SORTCOLUMN SORTCOLUMN, *PSORTCOLUMN;

typedef int SORTDIRECTION;

struct SORTCOLUMN {
    PROPERTYKEY propkey;
    SORTDIRECTION direction;
};

struct IFolderView2Vtbl {
    HRESULT (* QueryInterface)(struct IFolderView2 *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderView2 *);
    ULONG (* Release)(struct IFolderView2 *);
    HRESULT (* GetCurrentViewMode)(struct IFolderView2 *, UINT *);
    HRESULT (* SetCurrentViewMode)(struct IFolderView2 *, UINT);
    HRESULT (* GetFolder)(struct IFolderView2 *, IID *, void * *);
    HRESULT (* Item)(struct IFolderView2 *, int, LPITEMIDLIST *);
    HRESULT (* ItemCount)(struct IFolderView2 *, UINT, int *);
    HRESULT (* Items)(struct IFolderView2 *, UINT, IID *, void * *);
    HRESULT (* GetSelectionMarkedItem)(struct IFolderView2 *, int *);
    HRESULT (* GetFocusedItem)(struct IFolderView2 *, int *);
    HRESULT (* GetItemPosition)(struct IFolderView2 *, LPCITEMIDLIST, POINT *);
    HRESULT (* GetSpacing)(struct IFolderView2 *, POINT *);
    HRESULT (* GetDefaultSpacing)(struct IFolderView2 *, POINT *);
    HRESULT (* GetAutoArrange)(struct IFolderView2 *);
    HRESULT (* SelectItem)(struct IFolderView2 *, int, DWORD);
    HRESULT (* SelectAndPositionItems)(struct IFolderView2 *, UINT, LPCITEMIDLIST *, POINT *, DWORD);
    HRESULT (* SetGroupBy)(struct IFolderView2 *, PROPERTYKEY *, BOOL);
    HRESULT (* GetGroupBy)(struct IFolderView2 *, PROPERTYKEY *, BOOL *);
    DEPRECATED_HRESULT (* SetViewProperty)(struct IFolderView2 *, LPCITEMIDLIST, PROPERTYKEY *, PROPVARIANT *);
    DEPRECATED_HRESULT (* GetViewProperty)(struct IFolderView2 *, LPCITEMIDLIST, PROPERTYKEY *, PROPVARIANT *);
    DEPRECATED_HRESULT (* SetTileViewProperties)(struct IFolderView2 *, LPCITEMIDLIST, LPCWSTR);
    DEPRECATED_HRESULT (* SetExtendedTileViewProperties)(struct IFolderView2 *, LPCITEMIDLIST, LPCWSTR);
    HRESULT (* SetText)(struct IFolderView2 *, enum FVTEXTTYPE, LPCWSTR);
    HRESULT (* SetCurrentFolderFlags)(struct IFolderView2 *, DWORD, DWORD);
    HRESULT (* GetCurrentFolderFlags)(struct IFolderView2 *, DWORD *);
    HRESULT (* GetSortColumnCount)(struct IFolderView2 *, int *);
    HRESULT (* SetSortColumns)(struct IFolderView2 *, struct SORTCOLUMN *, int);
    HRESULT (* GetSortColumns)(struct IFolderView2 *, struct SORTCOLUMN *, int);
    HRESULT (* GetItem)(struct IFolderView2 *, int, IID *, void * *);
    HRESULT (* GetVisibleItem)(struct IFolderView2 *, int, BOOL, int *);
    HRESULT (* GetSelectedItem)(struct IFolderView2 *, int, int *);
    HRESULT (* GetSelection)(struct IFolderView2 *, BOOL, struct IShellItemArray * *);
    HRESULT (* GetSelectionState)(struct IFolderView2 *, LPCITEMIDLIST, DWORD *);
    HRESULT (* InvokeVerbOnSelection)(struct IFolderView2 *, LPCSTR);
    HRESULT (* SetViewModeAndIconSize)(struct IFolderView2 *, enum FOLDERVIEWMODE, int);
    HRESULT (* GetViewModeAndIconSize)(struct IFolderView2 *, enum FOLDERVIEWMODE *, int *);
    HRESULT (* SetGroupSubsetCount)(struct IFolderView2 *, UINT);
    HRESULT (* GetGroupSubsetCount)(struct IFolderView2 *, UINT *);
    HRESULT (* SetRedraw)(struct IFolderView2 *, BOOL);
    HRESULT (* IsMoveInSameFolder)(struct IFolderView2 *);
    HRESULT (* DoRename)(struct IFolderView2 *);
};

struct IFolderView2 {
    struct IFolderView2Vtbl * lpVtbl;
};

typedef struct IFolderViewHost IFolderViewHost, *PIFolderViewHost;

typedef struct IFolderViewHostVtbl IFolderViewHostVtbl, *PIFolderViewHostVtbl;

struct IFolderViewHostVtbl {
    HRESULT (* QueryInterface)(struct IFolderViewHost *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderViewHost *);
    ULONG (* Release)(struct IFolderViewHost *);
    HRESULT (* Initialize)(struct IFolderViewHost *, HWND, struct IDataObject *, RECT *);
};

struct IFolderViewHost {
    struct IFolderViewHostVtbl * lpVtbl;
};

typedef struct IFolderViewOptions IFolderViewOptions, *PIFolderViewOptions;

typedef struct IFolderViewOptionsVtbl IFolderViewOptionsVtbl, *PIFolderViewOptionsVtbl;

struct IFolderViewOptions {
    struct IFolderViewOptionsVtbl * lpVtbl;
};

struct IFolderViewOptionsVtbl {
    HRESULT (* QueryInterface)(struct IFolderViewOptions *, IID *, void * *);
    ULONG (* AddRef)(struct IFolderViewOptions *);
    ULONG (* Release)(struct IFolderViewOptions *);
    HRESULT (* SetFolderViewOptions)(struct IFolderViewOptions *, enum FOLDERVIEWOPTIONS, enum FOLDERVIEWOPTIONS);
    HRESULT (* GetFolderViewOptions)(struct IFolderViewOptions *, enum FOLDERVIEWOPTIONS *);
};

typedef struct IFolderViewSettings IFolderViewSettings, *PIFolderViewSettings;

struct IFolderViewSettings {
};

typedef struct IHomeGroup IHomeGroup, *PIHomeGroup;

typedef struct IHomeGroupVtbl IHomeGroupVtbl, *PIHomeGroupVtbl;

struct IHomeGroup {
    struct IHomeGroupVtbl * lpVtbl;
};

struct IHomeGroupVtbl {
    HRESULT (* QueryInterface)(struct IHomeGroup *, IID *, void * *);
    ULONG (* AddRef)(struct IHomeGroup *);
    ULONG (* Release)(struct IHomeGroup *);
    HRESULT (* IsMember)(struct IHomeGroup *, BOOL *);
    HRESULT (* ShowSharingWizard)(struct IHomeGroup *, HWND, enum HOMEGROUPSHARINGCHOICES *);
};

typedef struct IHWEventHandler IHWEventHandler, *PIHWEventHandler;

typedef struct IHWEventHandlerVtbl IHWEventHandlerVtbl, *PIHWEventHandlerVtbl;

struct IHWEventHandlerVtbl {
    HRESULT (* QueryInterface)(struct IHWEventHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IHWEventHandler *);
    ULONG (* Release)(struct IHWEventHandler *);
    HRESULT (* Initialize)(struct IHWEventHandler *, LPCWSTR);
    HRESULT (* HandleEvent)(struct IHWEventHandler *, LPCWSTR, LPCWSTR, LPCWSTR);
    HRESULT (* HandleEventWithContent)(struct IHWEventHandler *, LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, struct IDataObject *);
};

struct IHWEventHandler {
    struct IHWEventHandlerVtbl * lpVtbl;
};

typedef struct IHWEventHandler2 IHWEventHandler2, *PIHWEventHandler2;

typedef struct IHWEventHandler2Vtbl IHWEventHandler2Vtbl, *PIHWEventHandler2Vtbl;

struct IHWEventHandler2Vtbl {
    HRESULT (* QueryInterface)(struct IHWEventHandler2 *, IID *, void * *);
    ULONG (* AddRef)(struct IHWEventHandler2 *);
    ULONG (* Release)(struct IHWEventHandler2 *);
    HRESULT (* Initialize)(struct IHWEventHandler2 *, LPCWSTR);
    HRESULT (* HandleEvent)(struct IHWEventHandler2 *, LPCWSTR, LPCWSTR, LPCWSTR);
    HRESULT (* HandleEventWithContent)(struct IHWEventHandler2 *, LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, struct IDataObject *);
    HRESULT (* HandleEventWithHWND)(struct IHWEventHandler2 *, LPCWSTR, LPCWSTR, LPCWSTR, HWND);
};

struct IHWEventHandler2 {
    struct IHWEventHandler2Vtbl * lpVtbl;
};

typedef struct IIdentityName IIdentityName, *PIIdentityName;

struct IIdentityName {
};

typedef struct IImageRecompress IImageRecompress, *PIImageRecompress;

struct IImageRecompress {
};

typedef struct IInitializeCommand IInitializeCommand, *PIInitializeCommand;

typedef struct IInitializeCommandVtbl IInitializeCommandVtbl, *PIInitializeCommandVtbl;

struct IInitializeCommandVtbl {
    HRESULT (* QueryInterface)(struct IInitializeCommand *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeCommand *);
    ULONG (* Release)(struct IInitializeCommand *);
    HRESULT (* Initialize)(struct IInitializeCommand *, LPCWSTR, struct IPropertyBag *);
};

struct IInitializeCommand {
    struct IInitializeCommandVtbl * lpVtbl;
};

typedef struct IInitializeNetworkFolder IInitializeNetworkFolder, *PIInitializeNetworkFolder;

typedef struct IInitializeNetworkFolderVtbl IInitializeNetworkFolderVtbl, *PIInitializeNetworkFolderVtbl;

struct IInitializeNetworkFolder {
    struct IInitializeNetworkFolderVtbl * lpVtbl;
};

struct IInitializeNetworkFolderVtbl {
    HRESULT (* QueryInterface)(struct IInitializeNetworkFolder *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeNetworkFolder *);
    ULONG (* Release)(struct IInitializeNetworkFolder *);
    HRESULT (* Initialize)(struct IInitializeNetworkFolder *, LPCITEMIDLIST, LPCITEMIDLIST, UINT, LPCWSTR, LPCWSTR);
};

typedef struct IInitializeWithBindCtx IInitializeWithBindCtx, *PIInitializeWithBindCtx;

typedef struct IInitializeWithBindCtxVtbl IInitializeWithBindCtxVtbl, *PIInitializeWithBindCtxVtbl;

struct IInitializeWithBindCtx {
    struct IInitializeWithBindCtxVtbl * lpVtbl;
};

struct IInitializeWithBindCtxVtbl {
    HRESULT (* QueryInterface)(struct IInitializeWithBindCtx *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeWithBindCtx *);
    ULONG (* Release)(struct IInitializeWithBindCtx *);
    HRESULT (* Initialize)(struct IInitializeWithBindCtx *, struct IBindCtx *);
};

typedef struct IInitializeWithItem IInitializeWithItem, *PIInitializeWithItem;

typedef struct IInitializeWithItemVtbl IInitializeWithItemVtbl, *PIInitializeWithItemVtbl;

struct IInitializeWithItem {
    struct IInitializeWithItemVtbl * lpVtbl;
};

struct IInitializeWithItemVtbl {
    HRESULT (* QueryInterface)(struct IInitializeWithItem *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeWithItem *);
    ULONG (* Release)(struct IInitializeWithItem *);
    HRESULT (* Initialize)(struct IInitializeWithItem *, struct IShellItem *, DWORD);
};

typedef struct IInitializeWithPropertyStore IInitializeWithPropertyStore, *PIInitializeWithPropertyStore;

typedef struct IInitializeWithPropertyStoreVtbl IInitializeWithPropertyStoreVtbl, *PIInitializeWithPropertyStoreVtbl;

struct IInitializeWithPropertyStoreVtbl {
    HRESULT (* QueryInterface)(struct IInitializeWithPropertyStore *, IID *, void * *);
    ULONG (* AddRef)(struct IInitializeWithPropertyStore *);
    ULONG (* Release)(struct IInitializeWithPropertyStore *);
    HRESULT (* Initialize)(struct IInitializeWithPropertyStore *, struct IPropertyStore *);
};

struct IInitializeWithPropertyStore {
    struct IInitializeWithPropertyStoreVtbl * lpVtbl;
};

typedef struct IInputObject IInputObject, *PIInputObject;

typedef struct IInputObjectVtbl IInputObjectVtbl, *PIInputObjectVtbl;

struct IInputObjectVtbl {
    HRESULT (* QueryInterface)(struct IInputObject *, IID *, void * *);
    ULONG (* AddRef)(struct IInputObject *);
    ULONG (* Release)(struct IInputObject *);
    HRESULT (* UIActivateIO)(struct IInputObject *, BOOL, MSG *);
    HRESULT (* HasFocusIO)(struct IInputObject *);
    HRESULT (* TranslateAcceleratorIO)(struct IInputObject *, MSG *);
};

struct IInputObject {
    struct IInputObjectVtbl * lpVtbl;
};

typedef struct IInputObject2 IInputObject2, *PIInputObject2;

typedef struct IInputObject2Vtbl IInputObject2Vtbl, *PIInputObject2Vtbl;

struct IInputObject2Vtbl {
    HRESULT (* QueryInterface)(struct IInputObject2 *, IID *, void * *);
    ULONG (* AddRef)(struct IInputObject2 *);
    ULONG (* Release)(struct IInputObject2 *);
    HRESULT (* UIActivateIO)(struct IInputObject2 *, BOOL, MSG *);
    HRESULT (* HasFocusIO)(struct IInputObject2 *);
    HRESULT (* TranslateAcceleratorIO)(struct IInputObject2 *, MSG *);
    HRESULT (* TranslateAcceleratorGlobal)(struct IInputObject2 *, MSG *);
};

struct IInputObject2 {
    struct IInputObject2Vtbl * lpVtbl;
};

typedef struct IInputObjectSite IInputObjectSite, *PIInputObjectSite;

typedef struct IInputObjectSiteVtbl IInputObjectSiteVtbl, *PIInputObjectSiteVtbl;

struct IInputObjectSite {
    struct IInputObjectSiteVtbl * lpVtbl;
};

struct IInputObjectSiteVtbl {
    HRESULT (* QueryInterface)(struct IInputObjectSite *, IID *, void * *);
    ULONG (* AddRef)(struct IInputObjectSite *);
    ULONG (* Release)(struct IInputObjectSite *);
    HRESULT (* OnFocusChangeIS)(struct IInputObjectSite *, struct IUnknown *, BOOL);
};

typedef struct IInsertItem IInsertItem, *PIInsertItem;

typedef struct IInsertItemVtbl IInsertItemVtbl, *PIInsertItemVtbl;

struct IInsertItem {
    struct IInsertItemVtbl * lpVtbl;
};

struct IInsertItemVtbl {
    HRESULT (* QueryInterface)(struct IInsertItem *, IID *, void * *);
    ULONG (* AddRef)(struct IInsertItem *);
    ULONG (* Release)(struct IInsertItem *);
    HRESULT (* InsertItem)(struct IInsertItem *, LPCITEMIDLIST);
};

typedef struct IIOCancelInformation IIOCancelInformation, *PIIOCancelInformation;

typedef struct IIOCancelInformationVtbl IIOCancelInformationVtbl, *PIIOCancelInformationVtbl;

struct IIOCancelInformation {
    struct IIOCancelInformationVtbl * lpVtbl;
};

struct IIOCancelInformationVtbl {
    HRESULT (* QueryInterface)(struct IIOCancelInformation *, IID *, void * *);
    ULONG (* AddRef)(struct IIOCancelInformation *);
    ULONG (* Release)(struct IIOCancelInformation *);
    HRESULT (* SetCancelInformation)(struct IIOCancelInformation *, DWORD, UINT);
    HRESULT (* GetCancelInformation)(struct IIOCancelInformation *, DWORD *, UINT *);
};

typedef struct IItemNameLimits IItemNameLimits, *PIItemNameLimits;

typedef struct IItemNameLimitsVtbl IItemNameLimitsVtbl, *PIItemNameLimitsVtbl;

struct IItemNameLimits {
    struct IItemNameLimitsVtbl * lpVtbl;
};

struct IItemNameLimitsVtbl {
    HRESULT (* QueryInterface)(struct IItemNameLimits *, IID *, void * *);
    ULONG (* AddRef)(struct IItemNameLimits *);
    ULONG (* Release)(struct IItemNameLimits *);
    HRESULT (* GetValidCharacters)(struct IItemNameLimits *, LPWSTR *, LPWSTR *);
    HRESULT (* GetMaxLength)(struct IItemNameLimits *, LPCWSTR, int *);
};

typedef struct IKnownFolder IKnownFolder, *PIKnownFolder;

struct IKnownFolder {
};

typedef struct IKnownFolderManager IKnownFolderManager, *PIKnownFolderManager;

struct IKnownFolderManager {
};

typedef struct ImageProperties ImageProperties, *PImageProperties;

struct ImageProperties {
};

typedef struct ImageRecompress ImageRecompress, *PImageRecompress;

struct ImageRecompress {
};

typedef struct IMarkupCallback IMarkupCallback, *PIMarkupCallback;

typedef struct IMarkupCallbackVtbl IMarkupCallbackVtbl, *PIMarkupCallbackVtbl;

struct IMarkupCallback {
    struct IMarkupCallbackVtbl * lpVtbl;
};

struct IMarkupCallbackVtbl {
    HRESULT (* QueryInterface)(struct IMarkupCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IMarkupCallback *);
    ULONG (* Release)(struct IMarkupCallback *);
    HRESULT (* GetState)(struct IMarkupCallback *, DWORD, UINT);
    HRESULT (* Notify)(struct IMarkupCallback *, DWORD, int, int);
    HRESULT (* InvalidateRect)(struct IMarkupCallback *, DWORD, RECT *);
    HRESULT (* OnCustomDraw)(struct IMarkupCallback *, DWORD, HDC, RECT *, DWORD, int, UINT, LRESULT *);
    HRESULT (* CustomDrawText)(struct IMarkupCallback *, HDC, LPCWSTR, int, RECT *, UINT, BOOL);
};

typedef struct IMenuBand IMenuBand, *PIMenuBand;

struct IMenuBand {
};

typedef struct IMenuPopup IMenuPopup, *PIMenuPopup;

typedef struct IMenuPopupVtbl IMenuPopupVtbl, *PIMenuPopupVtbl;

typedef int MP_POPUPFLAGS;

struct IMenuPopup {
    struct IMenuPopupVtbl * lpVtbl;
};

struct IMenuPopupVtbl {
    HRESULT (* QueryInterface)(struct IMenuPopup *, IID *, void * *);
    ULONG (* AddRef)(struct IMenuPopup *);
    ULONG (* Release)(struct IMenuPopup *);
    HRESULT (* GetWindow)(struct IMenuPopup *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IMenuPopup *, BOOL);
    HRESULT (* SetClient)(struct IMenuPopup *, struct IUnknown *);
    HRESULT (* GetClient)(struct IMenuPopup *, struct IUnknown * *);
    HRESULT (* OnPosRectChangeDB)(struct IMenuPopup *, RECT *);
    HRESULT (* Popup)(struct IMenuPopup *, POINTL *, RECTL *, MP_POPUPFLAGS);
    HRESULT (* OnSelect)(struct IMenuPopup *, DWORD);
    HRESULT (* SetSubMenu)(struct IMenuPopup *, struct IMenuPopup *, BOOL);
};

typedef struct IModalWindow IModalWindow, *PIModalWindow;

struct IModalWindow {
};

typedef struct INameSpaceTreeAccessible INameSpaceTreeAccessible, *PINameSpaceTreeAccessible;

typedef struct INameSpaceTreeAccessibleVtbl INameSpaceTreeAccessibleVtbl, *PINameSpaceTreeAccessibleVtbl;

struct INameSpaceTreeAccessible {
    struct INameSpaceTreeAccessibleVtbl * lpVtbl;
};

struct INameSpaceTreeAccessibleVtbl {
    HRESULT (* QueryInterface)(struct INameSpaceTreeAccessible *, IID *, void * *);
    ULONG (* AddRef)(struct INameSpaceTreeAccessible *);
    ULONG (* Release)(struct INameSpaceTreeAccessible *);
    HRESULT (* OnGetDefaultAccessibilityAction)(struct INameSpaceTreeAccessible *, struct IShellItem *, BSTR *);
    HRESULT (* OnDoDefaultAccessibilityAction)(struct INameSpaceTreeAccessible *, struct IShellItem *);
    HRESULT (* OnGetAccessibilityRole)(struct INameSpaceTreeAccessible *, struct IShellItem *, VARIANT *);
};

typedef struct INameSpaceTreeControl INameSpaceTreeControl, *PINameSpaceTreeControl;

typedef struct INameSpaceTreeControlVtbl INameSpaceTreeControlVtbl, *PINameSpaceTreeControlVtbl;

typedef DWORD NSTCSTYLE;

typedef DWORD NSTCROOTSTYLE;

typedef struct IShellItemFilter IShellItemFilter, *PIShellItemFilter;

typedef DWORD NSTCITEMSTATE;

typedef enum NSTCGNI {
    NSTCGNI_CHILD=5,
    NSTCGNI_FIRSTVISIBLE=6,
    NSTCGNI_LASTVISIBLE=7,
    NSTCGNI_NEXT=0,
    NSTCGNI_NEXTVISIBLE=1,
    NSTCGNI_PARENT=4,
    NSTCGNI_PREV=2,
    NSTCGNI_PREVVISIBLE=3
} NSTCGNI;

typedef struct IShellItemFilterVtbl IShellItemFilterVtbl, *PIShellItemFilterVtbl;

struct IShellItemFilter {
    struct IShellItemFilterVtbl * lpVtbl;
};

struct IShellItemFilterVtbl {
    HRESULT (* QueryInterface)(struct IShellItemFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IShellItemFilter *);
    ULONG (* Release)(struct IShellItemFilter *);
    HRESULT (* IncludeItem)(struct IShellItemFilter *, struct IShellItem *);
    HRESULT (* GetEnumFlagsForItem)(struct IShellItemFilter *, struct IShellItem *, SHCONTF *);
};

struct INameSpaceTreeControlVtbl {
    HRESULT (* QueryInterface)(struct INameSpaceTreeControl *, IID *, void * *);
    ULONG (* AddRef)(struct INameSpaceTreeControl *);
    ULONG (* Release)(struct INameSpaceTreeControl *);
    HRESULT (* Initialize)(struct INameSpaceTreeControl *, HWND, RECT *, NSTCSTYLE);
    HRESULT (* TreeAdvise)(struct INameSpaceTreeControl *, struct IUnknown *, DWORD *);
    HRESULT (* TreeUnadvise)(struct INameSpaceTreeControl *, DWORD);
    HRESULT (* AppendRoot)(struct INameSpaceTreeControl *, struct IShellItem *, SHCONTF, NSTCROOTSTYLE, struct IShellItemFilter *);
    HRESULT (* InsertRoot)(struct INameSpaceTreeControl *, int, struct IShellItem *, SHCONTF, NSTCROOTSTYLE, struct IShellItemFilter *);
    HRESULT (* RemoveRoot)(struct INameSpaceTreeControl *, struct IShellItem *);
    HRESULT (* RemoveAllRoots)(struct INameSpaceTreeControl *);
    HRESULT (* GetRootItems)(struct INameSpaceTreeControl *, struct IShellItemArray * *);
    HRESULT (* SetItemState)(struct INameSpaceTreeControl *, struct IShellItem *, NSTCITEMSTATE, NSTCITEMSTATE);
    HRESULT (* GetItemState)(struct INameSpaceTreeControl *, struct IShellItem *, NSTCITEMSTATE, NSTCITEMSTATE *);
    HRESULT (* GetSelectedItems)(struct INameSpaceTreeControl *, struct IShellItemArray * *);
    HRESULT (* GetItemCustomState)(struct INameSpaceTreeControl *, struct IShellItem *, int *);
    HRESULT (* SetItemCustomState)(struct INameSpaceTreeControl *, struct IShellItem *, int);
    HRESULT (* EnsureItemVisible)(struct INameSpaceTreeControl *, struct IShellItem *);
    HRESULT (* SetTheme)(struct INameSpaceTreeControl *, LPCWSTR);
    HRESULT (* GetNextItem)(struct INameSpaceTreeControl *, struct IShellItem *, enum NSTCGNI, struct IShellItem * *);
    HRESULT (* HitTest)(struct INameSpaceTreeControl *, POINT *, struct IShellItem * *);
    HRESULT (* GetItemRect)(struct INameSpaceTreeControl *, struct IShellItem *, RECT *);
    HRESULT (* CollapseAll)(struct INameSpaceTreeControl *);
};

struct INameSpaceTreeControl {
    struct INameSpaceTreeControlVtbl * lpVtbl;
};

typedef struct INameSpaceTreeControl2 INameSpaceTreeControl2, *PINameSpaceTreeControl2;

typedef struct INameSpaceTreeControl2Vtbl INameSpaceTreeControl2Vtbl, *PINameSpaceTreeControl2Vtbl;

typedef enum NSTCSTYLE2 {
    NSTCS2_DEFAULT=0,
    NSTCS2_DISPLAYPADDING=4,
    NSTCS2_DISPLAYPINNEDONLY=8,
    NSTCS2_INTERRUPTNOTIFICATIONS=1,
    NSTCS2_SHOWNULLSPACEMENU=2,
    NTSCS2_NEVERINSERTNONENUMERATED=32,
    NTSCS2_NOSINGLETONAUTOEXPAND=16
} NSTCSTYLE2;

struct INameSpaceTreeControl2 {
    struct INameSpaceTreeControl2Vtbl * lpVtbl;
};

struct INameSpaceTreeControl2Vtbl {
    HRESULT (* QueryInterface)(struct INameSpaceTreeControl2 *, IID *, void * *);
    ULONG (* AddRef)(struct INameSpaceTreeControl2 *);
    ULONG (* Release)(struct INameSpaceTreeControl2 *);
    HRESULT (* Initialize)(struct INameSpaceTreeControl2 *, HWND, RECT *, NSTCSTYLE);
    HRESULT (* TreeAdvise)(struct INameSpaceTreeControl2 *, struct IUnknown *, DWORD *);
    HRESULT (* TreeUnadvise)(struct INameSpaceTreeControl2 *, DWORD);
    HRESULT (* AppendRoot)(struct INameSpaceTreeControl2 *, struct IShellItem *, SHCONTF, NSTCROOTSTYLE, struct IShellItemFilter *);
    HRESULT (* InsertRoot)(struct INameSpaceTreeControl2 *, int, struct IShellItem *, SHCONTF, NSTCROOTSTYLE, struct IShellItemFilter *);
    HRESULT (* RemoveRoot)(struct INameSpaceTreeControl2 *, struct IShellItem *);
    HRESULT (* RemoveAllRoots)(struct INameSpaceTreeControl2 *);
    HRESULT (* GetRootItems)(struct INameSpaceTreeControl2 *, struct IShellItemArray * *);
    HRESULT (* SetItemState)(struct INameSpaceTreeControl2 *, struct IShellItem *, NSTCITEMSTATE, NSTCITEMSTATE);
    HRESULT (* GetItemState)(struct INameSpaceTreeControl2 *, struct IShellItem *, NSTCITEMSTATE, NSTCITEMSTATE *);
    HRESULT (* GetSelectedItems)(struct INameSpaceTreeControl2 *, struct IShellItemArray * *);
    HRESULT (* GetItemCustomState)(struct INameSpaceTreeControl2 *, struct IShellItem *, int *);
    HRESULT (* SetItemCustomState)(struct INameSpaceTreeControl2 *, struct IShellItem *, int);
    HRESULT (* EnsureItemVisible)(struct INameSpaceTreeControl2 *, struct IShellItem *);
    HRESULT (* SetTheme)(struct INameSpaceTreeControl2 *, LPCWSTR);
    HRESULT (* GetNextItem)(struct INameSpaceTreeControl2 *, struct IShellItem *, enum NSTCGNI, struct IShellItem * *);
    HRESULT (* HitTest)(struct INameSpaceTreeControl2 *, POINT *, struct IShellItem * *);
    HRESULT (* GetItemRect)(struct INameSpaceTreeControl2 *, struct IShellItem *, RECT *);
    HRESULT (* CollapseAll)(struct INameSpaceTreeControl2 *);
    HRESULT (* SetControlStyle)(struct INameSpaceTreeControl2 *, NSTCSTYLE, NSTCSTYLE);
    HRESULT (* GetControlStyle)(struct INameSpaceTreeControl2 *, NSTCSTYLE, NSTCSTYLE *);
    HRESULT (* SetControlStyle2)(struct INameSpaceTreeControl2 *, enum NSTCSTYLE2, enum NSTCSTYLE2);
    HRESULT (* GetControlStyle2)(struct INameSpaceTreeControl2 *, enum NSTCSTYLE2, enum NSTCSTYLE2 *);
};

typedef struct INameSpaceTreeControlCustomDraw INameSpaceTreeControlCustomDraw, *PINameSpaceTreeControlCustomDraw;

typedef struct INameSpaceTreeControlCustomDrawVtbl INameSpaceTreeControlCustomDrawVtbl, *PINameSpaceTreeControlCustomDrawVtbl;

typedef struct NSTCCUSTOMDRAW NSTCCUSTOMDRAW, *PNSTCCUSTOMDRAW;

struct INameSpaceTreeControlCustomDraw {
    struct INameSpaceTreeControlCustomDrawVtbl * lpVtbl;
};

struct INameSpaceTreeControlCustomDrawVtbl {
    HRESULT (* QueryInterface)(struct INameSpaceTreeControlCustomDraw *, IID *, void * *);
    ULONG (* AddRef)(struct INameSpaceTreeControlCustomDraw *);
    ULONG (* Release)(struct INameSpaceTreeControlCustomDraw *);
    HRESULT (* PrePaint)(struct INameSpaceTreeControlCustomDraw *, HDC, RECT *, LRESULT *);
    HRESULT (* PostPaint)(struct INameSpaceTreeControlCustomDraw *, HDC, RECT *);
    HRESULT (* ItemPrePaint)(struct INameSpaceTreeControlCustomDraw *, HDC, RECT *, struct NSTCCUSTOMDRAW *, COLORREF *, COLORREF *, LRESULT *);
    HRESULT (* ItemPostPaint)(struct INameSpaceTreeControlCustomDraw *, HDC, RECT *, struct NSTCCUSTOMDRAW *);
};

struct NSTCCUSTOMDRAW {
    struct IShellItem * psi;
    UINT uItemState;
    NSTCITEMSTATE nstcis;
    LPCWSTR pszText;
    int iImage;
    HIMAGELIST himl;
    int iLevel;
    int iIndent;
};

typedef struct INameSpaceTreeControlDropHandler INameSpaceTreeControlDropHandler, *PINameSpaceTreeControlDropHandler;

typedef struct INameSpaceTreeControlDropHandlerVtbl INameSpaceTreeControlDropHandlerVtbl, *PINameSpaceTreeControlDropHandlerVtbl;

struct INameSpaceTreeControlDropHandler {
    struct INameSpaceTreeControlDropHandlerVtbl * lpVtbl;
};

struct INameSpaceTreeControlDropHandlerVtbl {
    HRESULT (* QueryInterface)(struct INameSpaceTreeControlDropHandler *, IID *, void * *);
    ULONG (* AddRef)(struct INameSpaceTreeControlDropHandler *);
    ULONG (* Release)(struct INameSpaceTreeControlDropHandler *);
    HRESULT (* OnDragEnter)(struct INameSpaceTreeControlDropHandler *, struct IShellItem *, struct IShellItemArray *, BOOL, DWORD, DWORD *);
    HRESULT (* OnDragOver)(struct INameSpaceTreeControlDropHandler *, struct IShellItem *, struct IShellItemArray *, DWORD, DWORD *);
    HRESULT (* OnDragPosition)(struct INameSpaceTreeControlDropHandler *, struct IShellItem *, struct IShellItemArray *, int, int);
    HRESULT (* OnDrop)(struct INameSpaceTreeControlDropHandler *, struct IShellItem *, struct IShellItemArray *, int, DWORD, DWORD *);
    HRESULT (* OnDropPosition)(struct INameSpaceTreeControlDropHandler *, struct IShellItem *, struct IShellItemArray *, int, int);
    HRESULT (* OnDragLeave)(struct INameSpaceTreeControlDropHandler *, struct IShellItem *);
};

typedef struct INameSpaceTreeControlEvents INameSpaceTreeControlEvents, *PINameSpaceTreeControlEvents;

typedef struct INameSpaceTreeControlEventsVtbl INameSpaceTreeControlEventsVtbl, *PINameSpaceTreeControlEventsVtbl;

typedef DWORD NSTCEHITTEST;

typedef DWORD NSTCECLICKTYPE;

struct INameSpaceTreeControlEventsVtbl {
    HRESULT (* QueryInterface)(struct INameSpaceTreeControlEvents *, IID *, void * *);
    ULONG (* AddRef)(struct INameSpaceTreeControlEvents *);
    ULONG (* Release)(struct INameSpaceTreeControlEvents *);
    HRESULT (* OnItemClick)(struct INameSpaceTreeControlEvents *, struct IShellItem *, NSTCEHITTEST, NSTCECLICKTYPE);
    HRESULT (* OnPropertyItemCommit)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnItemStateChanging)(struct INameSpaceTreeControlEvents *, struct IShellItem *, NSTCITEMSTATE, NSTCITEMSTATE);
    HRESULT (* OnItemStateChanged)(struct INameSpaceTreeControlEvents *, struct IShellItem *, NSTCITEMSTATE, NSTCITEMSTATE);
    HRESULT (* OnSelectionChanged)(struct INameSpaceTreeControlEvents *, struct IShellItemArray *);
    HRESULT (* OnKeyboardInput)(struct INameSpaceTreeControlEvents *, UINT, WPARAM, LPARAM);
    HRESULT (* OnBeforeExpand)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnAfterExpand)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnBeginLabelEdit)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnEndLabelEdit)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnGetToolTip)(struct INameSpaceTreeControlEvents *, struct IShellItem *, LPWSTR, int);
    HRESULT (* OnBeforeItemDelete)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnItemAdded)(struct INameSpaceTreeControlEvents *, struct IShellItem *, BOOL);
    HRESULT (* OnItemDeleted)(struct INameSpaceTreeControlEvents *, struct IShellItem *, BOOL);
    HRESULT (* OnBeforeContextMenu)(struct INameSpaceTreeControlEvents *, struct IShellItem *, IID *, void * *);
    HRESULT (* OnAfterContextMenu)(struct INameSpaceTreeControlEvents *, struct IShellItem *, struct IContextMenu *, IID *, void * *);
    HRESULT (* OnBeforeStateImageChange)(struct INameSpaceTreeControlEvents *, struct IShellItem *);
    HRESULT (* OnGetDefaultIconIndex)(struct INameSpaceTreeControlEvents *, struct IShellItem *, int *, int *);
};

struct INameSpaceTreeControlEvents {
    struct INameSpaceTreeControlEventsVtbl * lpVtbl;
};

typedef struct INameSpaceTreeControlFolderCapabilities INameSpaceTreeControlFolderCapabilities, *PINameSpaceTreeControlFolderCapabilities;

struct INameSpaceTreeControlFolderCapabilities {
};

typedef struct INamespaceWalk INamespaceWalk, *PINamespaceWalk;

typedef struct INamespaceWalkVtbl INamespaceWalkVtbl, *PINamespaceWalkVtbl;

typedef struct INamespaceWalkCB INamespaceWalkCB, *PINamespaceWalkCB;

typedef struct INamespaceWalkCBVtbl INamespaceWalkCBVtbl, *PINamespaceWalkCBVtbl;

struct INamespaceWalk {
    struct INamespaceWalkVtbl * lpVtbl;
};

struct INamespaceWalkCB {
    struct INamespaceWalkCBVtbl * lpVtbl;
};

struct INamespaceWalkCBVtbl {
    HRESULT (* QueryInterface)(struct INamespaceWalkCB *, IID *, void * *);
    ULONG (* AddRef)(struct INamespaceWalkCB *);
    ULONG (* Release)(struct INamespaceWalkCB *);
    HRESULT (* FoundItem)(struct INamespaceWalkCB *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* EnterFolder)(struct INamespaceWalkCB *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* LeaveFolder)(struct INamespaceWalkCB *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* InitializeProgressDialog)(struct INamespaceWalkCB *, LPWSTR *, LPWSTR *);
};

struct INamespaceWalkVtbl {
    HRESULT (* QueryInterface)(struct INamespaceWalk *, IID *, void * *);
    ULONG (* AddRef)(struct INamespaceWalk *);
    ULONG (* Release)(struct INamespaceWalk *);
    HRESULT (* Walk)(struct INamespaceWalk *, struct IUnknown *, DWORD, int, struct INamespaceWalkCB *);
    HRESULT (* GetIDArrayResult)(struct INamespaceWalk *, UINT *, LPITEMIDLIST * *);
};

typedef struct INamespaceWalkCB2 INamespaceWalkCB2, *PINamespaceWalkCB2;

typedef struct INamespaceWalkCB2Vtbl INamespaceWalkCB2Vtbl, *PINamespaceWalkCB2Vtbl;

struct INamespaceWalkCB2Vtbl {
    HRESULT (* QueryInterface)(struct INamespaceWalkCB2 *, IID *, void * *);
    ULONG (* AddRef)(struct INamespaceWalkCB2 *);
    ULONG (* Release)(struct INamespaceWalkCB2 *);
    HRESULT (* FoundItem)(struct INamespaceWalkCB2 *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* EnterFolder)(struct INamespaceWalkCB2 *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* LeaveFolder)(struct INamespaceWalkCB2 *, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* InitializeProgressDialog)(struct INamespaceWalkCB2 *, LPWSTR *, LPWSTR *);
    HRESULT (* WalkComplete)(struct INamespaceWalkCB2 *, HRESULT);
};

struct INamespaceWalkCB2 {
    struct INamespaceWalkCB2Vtbl * lpVtbl;
};

typedef struct INewMenuClient INewMenuClient, *PINewMenuClient;

typedef struct INewMenuClientVtbl INewMenuClientVtbl, *PINewMenuClientVtbl;

typedef int NMCII_FLAGS;

typedef int NMCSAEI_FLAGS;

struct INewMenuClient {
    struct INewMenuClientVtbl * lpVtbl;
};

struct INewMenuClientVtbl {
    HRESULT (* QueryInterface)(struct INewMenuClient *, IID *, void * *);
    ULONG (* AddRef)(struct INewMenuClient *);
    ULONG (* Release)(struct INewMenuClient *);
    HRESULT (* IncludeItems)(struct INewMenuClient *, NMCII_FLAGS *);
    HRESULT (* SelectAndEditItem)(struct INewMenuClient *, LPCITEMIDLIST, NMCSAEI_FLAGS);
};

typedef struct INewWindowManager INewWindowManager, *PINewWindowManager;

typedef struct INewWindowManagerVtbl INewWindowManagerVtbl, *PINewWindowManagerVtbl;

struct INewWindowManager {
    struct INewWindowManagerVtbl * lpVtbl;
};

struct INewWindowManagerVtbl {
    HRESULT (* QueryInterface)(struct INewWindowManager *, IID *, void * *);
    ULONG (* AddRef)(struct INewWindowManager *);
    ULONG (* Release)(struct INewWindowManager *);
    HRESULT (* EvaluateNewWindow)(struct INewWindowManager *, LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, BOOL, DWORD, DWORD);
};

typedef struct InternetPrintOrdering InternetPrintOrdering, *PInternetPrintOrdering;

struct InternetPrintOrdering {
};

typedef struct IObjectProvider IObjectProvider, *PIObjectProvider;

typedef struct IObjectProviderVtbl IObjectProviderVtbl, *PIObjectProviderVtbl;

struct IObjectProvider {
    struct IObjectProviderVtbl * lpVtbl;
};

struct IObjectProviderVtbl {
    HRESULT (* QueryInterface)(struct IObjectProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectProvider *);
    ULONG (* Release)(struct IObjectProvider *);
    HRESULT (* QueryObject)(struct IObjectProvider *, GUID *, IID *, void * *);
};

typedef struct IObjectWithAppUserModelID IObjectWithAppUserModelID, *PIObjectWithAppUserModelID;

struct IObjectWithAppUserModelID {
};

typedef struct IObjectWithBackReferences IObjectWithBackReferences, *PIObjectWithBackReferences;

typedef struct IObjectWithBackReferencesVtbl IObjectWithBackReferencesVtbl, *PIObjectWithBackReferencesVtbl;

struct IObjectWithBackReferences {
    struct IObjectWithBackReferencesVtbl * lpVtbl;
};

struct IObjectWithBackReferencesVtbl {
    HRESULT (* QueryInterface)(struct IObjectWithBackReferences *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectWithBackReferences *);
    ULONG (* Release)(struct IObjectWithBackReferences *);
    HRESULT (* RemoveBackReferences)(struct IObjectWithBackReferences *);
};

typedef struct IObjectWithCancelEvent IObjectWithCancelEvent, *PIObjectWithCancelEvent;

typedef struct IObjectWithCancelEventVtbl IObjectWithCancelEventVtbl, *PIObjectWithCancelEventVtbl;

struct IObjectWithCancelEvent {
    struct IObjectWithCancelEventVtbl * lpVtbl;
};

struct IObjectWithCancelEventVtbl {
    HRESULT (* QueryInterface)(struct IObjectWithCancelEvent *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectWithCancelEvent *);
    ULONG (* Release)(struct IObjectWithCancelEvent *);
    HRESULT (* GetCancelEvent)(struct IObjectWithCancelEvent *, HANDLE *);
};

typedef struct IObjectWithFolderEnumMode IObjectWithFolderEnumMode, *PIObjectWithFolderEnumMode;

struct IObjectWithFolderEnumMode {
};

typedef struct IObjectWithProgID IObjectWithProgID, *PIObjectWithProgID;

struct IObjectWithProgID {
};

typedef struct IObjectWithSelection IObjectWithSelection, *PIObjectWithSelection;

typedef struct IObjectWithSelectionVtbl IObjectWithSelectionVtbl, *PIObjectWithSelectionVtbl;

struct IObjectWithSelection {
    struct IObjectWithSelectionVtbl * lpVtbl;
};

struct IObjectWithSelectionVtbl {
    HRESULT (* QueryInterface)(struct IObjectWithSelection *, IID *, void * *);
    ULONG (* AddRef)(struct IObjectWithSelection *);
    ULONG (* Release)(struct IObjectWithSelection *);
    HRESULT (* SetSelection)(struct IObjectWithSelection *, struct IShellItemArray *);
    HRESULT (* GetSelection)(struct IObjectWithSelection *, IID *, void * *);
};

typedef struct IOpenControlPanel IOpenControlPanel, *PIOpenControlPanel;

typedef struct IOpenControlPanelVtbl IOpenControlPanelVtbl, *PIOpenControlPanelVtbl;

struct IOpenControlPanel {
    struct IOpenControlPanelVtbl * lpVtbl;
};

struct IOpenControlPanelVtbl {
    HRESULT (* QueryInterface)(struct IOpenControlPanel *, IID *, void * *);
    ULONG (* AddRef)(struct IOpenControlPanel *);
    ULONG (* Release)(struct IOpenControlPanel *);
    HRESULT (* Open)(struct IOpenControlPanel *, LPCWSTR, LPCWSTR, struct IUnknown *);
    HRESULT (* GetPath)(struct IOpenControlPanel *, LPCWSTR, LPWSTR, UINT);
    HRESULT (* GetCurrentView)(struct IOpenControlPanel *, enum CPVIEW *);
};

typedef struct IOpenSearchSource IOpenSearchSource, *PIOpenSearchSource;

typedef struct IOpenSearchSourceVtbl IOpenSearchSourceVtbl, *PIOpenSearchSourceVtbl;

struct IOpenSearchSource {
    struct IOpenSearchSourceVtbl * lpVtbl;
};

struct IOpenSearchSourceVtbl {
    HRESULT (* QueryInterface)(struct IOpenSearchSource *, IID *, void * *);
    ULONG (* AddRef)(struct IOpenSearchSource *);
    ULONG (* Release)(struct IOpenSearchSource *);
    HRESULT (* GetResults)(struct IOpenSearchSource *, HWND, LPCWSTR, DWORD, DWORD, IID *, void * *);
};

typedef struct IParentAndItem IParentAndItem, *PIParentAndItem;

typedef struct IParentAndItemVtbl IParentAndItemVtbl, *PIParentAndItemVtbl;

struct IParentAndItemVtbl {
    HRESULT (* QueryInterface)(struct IParentAndItem *, IID *, void * *);
    ULONG (* AddRef)(struct IParentAndItem *);
    ULONG (* Release)(struct IParentAndItem *);
    HRESULT (* SetParentAndItem)(struct IParentAndItem *, LPCITEMIDLIST, struct IShellFolder *, LPCITEMIDLIST);
    HRESULT (* GetParentAndItem)(struct IParentAndItem *, LPITEMIDLIST *, struct IShellFolder * *, LPITEMIDLIST *);
};

struct IParentAndItem {
    struct IParentAndItemVtbl * lpVtbl;
};

typedef struct IParseAndCreateItem IParseAndCreateItem, *PIParseAndCreateItem;

struct IParseAndCreateItem {
};

typedef struct IPersistFolder IPersistFolder, *PIPersistFolder;

typedef struct IPersistFolderVtbl IPersistFolderVtbl, *PIPersistFolderVtbl;

struct IPersistFolder {
    struct IPersistFolderVtbl * lpVtbl;
};

struct IPersistFolderVtbl {
    HRESULT (* QueryInterface)(struct IPersistFolder *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistFolder *);
    ULONG (* Release)(struct IPersistFolder *);
    HRESULT (* GetClassID)(struct IPersistFolder *, CLSID *);
    HRESULT (* Initialize)(struct IPersistFolder *, LPCITEMIDLIST);
};

typedef struct IPersistFolder2 IPersistFolder2, *PIPersistFolder2;

typedef struct IPersistFolder2Vtbl IPersistFolder2Vtbl, *PIPersistFolder2Vtbl;

struct IPersistFolder2Vtbl {
    HRESULT (* QueryInterface)(struct IPersistFolder2 *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistFolder2 *);
    ULONG (* Release)(struct IPersistFolder2 *);
    HRESULT (* GetClassID)(struct IPersistFolder2 *, CLSID *);
    HRESULT (* Initialize)(struct IPersistFolder2 *, LPCITEMIDLIST);
    HRESULT (* GetCurFolder)(struct IPersistFolder2 *, LPITEMIDLIST *);
};

struct IPersistFolder2 {
    struct IPersistFolder2Vtbl * lpVtbl;
};

typedef struct IPersistFolder3 IPersistFolder3, *PIPersistFolder3;

typedef struct IPersistFolder3Vtbl IPersistFolder3Vtbl, *PIPersistFolder3Vtbl;

typedef struct _PERSIST_FOLDER_TARGET_INFO PERSIST_FOLDER_TARGET_INFO;

struct IPersistFolder3Vtbl {
    HRESULT (* QueryInterface)(struct IPersistFolder3 *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistFolder3 *);
    ULONG (* Release)(struct IPersistFolder3 *);
    HRESULT (* GetClassID)(struct IPersistFolder3 *, CLSID *);
    HRESULT (* Initialize)(struct IPersistFolder3 *, LPCITEMIDLIST);
    HRESULT (* GetCurFolder)(struct IPersistFolder3 *, LPITEMIDLIST *);
    HRESULT (* InitializeEx)(struct IPersistFolder3 *, struct IBindCtx *, LPCITEMIDLIST, PERSIST_FOLDER_TARGET_INFO *);
    HRESULT (* GetFolderTargetInfo)(struct IPersistFolder3 *, PERSIST_FOLDER_TARGET_INFO *);
};

struct IPersistFolder3 {
    struct IPersistFolder3Vtbl * lpVtbl;
};

typedef struct IPersistIDList IPersistIDList, *PIPersistIDList;

typedef struct IPersistIDListVtbl IPersistIDListVtbl, *PIPersistIDListVtbl;

struct IPersistIDListVtbl {
    HRESULT (* QueryInterface)(struct IPersistIDList *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistIDList *);
    ULONG (* Release)(struct IPersistIDList *);
    HRESULT (* GetClassID)(struct IPersistIDList *, CLSID *);
    HRESULT (* SetIDList)(struct IPersistIDList *, LPCITEMIDLIST);
    HRESULT (* GetIDList)(struct IPersistIDList *, LPITEMIDLIST *);
};

struct IPersistIDList {
    struct IPersistIDListVtbl * lpVtbl;
};

typedef struct IPreviewHandler IPreviewHandler, *PIPreviewHandler;

typedef struct IPreviewHandlerVtbl IPreviewHandlerVtbl, *PIPreviewHandlerVtbl;

struct IPreviewHandler {
    struct IPreviewHandlerVtbl * lpVtbl;
};

struct IPreviewHandlerVtbl {
    HRESULT (* QueryInterface)(struct IPreviewHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IPreviewHandler *);
    ULONG (* Release)(struct IPreviewHandler *);
    HRESULT (* SetWindow)(struct IPreviewHandler *, HWND, RECT *);
    HRESULT (* SetRect)(struct IPreviewHandler *, RECT *);
    HRESULT (* DoPreview)(struct IPreviewHandler *);
    HRESULT (* Unload)(struct IPreviewHandler *);
    HRESULT (* SetFocus)(struct IPreviewHandler *);
    HRESULT (* QueryFocus)(struct IPreviewHandler *, HWND *);
    HRESULT (* TranslateAcceleratorA)(struct IPreviewHandler *, MSG *);
};

typedef struct IPreviewHandlerFrame IPreviewHandlerFrame, *PIPreviewHandlerFrame;

typedef struct IPreviewHandlerFrameVtbl IPreviewHandlerFrameVtbl, *PIPreviewHandlerFrameVtbl;

typedef struct __MIDL_IPreviewHandlerFrame_0001 PREVIEWHANDLERFRAMEINFO;

struct IPreviewHandlerFrameVtbl {
    HRESULT (* QueryInterface)(struct IPreviewHandlerFrame *, IID *, void * *);
    ULONG (* AddRef)(struct IPreviewHandlerFrame *);
    ULONG (* Release)(struct IPreviewHandlerFrame *);
    HRESULT (* GetWindowContext)(struct IPreviewHandlerFrame *, PREVIEWHANDLERFRAMEINFO *);
    HRESULT (* TranslateAcceleratorA)(struct IPreviewHandlerFrame *, MSG *);
};

struct IPreviewHandlerFrame {
    struct IPreviewHandlerFrameVtbl * lpVtbl;
};

typedef struct IPreviewHandlerVisuals IPreviewHandlerVisuals, *PIPreviewHandlerVisuals;

typedef struct IPreviewHandlerVisualsVtbl IPreviewHandlerVisualsVtbl, *PIPreviewHandlerVisualsVtbl;

typedef struct tagLOGFONTW LOGFONTW;

struct IPreviewHandlerVisualsVtbl {
    HRESULT (* QueryInterface)(struct IPreviewHandlerVisuals *, IID *, void * *);
    ULONG (* AddRef)(struct IPreviewHandlerVisuals *);
    ULONG (* Release)(struct IPreviewHandlerVisuals *);
    HRESULT (* SetBackgroundColor)(struct IPreviewHandlerVisuals *, COLORREF);
    HRESULT (* SetFont)(struct IPreviewHandlerVisuals *, LOGFONTW *);
    HRESULT (* SetTextColor)(struct IPreviewHandlerVisuals *, COLORREF);
};

struct IPreviewHandlerVisuals {
    struct IPreviewHandlerVisualsVtbl * lpVtbl;
};

typedef struct IPreviewItem IPreviewItem, *PIPreviewItem;

struct IPreviewItem {
};

typedef struct IPreviousVersionsInfo IPreviousVersionsInfo, *PIPreviousVersionsInfo;

typedef struct IPreviousVersionsInfoVtbl IPreviousVersionsInfoVtbl, *PIPreviousVersionsInfoVtbl;

struct IPreviousVersionsInfoVtbl {
    HRESULT (* QueryInterface)(struct IPreviousVersionsInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IPreviousVersionsInfo *);
    ULONG (* Release)(struct IPreviousVersionsInfo *);
    HRESULT (* AreSnapshotsAvailable)(struct IPreviousVersionsInfo *, LPCWSTR, BOOL, BOOL *);
};

struct IPreviousVersionsInfo {
    struct IPreviousVersionsInfoVtbl * lpVtbl;
};

typedef struct IProfferService IProfferService, *PIProfferService;

typedef struct IProfferServiceVtbl IProfferServiceVtbl, *PIProfferServiceVtbl;

struct IProfferService {
    struct IProfferServiceVtbl * lpVtbl;
};

struct IProfferServiceVtbl {
    HRESULT (* QueryInterface)(struct IProfferService *, IID *, void * *);
    ULONG (* AddRef)(struct IProfferService *);
    ULONG (* Release)(struct IProfferService *);
    HRESULT (* ProfferService)(struct IProfferService *, GUID *, struct IServiceProvider *, DWORD *);
    HRESULT (* RevokeService)(struct IProfferService *, DWORD);
};

typedef struct IPropertyUI IPropertyUI, *PIPropertyUI;

typedef struct IPropertyUIVtbl IPropertyUIVtbl, *PIPropertyUIVtbl;

typedef DWORD PROPERTYUI_NAME_FLAGS;

typedef DWORD PROPERTYUI_FLAGS;

typedef DWORD PROPERTYUI_FORMAT_FLAGS;

struct IPropertyUI {
    struct IPropertyUIVtbl * lpVtbl;
};

struct IPropertyUIVtbl {
    HRESULT (* QueryInterface)(struct IPropertyUI *, IID *, void * *);
    ULONG (* AddRef)(struct IPropertyUI *);
    ULONG (* Release)(struct IPropertyUI *);
    HRESULT (* ParsePropertyName)(struct IPropertyUI *, LPCWSTR, FMTID *, PROPID *, ULONG *);
    HRESULT (* GetCannonicalName)(struct IPropertyUI *, IID *, PROPID, LPWSTR, DWORD);
    HRESULT (* GetDisplayName)(struct IPropertyUI *, IID *, PROPID, PROPERTYUI_NAME_FLAGS, LPWSTR, DWORD);
    HRESULT (* GetPropertyDescription)(struct IPropertyUI *, IID *, PROPID, LPWSTR, DWORD);
    HRESULT (* GetDefaultWidth)(struct IPropertyUI *, IID *, PROPID, ULONG *);
    HRESULT (* GetFlags)(struct IPropertyUI *, IID *, PROPID, PROPERTYUI_FLAGS *);
    HRESULT (* FormatForDisplay)(struct IPropertyUI *, IID *, PROPID, PROPVARIANT *, PROPERTYUI_FORMAT_FLAGS, LPWSTR, DWORD);
    HRESULT (* GetHelpInfo)(struct IPropertyUI *, IID *, PROPID, LPWSTR, DWORD, UINT *);
};

typedef struct IPublishingWizard IPublishingWizard, *PIPublishingWizard;

typedef struct IPublishingWizardVtbl IPublishingWizardVtbl, *PIPublishingWizardVtbl;

struct IPublishingWizardVtbl {
    HRESULT (* QueryInterface)(struct IPublishingWizard *, IID *, void * *);
    ULONG (* AddRef)(struct IPublishingWizard *);
    ULONG (* Release)(struct IPublishingWizard *);
    HRESULT (* AddPages)(struct IPublishingWizard *, HPROPSHEETPAGE *, UINT, UINT *);
    HRESULT (* GetFirstPage)(struct IPublishingWizard *, HPROPSHEETPAGE *);
    HRESULT (* GetLastPage)(struct IPublishingWizard *, HPROPSHEETPAGE *);
    HRESULT (* Initialize)(struct IPublishingWizard *, struct IDataObject *, DWORD, LPCWSTR);
    HRESULT (* GetTransferManifest)(struct IPublishingWizard *, HRESULT *, struct IXMLDOMDocument * *);
};

struct IPublishingWizard {
    struct IPublishingWizardVtbl * lpVtbl;
};

typedef struct IQueryCancelAutoPlay IQueryCancelAutoPlay, *PIQueryCancelAutoPlay;

typedef struct IQueryCancelAutoPlayVtbl IQueryCancelAutoPlayVtbl, *PIQueryCancelAutoPlayVtbl;

struct IQueryCancelAutoPlayVtbl {
    HRESULT (* QueryInterface)(struct IQueryCancelAutoPlay *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryCancelAutoPlay *);
    ULONG (* Release)(struct IQueryCancelAutoPlay *);
    HRESULT (* AllowAutoPlay)(struct IQueryCancelAutoPlay *, LPCWSTR, DWORD, LPCWSTR, DWORD);
};

struct IQueryCancelAutoPlay {
    struct IQueryCancelAutoPlayVtbl * lpVtbl;
};

typedef struct IQueryCodePage IQueryCodePage, *PIQueryCodePage;

typedef struct IQueryCodePageVtbl IQueryCodePageVtbl, *PIQueryCodePageVtbl;

struct IQueryCodePageVtbl {
    HRESULT (* QueryInterface)(struct IQueryCodePage *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryCodePage *);
    ULONG (* Release)(struct IQueryCodePage *);
    HRESULT (* GetCodePage)(struct IQueryCodePage *, UINT *);
    HRESULT (* SetCodePage)(struct IQueryCodePage *, UINT);
};

struct IQueryCodePage {
    struct IQueryCodePageVtbl * lpVtbl;
};

typedef struct IQueryContinue IQueryContinue, *PIQueryContinue;

typedef struct IQueryContinueVtbl IQueryContinueVtbl, *PIQueryContinueVtbl;

struct IQueryContinueVtbl {
    HRESULT (* QueryInterface)(struct IQueryContinue *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryContinue *);
    ULONG (* Release)(struct IQueryContinue *);
    HRESULT (* QueryContinue)(struct IQueryContinue *);
};

struct IQueryContinue {
    struct IQueryContinueVtbl * lpVtbl;
};

typedef struct IRegTreeItem IRegTreeItem, *PIRegTreeItem;

struct IRegTreeItem {
};

typedef struct IRelatedItem IRelatedItem, *PIRelatedItem;

struct IRelatedItem {
};

typedef struct IRemoteComputer IRemoteComputer, *PIRemoteComputer;

typedef struct IRemoteComputerVtbl IRemoteComputerVtbl, *PIRemoteComputerVtbl;

struct IRemoteComputer {
    struct IRemoteComputerVtbl * lpVtbl;
};

struct IRemoteComputerVtbl {
    HRESULT (* QueryInterface)(struct IRemoteComputer *, IID *, void * *);
    ULONG (* AddRef)(struct IRemoteComputer *);
    ULONG (* Release)(struct IRemoteComputer *);
    HRESULT (* Initialize)(struct IRemoteComputer *, LPCWSTR, BOOL);
};

typedef struct IResolveShellLink IResolveShellLink, *PIResolveShellLink;

struct IResolveShellLink {
};

typedef struct IResultsFolder IResultsFolder, *PIResultsFolder;

typedef struct IResultsFolderVtbl IResultsFolderVtbl, *PIResultsFolderVtbl;

struct IResultsFolder {
    struct IResultsFolderVtbl * lpVtbl;
};

struct IResultsFolderVtbl {
    HRESULT (* QueryInterface)(struct IResultsFolder *, IID *, void * *);
    ULONG (* AddRef)(struct IResultsFolder *);
    ULONG (* Release)(struct IResultsFolder *);
    HRESULT (* AddItem)(struct IResultsFolder *, struct IShellItem *);
    HRESULT (* AddIDList)(struct IResultsFolder *, LPCITEMIDLIST, LPITEMIDLIST *);
    HRESULT (* RemoveItem)(struct IResultsFolder *, struct IShellItem *);
    HRESULT (* RemoveIDList)(struct IResultsFolder *, LPCITEMIDLIST);
    HRESULT (* RemoveAll)(struct IResultsFolder *);
};

typedef struct IRunnableTask IRunnableTask, *PIRunnableTask;

typedef struct IRunnableTaskVtbl IRunnableTaskVtbl, *PIRunnableTaskVtbl;

struct IRunnableTaskVtbl {
    HRESULT (* QueryInterface)(struct IRunnableTask *, IID *, void * *);
    ULONG (* AddRef)(struct IRunnableTask *);
    ULONG (* Release)(struct IRunnableTask *);
    HRESULT (* Run)(struct IRunnableTask *);
    HRESULT (* Kill)(struct IRunnableTask *, BOOL);
    HRESULT (* Suspend)(struct IRunnableTask *);
    HRESULT (* Resume)(struct IRunnableTask *);
    ULONG (* IsRunning)(struct IRunnableTask *);
};

struct IRunnableTask {
    struct IRunnableTaskVtbl * lpVtbl;
};

typedef struct ISearchBoxInfo ISearchBoxInfo, *PISearchBoxInfo;

struct ISearchBoxInfo {
};

typedef struct ISearchFolderItemFactory ISearchFolderItemFactory, *PISearchFolderItemFactory;

struct ISearchFolderItemFactory {
};

typedef struct ISharingConfigurationManager ISharingConfigurationManager, *PISharingConfigurationManager;

struct ISharingConfigurationManager {
};

typedef struct IShellExtInit IShellExtInit, *PIShellExtInit;

typedef struct IShellExtInitVtbl IShellExtInitVtbl, *PIShellExtInitVtbl;

struct IShellExtInitVtbl {
    HRESULT (* QueryInterface)(struct IShellExtInit *, IID *, void * *);
    ULONG (* AddRef)(struct IShellExtInit *);
    ULONG (* Release)(struct IShellExtInit *);
    HRESULT (* Initialize)(struct IShellExtInit *, LPCITEMIDLIST, struct IDataObject *, HKEY);
};

struct IShellExtInit {
    struct IShellExtInitVtbl * lpVtbl;
};

typedef struct IShellFolder2 IShellFolder2, *PIShellFolder2;

typedef struct IShellFolder2Vtbl IShellFolder2Vtbl, *PIShellFolder2Vtbl;

struct IShellFolder2Vtbl {
    HRESULT (* QueryInterface)(struct IShellFolder2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellFolder2 *);
    ULONG (* Release)(struct IShellFolder2 *);
    HRESULT (* ParseDisplayName)(struct IShellFolder2 *, HWND, struct IBindCtx *, LPWSTR, ULONG *, LPITEMIDLIST *, ULONG *);
    HRESULT (* EnumObjects)(struct IShellFolder2 *, HWND, SHCONTF, struct IEnumIDList * *);
    HRESULT (* BindToObject)(struct IShellFolder2 *, LPCITEMIDLIST, struct IBindCtx *, IID *, void * *);
    HRESULT (* BindToStorage)(struct IShellFolder2 *, LPCITEMIDLIST, struct IBindCtx *, IID *, void * *);
    HRESULT (* CompareIDs)(struct IShellFolder2 *, LPARAM, LPCITEMIDLIST, LPCITEMIDLIST);
    HRESULT (* CreateViewObject)(struct IShellFolder2 *, HWND, IID *, void * *);
    HRESULT (* GetAttributesOf)(struct IShellFolder2 *, UINT, LPCITEMIDLIST *, SFGAOF *);
    HRESULT (* GetUIObjectOf)(struct IShellFolder2 *, HWND, UINT, LPCITEMIDLIST *, IID *, UINT *, void * *);
    HRESULT (* GetDisplayNameOf)(struct IShellFolder2 *, LPCITEMIDLIST, SHGDNF, STRRET *);
    HRESULT (* SetNameOf)(struct IShellFolder2 *, HWND, LPCITEMIDLIST, LPCWSTR, SHGDNF, LPITEMIDLIST *);
    HRESULT (* GetDefaultSearchGUID)(struct IShellFolder2 *, GUID *);
    HRESULT (* EnumSearches)(struct IShellFolder2 *, struct IEnumExtraSearch * *);
    HRESULT (* GetDefaultColumn)(struct IShellFolder2 *, DWORD, ULONG *, ULONG *);
    HRESULT (* GetDefaultColumnState)(struct IShellFolder2 *, UINT, SHCOLSTATEF *);
    HRESULT (* GetDetailsEx)(struct IShellFolder2 *, LPCITEMIDLIST, SHCOLUMNID *, VARIANT *);
    HRESULT (* GetDetailsOf)(struct IShellFolder2 *, LPCITEMIDLIST, UINT, SHELLDETAILS *);
    HRESULT (* MapColumnToSCID)(struct IShellFolder2 *, UINT, SHCOLUMNID *);
};

struct IShellFolder2 {
    struct IShellFolder2Vtbl * lpVtbl;
};

typedef struct IShellIcon IShellIcon, *PIShellIcon;

typedef struct IShellIconVtbl IShellIconVtbl, *PIShellIconVtbl;

struct IShellIcon {
    struct IShellIconVtbl * lpVtbl;
};

struct IShellIconVtbl {
    HRESULT (* QueryInterface)(struct IShellIcon *, IID *, void * *);
    ULONG (* AddRef)(struct IShellIcon *);
    ULONG (* Release)(struct IShellIcon *);
    HRESULT (* GetIconOf)(struct IShellIcon *, LPCITEMIDLIST, UINT, int *);
};

typedef struct IShellItem2 IShellItem2, *PIShellItem2;

typedef struct IShellItem2Vtbl IShellItem2Vtbl, *PIShellItem2Vtbl;

struct IShellItem2 {
    struct IShellItem2Vtbl * lpVtbl;
};

struct IShellItem2Vtbl {
    HRESULT (* QueryInterface)(struct IShellItem2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellItem2 *);
    ULONG (* Release)(struct IShellItem2 *);
    HRESULT (* BindToHandler)(struct IShellItem2 *, struct IBindCtx *, GUID *, IID *, void * *);
    HRESULT (* GetParent)(struct IShellItem2 *, struct IShellItem * *);
    HRESULT (* GetDisplayName)(struct IShellItem2 *, SIGDN, LPWSTR *);
    HRESULT (* GetAttributes)(struct IShellItem2 *, SFGAOF, SFGAOF *);
    HRESULT (* Compare)(struct IShellItem2 *, struct IShellItem *, SICHINTF, int *);
    HRESULT (* GetPropertyStore)(struct IShellItem2 *, enum GETPROPERTYSTOREFLAGS, IID *, void * *);
    HRESULT (* GetPropertyStoreWithCreateObject)(struct IShellItem2 *, enum GETPROPERTYSTOREFLAGS, struct IUnknown *, IID *, void * *);
    HRESULT (* GetPropertyStoreForKeys)(struct IShellItem2 *, PROPERTYKEY *, UINT, enum GETPROPERTYSTOREFLAGS, IID *, void * *);
    HRESULT (* GetPropertyDescriptionList)(struct IShellItem2 *, PROPERTYKEY *, IID *, void * *);
    HRESULT (* Update)(struct IShellItem2 *, struct IBindCtx *);
    HRESULT (* GetProperty)(struct IShellItem2 *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetCLSID)(struct IShellItem2 *, PROPERTYKEY *, CLSID *);
    HRESULT (* GetFileTime)(struct IShellItem2 *, PROPERTYKEY *, FILETIME *);
    HRESULT (* GetInt32)(struct IShellItem2 *, PROPERTYKEY *, int *);
    HRESULT (* GetString)(struct IShellItem2 *, PROPERTYKEY *, LPWSTR *);
    HRESULT (* GetUInt32)(struct IShellItem2 *, PROPERTYKEY *, ULONG *);
    HRESULT (* GetUInt64)(struct IShellItem2 *, PROPERTYKEY *, ULONGLONG *);
    HRESULT (* GetBool)(struct IShellItem2 *, PROPERTYKEY *, BOOL *);
};

typedef struct IShellItemImageFactory IShellItemImageFactory, *PIShellItemImageFactory;

typedef struct IShellItemImageFactoryVtbl IShellItemImageFactoryVtbl, *PIShellItemImageFactoryVtbl;

typedef int SIIGBF;

struct IShellItemImageFactoryVtbl {
    HRESULT (* QueryInterface)(struct IShellItemImageFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IShellItemImageFactory *);
    ULONG (* Release)(struct IShellItemImageFactory *);
    HRESULT (* GetImage)(struct IShellItemImageFactory *, SIZE, SIIGBF, HBITMAP *);
};

struct IShellItemImageFactory {
    struct IShellItemImageFactoryVtbl * lpVtbl;
};

typedef struct IShellItemResources IShellItemResources, *PIShellItemResources;

typedef struct IShellItemResourcesVtbl IShellItemResourcesVtbl, *PIShellItemResourcesVtbl;

struct IShellItemResources {
    struct IShellItemResourcesVtbl * lpVtbl;
};

struct IShellItemResourcesVtbl {
    HRESULT (* QueryInterface)(struct IShellItemResources *, IID *, void * *);
    ULONG (* AddRef)(struct IShellItemResources *);
    ULONG (* Release)(struct IShellItemResources *);
    HRESULT (* GetAttributes)(struct IShellItemResources *, DWORD *);
    HRESULT (* GetSize)(struct IShellItemResources *, ULONGLONG *);
    HRESULT (* GetTimes)(struct IShellItemResources *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (* SetTimes)(struct IShellItemResources *, FILETIME *, FILETIME *, FILETIME *);
    HRESULT (* GetResourceDescription)(struct IShellItemResources *, struct SHELL_ITEM_RESOURCE *, LPWSTR *);
    HRESULT (* EnumResources)(struct IShellItemResources *, struct IEnumResources * *);
    HRESULT (* SupportsResource)(struct IShellItemResources *, struct SHELL_ITEM_RESOURCE *);
    HRESULT (* OpenResource)(struct IShellItemResources *, struct SHELL_ITEM_RESOURCE *, IID *, void * *);
    HRESULT (* CreateResource)(struct IShellItemResources *, struct SHELL_ITEM_RESOURCE *, IID *, void * *);
    HRESULT (* MarkForDelete)(struct IShellItemResources *);
};

typedef struct IShellLibrary IShellLibrary, *PIShellLibrary;

typedef struct IShellLibraryVtbl IShellLibraryVtbl, *PIShellLibraryVtbl;

typedef GUID KNOWNFOLDERID;

typedef enum LIBRARYFOLDERFILTER {
    LFF_ALLITEMS=3,
    LFF_FORCEFILESYSTEM=1,
    LFF_STORAGEITEMS=2
} LIBRARYFOLDERFILTER;

typedef enum LIBRARYOPTIONFLAGS {
    LOF_DEFAULT=0,
    LOF_MASK_ALL=1,
    LOF_PINNEDTONAVPANE=1
} LIBRARYOPTIONFLAGS;

typedef GUID FOLDERTYPEID;

typedef enum LIBRARYSAVEFLAGS {
    LSF_FAILIFTHERE=0,
    LSF_MAKEUNIQUENAME=2,
    LSF_OVERRIDEEXISTING=1
} LIBRARYSAVEFLAGS;

struct IShellLibrary {
    struct IShellLibraryVtbl * lpVtbl;
};

struct IShellLibraryVtbl {
    HRESULT (* QueryInterface)(struct IShellLibrary *, IID *, void * *);
    ULONG (* AddRef)(struct IShellLibrary *);
    ULONG (* Release)(struct IShellLibrary *);
    HRESULT (* LoadLibraryFromItem)(struct IShellLibrary *, struct IShellItem *, DWORD);
    HRESULT (* LoadLibraryFromKnownFolder)(struct IShellLibrary *, KNOWNFOLDERID *, DWORD);
    HRESULT (* AddFolder)(struct IShellLibrary *, struct IShellItem *);
    HRESULT (* RemoveFolder)(struct IShellLibrary *, struct IShellItem *);
    HRESULT (* GetFolders)(struct IShellLibrary *, enum LIBRARYFOLDERFILTER, IID *, void * *);
    HRESULT (* ResolveFolder)(struct IShellLibrary *, struct IShellItem *, DWORD, IID *, void * *);
    HRESULT (* GetDefaultSaveFolder)(struct IShellLibrary *, enum DEFAULTSAVEFOLDERTYPE, IID *, void * *);
    HRESULT (* SetDefaultSaveFolder)(struct IShellLibrary *, enum DEFAULTSAVEFOLDERTYPE, struct IShellItem *);
    HRESULT (* GetOptions)(struct IShellLibrary *, enum LIBRARYOPTIONFLAGS *);
    HRESULT (* SetOptions)(struct IShellLibrary *, enum LIBRARYOPTIONFLAGS, enum LIBRARYOPTIONFLAGS);
    HRESULT (* GetFolderType)(struct IShellLibrary *, FOLDERTYPEID *);
    HRESULT (* SetFolderType)(struct IShellLibrary *, FOLDERTYPEID *);
    HRESULT (* GetIcon)(struct IShellLibrary *, LPWSTR *);
    HRESULT (* SetIcon)(struct IShellLibrary *, LPCWSTR);
    HRESULT (* Commit)(struct IShellLibrary *);
    HRESULT (* Save)(struct IShellLibrary *, struct IShellItem *, LPCWSTR, enum LIBRARYSAVEFLAGS, struct IShellItem * *);
    HRESULT (* SaveInKnownFolder)(struct IShellLibrary *, KNOWNFOLDERID *, LPCWSTR, enum LIBRARYSAVEFLAGS, struct IShellItem * *);
};

typedef struct IShellLinkA IShellLinkA, *PIShellLinkA;

typedef struct IShellLinkAVtbl IShellLinkAVtbl, *PIShellLinkAVtbl;

typedef struct _WIN32_FIND_DATAA _WIN32_FIND_DATAA, *P_WIN32_FIND_DATAA;

typedef struct _WIN32_FIND_DATAA WIN32_FIND_DATAA;

struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

struct IShellLinkA {
    struct IShellLinkAVtbl * lpVtbl;
};

struct IShellLinkAVtbl {
    HRESULT (* QueryInterface)(struct IShellLinkA *, IID *, void * *);
    ULONG (* AddRef)(struct IShellLinkA *);
    ULONG (* Release)(struct IShellLinkA *);
    HRESULT (* GetPath)(struct IShellLinkA *, LPSTR, int, WIN32_FIND_DATAA *, DWORD);
    HRESULT (* GetIDList)(struct IShellLinkA *, LPITEMIDLIST *);
    HRESULT (* SetIDList)(struct IShellLinkA *, LPCITEMIDLIST);
    HRESULT (* GetDescription)(struct IShellLinkA *, LPSTR, int);
    HRESULT (* SetDescription)(struct IShellLinkA *, LPCSTR);
    HRESULT (* GetWorkingDirectory)(struct IShellLinkA *, LPSTR, int);
    HRESULT (* SetWorkingDirectory)(struct IShellLinkA *, LPCSTR);
    HRESULT (* GetArguments)(struct IShellLinkA *, LPSTR, int);
    HRESULT (* SetArguments)(struct IShellLinkA *, LPCSTR);
    HRESULT (* GetHotkey)(struct IShellLinkA *, WORD *);
    HRESULT (* SetHotkey)(struct IShellLinkA *, WORD);
    HRESULT (* GetShowCmd)(struct IShellLinkA *, int *);
    HRESULT (* SetShowCmd)(struct IShellLinkA *, int);
    HRESULT (* GetIconLocation)(struct IShellLinkA *, LPSTR, int, int *);
    HRESULT (* SetIconLocation)(struct IShellLinkA *, LPCSTR, int);
    HRESULT (* SetRelativePath)(struct IShellLinkA *, LPCSTR, DWORD);
    HRESULT (* Resolve)(struct IShellLinkA *, HWND, DWORD);
    HRESULT (* SetPath)(struct IShellLinkA *, LPCSTR);
};

typedef struct IShellLinkDataList IShellLinkDataList, *PIShellLinkDataList;

typedef struct IShellLinkDataListVtbl IShellLinkDataListVtbl, *PIShellLinkDataListVtbl;

struct IShellLinkDataList {
    struct IShellLinkDataListVtbl * lpVtbl;
};

struct IShellLinkDataListVtbl {
    HRESULT (* QueryInterface)(struct IShellLinkDataList *, IID *, void * *);
    ULONG (* AddRef)(struct IShellLinkDataList *);
    ULONG (* Release)(struct IShellLinkDataList *);
    HRESULT (* AddDataBlock)(struct IShellLinkDataList *, void *);
    HRESULT (* CopyDataBlock)(struct IShellLinkDataList *, DWORD, void * *);
    HRESULT (* RemoveDataBlock)(struct IShellLinkDataList *, DWORD);
    HRESULT (* GetFlags)(struct IShellLinkDataList *, DWORD *);
    HRESULT (* SetFlags)(struct IShellLinkDataList *, DWORD);
};

typedef struct IShellLinkW IShellLinkW, *PIShellLinkW;

typedef struct IShellLinkWVtbl IShellLinkWVtbl, *PIShellLinkWVtbl;

struct IShellLinkW {
    struct IShellLinkWVtbl * lpVtbl;
};

struct IShellLinkWVtbl {
    HRESULT (* QueryInterface)(struct IShellLinkW *, IID *, void * *);
    ULONG (* AddRef)(struct IShellLinkW *);
    ULONG (* Release)(struct IShellLinkW *);
    HRESULT (* GetPath)(struct IShellLinkW *, LPWSTR, int, WIN32_FIND_DATAW *, DWORD);
    HRESULT (* GetIDList)(struct IShellLinkW *, LPITEMIDLIST *);
    HRESULT (* SetIDList)(struct IShellLinkW *, LPCITEMIDLIST);
    HRESULT (* GetDescription)(struct IShellLinkW *, LPWSTR, int);
    HRESULT (* SetDescription)(struct IShellLinkW *, LPCWSTR);
    HRESULT (* GetWorkingDirectory)(struct IShellLinkW *, LPWSTR, int);
    HRESULT (* SetWorkingDirectory)(struct IShellLinkW *, LPCWSTR);
    HRESULT (* GetArguments)(struct IShellLinkW *, LPWSTR, int);
    HRESULT (* SetArguments)(struct IShellLinkW *, LPCWSTR);
    HRESULT (* GetHotkey)(struct IShellLinkW *, WORD *);
    HRESULT (* SetHotkey)(struct IShellLinkW *, WORD);
    HRESULT (* GetShowCmd)(struct IShellLinkW *, int *);
    HRESULT (* SetShowCmd)(struct IShellLinkW *, int);
    HRESULT (* GetIconLocation)(struct IShellLinkW *, LPWSTR, int, int *);
    HRESULT (* SetIconLocation)(struct IShellLinkW *, LPCWSTR, int);
    HRESULT (* SetRelativePath)(struct IShellLinkW *, LPCWSTR, DWORD);
    HRESULT (* Resolve)(struct IShellLinkW *, HWND, DWORD);
    HRESULT (* SetPath)(struct IShellLinkW *, LPCWSTR);
};

typedef struct IShellMenu IShellMenu, *PIShellMenu;

typedef struct IShellMenuVtbl IShellMenuVtbl, *PIShellMenuVtbl;

typedef struct IShellMenuCallback IShellMenuCallback, *PIShellMenuCallback;

typedef struct tagSMDATA tagSMDATA, *PtagSMDATA;

typedef struct tagSMDATA * LPSMDATA;

typedef struct IShellMenuCallbackVtbl IShellMenuCallbackVtbl, *PIShellMenuCallbackVtbl;

struct IShellMenuCallbackVtbl {
    HRESULT (* QueryInterface)(struct IShellMenuCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IShellMenuCallback *);
    ULONG (* Release)(struct IShellMenuCallback *);
    HRESULT (* CallbackSM)(struct IShellMenuCallback *, LPSMDATA, UINT, WPARAM, LPARAM);
};

struct IShellMenuVtbl {
    HRESULT (* QueryInterface)(struct IShellMenu *, IID *, void * *);
    ULONG (* AddRef)(struct IShellMenu *);
    ULONG (* Release)(struct IShellMenu *);
    HRESULT (* Initialize)(struct IShellMenu *, struct IShellMenuCallback *, UINT, UINT, DWORD);
    HRESULT (* GetMenuInfo)(struct IShellMenu *, struct IShellMenuCallback * *, UINT *, UINT *, DWORD *);
    HRESULT (* SetShellFolder)(struct IShellMenu *, struct IShellFolder *, LPCITEMIDLIST, HKEY, DWORD);
    HRESULT (* GetShellFolder)(struct IShellMenu *, DWORD *, LPITEMIDLIST *, IID *, void * *);
    HRESULT (* SetMenu)(struct IShellMenu *, HMENU, HWND, DWORD);
    HRESULT (* GetMenu)(struct IShellMenu *, HMENU *, HWND *, DWORD *);
    HRESULT (* InvalidateItem)(struct IShellMenu *, LPSMDATA, DWORD);
    HRESULT (* GetState)(struct IShellMenu *, LPSMDATA);
    HRESULT (* SetMenuToolbar)(struct IShellMenu *, struct IUnknown *, DWORD);
};

struct IShellMenuCallback {
    struct IShellMenuCallbackVtbl * lpVtbl;
};

struct tagSMDATA {
    DWORD dwMask;
    DWORD dwFlags;
    HMENU hmenu;
    HWND hwnd;
    UINT uId;
    UINT uIdParent;
    UINT uIdAncestor;
    struct IUnknown * punk;
    LPITEMIDLIST pidlFolder;
    LPITEMIDLIST pidlItem;
    struct IShellFolder * psf;
    void * pvUserData;
};

struct IShellMenu {
    struct IShellMenuVtbl * lpVtbl;
};

typedef struct IShellPropSheetExt IShellPropSheetExt, *PIShellPropSheetExt;

typedef struct IShellPropSheetExtVtbl IShellPropSheetExtVtbl, *PIShellPropSheetExtVtbl;

struct IShellPropSheetExtVtbl {
    HRESULT (* QueryInterface)(struct IShellPropSheetExt *, IID *, void * *);
    ULONG (* AddRef)(struct IShellPropSheetExt *);
    ULONG (* Release)(struct IShellPropSheetExt *);
    HRESULT (* AddPages)(struct IShellPropSheetExt *, LPFNSVADDPROPSHEETPAGE, LPARAM);
    HRESULT (* ReplacePage)(struct IShellPropSheetExt *, EXPPS, LPFNSVADDPROPSHEETPAGE, LPARAM);
};

struct IShellPropSheetExt {
    struct IShellPropSheetExtVtbl * lpVtbl;
};

typedef struct IShellRunDll IShellRunDll, *PIShellRunDll;

typedef struct IShellRunDllVtbl IShellRunDllVtbl, *PIShellRunDllVtbl;

struct IShellRunDllVtbl {
    HRESULT (* QueryInterface)(struct IShellRunDll *, IID *, void * *);
    ULONG (* AddRef)(struct IShellRunDll *);
    ULONG (* Release)(struct IShellRunDll *);
    HRESULT (* Run)(struct IShellRunDll *, LPCWSTR);
};

struct IShellRunDll {
    struct IShellRunDllVtbl * lpVtbl;
};

typedef struct IShellTaskScheduler IShellTaskScheduler, *PIShellTaskScheduler;

typedef struct IShellTaskSchedulerVtbl IShellTaskSchedulerVtbl, *PIShellTaskSchedulerVtbl;

typedef GUID TASKOWNERID;

struct IShellTaskScheduler {
    struct IShellTaskSchedulerVtbl * lpVtbl;
};

struct IShellTaskSchedulerVtbl {
    HRESULT (* QueryInterface)(struct IShellTaskScheduler *, IID *, void * *);
    ULONG (* AddRef)(struct IShellTaskScheduler *);
    ULONG (* Release)(struct IShellTaskScheduler *);
    HRESULT (* AddTask)(struct IShellTaskScheduler *, struct IRunnableTask *, TASKOWNERID *, DWORD_PTR, DWORD);
    HRESULT (* RemoveTasks)(struct IShellTaskScheduler *, TASKOWNERID *, DWORD_PTR, BOOL);
    UINT (* CountTasks)(struct IShellTaskScheduler *, TASKOWNERID *);
    HRESULT (* Status)(struct IShellTaskScheduler *, DWORD, DWORD);
};

typedef struct IShellView2 IShellView2, *PIShellView2;

typedef struct IShellView2Vtbl IShellView2Vtbl, *PIShellView2Vtbl;

typedef struct _SV2CVW2_PARAMS * LPSV2CVW2_PARAMS;

struct IShellView2 {
    struct IShellView2Vtbl * lpVtbl;
};

struct IShellView2Vtbl {
    HRESULT (* QueryInterface)(struct IShellView2 *, IID *, void * *);
    ULONG (* AddRef)(struct IShellView2 *);
    ULONG (* Release)(struct IShellView2 *);
    HRESULT (* GetWindow)(struct IShellView2 *, HWND *);
    HRESULT (* ContextSensitiveHelp)(struct IShellView2 *, BOOL);
    HRESULT (* TranslateAcceleratorA)(struct IShellView2 *, MSG *);
    HRESULT (* EnableModeless)(struct IShellView2 *, BOOL);
    HRESULT (* UIActivate)(struct IShellView2 *, UINT);
    HRESULT (* Refresh)(struct IShellView2 *);
    HRESULT (* CreateViewWindow)(struct IShellView2 *, struct IShellView *, LPCFOLDERSETTINGS, struct IShellBrowser *, RECT *, HWND *);
    HRESULT (* DestroyViewWindow)(struct IShellView2 *);
    HRESULT (* GetCurrentInfo)(struct IShellView2 *, LPFOLDERSETTINGS);
    HRESULT (* AddPropertySheetPages)(struct IShellView2 *, DWORD, LPFNSVADDPROPSHEETPAGE, LPARAM);
    HRESULT (* SaveViewState)(struct IShellView2 *);
    HRESULT (* SelectItem)(struct IShellView2 *, LPCITEMIDLIST, SVSIF);
    HRESULT (* GetItemObject)(struct IShellView2 *, UINT, IID *, void * *);
    HRESULT (* GetView)(struct IShellView2 *, SHELLVIEWID *, ULONG);
    HRESULT (* CreateViewWindow2)(struct IShellView2 *, LPSV2CVW2_PARAMS);
    HRESULT (* HandleRename)(struct IShellView2 *, LPCITEMIDLIST);
    HRESULT (* SelectAndPositionItem)(struct IShellView2 *, LPCITEMIDLIST, UINT, POINT *);
};

typedef struct IShellView3 IShellView3, *PIShellView3;

struct IShellView3 {
};

typedef struct IStartMenuPinnedList IStartMenuPinnedList, *PIStartMenuPinnedList;

typedef struct IStartMenuPinnedListVtbl IStartMenuPinnedListVtbl, *PIStartMenuPinnedListVtbl;

struct IStartMenuPinnedListVtbl {
    HRESULT (* QueryInterface)(struct IStartMenuPinnedList *, IID *, void * *);
    ULONG (* AddRef)(struct IStartMenuPinnedList *);
    ULONG (* Release)(struct IStartMenuPinnedList *);
    HRESULT (* RemoveFromList)(struct IStartMenuPinnedList *, struct IShellItem *);
};

struct IStartMenuPinnedList {
    struct IStartMenuPinnedListVtbl * lpVtbl;
};

typedef struct IStreamAsync IStreamAsync, *PIStreamAsync;

typedef struct IStreamAsyncVtbl IStreamAsyncVtbl, *PIStreamAsyncVtbl;

struct IStreamAsyncVtbl {
    HRESULT (* QueryInterface)(struct IStreamAsync *, IID *, void * *);
    ULONG (* AddRef)(struct IStreamAsync *);
    ULONG (* Release)(struct IStreamAsync *);
    HRESULT (* Read)(struct IStreamAsync *, void *, ULONG, ULONG *);
    HRESULT (* Write)(struct IStreamAsync *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct IStreamAsync *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* SetSize)(struct IStreamAsync *, ULARGE_INTEGER);
    HRESULT (* CopyTo)(struct IStreamAsync *, struct IStream *, ULARGE_INTEGER, ULARGE_INTEGER *, ULARGE_INTEGER *);
    HRESULT (* Commit)(struct IStreamAsync *, DWORD);
    HRESULT (* Revert)(struct IStreamAsync *);
    HRESULT (* LockRegion)(struct IStreamAsync *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* UnlockRegion)(struct IStreamAsync *, ULARGE_INTEGER, ULARGE_INTEGER, DWORD);
    HRESULT (* Stat)(struct IStreamAsync *, STATSTG *, DWORD);
    HRESULT (* Clone)(struct IStreamAsync *, struct IStream * *);
    HRESULT (* ReadAsync)(struct IStreamAsync *, void *, DWORD, LPDWORD, LPOVERLAPPED);
    HRESULT (* WriteAsync)(struct IStreamAsync *, void *, DWORD, LPDWORD, LPOVERLAPPED);
    HRESULT (* OverlappedResult)(struct IStreamAsync *, LPOVERLAPPED, LPDWORD, BOOL);
    HRESULT (* CancelIo)(struct IStreamAsync *);
};

struct IStreamAsync {
    struct IStreamAsyncVtbl * lpVtbl;
};

typedef struct IStreamUnbufferedInfo IStreamUnbufferedInfo, *PIStreamUnbufferedInfo;

typedef struct IStreamUnbufferedInfoVtbl IStreamUnbufferedInfoVtbl, *PIStreamUnbufferedInfoVtbl;

struct IStreamUnbufferedInfoVtbl {
    HRESULT (* QueryInterface)(struct IStreamUnbufferedInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IStreamUnbufferedInfo *);
    ULONG (* Release)(struct IStreamUnbufferedInfo *);
    HRESULT (* GetSectorSize)(struct IStreamUnbufferedInfo *, ULONG *);
};

struct IStreamUnbufferedInfo {
    struct IStreamUnbufferedInfoVtbl * lpVtbl;
};

typedef struct ITaskbarList ITaskbarList, *PITaskbarList;

typedef struct ITaskbarListVtbl ITaskbarListVtbl, *PITaskbarListVtbl;

struct ITaskbarList {
    struct ITaskbarListVtbl * lpVtbl;
};

struct ITaskbarListVtbl {
    HRESULT (* QueryInterface)(struct ITaskbarList *, IID *, void * *);
    ULONG (* AddRef)(struct ITaskbarList *);
    ULONG (* Release)(struct ITaskbarList *);
    HRESULT (* HrInit)(struct ITaskbarList *);
    HRESULT (* AddTab)(struct ITaskbarList *, HWND);
    HRESULT (* DeleteTab)(struct ITaskbarList *, HWND);
    HRESULT (* ActivateTab)(struct ITaskbarList *, HWND);
    HRESULT (* SetActiveAlt)(struct ITaskbarList *, HWND);
};

typedef struct ITaskbarList2 ITaskbarList2, *PITaskbarList2;

typedef struct ITaskbarList2Vtbl ITaskbarList2Vtbl, *PITaskbarList2Vtbl;

struct ITaskbarList2 {
    struct ITaskbarList2Vtbl * lpVtbl;
};

struct ITaskbarList2Vtbl {
    HRESULT (* QueryInterface)(struct ITaskbarList2 *, IID *, void * *);
    ULONG (* AddRef)(struct ITaskbarList2 *);
    ULONG (* Release)(struct ITaskbarList2 *);
    HRESULT (* HrInit)(struct ITaskbarList2 *);
    HRESULT (* AddTab)(struct ITaskbarList2 *, HWND);
    HRESULT (* DeleteTab)(struct ITaskbarList2 *, HWND);
    HRESULT (* ActivateTab)(struct ITaskbarList2 *, HWND);
    HRESULT (* SetActiveAlt)(struct ITaskbarList2 *, HWND);
    HRESULT (* MarkFullscreenWindow)(struct ITaskbarList2 *, HWND, BOOL);
};

typedef struct ITaskbarList3 ITaskbarList3, *PITaskbarList3;

typedef struct ITaskbarList3Vtbl ITaskbarList3Vtbl, *PITaskbarList3Vtbl;

typedef enum TBPFLAG {
    TBPF_ERROR=4,
    TBPF_INDETERMINATE=1,
    TBPF_NOPROGRESS=0,
    TBPF_NORMAL=2,
    TBPF_PAUSED=8
} TBPFLAG;

typedef struct THUMBBUTTON THUMBBUTTON, *PTHUMBBUTTON;

typedef struct THUMBBUTTON * LPTHUMBBUTTON;

typedef enum THUMBBUTTONMASK {
    THB_BITMAP=1,
    THB_FLAGS=8,
    THB_ICON=2,
    THB_TOOLTIP=4
} THUMBBUTTONMASK;

typedef enum THUMBBUTTONFLAGS {
    THBF_DISABLED=1,
    THBF_DISMISSONCLICK=2,
    THBF_ENABLED=0,
    THBF_HIDDEN=8,
    THBF_NOBACKGROUND=4,
    THBF_NONINTERACTIVE=16
} THUMBBUTTONFLAGS;

struct ITaskbarList3 {
    struct ITaskbarList3Vtbl * lpVtbl;
};

struct THUMBBUTTON {
    enum THUMBBUTTONMASK dwMask;
    UINT iId;
    UINT iBitmap;
    HICON hIcon;
    WCHAR szTip[260];
    enum THUMBBUTTONFLAGS dwFlags;
};

struct ITaskbarList3Vtbl {
    HRESULT (* QueryInterface)(struct ITaskbarList3 *, IID *, void * *);
    ULONG (* AddRef)(struct ITaskbarList3 *);
    ULONG (* Release)(struct ITaskbarList3 *);
    HRESULT (* HrInit)(struct ITaskbarList3 *);
    HRESULT (* AddTab)(struct ITaskbarList3 *, HWND);
    HRESULT (* DeleteTab)(struct ITaskbarList3 *, HWND);
    HRESULT (* ActivateTab)(struct ITaskbarList3 *, HWND);
    HRESULT (* SetActiveAlt)(struct ITaskbarList3 *, HWND);
    HRESULT (* MarkFullscreenWindow)(struct ITaskbarList3 *, HWND, BOOL);
    HRESULT (* SetProgressValue)(struct ITaskbarList3 *, HWND, ULONGLONG, ULONGLONG);
    HRESULT (* SetProgressState)(struct ITaskbarList3 *, HWND, enum TBPFLAG);
    HRESULT (* RegisterTab)(struct ITaskbarList3 *, HWND, HWND);
    HRESULT (* UnregisterTab)(struct ITaskbarList3 *, HWND);
    HRESULT (* SetTabOrder)(struct ITaskbarList3 *, HWND, HWND);
    HRESULT (* SetTabActive)(struct ITaskbarList3 *, HWND, HWND, DWORD);
    HRESULT (* ThumbBarAddButtons)(struct ITaskbarList3 *, HWND, UINT, LPTHUMBBUTTON);
    HRESULT (* ThumbBarUpdateButtons)(struct ITaskbarList3 *, HWND, UINT, LPTHUMBBUTTON);
    HRESULT (* ThumbBarSetImageList)(struct ITaskbarList3 *, HWND, HIMAGELIST);
    HRESULT (* SetOverlayIcon)(struct ITaskbarList3 *, HWND, HICON, LPCWSTR);
    HRESULT (* SetThumbnailTooltip)(struct ITaskbarList3 *, HWND, LPCWSTR);
    HRESULT (* SetThumbnailClip)(struct ITaskbarList3 *, HWND, RECT *);
};

typedef struct ITaskbarList4 ITaskbarList4, *PITaskbarList4;

typedef struct ITaskbarList4Vtbl ITaskbarList4Vtbl, *PITaskbarList4Vtbl;

typedef enum STPFLAG {
    STPF_NONE=0,
    STPF_USEAPPPEEKALWAYS=4,
    STPF_USEAPPPEEKWHENACTIVE=8,
    STPF_USEAPPTHUMBNAILALWAYS=1,
    STPF_USEAPPTHUMBNAILWHENACTIVE=2
} STPFLAG;

struct ITaskbarList4 {
    struct ITaskbarList4Vtbl * lpVtbl;
};

struct ITaskbarList4Vtbl {
    HRESULT (* QueryInterface)(struct ITaskbarList4 *, IID *, void * *);
    ULONG (* AddRef)(struct ITaskbarList4 *);
    ULONG (* Release)(struct ITaskbarList4 *);
    HRESULT (* HrInit)(struct ITaskbarList4 *);
    HRESULT (* AddTab)(struct ITaskbarList4 *, HWND);
    HRESULT (* DeleteTab)(struct ITaskbarList4 *, HWND);
    HRESULT (* ActivateTab)(struct ITaskbarList4 *, HWND);
    HRESULT (* SetActiveAlt)(struct ITaskbarList4 *, HWND);
    HRESULT (* MarkFullscreenWindow)(struct ITaskbarList4 *, HWND, BOOL);
    HRESULT (* SetProgressValue)(struct ITaskbarList4 *, HWND, ULONGLONG, ULONGLONG);
    HRESULT (* SetProgressState)(struct ITaskbarList4 *, HWND, enum TBPFLAG);
    HRESULT (* RegisterTab)(struct ITaskbarList4 *, HWND, HWND);
    HRESULT (* UnregisterTab)(struct ITaskbarList4 *, HWND);
    HRESULT (* SetTabOrder)(struct ITaskbarList4 *, HWND, HWND);
    HRESULT (* SetTabActive)(struct ITaskbarList4 *, HWND, HWND, DWORD);
    HRESULT (* ThumbBarAddButtons)(struct ITaskbarList4 *, HWND, UINT, LPTHUMBBUTTON);
    HRESULT (* ThumbBarUpdateButtons)(struct ITaskbarList4 *, HWND, UINT, LPTHUMBBUTTON);
    HRESULT (* ThumbBarSetImageList)(struct ITaskbarList4 *, HWND, HIMAGELIST);
    HRESULT (* SetOverlayIcon)(struct ITaskbarList4 *, HWND, HICON, LPCWSTR);
    HRESULT (* SetThumbnailTooltip)(struct ITaskbarList4 *, HWND, LPCWSTR);
    HRESULT (* SetThumbnailClip)(struct ITaskbarList4 *, HWND, RECT *);
    HRESULT (* SetTabProperties)(struct ITaskbarList4 *, HWND, enum STPFLAG);
};

typedef struct IThumbnailHandlerFactory IThumbnailHandlerFactory, *PIThumbnailHandlerFactory;

typedef struct IThumbnailHandlerFactoryVtbl IThumbnailHandlerFactoryVtbl, *PIThumbnailHandlerFactoryVtbl;

struct IThumbnailHandlerFactoryVtbl {
    HRESULT (* QueryInterface)(struct IThumbnailHandlerFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IThumbnailHandlerFactory *);
    ULONG (* Release)(struct IThumbnailHandlerFactory *);
    HRESULT (* GetThumbnailHandler)(struct IThumbnailHandlerFactory *, LPCITEMIDLIST, struct IBindCtx *, IID *, void * *);
};

struct IThumbnailHandlerFactory {
    struct IThumbnailHandlerFactoryVtbl * lpVtbl;
};

typedef struct ITransferAdviseSink ITransferAdviseSink, *PITransferAdviseSink;

typedef struct ITransferAdviseSinkVtbl ITransferAdviseSinkVtbl, *PITransferAdviseSinkVtbl;

typedef DWORD TRANSFER_ADVISE_STATE;

struct ITransferAdviseSinkVtbl {
    HRESULT (* QueryInterface)(struct ITransferAdviseSink *, IID *, void * *);
    ULONG (* AddRef)(struct ITransferAdviseSink *);
    ULONG (* Release)(struct ITransferAdviseSink *);
    HRESULT (* UpdateProgress)(struct ITransferAdviseSink *, ULONGLONG, ULONGLONG, int, int, int, int);
    HRESULT (* UpdateTransferState)(struct ITransferAdviseSink *, TRANSFER_ADVISE_STATE);
    HRESULT (* ConfirmOverwrite)(struct ITransferAdviseSink *, struct IShellItem *, struct IShellItem *, LPCWSTR);
    HRESULT (* ConfirmEncryptionLoss)(struct ITransferAdviseSink *, struct IShellItem *);
    HRESULT (* FileFailure)(struct ITransferAdviseSink *, struct IShellItem *, LPCWSTR, HRESULT, LPWSTR, ULONG);
    HRESULT (* SubStreamFailure)(struct ITransferAdviseSink *, struct IShellItem *, LPCWSTR, HRESULT);
    HRESULT (* PropertyFailure)(struct ITransferAdviseSink *, struct IShellItem *, PROPERTYKEY *, HRESULT);
};

struct ITransferAdviseSink {
    struct ITransferAdviseSinkVtbl * lpVtbl;
};

typedef struct ITransferDestination ITransferDestination, *PITransferDestination;

typedef struct ITransferDestinationVtbl ITransferDestinationVtbl, *PITransferDestinationVtbl;

typedef DWORD TRANSFER_SOURCE_FLAGS;

struct ITransferDestination {
    struct ITransferDestinationVtbl * lpVtbl;
};

struct ITransferDestinationVtbl {
    HRESULT (* QueryInterface)(struct ITransferDestination *, IID *, void * *);
    ULONG (* AddRef)(struct ITransferDestination *);
    ULONG (* Release)(struct ITransferDestination *);
    HRESULT (* Advise)(struct ITransferDestination *, struct ITransferAdviseSink *, DWORD *);
    HRESULT (* Unadvise)(struct ITransferDestination *, DWORD);
    HRESULT (* CreateItem)(struct ITransferDestination *, LPCWSTR, DWORD, ULONGLONG, TRANSFER_SOURCE_FLAGS, IID *, void * *, IID *, void * *);
};

typedef struct ITransferMediumItem ITransferMediumItem, *PITransferMediumItem;

struct ITransferMediumItem {
};

typedef struct ITransferSource ITransferSource, *PITransferSource;

struct ITransferSource {
};

typedef struct ITrayDeskBand ITrayDeskBand, *PITrayDeskBand;

struct ITrayDeskBand {
};

typedef struct IUpdateIDList IUpdateIDList, *PIUpdateIDList;

struct IUpdateIDList {
};

typedef struct IUserAccountChangeCallback IUserAccountChangeCallback, *PIUserAccountChangeCallback;

typedef struct IUserAccountChangeCallbackVtbl IUserAccountChangeCallbackVtbl, *PIUserAccountChangeCallbackVtbl;

struct IUserAccountChangeCallbackVtbl {
    HRESULT (* QueryInterface)(struct IUserAccountChangeCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IUserAccountChangeCallback *);
    ULONG (* Release)(struct IUserAccountChangeCallback *);
    HRESULT (* OnPictureChange)(struct IUserAccountChangeCallback *, LPCWSTR);
};

struct IUserAccountChangeCallback {
    struct IUserAccountChangeCallbackVtbl * lpVtbl;
};

typedef struct IUserNotification IUserNotification, *PIUserNotification;

typedef struct IUserNotificationVtbl IUserNotificationVtbl, *PIUserNotificationVtbl;

struct IUserNotificationVtbl {
    HRESULT (* QueryInterface)(struct IUserNotification *, IID *, void * *);
    ULONG (* AddRef)(struct IUserNotification *);
    ULONG (* Release)(struct IUserNotification *);
    HRESULT (* SetBalloonInfo)(struct IUserNotification *, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* SetBalloonRetry)(struct IUserNotification *, DWORD, DWORD, UINT);
    HRESULT (* SetIconInfo)(struct IUserNotification *, HICON, LPCWSTR);
    HRESULT (* Show)(struct IUserNotification *, struct IQueryContinue *, DWORD);
    HRESULT (* PlaySoundA)(struct IUserNotification *, LPCWSTR);
};

struct IUserNotification {
    struct IUserNotificationVtbl * lpVtbl;
};

typedef struct IUserNotification2 IUserNotification2, *PIUserNotification2;

typedef struct IUserNotification2Vtbl IUserNotification2Vtbl, *PIUserNotification2Vtbl;

typedef struct IUserNotificationCallback IUserNotificationCallback, *PIUserNotificationCallback;

typedef struct IUserNotificationCallbackVtbl IUserNotificationCallbackVtbl, *PIUserNotificationCallbackVtbl;

struct IUserNotification2 {
    struct IUserNotification2Vtbl * lpVtbl;
};

struct IUserNotificationCallbackVtbl {
    HRESULT (* QueryInterface)(struct IUserNotificationCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IUserNotificationCallback *);
    ULONG (* Release)(struct IUserNotificationCallback *);
    HRESULT (* OnBalloonUserClick)(struct IUserNotificationCallback *, POINT *);
    HRESULT (* OnLeftClick)(struct IUserNotificationCallback *, POINT *);
    HRESULT (* OnContextMenu)(struct IUserNotificationCallback *, POINT *);
};

struct IUserNotification2Vtbl {
    HRESULT (* QueryInterface)(struct IUserNotification2 *, IID *, void * *);
    ULONG (* AddRef)(struct IUserNotification2 *);
    ULONG (* Release)(struct IUserNotification2 *);
    HRESULT (* SetBalloonInfo)(struct IUserNotification2 *, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* SetBalloonRetry)(struct IUserNotification2 *, DWORD, DWORD, UINT);
    HRESULT (* SetIconInfo)(struct IUserNotification2 *, HICON, LPCWSTR);
    HRESULT (* Show)(struct IUserNotification2 *, struct IQueryContinue *, DWORD, struct IUserNotificationCallback *);
    HRESULT (* PlaySoundA)(struct IUserNotification2 *, LPCWSTR);
};

struct IUserNotificationCallback {
    struct IUserNotificationCallbackVtbl * lpVtbl;
};

typedef struct IUseToBrowseItem IUseToBrowseItem, *PIUseToBrowseItem;

struct IUseToBrowseItem {
};

typedef struct IViewStateIdentityItem IViewStateIdentityItem, *PIViewStateIdentityItem;

struct IViewStateIdentityItem {
};

typedef struct IVisualProperties IVisualProperties, *PIVisualProperties;

typedef struct IVisualPropertiesVtbl IVisualPropertiesVtbl, *PIVisualPropertiesVtbl;

typedef enum VPWATERMARKFLAGS {
    VPWF_ALPHABLEND=1,
    VPWF_DEFAULT=0
} VPWATERMARKFLAGS;

typedef enum VPCOLORFLAGS {
    VPCF_BACKGROUND=2,
    VPCF_SORTCOLUMN=3,
    VPCF_SUBTEXT=4,
    VPCF_TEXT=1,
    VPCF_TEXTBACKGROUND=5
} VPCOLORFLAGS;

struct IVisualProperties {
    struct IVisualPropertiesVtbl * lpVtbl;
};

struct IVisualPropertiesVtbl {
    HRESULT (* QueryInterface)(struct IVisualProperties *, IID *, void * *);
    ULONG (* AddRef)(struct IVisualProperties *);
    ULONG (* Release)(struct IVisualProperties *);
    HRESULT (* SetWatermark)(struct IVisualProperties *, HBITMAP, enum VPWATERMARKFLAGS);
    HRESULT (* SetColor)(struct IVisualProperties *, enum VPCOLORFLAGS, COLORREF);
    HRESULT (* GetColor)(struct IVisualProperties *, enum VPCOLORFLAGS, COLORREF *);
    HRESULT (* SetItemHeight)(struct IVisualProperties *, int);
    HRESULT (* GetItemHeight)(struct IVisualProperties *, int *);
    HRESULT (* SetFont)(struct IVisualProperties *, LOGFONTW *, BOOL);
    HRESULT (* GetFont)(struct IVisualProperties *, LOGFONTW *);
    HRESULT (* SetTheme)(struct IVisualProperties *, LPCWSTR, LPCWSTR);
};

typedef struct IWebWizardExtension IWebWizardExtension, *PIWebWizardExtension;

typedef struct IWebWizardExtensionVtbl IWebWizardExtensionVtbl, *PIWebWizardExtensionVtbl;

struct IWebWizardExtension {
    struct IWebWizardExtensionVtbl * lpVtbl;
};

struct IWebWizardExtensionVtbl {
    HRESULT (* QueryInterface)(struct IWebWizardExtension *, IID *, void * *);
    ULONG (* AddRef)(struct IWebWizardExtension *);
    ULONG (* Release)(struct IWebWizardExtension *);
    HRESULT (* AddPages)(struct IWebWizardExtension *, HPROPSHEETPAGE *, UINT, UINT *);
    HRESULT (* GetFirstPage)(struct IWebWizardExtension *, HPROPSHEETPAGE *);
    HRESULT (* GetLastPage)(struct IWebWizardExtension *, HPROPSHEETPAGE *);
    HRESULT (* SetInitialURL)(struct IWebWizardExtension *, LPCWSTR);
    HRESULT (* SetErrorURL)(struct IWebWizardExtension *, LPCWSTR);
};

typedef struct IWizardExtension IWizardExtension, *PIWizardExtension;

typedef struct IWizardExtensionVtbl IWizardExtensionVtbl, *PIWizardExtensionVtbl;

struct IWizardExtension {
    struct IWizardExtensionVtbl * lpVtbl;
};

struct IWizardExtensionVtbl {
    HRESULT (* QueryInterface)(struct IWizardExtension *, IID *, void * *);
    ULONG (* AddRef)(struct IWizardExtension *);
    ULONG (* Release)(struct IWizardExtension *);
    HRESULT (* AddPages)(struct IWizardExtension *, HPROPSHEETPAGE *, UINT, UINT *);
    HRESULT (* GetFirstPage)(struct IWizardExtension *, HPROPSHEETPAGE *);
    HRESULT (* GetLastPage)(struct IWizardExtension *, HPROPSHEETPAGE *);
};

typedef struct IWizardSite IWizardSite, *PIWizardSite;

typedef struct IWizardSiteVtbl IWizardSiteVtbl, *PIWizardSiteVtbl;

struct IWizardSite {
    struct IWizardSiteVtbl * lpVtbl;
};

struct IWizardSiteVtbl {
    HRESULT (* QueryInterface)(struct IWizardSite *, IID *, void * *);
    ULONG (* AddRef)(struct IWizardSite *);
    ULONG (* Release)(struct IWizardSite *);
    HRESULT (* GetPreviousPage)(struct IWizardSite *, HPROPSHEETPAGE *);
    HRESULT (* GetNextPage)(struct IWizardSite *, HPROPSHEETPAGE *);
    HRESULT (* GetCancelledPage)(struct IWizardSite *, HPROPSHEETPAGE *);
};

typedef struct KnownFolderManager KnownFolderManager, *PKnownFolderManager;

struct KnownFolderManager {
};

typedef struct IBrowserFrameOptions * LPBROWSERFRAMEOPTIONS;

typedef CMINVOKECOMMANDINFOEX * LPCMINVOKECOMMANDINFOEX;

typedef struct ICommDlgBrowser * LPCOMMDLGBROWSER;

typedef struct IContextMenu * LPCONTEXTMENU;

typedef struct IContextMenu2 * LPCONTEXTMENU2;

typedef struct IContextMenu3 * LPCONTEXTMENU3;

typedef struct IEnumExtraSearch * LPENUMEXTRASEARCH;

typedef struct IEnumIDList * LPENUMIDLIST;

typedef struct IExtractImage * LPEXTRACTIMAGE;

typedef struct IExtractImage2 * LPEXTRACTIMAGE2;

typedef struct EXTRASEARCH * LPEXTRASEARCH;

typedef struct IPersistFolder * LPPERSISTFOLDER;

typedef struct IShellBrowser * LPSHELLBROWSER;

typedef struct IShellExtInit * LPSHELLEXTINIT;

typedef struct IShellFolder * LPSHELLFOLDER;

typedef struct IShellPropSheetExt * LPSHELLPROPSHEETEXT;

typedef struct IShellView * LPSHELLVIEW;

typedef char * LPVIEWSETTINGS;

typedef struct MailRecipient MailRecipient, *PMailRecipient;

struct MailRecipient {
};

typedef enum MARKUPLINKTEXT {
    MARKUPLINKTEXT_ID=1,
    MARKUPLINKTEXT_TEXT=2,
    MARKUPLINKTEXT_URL=0
} MARKUPLINKTEXT;

typedef enum MARKUPMESSAGE {
    MARKUPMESSAGE_CLICKEXECUTE=1,
    MARKUPMESSAGE_KEYEXECUTE=0,
    MARKUPMESSAGE_WANTFOCUS=2
} MARKUPMESSAGE;

typedef enum MARKUPSIZE {
    MARKUPSIZE_CALCHEIGHT=1,
    MARKUPSIZE_CALCWIDTH=0
} MARKUPSIZE;

typedef DWORD MARKUPSTATE;

typedef struct MergedCategorizer MergedCategorizer, *PMergedCategorizer;

struct MergedCategorizer {
};

typedef struct NamespaceTreeControl NamespaceTreeControl, *PNamespaceTreeControl;

struct NamespaceTreeControl {
};

typedef struct NamespaceWalker NamespaceWalker, *PNamespaceWalker;

struct NamespaceWalker {
};

typedef enum __MIDL_INamespaceWalk_0001 NAMESPACEWALKFLAG;

typedef struct NetworkConnections NetworkConnections, *PNetworkConnections;

struct NetworkConnections {
};

typedef struct NetworkExplorerFolder NetworkExplorerFolder, *PNetworkExplorerFolder;

struct NetworkExplorerFolder {
};

typedef struct NetworkPlaces NetworkPlaces, *PNetworkPlaces;

struct NetworkPlaces {
};

typedef enum NWMF {
    NWMF_FIRST=4,
    NWMF_FORCETAB=131072,
    NWMF_FORCEWINDOW=65536,
    NWMF_FROMDIALOGCHILD=64,
    NWMF_HTMLDIALOG=32,
    NWMF_INACTIVETAB=1048576,
    NWMF_OVERRIDEKEY=8,
    NWMF_SHOWHELP=16,
    NWMF_SUGGESTTAB=524288,
    NWMF_SUGGESTWINDOW=262144,
    NWMF_UNLOADING=1,
    NWMF_USERALLOWED=256,
    NWMF_USERINITED=2,
    NWMF_USERREQUESTED=128
} NWMF;

typedef struct OpenControlPanel OpenControlPanel, *POpenControlPanel;

struct OpenControlPanel {
};

typedef CMINVOKECOMMANDINFO * PCCMINVOKECOMMANDINFO;

typedef CMINVOKECOMMANDINFOEX * PCCMINVOKECOMMANDINFOEX;

typedef struct DELEGATEITEMID * PCDELEGATEITEMID;

typedef struct PreviousVersions PreviousVersions, *PPreviousVersions;

struct PreviousVersions {
};

typedef struct PropertiesUI PropertiesUI, *PPropertiesUI;

struct PropertiesUI {
};

typedef struct SHCSCHANGENOTIFYSTRUCT SHCSCHANGENOTIFYSTRUCT, *PSHCSCHANGENOTIFYSTRUCT;

typedef struct SHCSCHANGENOTIFYSTRUCT * PSMCSHCHANGENOTIFYSTRUCT;

struct SHCSCHANGENOTIFYSTRUCT {
    long lEvent;
    LPCITEMIDLIST pidl1;
    LPCITEMIDLIST pidl2;
};

typedef struct tagSMINFO tagSMINFO, *PtagSMINFO;

typedef struct tagSMINFO * PSMINFO;

struct tagSMINFO {
    DWORD dwMask;
    DWORD dwType;
    DWORD dwFlags;
    int iIcon;
};

typedef struct PublishDropTarget PublishDropTarget, *PPublishDropTarget;

struct PublishDropTarget {
};

typedef struct PublishingWizard PublishingWizard, *PPublishingWizard;

struct PublishingWizard {
};

typedef struct QueryCancelAutoPlay QueryCancelAutoPlay, *PQueryCancelAutoPlay;

struct QueryCancelAutoPlay {
};

typedef struct ScheduledTasks ScheduledTasks, *PScheduledTasks;

struct ScheduledTasks {
};

typedef struct SearchFolderItemFactory SearchFolderItemFactory, *PSearchFolderItemFactory;

struct SearchFolderItemFactory {
};

typedef struct SharingConfigurationManager SharingConfigurationManager, *PSharingConfigurationManager;

struct SharingConfigurationManager {
};

typedef struct ShellDesktop ShellDesktop, *PShellDesktop;

struct ShellDesktop {
};

typedef struct ShellFSFolder ShellFSFolder, *PShellFSFolder;

struct ShellFSFolder {
};

typedef struct ShellItem ShellItem, *PShellItem;

struct ShellItem {
};

typedef struct ShellLibrary ShellLibrary, *PShellLibrary;

struct ShellLibrary {
};

typedef struct ShellLink ShellLink, *PShellLink;

struct ShellLink {
};

typedef struct SizeCategorizer SizeCategorizer, *PSizeCategorizer;

struct SizeCategorizer {
};

typedef enum SLGP_FLAGS {
    SLGP_RAWPATH=4,
    SLGP_RELATIVEPRIORITY=8,
    SLGP_SHORTPATH=1,
    SLGP_UNCPRIORITY=2
} SLGP_FLAGS;

typedef enum SLR_FLAGS {
    SLR_ANY_MATCH=2,
    SLR_INVOKE_MSI=128,
    SLR_KNOWNFOLDER=1024,
    SLR_MACHINE_IN_LOCAL_TARGET=2048,
    SLR_NOLINKINFO=64,
    SLR_NOSEARCH=16,
    SLR_NOTRACK=32,
    SLR_NOUPDATE=8,
    SLR_NO_UI=1,
    SLR_NO_UI_WITH_MSG_PUMP=257,
    SLR_OFFER_DELETE_WITHOUT_FILE=512,
    SLR_UPDATE=4,
    SLR_UPDATE_MACHINE_AND_SID=4096
} SLR_FLAGS;

typedef struct SHCSCHANGENOTIFYSTRUCT SMCSHCHANGENOTIFYSTRUCT;

typedef struct tagSMDATA SMDATA;

typedef struct tagSMINFO SMINFO;

typedef struct StartMenuPin StartMenuPin, *PStartMenuPin;

struct StartMenuPin {
};

typedef struct _SV2CVW2_PARAMS SV2CVW2_PARAMS;

typedef int SVGIO;

typedef enum SVUIA_STATUS {
    SVUIA_ACTIVATE_FOCUS=2,
    SVUIA_ACTIVATE_NOFOCUS=1,
    SVUIA_DEACTIVATE=0,
    SVUIA_INPLACEACTIVATE=3
} SVUIA_STATUS;

typedef enum tagBANDSITECID {
    BSID_BANDADDED=0,
    BSID_BANDREMOVED=1
} tagBANDSITECID;

typedef enum tagDESKBANDCID {
    DBID_BANDINFOCHANGED=0,
    DBID_DELAYINIT=4,
    DBID_FINISHINIT=5,
    DBID_MAXIMIZEBAND=2,
    DBID_PERMITAUTOHIDE=7,
    DBID_PUSHCHEVRON=3,
    DBID_SETWINDOWTHEME=6,
    DBID_SHOWONLY=1
} tagDESKBANDCID;

typedef enum tagMENUPOPUPPOPUPFLAGS {
    MPPF_ALIGN_LEFT=33554432,
    MPPF_ALIGN_RIGHT=67108864,
    MPPF_BOTTOM=1610612737,
    MPPF_FINALSELECT=128,
    MPPF_FORCEZORDER=64,
    MPPF_INITIALSELECT=2,
    MPPF_KEYBOARD=16,
    MPPF_LEFT=1073741824,
    MPPF_NOANIMATE=4,
    MPPF_POS_MASK=1610612738,
    MPPF_REPOSITION=32,
    MPPF_RIGHT=1610612736,
    MPPF_SETFOCUS=1,
    MPPF_TOP=536870912
} tagMENUPOPUPPOPUPFLAGS;

typedef enum tagMENUPOPUPSELECT {
    MPOS_CANCELLEVEL=2,
    MPOS_CHILDTRACKING=5,
    MPOS_EXECUTE=0,
    MPOS_FULLCANCEL=1,
    MPOS_SELECTLEFT=3,
    MPOS_SELECTRIGHT=4
} tagMENUPOPUPSELECT;

typedef enum tagSMINFOFLAGS {
    SMIF_ACCELERATOR=2,
    SMIF_ALTSTATE=2048,
    SMIF_CHECKED=32,
    SMIF_DEMOTED=1024,
    SMIF_DISABLED=256,
    SMIF_DRAGNDROP=4096,
    SMIF_DROPCASCADE=64,
    SMIF_DROPTARGET=4,
    SMIF_HIDDEN=128,
    SMIF_ICON=1,
    SMIF_NEW=8192,
    SMIF_SUBMENU=8,
    SMIF_TRACKPOPUP=512
} tagSMINFOFLAGS;

typedef enum tagSMINFOMASK {
    SMIM_FLAGS=2,
    SMIM_ICON=4,
    SMIM_TYPE=1
} tagSMINFOMASK;

typedef enum tagSMINFOTYPE {
    SMIT_SEPARATOR=1,
    SMIT_STRING=2
} tagSMINFOTYPE;

typedef enum tagSORTDIRECTION {
    SORT_ASCENDING=1,
    SORT_DESCENDING=0
} tagSORTDIRECTION;

typedef struct TaskbarList TaskbarList, *PTaskbarList;

struct TaskbarList {
};

typedef struct TimeCategorizer TimeCategorizer, *PTimeCategorizer;

struct TimeCategorizer {
};

typedef struct TrayBandSiteService TrayBandSiteService, *PTrayBandSiteService;

struct TrayBandSiteService {
};

typedef struct TrayDeskBand TrayDeskBand, *PTrayDeskBand;

struct TrayDeskBand {
};

typedef struct UserNotification UserNotification, *PUserNotification;

struct UserNotification {
};

typedef struct WebWizardHost WebWizardHost, *PWebWizardHost;

struct WebWizardHost {
};

#define PERCEIVEDFLAG_GDIPLUS 16

#define PERCEIVEDFLAG_HARDCODED 2

#define PERCEIVEDFLAG_NATIVESUPPORT 4

#define PERCEIVEDFLAG_SOFTCODED 1

#define PERCEIVEDFLAG_UNDEFINED 0

#define PERCEIVEDFLAG_WMSDK 32

#define PERCEIVEDFLAG_ZIPFOLDER 64

typedef ITEMIDLIST ITEMID_CHILD;

typedef ITEMIDLIST ITEMIDLIST_ABSOLUTE;

typedef ITEMIDLIST ITEMIDLIST_RELATIVE;

typedef DWORD KF_REDIRECT_FLAGS;

typedef SHITEMID * LPCSHITEMID;

typedef struct _SHELLDETAILS * LPSHELLDETAILS;

typedef SHITEMID * LPSHITEMID;

typedef STRRET * LPSTRRET;

typedef enum tagPERCEIVED {
    PERCEIVED_TYPE_APPLICATION=8,
    PERCEIVED_TYPE_AUDIO=3,
    PERCEIVED_TYPE_COMPRESSED=5,
    PERCEIVED_TYPE_CONTACTS=10,
    PERCEIVED_TYPE_CUSTOM=1,
    PERCEIVED_TYPE_DOCUMENT=6,
    PERCEIVED_TYPE_FIRST=0,
    PERCEIVED_TYPE_FOLDER=3,
    PERCEIVED_TYPE_GAMEMEDIA=9,
    PERCEIVED_TYPE_IMAGE=2,
    PERCEIVED_TYPE_LAST=10,
    PERCEIVED_TYPE_SYSTEM=7,
    PERCEIVED_TYPE_TEXT=1,
    PERCEIVED_TYPE_UNKNOWN=0,
    PERCEIVED_TYPE_UNSPECIFIED=2,
    PERCEIVED_TYPE_VIDEO=4
} tagPERCEIVED;

typedef enum tagPERCEIVED PERCEIVED;

typedef DWORD PERCEIVEDFLAG;

typedef enum tagSHCOLSTATE {
    SHCOLSTATE_BATCHREAD=131072,
    SHCOLSTATE_DEFAULT=0,
    SHCOLSTATE_DISPLAYMASK=61440,
    SHCOLSTATE_EXTENDED=64,
    SHCOLSTATE_FIXED_RATIO=16384,
    SHCOLSTATE_FIXED_WIDTH=4096,
    SHCOLSTATE_HIDDEN=256,
    SHCOLSTATE_NODPISCALE=8192,
    SHCOLSTATE_NOSORTBYFOLDERNESS=2048,
    SHCOLSTATE_NO_GROUPBY=262144,
    SHCOLSTATE_ONBYDEFAULT=16,
    SHCOLSTATE_PREFER_FMTCMP=1024,
    SHCOLSTATE_PREFER_VARCMP=512,
    SHCOLSTATE_SECONDARYUI=128,
    SHCOLSTATE_SLOW=32,
    SHCOLSTATE_TYPEMASK=15,
    SHCOLSTATE_TYPE_DATE=3,
    SHCOLSTATE_TYPE_INT=2,
    SHCOLSTATE_TYPE_STR=1,
    SHCOLSTATE_VIEWONLY=65536
} tagSHCOLSTATE;

typedef enum tagSHCOLSTATE SHCOLSTATE;

typedef enum tagSTRRET_TYPE {
    STRRET_CSTR=2,
    STRRET_OFFSET=1,
    STRRET_WSTR=0
} tagSTRRET_TYPE;

typedef enum tagSTRRET_TYPE STRRET_TYPE;

typedef BYTE_BLOB * wirePIDL;

#define NSIG 23

#define SIGABRT 22

#define SIGABRT_COMPAT 6

#define SIGBREAK 21

#define SIGFPE 8

#define SIGILL 4

#define SIGINT 2

#define SIGSEGV 11

#define SIGTERM 15

typedef int sig_atomic_t;

#define _MM_FROUND_CEIL 2

#define _MM_FROUND_CUR_DIRECTION 4

#define _MM_FROUND_FLOOR 1

#define _MM_FROUND_NEARBYINT 12

#define _MM_FROUND_NINT 0

#define _MM_FROUND_NO_EXC 8

#define _MM_FROUND_RAISE_EXC 0

#define _MM_FROUND_RINT 4

#define _MM_FROUND_TO_NEAREST_INT 0

#define _MM_FROUND_TO_NEG_INF 1

#define _MM_FROUND_TO_POS_INF 2

#define _MM_FROUND_TO_ZERO 3

#define _MM_FROUND_TRUNC 3

#define ASN_APPLICATION 64

#define ASN_BITS 3

#define ASN_CONSTRUCTOR 32

#define ASN_CONTEXT 128

#define ASN_CONTEXTSPECIFIC 128

#define ASN_COUNTER32 65

#define ASN_COUNTER64 70

#define ASN_GAUGE32 66

#define ASN_INTEGER 2

#define ASN_INTEGER32 2

#define ASN_IPADDRESS 64

#define ASN_NULL 5

#define ASN_OBJECTIDENTIFIER 6

#define ASN_OCTETSTRING 4

#define ASN_OPAQUE 68

#define ASN_PRIMATIVE 0

#define ASN_PRIMITIVE 0

#define ASN_PRIVATE 192

#define ASN_RFC1155_COUNTER 65

#define ASN_RFC1155_GAUGE 66

#define ASN_RFC1155_IPADDRESS 64

#define ASN_RFC1155_OPAQUE 68

#define ASN_RFC1155_TIMETICKS 67

#define ASN_RFC1157_GETNEXTREQUEST 161

#define ASN_RFC1157_GETREQUEST 160

#define ASN_RFC1157_GETRESPONSE 162

#define ASN_RFC1157_SETREQUEST 163

#define ASN_RFC1157_TRAP 164

#define ASN_RFC1213_DISPSTRING 4

#define ASN_RFC2578_UNSIGNED32 66

#define ASN_SEQUENCE 48

#define ASN_SEQUENCEOF 48

#define ASN_TIMETICKS 67

#define ASN_UINTEGER32 71

#define ASN_UNIVERSAL 0

#define ASN_UNSIGNED32 71

#define DEFAULT_SNMP_PORT_IPX 36879

#define DEFAULT_SNMP_PORT_UDP 161

#define DEFAULT_SNMPTRAP_PORT_IPX 36880

#define DEFAULT_SNMPTRAP_PORT_UDP 162

#define SNMP_ACCESS_NONE 0

#define SNMP_ACCESS_NOTIFY 1

#define SNMP_ACCESS_READ_CREATE 4

#define SNMP_ACCESS_READ_ONLY 2

#define SNMP_ACCESS_READ_WRITE 3

#define SNMP_AUTHAPI_INVALID_MSG_TYPE 31

#define SNMP_AUTHAPI_INVALID_VERSION 30

#define SNMP_AUTHAPI_TRIV_AUTH_FAILED 32

#define SNMP_BERAPI_INVALID_LENGTH 10

#define SNMP_BERAPI_INVALID_OBJELEM 14

#define SNMP_BERAPI_INVALID_TAG 11

#define SNMP_BERAPI_OVERFLOW 12

#define SNMP_BERAPI_SHORT_BUFFER 13

#define SNMP_ERRORSTATUS_AUTHORIZATIONERROR 16

#define SNMP_ERRORSTATUS_BADVALUE 3

#define SNMP_ERRORSTATUS_COMMITFAILED 14

#define SNMP_ERRORSTATUS_GENERR 5

#define SNMP_ERRORSTATUS_INCONSISTENTNAME 18

#define SNMP_ERRORSTATUS_INCONSISTENTVALUE 12

#define SNMP_ERRORSTATUS_NOACCESS 6

#define SNMP_ERRORSTATUS_NOCREATION 11

#define SNMP_ERRORSTATUS_NOERROR 0

#define SNMP_ERRORSTATUS_NOSUCHNAME 2

#define SNMP_ERRORSTATUS_NOTWRITABLE 17

#define SNMP_ERRORSTATUS_READONLY 4

#define SNMP_ERRORSTATUS_RESOURCEUNAVAILABLE 13

#define SNMP_ERRORSTATUS_TOOBIG 1

#define SNMP_ERRORSTATUS_UNDOFAILED 15

#define SNMP_ERRORSTATUS_WRONGENCODING 9

#define SNMP_ERRORSTATUS_WRONGLENGTH 8

#define SNMP_ERRORSTATUS_WRONGTYPE 7

#define SNMP_ERRORSTATUS_WRONGVALUE 10

#define SNMP_EXCEPTION_ENDOFMIBVIEW 130

#define SNMP_EXCEPTION_NOSUCHINSTANCE 129

#define SNMP_EXCEPTION_NOSUCHOBJECT 128

#define SNMP_EXTENSION_GET 160

#define SNMP_EXTENSION_GET_BULK 165

#define SNMP_EXTENSION_GET_NEXT 161

#define SNMP_EXTENSION_SET_CLEANUP 226

#define SNMP_EXTENSION_SET_COMMIT 163

#define SNMP_EXTENSION_SET_TEST 224

#define SNMP_EXTENSION_SET_UNDO 225

#define SNMP_GENERICTRAP_AUTHFAILURE 4

#define SNMP_GENERICTRAP_COLDSTART 0

#define SNMP_GENERICTRAP_EGPNEIGHLOSS 5

#define SNMP_GENERICTRAP_ENTERSPECIFIC 6

#define SNMP_GENERICTRAP_LINKDOWN 2

#define SNMP_GENERICTRAP_LINKUP 3

#define SNMP_GENERICTRAP_WARMSTART 1

#define SNMP_LOG_ERROR 2

#define SNMP_LOG_FATAL 1

#define SNMP_LOG_SILENT 0

#define SNMP_LOG_TRACE 4

#define SNMP_LOG_VERBOSE 5

#define SNMP_LOG_WARNING 3

#define SNMP_MAX_OID_LEN 128

#define SNMP_MEM_ALLOC_ERROR 1

#define SNMP_OUTPUT_TO_CONSOLE 1

#define SNMP_OUTPUT_TO_DEBUGGER 8

#define SNMP_OUTPUT_TO_EVENTLOG 4

#define SNMP_OUTPUT_TO_LOGFILE 2

#define SNMP_PDU_GET 160

#define SNMP_PDU_GETBULK 165

#define SNMP_PDU_GETNEXT 161

#define SNMP_PDU_INFORM 166

#define SNMP_PDU_RESPONSE 162

#define SNMP_PDU_SET 163

#define SNMP_PDU_TRAP 167

#define SNMP_PDU_V1TRAP 164

#define SNMP_PDUAPI_INVALID_ES 21

#define SNMP_PDUAPI_INVALID_GT 22

#define SNMP_PDUAPI_UNRECOGNIZED_PDU 20

#define SNMPAPI_ERROR 0

#define SNMPAPI_NOERROR 1

typedef union _union_6369 _union_6369, *P_union_6369;

typedef LONG AsnInteger32;

typedef ULONG AsnUnsigned32;

typedef ULARGE_INTEGER AsnCounter64;

typedef struct AsnOctetString AsnOctetString, *PAsnOctetString;

typedef struct AsnOctetString AsnBits;

typedef struct AsnObjectIdentifier AsnObjectIdentifier, *PAsnObjectIdentifier;

typedef struct AsnOctetString AsnSequence;

typedef struct AsnOctetString AsnIPAddress;

typedef AsnUnsigned32 AsnCounter32;

typedef AsnUnsigned32 AsnGauge32;

typedef AsnUnsigned32 AsnTimeticks;

typedef struct AsnOctetString AsnOpaque;

struct AsnOctetString {
    BYTE * stream;
    UINT length;
    BOOL dynamic;
};

struct AsnObjectIdentifier {
    UINT idLength;
    UINT * ids;
};

union _union_6369 {
    AsnInteger32 number;
    AsnUnsigned32 unsigned32;
    AsnCounter64 counter64;
    struct AsnOctetString string;
    AsnBits bits;
    struct AsnObjectIdentifier object;
    AsnSequence sequence;
    AsnIPAddress address;
    AsnCounter32 counter;
    AsnGauge32 gauge;
    AsnTimeticks ticks;
    AsnOpaque arbitrary;
};

typedef struct AsnAny AsnAny, *PAsnAny;

struct AsnAny {
    BYTE asnType;
    union _union_6369 asnValue;
};

typedef struct AsnOctetString AsnDisplayString;

typedef struct AsnOctetString AsnImplicitSequence;

typedef struct AsnOctetString AsnNetworkAddress;

typedef struct AsnObjectIdentifier AsnObjectName;

typedef struct AsnAny AsnObjectSyntax;

typedef void (* PFNSNMPEXTENSIONCLOSE)(void);

typedef BOOL (* PFNSNMPEXTENSIONINIT)(DWORD, HANDLE *, struct AsnObjectIdentifier *);

typedef BOOL (* PFNSNMPEXTENSIONINITEX)(struct AsnObjectIdentifier *);

typedef BOOL (* PFNSNMPEXTENSIONMONITOR)(LPVOID);

typedef struct SnmpVarBindList SnmpVarBindList, *PSnmpVarBindList;

typedef BOOL (* PFNSNMPEXTENSIONQUERY)(BYTE, struct SnmpVarBindList *, AsnInteger32 *, AsnInteger32 *);

typedef struct SnmpVarBind SnmpVarBind, *PSnmpVarBind;

struct SnmpVarBind {
    AsnObjectName name;
    AsnObjectSyntax value;
};

struct SnmpVarBindList {
    struct SnmpVarBind * list;
    UINT len;
};

typedef BOOL (* PFNSNMPEXTENSIONQUERYEX)(UINT, UINT, struct SnmpVarBindList *, struct AsnOctetString *, AsnInteger32 *, AsnInteger32 *);

typedef BOOL (* PFNSNMPEXTENSIONTRAP)(struct AsnObjectIdentifier *, AsnInteger32 *, AsnInteger32 *, AsnTimeticks *, struct SnmpVarBindList *);

#define LOGTOKEN_NO_LOG 1

#define LOGTOKEN_SETUPAPI_APPLOG 2

#define LOGTOKEN_SETUPAPI_DEVLOG 3

#define LOGTOKEN_TYPE_MASK 3

#define LOGTOKEN_UNSPECIFIED 0

#define TXTLOG_BACKUP 128

#define TXTLOG_CMI 268435456

#define TXTLOG_COPYFILES 8

#define TXTLOG_DEPTH_DECR 262144

#define TXTLOG_DEPTH_INCR 131072

#define TXTLOG_DETAILS 5

#define TXTLOG_DEVINST 1

#define TXTLOG_DEVMGR 536870912

#define TXTLOG_DRIVER_STORE 67108864

#define TXTLOG_ERROR 1

#define TXTLOG_FILEQ 4

#define TXTLOG_FLUSH_FILE 1048576

#define TXTLOG_INF 2

#define TXTLOG_INFDB 1024

#define TXTLOG_INSTALLER 1073741824

#define TXTLOG_NEWDEV 16777216

#define TXTLOG_POLICY 8388608

#define TXTLOG_RESERVED_FLAGS 65520

#define TXTLOG_SETUP 134217728

#define TXTLOG_SETUPAPI_BITS 3

#define TXTLOG_SETUPAPI_CMDLINE 2

#define TXTLOG_SETUPAPI_DEVLOG 1

#define TXTLOG_SIGVERIF 32

#define TXTLOG_SUMMARY 4

#define TXTLOG_SYSTEM_STATE_CHANGE 3

#define TXTLOG_TAB_1 524288

#define TXTLOG_TIMESTAMP 65536

#define TXTLOG_UI 256

#define TXTLOG_UMPNPMGR 33554432

#define TXTLOG_UTIL 512

#define TXTLOG_VENDOR 2147483648

#define TXTLOG_VERBOSE 6

#define TXTLOG_VERY_VERBOSE 7

#define TXTLOG_WARNING 2

typedef DWORDLONG * PSP_LOG_TOKEN;

typedef DWORDLONG SP_LOG_TOKEN;

#define __SAL_H_FULL_VER 140050727

#define __SPECSTRINGS_STRICT_LEVEL 1

#define ACCESSIBILITY_SETTING 3

#define APPLICATION_INSTALL 0

#define APPLICATION_RUN 5

#define APPLICATION_UNINSTALL 1

#define BACKUP 15

#define BACKUP_RECOVERY 14

#define BEGIN_NESTED_SYSTEM_CHANGE 102

#define BEGIN_NESTED_SYSTEM_CHANGE_NORP 104

#define BEGIN_SYSTEM_CHANGE 100

#define CANCELLED_OPERATION 13

#define CHECKPOINT 7

#define CRITICAL_UPDATE 18

#define DESKTOP_SETTING 2

#define DEVICE_DRIVER_INSTALL 10

#define END_NESTED_SYSTEM_CHANGE 103

#define END_NESTED_SYSTEM_CHANGE_NORP 103

#define END_SYSTEM_CHANGE 101

#define FIRSTRUN 11

#define MANUAL_CHECKPOINT 16

#define MAX_DESC 64

#define MAX_DESC_W 256

#define MAX_EVENT 104

#define MAX_RPT 18

#define MIN_EVENT 100

#define MIN_RPT 0

#define MODIFY_SETTINGS 12

#define OE_SETTING 4

#define RESTORE 6

#define WINDOWS_BOOT 9

#define WINDOWS_SHUTDOWN 8

#define WINDOWS_UPDATE 17

typedef struct _RESTOREPTINFOA _RESTOREPTINFOA, *P_RESTOREPTINFOA;

struct _RESTOREPTINFOA {
    DWORD dwEventType;
    DWORD dwRestorePtType;
    INT64 llSequenceNumber;
    CHAR szDescription[64];
};

typedef struct _RESTOREPTINFOEX _RESTOREPTINFOEX, *P_RESTOREPTINFOEX;

struct _RESTOREPTINFOEX {
    FILETIME ftCreation;
    DWORD dwEventType;
    DWORD dwRestorePtType;
    DWORD dwRPNum;
    WCHAR szDescription[256];
};

typedef struct _RESTOREPTINFOW _RESTOREPTINFOW, *P_RESTOREPTINFOW;

struct _RESTOREPTINFOW {
    DWORD dwEventType;
    DWORD dwRestorePtType;
    INT64 llSequenceNumber;
    WCHAR szDescription[256];
};

typedef struct _SMGRSTATUS _SMGRSTATUS, *P_SMGRSTATUS;

struct _SMGRSTATUS {
    DWORD nStatus;
    INT64 llSequenceNumber;
};

typedef struct _RESTOREPTINFOA * PRESTOREPOINTINFOA;

typedef struct _RESTOREPTINFOEX * PRESTOREPOINTINFOEX;

typedef struct _RESTOREPTINFOW * PRESTOREPOINTINFOW;

typedef struct _SMGRSTATUS * PSTATEMGRSTATUS;

typedef struct _RESTOREPTINFOA RESTOREPOINTINFOA;

typedef struct _RESTOREPTINFOEX RESTOREPOINTINFOEX;

typedef struct _RESTOREPTINFOW RESTOREPOINTINFOW;

typedef struct _SMGRSTATUS STATEMGRSTATUS;

#define FAIL 0

#define MAXNUMERICLEN 16

#define ODS_VERSION 117440512

#define SRV_APPLNAME 19

#define SRV_ATTENTION 6

#define SRV_ATTENTION_ACK 16

#define SRV_BCPFLAG 24

#define SRV_CANCEL 11

#define SRV_CLIB 21

#define SRV_CLOSE 13

#define SRV_CONNECT 2

#define SRV_CONNECT_V7 16

#define SRV_CONTINUE 0

#define SRV_CPID 18

#define SRV_DATATYPE 2

#define SRV_DISCONNECT 5

#define SRV_DONE 1

#define SRV_DONE_COUNT 16

#define SRV_DONE_ERROR 2

#define SRV_DONE_FINAL 0

#define SRV_DONE_MORE 1

#define SRV_DONE_RPC_IN_BATCH 128

#define SRV_DUPLICATE_HANDLER 2

#define SRV_ENO_OS_ERR 0

#define SRV_ERROR 0

#define SRV_EVENT 4

#define SRV_EXIT 10

#define SRV_FATAL_PROCESS 10

#define SRV_FATAL_SERVER 19

#define SRV_HASHPWD 39

#define SRV_HOST 15

#define SRV_INFO 1

#define SRV_INSTANCENAME 38

#define SRV_INTERNAL_HANDLER 99

#define SRV_LANGUAGE 1

#define SRV_LIBVERS 22

#define SRV_LSECURE 30

#define SRV_MSG_ERROR 2

#define SRV_MSG_INFO 1

#define SRV_MSGLCID 37

#define SRV_NATLANG 25

#define SRV_NETSPID 11

#define SRV_NETWORK_CONNECTION 29

#define SRV_NETWORK_MODULE 27

#define SRV_NETWORK_VERSION 28

#define SRV_NOMETADATA 2

#define SRV_NULLTERM -1

#define SRV_OLEDB 20

#define SRV_PARAMDEFAULT 2

#define SRV_PARAMRETURN 1

#define SRV_PARAMSORTORDER 4

#define SRV_PIPEHANDLE 26

#define SRV_PRACK 14

#define SRV_PRELOGIN 19

#define SRV_PRERROR 15

#define SRV_PROGRAMMER_DEFINED 100

#define SRV_PWD 17

#define SRV_RECOMPILE 1

#define SRV_RESTART 4

#define SRV_RMTSERVER 14

#define SRV_ROWSENT 23

#define SRV_RPC 3

#define SRV_SAXP 31

#define SRV_SERVERNAME 0

#define SRV_SETUP 12

#define SRV_SKIP 17

#define SRV_SLEEP 7

#define SRV_SPID 10

#define SRV_SPROC_CODEPAGE 36

#define SRV_START 8

#define SRV_STATUS 13

#define SRV_STOP 9

#define SRV_TDS 20

#define SRV_TDS_2_0 1

#define SRV_TDS_3_4 2

#define SRV_TDS_4_2 3

#define SRV_TDS_6_0 4

#define SRV_TDS_7_0 5

#define SRV_TDS_BIGBINARY 173

#define SRV_TDS_BIGCHAR 175

#define SRV_TDS_BIGVARBINARY 165

#define SRV_TDS_BIGVARCHAR 167

#define SRV_TDS_BINARY 45

#define SRV_TDS_BIT 50

#define SRV_TDS_BITN 104

#define SRV_TDS_CHAR 47

#define SRV_TDS_DATETIM4 58

#define SRV_TDS_DATETIME 61

#define SRV_TDS_DATETIMN 111

#define SRV_TDS_DECIMAL 55

#define SRV_TDS_DECIMALN 106

#define SRV_TDS_FLT4 59

#define SRV_TDS_FLT8 62

#define SRV_TDS_FLTN 109

#define SRV_TDS_GUID 36

#define SRV_TDS_IMAGE 34

#define SRV_TDS_INT1 48

#define SRV_TDS_INT2 52

#define SRV_TDS_INT4 56

#define SRV_TDS_INT8 127

#define SRV_TDS_INTN 38

#define SRV_TDS_MONEY 60

#define SRV_TDS_MONEY4 122

#define SRV_TDS_MONEYN 110

#define SRV_TDS_NCHAR 239

#define SRV_TDS_NONE 0

#define SRV_TDS_NTEXT 99

#define SRV_TDS_NULL 31

#define SRV_TDS_NUMERIC 63

#define SRV_TDS_NUMERICN 108

#define SRV_TDS_NVARCHAR 231

#define SRV_TDS_SSVARIANT 98

#define SRV_TDS_TEXT 35

#define SRV_TDS_VARBINARY 37

#define SRV_TDS_VARCHAR 39

#define SRV_TRANSMGR 18

#define SRV_TYPE 12

#define SRV_UNICODE_CURRENTLOGIN 40

#define SRV_UNICODE_PWD 35

#define SRV_UNICODE_USER 33

#define SRV_USER 16

#define SRV_VERSION 6

#define SRVBIGBINARY 173

#define SRVBIGCHAR 175

#define SRVBIGVARBINARY 165

#define SRVBIGVARCHAR 167

#define SRVBINARY 45

#define SRVBIT 50

#define SRVBITN 104

#define SRVCHAR 47

#define SRVDATETIM4 58

#define SRVDATETIME 61

#define SRVDATETIMN 111

#define SRVDECIMAL 55

#define SRVDECIMALN 106

#define SRVFLT4 59

#define SRVFLT8 62

#define SRVFLTN 109

#define SRVGUID 36

#define SRVIMAGE 34

#define SRVINT1 48

#define SRVINT2 52

#define SRVINT4 56

#define SRVINT8 127

#define SRVINTN 38

#define SRVMONEY 60

#define SRVMONEY4 122

#define SRVMONEYN 110

#define SRVNCHAR 239

#define SRVNTEXT 99

#define SRVNULL 31

#define SRVNUMERIC 63

#define SRVNUMERICN 108

#define SRVNVARCHAR 231

#define SRVSSVARIANT 98

#define SRVTEXT 35

#define SRVVARBINARY 37

#define SRVVARCHAR 39

#define SS_LEVEL_VERSION 0

#define SS_MAJOR_VERSION 7

#define SS_MINOR_VERSION 0

#define SUCCEED 1

typedef struct CXPData CXPData, *PCXPData;

struct CXPData {
};

typedef uchar DBBINARY;

typedef uchar DBBIT;

typedef uchar DBBOOL;

typedef uchar DBBYTE;

typedef char DBCHAR;

typedef struct dbdatetime4 dbdatetime4, *Pdbdatetime4;

typedef struct dbdatetime4 DBDATETIM4;

struct dbdatetime4 {
    ushort numdays;
    ushort nummins;
};

typedef struct srv_datetime srv_datetime, *Psrv_datetime;

typedef struct srv_datetime DBDATETIME;

struct srv_datetime {
    long dtdays;
    ulong dttime;
};

typedef struct dbnumeric dbnumeric, *Pdbnumeric;

typedef struct dbnumeric DBNUMERIC;

typedef DBNUMERIC DBDECIMAL;

struct dbnumeric {
    BYTE precision;
    BYTE scale;
    BYTE sign;
    BYTE val[16];
};

typedef float DBFLT4;

typedef double DBFLT8;

typedef long DBINT;

typedef struct srv_money srv_money, *Psrv_money;

typedef struct srv_money DBMONEY;

struct srv_money {
    long mnyhigh;
    ulong mnylow;
};

typedef long DBMONEY4;

typedef short DBSMALLINT;

typedef uchar DBTINYINT;

typedef ushort DBUSMALLINT;

typedef int (* EventHandler)(void *);

typedef int RETCODE;

typedef struct srv_config srv_config, *Psrv_config;

typedef struct srv_config SRV_CONFIG;

struct srv_config {
};

typedef struct CXPData SRV_PROC;

typedef struct srv_server srv_server, *Psrv_server;

struct srv_server {
};

typedef struct srv_server SRV_SERVER;

typedef int SRVRETCODE;

#define WINT_MAX 65535

#define WINT_MIN 0

typedef short int16_t;

typedef int int32_t;

typedef longlong int64_t;

typedef char int8_t;

typedef int int_fast16_t;

typedef int int_fast32_t;

typedef longlong int_fast64_t;

typedef char int_fast8_t;

typedef short int_least16_t;

typedef int int_least32_t;

typedef longlong int_least64_t;

typedef char int_least8_t;

typedef longlong intmax_t;

typedef ushort uint16_t;

typedef uint uint32_t;

typedef ulonglong uint64_t;

typedef uchar uint8_t;

typedef uint uint_fast16_t;

typedef uint uint_fast32_t;

typedef ulonglong uint_fast64_t;

typedef uchar uint_fast8_t;

typedef ushort uint_least16_t;

typedef uint uint_least32_t;

typedef ulonglong uint_least64_t;

typedef uchar uint_least8_t;

typedef ulonglong uintmax_t;

#define _INTERNAL_BUFSIZ 4096

#define _IOB_ENTRIES 20

#define _IOEOF 16

#define _IOERR 32

#define _IOFBF 0

#define _IOLBF 64

#define _IOMYBUF 8

#define _IONBF 4

#define _IOREAD 1

#define _IORW 128

#define _IOSTRG 64

#define _IOWRT 2

#define _NFILE 512

#define _NSTREAM_ 512

#define _SMALL_BUFSIZ 512

#define _SYS_OPEN 20

#define _TMP_MAX_S 2147483647

#define _TWO_DIGIT_EXPONENT 1

#define BUFSIZ 512

#define EOF -1

#define FILENAME_MAX 260

#define FOPEN_MAX 20

#define SYS_OPEN 20

#define TMP_MAX 32767

#define TMP_MAX_S 2147483647

typedef longlong fpos_t;

#define _CALL_REPORTFAULT 2

#define _CVTBUFSIZE 349

#define _MAX_DIR 256

#define _MAX_DRIVE 3

#define _MAX_ENV 32767

#define _MAX_EXT 256

#define _MAX_FNAME 256

#define _MAX_PATH 260

#define _OUT_TO_DEFAULT 0

#define _OUT_TO_MSGBOX 2

#define _OUT_TO_STDERR 1

#define _REPORT_ERRMODE 3

#define _WRITE_ABORT_MSG 1

#define EXIT_FAILURE 1

#define EXIT_SUCCESS 0

#define RAND_MAX 32767

typedef struct _CRT_DOUBLE _CRT_DOUBLE, *P_CRT_DOUBLE;

struct _CRT_DOUBLE {
    double x;
};

typedef struct _CRT_FLOAT _CRT_FLOAT, *P_CRT_FLOAT;

struct _CRT_FLOAT {
    float f;
};

typedef struct _div_t _div_t, *P_div_t;

struct _div_t {
    int quot;
    int rem;
};

typedef void (* _invalid_parameter_handler)(wchar_t *, wchar_t *, wchar_t *, uint, uintptr_t);

typedef struct _LDBL12 _LDBL12, *P_LDBL12;

struct _LDBL12 {
    uchar ld12[12];
};

typedef struct _ldiv_t _ldiv_t, *P_ldiv_t;

struct _ldiv_t {
    long quot;
    long rem;
};

typedef struct _LDOUBLE _LDOUBLE, *P_LDOUBLE;

struct _LDOUBLE {
    uchar ld[10];
};

typedef struct _lldiv_t _lldiv_t, *P_lldiv_t;

struct _lldiv_t {
    longlong quot;
    longlong rem;
};

typedef struct _LONGDOUBLE _LONGDOUBLE, *P_LONGDOUBLE;

struct _LONGDOUBLE {
    double x;
};

typedef int (* _onexit_t)(void);

typedef void (* _purecall_handler)(void);

typedef struct _div_t div_t;

typedef struct _ldiv_t ldiv_t;

typedef struct _lldiv_t lldiv_t;

#define _STRALIGN_USE_SECURE_CRT 1

#define _NLSCMPERROR 2147483647

#define __WARNING_BANNED_API_USAGE 28719

#define __WARNING_CYCLOMATIC_COMPLEXITY 28734

#define __WARNING_DEREF_NULL_PTR 6011

#define __WARNING_INVALID_PARAM_VALUE_1 6387

#define __WARNING_POTENTIAL_BUFFER_OVERFLOW_HIGH_PRIORITY 26015

#define __WARNING_RETURNING_BAD_RESULT 28196

#define STRSAFE_E_END_OF_FILE 2147942438

#define STRSAFE_E_INSUFFICIENT_BUFFER 2147942522

#define STRSAFE_E_INVALID_PARAMETER 2147942487

#define STRSAFE_FILL_BEHIND_NULL 512

#define STRSAFE_FILL_ON_FAILURE 1024

#define STRSAFE_IGNORE_NULLS 256

#define STRSAFE_MAX_CCH 2147483647

#define STRSAFE_MAX_LENGTH 2147483646

#define STRSAFE_NO_TRUNCATION 4096

#define STRSAFE_NULL_ON_FAILURE 2048

#define STRSAFE_USE_SECURE_CRT 0

#define STRSAFE_VALID_FLAGS 8191

typedef char * STRSAFE_LPCSTR;

typedef wchar_t * STRSAFE_LPCUWSTR;

typedef wchar_t * STRSAFE_LPCWSTR;

typedef char * STRSAFE_LPSTR;

typedef wchar_t * STRSAFE_LPWSTR;

typedef char * STRSAFE_PCNZCH;

typedef wchar_t * STRSAFE_PCNZWCH;

typedef wchar_t * STRSAFE_PCUNZWCH;

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001 {
    NEC_HIGH=2,
    NEC_LOW=0,
    NEC_MEDIUM=1
} __MIDL___MIDL_itf_structuredquery_0000_0012_0001;

typedef enum CASE_REQUIREMENT {
    CASE_REQUIREMENT_ANY=0,
    CASE_REQUIREMENT_UPPER_IF_AQS=1
} CASE_REQUIREMENT;

typedef struct CompoundCondition CompoundCondition, *PCompoundCondition;

struct CompoundCondition {
};

typedef enum CONDITION_CREATION_OPTIONS {
    CONDITION_CREATION_DEFAULT=0,
    CONDITION_CREATION_NONE=0,
    CONDITION_CREATION_SIMPLIFY=1,
    CONDITION_CREATION_USE_CONTENT_LOCALE=16,
    CONDITION_CREATION_VECTOR_AND=2,
    CONDITION_CREATION_VECTOR_LEAF=8,
    CONDITION_CREATION_VECTOR_OR=4
} CONDITION_CREATION_OPTIONS;

typedef struct ConditionFactory ConditionFactory, *PConditionFactory;

struct ConditionFactory {
};

typedef struct tagHITRANGE tagHITRANGE, *PtagHITRANGE;

typedef struct tagHITRANGE HITRANGE;

struct tagHITRANGE {
    ULONG iPosition;
    ULONG cLength;
};

typedef struct IConditionFactory IConditionFactory, *PIConditionFactory;

typedef struct IConditionFactoryVtbl IConditionFactoryVtbl, *PIConditionFactoryVtbl;

typedef struct ICondition ICondition, *PICondition;

typedef enum tagCONDITION_TYPE {
    CT_AND_CONDITION=0,
    CT_LEAF_CONDITION=3,
    CT_NOT_CONDITION=2,
    CT_OR_CONDITION=1
} tagCONDITION_TYPE;

typedef enum tagCONDITION_TYPE CONDITION_TYPE;

typedef struct IRichChunk IRichChunk, *PIRichChunk;

typedef enum STRUCTURED_QUERY_RESOLVE_OPTION {
    SQRO_ADD_ROBUST_ITEM_NAME=512,
    SQRO_ADD_VALUE_TYPE_FOR_PLAIN_VALUES=256,
    SQRO_ALWAYS_ONE_INTERVAL=2,
    SQRO_DEFAULT=0,
    SQRO_DONT_MAP_RELATIONS=8,
    SQRO_DONT_REMOVE_UNRESTRICTED_KEYWORDS=32,
    SQRO_DONT_RESOLVE_DATETIME=1,
    SQRO_DONT_RESOLVE_RANGES=16,
    SQRO_DONT_SIMPLIFY_CONDITION_TREES=4,
    SQRO_DONT_SPLIT_WORDS=64,
    SQRO_IGNORE_PHRASE_ORDER=128
} STRUCTURED_QUERY_RESOLVE_OPTION;

typedef struct IConditionVtbl IConditionVtbl, *PIConditionVtbl;

typedef struct IRichChunkVtbl IRichChunkVtbl, *PIRichChunkVtbl;

struct IConditionFactoryVtbl {
    HRESULT (* QueryInterface)(struct IConditionFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IConditionFactory *);
    ULONG (* Release)(struct IConditionFactory *);
    HRESULT (* MakeNot)(struct IConditionFactory *, struct ICondition *, BOOL, struct ICondition * *);
    HRESULT (* MakeAndOr)(struct IConditionFactory *, CONDITION_TYPE, struct IEnumUnknown *, BOOL, struct ICondition * *);
    HRESULT (* MakeLeaf)(struct IConditionFactory *, LPCWSTR, CONDITION_OPERATION, LPCWSTR, PROPVARIANT *, struct IRichChunk *, struct IRichChunk *, struct IRichChunk *, BOOL, struct ICondition * *);
    HRESULT (* Resolve)(struct IConditionFactory *, struct ICondition *, enum STRUCTURED_QUERY_RESOLVE_OPTION, SYSTEMTIME *, struct ICondition * *);
};

struct IConditionVtbl {
    HRESULT (* QueryInterface)(struct ICondition *, IID *, void * *);
    ULONG (* AddRef)(struct ICondition *);
    ULONG (* Release)(struct ICondition *);
    HRESULT (* GetClassID)(struct ICondition *, CLSID *);
    HRESULT (* IsDirty)(struct ICondition *);
    HRESULT (* Load)(struct ICondition *, struct IStream *);
    HRESULT (* Save)(struct ICondition *, struct IStream *, BOOL);
    HRESULT (* GetSizeMax)(struct ICondition *, ULARGE_INTEGER *);
    HRESULT (* GetConditionType)(struct ICondition *, CONDITION_TYPE *);
    HRESULT (* GetSubConditions)(struct ICondition *, IID *, void * *);
    HRESULT (* GetComparisonInfo)(struct ICondition *, LPWSTR *, CONDITION_OPERATION *, PROPVARIANT *);
    HRESULT (* GetValueType)(struct ICondition *, LPWSTR *);
    HRESULT (* GetValueNormalization)(struct ICondition *, LPWSTR *);
    HRESULT (* GetInputTerms)(struct ICondition *, struct IRichChunk * *, struct IRichChunk * *, struct IRichChunk * *);
    HRESULT (* Clone)(struct ICondition *, struct ICondition * *);
};

struct ICondition {
    struct IConditionVtbl * lpVtbl;
};

struct IRichChunkVtbl {
    HRESULT (* QueryInterface)(struct IRichChunk *, IID *, void * *);
    ULONG (* AddRef)(struct IRichChunk *);
    ULONG (* Release)(struct IRichChunk *);
    HRESULT (* GetData)(struct IRichChunk *, ULONG *, ULONG *, LPWSTR *, PROPVARIANT *);
};

struct IConditionFactory {
    struct IConditionFactoryVtbl * lpVtbl;
};

struct IRichChunk {
    struct IRichChunkVtbl * lpVtbl;
};

typedef struct IConditionFactory2 IConditionFactory2, *PIConditionFactory2;

typedef struct IConditionFactory2Vtbl IConditionFactory2Vtbl, *PIConditionFactory2Vtbl;

struct IConditionFactory2 {
    struct IConditionFactory2Vtbl * lpVtbl;
};

struct IConditionFactory2Vtbl {
    HRESULT (* QueryInterface)(struct IConditionFactory2 *, IID *, void * *);
    ULONG (* AddRef)(struct IConditionFactory2 *);
    ULONG (* Release)(struct IConditionFactory2 *);
    HRESULT (* MakeNot)(struct IConditionFactory2 *, struct ICondition *, BOOL, struct ICondition * *);
    HRESULT (* MakeAndOr)(struct IConditionFactory2 *, CONDITION_TYPE, struct IEnumUnknown *, BOOL, struct ICondition * *);
    HRESULT (* MakeLeaf)(struct IConditionFactory2 *, LPCWSTR, CONDITION_OPERATION, LPCWSTR, PROPVARIANT *, struct IRichChunk *, struct IRichChunk *, struct IRichChunk *, BOOL, struct ICondition * *);
    HRESULT (* Resolve)(struct IConditionFactory2 *, struct ICondition *, enum STRUCTURED_QUERY_RESOLVE_OPTION, SYSTEMTIME *, struct ICondition * *);
    HRESULT (* CreateTrueFalse)(struct IConditionFactory2 *, BOOL, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateNegation)(struct IConditionFactory2 *, struct ICondition *, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateCompoundFromObjectArray)(struct IConditionFactory2 *, CONDITION_TYPE, struct IObjectArray *, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateCompoundFromArray)(struct IConditionFactory2 *, CONDITION_TYPE, struct ICondition * *, ULONG, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateStringLeaf)(struct IConditionFactory2 *, PROPERTYKEY *, CONDITION_OPERATION, LPCWSTR, LPCWSTR, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateIntegerLeaf)(struct IConditionFactory2 *, PROPERTYKEY *, CONDITION_OPERATION, INT32, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateBooleanLeaf)(struct IConditionFactory2 *, PROPERTYKEY *, CONDITION_OPERATION, BOOL, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* CreateLeaf)(struct IConditionFactory2 *, PROPERTYKEY *, CONDITION_OPERATION, PROPVARIANT *, LPCWSTR, LPCWSTR, struct IRichChunk *, struct IRichChunk *, struct IRichChunk *, enum CONDITION_CREATION_OPTIONS, IID *, void * *);
    HRESULT (* ResolveCondition)(struct IConditionFactory2 *, struct ICondition *, enum STRUCTURED_QUERY_RESOLVE_OPTION, SYSTEMTIME *, IID *, void * *);
};

typedef struct IConditionGenerator IConditionGenerator, *PIConditionGenerator;

typedef struct IConditionGeneratorVtbl IConditionGeneratorVtbl, *PIConditionGeneratorVtbl;

typedef struct ISchemaProvider ISchemaProvider, *PISchemaProvider;

typedef struct ITokenCollection ITokenCollection, *PITokenCollection;

typedef struct INamedEntityCollector INamedEntityCollector, *PINamedEntityCollector;

typedef struct ISchemaProviderVtbl ISchemaProviderVtbl, *PISchemaProviderVtbl;

typedef struct IEntity IEntity, *PIEntity;

typedef struct ISchemaLocalizerSupport ISchemaLocalizerSupport, *PISchemaLocalizerSupport;

typedef struct ITokenCollectionVtbl ITokenCollectionVtbl, *PITokenCollectionVtbl;

typedef struct INamedEntityCollectorVtbl INamedEntityCollectorVtbl, *PINamedEntityCollectorVtbl;

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001 NAMED_ENTITY_CERTAINTY;

typedef struct IEntityVtbl IEntityVtbl, *PIEntityVtbl;

typedef struct IRelationship IRelationship, *PIRelationship;

typedef struct INamedEntity INamedEntity, *PINamedEntity;

typedef struct ISchemaLocalizerSupportVtbl ISchemaLocalizerSupportVtbl, *PISchemaLocalizerSupportVtbl;

typedef struct IRelationshipVtbl IRelationshipVtbl, *PIRelationshipVtbl;

typedef struct INamedEntityVtbl INamedEntityVtbl, *PINamedEntityVtbl;

struct INamedEntityVtbl {
    HRESULT (* QueryInterface)(struct INamedEntity *, IID *, void * *);
    ULONG (* AddRef)(struct INamedEntity *);
    ULONG (* Release)(struct INamedEntity *);
    HRESULT (* GetValue)(struct INamedEntity *, LPWSTR *);
    HRESULT (* DefaultPhrase)(struct INamedEntity *, LPWSTR *);
};

struct INamedEntityCollector {
    struct INamedEntityCollectorVtbl * lpVtbl;
};

struct ITokenCollection {
    struct ITokenCollectionVtbl * lpVtbl;
};

struct IConditionGeneratorVtbl {
    HRESULT (* QueryInterface)(struct IConditionGenerator *, IID *, void * *);
    ULONG (* AddRef)(struct IConditionGenerator *);
    ULONG (* Release)(struct IConditionGenerator *);
    HRESULT (* Initialize)(struct IConditionGenerator *, struct ISchemaProvider *);
    HRESULT (* RecognizeNamedEntities)(struct IConditionGenerator *, LPCWSTR, LCID, struct ITokenCollection *, struct INamedEntityCollector *);
    HRESULT (* GenerateForLeaf)(struct IConditionGenerator *, struct IConditionFactory *, LPCWSTR, CONDITION_OPERATION, LPCWSTR, LPCWSTR, LPCWSTR, struct IRichChunk *, struct IRichChunk *, struct IRichChunk *, BOOL, BOOL *, struct ICondition * *);
    HRESULT (* DefaultPhrase)(struct IConditionGenerator *, LPCWSTR, PROPVARIANT *, BOOL, LPWSTR *);
};

struct ISchemaProviderVtbl {
    HRESULT (* QueryInterface)(struct ISchemaProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ISchemaProvider *);
    ULONG (* Release)(struct ISchemaProvider *);
    HRESULT (* Entities)(struct ISchemaProvider *, IID *, void * *);
    HRESULT (* RootEntity)(struct ISchemaProvider *, struct IEntity * *);
    HRESULT (* GetEntity)(struct ISchemaProvider *, LPCWSTR, struct IEntity * *);
    HRESULT (* MetaData)(struct ISchemaProvider *, IID *, void * *);
    HRESULT (* Localize)(struct ISchemaProvider *, LCID, struct ISchemaLocalizerSupport *);
    HRESULT (* SaveBinary)(struct ISchemaProvider *, LPCWSTR);
    HRESULT (* LookupAuthoredNamedEntity)(struct ISchemaProvider *, struct IEntity *, LPCWSTR, struct ITokenCollection *, ULONG, ULONG *, LPWSTR *);
};

struct IEntityVtbl {
    HRESULT (* QueryInterface)(struct IEntity *, IID *, void * *);
    ULONG (* AddRef)(struct IEntity *);
    ULONG (* Release)(struct IEntity *);
    HRESULT (* Name)(struct IEntity *, LPWSTR *);
    HRESULT (* Base)(struct IEntity *, struct IEntity * *);
    HRESULT (* Relationships)(struct IEntity *, IID *, void * *);
    HRESULT (* GetRelationship)(struct IEntity *, LPCWSTR, struct IRelationship * *);
    HRESULT (* MetaData)(struct IEntity *, IID *, void * *);
    HRESULT (* NamedEntities)(struct IEntity *, IID *, void * *);
    HRESULT (* GetNamedEntity)(struct IEntity *, LPCWSTR, struct INamedEntity * *);
    HRESULT (* DefaultPhrase)(struct IEntity *, LPWSTR *);
};

struct ISchemaLocalizerSupport {
    struct ISchemaLocalizerSupportVtbl * lpVtbl;
};

struct ITokenCollectionVtbl {
    HRESULT (* QueryInterface)(struct ITokenCollection *, IID *, void * *);
    ULONG (* AddRef)(struct ITokenCollection *);
    ULONG (* Release)(struct ITokenCollection *);
    HRESULT (* NumberOfTokens)(struct ITokenCollection *, ULONG *);
    HRESULT (* GetToken)(struct ITokenCollection *, ULONG, ULONG *, ULONG *, LPWSTR *);
};

struct IEntity {
    struct IEntityVtbl * lpVtbl;
};

struct INamedEntity {
    struct INamedEntityVtbl * lpVtbl;
};

struct IRelationshipVtbl {
    HRESULT (* QueryInterface)(struct IRelationship *, IID *, void * *);
    ULONG (* AddRef)(struct IRelationship *);
    ULONG (* Release)(struct IRelationship *);
    HRESULT (* Name)(struct IRelationship *, LPWSTR *);
    HRESULT (* IsReal)(struct IRelationship *, BOOL *);
    HRESULT (* Destination)(struct IRelationship *, struct IEntity * *);
    HRESULT (* MetaData)(struct IRelationship *, IID *, void * *);
    HRESULT (* DefaultPhrase)(struct IRelationship *, LPWSTR *);
};

struct IConditionGenerator {
    struct IConditionGeneratorVtbl * lpVtbl;
};

struct ISchemaProvider {
    struct ISchemaProviderVtbl * lpVtbl;
};

struct IRelationship {
    struct IRelationshipVtbl * lpVtbl;
};

struct ISchemaLocalizerSupportVtbl {
    HRESULT (* QueryInterface)(struct ISchemaLocalizerSupport *, IID *, void * *);
    ULONG (* AddRef)(struct ISchemaLocalizerSupport *);
    ULONG (* Release)(struct ISchemaLocalizerSupport *);
    HRESULT (* Localize)(struct ISchemaLocalizerSupport *, LPCWSTR, LPWSTR *);
};

struct INamedEntityCollectorVtbl {
    HRESULT (* QueryInterface)(struct INamedEntityCollector *, IID *, void * *);
    ULONG (* AddRef)(struct INamedEntityCollector *);
    ULONG (* Release)(struct INamedEntityCollector *);
    HRESULT (* Add)(struct INamedEntityCollector *, ULONG, ULONG, ULONG, ULONG, struct IEntity *, LPCWSTR, NAMED_ENTITY_CERTAINTY);
};

typedef struct IInterval IInterval, *PIInterval;

typedef struct IIntervalVtbl IIntervalVtbl, *PIIntervalVtbl;

typedef enum tagINTERVAL_LIMIT_KIND {
    ILK_EXPLICIT_EXCLUDED=1,
    ILK_EXPLICIT_INCLUDED=0,
    ILK_NEGATIVE_INFINITY=2,
    ILK_POSITIVE_INFINITY=3
} tagINTERVAL_LIMIT_KIND;

typedef enum tagINTERVAL_LIMIT_KIND INTERVAL_LIMIT_KIND;

struct IIntervalVtbl {
    HRESULT (* QueryInterface)(struct IInterval *, IID *, void * *);
    ULONG (* AddRef)(struct IInterval *);
    ULONG (* Release)(struct IInterval *);
    HRESULT (* GetLimits)(struct IInterval *, INTERVAL_LIMIT_KIND *, PROPVARIANT *, INTERVAL_LIMIT_KIND *, PROPVARIANT *);
};

struct IInterval {
    struct IIntervalVtbl * lpVtbl;
};

typedef struct IMetaData IMetaData, *PIMetaData;

typedef struct IMetaDataVtbl IMetaDataVtbl, *PIMetaDataVtbl;

struct IMetaData {
    struct IMetaDataVtbl * lpVtbl;
};

struct IMetaDataVtbl {
    HRESULT (* QueryInterface)(struct IMetaData *, IID *, void * *);
    ULONG (* AddRef)(struct IMetaData *);
    ULONG (* Release)(struct IMetaData *);
    HRESULT (* GetData)(struct IMetaData *, LPWSTR *, LPWSTR *);
};

typedef struct Interval Interval, *PInterval;

struct Interval {
};

typedef struct IQueryParser IQueryParser, *PIQueryParser;

typedef struct IQueryParserVtbl IQueryParserVtbl, *PIQueryParserVtbl;

typedef struct IQuerySolution IQuerySolution, *PIQuerySolution;

typedef enum tagSTRUCTURED_QUERY_SINGLE_OPTION {
    SQSO_AUTOMATIC_WILDCARD=4,
    SQSO_CONNECTOR_CASE=10,
    SQSO_IMPLICIT_CONNECTOR=9,
    SQSO_LANGUAGE_KEYWORDS=6,
    SQSO_LOCALE_WORD_BREAKING=1,
    SQSO_NATURAL_SYNTAX=3,
    SQSO_SCHEMA=0,
    SQSO_SYNTAX=7,
    SQSO_TIME_ZONE=8,
    SQSO_TRACE_LEVEL=5,
    SQSO_WORD_BREAKER=2
} tagSTRUCTURED_QUERY_SINGLE_OPTION;

typedef enum tagSTRUCTURED_QUERY_SINGLE_OPTION STRUCTURED_QUERY_SINGLE_OPTION;

typedef enum tagSTRUCTURED_QUERY_MULTIOPTION {
    SQMO_DEFAULT_PROPERTY=1,
    SQMO_GENERATOR_FOR_TYPE=2,
    SQMO_MAP_PROPERTY=3,
    SQMO_VIRTUAL_PROPERTY=0
} tagSTRUCTURED_QUERY_MULTIOPTION;

typedef enum tagSTRUCTURED_QUERY_MULTIOPTION STRUCTURED_QUERY_MULTIOPTION;

typedef struct IQuerySolutionVtbl IQuerySolutionVtbl, *PIQuerySolutionVtbl;

struct IQueryParserVtbl {
    HRESULT (* QueryInterface)(struct IQueryParser *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryParser *);
    ULONG (* Release)(struct IQueryParser *);
    HRESULT (* Parse)(struct IQueryParser *, LPCWSTR, struct IEnumUnknown *, struct IQuerySolution * *);
    HRESULT (* SetOption)(struct IQueryParser *, STRUCTURED_QUERY_SINGLE_OPTION, PROPVARIANT *);
    HRESULT (* GetOption)(struct IQueryParser *, STRUCTURED_QUERY_SINGLE_OPTION, PROPVARIANT *);
    HRESULT (* SetMultiOption)(struct IQueryParser *, STRUCTURED_QUERY_MULTIOPTION, LPCWSTR, PROPVARIANT *);
    HRESULT (* GetSchemaProvider)(struct IQueryParser *, struct ISchemaProvider * *);
    HRESULT (* RestateToString)(struct IQueryParser *, struct ICondition *, BOOL, LPWSTR *);
    HRESULT (* ParsePropertyValue)(struct IQueryParser *, LPCWSTR, LPCWSTR, struct IQuerySolution * *);
    HRESULT (* RestatePropertyValueToString)(struct IQueryParser *, struct ICondition *, BOOL, LPWSTR *, LPWSTR *);
};

struct IQueryParser {
    struct IQueryParserVtbl * lpVtbl;
};

struct IQuerySolutionVtbl {
    HRESULT (* QueryInterface)(struct IQuerySolution *, IID *, void * *);
    ULONG (* AddRef)(struct IQuerySolution *);
    ULONG (* Release)(struct IQuerySolution *);
    HRESULT (* MakeNot)(struct IQuerySolution *, struct ICondition *, BOOL, struct ICondition * *);
    HRESULT (* MakeAndOr)(struct IQuerySolution *, CONDITION_TYPE, struct IEnumUnknown *, BOOL, struct ICondition * *);
    HRESULT (* MakeLeaf)(struct IQuerySolution *, LPCWSTR, CONDITION_OPERATION, LPCWSTR, PROPVARIANT *, struct IRichChunk *, struct IRichChunk *, struct IRichChunk *, BOOL, struct ICondition * *);
    HRESULT (* Resolve)(struct IQuerySolution *, struct ICondition *, enum STRUCTURED_QUERY_RESOLVE_OPTION, SYSTEMTIME *, struct ICondition * *);
    HRESULT (* GetQuery)(struct IQuerySolution *, struct ICondition * *, struct IEntity * *);
    HRESULT (* GetErrors)(struct IQuerySolution *, IID *, void * *);
    HRESULT (* GetLexicalData)(struct IQuerySolution *, LPWSTR *, struct ITokenCollection * *, LCID *, struct IUnknown * *);
};

struct IQuerySolution {
    struct IQuerySolutionVtbl * lpVtbl;
};

typedef struct IQueryParserManager IQueryParserManager, *PIQueryParserManager;

typedef struct IQueryParserManagerVtbl IQueryParserManagerVtbl, *PIQueryParserManagerVtbl;

typedef USHORT LANGID;

typedef enum tagQUERY_PARSER_MANAGER_OPTION {
    QPMO_APPEND_LCID_TO_LOCALIZED_PATH=4,
    QPMO_LOCALIZED_SCHEMA_BINARY_PATH=3,
    QPMO_LOCALIZER_SUPPORT=5,
    QPMO_PRELOCALIZED_SCHEMA_BINARY_PATH=1,
    QPMO_SCHEMA_BINARY_NAME=0,
    QPMO_UNLOCALIZED_SCHEMA_BINARY_PATH=2
} tagQUERY_PARSER_MANAGER_OPTION;

typedef enum tagQUERY_PARSER_MANAGER_OPTION QUERY_PARSER_MANAGER_OPTION;

struct IQueryParserManager {
    struct IQueryParserManagerVtbl * lpVtbl;
};

struct IQueryParserManagerVtbl {
    HRESULT (* QueryInterface)(struct IQueryParserManager *, IID *, void * *);
    ULONG (* AddRef)(struct IQueryParserManager *);
    ULONG (* Release)(struct IQueryParserManager *);
    HRESULT (* CreateLoadedParser)(struct IQueryParserManager *, LPCWSTR, LANGID, IID *, void * *);
    HRESULT (* InitializeOptions)(struct IQueryParserManager *, BOOL, BOOL, struct IQueryParser *);
    HRESULT (* SetOption)(struct IQueryParserManager *, QUERY_PARSER_MANAGER_OPTION, PROPVARIANT *);
};

typedef struct LeafCondition LeafCondition, *PLeafCondition;

struct LeafCondition {
};

typedef struct NegationCondition NegationCondition, *PNegationCondition;

struct NegationCondition {
};

typedef struct QueryParser QueryParser, *PQueryParser;

struct QueryParser {
};

typedef struct QueryParserManager QueryParserManager, *PQueryParserManager;

struct QueryParserManager {
};

typedef enum tagSTRUCTURED_QUERY_PARSE_ERROR {
    SQPE_EXTRA_CLOSING_PARENTHESIS=2,
    SQPE_EXTRA_OPENING_PARENTHESIS=1,
    SQPE_IGNORED_CONNECTOR=4,
    SQPE_IGNORED_KEYWORD=5,
    SQPE_IGNORED_MODIFIER=3,
    SQPE_NONE=0,
    SQPE_UNHANDLED=6
} tagSTRUCTURED_QUERY_PARSE_ERROR;

typedef enum tagSTRUCTURED_QUERY_PARSE_ERROR STRUCTURED_QUERY_PARSE_ERROR;

typedef enum tagSTRUCTURED_QUERY_SYNTAX {
    SQS_ADVANCED_QUERY_SYNTAX=1,
    SQS_NATURAL_QUERY_SYNTAX=2,
    SQS_NO_SYNTAX=0
} tagSTRUCTURED_QUERY_SYNTAX;

typedef enum tagSTRUCTURED_QUERY_SYNTAX STRUCTURED_QUERY_SYNTAX;

typedef struct ICondition2 ICondition2, *PICondition2;

typedef struct ICondition2Vtbl ICondition2Vtbl, *PICondition2Vtbl;

struct ICondition2Vtbl {
    HRESULT (* QueryInterface)(struct ICondition2 *, IID *, void * *);
    ULONG (* AddRef)(struct ICondition2 *);
    ULONG (* Release)(struct ICondition2 *);
    HRESULT (* GetClassID)(struct ICondition2 *, CLSID *);
    HRESULT (* IsDirty)(struct ICondition2 *);
    HRESULT (* Load)(struct ICondition2 *, struct IStream *);
    HRESULT (* Save)(struct ICondition2 *, struct IStream *, BOOL);
    HRESULT (* GetSizeMax)(struct ICondition2 *, ULARGE_INTEGER *);
    HRESULT (* GetConditionType)(struct ICondition2 *, CONDITION_TYPE *);
    HRESULT (* GetSubConditions)(struct ICondition2 *, IID *, void * *);
    HRESULT (* GetComparisonInfo)(struct ICondition2 *, LPWSTR *, CONDITION_OPERATION *, PROPVARIANT *);
    HRESULT (* GetValueType)(struct ICondition2 *, LPWSTR *);
    HRESULT (* GetValueNormalization)(struct ICondition2 *, LPWSTR *);
    HRESULT (* GetInputTerms)(struct ICondition2 *, struct IRichChunk * *, struct IRichChunk * *, struct IRichChunk * *);
    HRESULT (* Clone)(struct ICondition2 *, struct ICondition * *);
    HRESULT (* GetLocale)(struct ICondition2 *, LPWSTR *);
    HRESULT (* GetLeafConditionInfo)(struct ICondition2 *, PROPERTYKEY *, CONDITION_OPERATION *, PROPVARIANT *);
};

struct ICondition2 {
    struct ICondition2Vtbl * lpVtbl;
};

#define ACCESS_ALL 255

#define ACCESS_ATRIB 32

#define ACCESS_ATTR_PARMNUM 2

#define ACCESS_AUDIT 1

#define ACCESS_CREATE 4

#define ACCESS_DELETE 16

#define ACCESS_EXEC 8

#define ACCESS_FINDFIRST 128

#define ACCESS_GROUP 32768

#define ACCESS_NONE 0

#define ACCESS_PERM 64

#define ACCESS_READ 1

#define ACCESS_WRITE 2

#define MAJOR_VERSION_MASK 15

#define MAXPERMENTRIES 64

#define PERM_FILE_CREATE 4

#define PERM_FILE_READ 1

#define PERM_FILE_WRITE 2

#define SEC_SECURITY_NETWARE 3

#define SEC_SECURITY_SHARE 0

#define SEC_SECURITY_WINNT 1

#define SEC_SECURITY_WINNTAS 2

#define SESI1_NUM_ELEMENTS 8

#define SESI2_NUM_ELEMENTS 9

#define SESS_GUEST 1

#define SESS_NOENCRYPTION 2

#define SHI1_NUM_ELEMENTS 4

#define SHI2_NUM_ELEMENTS 10

#define SHI50F_ACCESSMASK 3

#define SHI50F_DEPENDSON 3

#define SHI50F_FULL 2

#define SHI50F_PERSIST 256

#define SHI50F_RDONLY 1

#define SHI50F_SYSTEM 512

#define SHI_MAX_USES_PARMNUM 6

#define SHI_PASSWD_PARMNUM 9

#define SHI_PERMISSIONS_PARMNUM 5

#define SHI_REMARK_PARMNUM 4

#define SHI_USES_UNLIMITED -1

#define STYPE_DEVICE 2

#define STYPE_DISKTREE 0

#define STYPE_IPC 3

#define STYPE_PRINTQ 1

#define SV_HIDDEN 1

#define SV_NODISC 65535

#define SV_SECURITY_NETWARE 3

#define SV_SECURITY_SHARE 0

#define SV_SECURITY_WINNT 1

#define SV_SECURITY_WINNTAS 2

#define SV_SHARESECURITY 0

#define SV_TYPE_AFP 64

#define SV_TYPE_ALL 4294967295

#define SV_TYPE_DIALIN_SERVER 1024

#define SV_TYPE_DOMAIN_BAKCTRL 16

#define SV_TYPE_DOMAIN_CTRL 8

#define SV_TYPE_DOMAIN_MEMBER 256

#define SV_TYPE_NOVELL 128

#define SV_TYPE_PRINTQ_SERVER 512

#define SV_TYPE_SERVER 2

#define SV_TYPE_SQLSERVER 4

#define SV_TYPE_TIME_SOURCE 32

#define SV_TYPE_WORKSTATION 1

#define SV_USERSECURITY 1

#define SV_VISIBLE 0

#define SVI1_NUM_ELEMENTS 5

#define SVI2_NUM_ELEMENTS 44

#define SVI3_NUM_ELEMENTS 45

#define SW_AUTOPROF_LOAD_MASK 1

#define SW_AUTOPROF_SAVE_MASK 2

typedef struct access_info_0 access_info_0, *Paccess_info_0;

struct access_info_0 {
    char * acc0_resource_name;
};

typedef struct access_info_1 access_info_1, *Paccess_info_1;

struct access_info_1 {
    char * acc1_resource_name;
    short acc1_attr;
    short acc1_count;
};

typedef struct access_info_10 access_info_10, *Paccess_info_10;

struct access_info_10 {
    char * acc10_resource_name;
};

typedef struct access_info_12 access_info_12, *Paccess_info_12;

struct access_info_12 {
    char * acc12_resource_name;
    short acc12_attr;
    short acc12_count;
};

typedef struct access_info_2 access_info_2, *Paccess_info_2;

struct access_info_2 {
    char * acc2_resource_name;
    short acc2_attr;
    short acc2_count;
};

typedef struct access_list access_list, *Paccess_list;

struct access_list {
    char acl_ugname[21];
    char acl_ugname_pad_1;
    short acl_access;
};

typedef struct access_list_12 access_list_12, *Paccess_list_12;

struct access_list_12 {
    char * acl12_ugname;
    ushort acl12_access;
};

typedef struct access_list_2 access_list_2, *Paccess_list_2;

struct access_list_2 {
    char * acl2_ugname;
    ushort acl2_access;
};

typedef struct connection_info_0 connection_info_0, *Pconnection_info_0;

struct connection_info_0 {
    ushort coni0_id;
};

typedef struct connection_info_1 connection_info_1, *Pconnection_info_1;

struct connection_info_1 {
    ushort coni1_id;
    ushort coni1_type;
    ushort coni1_num_opens;
    ushort coni1_num_users;
    ulong coni1_time;
    char * coni1_username;
    char * coni1_netname;
};

typedef struct connection_info_50 connection_info_50, *Pconnection_info_50;

struct connection_info_50 {
    ushort coni50_type;
    ushort coni50_num_opens;
    ulong coni50_time;
    char * coni50_netname;
    char * coni50_username;
};

typedef struct file_info_0 file_info_0, *Pfile_info_0;

struct file_info_0 {
    ushort fi0_id;
};

typedef struct file_info_1 file_info_1, *Pfile_info_1;

struct file_info_1 {
    ushort fi1_id;
    ushort fi1_permissions;
    ushort fi1_num_locks;
    char * fi1_pathname;
    char * fi1_username;
};

typedef struct file_info_2 file_info_2, *Pfile_info_2;

struct file_info_2 {
    ulong fi2_id;
};

typedef struct file_info_3 file_info_3, *Pfile_info_3;

struct file_info_3 {
    ulong fi3_id;
    ushort fi3_permissions;
    ushort fi3_num_locks;
    char * fi3_pathname;
    char * fi3_username;
};

typedef struct file_info_50 file_info_50, *Pfile_info_50;

struct file_info_50 {
    ulong fi50_id;
    ushort fi50_permissions;
    ushort fi50_num_locks;
    char * fi50_pathname;
    char * fi50_username;
    char * fi50_sharename;
};

typedef struct res_file_enum_2 res_file_enum_2, *Pres_file_enum_2;

typedef struct res_file_enum_2 FRK;

struct res_file_enum_2 {
    ushort res_pad;
    ushort res_fs;
    ulong res_pro;
};

typedef struct security_info_1 security_info_1, *Psecurity_info_1;

struct security_info_1 {
    ulong sec1_security;
    char * sec1_container;
    char * sec1_ab_server;
    char * sec1_ab_dll;
};

typedef struct server_info_0 server_info_0, *Pserver_info_0;

struct server_info_0 {
    char sv0_name[16];
};

typedef struct server_info_1 server_info_1, *Pserver_info_1;

struct server_info_1 {
    char sv1_name[16];
    uchar sv1_version_major;
    uchar sv1_version_minor;
    ulong sv1_type;
    char * sv1_comment;
};

typedef struct server_info_2 server_info_2, *Pserver_info_2;

struct server_info_2 {
    char sv2_name[16];
    uchar sv2_version_major;
    uchar sv2_version_minor;
    ulong sv2_type;
    char * sv2_comment;
    ulong sv2_ulist_mtime;
    ulong sv2_glist_mtime;
    ulong sv2_alist_mtime;
    ushort sv2_users;
    ushort sv2_disc;
    char * sv2_alerts;
    ushort sv2_security;
    ushort sv2_auditing;
    ushort sv2_numadmin;
    ushort sv2_lanmask;
    ushort sv2_hidden;
    ushort sv2_announce;
    ushort sv2_anndelta;
    char sv2_guestacct[21];
    uchar sv2_pad1;
    char * sv2_userpath;
    ushort sv2_chdevs;
    ushort sv2_chdevq;
    ushort sv2_chdevjobs;
    ushort sv2_connections;
    ushort sv2_shares;
    ushort sv2_openfiles;
    ushort sv2_sessopens;
    ushort sv2_sessvcs;
    ushort sv2_sessreqs;
    ushort sv2_opensearch;
    ushort sv2_activelocks;
    ushort sv2_numreqbuf;
    ushort sv2_sizreqbuf;
    ushort sv2_numbigbuf;
    ushort sv2_numfiletasks;
    ushort sv2_alertsched;
    ushort sv2_erroralert;
    ushort sv2_logonalert;
    ushort sv2_accessalert;
    ushort sv2_diskalert;
    ushort sv2_netioalert;
    ushort sv2_maxauditsz;
    char * sv2_srvheuristics;
};

typedef struct server_info_3 server_info_3, *Pserver_info_3;

struct server_info_3 {
    char sv3_name[16];
    uchar sv3_version_major;
    uchar sv3_version_minor;
    ulong sv3_type;
    char * sv3_comment;
    ulong sv3_ulist_mtime;
    ulong sv3_glist_mtime;
    ulong sv3_alist_mtime;
    ushort sv3_users;
    ushort sv3_disc;
    char * sv3_alerts;
    ushort sv3_security;
    ushort sv3_auditing;
    ushort sv3_numadmin;
    ushort sv3_lanmask;
    ushort sv3_hidden;
    ushort sv3_announce;
    ushort sv3_anndelta;
    char sv3_guestacct[21];
    uchar sv3_pad1;
    char * sv3_userpath;
    ushort sv3_chdevs;
    ushort sv3_chdevq;
    ushort sv3_chdevjobs;
    ushort sv3_connections;
    ushort sv3_shares;
    ushort sv3_openfiles;
    ushort sv3_sessopens;
    ushort sv3_sessvcs;
    ushort sv3_sessreqs;
    ushort sv3_opensearch;
    ushort sv3_activelocks;
    ushort sv3_numreqbuf;
    ushort sv3_sizreqbuf;
    ushort sv3_numbigbuf;
    ushort sv3_numfiletasks;
    ushort sv3_alertsched;
    ushort sv3_erroralert;
    ushort sv3_logonalert;
    ushort sv3_accessalert;
    ushort sv3_diskalert;
    ushort sv3_netioalert;
    ushort sv3_maxauditsz;
    char * sv3_srvheuristics;
    ulong sv3_auditedevents;
    ushort sv3_autoprofile;
    char * sv3_autopath;
};

typedef struct server_info_50 server_info_50, *Pserver_info_50;

struct server_info_50 {
    char sv50_name[16];
    uchar sv50_version_major;
    uchar sv50_version_minor;
    ulong sv50_type;
    char * sv50_comment;
    ushort sv50_security;
    ushort sv50_auditing;
    char * sv50_container;
    char * sv50_ab_server;
    char * sv50_ab_dll;
};

typedef struct session_info_0 session_info_0, *Psession_info_0;

struct session_info_0 {
    char * sesi0_cname;
};

typedef struct session_info_1 session_info_1, *Psession_info_1;

struct session_info_1 {
    char * sesi1_cname;
    char * sesi1_username;
    ushort sesi1_num_conns;
    ushort sesi1_num_opens;
    ushort sesi1_num_users;
    ulong sesi1_time;
    ulong sesi1_idle_time;
    ulong sesi1_user_flags;
};

typedef struct session_info_10 session_info_10, *Psession_info_10;

struct session_info_10 {
    char * sesi10_cname;
    char * sesi10_username;
    ulong sesi10_time;
    ulong sesi10_idle_time;
};

typedef struct session_info_2 session_info_2, *Psession_info_2;

struct session_info_2 {
    char * sesi2_cname;
    char * sesi2_username;
    ushort sesi2_num_conns;
    ushort sesi2_num_opens;
    ushort sesi2_num_users;
    ulong sesi2_time;
    ulong sesi2_idle_time;
    ulong sesi2_user_flags;
    char * sesi2_cltype_name;
};

typedef struct session_info_50 session_info_50, *Psession_info_50;

struct session_info_50 {
    char * sesi50_cname;
    char * sesi50_username;
    ulong sesi50_key;
    ushort sesi50_num_conns;
    ushort sesi50_num_opens;
    ulong sesi50_time;
    ulong sesi50_idle_time;
    uchar sesi50_protocol;
    uchar pad1;
};

typedef struct share_info_0 share_info_0, *Pshare_info_0;

struct share_info_0 {
    char shi0_netname[13];
};

typedef struct share_info_1 share_info_1, *Pshare_info_1;

struct share_info_1 {
    char shi1_netname[13];
    char shi1_pad1;
    ushort shi1_type;
    char * shi1_remark;
};

typedef struct share_info_2 share_info_2, *Pshare_info_2;

struct share_info_2 {
    char shi2_netname[13];
    char shi2_pad1;
    ushort shi2_type;
    char * shi2_remark;
    ushort shi2_permissions;
    ushort shi2_max_uses;
    ushort shi2_current_uses;
    char * shi2_path;
    char shi2_passwd[9];
    char shi2_pad2;
};

typedef struct share_info_50 share_info_50, *Pshare_info_50;

struct share_info_50 {
    char shi50_netname[13];
    uchar shi50_type;
    ushort shi50_flags;
    char * shi50_remark;
    char * shi50_path;
    char shi50_rw_password[9];
    char shi50_ro_password[9];
};

#define _SYS_MSGMAX 38

#define CHARSET_DEFAULT 1

#define CHARSET_GLYPHIDX 3

#define CHARSET_SYMBOL 2

#define CHARSET_UNICODE 1

#define E_ADDFONTFAILED 512

#define E_API_NOTIMPL 1

#define E_CHARCODECOUNTINVALID 2

#define E_CHARCODESETINVALID 3

#define E_CHARSETINVALID 21

#define E_COULDNTCREATETEMPFILE 513

#define E_DEVICETRUETYPEFONT 4

#define E_ERRORACCESSINGEXCLUDELIST 274

#define E_ERRORACCESSINGFACENAME 13

#define E_ERRORACCESSINGFONTDATA 12

#define E_ERRORCOMPRESSINGFONTDATA 256

#define E_ERRORCONVERTINGCHARS 18

#define E_ERRORCREATINGFONTFILE 269

#define E_ERRORDECOMPRESSINGFONTDATA 273

#define E_ERROREXPANDINGFONTDATA 519

#define E_ERRORGETTINGDC 520

#define E_ERRORREADINGFONTDATA 267

#define E_ERRORUNICODECONVERSION 17

#define E_EXCEPTION 19

#define E_EXCEPTIONINCOMPRESSION 522

#define E_EXCEPTIONINDECOMPRESSION 521

#define E_FACENAMEINVALID 275

#define E_FILE_NOT_FOUND 23

#define E_FLAGSINVALID 268

#define E_FONTALREADYEXISTS 270

#define E_FONTDATAINVALID 258

#define E_FONTFAMILYNAMENOTINFULL 285

#define E_FONTFILECREATEFAILED 515

#define E_FONTFILENOTFOUND 517

#define E_FONTINSTALLFAILED 272

#define E_FONTNAMEALREADYEXISTS 271

#define E_FONTNOTEMBEDDABLE 260

#define E_FONTREFERENCEINVALID 8

#define E_FONTVARIATIONSIMULATED 283

#define E_HDCINVALID 6

#define E_INPUTPARAMINVALID 25

#define E_NAMECHANGEFAILED 259

#define E_NOFREEMEMORY 7

#define E_NONE 0

#define E_NOOS2 265

#define E_NOTATRUETYPEFONT 10

#define E_PBENABLEDINVALID 280

#define E_PERMISSIONSINVALID 279

#define E_PRIVSINVALID 261

#define E_PRIVSTATUSINVALID 278

#define E_READFROMSTREAMFAILED 263

#define E_RESERVEDPARAMNOTNULL 20

#define E_RESOURCEFILECREATEFAILED 518

#define E_SAVETOSTREAMFAILED 264

#define E_STATUSINVALID 277

#define E_STREAMINVALID 276

#define E_SUBSETTINGEXCEPTION 281

#define E_SUBSETTINGFAILED 262

#define E_SUBSTRING_TEST_FAIL 282

#define E_T2NOFREEMEMORY 266

#define E_TTC_INDEX_OUT_OF_RANGE 24

#define E_WINDOWSAPI 516

#define EMBED_EDITABLE 2

#define EMBED_INSTALLABLE 3

#define EMBED_NOEMBEDDING 4

#define EMBED_PREVIEWPRINT 1

#define LICENSE_DEFAULT 0

#define LICENSE_EDITABLE 8

#define LICENSE_INSTALLABLE 0

#define LICENSE_NOEMBEDDING 2

#define LICENSE_PREVIEWPRINT 4

#define TTDELETE_DONTREMOVEFONT 1

#define TTEMBED_EMBEDEUDC 32

#define TTEMBED_EUDCEMBEDDED 2

#define TTEMBED_FAILIFVARIATIONSIMULATED 16

#define TTEMBED_RAW 0

#define TTEMBED_SUBSET 1

#define TTEMBED_SUBSETCANCEL 4

#define TTEMBED_TTCOMPRESSED 4

#define TTEMBED_VARIATIONSIMULATED 1

#define TTEMBED_WEBOBJECT 128

#define TTEMBED_XORENCRYPTDATA 268435456

#define TTLOAD_EUDC_OVERWRITE 2

#define TTLOAD_EUDC_SET 4

#define TTLOAD_FONT_IN_SYSSTARTUP 2

#define TTLOAD_FONT_SUBSETTED 1

#define TTLOAD_PRIVATE 1

typedef ulong (* READEMBEDPROC)(void *, void *, ulong);

typedef struct TTEMBEDINFO TTEMBEDINFO, *PTTEMBEDINFO;

struct TTEMBEDINFO {
    ushort usStructSize;
    ushort usRootStrSize;
    ushort * pusRootStr;
};

typedef struct TTLOADINFO TTLOADINFO, *PTTLOADINFO;

struct TTLOADINFO {
    ushort usStructSize;
    ushort usRefStrSize;
    ushort * pusRefStr;
};

typedef struct TTVALIDATIONTESTSPARAMS TTVALIDATIONTESTSPARAMS, *PTTVALIDATIONTESTSPARAMS;

struct TTVALIDATIONTESTSPARAMS {
    ulong ulStructSize;
    long lTestFromSize;
    long lTestToSize;
    ulong ulCharSet;
    ushort usReserved1;
    ushort usCharCodeCount;
    ushort * pusCharCodeSet;
};

typedef struct TTVALIDATIONTESTSPARAMSEX TTVALIDATIONTESTSPARAMSEX, *PTTVALIDATIONTESTSPARAMSEX;

struct TTVALIDATIONTESTSPARAMSEX {
    ulong ulStructSize;
    long lTestFromSize;
    long lTestToSize;
    ulong ulCharSet;
    ushort usReserved1;
    ushort usCharCodeCount;
    ulong * pulCharCodeSet;
};

typedef ulong (* WRITEEMBEDPROC)(void *, void *, ulong);

#define INITIALIZE_NEGOTIATION 4294967295

#define LAST_LINEMEDIAMODE 32768

#define LAST_LINEREQUESTMODE 2

#define LINE_ADDRESSSTATE 0

#define LINE_AGENTSESSIONSTATUS 27

#define LINE_AGENTSPECIFIC 21

#define LINE_AGENTSTATUS 22

#define LINE_AGENTSTATUSEX 29

#define LINE_APPNEWCALL 23

#define LINE_CALLINFO 1

#define LINE_CALLSTATE 2

#define LINE_CLOSE 3

#define LINE_CREATE 19

#define LINE_DEVSPECIFIC 4

#define LINE_DEVSPECIFICFEATURE 5

#define LINE_GATHERDIGITS 6

#define LINE_GENERATE 7

#define LINE_GROUPSTATUS 30

#define LINE_LINEDEVSTATE 8

#define LINE_MONITORDIGITS 9

#define LINE_MONITORMEDIA 10

#define LINE_MONITORTONE 11

#define LINE_PROXYREQUEST 24

#define LINE_PROXYSTATUS 31

#define LINE_QUEUESTATUS 28

#define LINE_REMOVE 25

#define LINE_REPLY 12

#define LINE_REQUEST 13

#define LINEADDRCAPFLAGS_ACCEPTTOALERT 1048576

#define LINEADDRCAPFLAGS_ACDGROUP 1073741824

#define LINEADDRCAPFLAGS_AUTORECONNECT 1024

#define LINEADDRCAPFLAGS_BLOCKIDDEFAULT 8

#define LINEADDRCAPFLAGS_BLOCKIDOVERRIDE 16

#define LINEADDRCAPFLAGS_COMPLETIONID 2048

#define LINEADDRCAPFLAGS_CONFDROP 2097152

#define LINEADDRCAPFLAGS_CONFERENCEHELD 16384

#define LINEADDRCAPFLAGS_CONFERENCEMAKE 32768

#define LINEADDRCAPFLAGS_DESTOFFHOOK 128

#define LINEADDRCAPFLAGS_DIALED 32

#define LINEADDRCAPFLAGS_FWDBUSYNAADDR 524288

#define LINEADDRCAPFLAGS_FWDCONSULT 256

#define LINEADDRCAPFLAGS_FWDINTEXTADDR 262144

#define LINEADDRCAPFLAGS_FWDNUMRINGS 1

#define LINEADDRCAPFLAGS_FWDSTATUSVALID 131072

#define LINEADDRCAPFLAGS_HOLDMAKESNEW 67108864

#define LINEADDRCAPFLAGS_NOEXTERNALCALLS 268435456

#define LINEADDRCAPFLAGS_NOINTERNALCALLS 134217728

#define LINEADDRCAPFLAGS_ORIGOFFHOOK 64

#define LINEADDRCAPFLAGS_PARTIALDIAL 65536

#define LINEADDRCAPFLAGS_PICKUPCALLWAIT 4194304

#define LINEADDRCAPFLAGS_PICKUPGROUPID 2

#define LINEADDRCAPFLAGS_PREDICTIVEDIALER 8388608

#define LINEADDRCAPFLAGS_QUEUE 16777216

#define LINEADDRCAPFLAGS_ROUTEPOINT 33554432

#define LINEADDRCAPFLAGS_SECURE 4

#define LINEADDRCAPFLAGS_SETCALLINGID 536870912

#define LINEADDRCAPFLAGS_SETUPCONFNULL 512

#define LINEADDRCAPFLAGS_TRANSFERHELD 4096

#define LINEADDRCAPFLAGS_TRANSFERMAKE 8192

#define LINEADDRESSMODE_ADDRESSID 1

#define LINEADDRESSMODE_DIALABLEADDR 2

#define LINEADDRESSSHARING_BRIDGEDEXCL 2

#define LINEADDRESSSHARING_BRIDGEDNEW 4

#define LINEADDRESSSHARING_BRIDGEDSHARED 8

#define LINEADDRESSSHARING_MONITORED 16

#define LINEADDRESSSHARING_PRIVATE 1

#define LINEADDRESSSTATE_CAPSCHANGE 256

#define LINEADDRESSSTATE_DEVSPECIFIC 2

#define LINEADDRESSSTATE_FORWARD 64

#define LINEADDRESSSTATE_INUSEMANY 16

#define LINEADDRESSSTATE_INUSEONE 8

#define LINEADDRESSSTATE_INUSEZERO 4

#define LINEADDRESSSTATE_NUMCALLS 32

#define LINEADDRESSSTATE_OTHER 1

#define LINEADDRESSSTATE_TERMINALS 128

#define LINEADDRFEATURE_FORWARD 1

#define LINEADDRFEATURE_FORWARDDND 8192

#define LINEADDRFEATURE_FORWARDFWD 4096

#define LINEADDRFEATURE_MAKECALL 2

#define LINEADDRFEATURE_PICKUP 4

#define LINEADDRFEATURE_PICKUPDIRECT 1024

#define LINEADDRFEATURE_PICKUPGROUP 512

#define LINEADDRFEATURE_PICKUPHELD 256

#define LINEADDRFEATURE_PICKUPWAITING 2048

#define LINEADDRFEATURE_SETMEDIACONTROL 8

#define LINEADDRFEATURE_SETTERMINAL 16

#define LINEADDRFEATURE_SETUPCONF 32

#define LINEADDRFEATURE_UNCOMPLETECALL 64

#define LINEADDRFEATURE_UNPARK 128

#define LINEAGENTFEATURE_AGENTSPECIFIC 8

#define LINEAGENTFEATURE_GETAGENTACTIVITYLIST 16

#define LINEAGENTFEATURE_GETAGENTGROUP 32

#define LINEAGENTFEATURE_SETAGENTACTIVITY 4

#define LINEAGENTFEATURE_SETAGENTGROUP 1

#define LINEAGENTFEATURE_SETAGENTSTATE 2

#define LINEAGENTSESSIONSTATE_BUSYONCALL 4

#define LINEAGENTSESSIONSTATE_BUSYWRAPUP 8

#define LINEAGENTSESSIONSTATE_ENDED 16

#define LINEAGENTSESSIONSTATE_NOTREADY 1

#define LINEAGENTSESSIONSTATE_READY 2

#define LINEAGENTSESSIONSTATE_RELEASED 32

#define LINEAGENTSESSIONSTATUS_NEWSESSION 1

#define LINEAGENTSESSIONSTATUS_STATE 2

#define LINEAGENTSESSIONSTATUS_UPDATEINFO 4

#define LINEAGENTSTATE_BUSYACD 8

#define LINEAGENTSTATE_BUSYINCOMING 16

#define LINEAGENTSTATE_BUSYOTHER 64

#define LINEAGENTSTATE_BUSYOUTBOUND 32

#define LINEAGENTSTATE_LOGGEDOFF 1

#define LINEAGENTSTATE_NOTREADY 2

#define LINEAGENTSTATE_READY 4

#define LINEAGENTSTATE_UNAVAIL 512

#define LINEAGENTSTATE_UNKNOWN 256

#define LINEAGENTSTATE_WORKINGAFTERCALL 128

#define LINEAGENTSTATEEX_BUSYACD 4

#define LINEAGENTSTATEEX_BUSYINCOMING 8

#define LINEAGENTSTATEEX_BUSYOUTGOING 16

#define LINEAGENTSTATEEX_NOTREADY 1

#define LINEAGENTSTATEEX_READY 2

#define LINEAGENTSTATEEX_RELEASED 64

#define LINEAGENTSTATEEX_UNKNOWN 32

#define LINEAGENTSTATUS_ACTIVITY 8

#define LINEAGENTSTATUS_ACTIVITYLIST 16

#define LINEAGENTSTATUS_CAPSCHANGE 64

#define LINEAGENTSTATUS_GROUP 1

#define LINEAGENTSTATUS_GROUPLIST 32

#define LINEAGENTSTATUS_NEXTSTATE 4

#define LINEAGENTSTATUS_STATE 2

#define LINEAGENTSTATUS_VALIDNEXTSTATES 256

#define LINEAGENTSTATUS_VALIDSTATES 128

#define LINEAGENTSTATUSEX_NEWAGENT 1

#define LINEAGENTSTATUSEX_STATE 2

#define LINEAGENTSTATUSEX_UPDATEINFO 4

#define LINEANSWERMODE_DROP 2

#define LINEANSWERMODE_HOLD 4

#define LINEANSWERMODE_NONE 1

#define LINEBEARERMODE_ALTSPEECHDATA 16

#define LINEBEARERMODE_DATA 8

#define LINEBEARERMODE_MULTIUSE 4

#define LINEBEARERMODE_NONCALLSIGNALING 32

#define LINEBEARERMODE_PASSTHROUGH 64

#define LINEBEARERMODE_RESTRICTEDDATA 128

#define LINEBEARERMODE_SPEECH 2

#define LINEBEARERMODE_VOICE 1

#define LINEBUSYMODE_STATION 1

#define LINEBUSYMODE_TRUNK 2

#define LINEBUSYMODE_UNAVAIL 8

#define LINEBUSYMODE_UNKNOWN 4

#define LINECALLCOMPLCOND_BUSY 1

#define LINECALLCOMPLCOND_NOANSWER 2

#define LINECALLCOMPLMODE_CALLBACK 2

#define LINECALLCOMPLMODE_CAMPON 1

#define LINECALLCOMPLMODE_INTRUDE 4

#define LINECALLCOMPLMODE_MESSAGE 8

#define LINECALLFEATURE2_COMPLCALLBACK 8

#define LINECALLFEATURE2_COMPLCAMPON 4

#define LINECALLFEATURE2_COMPLINTRUDE 16

#define LINECALLFEATURE2_COMPLMESSAGE 32

#define LINECALLFEATURE2_NOHOLDCONFERENCE 1

#define LINECALLFEATURE2_ONESTEPTRANSFER 2

#define LINECALLFEATURE2_PARKDIRECT 256

#define LINECALLFEATURE2_PARKNONDIRECT 512

#define LINECALLFEATURE2_TRANSFERCONF 128

#define LINECALLFEATURE2_TRANSFERNORM 64

#define LINECALLFEATURE_ACCEPT 1

#define LINECALLFEATURE_ADDTOCONF 2

#define LINECALLFEATURE_ANSWER 4

#define LINECALLFEATURE_BLINDTRANSFER 8

#define LINECALLFEATURE_COMPLETECALL 16

#define LINECALLFEATURE_COMPLETETRANSF 32

#define LINECALLFEATURE_DIAL 64

#define LINECALLFEATURE_DROP 128

#define LINECALLFEATURE_GATHERDIGITS 256

#define LINECALLFEATURE_GENERATEDIGITS 512

#define LINECALLFEATURE_GENERATETONE 1024

#define LINECALLFEATURE_HOLD 2048

#define LINECALLFEATURE_MONITORDIGITS 4096

#define LINECALLFEATURE_MONITORMEDIA 8192

#define LINECALLFEATURE_MONITORTONES 16384

#define LINECALLFEATURE_PARK 32768

#define LINECALLFEATURE_PREPAREADDCONF 65536

#define LINECALLFEATURE_REDIRECT 131072

#define LINECALLFEATURE_RELEASEUSERUSERINFO 268435456

#define LINECALLFEATURE_REMOVEFROMCONF 262144

#define LINECALLFEATURE_SECURECALL 524288

#define LINECALLFEATURE_SENDUSERUSER 1048576

#define LINECALLFEATURE_SETCALLDATA 2147483648

#define LINECALLFEATURE_SETCALLPARAMS 2097152

#define LINECALLFEATURE_SETMEDIACONTROL 4194304

#define LINECALLFEATURE_SETQOS 1073741824

#define LINECALLFEATURE_SETTERMINAL 8388608

#define LINECALLFEATURE_SETTREATMENT 536870912

#define LINECALLFEATURE_SETUPCONF 16777216

#define LINECALLFEATURE_SETUPTRANSFER 33554432

#define LINECALLFEATURE_SWAPHOLD 67108864

#define LINECALLFEATURE_UNHOLD 134217728

#define LINECALLINFOSTATE_APPSPECIFIC 32

#define LINECALLINFOSTATE_BEARERMODE 4

#define LINECALLINFOSTATE_CALLDATA 1073741824

#define LINECALLINFOSTATE_CALLEDID 65536

#define LINECALLINFOSTATE_CALLERID 32768

#define LINECALLINFOSTATE_CALLID 64

#define LINECALLINFOSTATE_CHARGINGINFO 16777216

#define LINECALLINFOSTATE_COMPLETIONID 1024

#define LINECALLINFOSTATE_CONNECTEDID 131072

#define LINECALLINFOSTATE_DEVSPECIFIC 2

#define LINECALLINFOSTATE_DIALPARAMS 67108864

#define LINECALLINFOSTATE_DISPLAY 1048576

#define LINECALLINFOSTATE_HIGHLEVELCOMP 4194304

#define LINECALLINFOSTATE_LOWLEVELCOMP 8388608

#define LINECALLINFOSTATE_MEDIAMODE 16

#define LINECALLINFOSTATE_MONITORMODES 134217728

#define LINECALLINFOSTATE_NUMMONITORS 8192

#define LINECALLINFOSTATE_NUMOWNERDECR 4096

#define LINECALLINFOSTATE_NUMOWNERINCR 2048

#define LINECALLINFOSTATE_ORIGIN 256

#define LINECALLINFOSTATE_OTHER 1

#define LINECALLINFOSTATE_QOS 536870912

#define LINECALLINFOSTATE_RATE 8

#define LINECALLINFOSTATE_REASON 512

#define LINECALLINFOSTATE_REDIRECTINGID 524288

#define LINECALLINFOSTATE_REDIRECTIONID 262144

#define LINECALLINFOSTATE_RELATEDCALLID 128

#define LINECALLINFOSTATE_TERMINAL 33554432

#define LINECALLINFOSTATE_TREATMENT 268435456

#define LINECALLINFOSTATE_TRUNK 16384

#define LINECALLINFOSTATE_USERUSERINFO 2097152

#define LINECALLORIGIN_CONFERENCE 64

#define LINECALLORIGIN_EXTERNAL 4

#define LINECALLORIGIN_INBOUND 128

#define LINECALLORIGIN_INTERNAL 2

#define LINECALLORIGIN_OUTBOUND 1

#define LINECALLORIGIN_UNAVAIL 32

#define LINECALLORIGIN_UNKNOWN 16

#define LINECALLPARAMFLAGS_BLOCKID 4

#define LINECALLPARAMFLAGS_DESTOFFHOOK 16

#define LINECALLPARAMFLAGS_IDLE 2

#define LINECALLPARAMFLAGS_NOHOLDCONFERENCE 32

#define LINECALLPARAMFLAGS_ONESTEPTRANSFER 128

#define LINECALLPARAMFLAGS_ORIGOFFHOOK 8

#define LINECALLPARAMFLAGS_PREDICTIVEDIAL 64

#define LINECALLPARAMFLAGS_SECURE 1

#define LINECALLPARTYID_ADDRESS 8

#define LINECALLPARTYID_BLOCKED 1

#define LINECALLPARTYID_NAME 4

#define LINECALLPARTYID_OUTOFAREA 2

#define LINECALLPARTYID_PARTIAL 16

#define LINECALLPARTYID_UNAVAIL 64

#define LINECALLPARTYID_UNKNOWN 32

#define LINECALLPRIVILEGE_MONITOR 2

#define LINECALLPRIVILEGE_NONE 1

#define LINECALLPRIVILEGE_OWNER 4

#define LINECALLREASON_CALLCOMPLETION 128

#define LINECALLREASON_CAMPEDON 16384

#define LINECALLREASON_DIRECT 1

#define LINECALLREASON_FWDBUSY 2

#define LINECALLREASON_FWDNOANSWER 4

#define LINECALLREASON_FWDUNCOND 8

#define LINECALLREASON_INTRUDE 4096

#define LINECALLREASON_PARKED 8192

#define LINECALLREASON_PICKUP 16

#define LINECALLREASON_REDIRECT 64

#define LINECALLREASON_REMINDER 512

#define LINECALLREASON_ROUTEREQUEST 32768

#define LINECALLREASON_TRANSFER 256

#define LINECALLREASON_UNAVAIL 2048

#define LINECALLREASON_UNKNOWN 1024

#define LINECALLREASON_UNPARK 32

#define LINECALLSELECT_ADDRESS 2

#define LINECALLSELECT_CALL 4

#define LINECALLSELECT_DEVICEID 8

#define LINECALLSELECT_LINE 1

#define LINECALLSTATE_ACCEPTED 4

#define LINECALLSTATE_BUSY 64

#define LINECALLSTATE_CONFERENCED 2048

#define LINECALLSTATE_CONNECTED 256

#define LINECALLSTATE_DIALING 16

#define LINECALLSTATE_DIALTONE 8

#define LINECALLSTATE_DISCONNECTED 16384

#define LINECALLSTATE_IDLE 1

#define LINECALLSTATE_OFFERING 2

#define LINECALLSTATE_ONHOLD 1024

#define LINECALLSTATE_ONHOLDPENDCONF 4096

#define LINECALLSTATE_ONHOLDPENDTRANSFER 8192

#define LINECALLSTATE_PROCEEDING 512

#define LINECALLSTATE_RINGBACK 32

#define LINECALLSTATE_SPECIALINFO 128

#define LINECALLSTATE_UNKNOWN 32768

#define LINECALLTREATMENT_BUSY 3

#define LINECALLTREATMENT_MUSIC 4

#define LINECALLTREATMENT_RINGBACK 2

#define LINECALLTREATMENT_SILENCE 1

#define LINECARDOPTION_HIDDEN 2

#define LINECARDOPTION_PREDEFINED 1

#define LINECONNECTEDMODE_ACTIVE 1

#define LINECONNECTEDMODE_ACTIVEHELD 4

#define LINECONNECTEDMODE_CONFIRMED 16

#define LINECONNECTEDMODE_INACTIVE 2

#define LINECONNECTEDMODE_INACTIVEHELD 8

#define LINEDEVCAPFLAGS_CLOSEDROP 32

#define LINEDEVCAPFLAGS_CROSSADDRCONF 1

#define LINEDEVCAPFLAGS_DIALBILLING 64

#define LINEDEVCAPFLAGS_DIALDIALTONE 256

#define LINEDEVCAPFLAGS_DIALQUIET 128

#define LINEDEVCAPFLAGS_HIGHLEVCOMP 2

#define LINEDEVCAPFLAGS_LOCAL 8192

#define LINEDEVCAPFLAGS_LOWLEVCOMP 4

#define LINEDEVCAPFLAGS_MEDIACONTROL 8

#define LINEDEVCAPFLAGS_MULTIPLEADDR 16

#define LINEDEVSTATE_BATTERY 32768

#define LINEDEVSTATE_CAPSCHANGE 1048576

#define LINEDEVSTATE_CLOSE 1024

#define LINEDEVSTATE_COMPLCANCEL 8388608

#define LINEDEVSTATE_CONFIGCHANGE 2097152

#define LINEDEVSTATE_CONNECTED 4

#define LINEDEVSTATE_DEVSPECIFIC 131072

#define LINEDEVSTATE_DISCONNECTED 8

#define LINEDEVSTATE_INSERVICE 64

#define LINEDEVSTATE_LOCK 524288

#define LINEDEVSTATE_MAINTENANCE 256

#define LINEDEVSTATE_MSGWAITOFF 32

#define LINEDEVSTATE_MSGWAITON 16

#define LINEDEVSTATE_NUMCALLS 2048

#define LINEDEVSTATE_NUMCOMPLETIONS 4096

#define LINEDEVSTATE_OPEN 512

#define LINEDEVSTATE_OTHER 1

#define LINEDEVSTATE_OUTOFSERVICE 128

#define LINEDEVSTATE_REINIT 262144

#define LINEDEVSTATE_REMOVED 16777216

#define LINEDEVSTATE_RINGING 2

#define LINEDEVSTATE_ROAMMODE 16384

#define LINEDEVSTATE_SIGNAL 65536

#define LINEDEVSTATE_TERMINALS 8192

#define LINEDEVSTATE_TRANSLATECHANGE 4194304

#define LINEDEVSTATUSFLAGS_CONNECTED 1

#define LINEDEVSTATUSFLAGS_INSERVICE 4

#define LINEDEVSTATUSFLAGS_LOCKED 8

#define LINEDEVSTATUSFLAGS_MSGWAIT 2

#define LINEDIALTONEMODE_EXTERNAL 8

#define LINEDIALTONEMODE_INTERNAL 4

#define LINEDIALTONEMODE_NORMAL 1

#define LINEDIALTONEMODE_SPECIAL 2

#define LINEDIALTONEMODE_UNAVAIL 32

#define LINEDIALTONEMODE_UNKNOWN 16

#define LINEDIGITMODE_DTMF 2

#define LINEDIGITMODE_DTMFEND 4

#define LINEDIGITMODE_PULSE 1

#define LINEDISCONNECTMODE_BADADDRESS 128

#define LINEDISCONNECTMODE_BLOCKED 131072

#define LINEDISCONNECTMODE_BUSY 32

#define LINEDISCONNECTMODE_CANCELLED 524288

#define LINEDISCONNECTMODE_CONGESTION 512

#define LINEDISCONNECTMODE_DESTINATIONBARRED 1048576

#define LINEDISCONNECTMODE_DONOTDISTURB 262144

#define LINEDISCONNECTMODE_FDNRESTRICT 2097152

#define LINEDISCONNECTMODE_FORWARDED 16

#define LINEDISCONNECTMODE_INCOMPATIBLE 1024

#define LINEDISCONNECTMODE_NOANSWER 64

#define LINEDISCONNECTMODE_NODIALTONE 4096

#define LINEDISCONNECTMODE_NORMAL 1

#define LINEDISCONNECTMODE_NUMBERCHANGED 8192

#define LINEDISCONNECTMODE_OUTOFORDER 16384

#define LINEDISCONNECTMODE_PICKUP 8

#define LINEDISCONNECTMODE_QOSUNAVAIL 65536

#define LINEDISCONNECTMODE_REJECT 4

#define LINEDISCONNECTMODE_TEMPFAILURE 32768

#define LINEDISCONNECTMODE_UNAVAIL 2048

#define LINEDISCONNECTMODE_UNKNOWN 2

#define LINEDISCONNECTMODE_UNREACHABLE 256

#define LINEERR_ADDRESSBLOCKED 2147483731

#define LINEERR_ALLOCATED 2147483649

#define LINEERR_BADDEVICEID 2147483650

#define LINEERR_BEARERMODEUNAVAIL 2147483651

#define LINEERR_BILLINGREJECTED 2147483732

#define LINEERR_CALLUNAVAIL 2147483653

#define LINEERR_COMPLETIONOVERRUN 2147483654

#define LINEERR_CONFERENCEFULL 2147483655

#define LINEERR_DIALBILLING 2147483656

#define LINEERR_DIALDIALTONE 2147483657

#define LINEERR_DIALPROMPT 2147483658

#define LINEERR_DIALQUIET 2147483659

#define LINEERR_DIALVOICEDETECT 2147483740

#define LINEERR_DISCONNECTED 2147483744

#define LINEERR_INCOMPATIBLEAPIVERSION 2147483660

#define LINEERR_INCOMPATIBLEEXTVERSION 2147483661

#define LINEERR_INIFILECORRUPT 2147483662

#define LINEERR_INUSE 2147483663

#define LINEERR_INVALADDRESS 2147483664

#define LINEERR_INVALADDRESSID 2147483665

#define LINEERR_INVALADDRESSMODE 2147483666

#define LINEERR_INVALADDRESSSTATE 2147483667

#define LINEERR_INVALAGENTACTIVITY 2147483739

#define LINEERR_INVALAGENTGROUP 2147483736

#define LINEERR_INVALAGENTID 2147483735

#define LINEERR_INVALAGENTSESSIONSTATE 2147483743

#define LINEERR_INVALAGENTSTATE 2147483738

#define LINEERR_INVALAPPHANDLE 2147483668

#define LINEERR_INVALAPPNAME 2147483669

#define LINEERR_INVALBEARERMODE 2147483670

#define LINEERR_INVALCALLCOMPLMODE 2147483671

#define LINEERR_INVALCALLHANDLE 2147483672

#define LINEERR_INVALCALLPARAMS 2147483673

#define LINEERR_INVALCALLPRIVILEGE 2147483674

#define LINEERR_INVALCALLSELECT 2147483675

#define LINEERR_INVALCALLSTATE 2147483676

#define LINEERR_INVALCALLSTATELIST 2147483677

#define LINEERR_INVALCARD 2147483678

#define LINEERR_INVALCOMPLETIONID 2147483679

#define LINEERR_INVALCONFCALLHANDLE 2147483680

#define LINEERR_INVALCONSULTCALLHANDLE 2147483681

#define LINEERR_INVALCOUNTRYCODE 2147483682

#define LINEERR_INVALDEVICECLASS 2147483683

#define LINEERR_INVALDEVICEHANDLE 2147483684

#define LINEERR_INVALDIALPARAMS 2147483685

#define LINEERR_INVALDIGITLIST 2147483686

#define LINEERR_INVALDIGITMODE 2147483687

#define LINEERR_INVALDIGITS 2147483688

#define LINEERR_INVALEXTVERSION 2147483689

#define LINEERR_INVALFEATURE 2147483733

#define LINEERR_INVALGROUPID 2147483690

#define LINEERR_INVALLINEHANDLE 2147483691

#define LINEERR_INVALLINESTATE 2147483692

#define LINEERR_INVALLOCATION 2147483693

#define LINEERR_INVALMEDIALIST 2147483694

#define LINEERR_INVALMEDIAMODE 2147483695

#define LINEERR_INVALMESSAGEID 2147483696

#define LINEERR_INVALPARAM 2147483698

#define LINEERR_INVALPARKID 2147483699

#define LINEERR_INVALPARKMODE 2147483700

#define LINEERR_INVALPASSWORD 2147483737

#define LINEERR_INVALPOINTER 2147483701

#define LINEERR_INVALPRIVSELECT 2147483702

#define LINEERR_INVALRATE 2147483703

#define LINEERR_INVALREQUESTMODE 2147483704

#define LINEERR_INVALTERMINALID 2147483705

#define LINEERR_INVALTERMINALMODE 2147483706

#define LINEERR_INVALTIMEOUT 2147483707

#define LINEERR_INVALTONE 2147483708

#define LINEERR_INVALTONELIST 2147483709

#define LINEERR_INVALTONEMODE 2147483710

#define LINEERR_INVALTRANSFERMODE 2147483711

#define LINEERR_LINEMAPPERFAILED 2147483712

#define LINEERR_NOCONFERENCE 2147483713

#define LINEERR_NODEVICE 2147483714

#define LINEERR_NODRIVER 2147483715

#define LINEERR_NOMEM 2147483716

#define LINEERR_NOMULTIPLEINSTANCE 2147483734

#define LINEERR_NOREQUEST 2147483717

#define LINEERR_NOTOWNER 2147483718

#define LINEERR_NOTREGISTERED 2147483719

#define LINEERR_OPERATIONFAILED 2147483720

#define LINEERR_OPERATIONUNAVAIL 2147483721

#define LINEERR_RATEUNAVAIL 2147483722

#define LINEERR_REINIT 2147483730

#define LINEERR_REQUESTOVERRUN 2147483724

#define LINEERR_RESOURCEUNAVAIL 2147483723

#define LINEERR_SERVICE_NOT_RUNNING 2147483745

#define LINEERR_STRUCTURETOOSMALL 2147483725

#define LINEERR_TARGETNOTFOUND 2147483726

#define LINEERR_TARGETSELF 2147483727

#define LINEERR_UNINITIALIZED 2147483728

#define LINEERR_USERCANCELLED 2147483741

#define LINEERR_USERUSERINFOTOOBIG 2147483729

#define LINEFEATURE_DEVSPECIFIC 1

#define LINEFEATURE_DEVSPECIFICFEAT 2

#define LINEFEATURE_FORWARD 4

#define LINEFEATURE_FORWARDDND 256

#define LINEFEATURE_FORWARDFWD 128

#define LINEFEATURE_MAKECALL 8

#define LINEFEATURE_SETDEVSTATUS 64

#define LINEFEATURE_SETMEDIACONTROL 16

#define LINEFEATURE_SETTERMINAL 32

#define LINEFORWARDMODE_BUSY 16

#define LINEFORWARDMODE_BUSYEXTERNAL 64

#define LINEFORWARDMODE_BUSYINTERNAL 32

#define LINEFORWARDMODE_BUSYNA 4096

#define LINEFORWARDMODE_BUSYNAEXTERNAL 16384

#define LINEFORWARDMODE_BUSYNAINTERNAL 8192

#define LINEFORWARDMODE_BUSYNASPECIFIC 32768

#define LINEFORWARDMODE_BUSYSPECIFIC 128

#define LINEFORWARDMODE_NOANSW 256

#define LINEFORWARDMODE_NOANSWEXTERNAL 1024

#define LINEFORWARDMODE_NOANSWINTERNAL 512

#define LINEFORWARDMODE_NOANSWSPECIFIC 2048

#define LINEFORWARDMODE_UNAVAIL 131072

#define LINEFORWARDMODE_UNCOND 1

#define LINEFORWARDMODE_UNCONDEXTERNAL 4

#define LINEFORWARDMODE_UNCONDINTERNAL 2

#define LINEFORWARDMODE_UNCONDSPECIFIC 8

#define LINEFORWARDMODE_UNKNOWN 65536

#define LINEGATHERTERM_BUFFERFULL 1

#define LINEGATHERTERM_CANCEL 16

#define LINEGATHERTERM_FIRSTTIMEOUT 4

#define LINEGATHERTERM_INTERTIMEOUT 8

#define LINEGATHERTERM_TERMDIGIT 2

#define LINEGENERATETERM_CANCEL 2

#define LINEGENERATETERM_DONE 1

#define LINEGROUPSTATUS_GROUPREMOVED 2

#define LINEGROUPSTATUS_NEWGROUP 1

#define LINEINITIALIZEEXOPTION_USECOMPLETIONPORT 3

#define LINEINITIALIZEEXOPTION_USEEVENT 2

#define LINEINITIALIZEEXOPTION_USEHIDDENWINDOW 1

#define LINELOCATIONOPTION_PULSEDIAL 1

#define LINEMAPPER 4294967295

#define LINEMEDIACONTROL_NONE 1

#define LINEMEDIACONTROL_PAUSE 8

#define LINEMEDIACONTROL_RATEDOWN 64

#define LINEMEDIACONTROL_RATENORMAL 128

#define LINEMEDIACONTROL_RATEUP 32

#define LINEMEDIACONTROL_RESET 4

#define LINEMEDIACONTROL_RESUME 16

#define LINEMEDIACONTROL_START 2

#define LINEMEDIACONTROL_VOLUMEDOWN 512

#define LINEMEDIACONTROL_VOLUMENORMAL 1024

#define LINEMEDIACONTROL_VOLUMEUP 256

#define LINEMEDIAMODE_ADSI 8192

#define LINEMEDIAMODE_AUTOMATEDVOICE 8

#define LINEMEDIAMODE_DATAMODEM 16

#define LINEMEDIAMODE_DIGITALDATA 256

#define LINEMEDIAMODE_G3FAX 32

#define LINEMEDIAMODE_G4FAX 128

#define LINEMEDIAMODE_INTERACTIVEVOICE 4

#define LINEMEDIAMODE_MIXED 4096

#define LINEMEDIAMODE_TDD 64

#define LINEMEDIAMODE_TELETEX 512

#define LINEMEDIAMODE_TELEX 2048

#define LINEMEDIAMODE_UNKNOWN 2

#define LINEMEDIAMODE_VIDEO 32768

#define LINEMEDIAMODE_VIDEOTEX 1024

#define LINEMEDIAMODE_VOICEVIEW 16384

#define LINEOFFERINGMODE_ACTIVE 1

#define LINEOFFERINGMODE_INACTIVE 2

#define LINEOPENOPTION_PROXY 1073741824

#define LINEOPENOPTION_SINGLEADDRESS 2147483648

#define LINEPARKMODE_DIRECTED 1

#define LINEPARKMODE_NONDIRECTED 2

#define LINEPROXYREQUEST_AGENTSPECIFIC 6

#define LINEPROXYREQUEST_CREATEAGENT 9

#define LINEPROXYREQUEST_CREATEAGENTSESSION 12

#define LINEPROXYREQUEST_GETAGENTACTIVITYLIST 7

#define LINEPROXYREQUEST_GETAGENTCAPS 4

#define LINEPROXYREQUEST_GETAGENTGROUPLIST 8

#define LINEPROXYREQUEST_GETAGENTINFO 11

#define LINEPROXYREQUEST_GETAGENTSESSIONINFO 15

#define LINEPROXYREQUEST_GETAGENTSESSIONLIST 13

#define LINEPROXYREQUEST_GETAGENTSTATUS 5

#define LINEPROXYREQUEST_GETGROUPLIST 19

#define LINEPROXYREQUEST_GETQUEUEINFO 18

#define LINEPROXYREQUEST_GETQUEUELIST 16

#define LINEPROXYREQUEST_SETAGENTACTIVITY 3

#define LINEPROXYREQUEST_SETAGENTGROUP 1

#define LINEPROXYREQUEST_SETAGENTMEASUREMENTPERIOD 10

#define LINEPROXYREQUEST_SETAGENTSESSIONSTATE 14

#define LINEPROXYREQUEST_SETAGENTSTATE 2

#define LINEPROXYREQUEST_SETAGENTSTATEEX 20

#define LINEPROXYREQUEST_SETQUEUEMEASUREMENTPERIOD 17

#define LINEPROXYSTATUS_ALLOPENFORACD 4

#define LINEPROXYSTATUS_CLOSE 2

#define LINEPROXYSTATUS_OPEN 1

#define LINEQUEUESTATUS_NEWQUEUE 2

#define LINEQUEUESTATUS_QUEUEREMOVED 4

#define LINEQUEUESTATUS_UPDATEINFO 1

#define LINEREMOVEFROMCONF_ANY 3

#define LINEREMOVEFROMCONF_LAST 2

#define LINEREMOVEFROMCONF_NONE 1

#define LINEREQUESTMODE_DROP 4

#define LINEREQUESTMODE_MAKECALL 1

#define LINEREQUESTMODE_MEDIACALL 2

#define LINEROAMMODE_HOME 4

#define LINEROAMMODE_ROAMA 8

#define LINEROAMMODE_ROAMB 16

#define LINEROAMMODE_UNAVAIL 2

#define LINEROAMMODE_UNKNOWN 1

#define LINESPECIALINFO_CUSTIRREG 2

#define LINESPECIALINFO_NOCIRCUIT 1

#define LINESPECIALINFO_REORDER 4

#define LINESPECIALINFO_UNAVAIL 16

#define LINESPECIALINFO_UNKNOWN 8

#define LINETERMDEV_HEADSET 2

#define LINETERMDEV_PHONE 1

#define LINETERMDEV_SPEAKER 4

#define LINETERMMODE_BUTTONS 1

#define LINETERMMODE_DISPLAY 4

#define LINETERMMODE_HOOKSWITCH 16

#define LINETERMMODE_LAMPS 2

#define LINETERMMODE_MEDIABIDIRECT 128

#define LINETERMMODE_MEDIAFROMLINE 64

#define LINETERMMODE_MEDIATOLINE 32

#define LINETERMMODE_RINGER 8

#define LINETERMSHARING_PRIVATE 1

#define LINETERMSHARING_SHAREDCONF 4

#define LINETERMSHARING_SHAREDEXCL 2

#define LINETOLLLISTOPTION_ADD 1

#define LINETOLLLISTOPTION_REMOVE 2

#define LINETONEMODE_BEEP 8

#define LINETONEMODE_BILLING 16

#define LINETONEMODE_BUSY 4

#define LINETONEMODE_CUSTOM 1

#define LINETONEMODE_RINGBACK 2

#define LINETRANSFERMODE_CONFERENCE 2

#define LINETRANSFERMODE_TRANSFER 1

#define LINETRANSLATEOPTION_CANCELCALLWAITING 2

#define LINETRANSLATEOPTION_CARDOVERRIDE 1

#define LINETRANSLATEOPTION_FORCELD 8

#define LINETRANSLATEOPTION_FORCELOCAL 4

#define LINETRANSLATERESULT_CANONICAL 1

#define LINETRANSLATERESULT_DIALBILLING 64

#define LINETRANSLATERESULT_DIALDIALTONE 256

#define LINETRANSLATERESULT_DIALPROMPT 512

#define LINETRANSLATERESULT_DIALQUIET 128

#define LINETRANSLATERESULT_INTERNATIONAL 2

#define LINETRANSLATERESULT_INTOLLLIST 16

#define LINETRANSLATERESULT_LOCAL 8

#define LINETRANSLATERESULT_LONGDISTANCE 4

#define LINETRANSLATERESULT_NOTINTOLLLIST 32

#define LINETRANSLATERESULT_VOICEDETECT 1024

#define PHONE_BUTTON 14

#define PHONE_CLOSE 15

#define PHONE_CREATE 20

#define PHONE_DEVSPECIFIC 16

#define PHONE_REMOVE 26

#define PHONE_REPLY 17

#define PHONE_STATE 18

#define PHONEBUTTONFUNCTION_ABBREVDIAL 11

#define PHONEBUTTONFUNCTION_BRIDGEDAPP 28

#define PHONEBUTTONFUNCTION_BUSY 29

#define PHONEBUTTONFUNCTION_CALLAPP 30

#define PHONEBUTTONFUNCTION_CALLID 34

#define PHONEBUTTONFUNCTION_CAMPON 43

#define PHONEBUTTONFUNCTION_CONFERENCE 1

#define PHONEBUTTONFUNCTION_CONNECT 7

#define PHONEBUTTONFUNCTION_COVER 33

#define PHONEBUTTONFUNCTION_DATAOFF 25

#define PHONEBUTTONFUNCTION_DATAON 24

#define PHONEBUTTONFUNCTION_DATETIME 31

#define PHONEBUTTONFUNCTION_DIRECTORY 32

#define PHONEBUTTONFUNCTION_DISCONNECT 6

#define PHONEBUTTONFUNCTION_DONOTDISTURB 26

#define PHONEBUTTONFUNCTION_DROP 3

#define PHONEBUTTONFUNCTION_FLASH 23

#define PHONEBUTTONFUNCTION_FORWARD 12

#define PHONEBUTTONFUNCTION_HOLD 4

#define PHONEBUTTONFUNCTION_INTERCOM 27

#define PHONEBUTTONFUNCTION_LASTNUM 35

#define PHONEBUTTONFUNCTION_MSGINDICATOR 38

#define PHONEBUTTONFUNCTION_MSGWAITOFF 9

#define PHONEBUTTONFUNCTION_MSGWAITON 8

#define PHONEBUTTONFUNCTION_MUTE 18

#define PHONEBUTTONFUNCTION_NIGHTSRV 36

#define PHONEBUTTONFUNCTION_NONE 46

#define PHONEBUTTONFUNCTION_PARK 15

#define PHONEBUTTONFUNCTION_PICKUP 13

#define PHONEBUTTONFUNCTION_QUEUECALL 45

#define PHONEBUTTONFUNCTION_RECALL 5

#define PHONEBUTTONFUNCTION_REDIRECT 17

#define PHONEBUTTONFUNCTION_REJECT 16

#define PHONEBUTTONFUNCTION_REPDIAL 39

#define PHONEBUTTONFUNCTION_RINGAGAIN 14

#define PHONEBUTTONFUNCTION_SAVEREPEAT 44

#define PHONEBUTTONFUNCTION_SELECTRING 10

#define PHONEBUTTONFUNCTION_SENDCALLS 37

#define PHONEBUTTONFUNCTION_SETREPDIAL 40

#define PHONEBUTTONFUNCTION_SPEAKEROFF 22

#define PHONEBUTTONFUNCTION_SPEAKERON 21

#define PHONEBUTTONFUNCTION_STATIONSPEED 42

#define PHONEBUTTONFUNCTION_SYSTEMSPEED 41

#define PHONEBUTTONFUNCTION_TRANSFER 2

#define PHONEBUTTONFUNCTION_UNKNOWN 0

#define PHONEBUTTONFUNCTION_VOLUMEDOWN 20

#define PHONEBUTTONFUNCTION_VOLUMEUP 19

#define PHONEBUTTONMODE_CALL 2

#define PHONEBUTTONMODE_DISPLAY 32

#define PHONEBUTTONMODE_DUMMY 1

#define PHONEBUTTONMODE_FEATURE 4

#define PHONEBUTTONMODE_KEYPAD 8

#define PHONEBUTTONMODE_LOCAL 16

#define PHONEBUTTONSTATE_DOWN 2

#define PHONEBUTTONSTATE_UNAVAIL 8

#define PHONEBUTTONSTATE_UNKNOWN 4

#define PHONEBUTTONSTATE_UP 1

#define PHONEERR_ALLOCATED 2415919105

#define PHONEERR_BADDEVICEID 2415919106

#define PHONEERR_DISCONNECTED 2415919140

#define PHONEERR_INCOMPATIBLEAPIVERSION 2415919107

#define PHONEERR_INCOMPATIBLEEXTVERSION 2415919108

#define PHONEERR_INIFILECORRUPT 2415919109

#define PHONEERR_INUSE 2415919110

#define PHONEERR_INVALAPPHANDLE 2415919111

#define PHONEERR_INVALAPPNAME 2415919112

#define PHONEERR_INVALBUTTONLAMPID 2415919113

#define PHONEERR_INVALBUTTONMODE 2415919114

#define PHONEERR_INVALBUTTONSTATE 2415919115

#define PHONEERR_INVALDATAID 2415919116

#define PHONEERR_INVALDEVICECLASS 2415919117

#define PHONEERR_INVALEXTVERSION 2415919118

#define PHONEERR_INVALHOOKSWITCHDEV 2415919119

#define PHONEERR_INVALHOOKSWITCHMODE 2415919120

#define PHONEERR_INVALLAMPMODE 2415919121

#define PHONEERR_INVALPARAM 2415919122

#define PHONEERR_INVALPHONEHANDLE 2415919123

#define PHONEERR_INVALPHONESTATE 2415919124

#define PHONEERR_INVALPOINTER 2415919125

#define PHONEERR_INVALPRIVILEGE 2415919126

#define PHONEERR_INVALRINGMODE 2415919127

#define PHONEERR_NODEVICE 2415919128

#define PHONEERR_NODRIVER 2415919129

#define PHONEERR_NOMEM 2415919130

#define PHONEERR_NOTOWNER 2415919131

#define PHONEERR_OPERATIONFAILED 2415919132

#define PHONEERR_OPERATIONUNAVAIL 2415919133

#define PHONEERR_REINIT 2415919139

#define PHONEERR_REQUESTOVERRUN 2415919136

#define PHONEERR_RESOURCEUNAVAIL 2415919135

#define PHONEERR_SERVICE_NOT_RUNNING 2415919141

#define PHONEERR_STRUCTURETOOSMALL 2415919137

#define PHONEERR_UNINITIALIZED 2415919138

#define PHONEFEATURE_GETBUTTONINFO 1

#define PHONEFEATURE_GETDATA 2

#define PHONEFEATURE_GETDISPLAY 4

#define PHONEFEATURE_GETGAINHANDSET 8

#define PHONEFEATURE_GETGAINHEADSET 32

#define PHONEFEATURE_GETGAINSPEAKER 16

#define PHONEFEATURE_GETHOOKSWITCHHANDSET 64

#define PHONEFEATURE_GETHOOKSWITCHHEADSET 256

#define PHONEFEATURE_GETHOOKSWITCHSPEAKER 128

#define PHONEFEATURE_GETLAMP 512

#define PHONEFEATURE_GETRING 1024

#define PHONEFEATURE_GETVOLUMEHANDSET 2048

#define PHONEFEATURE_GETVOLUMEHEADSET 8192

#define PHONEFEATURE_GETVOLUMESPEAKER 4096

#define PHONEFEATURE_SETBUTTONINFO 16384

#define PHONEFEATURE_SETDATA 32768

#define PHONEFEATURE_SETDISPLAY 65536

#define PHONEFEATURE_SETGAINHANDSET 131072

#define PHONEFEATURE_SETGAINHEADSET 524288

#define PHONEFEATURE_SETGAINSPEAKER 262144

#define PHONEFEATURE_SETHOOKSWITCHHANDSET 1048576

#define PHONEFEATURE_SETHOOKSWITCHHEADSET 4194304

#define PHONEFEATURE_SETHOOKSWITCHSPEAKER 2097152

#define PHONEFEATURE_SETLAMP 8388608

#define PHONEFEATURE_SETRING 16777216

#define PHONEFEATURE_SETVOLUMEHANDSET 33554432

#define PHONEFEATURE_SETVOLUMEHEADSET 134217728

#define PHONEFEATURE_SETVOLUMESPEAKER 67108864

#define PHONEHOOKSWITCHDEV_HANDSET 1

#define PHONEHOOKSWITCHDEV_HEADSET 4

#define PHONEHOOKSWITCHDEV_SPEAKER 2

#define PHONEHOOKSWITCHMODE_MIC 2

#define PHONEHOOKSWITCHMODE_MICSPEAKER 8

#define PHONEHOOKSWITCHMODE_ONHOOK 1

#define PHONEHOOKSWITCHMODE_SPEAKER 4

#define PHONEHOOKSWITCHMODE_UNKNOWN 16

#define PHONEINITIALIZEEXOPTION_USECOMPLETIONPORT 3

#define PHONEINITIALIZEEXOPTION_USEEVENT 2

#define PHONEINITIALIZEEXOPTION_USEHIDDENWINDOW 1

#define PHONELAMPMODE_BROKENFLUTTER 64

#define PHONELAMPMODE_DUMMY 1

#define PHONELAMPMODE_FLASH 16

#define PHONELAMPMODE_FLUTTER 32

#define PHONELAMPMODE_OFF 2

#define PHONELAMPMODE_STEADY 4

#define PHONELAMPMODE_UNKNOWN 128

#define PHONELAMPMODE_WINK 8

#define PHONEPRIVILEGE_MONITOR 1

#define PHONEPRIVILEGE_OWNER 2

#define PHONESTATE_CAPSCHANGE 4194304

#define PHONESTATE_CONNECTED 2

#define PHONESTATE_DEVSPECIFIC 1048576

#define PHONESTATE_DISCONNECTED 4

#define PHONESTATE_DISPLAY 32

#define PHONESTATE_HANDSETGAIN 2048

#define PHONESTATE_HANDSETHOOKSWITCH 512

#define PHONESTATE_HANDSETVOLUME 1024

#define PHONESTATE_HEADSETGAIN 131072

#define PHONESTATE_HEADSETHOOKSWITCH 32768

#define PHONESTATE_HEADSETVOLUME 65536

#define PHONESTATE_LAMP 64

#define PHONESTATE_MONITORS 16

#define PHONESTATE_OTHER 1

#define PHONESTATE_OWNER 8

#define PHONESTATE_REINIT 2097152

#define PHONESTATE_REMOVED 8388608

#define PHONESTATE_RESUME 524288

#define PHONESTATE_RINGMODE 128

#define PHONESTATE_RINGVOLUME 256

#define PHONESTATE_SPEAKERGAIN 16384

#define PHONESTATE_SPEAKERHOOKSWITCH 4096

#define PHONESTATE_SPEAKERVOLUME 8192

#define PHONESTATE_SUSPEND 262144

#define PHONESTATUSFLAGS_CONNECTED 1

#define PHONESTATUSFLAGS_SUSPENDED 2

#define STRINGFORMAT_ASCII 1

#define STRINGFORMAT_BINARY 4

#define STRINGFORMAT_DBCS 2

#define STRINGFORMAT_UNICODE 3

#define TAPI_CURRENT_VERSION 131074

#define TAPI_REPLY 1123

#define TAPIERR_CONNECTED 0

#define TAPIERR_DESTBUSY -11

#define TAPIERR_DESTNOANSWER -12

#define TAPIERR_DESTUNAVAIL -13

#define TAPIERR_DEVICECLASSUNAVAIL -8

#define TAPIERR_DEVICEIDUNAVAIL -9

#define TAPIERR_DEVICEINUSE -10

#define TAPIERR_DROPPED -1

#define TAPIERR_INVALDESTADDRESS -4

#define TAPIERR_INVALDEVICECLASS -6

#define TAPIERR_INVALDEVICEID -7

#define TAPIERR_INVALPOINTER -18

#define TAPIERR_INVALWINDOWHANDLE -5

#define TAPIERR_MMCWRITELOCKED -20

#define TAPIERR_NOREQUESTRECIPIENT -2

#define TAPIERR_NOTADMIN -19

#define TAPIERR_PROVIDERALREADYINSTALLED -21

#define TAPIERR_REQUESTCANCELLED -17

#define TAPIERR_REQUESTFAILED -16

#define TAPIERR_REQUESTQUEUEFULL -3

#define TAPIERR_SCP_ALREADY_EXISTS -22

#define TAPIERR_SCP_DOES_NOT_EXIST -23

#define TAPIERR_UNKNOWNREQUESTID -15

#define TAPIERR_UNKNOWNWINHANDLE -14

#define TAPIMAXAPPNAMESIZE 40

#define TAPIMAXCALLEDPARTYSIZE 40

#define TAPIMAXCOMMENTSIZE 80

#define TAPIMAXDESTADDRESSSIZE 80

#define TAPIMAXDEVICECLASSSIZE 40

#define TAPIMAXDEVICEIDSIZE 40

typedef struct _struct_8307 _struct_8307, *P_struct_8307;

struct _struct_8307 {
    DWORD dwGroupID1;
    DWORD dwGroupID2;
    DWORD dwGroupID3;
    DWORD dwGroupID4;
};

typedef struct _struct_8349 _struct_8349, *P_struct_8349;

typedef struct lineagentgrouplist_tag lineagentgrouplist_tag, *Plineagentgrouplist_tag;

typedef struct lineagentgrouplist_tag LINEAGENTGROUPLIST;

struct lineagentgrouplist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwListSize;
    DWORD dwListOffset;
};

struct _struct_8349 {
    DWORD dwAddressID;
    LINEAGENTGROUPLIST GroupList;
};

typedef struct _struct_8350 _struct_8350, *P_struct_8350;

struct _struct_8350 {
    DWORD dwAddressID;
    DWORD dwAgentState;
    DWORD dwNextAgentState;
};

typedef struct _struct_8351 _struct_8351, *P_struct_8351;

struct _struct_8351 {
    DWORD dwAddressID;
    DWORD dwActivityID;
};

typedef struct _struct_8352 _struct_8352, *P_struct_8352;

typedef struct lineagentcaps_tag lineagentcaps_tag, *Plineagentcaps_tag;

typedef struct lineagentcaps_tag LINEAGENTCAPS;

struct lineagentcaps_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwAgentHandlerInfoSize;
    DWORD dwAgentHandlerInfoOffset;
    DWORD dwCapsVersion;
    DWORD dwFeatures;
    DWORD dwStates;
    DWORD dwNextStates;
    DWORD dwMaxNumGroupEntries;
    DWORD dwAgentStatusMessages;
    DWORD dwNumAgentExtensionIDs;
    DWORD dwAgentExtensionIDListSize;
    DWORD dwAgentExtensionIDListOffset;
    GUID ProxyGUID;
};

struct _struct_8352 {
    DWORD dwAddressID;
    LINEAGENTCAPS AgentCaps;
};

typedef struct _struct_8353 _struct_8353, *P_struct_8353;

typedef struct lineagentstatus_tag lineagentstatus_tag, *Plineagentstatus_tag;

typedef struct lineagentstatus_tag LINEAGENTSTATUS;

struct lineagentstatus_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwGroupListSize;
    DWORD dwGroupListOffset;
    DWORD dwState;
    DWORD dwNextState;
    DWORD dwActivityID;
    DWORD dwActivitySize;
    DWORD dwActivityOffset;
    DWORD dwAgentFeatures;
    DWORD dwValidStates;
    DWORD dwValidNextStates;
};

struct _struct_8353 {
    DWORD dwAddressID;
    LINEAGENTSTATUS AgentStatus;
};

typedef struct _struct_8354 _struct_8354, *P_struct_8354;

struct _struct_8354 {
    DWORD dwAddressID;
    DWORD dwAgentExtensionIDIndex;
    DWORD dwSize;
    BYTE Params[1];
};

typedef struct _struct_8355 _struct_8355, *P_struct_8355;

typedef struct lineagentactivitylist_tag lineagentactivitylist_tag, *Plineagentactivitylist_tag;

typedef struct lineagentactivitylist_tag LINEAGENTACTIVITYLIST;

struct lineagentactivitylist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwListSize;
    DWORD dwListOffset;
};

struct _struct_8355 {
    DWORD dwAddressID;
    LINEAGENTACTIVITYLIST ActivityList;
};

typedef struct _struct_8356 _struct_8356, *P_struct_8356;

struct _struct_8356 {
    DWORD dwAddressID;
    LINEAGENTGROUPLIST GroupList;
};

typedef struct _struct_8357 _struct_8357, *P_struct_8357;

typedef DWORD HAGENT;

struct _struct_8357 {
    HAGENT hAgent;
    DWORD dwAgentIDSize;
    DWORD dwAgentIDOffset;
    DWORD dwAgentPINSize;
    DWORD dwAgentPINOffset;
};

typedef struct _struct_8358 _struct_8358, *P_struct_8358;

struct _struct_8358 {
    HAGENT hAgent;
    DWORD dwAgentState;
    DWORD dwNextAgentState;
};

typedef struct _struct_8359 _struct_8359, *P_struct_8359;

struct _struct_8359 {
    HAGENT hAgent;
    DWORD dwMeasurementPeriod;
};

typedef struct _struct_8360 _struct_8360, *P_struct_8360;

typedef struct lineagentinfo_tag lineagentinfo_tag, *Plineagentinfo_tag;

typedef struct lineagentinfo_tag LINEAGENTINFO;

struct lineagentinfo_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwAgentState;
    DWORD dwNextAgentState;
    DWORD dwMeasurementPeriod;
    CURRENCY cyOverallCallRate;
    DWORD dwNumberOfACDCalls;
    DWORD dwNumberOfIncomingCalls;
    DWORD dwNumberOfOutgoingCalls;
    DWORD dwTotalACDTalkTime;
    DWORD dwTotalACDCallTime;
    DWORD dwTotalACDWrapUpTime;
};

struct _struct_8360 {
    HAGENT hAgent;
    LINEAGENTINFO AgentInfo;
};

typedef struct _struct_8361 _struct_8361, *P_struct_8361;

typedef DWORD HAGENTSESSION;

struct _struct_8361 {
    HAGENTSESSION hAgentSession;
    DWORD dwAgentPINSize;
    DWORD dwAgentPINOffset;
    HAGENT hAgent;
    GUID GroupID;
    DWORD dwWorkingAddressID;
};

typedef struct _struct_8362 _struct_8362, *P_struct_8362;

typedef struct lineagentsessionlist_tag lineagentsessionlist_tag, *Plineagentsessionlist_tag;

typedef struct lineagentsessionlist_tag LINEAGENTSESSIONLIST;

struct lineagentsessionlist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwListSize;
    DWORD dwListOffset;
};

struct _struct_8362 {
    HAGENT hAgent;
    LINEAGENTSESSIONLIST SessionList;
};

typedef struct _struct_8363 _struct_8363, *P_struct_8363;

typedef struct lineagentsessioninfo_tag lineagentsessioninfo_tag, *Plineagentsessioninfo_tag;

typedef struct lineagentsessioninfo_tag LINEAGENTSESSIONINFO;

struct lineagentsessioninfo_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwAgentSessionState;
    DWORD dwNextAgentSessionState;
    DATE dateSessionStartTime;
    DWORD dwSessionDuration;
    DWORD dwNumberOfCalls;
    DWORD dwTotalTalkTime;
    DWORD dwAverageTalkTime;
    DWORD dwTotalCallTime;
    DWORD dwAverageCallTime;
    DWORD dwTotalWrapUpTime;
    DWORD dwAverageWrapUpTime;
    CURRENCY cyACDCallRate;
    DWORD dwLongestTimeToAnswer;
    DWORD dwAverageTimeToAnswer;
};

struct _struct_8363 {
    HAGENTSESSION hAgentSession;
    LINEAGENTSESSIONINFO SessionInfo;
};

typedef struct _struct_8364 _struct_8364, *P_struct_8364;

struct _struct_8364 {
    HAGENTSESSION hAgentSession;
    DWORD dwAgentSessionState;
    DWORD dwNextAgentSessionState;
};

typedef struct _struct_8365 _struct_8365, *P_struct_8365;

typedef struct linequeuelist_tag linequeuelist_tag, *Plinequeuelist_tag;

typedef struct linequeuelist_tag LINEQUEUELIST;

struct linequeuelist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwListSize;
    DWORD dwListOffset;
};

struct _struct_8365 {
    GUID GroupID;
    LINEQUEUELIST QueueList;
};

typedef struct _struct_8366 _struct_8366, *P_struct_8366;

struct _struct_8366 {
    DWORD dwQueueID;
    DWORD dwMeasurementPeriod;
};

typedef struct _struct_8367 _struct_8367, *P_struct_8367;

typedef struct linequeueinfo_tag linequeueinfo_tag, *Plinequeueinfo_tag;

typedef struct linequeueinfo_tag LINEQUEUEINFO;

struct linequeueinfo_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwMeasurementPeriod;
    DWORD dwTotalCallsQueued;
    DWORD dwCurrentCallsQueued;
    DWORD dwTotalCallsAbandoned;
    DWORD dwTotalCallsFlowedIn;
    DWORD dwTotalCallsFlowedOut;
    DWORD dwLongestEverWaitTime;
    DWORD dwCurrentLongestWaitTime;
    DWORD dwAverageWaitTime;
    DWORD dwFinalDisposition;
};

struct _struct_8367 {
    DWORD dwQueueID;
    LINEQUEUEINFO QueueInfo;
};

typedef struct _struct_8368 _struct_8368, *P_struct_8368;

struct _struct_8368 {
    LINEAGENTGROUPLIST GroupList;
};

typedef union _union_8337 _union_8337, *P_union_8337;

union _union_8337 {
    HANDLE hEvent;
    HANDLE hCompletionPort;
};

typedef union _union_8348 _union_8348, *P_union_8348;

union _union_8348 {
    struct _struct_8349 SetAgentGroup;
    struct _struct_8350 SetAgentState;
    struct _struct_8351 SetAgentActivity;
    struct _struct_8352 GetAgentCaps;
    struct _struct_8353 GetAgentStatus;
    struct _struct_8354 AgentSpecific;
    struct _struct_8355 GetAgentActivityList;
    struct _struct_8356 GetAgentGroupList;
    struct _struct_8357 CreateAgent;
    struct _struct_8358 SetAgentStateEx;
    struct _struct_8359 SetAgentMeasurementPeriod;
    struct _struct_8360 GetAgentInfo;
    struct _struct_8361 CreateAgentSession;
    struct _struct_8362 GetAgentSessionList;
    struct _struct_8363 GetAgentSessionInfo;
    struct _struct_8364 SetAgentSessionState;
    struct _struct_8365 GetQueueList;
    struct _struct_8366 SetQueueMeasurementPeriod;
    struct _struct_8367 GetQueueInfo;
    struct _struct_8368 GetGroupList;
};

typedef union _union_8380 _union_8380, *P_union_8380;

union _union_8380 {
    HANDLE hEvent;
    HANDLE hCompletionPort;
};

typedef DWORD HCALL;

typedef DWORD HLINE;

typedef DWORD HLINEAPP;

typedef DWORD HPHONE;

typedef DWORD HPHONEAPP;

typedef struct lineaddresscaps_tag lineaddresscaps_tag, *Plineaddresscaps_tag;

typedef struct lineaddresscaps_tag LINEADDRESSCAPS;

struct lineaddresscaps_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwLineDeviceID;
    DWORD dwAddressSize;
    DWORD dwAddressOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwAddressSharing;
    DWORD dwAddressStates;
    DWORD dwCallInfoStates;
    DWORD dwCallerIDFlags;
    DWORD dwCalledIDFlags;
    DWORD dwConnectedIDFlags;
    DWORD dwRedirectionIDFlags;
    DWORD dwRedirectingIDFlags;
    DWORD dwCallStates;
    DWORD dwDialToneModes;
    DWORD dwBusyModes;
    DWORD dwSpecialInfo;
    DWORD dwDisconnectModes;
    DWORD dwMaxNumActiveCalls;
    DWORD dwMaxNumOnHoldCalls;
    DWORD dwMaxNumOnHoldPendingCalls;
    DWORD dwMaxNumConference;
    DWORD dwMaxNumTransConf;
    DWORD dwAddrCapFlags;
    DWORD dwCallFeatures;
    DWORD dwRemoveFromConfCaps;
    DWORD dwRemoveFromConfState;
    DWORD dwTransferModes;
    DWORD dwParkModes;
    DWORD dwForwardModes;
    DWORD dwMaxForwardEntries;
    DWORD dwMaxSpecificEntries;
    DWORD dwMinFwdNumRings;
    DWORD dwMaxFwdNumRings;
    DWORD dwMaxCallCompletions;
    DWORD dwCallCompletionConds;
    DWORD dwCallCompletionModes;
    DWORD dwNumCompletionMessages;
    DWORD dwCompletionMsgTextEntrySize;
    DWORD dwCompletionMsgTextSize;
    DWORD dwCompletionMsgTextOffset;
    DWORD dwAddressFeatures;
    DWORD dwPredictiveAutoTransferStates;
    DWORD dwNumCallTreatments;
    DWORD dwCallTreatmentListSize;
    DWORD dwCallTreatmentListOffset;
    DWORD dwDeviceClassesSize;
    DWORD dwDeviceClassesOffset;
    DWORD dwMaxCallDataSize;
    DWORD dwCallFeatures2;
    DWORD dwMaxNoAnswerTimeout;
    DWORD dwConnectedModes;
    DWORD dwOfferingModes;
    DWORD dwAvailableMediaModes;
};

typedef struct lineaddressstatus_tag lineaddressstatus_tag, *Plineaddressstatus_tag;

typedef struct lineaddressstatus_tag LINEADDRESSSTATUS;

struct lineaddressstatus_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumInUse;
    DWORD dwNumActiveCalls;
    DWORD dwNumOnHoldCalls;
    DWORD dwNumOnHoldPendCalls;
    DWORD dwAddressFeatures;
    DWORD dwNumRingsNoAnswer;
    DWORD dwForwardNumEntries;
    DWORD dwForwardSize;
    DWORD dwForwardOffset;
    DWORD dwTerminalModesSize;
    DWORD dwTerminalModesOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
};

typedef struct lineagentactivityentry_tag lineagentactivityentry_tag, *Plineagentactivityentry_tag;

typedef struct lineagentactivityentry_tag LINEAGENTACTIVITYENTRY;

struct lineagentactivityentry_tag {
    DWORD dwID;
    DWORD dwNameSize;
    DWORD dwNameOffset;
};

typedef struct lineagententry_tag lineagententry_tag, *Plineagententry_tag;

typedef struct lineagententry_tag LINEAGENTENTRY;

struct lineagententry_tag {
    HAGENT hAgent;
    DWORD dwNameSize;
    DWORD dwNameOffset;
    DWORD dwIDSize;
    DWORD dwIDOffset;
    DWORD dwPINSize;
    DWORD dwPINOffset;
};

typedef struct lineagentgroupentry_tag lineagentgroupentry_tag, *Plineagentgroupentry_tag;

typedef struct lineagentgroupentry_tag LINEAGENTGROUPENTRY;

struct lineagentgroupentry_tag {
    struct _struct_8307 GroupID;
    DWORD dwNameSize;
    DWORD dwNameOffset;
};

typedef struct lineagentlist_tag lineagentlist_tag, *Plineagentlist_tag;

typedef struct lineagentlist_tag LINEAGENTLIST;

struct lineagentlist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwListSize;
    DWORD dwListOffset;
};

typedef struct lineagentsession_tag lineagentsession_tag, *Plineagentsession_tag;

struct lineagentsession_tag {
    HAGENTSESSION hAgentSession;
    HAGENT hAgent;
    GUID GroupID;
    DWORD dwWorkingAddressID;
};

typedef struct lineagentsession_tag LINEAGENTSESSIONENTRY;

typedef struct lineappinfo_tag lineappinfo_tag, *Plineappinfo_tag;

typedef struct lineappinfo_tag LINEAPPINFO;

struct lineappinfo_tag {
    DWORD dwMachineNameSize;
    DWORD dwMachineNameOffset;
    DWORD dwUserNameSize;
    DWORD dwUserNameOffset;
    DWORD dwModuleFilenameSize;
    DWORD dwModuleFilenameOffset;
    DWORD dwFriendlyNameSize;
    DWORD dwFriendlyNameOffset;
    DWORD dwMediaModes;
    DWORD dwAddressID;
};

typedef void (* LINECALLBACK)(DWORD, DWORD, DWORD_PTR, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef struct linecallinfo_tag linecallinfo_tag, *Plinecallinfo_tag;

typedef struct linecallinfo_tag LINECALLINFO;

typedef struct linedialparams_tag linedialparams_tag, *Plinedialparams_tag;

typedef struct linedialparams_tag LINEDIALPARAMS;

struct linedialparams_tag {
    DWORD dwDialPause;
    DWORD dwDialSpeed;
    DWORD dwDigitDuration;
    DWORD dwWaitForDialtone;
};

struct linecallinfo_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    HLINE hLine;
    DWORD dwLineDeviceID;
    DWORD dwAddressID;
    DWORD dwBearerMode;
    DWORD dwRate;
    DWORD dwMediaMode;
    DWORD dwAppSpecific;
    DWORD dwCallID;
    DWORD dwRelatedCallID;
    DWORD dwCallParamFlags;
    DWORD dwCallStates;
    DWORD dwMonitorDigitModes;
    DWORD dwMonitorMediaModes;
    LINEDIALPARAMS DialParams;
    DWORD dwOrigin;
    DWORD dwReason;
    DWORD dwCompletionID;
    DWORD dwNumOwners;
    DWORD dwNumMonitors;
    DWORD dwCountryCode;
    DWORD dwTrunk;
    DWORD dwCallerIDFlags;
    DWORD dwCallerIDSize;
    DWORD dwCallerIDOffset;
    DWORD dwCallerIDNameSize;
    DWORD dwCallerIDNameOffset;
    DWORD dwCalledIDFlags;
    DWORD dwCalledIDSize;
    DWORD dwCalledIDOffset;
    DWORD dwCalledIDNameSize;
    DWORD dwCalledIDNameOffset;
    DWORD dwConnectedIDFlags;
    DWORD dwConnectedIDSize;
    DWORD dwConnectedIDOffset;
    DWORD dwConnectedIDNameSize;
    DWORD dwConnectedIDNameOffset;
    DWORD dwRedirectionIDFlags;
    DWORD dwRedirectionIDSize;
    DWORD dwRedirectionIDOffset;
    DWORD dwRedirectionIDNameSize;
    DWORD dwRedirectionIDNameOffset;
    DWORD dwRedirectingIDFlags;
    DWORD dwRedirectingIDSize;
    DWORD dwRedirectingIDOffset;
    DWORD dwRedirectingIDNameSize;
    DWORD dwRedirectingIDNameOffset;
    DWORD dwAppNameSize;
    DWORD dwAppNameOffset;
    DWORD dwDisplayableAddressSize;
    DWORD dwDisplayableAddressOffset;
    DWORD dwCalledPartySize;
    DWORD dwCalledPartyOffset;
    DWORD dwCommentSize;
    DWORD dwCommentOffset;
    DWORD dwDisplaySize;
    DWORD dwDisplayOffset;
    DWORD dwUserUserInfoSize;
    DWORD dwUserUserInfoOffset;
    DWORD dwHighLevelCompSize;
    DWORD dwHighLevelCompOffset;
    DWORD dwLowLevelCompSize;
    DWORD dwLowLevelCompOffset;
    DWORD dwChargingInfoSize;
    DWORD dwChargingInfoOffset;
    DWORD dwTerminalModesSize;
    DWORD dwTerminalModesOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwCallTreatment;
    DWORD dwCallDataSize;
    DWORD dwCallDataOffset;
    DWORD dwSendingFlowspecSize;
    DWORD dwSendingFlowspecOffset;
    DWORD dwReceivingFlowspecSize;
    DWORD dwReceivingFlowspecOffset;
};

typedef struct linecalllist_tag linecalllist_tag, *Plinecalllist_tag;

typedef struct linecalllist_tag LINECALLLIST;

struct linecalllist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwCallsNumEntries;
    DWORD dwCallsSize;
    DWORD dwCallsOffset;
};

typedef struct linecallparams_tag linecallparams_tag, *Plinecallparams_tag;

typedef struct linecallparams_tag LINECALLPARAMS;

struct linecallparams_tag {
    DWORD dwTotalSize;
    DWORD dwBearerMode;
    DWORD dwMinRate;
    DWORD dwMaxRate;
    DWORD dwMediaMode;
    DWORD dwCallParamFlags;
    DWORD dwAddressMode;
    DWORD dwAddressID;
    LINEDIALPARAMS DialParams;
    DWORD dwOrigAddressSize;
    DWORD dwOrigAddressOffset;
    DWORD dwDisplayableAddressSize;
    DWORD dwDisplayableAddressOffset;
    DWORD dwCalledPartySize;
    DWORD dwCalledPartyOffset;
    DWORD dwCommentSize;
    DWORD dwCommentOffset;
    DWORD dwUserUserInfoSize;
    DWORD dwUserUserInfoOffset;
    DWORD dwHighLevelCompSize;
    DWORD dwHighLevelCompOffset;
    DWORD dwLowLevelCompSize;
    DWORD dwLowLevelCompOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwPredictiveAutoTransferStates;
    DWORD dwTargetAddressSize;
    DWORD dwTargetAddressOffset;
    DWORD dwSendingFlowspecSize;
    DWORD dwSendingFlowspecOffset;
    DWORD dwReceivingFlowspecSize;
    DWORD dwReceivingFlowspecOffset;
    DWORD dwDeviceClassSize;
    DWORD dwDeviceClassOffset;
    DWORD dwDeviceConfigSize;
    DWORD dwDeviceConfigOffset;
    DWORD dwCallDataSize;
    DWORD dwCallDataOffset;
    DWORD dwNoAnswerTimeout;
    DWORD dwCallingPartyIDSize;
    DWORD dwCallingPartyIDOffset;
};

typedef struct linecallstatus_tag linecallstatus_tag, *Plinecallstatus_tag;

typedef struct linecallstatus_tag LINECALLSTATUS;

struct linecallstatus_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwCallState;
    DWORD dwCallStateMode;
    DWORD dwCallPrivilege;
    DWORD dwCallFeatures;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwCallFeatures2;
    WORD tStateEntryTime[8];
};

typedef struct linecalltreatmententry_tag linecalltreatmententry_tag, *Plinecalltreatmententry_tag;

typedef struct linecalltreatmententry_tag LINECALLTREATMENTENTRY;

struct linecalltreatmententry_tag {
    DWORD dwCallTreatmentID;
    DWORD dwCallTreatmentNameSize;
    DWORD dwCallTreatmentNameOffset;
};

typedef struct linecardentry_tag linecardentry_tag, *Plinecardentry_tag;

typedef struct linecardentry_tag LINECARDENTRY;

struct linecardentry_tag {
    DWORD dwPermanentCardID;
    DWORD dwCardNameSize;
    DWORD dwCardNameOffset;
    DWORD dwCardNumberDigits;
    DWORD dwSameAreaRuleSize;
    DWORD dwSameAreaRuleOffset;
    DWORD dwLongDistanceRuleSize;
    DWORD dwLongDistanceRuleOffset;
    DWORD dwInternationalRuleSize;
    DWORD dwInternationalRuleOffset;
    DWORD dwOptions;
};

typedef struct linecountryentry_tag linecountryentry_tag, *Plinecountryentry_tag;

typedef struct linecountryentry_tag LINECOUNTRYENTRY;

struct linecountryentry_tag {
    DWORD dwCountryID;
    DWORD dwCountryCode;
    DWORD dwNextCountryID;
    DWORD dwCountryNameSize;
    DWORD dwCountryNameOffset;
    DWORD dwSameAreaRuleSize;
    DWORD dwSameAreaRuleOffset;
    DWORD dwLongDistanceRuleSize;
    DWORD dwLongDistanceRuleOffset;
    DWORD dwInternationalRuleSize;
    DWORD dwInternationalRuleOffset;
};

typedef struct linecountrylist_tag linecountrylist_tag, *Plinecountrylist_tag;

typedef struct linecountrylist_tag LINECOUNTRYLIST;

struct linecountrylist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumCountries;
    DWORD dwCountryListSize;
    DWORD dwCountryListOffset;
};

typedef struct linedevcaps_tag linedevcaps_tag, *Plinedevcaps_tag;

typedef struct linedevcaps_tag LINEDEVCAPS;

struct linedevcaps_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwProviderInfoSize;
    DWORD dwProviderInfoOffset;
    DWORD dwSwitchInfoSize;
    DWORD dwSwitchInfoOffset;
    DWORD dwPermanentLineID;
    DWORD dwLineNameSize;
    DWORD dwLineNameOffset;
    DWORD dwStringFormat;
    DWORD dwAddressModes;
    DWORD dwNumAddresses;
    DWORD dwBearerModes;
    DWORD dwMaxRate;
    DWORD dwMediaModes;
    DWORD dwGenerateToneModes;
    DWORD dwGenerateToneMaxNumFreq;
    DWORD dwGenerateDigitModes;
    DWORD dwMonitorToneMaxNumFreq;
    DWORD dwMonitorToneMaxNumEntries;
    DWORD dwMonitorDigitModes;
    DWORD dwGatherDigitsMinTimeout;
    DWORD dwGatherDigitsMaxTimeout;
    DWORD dwMedCtlDigitMaxListSize;
    DWORD dwMedCtlMediaMaxListSize;
    DWORD dwMedCtlToneMaxListSize;
    DWORD dwMedCtlCallStateMaxListSize;
    DWORD dwDevCapFlags;
    DWORD dwMaxNumActiveCalls;
    DWORD dwAnswerMode;
    DWORD dwRingModes;
    DWORD dwLineStates;
    DWORD dwUUIAcceptSize;
    DWORD dwUUIAnswerSize;
    DWORD dwUUIMakeCallSize;
    DWORD dwUUIDropSize;
    DWORD dwUUISendUserUserInfoSize;
    DWORD dwUUICallInfoSize;
    LINEDIALPARAMS MinDialParams;
    LINEDIALPARAMS MaxDialParams;
    LINEDIALPARAMS DefaultDialParams;
    DWORD dwNumTerminals;
    DWORD dwTerminalCapsSize;
    DWORD dwTerminalCapsOffset;
    DWORD dwTerminalTextEntrySize;
    DWORD dwTerminalTextSize;
    DWORD dwTerminalTextOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwLineFeatures;
    DWORD dwSettableDevStatus;
    DWORD dwDeviceClassesSize;
    DWORD dwDeviceClassesOffset;
    GUID PermanentLineGuid;
};

typedef struct linedevstatus_tag linedevstatus_tag, *Plinedevstatus_tag;

typedef struct linedevstatus_tag LINEDEVSTATUS;

struct linedevstatus_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumOpens;
    DWORD dwOpenMediaModes;
    DWORD dwNumActiveCalls;
    DWORD dwNumOnHoldCalls;
    DWORD dwNumOnHoldPendCalls;
    DWORD dwLineFeatures;
    DWORD dwNumCallCompletions;
    DWORD dwRingMode;
    DWORD dwSignalLevel;
    DWORD dwBatteryLevel;
    DWORD dwRoamMode;
    DWORD dwDevStatusFlags;
    DWORD dwTerminalModesSize;
    DWORD dwTerminalModesOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwAvailableMediaModes;
    DWORD dwAppInfoSize;
    DWORD dwAppInfoOffset;
};

typedef struct lineextensionid_tag lineextensionid_tag, *Plineextensionid_tag;

typedef struct lineextensionid_tag LINEEXTENSIONID;

struct lineextensionid_tag {
    DWORD dwExtensionID0;
    DWORD dwExtensionID1;
    DWORD dwExtensionID2;
    DWORD dwExtensionID3;
};

typedef struct lineforward_tag lineforward_tag, *Plineforward_tag;

typedef struct lineforward_tag LINEFORWARD;

struct lineforward_tag {
    DWORD dwForwardMode;
    DWORD dwCallerAddressSize;
    DWORD dwCallerAddressOffset;
    DWORD dwDestCountryCode;
    DWORD dwDestAddressSize;
    DWORD dwDestAddressOffset;
};

typedef struct lineforwardlist_tag lineforwardlist_tag, *Plineforwardlist_tag;

typedef struct lineforwardlist_tag LINEFORWARDLIST;

struct lineforwardlist_tag {
    DWORD dwTotalSize;
    DWORD dwNumEntries;
    LINEFORWARD ForwardList[1];
};

typedef struct linegeneratetone_tag linegeneratetone_tag, *Plinegeneratetone_tag;

typedef struct linegeneratetone_tag LINEGENERATETONE;

struct linegeneratetone_tag {
    DWORD dwFrequency;
    DWORD dwCadenceOn;
    DWORD dwCadenceOff;
    DWORD dwVolume;
};

typedef struct lineinitializeexparams_tag lineinitializeexparams_tag, *Plineinitializeexparams_tag;

typedef struct lineinitializeexparams_tag LINEINITIALIZEEXPARAMS;

struct lineinitializeexparams_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwOptions;
    union _union_8337 Handles;
    DWORD dwCompletionKey;
};

typedef struct linelocationentry_tag linelocationentry_tag, *Plinelocationentry_tag;

typedef struct linelocationentry_tag LINELOCATIONENTRY;

struct linelocationentry_tag {
    DWORD dwPermanentLocationID;
    DWORD dwLocationNameSize;
    DWORD dwLocationNameOffset;
    DWORD dwCountryCode;
    DWORD dwCityCodeSize;
    DWORD dwCityCodeOffset;
    DWORD dwPreferredCardID;
    DWORD dwLocalAccessCodeSize;
    DWORD dwLocalAccessCodeOffset;
    DWORD dwLongDistanceAccessCodeSize;
    DWORD dwLongDistanceAccessCodeOffset;
    DWORD dwTollPrefixListSize;
    DWORD dwTollPrefixListOffset;
    DWORD dwCountryID;
    DWORD dwOptions;
    DWORD dwCancelCallWaitingSize;
    DWORD dwCancelCallWaitingOffset;
};

typedef struct linemediacontrolcallstate_tag linemediacontrolcallstate_tag, *Plinemediacontrolcallstate_tag;

typedef struct linemediacontrolcallstate_tag LINEMEDIACONTROLCALLSTATE;

struct linemediacontrolcallstate_tag {
    DWORD dwCallStates;
    DWORD dwMediaControl;
};

typedef struct linemediacontroldigit_tag linemediacontroldigit_tag, *Plinemediacontroldigit_tag;

typedef struct linemediacontroldigit_tag LINEMEDIACONTROLDIGIT;

struct linemediacontroldigit_tag {
    DWORD dwDigit;
    DWORD dwDigitModes;
    DWORD dwMediaControl;
};

typedef struct linemediacontrolmedia_tag linemediacontrolmedia_tag, *Plinemediacontrolmedia_tag;

typedef struct linemediacontrolmedia_tag LINEMEDIACONTROLMEDIA;

struct linemediacontrolmedia_tag {
    DWORD dwMediaModes;
    DWORD dwDuration;
    DWORD dwMediaControl;
};

typedef struct linemediacontroltone_tag linemediacontroltone_tag, *Plinemediacontroltone_tag;

typedef struct linemediacontroltone_tag LINEMEDIACONTROLTONE;

struct linemediacontroltone_tag {
    DWORD dwAppSpecific;
    DWORD dwDuration;
    DWORD dwFrequency1;
    DWORD dwFrequency2;
    DWORD dwFrequency3;
    DWORD dwMediaControl;
};

typedef struct linemessage_tag linemessage_tag, *Plinemessage_tag;

typedef struct linemessage_tag LINEMESSAGE;

struct linemessage_tag {
    DWORD hDevice;
    DWORD dwMessageID;
    DWORD_PTR dwCallbackInstance;
    DWORD_PTR dwParam1;
    DWORD_PTR dwParam2;
    DWORD_PTR dwParam3;
};

typedef struct linemonitortone_tag linemonitortone_tag, *Plinemonitortone_tag;

typedef struct linemonitortone_tag LINEMONITORTONE;

struct linemonitortone_tag {
    DWORD dwAppSpecific;
    DWORD dwDuration;
    DWORD dwFrequency1;
    DWORD dwFrequency2;
    DWORD dwFrequency3;
};

typedef struct lineproviderentry_tag lineproviderentry_tag, *Plineproviderentry_tag;

typedef struct lineproviderentry_tag LINEPROVIDERENTRY;

struct lineproviderentry_tag {
    DWORD dwPermanentProviderID;
    DWORD dwProviderFilenameSize;
    DWORD dwProviderFilenameOffset;
};

typedef struct lineproviderlist_tag lineproviderlist_tag, *Plineproviderlist_tag;

typedef struct lineproviderlist_tag LINEPROVIDERLIST;

struct lineproviderlist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumProviders;
    DWORD dwProviderListSize;
    DWORD dwProviderListOffset;
};

typedef struct lineproxyrequest_tag lineproxyrequest_tag, *Plineproxyrequest_tag;

typedef struct lineproxyrequest_tag LINEPROXYREQUEST;

struct lineproxyrequest_tag {
    DWORD dwSize;
    DWORD dwClientMachineNameSize;
    DWORD dwClientMachineNameOffset;
    DWORD dwClientUserNameSize;
    DWORD dwClientUserNameOffset;
    DWORD dwClientAppAPIVersion;
    DWORD dwRequestType;
    union _union_8348 field_0x1c;
};

typedef struct lineproxyrequestlist_tag lineproxyrequestlist_tag, *Plineproxyrequestlist_tag;

typedef struct lineproxyrequestlist_tag LINEPROXYREQUESTLIST;

struct lineproxyrequestlist_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumEntries;
    DWORD dwListSize;
    DWORD dwListOffset;
};

typedef struct linequeueentry_tag linequeueentry_tag, *Plinequeueentry_tag;

typedef struct linequeueentry_tag LINEQUEUEENTRY;

struct linequeueentry_tag {
    DWORD dwQueueID;
    DWORD dwNameSize;
    DWORD dwNameOffset;
};

typedef struct linereqmakecall_tag linereqmakecall_tag, *Plinereqmakecall_tag;

typedef struct linereqmakecall_tag LINEREQMAKECALL;

struct linereqmakecall_tag {
    char szDestAddress[80];
    char szAppName[40];
    char szCalledParty[40];
    char szComment[80];
};

typedef struct linereqmakecallW_tag linereqmakecallW_tag, *PlinereqmakecallW_tag;

typedef struct linereqmakecallW_tag LINEREQMAKECALLW;

struct linereqmakecallW_tag {
    WCHAR szDestAddress[80];
    WCHAR szAppName[40];
    WCHAR szCalledParty[40];
    WCHAR szComment[80];
};

typedef struct linereqmediacall_tag linereqmediacall_tag, *Plinereqmediacall_tag;

typedef struct linereqmediacall_tag LINEREQMEDIACALL;

struct linereqmediacall_tag {
    HWND hWnd;
    WPARAM wRequestID;
    char szDeviceClass[40];
    uchar ucDeviceID[40];
    DWORD dwSize;
    DWORD dwSecure;
    char szDestAddress[80];
    char szAppName[40];
    char szCalledParty[40];
    char szComment[80];
};

typedef struct linereqmediacallW_tag linereqmediacallW_tag, *PlinereqmediacallW_tag;

typedef struct linereqmediacallW_tag LINEREQMEDIACALLW;

struct linereqmediacallW_tag {
    HWND hWnd;
    WPARAM wRequestID;
    WCHAR szDeviceClass[40];
    uchar ucDeviceID[40];
    DWORD dwSize;
    DWORD dwSecure;
    WCHAR szDestAddress[80];
    WCHAR szAppName[40];
    WCHAR szCalledParty[40];
    WCHAR szComment[80];
};

typedef struct linetermcaps_tag linetermcaps_tag, *Plinetermcaps_tag;

typedef struct linetermcaps_tag LINETERMCAPS;

struct linetermcaps_tag {
    DWORD dwTermDev;
    DWORD dwTermModes;
    DWORD dwTermSharing;
};

typedef struct linetranslatecaps_tag linetranslatecaps_tag, *Plinetranslatecaps_tag;

typedef struct linetranslatecaps_tag LINETRANSLATECAPS;

struct linetranslatecaps_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwNumLocations;
    DWORD dwLocationListSize;
    DWORD dwLocationListOffset;
    DWORD dwCurrentLocationID;
    DWORD dwNumCards;
    DWORD dwCardListSize;
    DWORD dwCardListOffset;
    DWORD dwCurrentPreferredCardID;
};

typedef struct linetranslateoutput_tag linetranslateoutput_tag, *Plinetranslateoutput_tag;

typedef struct linetranslateoutput_tag LINETRANSLATEOUTPUT;

struct linetranslateoutput_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwDialableStringSize;
    DWORD dwDialableStringOffset;
    DWORD dwDisplayableStringSize;
    DWORD dwDisplayableStringOffset;
    DWORD dwCurrentCountry;
    DWORD dwDestCountry;
    DWORD dwTranslateResults;
};

typedef HAGENT * LPHAGENT;

typedef HAGENTSESSION * LPHAGENTSESSION;

typedef HCALL * LPHCALL;

typedef HICON * LPHICON;

typedef HLINE * LPHLINE;

typedef HLINEAPP * LPHLINEAPP;

typedef HPHONE * LPHPHONE;

typedef HPHONEAPP * LPHPHONEAPP;

typedef struct lineaddresscaps_tag * LPLINEADDRESSCAPS;

typedef struct lineaddressstatus_tag * LPLINEADDRESSSTATUS;

typedef struct lineagentactivityentry_tag * LPLINEAGENTACTIVITYENTRY;

typedef struct lineagentactivitylist_tag * LPLINEAGENTACTIVITYLIST;

typedef struct lineagentcaps_tag * LPLINEAGENTCAPS;

typedef struct lineagententry_tag * LPLINEAGENTENTRY;

typedef struct lineagentgroupentry_tag * LPLINEAGENTGROUPENTRY;

typedef struct lineagentgrouplist_tag * LPLINEAGENTGROUPLIST;

typedef struct lineagentinfo_tag * LPLINEAGENTINFO;

typedef struct lineagentlist_tag * LPLINEAGENTLIST;

typedef struct lineagentsession_tag * LPLINEAGENTSESSIONENTRY;

typedef struct lineagentsessioninfo_tag * LPLINEAGENTSESSIONINFO;

typedef struct lineagentsessionlist_tag * LPLINEAGENTSESSIONLIST;

typedef struct lineagentstatus_tag * LPLINEAGENTSTATUS;

typedef struct lineappinfo_tag * LPLINEAPPINFO;

typedef struct linecallinfo_tag * LPLINECALLINFO;

typedef struct linecalllist_tag * LPLINECALLLIST;

typedef struct linecallparams_tag * LPLINECALLPARAMS;

typedef struct linecallstatus_tag * LPLINECALLSTATUS;

typedef struct linecalltreatmententry_tag * LPLINECALLTREATMENTENTRY;

typedef struct linecardentry_tag * LPLINECARDENTRY;

typedef struct linecountryentry_tag * LPLINECOUNTRYENTRY;

typedef struct linecountrylist_tag * LPLINECOUNTRYLIST;

typedef struct linedevcaps_tag * LPLINEDEVCAPS;

typedef struct linedevstatus_tag * LPLINEDEVSTATUS;

typedef struct linedialparams_tag * LPLINEDIALPARAMS;

typedef struct lineextensionid_tag * LPLINEEXTENSIONID;

typedef struct lineforward_tag * LPLINEFORWARD;

typedef struct lineforwardlist_tag * LPLINEFORWARDLIST;

typedef struct linegeneratetone_tag * LPLINEGENERATETONE;

typedef struct lineinitializeexparams_tag * LPLINEINITIALIZEEXPARAMS;

typedef struct linelocationentry_tag * LPLINELOCATIONENTRY;

typedef struct linemediacontrolcallstate_tag * LPLINEMEDIACONTROLCALLSTATE;

typedef struct linemediacontroldigit_tag * LPLINEMEDIACONTROLDIGIT;

typedef struct linemediacontrolmedia_tag * LPLINEMEDIACONTROLMEDIA;

typedef struct linemediacontroltone_tag * LPLINEMEDIACONTROLTONE;

typedef struct linemessage_tag * LPLINEMESSAGE;

typedef struct linemonitortone_tag * LPLINEMONITORTONE;

typedef struct lineproviderentry_tag * LPLINEPROVIDERENTRY;

typedef struct lineproviderlist_tag * LPLINEPROVIDERLIST;

typedef struct lineproxyrequest_tag * LPLINEPROXYREQUEST;

typedef struct lineproxyrequestlist_tag * LPLINEPROXYREQUESTLIST;

typedef struct linequeueentry_tag * LPLINEQUEUEENTRY;

typedef struct linequeueinfo_tag * LPLINEQUEUEINFO;

typedef struct linequeuelist_tag * LPLINEQUEUELIST;

typedef struct linereqmakecall_tag * LPLINEREQMAKECALL;

typedef struct linereqmakecallW_tag * LPLINEREQMAKECALLW;

typedef struct linereqmediacall_tag * LPLINEREQMEDIACALL;

typedef struct linereqmediacallW_tag * LPLINEREQMEDIACALLW;

typedef struct linetermcaps_tag * LPLINETERMCAPS;

typedef struct linetranslatecaps_tag * LPLINETRANSLATECAPS;

typedef struct linetranslateoutput_tag * LPLINETRANSLATEOUTPUT;

typedef struct phonebuttoninfo_tag phonebuttoninfo_tag, *Pphonebuttoninfo_tag;

typedef struct phonebuttoninfo_tag * LPPHONEBUTTONINFO;

struct phonebuttoninfo_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwButtonMode;
    DWORD dwButtonFunction;
    DWORD dwButtonTextSize;
    DWORD dwButtonTextOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwButtonState;
};

typedef struct phonecaps_tag phonecaps_tag, *Pphonecaps_tag;

typedef struct phonecaps_tag * LPPHONECAPS;

struct phonecaps_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwProviderInfoSize;
    DWORD dwProviderInfoOffset;
    DWORD dwPhoneInfoSize;
    DWORD dwPhoneInfoOffset;
    DWORD dwPermanentPhoneID;
    DWORD dwPhoneNameSize;
    DWORD dwPhoneNameOffset;
    DWORD dwStringFormat;
    DWORD dwPhoneStates;
    DWORD dwHookSwitchDevs;
    DWORD dwHandsetHookSwitchModes;
    DWORD dwSpeakerHookSwitchModes;
    DWORD dwHeadsetHookSwitchModes;
    DWORD dwVolumeFlags;
    DWORD dwGainFlags;
    DWORD dwDisplayNumRows;
    DWORD dwDisplayNumColumns;
    DWORD dwNumRingModes;
    DWORD dwNumButtonLamps;
    DWORD dwButtonModesSize;
    DWORD dwButtonModesOffset;
    DWORD dwButtonFunctionsSize;
    DWORD dwButtonFunctionsOffset;
    DWORD dwLampModesSize;
    DWORD dwLampModesOffset;
    DWORD dwNumSetData;
    DWORD dwSetDataSize;
    DWORD dwSetDataOffset;
    DWORD dwNumGetData;
    DWORD dwGetDataSize;
    DWORD dwGetDataOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwDeviceClassesSize;
    DWORD dwDeviceClassesOffset;
    DWORD dwPhoneFeatures;
    DWORD dwSettableHandsetHookSwitchModes;
    DWORD dwSettableSpeakerHookSwitchModes;
    DWORD dwSettableHeadsetHookSwitchModes;
    DWORD dwMonitoredHandsetHookSwitchModes;
    DWORD dwMonitoredSpeakerHookSwitchModes;
    DWORD dwMonitoredHeadsetHookSwitchModes;
    GUID PermanentPhoneGuid;
};

typedef struct phoneextensionid_tag phoneextensionid_tag, *Pphoneextensionid_tag;

typedef struct phoneextensionid_tag * LPPHONEEXTENSIONID;

struct phoneextensionid_tag {
    DWORD dwExtensionID0;
    DWORD dwExtensionID1;
    DWORD dwExtensionID2;
    DWORD dwExtensionID3;
};

typedef struct phoneinitializeexparams_tag phoneinitializeexparams_tag, *Pphoneinitializeexparams_tag;

typedef struct phoneinitializeexparams_tag * LPPHONEINITIALIZEEXPARAMS;

struct phoneinitializeexparams_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwOptions;
    union _union_8380 Handles;
    DWORD dwCompletionKey;
};

typedef struct phonemessage_tag phonemessage_tag, *Pphonemessage_tag;

typedef struct phonemessage_tag * LPPHONEMESSAGE;

struct phonemessage_tag {
    DWORD hDevice;
    DWORD dwMessageID;
    DWORD_PTR dwCallbackInstance;
    DWORD_PTR dwParam1;
    DWORD_PTR dwParam2;
    DWORD_PTR dwParam3;
};

typedef struct phonestatus_tag phonestatus_tag, *Pphonestatus_tag;

typedef struct phonestatus_tag * LPPHONESTATUS;

struct phonestatus_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwStatusFlags;
    DWORD dwNumOwners;
    DWORD dwNumMonitors;
    DWORD dwRingMode;
    DWORD dwRingVolume;
    DWORD dwHandsetHookSwitchMode;
    DWORD dwHandsetVolume;
    DWORD dwHandsetGain;
    DWORD dwSpeakerHookSwitchMode;
    DWORD dwSpeakerVolume;
    DWORD dwSpeakerGain;
    DWORD dwHeadsetHookSwitchMode;
    DWORD dwHeadsetVolume;
    DWORD dwHeadsetGain;
    DWORD dwDisplaySize;
    DWORD dwDisplayOffset;
    DWORD dwLampModesSize;
    DWORD dwLampModesOffset;
    DWORD dwOwnerNameSize;
    DWORD dwOwnerNameOffset;
    DWORD dwDevSpecificSize;
    DWORD dwDevSpecificOffset;
    DWORD dwPhoneFeatures;
};

typedef struct varstring_tag varstring_tag, *Pvarstring_tag;

typedef struct varstring_tag * LPVARSTRING;

struct varstring_tag {
    DWORD dwTotalSize;
    DWORD dwNeededSize;
    DWORD dwUsedSize;
    DWORD dwStringFormat;
    DWORD dwStringSize;
    DWORD dwStringOffset;
};

typedef struct phonebuttoninfo_tag PHONEBUTTONINFO;

typedef void (* PHONECALLBACK)(DWORD, DWORD, DWORD_PTR, DWORD_PTR, DWORD_PTR, DWORD_PTR);

typedef struct phonecaps_tag PHONECAPS;

typedef struct phoneextensionid_tag PHONEEXTENSIONID;

typedef struct phoneinitializeexparams_tag PHONEINITIALIZEEXPARAMS;

typedef struct phonemessage_tag PHONEMESSAGE;

typedef struct phonestatus_tag PHONESTATUS;

typedef struct varstring_tag VARSTRING;

#define _TEOF -1

typedef char _TCHAR;

typedef int _TINT;

typedef char _TSCHAR;

typedef uchar _TUCHAR;

typedef char _TXCHAR;

#define CLK_TCK 1000

#define CLOCKS_PER_SEC 1000

typedef long clock_t;

typedef struct tm tm, *Ptm;

struct tm {
    int tm_sec;
    int tm_min;
    int tm_hour;
    int tm_mday;
    int tm_mon;
    int tm_year;
    int tm_wday;
    int tm_yday;
    int tm_isdst;
};

typedef struct IKernelTransaction IKernelTransaction, *PIKernelTransaction;

typedef struct IKernelTransactionVtbl IKernelTransactionVtbl, *PIKernelTransactionVtbl;

struct IKernelTransaction {
    struct IKernelTransactionVtbl * lpVtbl;
};

struct IKernelTransactionVtbl {
    HRESULT (* QueryInterface)(struct IKernelTransaction *, IID *, void * *);
    ULONG (* AddRef)(struct IKernelTransaction *);
    ULONG (* Release)(struct IKernelTransaction *);
    HRESULT (* GetHandle)(struct IKernelTransaction *, HANDLE *);
};

typedef enum ISOFLAG {
    ISOFLAG_OPTIMISTIC=16,
    ISOFLAG_READONLY=32,
    ISOFLAG_RETAIN_ABORT=8,
    ISOFLAG_RETAIN_ABORT_DC=4,
    ISOFLAG_RETAIN_ABORT_NO=12,
    ISOFLAG_RETAIN_BOTH=14,
    ISOFLAG_RETAIN_COMMIT=2,
    ISOFLAG_RETAIN_COMMIT_DC=1,
    ISOFLAG_RETAIN_COMMIT_NO=3,
    ISOFLAG_RETAIN_DONTCARE=13,
    ISOFLAG_RETAIN_NONE=15
} ISOFLAG;

typedef enum ISOLATIONLEVEL {
    ISOLATIONLEVEL_BROWSE=256,
    ISOLATIONLEVEL_CHAOS=16,
    ISOLATIONLEVEL_CURSORSTABILITY=4096,
    ISOLATIONLEVEL_ISOLATED=1048576,
    ISOLATIONLEVEL_READCOMMITTED=4096,
    ISOLATIONLEVEL_READUNCOMMITTED=256,
    ISOLATIONLEVEL_REPEATABLEREAD=65536,
    ISOLATIONLEVEL_SERIALIZABLE=1048576,
    ISOLATIONLEVEL_UNSPECIFIED=-1
} ISOLATIONLEVEL;

typedef struct ITmNodeName ITmNodeName, *PITmNodeName;

typedef struct ITmNodeNameVtbl ITmNodeNameVtbl, *PITmNodeNameVtbl;

struct ITmNodeName {
    struct ITmNodeNameVtbl * lpVtbl;
};

struct ITmNodeNameVtbl {
    HRESULT (* QueryInterface)(struct ITmNodeName *, IID *, void * *);
    ULONG (* AddRef)(struct ITmNodeName *);
    ULONG (* Release)(struct ITmNodeName *);
    HRESULT (* GetNodeNameSize)(struct ITmNodeName *, ULONG *);
    HRESULT (* GetNodeName)(struct ITmNodeName *, ULONG, LPWSTR);
};

typedef struct ITransaction2 ITransaction2, *PITransaction2;

typedef struct ITransaction2Vtbl ITransaction2Vtbl, *PITransaction2Vtbl;

struct ITransaction2 {
    struct ITransaction2Vtbl * lpVtbl;
};

struct ITransaction2Vtbl {
    HRESULT (* QueryInterface)(struct ITransaction2 *, IID *, void * *);
    ULONG (* AddRef)(struct ITransaction2 *);
    ULONG (* Release)(struct ITransaction2 *);
    HRESULT (* Commit)(struct ITransaction2 *, BOOL, DWORD, DWORD);
    HRESULT (* Abort)(struct ITransaction2 *, struct BOID *, BOOL, BOOL);
    HRESULT (* GetTransactionInfo)(struct ITransaction2 *, struct XACTTRANSINFO *);
    HRESULT (* CloneWithCommitDisabled)(struct ITransaction2 *, struct ITransaction * *);
    HRESULT (* GetTransactionInfo2)(struct ITransaction2 *, struct XACTTRANSINFO *);
};

typedef struct ITransactionCloner ITransactionCloner, *PITransactionCloner;

typedef struct ITransactionClonerVtbl ITransactionClonerVtbl, *PITransactionClonerVtbl;

struct ITransactionCloner {
    struct ITransactionClonerVtbl * lpVtbl;
};

struct ITransactionClonerVtbl {
    HRESULT (* QueryInterface)(struct ITransactionCloner *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionCloner *);
    ULONG (* Release)(struct ITransactionCloner *);
    HRESULT (* Commit)(struct ITransactionCloner *, BOOL, DWORD, DWORD);
    HRESULT (* Abort)(struct ITransactionCloner *, struct BOID *, BOOL, BOOL);
    HRESULT (* GetTransactionInfo)(struct ITransactionCloner *, struct XACTTRANSINFO *);
    HRESULT (* CloneWithCommitDisabled)(struct ITransactionCloner *, struct ITransaction * *);
};

typedef struct ITransactionDispenser ITransactionDispenser, *PITransactionDispenser;

typedef struct ITransactionDispenserVtbl ITransactionDispenserVtbl, *PITransactionDispenserVtbl;

struct ITransactionDispenserVtbl {
    HRESULT (* QueryInterface)(struct ITransactionDispenser *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionDispenser *);
    ULONG (* Release)(struct ITransactionDispenser *);
    HRESULT (* GetOptionsObject)(struct ITransactionDispenser *, struct ITransactionOptions * *);
    HRESULT (* BeginTransaction)(struct ITransactionDispenser *, struct IUnknown *, ISOLEVEL, ULONG, struct ITransactionOptions *, struct ITransaction * *);
};

struct ITransactionDispenser {
    struct ITransactionDispenserVtbl * lpVtbl;
};

typedef struct ITransactionOutcomeEvents ITransactionOutcomeEvents, *PITransactionOutcomeEvents;

typedef struct ITransactionOutcomeEventsVtbl ITransactionOutcomeEventsVtbl, *PITransactionOutcomeEventsVtbl;

struct ITransactionOutcomeEvents {
    struct ITransactionOutcomeEventsVtbl * lpVtbl;
};

struct ITransactionOutcomeEventsVtbl {
    HRESULT (* QueryInterface)(struct ITransactionOutcomeEvents *, IID *, void * *);
    ULONG (* AddRef)(struct ITransactionOutcomeEvents *);
    ULONG (* Release)(struct ITransactionOutcomeEvents *);
    HRESULT (* Committed)(struct ITransactionOutcomeEvents *, BOOL, XACTUOW *, HRESULT);
    HRESULT (* Aborted)(struct ITransactionOutcomeEvents *, struct BOID *, BOOL, XACTUOW *, HRESULT);
    HRESULT (* HeuristicDecision)(struct ITransactionOutcomeEvents *, DWORD, struct BOID *, HRESULT);
    HRESULT (* Indoubt)(struct ITransactionOutcomeEvents *);
};

typedef enum TX_MISC_CONSTANTS {
    MAX_TRAN_DESC=40
} TX_MISC_CONSTANTS;

typedef enum XACTCONST {
    XACTCONST_TIMEOUTINFINITE=0
} XACTCONST;

typedef enum XACTHEURISTIC {
    XACTHEURISTIC_ABORT=1,
    XACTHEURISTIC_COMMIT=2,
    XACTHEURISTIC_DAMAGE=3,
    XACTHEURISTIC_DANGER=4
} XACTHEURISTIC;

typedef enum XACTRM {
    XACTRM_NOREADONLYPREPARES=2,
    XACTRM_OPTIMISTICLASTWINS=1
} XACTRM;

typedef enum XACTSTAT {
    XACTSTAT_ABORTED=512,
    XACTSTAT_ABORTING=256,
    XACTSTAT_ALL=524287,
    XACTSTAT_CLOSED=262144,
    XACTSTAT_COMMITRETAINING=128,
    XACTSTAT_COMMITTED=1024,
    XACTSTAT_COMMITTING=64,
    XACTSTAT_FORCED_ABORT=32768,
    XACTSTAT_FORCED_COMMIT=65536,
    XACTSTAT_HEURISTIC_ABORT=2048,
    XACTSTAT_HEURISTIC_COMMIT=4096,
    XACTSTAT_HEURISTIC_DAMAGE=8192,
    XACTSTAT_HEURISTIC_DANGER=16384,
    XACTSTAT_INDOUBT=131072,
    XACTSTAT_NONE=0,
    XACTSTAT_NOTPREPARED=524227,
    XACTSTAT_OPEN=3,
    XACTSTAT_OPENNORMAL=1,
    XACTSTAT_OPENREFUSED=2,
    XACTSTAT_PREPARED=8,
    XACTSTAT_PREPARERETAINED=32,
    XACTSTAT_PREPARERETAINING=16,
    XACTSTAT_PREPARING=4
} XACTSTAT;

typedef struct XACTSTATS XACTSTATS, *PXACTSTATS;

struct XACTSTATS {
    ULONG cOpen;
    ULONG cCommitting;
    ULONG cCommitted;
    ULONG cAborting;
    ULONG cAborted;
    ULONG cInDoubt;
    ULONG cHeuristicDecision;
    FILETIME timeTransactionsUp;
};

typedef enum XACTTC {
    XACTTC_ASYNC=4,
    XACTTC_ASYNC_PHASEONE=4,
    XACTTC_NONE=0,
    XACTTC_SYNC=2,
    XACTTC_SYNC_PHASEONE=1,
    XACTTC_SYNC_PHASETWO=2
} XACTTC;

#define VP_COMMAND_GET 1

#define VP_COMMAND_SET 2

#define VP_CP_CMD_ACTIVATE 1

#define VP_CP_CMD_CHANGE 4

#define VP_CP_CMD_DEACTIVATE 2

#define VP_CP_TYPE_APS_TRIGGER 1

#define VP_CP_TYPE_MACROVISION 2

#define VP_FLAGS_BRIGHTNESS 64

#define VP_FLAGS_CONTRAST 128

#define VP_FLAGS_COPYPROTECT 256

#define VP_FLAGS_FLICKER 4

#define VP_FLAGS_MAX_UNSCALED 16

#define VP_FLAGS_OVERSCAN 8

#define VP_FLAGS_POSITION 32

#define VP_FLAGS_TV_MODE 1

#define VP_FLAGS_TV_STANDARD 2

#define VP_MODE_TV_PLAYBACK 2

#define VP_MODE_WIN_GRAPHICS 1

#define VP_TV_STANDARD_NTSC_433 65536

#define VP_TV_STANDARD_NTSC_M 1

#define VP_TV_STANDARD_NTSC_M_J 2

#define VP_TV_STANDARD_PAL_60 262144

#define VP_TV_STANDARD_PAL_B 4

#define VP_TV_STANDARD_PAL_D 8

#define VP_TV_STANDARD_PAL_G 131072

#define VP_TV_STANDARD_PAL_H 16

#define VP_TV_STANDARD_PAL_I 32

#define VP_TV_STANDARD_PAL_M 64

#define VP_TV_STANDARD_PAL_N 128

#define VP_TV_STANDARD_SECAM_B 256

#define VP_TV_STANDARD_SECAM_D 512

#define VP_TV_STANDARD_SECAM_G 1024

#define VP_TV_STANDARD_SECAM_H 2048

#define VP_TV_STANDARD_SECAM_K 4096

#define VP_TV_STANDARD_SECAM_K1 8192

#define VP_TV_STANDARD_SECAM_L 16384

#define VP_TV_STANDARD_SECAM_L1 524288

#define VP_TV_STANDARD_WIN_VGA 32768

typedef struct _VIDEOPARAMETERS _VIDEOPARAMETERS, *P_VIDEOPARAMETERS;

struct _VIDEOPARAMETERS {
    GUID Guid;
    ULONG dwOffset;
    ULONG dwCommand;
    ULONG dwFlags;
    ULONG dwMode;
    ULONG dwTVStandard;
    ULONG dwAvailableModes;
    ULONG dwAvailableTVStandard;
    ULONG dwFlickerFilter;
    ULONG dwOverScanX;
    ULONG dwOverScanY;
    ULONG dwMaxUnscaledX;
    ULONG dwMaxUnscaledY;
    ULONG dwPositionX;
    ULONG dwPositionY;
    ULONG dwBrightness;
    ULONG dwContrast;
    ULONG dwCPType;
    ULONG dwCPCommand;
    ULONG dwCPStandard;
    ULONG dwCPKey;
    ULONG bCP_APSTriggerBits;
    UCHAR bOEMCopyProtection[256];
};

typedef struct _VIDEOPARAMETERS * LPVIDEOPARAMETERS;

typedef struct _VIDEOPARAMETERS * PVIDEOPARAMETERS;

typedef struct _VIDEOPARAMETERS VIDEOPARAMETERS;

typedef enum AutomationElementMode {
    AutomationElementMode_Full=1,
    AutomationElementMode_None=0
} AutomationElementMode;

typedef struct CUIAutomation CUIAutomation, *PCUIAutomation;

struct CUIAutomation {
};

typedef struct IUIAutomation IUIAutomation, *PIUIAutomation;

typedef struct IUIAutomationVtbl IUIAutomationVtbl, *PIUIAutomationVtbl;

typedef struct IUIAutomationElement IUIAutomationElement, *PIUIAutomationElement;

typedef void * UIA_HWND;

typedef struct IUIAutomationCacheRequest IUIAutomationCacheRequest, *PIUIAutomationCacheRequest;

typedef struct IUIAutomationCondition IUIAutomationCondition, *PIUIAutomationCondition;

typedef struct IUIAutomationTreeWalker IUIAutomationTreeWalker, *PIUIAutomationTreeWalker;

typedef int PROPERTYID;

typedef enum PropertyConditionFlags {
    PropertyConditionFlags_IgnoreCase=1,
    PropertyConditionFlags_None=0
} PropertyConditionFlags;

typedef int EVENTID;

typedef enum TreeScope {
    TreeScope_Ancestors=16,
    TreeScope_Children=2,
    TreeScope_Descendants=4,
    TreeScope_Element=1,
    TreeScope_Parent=8,
    TreeScope_Subtree=17
} TreeScope;

typedef struct IUIAutomationEventHandler IUIAutomationEventHandler, *PIUIAutomationEventHandler;

typedef struct IUIAutomationPropertyChangedEventHandler IUIAutomationPropertyChangedEventHandler, *PIUIAutomationPropertyChangedEventHandler;

typedef struct IUIAutomationStructureChangedEventHandler IUIAutomationStructureChangedEventHandler, *PIUIAutomationStructureChangedEventHandler;

typedef struct IUIAutomationFocusChangedEventHandler IUIAutomationFocusChangedEventHandler, *PIUIAutomationFocusChangedEventHandler;

typedef struct IUIAutomationProxyFactory IUIAutomationProxyFactory, *PIUIAutomationProxyFactory;

typedef struct IUIAutomationProxyFactoryEntry IUIAutomationProxyFactoryEntry, *PIUIAutomationProxyFactoryEntry;

typedef struct IUIAutomationProxyFactoryMapping IUIAutomationProxyFactoryMapping, *PIUIAutomationProxyFactoryMapping;

typedef int PATTERNID;

typedef struct IUIAutomationElementVtbl IUIAutomationElementVtbl, *PIUIAutomationElementVtbl;

typedef struct IUIAutomationElementArray IUIAutomationElementArray, *PIUIAutomationElementArray;

typedef int CONTROLTYPEID;

typedef enum OrientationType {
    OrientationType_Horizontal=1,
    OrientationType_None=0,
    OrientationType_Vertical=2
} OrientationType;

typedef struct IUIAutomationCacheRequestVtbl IUIAutomationCacheRequestVtbl, *PIUIAutomationCacheRequestVtbl;

typedef struct IUIAutomationConditionVtbl IUIAutomationConditionVtbl, *PIUIAutomationConditionVtbl;

typedef struct IUIAutomationTreeWalkerVtbl IUIAutomationTreeWalkerVtbl, *PIUIAutomationTreeWalkerVtbl;

typedef struct IUIAutomationEventHandlerVtbl IUIAutomationEventHandlerVtbl, *PIUIAutomationEventHandlerVtbl;

typedef struct IUIAutomationPropertyChangedEventHandlerVtbl IUIAutomationPropertyChangedEventHandlerVtbl, *PIUIAutomationPropertyChangedEventHandlerVtbl;

typedef struct IUIAutomationStructureChangedEventHandlerVtbl IUIAutomationStructureChangedEventHandlerVtbl, *PIUIAutomationStructureChangedEventHandlerVtbl;

typedef enum StructureChangeType {
    StructureChangeType_ChildAdded=0,
    StructureChangeType_ChildRemoved=1,
    StructureChangeType_ChildrenBulkAdded=3,
    StructureChangeType_ChildrenBulkRemoved=4,
    StructureChangeType_ChildrenInvalidated=2,
    StructureChangeType_ChildrenReordered=5
} StructureChangeType;

typedef struct IUIAutomationFocusChangedEventHandlerVtbl IUIAutomationFocusChangedEventHandlerVtbl, *PIUIAutomationFocusChangedEventHandlerVtbl;

typedef struct IUIAutomationProxyFactoryVtbl IUIAutomationProxyFactoryVtbl, *PIUIAutomationProxyFactoryVtbl;

typedef struct IRawElementProviderSimple IRawElementProviderSimple, *PIRawElementProviderSimple;

typedef struct IUIAutomationProxyFactoryEntryVtbl IUIAutomationProxyFactoryEntryVtbl, *PIUIAutomationProxyFactoryEntryVtbl;

typedef struct IUIAutomationProxyFactoryMappingVtbl IUIAutomationProxyFactoryMappingVtbl, *PIUIAutomationProxyFactoryMappingVtbl;

typedef struct IUIAutomationElementArrayVtbl IUIAutomationElementArrayVtbl, *PIUIAutomationElementArrayVtbl;

typedef struct IRawElementProviderSimpleVtbl IRawElementProviderSimpleVtbl, *PIRawElementProviderSimpleVtbl;

typedef enum ProviderOptions {
    ProviderOptions_ClientSideProvider=1,
    ProviderOptions_NonClientAreaProvider=4,
    ProviderOptions_OverrideProvider=8,
    ProviderOptions_ProviderOwnsSetFocus=16,
    ProviderOptions_ServerSideProvider=2,
    ProviderOptions_UseComThreading=32
} ProviderOptions;

struct IUIAutomationEventHandler {
    struct IUIAutomationEventHandlerVtbl * lpVtbl;
};

struct IUIAutomationTreeWalker {
    struct IUIAutomationTreeWalkerVtbl * lpVtbl;
};

struct IUIAutomationFocusChangedEventHandler {
    struct IUIAutomationFocusChangedEventHandlerVtbl * lpVtbl;
};

struct IUIAutomationProxyFactory {
    struct IUIAutomationProxyFactoryVtbl * lpVtbl;
};

struct IUIAutomationPropertyChangedEventHandlerVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationPropertyChangedEventHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationPropertyChangedEventHandler *);
    ULONG (* Release)(struct IUIAutomationPropertyChangedEventHandler *);
    HRESULT (* HandlePropertyChangedEvent)(struct IUIAutomationPropertyChangedEventHandler *, struct IUIAutomationElement *, PROPERTYID, VARIANT);
};

struct IUIAutomationPropertyChangedEventHandler {
    struct IUIAutomationPropertyChangedEventHandlerVtbl * lpVtbl;
};

struct IRawElementProviderSimpleVtbl {
    HRESULT (* QueryInterface)(struct IRawElementProviderSimple *, IID *, void * *);
    ULONG (* AddRef)(struct IRawElementProviderSimple *);
    ULONG (* Release)(struct IRawElementProviderSimple *);
    HRESULT (* get_ProviderOptions)(struct IRawElementProviderSimple *, enum ProviderOptions *);
    HRESULT (* GetPatternProvider)(struct IRawElementProviderSimple *, PATTERNID, struct IUnknown * *);
    HRESULT (* GetPropertyValue)(struct IRawElementProviderSimple *, PROPERTYID, VARIANT *);
    HRESULT (* get_HostRawElementProvider)(struct IRawElementProviderSimple *, struct IRawElementProviderSimple * *);
};

struct IUIAutomationFocusChangedEventHandlerVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationFocusChangedEventHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationFocusChangedEventHandler *);
    ULONG (* Release)(struct IUIAutomationFocusChangedEventHandler *);
    HRESULT (* HandleFocusChangedEvent)(struct IUIAutomationFocusChangedEventHandler *, struct IUIAutomationElement *);
};

struct IUIAutomationProxyFactoryVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationProxyFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationProxyFactory *);
    ULONG (* Release)(struct IUIAutomationProxyFactory *);
    HRESULT (* CreateProvider)(struct IUIAutomationProxyFactory *, UIA_HWND, LONG, LONG, struct IRawElementProviderSimple * *);
    HRESULT (* get_ProxyFactoryId)(struct IUIAutomationProxyFactory *, BSTR *);
};

struct IUIAutomationCondition {
    struct IUIAutomationConditionVtbl * lpVtbl;
};

struct IUIAutomationProxyFactoryEntry {
    struct IUIAutomationProxyFactoryEntryVtbl * lpVtbl;
};

struct IRawElementProviderSimple {
    struct IRawElementProviderSimpleVtbl * lpVtbl;
};

struct IUIAutomationElement {
    struct IUIAutomationElementVtbl * lpVtbl;
};

struct IUIAutomationEventHandlerVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationEventHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationEventHandler *);
    ULONG (* Release)(struct IUIAutomationEventHandler *);
    HRESULT (* HandleAutomationEvent)(struct IUIAutomationEventHandler *, struct IUIAutomationElement *, EVENTID);
};

struct IUIAutomationCacheRequest {
    struct IUIAutomationCacheRequestVtbl * lpVtbl;
};

struct IUIAutomationProxyFactoryMapping {
    struct IUIAutomationProxyFactoryMappingVtbl * lpVtbl;
};

struct IUIAutomationVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomation *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomation *);
    ULONG (* Release)(struct IUIAutomation *);
    HRESULT (* CompareElements)(struct IUIAutomation *, struct IUIAutomationElement *, struct IUIAutomationElement *, BOOL *);
    HRESULT (* CompareRuntimeIds)(struct IUIAutomation *, SAFEARRAY *, SAFEARRAY *, BOOL *);
    HRESULT (* GetRootElement)(struct IUIAutomation *, struct IUIAutomationElement * *);
    HRESULT (* ElementFromHandle)(struct IUIAutomation *, UIA_HWND, struct IUIAutomationElement * *);
    HRESULT (* ElementFromPoint)(struct IUIAutomation *, POINT, struct IUIAutomationElement * *);
    HRESULT (* GetFocusedElement)(struct IUIAutomation *, struct IUIAutomationElement * *);
    HRESULT (* GetRootElementBuildCache)(struct IUIAutomation *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* ElementFromHandleBuildCache)(struct IUIAutomation *, UIA_HWND, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* ElementFromPointBuildCache)(struct IUIAutomation *, POINT, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* GetFocusedElementBuildCache)(struct IUIAutomation *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* CreateTreeWalker)(struct IUIAutomation *, struct IUIAutomationCondition *, struct IUIAutomationTreeWalker * *);
    HRESULT (* get_ControlViewWalker)(struct IUIAutomation *, struct IUIAutomationTreeWalker * *);
    HRESULT (* get_ContentViewWalker)(struct IUIAutomation *, struct IUIAutomationTreeWalker * *);
    HRESULT (* get_RawViewWalker)(struct IUIAutomation *, struct IUIAutomationTreeWalker * *);
    HRESULT (* get_RawViewCondition)(struct IUIAutomation *, struct IUIAutomationCondition * *);
    HRESULT (* get_ControlViewCondition)(struct IUIAutomation *, struct IUIAutomationCondition * *);
    HRESULT (* get_ContentViewCondition)(struct IUIAutomation *, struct IUIAutomationCondition * *);
    HRESULT (* CreateCacheRequest)(struct IUIAutomation *, struct IUIAutomationCacheRequest * *);
    HRESULT (* CreateTrueCondition)(struct IUIAutomation *, struct IUIAutomationCondition * *);
    HRESULT (* CreateFalseCondition)(struct IUIAutomation *, struct IUIAutomationCondition * *);
    HRESULT (* CreatePropertyCondition)(struct IUIAutomation *, PROPERTYID, VARIANT, struct IUIAutomationCondition * *);
    HRESULT (* CreatePropertyConditionEx)(struct IUIAutomation *, PROPERTYID, VARIANT, enum PropertyConditionFlags, struct IUIAutomationCondition * *);
    HRESULT (* CreateAndCondition)(struct IUIAutomation *, struct IUIAutomationCondition *, struct IUIAutomationCondition *, struct IUIAutomationCondition * *);
    HRESULT (* CreateAndConditionFromArray)(struct IUIAutomation *, SAFEARRAY *, struct IUIAutomationCondition * *);
    HRESULT (* CreateAndConditionFromNativeArray)(struct IUIAutomation *, struct IUIAutomationCondition * *, int, struct IUIAutomationCondition * *);
    HRESULT (* CreateOrCondition)(struct IUIAutomation *, struct IUIAutomationCondition *, struct IUIAutomationCondition *, struct IUIAutomationCondition * *);
    HRESULT (* CreateOrConditionFromArray)(struct IUIAutomation *, SAFEARRAY *, struct IUIAutomationCondition * *);
    HRESULT (* CreateOrConditionFromNativeArray)(struct IUIAutomation *, struct IUIAutomationCondition * *, int, struct IUIAutomationCondition * *);
    HRESULT (* CreateNotCondition)(struct IUIAutomation *, struct IUIAutomationCondition *, struct IUIAutomationCondition * *);
    HRESULT (* AddAutomationEventHandler)(struct IUIAutomation *, EVENTID, struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCacheRequest *, struct IUIAutomationEventHandler *);
    HRESULT (* RemoveAutomationEventHandler)(struct IUIAutomation *, EVENTID, struct IUIAutomationElement *, struct IUIAutomationEventHandler *);
    HRESULT (* AddPropertyChangedEventHandlerNativeArray)(struct IUIAutomation *, struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCacheRequest *, struct IUIAutomationPropertyChangedEventHandler *, PROPERTYID *, int);
    HRESULT (* AddPropertyChangedEventHandler)(struct IUIAutomation *, struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCacheRequest *, struct IUIAutomationPropertyChangedEventHandler *, SAFEARRAY *);
    HRESULT (* RemovePropertyChangedEventHandler)(struct IUIAutomation *, struct IUIAutomationElement *, struct IUIAutomationPropertyChangedEventHandler *);
    HRESULT (* AddStructureChangedEventHandler)(struct IUIAutomation *, struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCacheRequest *, struct IUIAutomationStructureChangedEventHandler *);
    HRESULT (* RemoveStructureChangedEventHandler)(struct IUIAutomation *, struct IUIAutomationElement *, struct IUIAutomationStructureChangedEventHandler *);
    HRESULT (* AddFocusChangedEventHandler)(struct IUIAutomation *, struct IUIAutomationCacheRequest *, struct IUIAutomationFocusChangedEventHandler *);
    HRESULT (* RemoveFocusChangedEventHandler)(struct IUIAutomation *, struct IUIAutomationFocusChangedEventHandler *);
    HRESULT (* RemoveAllEventHandlers)(struct IUIAutomation *);
    HRESULT (* IntNativeArrayToSafeArray)(struct IUIAutomation *, int *, int, SAFEARRAY * *);
    HRESULT (* IntSafeArrayToNativeArray)(struct IUIAutomation *, SAFEARRAY *, int * *, int *);
    HRESULT (* RectToVariant)(struct IUIAutomation *, RECT, VARIANT *);
    HRESULT (* VariantToRect)(struct IUIAutomation *, VARIANT, RECT *);
    HRESULT (* SafeArrayToRectNativeArray)(struct IUIAutomation *, SAFEARRAY *, RECT * *, int *);
    HRESULT (* CreateProxyFactoryEntry)(struct IUIAutomation *, struct IUIAutomationProxyFactory *, struct IUIAutomationProxyFactoryEntry * *);
    HRESULT (* get_ProxyFactoryMapping)(struct IUIAutomation *, struct IUIAutomationProxyFactoryMapping * *);
    HRESULT (* GetPropertyProgrammaticName)(struct IUIAutomation *, PROPERTYID, BSTR *);
    HRESULT (* GetPatternProgrammaticName)(struct IUIAutomation *, PATTERNID, BSTR *);
    HRESULT (* PollForPotentialSupportedPatterns)(struct IUIAutomation *, struct IUIAutomationElement *, SAFEARRAY * *, SAFEARRAY * *);
    HRESULT (* PollForPotentialSupportedProperties)(struct IUIAutomation *, struct IUIAutomationElement *, SAFEARRAY * *, SAFEARRAY * *);
    HRESULT (* CheckNotSupported)(struct IUIAutomation *, VARIANT, BOOL *);
    HRESULT (* get_ReservedNotSupportedValue)(struct IUIAutomation *, struct IUnknown * *);
    HRESULT (* get_ReservedMixedAttributeValue)(struct IUIAutomation *, struct IUnknown * *);
    HRESULT (* ElementFromIAccessible)(struct IUIAutomation *, struct IAccessible *, int, struct IUIAutomationElement * *);
    HRESULT (* ElementFromIAccessibleBuildCache)(struct IUIAutomation *, struct IAccessible *, int, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
};

struct IUIAutomationStructureChangedEventHandlerVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationStructureChangedEventHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationStructureChangedEventHandler *);
    ULONG (* Release)(struct IUIAutomationStructureChangedEventHandler *);
    HRESULT (* HandleStructureChangedEvent)(struct IUIAutomationStructureChangedEventHandler *, struct IUIAutomationElement *, enum StructureChangeType, SAFEARRAY *);
};

struct IUIAutomationProxyFactoryMappingVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationProxyFactoryMapping *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationProxyFactoryMapping *);
    ULONG (* Release)(struct IUIAutomationProxyFactoryMapping *);
    HRESULT (* get_Count)(struct IUIAutomationProxyFactoryMapping *, UINT *);
    HRESULT (* GetTable)(struct IUIAutomationProxyFactoryMapping *, SAFEARRAY * *);
    HRESULT (* GetEntry)(struct IUIAutomationProxyFactoryMapping *, UINT, struct IUIAutomationProxyFactoryEntry * *);
    HRESULT (* SetTable)(struct IUIAutomationProxyFactoryMapping *, SAFEARRAY *);
    HRESULT (* InsertEntries)(struct IUIAutomationProxyFactoryMapping *, UINT, SAFEARRAY *);
    HRESULT (* InsertEntry)(struct IUIAutomationProxyFactoryMapping *, UINT, struct IUIAutomationProxyFactoryEntry *);
    HRESULT (* RemoveEntry)(struct IUIAutomationProxyFactoryMapping *, UINT);
    HRESULT (* ClearTable)(struct IUIAutomationProxyFactoryMapping *);
    HRESULT (* RestoreDefaultTable)(struct IUIAutomationProxyFactoryMapping *);
};

struct IUIAutomationElementArrayVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationElementArray *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationElementArray *);
    ULONG (* Release)(struct IUIAutomationElementArray *);
    HRESULT (* get_Length)(struct IUIAutomationElementArray *, int *);
    HRESULT (* GetElement)(struct IUIAutomationElementArray *, int, struct IUIAutomationElement * *);
};

struct IUIAutomationConditionVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationCondition *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationCondition *);
    ULONG (* Release)(struct IUIAutomationCondition *);
};

struct IUIAutomation {
    struct IUIAutomationVtbl * lpVtbl;
};

struct IUIAutomationElementArray {
    struct IUIAutomationElementArrayVtbl * lpVtbl;
};

struct IUIAutomationTreeWalkerVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTreeWalker *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTreeWalker *);
    ULONG (* Release)(struct IUIAutomationTreeWalker *);
    HRESULT (* GetParentElement)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* GetFirstChildElement)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* GetLastChildElement)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* GetNextSiblingElement)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* GetPreviousSiblingElement)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* NormalizeElement)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* GetParentElementBuildCache)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* GetFirstChildElementBuildCache)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* GetLastChildElementBuildCache)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* GetNextSiblingElementBuildCache)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* GetPreviousSiblingElementBuildCache)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* NormalizeElementBuildCache)(struct IUIAutomationTreeWalker *, struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* get_Condition)(struct IUIAutomationTreeWalker *, struct IUIAutomationCondition * *);
};

struct IUIAutomationCacheRequestVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationCacheRequest *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationCacheRequest *);
    ULONG (* Release)(struct IUIAutomationCacheRequest *);
    HRESULT (* AddProperty)(struct IUIAutomationCacheRequest *, PROPERTYID);
    HRESULT (* AddPattern)(struct IUIAutomationCacheRequest *, PATTERNID);
    HRESULT (* Clone)(struct IUIAutomationCacheRequest *, struct IUIAutomationCacheRequest * *);
    HRESULT (* get_TreeScope)(struct IUIAutomationCacheRequest *, enum TreeScope *);
    HRESULT (* put_TreeScope)(struct IUIAutomationCacheRequest *, enum TreeScope);
    HRESULT (* get_TreeFilter)(struct IUIAutomationCacheRequest *, struct IUIAutomationCondition * *);
    HRESULT (* put_TreeFilter)(struct IUIAutomationCacheRequest *, struct IUIAutomationCondition *);
    HRESULT (* get_AutomationElementMode)(struct IUIAutomationCacheRequest *, enum AutomationElementMode *);
    HRESULT (* put_AutomationElementMode)(struct IUIAutomationCacheRequest *, enum AutomationElementMode);
};

struct IUIAutomationElementVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationElement *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationElement *);
    ULONG (* Release)(struct IUIAutomationElement *);
    HRESULT (* SetFocus)(struct IUIAutomationElement *);
    HRESULT (* GetRuntimeId)(struct IUIAutomationElement *, SAFEARRAY * *);
    HRESULT (* FindFirst)(struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCondition *, struct IUIAutomationElement * *);
    HRESULT (* FindAll)(struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCondition *, struct IUIAutomationElementArray * *);
    HRESULT (* FindFirstBuildCache)(struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCondition *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* FindAllBuildCache)(struct IUIAutomationElement *, enum TreeScope, struct IUIAutomationCondition *, struct IUIAutomationCacheRequest *, struct IUIAutomationElementArray * *);
    HRESULT (* BuildUpdatedCache)(struct IUIAutomationElement *, struct IUIAutomationCacheRequest *, struct IUIAutomationElement * *);
    HRESULT (* GetCurrentPropertyValue)(struct IUIAutomationElement *, PROPERTYID, VARIANT *);
    HRESULT (* GetCurrentPropertyValueEx)(struct IUIAutomationElement *, PROPERTYID, BOOL, VARIANT *);
    HRESULT (* GetCachedPropertyValue)(struct IUIAutomationElement *, PROPERTYID, VARIANT *);
    HRESULT (* GetCachedPropertyValueEx)(struct IUIAutomationElement *, PROPERTYID, BOOL, VARIANT *);
    HRESULT (* GetCurrentPatternAs)(struct IUIAutomationElement *, PATTERNID, IID *, void * *);
    HRESULT (* GetCachedPatternAs)(struct IUIAutomationElement *, PATTERNID, IID *, void * *);
    HRESULT (* GetCurrentPattern)(struct IUIAutomationElement *, PATTERNID, struct IUnknown * *);
    HRESULT (* GetCachedPattern)(struct IUIAutomationElement *, PATTERNID, struct IUnknown * *);
    HRESULT (* GetCachedParent)(struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* GetCachedChildren)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentProcessId)(struct IUIAutomationElement *, int *);
    HRESULT (* get_CurrentControlType)(struct IUIAutomationElement *, CONTROLTYPEID *);
    HRESULT (* get_CurrentLocalizedControlType)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentName)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentAcceleratorKey)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentAccessKey)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentHasKeyboardFocus)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentIsKeyboardFocusable)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentIsEnabled)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentAutomationId)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentClassName)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentHelpText)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentCulture)(struct IUIAutomationElement *, int *);
    HRESULT (* get_CurrentIsControlElement)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentIsContentElement)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentIsPassword)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentNativeWindowHandle)(struct IUIAutomationElement *, UIA_HWND *);
    HRESULT (* get_CurrentItemType)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentIsOffscreen)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentOrientation)(struct IUIAutomationElement *, enum OrientationType *);
    HRESULT (* get_CurrentFrameworkId)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentIsRequiredForForm)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentItemStatus)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentBoundingRectangle)(struct IUIAutomationElement *, RECT *);
    HRESULT (* get_CurrentLabeledBy)(struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* get_CurrentAriaRole)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentAriaProperties)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CurrentIsDataValidForForm)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CurrentControllerFor)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentDescribedBy)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentFlowsTo)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentProviderDescription)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedProcessId)(struct IUIAutomationElement *, int *);
    HRESULT (* get_CachedControlType)(struct IUIAutomationElement *, CONTROLTYPEID *);
    HRESULT (* get_CachedLocalizedControlType)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedName)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedAcceleratorKey)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedAccessKey)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedHasKeyboardFocus)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedIsKeyboardFocusable)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedIsEnabled)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedAutomationId)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedClassName)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedHelpText)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedCulture)(struct IUIAutomationElement *, int *);
    HRESULT (* get_CachedIsControlElement)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedIsContentElement)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedIsPassword)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedNativeWindowHandle)(struct IUIAutomationElement *, UIA_HWND *);
    HRESULT (* get_CachedItemType)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedIsOffscreen)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedOrientation)(struct IUIAutomationElement *, enum OrientationType *);
    HRESULT (* get_CachedFrameworkId)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedIsRequiredForForm)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedItemStatus)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedBoundingRectangle)(struct IUIAutomationElement *, RECT *);
    HRESULT (* get_CachedLabeledBy)(struct IUIAutomationElement *, struct IUIAutomationElement * *);
    HRESULT (* get_CachedAriaRole)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedAriaProperties)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* get_CachedIsDataValidForForm)(struct IUIAutomationElement *, BOOL *);
    HRESULT (* get_CachedControllerFor)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CachedDescribedBy)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CachedFlowsTo)(struct IUIAutomationElement *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CachedProviderDescription)(struct IUIAutomationElement *, BSTR *);
    HRESULT (* GetClickablePoint)(struct IUIAutomationElement *, POINT *, BOOL *);
};

struct IUIAutomationProxyFactoryEntryVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationProxyFactoryEntry *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationProxyFactoryEntry *);
    ULONG (* Release)(struct IUIAutomationProxyFactoryEntry *);
    HRESULT (* get_ProxyFactory)(struct IUIAutomationProxyFactoryEntry *, struct IUIAutomationProxyFactory * *);
    HRESULT (* get_ClassName)(struct IUIAutomationProxyFactoryEntry *, BSTR *);
    HRESULT (* get_ImageName)(struct IUIAutomationProxyFactoryEntry *, BSTR *);
    HRESULT (* get_AllowSubstringMatch)(struct IUIAutomationProxyFactoryEntry *, BOOL *);
    HRESULT (* get_CanCheckBaseClass)(struct IUIAutomationProxyFactoryEntry *, BOOL *);
    HRESULT (* get_NeedsAdviseEvents)(struct IUIAutomationProxyFactoryEntry *, BOOL *);
    HRESULT (* put_ClassName)(struct IUIAutomationProxyFactoryEntry *, LPCWSTR);
    HRESULT (* put_ImageName)(struct IUIAutomationProxyFactoryEntry *, LPCWSTR);
    HRESULT (* put_AllowSubstringMatch)(struct IUIAutomationProxyFactoryEntry *, BOOL);
    HRESULT (* put_CanCheckBaseClass)(struct IUIAutomationProxyFactoryEntry *, BOOL);
    HRESULT (* put_NeedsAdviseEvents)(struct IUIAutomationProxyFactoryEntry *, BOOL);
    HRESULT (* SetWinEventsForAutomationEvent)(struct IUIAutomationProxyFactoryEntry *, EVENTID, PROPERTYID, SAFEARRAY *);
    HRESULT (* GetWinEventsForAutomationEvent)(struct IUIAutomationProxyFactoryEntry *, EVENTID, PROPERTYID, SAFEARRAY * *);
};

struct IUIAutomationStructureChangedEventHandler {
    struct IUIAutomationStructureChangedEventHandlerVtbl * lpVtbl;
};

typedef struct IUIAutomationAndCondition IUIAutomationAndCondition, *PIUIAutomationAndCondition;

typedef struct IUIAutomationAndConditionVtbl IUIAutomationAndConditionVtbl, *PIUIAutomationAndConditionVtbl;

struct IUIAutomationAndCondition {
    struct IUIAutomationAndConditionVtbl * lpVtbl;
};

struct IUIAutomationAndConditionVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationAndCondition *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationAndCondition *);
    ULONG (* Release)(struct IUIAutomationAndCondition *);
    HRESULT (* get_ChildCount)(struct IUIAutomationAndCondition *, int *);
    HRESULT (* GetChildrenAsNativeArray)(struct IUIAutomationAndCondition *, struct IUIAutomationCondition * * *, int *);
    HRESULT (* GetChildren)(struct IUIAutomationAndCondition *, SAFEARRAY * *);
};

typedef struct IUIAutomationBoolCondition IUIAutomationBoolCondition, *PIUIAutomationBoolCondition;

typedef struct IUIAutomationBoolConditionVtbl IUIAutomationBoolConditionVtbl, *PIUIAutomationBoolConditionVtbl;

struct IUIAutomationBoolConditionVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationBoolCondition *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationBoolCondition *);
    ULONG (* Release)(struct IUIAutomationBoolCondition *);
    HRESULT (* get_BooleanValue)(struct IUIAutomationBoolCondition *, BOOL *);
};

struct IUIAutomationBoolCondition {
    struct IUIAutomationBoolConditionVtbl * lpVtbl;
};

typedef struct IUIAutomationDockPattern IUIAutomationDockPattern, *PIUIAutomationDockPattern;

typedef struct IUIAutomationDockPatternVtbl IUIAutomationDockPatternVtbl, *PIUIAutomationDockPatternVtbl;

typedef enum DockPosition {
    DockPosition_Bottom=2,
    DockPosition_Fill=4,
    DockPosition_Left=1,
    DockPosition_None=5,
    DockPosition_Right=3,
    DockPosition_Top=0
} DockPosition;

struct IUIAutomationDockPattern {
    struct IUIAutomationDockPatternVtbl * lpVtbl;
};

struct IUIAutomationDockPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationDockPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationDockPattern *);
    ULONG (* Release)(struct IUIAutomationDockPattern *);
    HRESULT (* SetDockPosition)(struct IUIAutomationDockPattern *, enum DockPosition);
    HRESULT (* get_CurrentDockPosition)(struct IUIAutomationDockPattern *, enum DockPosition *);
    HRESULT (* get_CachedDockPosition)(struct IUIAutomationDockPattern *, enum DockPosition *);
};

typedef struct IUIAutomationExpandCollapsePattern IUIAutomationExpandCollapsePattern, *PIUIAutomationExpandCollapsePattern;

typedef struct IUIAutomationExpandCollapsePatternVtbl IUIAutomationExpandCollapsePatternVtbl, *PIUIAutomationExpandCollapsePatternVtbl;

typedef enum ExpandCollapseState {
    ExpandCollapseState_Collapsed=0,
    ExpandCollapseState_Expanded=1,
    ExpandCollapseState_LeafNode=3,
    ExpandCollapseState_PartiallyExpanded=2
} ExpandCollapseState;

struct IUIAutomationExpandCollapsePattern {
    struct IUIAutomationExpandCollapsePatternVtbl * lpVtbl;
};

struct IUIAutomationExpandCollapsePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationExpandCollapsePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationExpandCollapsePattern *);
    ULONG (* Release)(struct IUIAutomationExpandCollapsePattern *);
    HRESULT (* Expand)(struct IUIAutomationExpandCollapsePattern *);
    HRESULT (* Collapse)(struct IUIAutomationExpandCollapsePattern *);
    HRESULT (* get_CurrentExpandCollapseState)(struct IUIAutomationExpandCollapsePattern *, enum ExpandCollapseState *);
    HRESULT (* get_CachedExpandCollapseState)(struct IUIAutomationExpandCollapsePattern *, enum ExpandCollapseState *);
};

typedef struct IUIAutomationGridItemPattern IUIAutomationGridItemPattern, *PIUIAutomationGridItemPattern;

typedef struct IUIAutomationGridItemPatternVtbl IUIAutomationGridItemPatternVtbl, *PIUIAutomationGridItemPatternVtbl;

struct IUIAutomationGridItemPattern {
    struct IUIAutomationGridItemPatternVtbl * lpVtbl;
};

struct IUIAutomationGridItemPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationGridItemPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationGridItemPattern *);
    ULONG (* Release)(struct IUIAutomationGridItemPattern *);
    HRESULT (* get_CurrentContainingGrid)(struct IUIAutomationGridItemPattern *, struct IUIAutomationElement * *);
    HRESULT (* get_CurrentRow)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CurrentColumn)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CurrentRowSpan)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CurrentColumnSpan)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CachedContainingGrid)(struct IUIAutomationGridItemPattern *, struct IUIAutomationElement * *);
    HRESULT (* get_CachedRow)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CachedColumn)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CachedRowSpan)(struct IUIAutomationGridItemPattern *, int *);
    HRESULT (* get_CachedColumnSpan)(struct IUIAutomationGridItemPattern *, int *);
};

typedef struct IUIAutomationGridPattern IUIAutomationGridPattern, *PIUIAutomationGridPattern;

typedef struct IUIAutomationGridPatternVtbl IUIAutomationGridPatternVtbl, *PIUIAutomationGridPatternVtbl;

struct IUIAutomationGridPattern {
    struct IUIAutomationGridPatternVtbl * lpVtbl;
};

struct IUIAutomationGridPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationGridPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationGridPattern *);
    ULONG (* Release)(struct IUIAutomationGridPattern *);
    HRESULT (* GetItem)(struct IUIAutomationGridPattern *, int, int, struct IUIAutomationElement * *);
    HRESULT (* get_CurrentRowCount)(struct IUIAutomationGridPattern *, int *);
    HRESULT (* get_CurrentColumnCount)(struct IUIAutomationGridPattern *, int *);
    HRESULT (* get_CachedRowCount)(struct IUIAutomationGridPattern *, int *);
    HRESULT (* get_CachedColumnCount)(struct IUIAutomationGridPattern *, int *);
};

typedef struct IUIAutomationInvokePattern IUIAutomationInvokePattern, *PIUIAutomationInvokePattern;

typedef struct IUIAutomationInvokePatternVtbl IUIAutomationInvokePatternVtbl, *PIUIAutomationInvokePatternVtbl;

struct IUIAutomationInvokePattern {
    struct IUIAutomationInvokePatternVtbl * lpVtbl;
};

struct IUIAutomationInvokePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationInvokePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationInvokePattern *);
    ULONG (* Release)(struct IUIAutomationInvokePattern *);
    HRESULT (* Invoke)(struct IUIAutomationInvokePattern *);
};

typedef struct IUIAutomationItemContainerPattern IUIAutomationItemContainerPattern, *PIUIAutomationItemContainerPattern;

typedef struct IUIAutomationItemContainerPatternVtbl IUIAutomationItemContainerPatternVtbl, *PIUIAutomationItemContainerPatternVtbl;

struct IUIAutomationItemContainerPattern {
    struct IUIAutomationItemContainerPatternVtbl * lpVtbl;
};

struct IUIAutomationItemContainerPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationItemContainerPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationItemContainerPattern *);
    ULONG (* Release)(struct IUIAutomationItemContainerPattern *);
    HRESULT (* FindItemByProperty)(struct IUIAutomationItemContainerPattern *, struct IUIAutomationElement *, PROPERTYID, VARIANT, struct IUIAutomationElement * *);
};

typedef struct IUIAutomationLegacyIAccessiblePattern IUIAutomationLegacyIAccessiblePattern, *PIUIAutomationLegacyIAccessiblePattern;

typedef struct IUIAutomationLegacyIAccessiblePatternVtbl IUIAutomationLegacyIAccessiblePatternVtbl, *PIUIAutomationLegacyIAccessiblePatternVtbl;

struct IUIAutomationLegacyIAccessiblePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationLegacyIAccessiblePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationLegacyIAccessiblePattern *);
    ULONG (* Release)(struct IUIAutomationLegacyIAccessiblePattern *);
    HRESULT (* Select)(struct IUIAutomationLegacyIAccessiblePattern *, long);
    HRESULT (* DoDefaultAction)(struct IUIAutomationLegacyIAccessiblePattern *);
    HRESULT (* SetValue)(struct IUIAutomationLegacyIAccessiblePattern *, LPCWSTR);
    HRESULT (* get_CurrentChildId)(struct IUIAutomationLegacyIAccessiblePattern *, int *);
    HRESULT (* get_CurrentName)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CurrentValue)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CurrentDescription)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CurrentRole)(struct IUIAutomationLegacyIAccessiblePattern *, DWORD *);
    HRESULT (* get_CurrentState)(struct IUIAutomationLegacyIAccessiblePattern *, DWORD *);
    HRESULT (* get_CurrentHelp)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CurrentKeyboardShortcut)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* GetCurrentSelection)(struct IUIAutomationLegacyIAccessiblePattern *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentDefaultAction)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CachedChildId)(struct IUIAutomationLegacyIAccessiblePattern *, int *);
    HRESULT (* get_CachedName)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CachedValue)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CachedDescription)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CachedRole)(struct IUIAutomationLegacyIAccessiblePattern *, DWORD *);
    HRESULT (* get_CachedState)(struct IUIAutomationLegacyIAccessiblePattern *, DWORD *);
    HRESULT (* get_CachedHelp)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* get_CachedKeyboardShortcut)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* GetCachedSelection)(struct IUIAutomationLegacyIAccessiblePattern *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CachedDefaultAction)(struct IUIAutomationLegacyIAccessiblePattern *, BSTR *);
    HRESULT (* GetIAccessible)(struct IUIAutomationLegacyIAccessiblePattern *, struct IAccessible * *);
};

struct IUIAutomationLegacyIAccessiblePattern {
    struct IUIAutomationLegacyIAccessiblePatternVtbl * lpVtbl;
};

typedef struct IUIAutomationMultipleViewPattern IUIAutomationMultipleViewPattern, *PIUIAutomationMultipleViewPattern;

typedef struct IUIAutomationMultipleViewPatternVtbl IUIAutomationMultipleViewPatternVtbl, *PIUIAutomationMultipleViewPatternVtbl;

struct IUIAutomationMultipleViewPattern {
    struct IUIAutomationMultipleViewPatternVtbl * lpVtbl;
};

struct IUIAutomationMultipleViewPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationMultipleViewPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationMultipleViewPattern *);
    ULONG (* Release)(struct IUIAutomationMultipleViewPattern *);
    HRESULT (* GetViewName)(struct IUIAutomationMultipleViewPattern *, int, BSTR *);
    HRESULT (* SetCurrentView)(struct IUIAutomationMultipleViewPattern *, int);
    HRESULT (* get_CurrentCurrentView)(struct IUIAutomationMultipleViewPattern *, int *);
    HRESULT (* GetCurrentSupportedViews)(struct IUIAutomationMultipleViewPattern *, SAFEARRAY * *);
    HRESULT (* get_CachedCurrentView)(struct IUIAutomationMultipleViewPattern *, int *);
    HRESULT (* GetCachedSupportedViews)(struct IUIAutomationMultipleViewPattern *, SAFEARRAY * *);
};

typedef struct IUIAutomationNotCondition IUIAutomationNotCondition, *PIUIAutomationNotCondition;

typedef struct IUIAutomationNotConditionVtbl IUIAutomationNotConditionVtbl, *PIUIAutomationNotConditionVtbl;

struct IUIAutomationNotConditionVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationNotCondition *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationNotCondition *);
    ULONG (* Release)(struct IUIAutomationNotCondition *);
    HRESULT (* GetChild)(struct IUIAutomationNotCondition *, struct IUIAutomationCondition * *);
};

struct IUIAutomationNotCondition {
    struct IUIAutomationNotConditionVtbl * lpVtbl;
};

typedef struct IUIAutomationOrCondition IUIAutomationOrCondition, *PIUIAutomationOrCondition;

typedef struct IUIAutomationOrConditionVtbl IUIAutomationOrConditionVtbl, *PIUIAutomationOrConditionVtbl;

struct IUIAutomationOrConditionVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationOrCondition *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationOrCondition *);
    ULONG (* Release)(struct IUIAutomationOrCondition *);
    HRESULT (* get_ChildCount)(struct IUIAutomationOrCondition *, int *);
    HRESULT (* GetChildrenAsNativeArray)(struct IUIAutomationOrCondition *, struct IUIAutomationCondition * * *, int *);
    HRESULT (* GetChildren)(struct IUIAutomationOrCondition *, SAFEARRAY * *);
};

struct IUIAutomationOrCondition {
    struct IUIAutomationOrConditionVtbl * lpVtbl;
};

typedef struct IUIAutomationPropertyCondition IUIAutomationPropertyCondition, *PIUIAutomationPropertyCondition;

typedef struct IUIAutomationPropertyConditionVtbl IUIAutomationPropertyConditionVtbl, *PIUIAutomationPropertyConditionVtbl;

struct IUIAutomationPropertyCondition {
    struct IUIAutomationPropertyConditionVtbl * lpVtbl;
};

struct IUIAutomationPropertyConditionVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationPropertyCondition *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationPropertyCondition *);
    ULONG (* Release)(struct IUIAutomationPropertyCondition *);
    HRESULT (* get_PropertyId)(struct IUIAutomationPropertyCondition *, PROPERTYID *);
    HRESULT (* get_PropertyValue)(struct IUIAutomationPropertyCondition *, VARIANT *);
    HRESULT (* get_PropertyConditionFlags)(struct IUIAutomationPropertyCondition *, enum PropertyConditionFlags *);
};

typedef struct IUIAutomationRangeValuePattern IUIAutomationRangeValuePattern, *PIUIAutomationRangeValuePattern;

typedef struct IUIAutomationRangeValuePatternVtbl IUIAutomationRangeValuePatternVtbl, *PIUIAutomationRangeValuePatternVtbl;

struct IUIAutomationRangeValuePattern {
    struct IUIAutomationRangeValuePatternVtbl * lpVtbl;
};

struct IUIAutomationRangeValuePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationRangeValuePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationRangeValuePattern *);
    ULONG (* Release)(struct IUIAutomationRangeValuePattern *);
    HRESULT (* SetValue)(struct IUIAutomationRangeValuePattern *, double);
    HRESULT (* get_CurrentValue)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CurrentIsReadOnly)(struct IUIAutomationRangeValuePattern *, BOOL *);
    HRESULT (* get_CurrentMaximum)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CurrentMinimum)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CurrentLargeChange)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CurrentSmallChange)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CachedValue)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CachedIsReadOnly)(struct IUIAutomationRangeValuePattern *, BOOL *);
    HRESULT (* get_CachedMaximum)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CachedMinimum)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CachedLargeChange)(struct IUIAutomationRangeValuePattern *, double *);
    HRESULT (* get_CachedSmallChange)(struct IUIAutomationRangeValuePattern *, double *);
};

typedef struct IUIAutomationScrollItemPattern IUIAutomationScrollItemPattern, *PIUIAutomationScrollItemPattern;

typedef struct IUIAutomationScrollItemPatternVtbl IUIAutomationScrollItemPatternVtbl, *PIUIAutomationScrollItemPatternVtbl;

struct IUIAutomationScrollItemPattern {
    struct IUIAutomationScrollItemPatternVtbl * lpVtbl;
};

struct IUIAutomationScrollItemPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationScrollItemPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationScrollItemPattern *);
    ULONG (* Release)(struct IUIAutomationScrollItemPattern *);
    HRESULT (* ScrollIntoView)(struct IUIAutomationScrollItemPattern *);
};

typedef struct IUIAutomationScrollPattern IUIAutomationScrollPattern, *PIUIAutomationScrollPattern;

typedef struct IUIAutomationScrollPatternVtbl IUIAutomationScrollPatternVtbl, *PIUIAutomationScrollPatternVtbl;

typedef enum ScrollAmount {
    ScrollAmount_LargeDecrement=0,
    ScrollAmount_LargeIncrement=3,
    ScrollAmount_NoAmount=2,
    ScrollAmount_SmallDecrement=1,
    ScrollAmount_SmallIncrement=4
} ScrollAmount;

struct IUIAutomationScrollPattern {
    struct IUIAutomationScrollPatternVtbl * lpVtbl;
};

struct IUIAutomationScrollPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationScrollPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationScrollPattern *);
    ULONG (* Release)(struct IUIAutomationScrollPattern *);
    HRESULT (* Scroll)(struct IUIAutomationScrollPattern *, enum ScrollAmount, enum ScrollAmount);
    HRESULT (* SetScrollPercent)(struct IUIAutomationScrollPattern *, double, double);
    HRESULT (* get_CurrentHorizontalScrollPercent)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CurrentVerticalScrollPercent)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CurrentHorizontalViewSize)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CurrentVerticalViewSize)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CurrentHorizontallyScrollable)(struct IUIAutomationScrollPattern *, BOOL *);
    HRESULT (* get_CurrentVerticallyScrollable)(struct IUIAutomationScrollPattern *, BOOL *);
    HRESULT (* get_CachedHorizontalScrollPercent)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CachedVerticalScrollPercent)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CachedHorizontalViewSize)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CachedVerticalViewSize)(struct IUIAutomationScrollPattern *, double *);
    HRESULT (* get_CachedHorizontallyScrollable)(struct IUIAutomationScrollPattern *, BOOL *);
    HRESULT (* get_CachedVerticallyScrollable)(struct IUIAutomationScrollPattern *, BOOL *);
};

typedef struct IUIAutomationSelectionItemPattern IUIAutomationSelectionItemPattern, *PIUIAutomationSelectionItemPattern;

typedef struct IUIAutomationSelectionItemPatternVtbl IUIAutomationSelectionItemPatternVtbl, *PIUIAutomationSelectionItemPatternVtbl;

struct IUIAutomationSelectionItemPattern {
    struct IUIAutomationSelectionItemPatternVtbl * lpVtbl;
};

struct IUIAutomationSelectionItemPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationSelectionItemPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationSelectionItemPattern *);
    ULONG (* Release)(struct IUIAutomationSelectionItemPattern *);
    HRESULT (* Select)(struct IUIAutomationSelectionItemPattern *);
    HRESULT (* AddToSelection)(struct IUIAutomationSelectionItemPattern *);
    HRESULT (* RemoveFromSelection)(struct IUIAutomationSelectionItemPattern *);
    HRESULT (* get_CurrentIsSelected)(struct IUIAutomationSelectionItemPattern *, BOOL *);
    HRESULT (* get_CurrentSelectionContainer)(struct IUIAutomationSelectionItemPattern *, struct IUIAutomationElement * *);
    HRESULT (* get_CachedIsSelected)(struct IUIAutomationSelectionItemPattern *, BOOL *);
    HRESULT (* get_CachedSelectionContainer)(struct IUIAutomationSelectionItemPattern *, struct IUIAutomationElement * *);
};

typedef struct IUIAutomationSelectionPattern IUIAutomationSelectionPattern, *PIUIAutomationSelectionPattern;

typedef struct IUIAutomationSelectionPatternVtbl IUIAutomationSelectionPatternVtbl, *PIUIAutomationSelectionPatternVtbl;

struct IUIAutomationSelectionPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationSelectionPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationSelectionPattern *);
    ULONG (* Release)(struct IUIAutomationSelectionPattern *);
    HRESULT (* GetCurrentSelection)(struct IUIAutomationSelectionPattern *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentCanSelectMultiple)(struct IUIAutomationSelectionPattern *, BOOL *);
    HRESULT (* get_CurrentIsSelectionRequired)(struct IUIAutomationSelectionPattern *, BOOL *);
    HRESULT (* GetCachedSelection)(struct IUIAutomationSelectionPattern *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CachedCanSelectMultiple)(struct IUIAutomationSelectionPattern *, BOOL *);
    HRESULT (* get_CachedIsSelectionRequired)(struct IUIAutomationSelectionPattern *, BOOL *);
};

struct IUIAutomationSelectionPattern {
    struct IUIAutomationSelectionPatternVtbl * lpVtbl;
};

typedef struct IUIAutomationSynchronizedInputPattern IUIAutomationSynchronizedInputPattern, *PIUIAutomationSynchronizedInputPattern;

typedef struct IUIAutomationSynchronizedInputPatternVtbl IUIAutomationSynchronizedInputPatternVtbl, *PIUIAutomationSynchronizedInputPatternVtbl;

typedef enum SynchronizedInputType {
    SynchronizedInputType_KeyDown=2,
    SynchronizedInputType_KeyUp=1,
    SynchronizedInputType_LeftMouseDown=8,
    SynchronizedInputType_LeftMouseUp=4,
    SynchronizedInputType_RightMouseDown=32,
    SynchronizedInputType_RightMouseUp=16
} SynchronizedInputType;

struct IUIAutomationSynchronizedInputPattern {
    struct IUIAutomationSynchronizedInputPatternVtbl * lpVtbl;
};

struct IUIAutomationSynchronizedInputPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationSynchronizedInputPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationSynchronizedInputPattern *);
    ULONG (* Release)(struct IUIAutomationSynchronizedInputPattern *);
    HRESULT (* StartListening)(struct IUIAutomationSynchronizedInputPattern *, enum SynchronizedInputType);
    HRESULT (* Cancel)(struct IUIAutomationSynchronizedInputPattern *);
};

typedef struct IUIAutomationTableItemPattern IUIAutomationTableItemPattern, *PIUIAutomationTableItemPattern;

typedef struct IUIAutomationTableItemPatternVtbl IUIAutomationTableItemPatternVtbl, *PIUIAutomationTableItemPatternVtbl;

struct IUIAutomationTableItemPattern {
    struct IUIAutomationTableItemPatternVtbl * lpVtbl;
};

struct IUIAutomationTableItemPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTableItemPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTableItemPattern *);
    ULONG (* Release)(struct IUIAutomationTableItemPattern *);
    HRESULT (* GetCurrentRowHeaderItems)(struct IUIAutomationTableItemPattern *, struct IUIAutomationElementArray * *);
    HRESULT (* GetCurrentColumnHeaderItems)(struct IUIAutomationTableItemPattern *, struct IUIAutomationElementArray * *);
    HRESULT (* GetCachedRowHeaderItems)(struct IUIAutomationTableItemPattern *, struct IUIAutomationElementArray * *);
    HRESULT (* GetCachedColumnHeaderItems)(struct IUIAutomationTableItemPattern *, struct IUIAutomationElementArray * *);
};

typedef struct IUIAutomationTablePattern IUIAutomationTablePattern, *PIUIAutomationTablePattern;

typedef struct IUIAutomationTablePatternVtbl IUIAutomationTablePatternVtbl, *PIUIAutomationTablePatternVtbl;

typedef enum RowOrColumnMajor {
    RowOrColumnMajor_ColumnMajor=1,
    RowOrColumnMajor_Indeterminate=2,
    RowOrColumnMajor_RowMajor=0
} RowOrColumnMajor;

struct IUIAutomationTablePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTablePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTablePattern *);
    ULONG (* Release)(struct IUIAutomationTablePattern *);
    HRESULT (* GetCurrentRowHeaders)(struct IUIAutomationTablePattern *, struct IUIAutomationElementArray * *);
    HRESULT (* GetCurrentColumnHeaders)(struct IUIAutomationTablePattern *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CurrentRowOrColumnMajor)(struct IUIAutomationTablePattern *, enum RowOrColumnMajor *);
    HRESULT (* GetCachedRowHeaders)(struct IUIAutomationTablePattern *, struct IUIAutomationElementArray * *);
    HRESULT (* GetCachedColumnHeaders)(struct IUIAutomationTablePattern *, struct IUIAutomationElementArray * *);
    HRESULT (* get_CachedRowOrColumnMajor)(struct IUIAutomationTablePattern *, enum RowOrColumnMajor *);
};

struct IUIAutomationTablePattern {
    struct IUIAutomationTablePatternVtbl * lpVtbl;
};

typedef struct IUIAutomationTextPattern IUIAutomationTextPattern, *PIUIAutomationTextPattern;

typedef struct IUIAutomationTextPatternVtbl IUIAutomationTextPatternVtbl, *PIUIAutomationTextPatternVtbl;

typedef struct IUIAutomationTextRange IUIAutomationTextRange, *PIUIAutomationTextRange;

typedef struct IUIAutomationTextRangeArray IUIAutomationTextRangeArray, *PIUIAutomationTextRangeArray;

typedef enum SupportedTextSelection {
    SupportedTextSelection_Multiple=2,
    SupportedTextSelection_None=0,
    SupportedTextSelection_Single=1
} SupportedTextSelection;

typedef struct IUIAutomationTextRangeVtbl IUIAutomationTextRangeVtbl, *PIUIAutomationTextRangeVtbl;

typedef enum TextPatternRangeEndpoint {
    TextPatternRangeEndpoint_End=1,
    TextPatternRangeEndpoint_Start=0
} TextPatternRangeEndpoint;

typedef enum TextUnit {
    TextUnit_Character=0,
    TextUnit_Document=6,
    TextUnit_Format=1,
    TextUnit_Line=3,
    TextUnit_Page=5,
    TextUnit_Paragraph=4,
    TextUnit_Word=2
} TextUnit;

typedef int TEXTATTRIBUTEID;

typedef struct IUIAutomationTextRangeArrayVtbl IUIAutomationTextRangeArrayVtbl, *PIUIAutomationTextRangeArrayVtbl;

struct IUIAutomationTextPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTextPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTextPattern *);
    ULONG (* Release)(struct IUIAutomationTextPattern *);
    HRESULT (* RangeFromPoint)(struct IUIAutomationTextPattern *, POINT, struct IUIAutomationTextRange * *);
    HRESULT (* RangeFromChild)(struct IUIAutomationTextPattern *, struct IUIAutomationElement *, struct IUIAutomationTextRange * *);
    HRESULT (* GetSelection)(struct IUIAutomationTextPattern *, struct IUIAutomationTextRangeArray * *);
    HRESULT (* GetVisibleRanges)(struct IUIAutomationTextPattern *, struct IUIAutomationTextRangeArray * *);
    HRESULT (* get_DocumentRange)(struct IUIAutomationTextPattern *, struct IUIAutomationTextRange * *);
    HRESULT (* get_SupportedTextSelection)(struct IUIAutomationTextPattern *, enum SupportedTextSelection *);
};

struct IUIAutomationTextPattern {
    struct IUIAutomationTextPatternVtbl * lpVtbl;
};

struct IUIAutomationTextRange {
    struct IUIAutomationTextRangeVtbl * lpVtbl;
};

struct IUIAutomationTextRangeVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTextRange *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTextRange *);
    ULONG (* Release)(struct IUIAutomationTextRange *);
    HRESULT (* Clone)(struct IUIAutomationTextRange *, struct IUIAutomationTextRange * *);
    HRESULT (* Compare)(struct IUIAutomationTextRange *, struct IUIAutomationTextRange *, BOOL *);
    HRESULT (* CompareEndpoints)(struct IUIAutomationTextRange *, enum TextPatternRangeEndpoint, struct IUIAutomationTextRange *, enum TextPatternRangeEndpoint, int *);
    HRESULT (* ExpandToEnclosingUnit)(struct IUIAutomationTextRange *, enum TextUnit);
    HRESULT (* FindAttribute)(struct IUIAutomationTextRange *, TEXTATTRIBUTEID, VARIANT, BOOL, struct IUIAutomationTextRange * *);
    HRESULT (* FindTextA)(struct IUIAutomationTextRange *, BSTR, BOOL, BOOL, struct IUIAutomationTextRange * *);
    HRESULT (* GetAttributeValue)(struct IUIAutomationTextRange *, TEXTATTRIBUTEID, VARIANT *);
    HRESULT (* GetBoundingRectangles)(struct IUIAutomationTextRange *, SAFEARRAY * *);
    HRESULT (* GetEnclosingElement)(struct IUIAutomationTextRange *, struct IUIAutomationElement * *);
    HRESULT (* GetText)(struct IUIAutomationTextRange *, int, BSTR *);
    HRESULT (* Move)(struct IUIAutomationTextRange *, enum TextUnit, int, int *);
    HRESULT (* MoveEndpointByUnit)(struct IUIAutomationTextRange *, enum TextPatternRangeEndpoint, enum TextUnit, int, int *);
    HRESULT (* MoveEndpointByRange)(struct IUIAutomationTextRange *, enum TextPatternRangeEndpoint, struct IUIAutomationTextRange *, enum TextPatternRangeEndpoint);
    HRESULT (* Select)(struct IUIAutomationTextRange *);
    HRESULT (* AddToSelection)(struct IUIAutomationTextRange *);
    HRESULT (* RemoveFromSelection)(struct IUIAutomationTextRange *);
    HRESULT (* ScrollIntoView)(struct IUIAutomationTextRange *, BOOL);
    HRESULT (* GetChildren)(struct IUIAutomationTextRange *, struct IUIAutomationElementArray * *);
};

struct IUIAutomationTextRangeArrayVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTextRangeArray *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTextRangeArray *);
    ULONG (* Release)(struct IUIAutomationTextRangeArray *);
    HRESULT (* get_Length)(struct IUIAutomationTextRangeArray *, int *);
    HRESULT (* GetElement)(struct IUIAutomationTextRangeArray *, int, struct IUIAutomationTextRange * *);
};

struct IUIAutomationTextRangeArray {
    struct IUIAutomationTextRangeArrayVtbl * lpVtbl;
};

typedef struct IUIAutomationTogglePattern IUIAutomationTogglePattern, *PIUIAutomationTogglePattern;

typedef struct IUIAutomationTogglePatternVtbl IUIAutomationTogglePatternVtbl, *PIUIAutomationTogglePatternVtbl;

typedef enum ToggleState {
    ToggleState_Indeterminate=2,
    ToggleState_Off=0,
    ToggleState_On=1
} ToggleState;

struct IUIAutomationTogglePattern {
    struct IUIAutomationTogglePatternVtbl * lpVtbl;
};

struct IUIAutomationTogglePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTogglePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTogglePattern *);
    ULONG (* Release)(struct IUIAutomationTogglePattern *);
    HRESULT (* Toggle)(struct IUIAutomationTogglePattern *);
    HRESULT (* get_CurrentToggleState)(struct IUIAutomationTogglePattern *, enum ToggleState *);
    HRESULT (* get_CachedToggleState)(struct IUIAutomationTogglePattern *, enum ToggleState *);
};

typedef struct IUIAutomationTransformPattern IUIAutomationTransformPattern, *PIUIAutomationTransformPattern;

typedef struct IUIAutomationTransformPatternVtbl IUIAutomationTransformPatternVtbl, *PIUIAutomationTransformPatternVtbl;

struct IUIAutomationTransformPattern {
    struct IUIAutomationTransformPatternVtbl * lpVtbl;
};

struct IUIAutomationTransformPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationTransformPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationTransformPattern *);
    ULONG (* Release)(struct IUIAutomationTransformPattern *);
    HRESULT (* Move)(struct IUIAutomationTransformPattern *, double, double);
    HRESULT (* Resize)(struct IUIAutomationTransformPattern *, double, double);
    HRESULT (* Rotate)(struct IUIAutomationTransformPattern *, double);
    HRESULT (* get_CurrentCanMove)(struct IUIAutomationTransformPattern *, BOOL *);
    HRESULT (* get_CurrentCanResize)(struct IUIAutomationTransformPattern *, BOOL *);
    HRESULT (* get_CurrentCanRotate)(struct IUIAutomationTransformPattern *, BOOL *);
    HRESULT (* get_CachedCanMove)(struct IUIAutomationTransformPattern *, BOOL *);
    HRESULT (* get_CachedCanResize)(struct IUIAutomationTransformPattern *, BOOL *);
    HRESULT (* get_CachedCanRotate)(struct IUIAutomationTransformPattern *, BOOL *);
};

typedef struct IUIAutomationValuePattern IUIAutomationValuePattern, *PIUIAutomationValuePattern;

typedef struct IUIAutomationValuePatternVtbl IUIAutomationValuePatternVtbl, *PIUIAutomationValuePatternVtbl;

struct IUIAutomationValuePatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationValuePattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationValuePattern *);
    ULONG (* Release)(struct IUIAutomationValuePattern *);
    HRESULT (* SetValue)(struct IUIAutomationValuePattern *, BSTR);
    HRESULT (* get_CurrentValue)(struct IUIAutomationValuePattern *, BSTR *);
    HRESULT (* get_CurrentIsReadOnly)(struct IUIAutomationValuePattern *, BOOL *);
    HRESULT (* get_CachedValue)(struct IUIAutomationValuePattern *, BSTR *);
    HRESULT (* get_CachedIsReadOnly)(struct IUIAutomationValuePattern *, BOOL *);
};

struct IUIAutomationValuePattern {
    struct IUIAutomationValuePatternVtbl * lpVtbl;
};

typedef struct IUIAutomationVirtualizedItemPattern IUIAutomationVirtualizedItemPattern, *PIUIAutomationVirtualizedItemPattern;

typedef struct IUIAutomationVirtualizedItemPatternVtbl IUIAutomationVirtualizedItemPatternVtbl, *PIUIAutomationVirtualizedItemPatternVtbl;

struct IUIAutomationVirtualizedItemPattern {
    struct IUIAutomationVirtualizedItemPatternVtbl * lpVtbl;
};

struct IUIAutomationVirtualizedItemPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationVirtualizedItemPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationVirtualizedItemPattern *);
    ULONG (* Release)(struct IUIAutomationVirtualizedItemPattern *);
    HRESULT (* Realize)(struct IUIAutomationVirtualizedItemPattern *);
};

typedef struct IUIAutomationWindowPattern IUIAutomationWindowPattern, *PIUIAutomationWindowPattern;

typedef struct IUIAutomationWindowPatternVtbl IUIAutomationWindowPatternVtbl, *PIUIAutomationWindowPatternVtbl;

typedef enum WindowVisualState {
    WindowVisualState_Maximized=1,
    WindowVisualState_Minimized=2,
    WindowVisualState_Normal=0
} WindowVisualState;

typedef enum WindowInteractionState {
    WindowInteractionState_BlockedByModalWindow=3,
    WindowInteractionState_Closing=1,
    WindowInteractionState_NotResponding=4,
    WindowInteractionState_ReadyForUserInteraction=2,
    WindowInteractionState_Running=0
} WindowInteractionState;

struct IUIAutomationWindowPatternVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationWindowPattern *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationWindowPattern *);
    ULONG (* Release)(struct IUIAutomationWindowPattern *);
    HRESULT (* Close)(struct IUIAutomationWindowPattern *);
    HRESULT (* WaitForInputIdle)(struct IUIAutomationWindowPattern *, int, BOOL *);
    HRESULT (* SetWindowVisualState)(struct IUIAutomationWindowPattern *, enum WindowVisualState);
    HRESULT (* get_CurrentCanMaximize)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CurrentCanMinimize)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CurrentIsModal)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CurrentIsTopmost)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CurrentWindowVisualState)(struct IUIAutomationWindowPattern *, enum WindowVisualState *);
    HRESULT (* get_CurrentWindowInteractionState)(struct IUIAutomationWindowPattern *, enum WindowInteractionState *);
    HRESULT (* get_CachedCanMaximize)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CachedCanMinimize)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CachedIsModal)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CachedIsTopmost)(struct IUIAutomationWindowPattern *, BOOL *);
    HRESULT (* get_CachedWindowVisualState)(struct IUIAutomationWindowPattern *, enum WindowVisualState *);
    HRESULT (* get_CachedWindowInteractionState)(struct IUIAutomationWindowPattern *, enum WindowInteractionState *);
};

struct IUIAutomationWindowPattern {
    struct IUIAutomationWindowPatternVtbl * lpVtbl;
};

typedef enum AnimationStyle {
    AnimationStyle_BlinkingBackground=2,
    AnimationStyle_LasVegasLights=1,
    AnimationStyle_MarchingBlackAnts=4,
    AnimationStyle_MarchingRedAnts=5,
    AnimationStyle_None=0,
    AnimationStyle_Other=7,
    AnimationStyle_Shimmer=6,
    AnimationStyle_SparkleText=3
} AnimationStyle;

typedef enum BulletStyle {
    BulletStyle_DashBullet=5,
    BulletStyle_FilledRoundBullet=2,
    BulletStyle_FilledSquareBullet=4,
    BulletStyle_HollowRoundBullet=1,
    BulletStyle_HollowSquareBullet=3,
    BulletStyle_None=0,
    BulletStyle_Other=6
} BulletStyle;

typedef enum CapStyle {
    CapStyle_AllCap=2,
    CapStyle_AllPetiteCaps=3,
    CapStyle_None=0,
    CapStyle_Other=7,
    CapStyle_PetiteCaps=4,
    CapStyle_SmallCap=1,
    CapStyle_Titling=6,
    CapStyle_Unicase=5
} CapStyle;

typedef struct CUIAutomationRegistrar CUIAutomationRegistrar, *PCUIAutomationRegistrar;

struct CUIAutomationRegistrar {
};

typedef enum FlowDirections {
    FlowDirections_BottomToTop=2,
    FlowDirections_Default=0,
    FlowDirections_RightToLeft=1,
    FlowDirections_Vertical=4
} FlowDirections;

typedef enum HorizontalTextAlignment {
    HorizontalTextAlignment_Centered=1,
    HorizontalTextAlignment_Justified=3,
    HorizontalTextAlignment_Left=0,
    HorizontalTextAlignment_Right=2
} HorizontalTextAlignment;

typedef struct IAccessibleEx IAccessibleEx, *PIAccessibleEx;

typedef struct IAccessibleExVtbl IAccessibleExVtbl, *PIAccessibleExVtbl;

struct IAccessibleEx {
    struct IAccessibleExVtbl * lpVtbl;
};

struct IAccessibleExVtbl {
    HRESULT (* QueryInterface)(struct IAccessibleEx *, IID *, void * *);
    ULONG (* AddRef)(struct IAccessibleEx *);
    ULONG (* Release)(struct IAccessibleEx *);
    HRESULT (* GetObjectForChild)(struct IAccessibleEx *, long, struct IAccessibleEx * *);
    HRESULT (* GetIAccessiblePair)(struct IAccessibleEx *, struct IAccessible * *, long *);
    HRESULT (* GetRuntimeId)(struct IAccessibleEx *, SAFEARRAY * *);
    HRESULT (* ConvertReturnedElement)(struct IAccessibleEx *, struct IRawElementProviderSimple *, struct IAccessibleEx * *);
};

typedef struct IDockProvider IDockProvider, *PIDockProvider;

typedef struct IDockProviderVtbl IDockProviderVtbl, *PIDockProviderVtbl;

struct IDockProvider {
    struct IDockProviderVtbl * lpVtbl;
};

struct IDockProviderVtbl {
    HRESULT (* QueryInterface)(struct IDockProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IDockProvider *);
    ULONG (* Release)(struct IDockProvider *);
    HRESULT (* SetDockPosition)(struct IDockProvider *, enum DockPosition);
    HRESULT (* get_DockPosition)(struct IDockProvider *, enum DockPosition *);
};

typedef struct IExpandCollapseProvider IExpandCollapseProvider, *PIExpandCollapseProvider;

typedef struct IExpandCollapseProviderVtbl IExpandCollapseProviderVtbl, *PIExpandCollapseProviderVtbl;

struct IExpandCollapseProviderVtbl {
    HRESULT (* QueryInterface)(struct IExpandCollapseProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IExpandCollapseProvider *);
    ULONG (* Release)(struct IExpandCollapseProvider *);
    HRESULT (* Expand)(struct IExpandCollapseProvider *);
    HRESULT (* Collapse)(struct IExpandCollapseProvider *);
    HRESULT (* get_ExpandCollapseState)(struct IExpandCollapseProvider *, enum ExpandCollapseState *);
};

struct IExpandCollapseProvider {
    struct IExpandCollapseProviderVtbl * lpVtbl;
};

typedef struct IGridItemProvider IGridItemProvider, *PIGridItemProvider;

typedef struct IGridItemProviderVtbl IGridItemProviderVtbl, *PIGridItemProviderVtbl;

struct IGridItemProvider {
    struct IGridItemProviderVtbl * lpVtbl;
};

struct IGridItemProviderVtbl {
    HRESULT (* QueryInterface)(struct IGridItemProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IGridItemProvider *);
    ULONG (* Release)(struct IGridItemProvider *);
    HRESULT (* get_Row)(struct IGridItemProvider *, int *);
    HRESULT (* get_Column)(struct IGridItemProvider *, int *);
    HRESULT (* get_RowSpan)(struct IGridItemProvider *, int *);
    HRESULT (* get_ColumnSpan)(struct IGridItemProvider *, int *);
    HRESULT (* get_ContainingGrid)(struct IGridItemProvider *, struct IRawElementProviderSimple * *);
};

typedef struct IGridProvider IGridProvider, *PIGridProvider;

typedef struct IGridProviderVtbl IGridProviderVtbl, *PIGridProviderVtbl;

struct IGridProvider {
    struct IGridProviderVtbl * lpVtbl;
};

struct IGridProviderVtbl {
    HRESULT (* QueryInterface)(struct IGridProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IGridProvider *);
    ULONG (* Release)(struct IGridProvider *);
    HRESULT (* GetItem)(struct IGridProvider *, int, int, struct IRawElementProviderSimple * *);
    HRESULT (* get_RowCount)(struct IGridProvider *, int *);
    HRESULT (* get_ColumnCount)(struct IGridProvider *, int *);
};

typedef struct IInvokeProvider IInvokeProvider, *PIInvokeProvider;

typedef struct IInvokeProviderVtbl IInvokeProviderVtbl, *PIInvokeProviderVtbl;

struct IInvokeProviderVtbl {
    HRESULT (* QueryInterface)(struct IInvokeProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IInvokeProvider *);
    ULONG (* Release)(struct IInvokeProvider *);
    HRESULT (* Invoke)(struct IInvokeProvider *);
};

struct IInvokeProvider {
    struct IInvokeProviderVtbl * lpVtbl;
};

typedef struct IItemContainerProvider IItemContainerProvider, *PIItemContainerProvider;

typedef struct IItemContainerProviderVtbl IItemContainerProviderVtbl, *PIItemContainerProviderVtbl;

struct IItemContainerProviderVtbl {
    HRESULT (* QueryInterface)(struct IItemContainerProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IItemContainerProvider *);
    ULONG (* Release)(struct IItemContainerProvider *);
    HRESULT (* FindItemByProperty)(struct IItemContainerProvider *, struct IRawElementProviderSimple *, PROPERTYID, VARIANT, struct IRawElementProviderSimple * *);
};

struct IItemContainerProvider {
    struct IItemContainerProviderVtbl * lpVtbl;
};

typedef struct ILegacyIAccessibleProvider ILegacyIAccessibleProvider, *PILegacyIAccessibleProvider;

typedef struct ILegacyIAccessibleProviderVtbl ILegacyIAccessibleProviderVtbl, *PILegacyIAccessibleProviderVtbl;

struct ILegacyIAccessibleProvider {
    struct ILegacyIAccessibleProviderVtbl * lpVtbl;
};

struct ILegacyIAccessibleProviderVtbl {
    HRESULT (* QueryInterface)(struct ILegacyIAccessibleProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ILegacyIAccessibleProvider *);
    ULONG (* Release)(struct ILegacyIAccessibleProvider *);
    HRESULT (* Select)(struct ILegacyIAccessibleProvider *, long);
    HRESULT (* DoDefaultAction)(struct ILegacyIAccessibleProvider *);
    HRESULT (* SetValue)(struct ILegacyIAccessibleProvider *, LPCWSTR);
    HRESULT (* GetIAccessible)(struct ILegacyIAccessibleProvider *, struct IAccessible * *);
    HRESULT (* get_ChildId)(struct ILegacyIAccessibleProvider *, int *);
    HRESULT (* get_Name)(struct ILegacyIAccessibleProvider *, BSTR *);
    HRESULT (* get_Value)(struct ILegacyIAccessibleProvider *, BSTR *);
    HRESULT (* get_Description)(struct ILegacyIAccessibleProvider *, BSTR *);
    HRESULT (* get_Role)(struct ILegacyIAccessibleProvider *, DWORD *);
    HRESULT (* get_State)(struct ILegacyIAccessibleProvider *, DWORD *);
    HRESULT (* get_Help)(struct ILegacyIAccessibleProvider *, BSTR *);
    HRESULT (* get_KeyboardShortcut)(struct ILegacyIAccessibleProvider *, BSTR *);
    HRESULT (* GetSelection)(struct ILegacyIAccessibleProvider *, SAFEARRAY * *);
    HRESULT (* get_DefaultAction)(struct ILegacyIAccessibleProvider *, BSTR *);
};

typedef struct IMultipleViewProvider IMultipleViewProvider, *PIMultipleViewProvider;

typedef struct IMultipleViewProviderVtbl IMultipleViewProviderVtbl, *PIMultipleViewProviderVtbl;

struct IMultipleViewProvider {
    struct IMultipleViewProviderVtbl * lpVtbl;
};

struct IMultipleViewProviderVtbl {
    HRESULT (* QueryInterface)(struct IMultipleViewProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IMultipleViewProvider *);
    ULONG (* Release)(struct IMultipleViewProvider *);
    HRESULT (* GetViewName)(struct IMultipleViewProvider *, int, BSTR *);
    HRESULT (* SetCurrentView)(struct IMultipleViewProvider *, int);
    HRESULT (* get_CurrentView)(struct IMultipleViewProvider *, int *);
    HRESULT (* GetSupportedViews)(struct IMultipleViewProvider *, SAFEARRAY * *);
};

typedef struct IProxyProviderWinEventHandler IProxyProviderWinEventHandler, *PIProxyProviderWinEventHandler;

typedef struct IProxyProviderWinEventHandlerVtbl IProxyProviderWinEventHandlerVtbl, *PIProxyProviderWinEventHandlerVtbl;

typedef struct IProxyProviderWinEventSink IProxyProviderWinEventSink, *PIProxyProviderWinEventSink;

typedef struct IProxyProviderWinEventSinkVtbl IProxyProviderWinEventSinkVtbl, *PIProxyProviderWinEventSinkVtbl;

struct IProxyProviderWinEventSink {
    struct IProxyProviderWinEventSinkVtbl * lpVtbl;
};

struct IProxyProviderWinEventHandlerVtbl {
    HRESULT (* QueryInterface)(struct IProxyProviderWinEventHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IProxyProviderWinEventHandler *);
    ULONG (* Release)(struct IProxyProviderWinEventHandler *);
    HRESULT (* RespondToWinEvent)(struct IProxyProviderWinEventHandler *, DWORD, HWND, LONG, LONG, struct IProxyProviderWinEventSink *);
};

struct IProxyProviderWinEventHandler {
    struct IProxyProviderWinEventHandlerVtbl * lpVtbl;
};

struct IProxyProviderWinEventSinkVtbl {
    HRESULT (* QueryInterface)(struct IProxyProviderWinEventSink *, IID *, void * *);
    ULONG (* AddRef)(struct IProxyProviderWinEventSink *);
    ULONG (* Release)(struct IProxyProviderWinEventSink *);
    HRESULT (* AddAutomationPropertyChangedEvent)(struct IProxyProviderWinEventSink *, struct IRawElementProviderSimple *, PROPERTYID, VARIANT);
    HRESULT (* AddAutomationEvent)(struct IProxyProviderWinEventSink *, struct IRawElementProviderSimple *, EVENTID);
    HRESULT (* AddStructureChangedEvent)(struct IProxyProviderWinEventSink *, struct IRawElementProviderSimple *, enum StructureChangeType, SAFEARRAY *);
};

typedef struct IRangeValueProvider IRangeValueProvider, *PIRangeValueProvider;

typedef struct IRangeValueProviderVtbl IRangeValueProviderVtbl, *PIRangeValueProviderVtbl;

struct IRangeValueProviderVtbl {
    HRESULT (* QueryInterface)(struct IRangeValueProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IRangeValueProvider *);
    ULONG (* Release)(struct IRangeValueProvider *);
    HRESULT (* SetValue)(struct IRangeValueProvider *, double);
    HRESULT (* get_Value)(struct IRangeValueProvider *, double *);
    HRESULT (* get_IsReadOnly)(struct IRangeValueProvider *, BOOL *);
    HRESULT (* get_Maximum)(struct IRangeValueProvider *, double *);
    HRESULT (* get_Minimum)(struct IRangeValueProvider *, double *);
    HRESULT (* get_LargeChange)(struct IRangeValueProvider *, double *);
    HRESULT (* get_SmallChange)(struct IRangeValueProvider *, double *);
};

struct IRangeValueProvider {
    struct IRangeValueProviderVtbl * lpVtbl;
};

typedef struct IRawElementProviderAdviseEvents IRawElementProviderAdviseEvents, *PIRawElementProviderAdviseEvents;

typedef struct IRawElementProviderAdviseEventsVtbl IRawElementProviderAdviseEventsVtbl, *PIRawElementProviderAdviseEventsVtbl;

struct IRawElementProviderAdviseEvents {
    struct IRawElementProviderAdviseEventsVtbl * lpVtbl;
};

struct IRawElementProviderAdviseEventsVtbl {
    HRESULT (* QueryInterface)(struct IRawElementProviderAdviseEvents *, IID *, void * *);
    ULONG (* AddRef)(struct IRawElementProviderAdviseEvents *);
    ULONG (* Release)(struct IRawElementProviderAdviseEvents *);
    HRESULT (* AdviseEventAdded)(struct IRawElementProviderAdviseEvents *, EVENTID, SAFEARRAY *);
    HRESULT (* AdviseEventRemoved)(struct IRawElementProviderAdviseEvents *, EVENTID, SAFEARRAY *);
};

typedef struct IRawElementProviderFragment IRawElementProviderFragment, *PIRawElementProviderFragment;

typedef struct IRawElementProviderFragmentVtbl IRawElementProviderFragmentVtbl, *PIRawElementProviderFragmentVtbl;

typedef enum NavigateDirection {
    NavigateDirection_FirstChild=3,
    NavigateDirection_LastChild=4,
    NavigateDirection_NextSibling=1,
    NavigateDirection_Parent=0,
    NavigateDirection_PreviousSibling=2
} NavigateDirection;

typedef struct UiaRect UiaRect, *PUiaRect;

typedef struct IRawElementProviderFragmentRoot IRawElementProviderFragmentRoot, *PIRawElementProviderFragmentRoot;

typedef struct IRawElementProviderFragmentRootVtbl IRawElementProviderFragmentRootVtbl, *PIRawElementProviderFragmentRootVtbl;

struct IRawElementProviderFragmentVtbl {
    HRESULT (* QueryInterface)(struct IRawElementProviderFragment *, IID *, void * *);
    ULONG (* AddRef)(struct IRawElementProviderFragment *);
    ULONG (* Release)(struct IRawElementProviderFragment *);
    HRESULT (* Navigate)(struct IRawElementProviderFragment *, enum NavigateDirection, struct IRawElementProviderFragment * *);
    HRESULT (* GetRuntimeId)(struct IRawElementProviderFragment *, SAFEARRAY * *);
    HRESULT (* get_BoundingRectangle)(struct IRawElementProviderFragment *, struct UiaRect *);
    HRESULT (* GetEmbeddedFragmentRoots)(struct IRawElementProviderFragment *, SAFEARRAY * *);
    HRESULT (* SetFocus)(struct IRawElementProviderFragment *);
    HRESULT (* get_FragmentRoot)(struct IRawElementProviderFragment *, struct IRawElementProviderFragmentRoot * *);
};

struct UiaRect {
    double left;
    double top;
    double width;
    double height;
};

struct IRawElementProviderFragmentRootVtbl {
    HRESULT (* QueryInterface)(struct IRawElementProviderFragmentRoot *, IID *, void * *);
    ULONG (* AddRef)(struct IRawElementProviderFragmentRoot *);
    ULONG (* Release)(struct IRawElementProviderFragmentRoot *);
    HRESULT (* ElementProviderFromPoint)(struct IRawElementProviderFragmentRoot *, double, double, struct IRawElementProviderFragment * *);
    HRESULT (* GetFocus)(struct IRawElementProviderFragmentRoot *, struct IRawElementProviderFragment * *);
};

struct IRawElementProviderFragment {
    struct IRawElementProviderFragmentVtbl * lpVtbl;
};

struct IRawElementProviderFragmentRoot {
    struct IRawElementProviderFragmentRootVtbl * lpVtbl;
};

typedef struct IRawElementProviderHwndOverride IRawElementProviderHwndOverride, *PIRawElementProviderHwndOverride;

typedef struct IRawElementProviderHwndOverrideVtbl IRawElementProviderHwndOverrideVtbl, *PIRawElementProviderHwndOverrideVtbl;

struct IRawElementProviderHwndOverrideVtbl {
    HRESULT (* QueryInterface)(struct IRawElementProviderHwndOverride *, IID *, void * *);
    ULONG (* AddRef)(struct IRawElementProviderHwndOverride *);
    ULONG (* Release)(struct IRawElementProviderHwndOverride *);
    HRESULT (* GetOverrideProviderForHwnd)(struct IRawElementProviderHwndOverride *, HWND, struct IRawElementProviderSimple * *);
};

struct IRawElementProviderHwndOverride {
    struct IRawElementProviderHwndOverrideVtbl * lpVtbl;
};

typedef struct IScrollItemProvider IScrollItemProvider, *PIScrollItemProvider;

typedef struct IScrollItemProviderVtbl IScrollItemProviderVtbl, *PIScrollItemProviderVtbl;

struct IScrollItemProviderVtbl {
    HRESULT (* QueryInterface)(struct IScrollItemProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IScrollItemProvider *);
    ULONG (* Release)(struct IScrollItemProvider *);
    HRESULT (* ScrollIntoView)(struct IScrollItemProvider *);
};

struct IScrollItemProvider {
    struct IScrollItemProviderVtbl * lpVtbl;
};

typedef struct IScrollProvider IScrollProvider, *PIScrollProvider;

typedef struct IScrollProviderVtbl IScrollProviderVtbl, *PIScrollProviderVtbl;

struct IScrollProvider {
    struct IScrollProviderVtbl * lpVtbl;
};

struct IScrollProviderVtbl {
    HRESULT (* QueryInterface)(struct IScrollProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IScrollProvider *);
    ULONG (* Release)(struct IScrollProvider *);
    HRESULT (* Scroll)(struct IScrollProvider *, enum ScrollAmount, enum ScrollAmount);
    HRESULT (* SetScrollPercent)(struct IScrollProvider *, double, double);
    HRESULT (* get_HorizontalScrollPercent)(struct IScrollProvider *, double *);
    HRESULT (* get_VerticalScrollPercent)(struct IScrollProvider *, double *);
    HRESULT (* get_HorizontalViewSize)(struct IScrollProvider *, double *);
    HRESULT (* get_VerticalViewSize)(struct IScrollProvider *, double *);
    HRESULT (* get_HorizontallyScrollable)(struct IScrollProvider *, BOOL *);
    HRESULT (* get_VerticallyScrollable)(struct IScrollProvider *, BOOL *);
};

typedef struct ISelectionItemProvider ISelectionItemProvider, *PISelectionItemProvider;

typedef struct ISelectionItemProviderVtbl ISelectionItemProviderVtbl, *PISelectionItemProviderVtbl;

struct ISelectionItemProviderVtbl {
    HRESULT (* QueryInterface)(struct ISelectionItemProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ISelectionItemProvider *);
    ULONG (* Release)(struct ISelectionItemProvider *);
    HRESULT (* Select)(struct ISelectionItemProvider *);
    HRESULT (* AddToSelection)(struct ISelectionItemProvider *);
    HRESULT (* RemoveFromSelection)(struct ISelectionItemProvider *);
    HRESULT (* get_IsSelected)(struct ISelectionItemProvider *, BOOL *);
    HRESULT (* get_SelectionContainer)(struct ISelectionItemProvider *, struct IRawElementProviderSimple * *);
};

struct ISelectionItemProvider {
    struct ISelectionItemProviderVtbl * lpVtbl;
};

typedef struct ISelectionProvider ISelectionProvider, *PISelectionProvider;

typedef struct ISelectionProviderVtbl ISelectionProviderVtbl, *PISelectionProviderVtbl;

struct ISelectionProvider {
    struct ISelectionProviderVtbl * lpVtbl;
};

struct ISelectionProviderVtbl {
    HRESULT (* QueryInterface)(struct ISelectionProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ISelectionProvider *);
    ULONG (* Release)(struct ISelectionProvider *);
    HRESULT (* GetSelection)(struct ISelectionProvider *, SAFEARRAY * *);
    HRESULT (* get_CanSelectMultiple)(struct ISelectionProvider *, BOOL *);
    HRESULT (* get_IsSelectionRequired)(struct ISelectionProvider *, BOOL *);
};

typedef struct ISynchronizedInputProvider ISynchronizedInputProvider, *PISynchronizedInputProvider;

typedef struct ISynchronizedInputProviderVtbl ISynchronizedInputProviderVtbl, *PISynchronizedInputProviderVtbl;

struct ISynchronizedInputProvider {
    struct ISynchronizedInputProviderVtbl * lpVtbl;
};

struct ISynchronizedInputProviderVtbl {
    HRESULT (* QueryInterface)(struct ISynchronizedInputProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ISynchronizedInputProvider *);
    ULONG (* Release)(struct ISynchronizedInputProvider *);
    HRESULT (* StartListening)(struct ISynchronizedInputProvider *, enum SynchronizedInputType);
    HRESULT (* Cancel)(struct ISynchronizedInputProvider *);
};

typedef struct ITableItemProvider ITableItemProvider, *PITableItemProvider;

typedef struct ITableItemProviderVtbl ITableItemProviderVtbl, *PITableItemProviderVtbl;

struct ITableItemProvider {
    struct ITableItemProviderVtbl * lpVtbl;
};

struct ITableItemProviderVtbl {
    HRESULT (* QueryInterface)(struct ITableItemProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ITableItemProvider *);
    ULONG (* Release)(struct ITableItemProvider *);
    HRESULT (* GetRowHeaderItems)(struct ITableItemProvider *, SAFEARRAY * *);
    HRESULT (* GetColumnHeaderItems)(struct ITableItemProvider *, SAFEARRAY * *);
};

typedef struct ITableProvider ITableProvider, *PITableProvider;

typedef struct ITableProviderVtbl ITableProviderVtbl, *PITableProviderVtbl;

struct ITableProvider {
    struct ITableProviderVtbl * lpVtbl;
};

struct ITableProviderVtbl {
    HRESULT (* QueryInterface)(struct ITableProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ITableProvider *);
    ULONG (* Release)(struct ITableProvider *);
    HRESULT (* GetRowHeaders)(struct ITableProvider *, SAFEARRAY * *);
    HRESULT (* GetColumnHeaders)(struct ITableProvider *, SAFEARRAY * *);
    HRESULT (* get_RowOrColumnMajor)(struct ITableProvider *, enum RowOrColumnMajor *);
};

typedef struct ITextProvider ITextProvider, *PITextProvider;

typedef struct ITextProviderVtbl ITextProviderVtbl, *PITextProviderVtbl;

typedef struct ITextRangeProvider ITextRangeProvider, *PITextRangeProvider;

typedef struct UiaPoint UiaPoint, *PUiaPoint;

typedef struct ITextRangeProviderVtbl ITextRangeProviderVtbl, *PITextRangeProviderVtbl;

struct ITextProviderVtbl {
    HRESULT (* QueryInterface)(struct ITextProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ITextProvider *);
    ULONG (* Release)(struct ITextProvider *);
    HRESULT (* GetSelection)(struct ITextProvider *, SAFEARRAY * *);
    HRESULT (* GetVisibleRanges)(struct ITextProvider *, SAFEARRAY * *);
    HRESULT (* RangeFromChild)(struct ITextProvider *, struct IRawElementProviderSimple *, struct ITextRangeProvider * *);
    HRESULT (* RangeFromPoint)(struct ITextProvider *, struct UiaPoint, struct ITextRangeProvider * *);
    HRESULT (* get_DocumentRange)(struct ITextProvider *, struct ITextRangeProvider * *);
    HRESULT (* get_SupportedTextSelection)(struct ITextProvider *, enum SupportedTextSelection *);
};

struct ITextRangeProvider {
    struct ITextRangeProviderVtbl * lpVtbl;
};

struct ITextRangeProviderVtbl {
    HRESULT (* QueryInterface)(struct ITextRangeProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ITextRangeProvider *);
    ULONG (* Release)(struct ITextRangeProvider *);
    HRESULT (* Clone)(struct ITextRangeProvider *, struct ITextRangeProvider * *);
    HRESULT (* Compare)(struct ITextRangeProvider *, struct ITextRangeProvider *, BOOL *);
    HRESULT (* CompareEndpoints)(struct ITextRangeProvider *, enum TextPatternRangeEndpoint, struct ITextRangeProvider *, enum TextPatternRangeEndpoint, int *);
    HRESULT (* ExpandToEnclosingUnit)(struct ITextRangeProvider *, enum TextUnit);
    HRESULT (* FindAttribute)(struct ITextRangeProvider *, TEXTATTRIBUTEID, VARIANT, BOOL, struct ITextRangeProvider * *);
    HRESULT (* FindTextA)(struct ITextRangeProvider *, BSTR, BOOL, BOOL, struct ITextRangeProvider * *);
    HRESULT (* GetAttributeValue)(struct ITextRangeProvider *, TEXTATTRIBUTEID, VARIANT *);
    HRESULT (* GetBoundingRectangles)(struct ITextRangeProvider *, SAFEARRAY * *);
    HRESULT (* GetEnclosingElement)(struct ITextRangeProvider *, struct IRawElementProviderSimple * *);
    HRESULT (* GetText)(struct ITextRangeProvider *, int, BSTR *);
    HRESULT (* Move)(struct ITextRangeProvider *, enum TextUnit, int, int *);
    HRESULT (* MoveEndpointByUnit)(struct ITextRangeProvider *, enum TextPatternRangeEndpoint, enum TextUnit, int, int *);
    HRESULT (* MoveEndpointByRange)(struct ITextRangeProvider *, enum TextPatternRangeEndpoint, struct ITextRangeProvider *, enum TextPatternRangeEndpoint);
    HRESULT (* Select)(struct ITextRangeProvider *);
    HRESULT (* AddToSelection)(struct ITextRangeProvider *);
    HRESULT (* RemoveFromSelection)(struct ITextRangeProvider *);
    HRESULT (* ScrollIntoView)(struct ITextRangeProvider *, BOOL);
    HRESULT (* GetChildren)(struct ITextRangeProvider *, SAFEARRAY * *);
};

struct ITextProvider {
    struct ITextProviderVtbl * lpVtbl;
};

struct UiaPoint {
    double x;
    double y;
};

typedef struct IToggleProvider IToggleProvider, *PIToggleProvider;

typedef struct IToggleProviderVtbl IToggleProviderVtbl, *PIToggleProviderVtbl;

struct IToggleProvider {
    struct IToggleProviderVtbl * lpVtbl;
};

struct IToggleProviderVtbl {
    HRESULT (* QueryInterface)(struct IToggleProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IToggleProvider *);
    ULONG (* Release)(struct IToggleProvider *);
    HRESULT (* Toggle)(struct IToggleProvider *);
    HRESULT (* get_ToggleState)(struct IToggleProvider *, enum ToggleState *);
};

typedef struct ITransformProvider ITransformProvider, *PITransformProvider;

typedef struct ITransformProviderVtbl ITransformProviderVtbl, *PITransformProviderVtbl;

struct ITransformProviderVtbl {
    HRESULT (* QueryInterface)(struct ITransformProvider *, IID *, void * *);
    ULONG (* AddRef)(struct ITransformProvider *);
    ULONG (* Release)(struct ITransformProvider *);
    HRESULT (* Move)(struct ITransformProvider *, double, double);
    HRESULT (* Resize)(struct ITransformProvider *, double, double);
    HRESULT (* Rotate)(struct ITransformProvider *, double);
    HRESULT (* get_CanMove)(struct ITransformProvider *, BOOL *);
    HRESULT (* get_CanResize)(struct ITransformProvider *, BOOL *);
    HRESULT (* get_CanRotate)(struct ITransformProvider *, BOOL *);
};

struct ITransformProvider {
    struct ITransformProviderVtbl * lpVtbl;
};

typedef struct IUIAutomationPatternHandler IUIAutomationPatternHandler, *PIUIAutomationPatternHandler;

typedef struct IUIAutomationPatternHandlerVtbl IUIAutomationPatternHandlerVtbl, *PIUIAutomationPatternHandlerVtbl;

typedef struct IUIAutomationPatternInstance IUIAutomationPatternInstance, *PIUIAutomationPatternInstance;

typedef struct UIAutomationParameter UIAutomationParameter, *PUIAutomationParameter;

typedef struct IUIAutomationPatternInstanceVtbl IUIAutomationPatternInstanceVtbl, *PIUIAutomationPatternInstanceVtbl;

typedef enum UIAutomationType {
    UIAutomationType_Array=65536,
    UIAutomationType_Bool=2,
    UIAutomationType_BoolArray=131074,
    UIAutomationType_Double=4,
    UIAutomationType_DoubleArray=131076,
    UIAutomationType_Element=7,
    UIAutomationType_ElementArray=131079,
    UIAutomationType_Int=1,
    UIAutomationType_IntArray=131073,
    UIAutomationType_Out=131072,
    UIAutomationType_OutBool=131081,
    UIAutomationType_OutBoolArray=131088,
    UIAutomationType_OutDouble=131083,
    UIAutomationType_OutDoubleArray=131090,
    UIAutomationType_OutElement=131086,
    UIAutomationType_OutElementArray=131093,
    UIAutomationType_OutInt=131080,
    UIAutomationType_OutIntArray=131087,
    UIAutomationType_OutPoint=131084,
    UIAutomationType_OutPointArray=131091,
    UIAutomationType_OutRect=131085,
    UIAutomationType_OutRectArray=131092,
    UIAutomationType_OutString=131082,
    UIAutomationType_OutStringArray=131089,
    UIAutomationType_Point=5,
    UIAutomationType_PointArray=131077,
    UIAutomationType_Rect=6,
    UIAutomationType_RectArray=131078,
    UIAutomationType_String=3,
    UIAutomationType_StringArray=131075
} UIAutomationType;

struct IUIAutomationPatternInstanceVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationPatternInstance *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationPatternInstance *);
    ULONG (* Release)(struct IUIAutomationPatternInstance *);
    HRESULT (* GetProperty)(struct IUIAutomationPatternInstance *, UINT, BOOL, enum UIAutomationType, void *);
    HRESULT (* CallMethod)(struct IUIAutomationPatternInstance *, UINT, struct UIAutomationParameter *, UINT);
};

struct IUIAutomationPatternHandler {
    struct IUIAutomationPatternHandlerVtbl * lpVtbl;
};

struct IUIAutomationPatternInstance {
    struct IUIAutomationPatternInstanceVtbl * lpVtbl;
};

struct UIAutomationParameter {
    enum UIAutomationType type;
    void * pData;
};

struct IUIAutomationPatternHandlerVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationPatternHandler *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationPatternHandler *);
    ULONG (* Release)(struct IUIAutomationPatternHandler *);
    HRESULT (* CreateClientWrapper)(struct IUIAutomationPatternHandler *, struct IUIAutomationPatternInstance *, struct IUnknown * *);
    HRESULT (* Dispatch)(struct IUIAutomationPatternHandler *, struct IUnknown *, UINT, struct UIAutomationParameter *, UINT);
};

typedef struct IUIAutomationRegistrar IUIAutomationRegistrar, *PIUIAutomationRegistrar;

typedef struct IUIAutomationRegistrarVtbl IUIAutomationRegistrarVtbl, *PIUIAutomationRegistrarVtbl;

typedef struct UIAutomationPropertyInfo UIAutomationPropertyInfo, *PUIAutomationPropertyInfo;

typedef struct UIAutomationEventInfo UIAutomationEventInfo, *PUIAutomationEventInfo;

typedef struct UIAutomationPatternInfo UIAutomationPatternInfo, *PUIAutomationPatternInfo;

typedef struct UIAutomationMethodInfo UIAutomationMethodInfo, *PUIAutomationMethodInfo;

struct IUIAutomationRegistrarVtbl {
    HRESULT (* QueryInterface)(struct IUIAutomationRegistrar *, IID *, void * *);
    ULONG (* AddRef)(struct IUIAutomationRegistrar *);
    ULONG (* Release)(struct IUIAutomationRegistrar *);
    HRESULT (* RegisterProperty)(struct IUIAutomationRegistrar *, struct UIAutomationPropertyInfo *, PROPERTYID *);
    HRESULT (* RegisterEvent)(struct IUIAutomationRegistrar *, struct UIAutomationEventInfo *, EVENTID *);
    HRESULT (* RegisterPattern)(struct IUIAutomationRegistrar *, struct UIAutomationPatternInfo *, PATTERNID *, PROPERTYID *, UINT, PROPERTYID *, UINT, EVENTID *);
};

struct IUIAutomationRegistrar {
    struct IUIAutomationRegistrarVtbl * lpVtbl;
};

struct UIAutomationPropertyInfo {
    GUID guid;
    LPCWSTR pProgrammaticName;
    enum UIAutomationType type;
};

struct UIAutomationEventInfo {
    GUID guid;
    LPCWSTR pProgrammaticName;
};

struct UIAutomationMethodInfo {
    LPCWSTR pProgrammaticName;
    BOOL doSetFocus;
    UINT cInParameters;
    UINT cOutParameters;
    enum UIAutomationType * pParameterTypes;
    LPCWSTR * pParameterNames;
};

struct UIAutomationPatternInfo {
    GUID guid;
    LPCWSTR pProgrammaticName;
    GUID providerInterfaceId;
    GUID clientInterfaceId;
    UINT cProperties;
    struct UIAutomationPropertyInfo * pProperties;
    UINT cMethods;
    struct UIAutomationMethodInfo * pMethods;
    UINT cEvents;
    struct UIAutomationEventInfo * pEvents;
    struct IUIAutomationPatternHandler * pPatternHandler;
};

typedef struct IValueProvider IValueProvider, *PIValueProvider;

typedef struct IValueProviderVtbl IValueProviderVtbl, *PIValueProviderVtbl;

struct IValueProviderVtbl {
    HRESULT (* QueryInterface)(struct IValueProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IValueProvider *);
    ULONG (* Release)(struct IValueProvider *);
    HRESULT (* SetValue)(struct IValueProvider *, LPCWSTR);
    HRESULT (* get_Value)(struct IValueProvider *, BSTR *);
    HRESULT (* get_IsReadOnly)(struct IValueProvider *, BOOL *);
};

struct IValueProvider {
    struct IValueProviderVtbl * lpVtbl;
};

typedef struct IVirtualizedItemProvider IVirtualizedItemProvider, *PIVirtualizedItemProvider;

typedef struct IVirtualizedItemProviderVtbl IVirtualizedItemProviderVtbl, *PIVirtualizedItemProviderVtbl;

struct IVirtualizedItemProviderVtbl {
    HRESULT (* QueryInterface)(struct IVirtualizedItemProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IVirtualizedItemProvider *);
    ULONG (* Release)(struct IVirtualizedItemProvider *);
    HRESULT (* Realize)(struct IVirtualizedItemProvider *);
};

struct IVirtualizedItemProvider {
    struct IVirtualizedItemProviderVtbl * lpVtbl;
};

typedef struct IWindowProvider IWindowProvider, *PIWindowProvider;

typedef struct IWindowProviderVtbl IWindowProviderVtbl, *PIWindowProviderVtbl;

struct IWindowProviderVtbl {
    HRESULT (* QueryInterface)(struct IWindowProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IWindowProvider *);
    ULONG (* Release)(struct IWindowProvider *);
    HRESULT (* SetVisualState)(struct IWindowProvider *, enum WindowVisualState);
    HRESULT (* Close)(struct IWindowProvider *);
    HRESULT (* WaitForInputIdle)(struct IWindowProvider *, int, BOOL *);
    HRESULT (* get_CanMaximize)(struct IWindowProvider *, BOOL *);
    HRESULT (* get_CanMinimize)(struct IWindowProvider *, BOOL *);
    HRESULT (* get_IsModal)(struct IWindowProvider *, BOOL *);
    HRESULT (* get_WindowVisualState)(struct IWindowProvider *, enum WindowVisualState *);
    HRESULT (* get_WindowInteractionState)(struct IWindowProvider *, enum WindowInteractionState *);
    HRESULT (* get_IsTopmost)(struct IWindowProvider *, BOOL *);
};

struct IWindowProvider {
    struct IWindowProviderVtbl * lpVtbl;
};

typedef enum OutlineStyles {
    OutlineStyles_Embossed=8,
    OutlineStyles_Engraved=4,
    OutlineStyles_None=0,
    OutlineStyles_Outline=1,
    OutlineStyles_Shadow=2
} OutlineStyles;

typedef enum TextDecorationLineStyle {
    TextDecorationLineStyle_Dash=5,
    TextDecorationLineStyle_DashDot=6,
    TextDecorationLineStyle_DashDotDot=7,
    TextDecorationLineStyle_Dot=4,
    TextDecorationLineStyle_Double=3,
    TextDecorationLineStyle_DoubleWavy=11,
    TextDecorationLineStyle_LongDash=13,
    TextDecorationLineStyle_None=0,
    TextDecorationLineStyle_Other=19,
    TextDecorationLineStyle_Single=1,
    TextDecorationLineStyle_ThickDash=14,
    TextDecorationLineStyle_ThickDashDot=15,
    TextDecorationLineStyle_ThickDashDotDot=16,
    TextDecorationLineStyle_ThickDot=17,
    TextDecorationLineStyle_ThickLongDash=18,
    TextDecorationLineStyle_ThickSingle=9,
    TextDecorationLineStyle_ThickWavy=12,
    TextDecorationLineStyle_Wavy=8,
    TextDecorationLineStyle_WordsOnly=2
} TextDecorationLineStyle;

#define UIA_E_ELEMENTNOTAVAILABLE 2147746305

#define UIA_E_ELEMENTNOTENABLED 2147746304

#define UIA_E_INVALIDOPERATION 2148734217

#define UIA_E_NOCLICKABLEPOINT 2147746306

#define UIA_E_NOTSUPPORTED 2147746308

#define UIA_E_PROXYASSEMBLYNOTLOADED 2147746307

#define UIA_E_TIMEOUT 2148734213

#define UiaAppendRuntimeId 3

#define UiaRootObjectId -25

typedef enum AsyncContentLoadedState {
    AsyncContentLoadedState_Beginning=0,
    AsyncContentLoadedState_Completed=2,
    AsyncContentLoadedState_Progress=1
} AsyncContentLoadedState;

typedef enum AutomationIdentifierType {
    AutomationIdentifierType_ControlType=3,
    AutomationIdentifierType_Event=2,
    AutomationIdentifierType_Pattern=1,
    AutomationIdentifierType_Property=0,
    AutomationIdentifierType_TextAttribute=4
} AutomationIdentifierType;

typedef enum ConditionType {
    ConditionType_And=3,
    ConditionType_False=1,
    ConditionType_Not=5,
    ConditionType_Or=4,
    ConditionType_Property=2,
    ConditionType_True=0
} ConditionType;

typedef enum EventArgsType {
    EventArgsType_AsyncContentLoaded=3,
    EventArgsType_PropertyChanged=1,
    EventArgsType_Simple=0,
    EventArgsType_StructureChanged=2,
    EventArgsType_WindowClosed=4
} EventArgsType;

typedef struct HUIAEVENT__ HUIAEVENT__, *PHUIAEVENT__;

typedef struct HUIAEVENT__ * HUIAEVENT;

struct HUIAEVENT__ {
    int unused;
};

typedef struct HUIANODE__ HUIANODE__, *PHUIANODE__;

typedef struct HUIANODE__ * HUIANODE;

struct HUIANODE__ {
    int unused;
};

typedef struct HUIAPATTERNOBJECT__ HUIAPATTERNOBJECT__, *PHUIAPATTERNOBJECT__;

typedef struct HUIAPATTERNOBJECT__ * HUIAPATTERNOBJECT;

struct HUIAPATTERNOBJECT__ {
    int unused;
};

typedef struct HUIATEXTRANGE__ HUIATEXTRANGE__, *PHUIATEXTRANGE__;

typedef struct HUIATEXTRANGE__ * HUIATEXTRANGE;

struct HUIATEXTRANGE__ {
    int unused;
};

typedef enum NormalizeState {
    NormalizeState_Custom=2,
    NormalizeState_None=0,
    NormalizeState_View=1
} NormalizeState;

typedef enum ProviderType {
    ProviderType_BaseHwnd=0,
    ProviderType_NonClientArea=2,
    ProviderType_Proxy=1
} ProviderType;

typedef struct UiaAndOrCondition UiaAndOrCondition, *PUiaAndOrCondition;

typedef struct UiaCondition UiaCondition, *PUiaCondition;

struct UiaCondition {
    enum ConditionType ConditionType;
};

struct UiaAndOrCondition {
    enum ConditionType ConditionType;
    struct UiaCondition * * ppConditions;
    int cConditions;
};

typedef struct UiaAsyncContentLoadedEventArgs UiaAsyncContentLoadedEventArgs, *PUiaAsyncContentLoadedEventArgs;

struct UiaAsyncContentLoadedEventArgs {
    enum EventArgsType Type;
    int EventId;
    enum AsyncContentLoadedState AsyncContentLoadedState;
    double PercentComplete;
};

typedef struct UiaCacheRequest UiaCacheRequest, *PUiaCacheRequest;

struct UiaCacheRequest {
    struct UiaCondition * pViewCondition;
    enum TreeScope Scope;
    PROPERTYID * pProperties;
    int cProperties;
    PATTERNID * pPatterns;
    int cPatterns;
    enum AutomationElementMode automationElementMode;
};

typedef struct UiaEventArgs UiaEventArgs, *PUiaEventArgs;

struct UiaEventArgs {
    enum EventArgsType Type;
    int EventId;
};

typedef void (UiaEventCallback)(struct UiaEventArgs *, SAFEARRAY *, BSTR);

typedef struct UiaFindParams UiaFindParams, *PUiaFindParams;

struct UiaFindParams {
    int MaxDepth;
    BOOL FindFirst;
    BOOL ExcludeRoot;
    struct UiaCondition * pFindCondition;
};

typedef struct UiaNotCondition UiaNotCondition, *PUiaNotCondition;

struct UiaNotCondition {
    enum ConditionType ConditionType;
    struct UiaCondition * pCondition;
};

typedef struct UiaPropertyChangedEventArgs UiaPropertyChangedEventArgs, *PUiaPropertyChangedEventArgs;

struct UiaPropertyChangedEventArgs {
    enum EventArgsType Type;
    int EventId;
    PROPERTYID PropertyId;
    VARIANT OldValue;
    VARIANT NewValue;
};

typedef struct UiaPropertyCondition UiaPropertyCondition, *PUiaPropertyCondition;

struct UiaPropertyCondition {
    enum ConditionType ConditionType;
    PROPERTYID PropertyId;
    VARIANT Value;
    enum PropertyConditionFlags Flags;
};

typedef SAFEARRAY * (UiaProviderCallback)(HWND, enum ProviderType);

typedef struct UiaStructureChangedEventArgs UiaStructureChangedEventArgs, *PUiaStructureChangedEventArgs;

struct UiaStructureChangedEventArgs {
    enum EventArgsType Type;
    int EventId;
    enum StructureChangeType StructureChangeType;
    int * pRuntimeId;
    int cRuntimeIdLen;
};

typedef struct UiaWindowClosedEventArgs UiaWindowClosedEventArgs, *PUiaWindowClosedEventArgs;

struct UiaWindowClosedEventArgs {
    enum EventArgsType Type;
    int EventId;
    int * pRuntimeId;
    int cRuntimeIdLen;
};

typedef struct AsyncIUnknown AsyncIUnknown, *PAsyncIUnknown;

typedef struct AsyncIUnknownVtbl AsyncIUnknownVtbl, *PAsyncIUnknownVtbl;

struct AsyncIUnknownVtbl {
    HRESULT (* QueryInterface)(struct AsyncIUnknown *, IID *, void * *);
    ULONG (* AddRef)(struct AsyncIUnknown *);
    ULONG (* Release)(struct AsyncIUnknown *);
    HRESULT (* Begin_QueryInterface)(struct AsyncIUnknown *, IID *);
    HRESULT (* Finish_QueryInterface)(struct AsyncIUnknown *, void * *);
    HRESULT (* Begin_AddRef)(struct AsyncIUnknown *);
    ULONG (* Finish_AddRef)(struct AsyncIUnknown *);
    HRESULT (* Begin_Release)(struct AsyncIUnknown *);
    ULONG (* Finish_Release)(struct AsyncIUnknown *);
};

struct AsyncIUnknown {
    struct AsyncIUnknownVtbl * lpVtbl;
};

typedef struct IClassFactory IClassFactory, *PIClassFactory;

typedef struct IClassFactoryVtbl IClassFactoryVtbl, *PIClassFactoryVtbl;

struct IClassFactory {
    struct IClassFactoryVtbl * lpVtbl;
};

struct IClassFactoryVtbl {
    HRESULT (* QueryInterface)(struct IClassFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IClassFactory *);
    ULONG (* Release)(struct IClassFactory *);
    HRESULT (* CreateInstance)(struct IClassFactory *, struct IUnknown *, IID *, void * *);
    HRESULT (* LockServer)(struct IClassFactory *, BOOL);
};

typedef struct IClassFactory * LPCLASSFACTORY;

#define CF_NULL 0

#define CFSTR_MIME_NULL 0

#define CONFIRMSAFETYACTION_LOADOBJECT 1

#define FIEF_FLAG_FORCE_JITUI 1

#define FIEF_FLAG_PEEK 2

#define FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK 4

#define FMFD_DEFAULT 0

#define FMFD_ENABLEMIMESNIFFING 2

#define FMFD_IGNOREMIMETEXTPLAIN 4

#define FMFD_SERVERMIME 8

#define FMFD_URLASFILENAME 1

#define GET_FEATURE_FROM_PROCESS 2

#define GET_FEATURE_FROM_REGISTRY 4

#define GET_FEATURE_FROM_THREAD 1

#define GET_FEATURE_FROM_THREAD_INTERNET 64

#define GET_FEATURE_FROM_THREAD_INTRANET 16

#define GET_FEATURE_FROM_THREAD_LOCALMACHINE 8

#define GET_FEATURE_FROM_THREAD_RESTRICTED 128

#define GET_FEATURE_FROM_THREAD_TRUSTED 32

#define INET_E_AUTHENTICATION_REQUIRED 2148270089

#define INET_E_BLOCKED_REDIRECT_XSECURITYID 2148270107

#define INET_E_CANNOT_CONNECT 2148270084

#define INET_E_CANNOT_INSTANTIATE_OBJECT 2148270096

#define INET_E_CANNOT_LOAD_DATA 2148270095

#define INET_E_CANNOT_LOCK_REQUEST 2148270102

#define INET_E_CANNOT_REPLACE_SFP_FILE 2148270848

#define INET_E_CODE_DOWNLOAD_DECLINED 2148270336

#define INET_E_CODE_INSTALL_BLOCKED_BY_HASH_POLICY 2148271360

#define INET_E_CODE_INSTALL_SUPPRESSED 2148271104

#define INET_E_CONNECTION_TIMEOUT 2148270091

#define INET_E_DATA_NOT_AVAILABLE 2148270087

#define INET_E_DEFAULT_ACTION 2148270097

#define INET_E_DOWNLOAD_BLOCKED_BY_INPRIVATE 2148271361

#define INET_E_DOWNLOAD_FAILURE 2148270088

#define INET_E_ERROR_FIRST 2148270082

#define INET_E_ERROR_LAST 2148271361

#define INET_E_INVALID_CERTIFICATE 2148270105

#define INET_E_INVALID_REQUEST 2148270092

#define INET_E_INVALID_URL 2148270082

#define INET_E_NO_SESSION 2148270083

#define INET_E_NO_VALID_MEDIA 2148270090

#define INET_E_OBJECT_NOT_FOUND 2148270086

#define INET_E_QUERYOPTION_UNKNOWN 2148270099

#define INET_E_REDIRECT_FAILED 2148270100

#define INET_E_REDIRECT_TO_DIR 2148270101

#define INET_E_REDIRECTING 2148270100

#define INET_E_RESERVED_1 2148270106

#define INET_E_RESOURCE_NOT_FOUND 2148270085

#define INET_E_RESULT_DISPATCHED 2148270592

#define INET_E_SECURITY_PROBLEM 2148270094

#define INET_E_TERMINATED_BIND 2148270104

#define INET_E_UNKNOWN_PROTOCOL 2148270093

#define INET_E_USE_DEFAULT_PROTOCOLHANDLER 2148270097

#define INET_E_USE_DEFAULT_SETTING 2148270098

#define INET_E_USE_EXTEND_BINDING 2148270103

#define INVALID_P_ROOT_SECURITY_ID -1

#define MAX_SIZE_SECURITY_ID 512

#define MK_S_ASYNCHRONOUS 262632

#define MKSYS_URLMONIKER 6

#define MUTZ_ACCEPT_WILDCARD_SCHEME 128

#define MUTZ_DONT_UNESCAPE 2048

#define MUTZ_DONT_USE_CACHE 4096

#define MUTZ_ENFORCERESTRICTED 256

#define MUTZ_FORCE_INTRANET_FLAGS 8192

#define MUTZ_IGNORE_ZONE_MAPPINGS 16384

#define MUTZ_ISFILE 2

#define MUTZ_NOSAVEDFILECHECK 1

#define MUTZ_REQUIRESAVEDFILECHECK 1024

#define MUTZ_RESERVED 512

#define PROTOCOLFLAG_NO_PICS_CHECK 1

#define S_ASYNCHRONOUS 262632

#define SECURITY_IE_STATE_GREEN 0

#define SECURITY_IE_STATE_RED 1

#define SET_FEATURE_IN_REGISTRY 4

#define SET_FEATURE_ON_PROCESS 2

#define SET_FEATURE_ON_THREAD 1

#define SET_FEATURE_ON_THREAD_INTERNET 64

#define SET_FEATURE_ON_THREAD_INTRANET 16

#define SET_FEATURE_ON_THREAD_LOCALMACHINE 8

#define SET_FEATURE_ON_THREAD_RESTRICTED 128

#define SET_FEATURE_ON_THREAD_TRUSTED 32

#define SOFTDIST_ADSTATE_AVAILABLE 1

#define SOFTDIST_ADSTATE_DOWNLOADED 2

#define SOFTDIST_ADSTATE_INSTALLED 3

#define SOFTDIST_ADSTATE_NONE 0

#define SOFTDIST_FLAG_DELETE_SUBSCRIPTION 8

#define SOFTDIST_FLAG_USAGE_AUTOINSTALL 4

#define SOFTDIST_FLAG_USAGE_EMAIL 1

#define SOFTDIST_FLAG_USAGE_PRECACHE 2

#define UAS_EXACTLEGACY 4096

#define Uri_CREATE_ALLOW_IMPLICIT_FILE_SCHEME 4

#define Uri_CREATE_ALLOW_IMPLICIT_WILDCARD_SCHEME 2

#define Uri_CREATE_ALLOW_RELATIVE 1

#define Uri_CREATE_CANONICALIZE 256

#define Uri_CREATE_CRACK_UNKNOWN_SCHEMES 512

#define Uri_CREATE_DECODE_EXTRA_INFO 64

#define Uri_CREATE_FILE_USE_DOS_PATH 32

#define Uri_CREATE_IE_SETTINGS 8192

#define Uri_CREATE_NO_CANONICALIZE 16

#define Uri_CREATE_NO_CRACK_UNKNOWN_SCHEMES 1024

#define Uri_CREATE_NO_DECODE_EXTRA_INFO 128

#define Uri_CREATE_NO_ENCODE_FORBIDDEN_CHARACTERS 32768

#define Uri_CREATE_NO_IE_SETTINGS 16384

#define Uri_CREATE_NO_PRE_PROCESS_HTML_URI 4096

#define Uri_CREATE_NOFRAG 8

#define Uri_CREATE_PRE_PROCESS_HTML_URI 2048

#define Uri_DISPLAY_IDN_HOST 4

#define Uri_DISPLAY_NO_FRAGMENT 1

#define Uri_ENCODING_HOST_IS_IDN 4

#define Uri_ENCODING_HOST_IS_PERCENT_ENCODED_CP 16

#define Uri_ENCODING_HOST_IS_PERCENT_ENCODED_UTF8 8

#define Uri_ENCODING_QUERY_AND_FRAGMENT_IS_CP 64

#define Uri_ENCODING_QUERY_AND_FRAGMENT_IS_PERCENT_ENCODED_UTF8 32

#define Uri_ENCODING_RFC 41

#define Uri_ENCODING_USER_INFO_AND_PATH_IS_CP 2

#define Uri_ENCODING_USER_INFO_AND_PATH_IS_PERCENT_ENCODED_UTF8 1

#define Uri_PUNYCODE_IDN_HOST 2

#define UriBuilder_USE_ORIGINAL_FLAGS 1

#define URL_MK_LEGACY 0

#define URL_MK_NO_CANONICALIZE 2

#define URL_MK_UNIFORM 1

#define URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY 4612

#define URLACTION_ACTIVEX_CURR_MAX 4619

#define URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION 4618

#define URLACTION_ACTIVEX_MAX 5119

#define URLACTION_ACTIVEX_MIN 4608

#define URLACTION_ACTIVEX_NO_WEBOC_SCRIPT 4614

#define URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY 4610

#define URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST 4619

#define URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY 4609

#define URLACTION_ACTIVEX_OVERRIDE_OPTIN 4616

#define URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION 4615

#define URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY 4611

#define URLACTION_ACTIVEX_RUN 4608

#define URLACTION_ACTIVEX_SCRIPTLET_RUN 4617

#define URLACTION_ACTIVEX_TREATASUNTRUSTED 4613

#define URLACTION_ALLOW_APEVALUATION 8961

#define URLACTION_ALLOW_RESTRICTEDPROTOCOLS 8960

#define URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE 5128

#define URLACTION_AUTHENTICATE_CLIENT 6657

#define URLACTION_AUTOMATIC_ACTIVEX_UI 8705

#define URLACTION_AUTOMATIC_DOWNLOAD_UI 8704

#define URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN 8704

#define URLACTION_BEHAVIOR_MIN 8192

#define URLACTION_BEHAVIOR_RUN 8192

#define URLACTION_CHANNEL_SOFTDIST_MAX 7935

#define URLACTION_CHANNEL_SOFTDIST_MIN 7680

#define URLACTION_CHANNEL_SOFTDIST_PERMISSIONS 7685

#define URLACTION_CLIENT_CERT_PROMPT 6660

#define URLACTION_COOKIES 6658

#define URLACTION_COOKIES_ENABLED 6672

#define URLACTION_COOKIES_SESSION 6659

#define URLACTION_COOKIES_SESSION_THIRD_PARTY 6662

#define URLACTION_COOKIES_THIRD_PARTY 6661

#define URLACTION_CREDENTIALS_USE 6656

#define URLACTION_CROSS_DOMAIN_DATA 5126

#define URLACTION_DOTNET_USERCONTROLS 8197

#define URLACTION_DOWNLOAD_CURR_MAX 4100

#define URLACTION_DOWNLOAD_MAX 4607

#define URLACTION_DOWNLOAD_MIN 4096

#define URLACTION_DOWNLOAD_SIGNED_ACTIVEX 4097

#define URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX 4100

#define URLACTION_FEATURE_BLOCK_INPUT_PROMPTS 8453

#define URLACTION_FEATURE_DATA_BINDING 8454

#define URLACTION_FEATURE_FORCE_ADDR_AND_STATUS 8452

#define URLACTION_FEATURE_MIME_SNIFFING 8448

#define URLACTION_FEATURE_MIN 8448

#define URLACTION_FEATURE_SCRIPT_STATUS_BAR 8451

#define URLACTION_FEATURE_WINDOW_RESTRICTIONS 8450

#define URLACTION_FEATURE_ZONE_ELEVATION 8449

#define URLACTION_HTML_FONT_DOWNLOAD 5636

#define URLACTION_HTML_INCLUDE_FILE_PATH 5642

#define URLACTION_HTML_JAVA_RUN 5637

#define URLACTION_HTML_MAX 6143

#define URLACTION_HTML_META_REFRESH 5640

#define URLACTION_HTML_MIN 5632

#define URLACTION_HTML_MIXED_CONTENT 5641

#define URLACTION_HTML_SUBFRAME_NAVIGATE 5639

#define URLACTION_HTML_SUBMIT_FORMS 5633

#define URLACTION_HTML_SUBMIT_FORMS_FROM 5634

#define URLACTION_HTML_SUBMIT_FORMS_TO 5635

#define URLACTION_HTML_USERDATA_SAVE 5638

#define URLACTION_INFODELIVERY_CURR_MAX 7430

#define URLACTION_INFODELIVERY_MAX 7679

#define URLACTION_INFODELIVERY_MIN 7424

#define URLACTION_INFODELIVERY_NO_ADDING_CHANNELS 7424

#define URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS 7427

#define URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING 7430

#define URLACTION_INFODELIVERY_NO_EDITING_CHANNELS 7425

#define URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS 7428

#define URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS 7426

#define URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS 7429

#define URLACTION_INPRIVATE_BLOCKING 9984

#define URLACTION_JAVA_CURR_MAX 7168

#define URLACTION_JAVA_MAX 7423

#define URLACTION_JAVA_MIN 7168

#define URLACTION_JAVA_PERMISSIONS 7168

#define URLACTION_LOOSE_XAML 9218

#define URLACTION_LOWRIGHTS 9472

#define URLACTION_MIN 4096

#define URLACTION_NETWORK_CURR_MAX 6672

#define URLACTION_NETWORK_MAX 7167

#define URLACTION_NETWORK_MIN 6656

#define URLACTION_SCRIPT_CURR_MAX 5129

#define URLACTION_SCRIPT_JAVA_USE 5122

#define URLACTION_SCRIPT_MAX 5631

#define URLACTION_SCRIPT_MIN 5120

#define URLACTION_SCRIPT_OVERRIDE_SAFETY 5121

#define URLACTION_SCRIPT_PASTE 5127

#define URLACTION_SCRIPT_RUN 5120

#define URLACTION_SCRIPT_SAFE_ACTIVEX 5125

#define URLACTION_SCRIPT_XSSFILTER 5129

#define URLACTION_SHELL_CURR_MAX 6159

#define URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY 6155

#define URLACTION_SHELL_EXECUTE_HIGHRISK 6150

#define URLACTION_SHELL_EXECUTE_LOWRISK 6152

#define URLACTION_SHELL_EXECUTE_MODRISK 6151

#define URLACTION_SHELL_EXTENSIONSECURITY 6156

#define URLACTION_SHELL_FILE_DOWNLOAD 6147

#define URLACTION_SHELL_INSTALL_DTITEMS 6144

#define URLACTION_SHELL_MAX 6655

#define URLACTION_SHELL_MIN 6144

#define URLACTION_SHELL_MOVE_OR_COPY 6146

#define URLACTION_SHELL_POPUPMGR 6153

#define URLACTION_SHELL_PREVIEW 6159

#define URLACTION_SHELL_REMOTEQUERY 6158

#define URLACTION_SHELL_RTF_OBJECTS_LOAD 6154

#define URLACTION_SHELL_SECURE_DRAGSOURCE 6157

#define URLACTION_SHELL_SHELLEXECUTE 6150

#define URLACTION_SHELL_VERB 6148

#define URLACTION_SHELL_WEBVIEW_VERB 6149

#define URLACTION_WINDOWS_BROWSER_APPLICATIONS 9216

#define URLACTION_WINFX_SETUP 9728

#define URLACTION_XPS_DOCUMENTS 9217

#define URLMON_OPTION_URL_ENCODING 268435460

#define URLMON_OPTION_USE_BINDSTRINGCREDS 268435464

#define URLMON_OPTION_USE_BROWSERAPPSDOCUMENTS 268435472

#define URLMON_OPTION_USERAGENT 268435457

#define URLMON_OPTION_USERAGENT_REFRESH 268435458

#define URLOSTRM_GETNEWESTVERSION 3

#define URLOSTRM_USECACHEDCOPY 2

#define URLOSTRM_USECACHEDCOPY_ONLY 1

#define URLPOLICY_ACTIVEX_CHECK_LIST 65536

#define URLPOLICY_ALLOW 0

#define URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE 65536

#define URLPOLICY_AUTHENTICATE_CLEARTEXT_OK 0

#define URLPOLICY_AUTHENTICATE_MUTUAL_ONLY 196608

#define URLPOLICY_BEHAVIOR_CHECK_LIST 65536

#define URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL 196608

#define URLPOLICY_CHANNEL_SOFTDIST_PRECACHE 131072

#define URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT 65536

#define URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY 196608

#define URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT 131072

#define URLPOLICY_CREDENTIALS_MUST_PROMPT_USER 65536

#define URLPOLICY_CREDENTIALS_SILENT_LOGON_OK 0

#define URLPOLICY_DISALLOW 3

#define URLPOLICY_DONTCHECKDLGBOX 256

#define URLPOLICY_JAVA_CUSTOM 8388608

#define URLPOLICY_JAVA_HIGH 65536

#define URLPOLICY_JAVA_LOW 196608

#define URLPOLICY_JAVA_MEDIUM 131072

#define URLPOLICY_JAVA_PROHIBIT 0

#define URLPOLICY_LOG_ON_ALLOW 64

#define URLPOLICY_LOG_ON_DISALLOW 128

#define URLPOLICY_MASK_PERMISSIONS 15

#define URLPOLICY_NOTIFY_ON_ALLOW 16

#define URLPOLICY_NOTIFY_ON_DISALLOW 32

#define URLPOLICY_QUERY 1

#define URLZONE_ESC_FLAG 256

#define WININETINFO_OPTION_LOCK_HANDLE 65534

typedef enum __MIDL_IAuthenticateEx_0001 {
    AUTHENTICATEF_BASIC=2,
    AUTHENTICATEF_HTTP=4,
    AUTHENTICATEF_PROXY=1
} __MIDL_IAuthenticateEx_0001;

typedef enum __MIDL_IBindStatusCallback_0001 {
    BINDVERB_CUSTOM=3,
    BINDVERB_GET=0,
    BINDVERB_POST=1,
    BINDVERB_PUT=2,
    BINDVERB_RESERVED1=4
} __MIDL_IBindStatusCallback_0001;

typedef enum __MIDL_IBindStatusCallback_0002 {
    BINDINFOF_URLENCODEDEXTRAINFO=2,
    BINDINFOF_URLENCODESTGMEDDATA=1
} __MIDL_IBindStatusCallback_0002;

typedef enum __MIDL_IBindStatusCallback_0003 {
    BINDF_ASYNCHRONOUS=1,
    BINDF_ASYNCSTORAGE=2,
    BINDF_DIRECT_READ=131072,
    BINDF_ENFORCERESTRICTED=8388608,
    BINDF_FORMS_SUBMIT=262144,
    BINDF_FREE_THREADED=65536,
    BINDF_FROMURLMON=1048576,
    BINDF_FWD_BACK=2097152,
    BINDF_GETCLASSOBJECT=16384,
    BINDF_GETFROMCACHE_IF_NET_FAIL=524288,
    BINDF_GETNEWESTVERSION=16,
    BINDF_HYPERLINK=1024,
    BINDF_IGNORESECURITYPROBLEM=256,
    BINDF_NEEDFILE=64,
    BINDF_NOPROGRESSIVERENDERING=4,
    BINDF_NOWRITECACHE=32,
    BINDF_NO_UI=2048,
    BINDF_OFFLINEOPERATION=8,
    BINDF_PRAGMA_NO_CACHE=8192,
    BINDF_PREFERDEFAULTHANDLER=4194304,
    BINDF_PULLDATA=128,
    BINDF_RESERVED_1=32768,
    BINDF_RESYNCHRONIZE=512,
    BINDF_SILENTOPERATION=4096
} __MIDL_IBindStatusCallback_0003;

typedef enum __MIDL_IBindStatusCallback_0004 {
    URL_ENCODING_DISABLE_UTF8=536870912,
    URL_ENCODING_ENABLE_UTF8=268435456,
    URL_ENCODING_NONE=0
} __MIDL_IBindStatusCallback_0004;

typedef enum __MIDL_IBindStatusCallback_0005 {
    BINDINFO_OPTIONS_ALLOWCONNECTDATA=536870912,
    BINDINFO_OPTIONS_BINDTOOBJECT=1048576,
    BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS=1073741824,
    BINDINFO_OPTIONS_DISABLE_UTF8=262144,
    BINDINFO_OPTIONS_ENABLE_UTF8=131072,
    BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS=16777216,
    BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN=4194304,
    BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE=33554432,
    BINDINFO_OPTIONS_SECURITYOPTOUT=2097152,
    BINDINFO_OPTIONS_SHDOCVW_NAVIGATE=1073741825,
    BINDINFO_OPTIONS_USEBINDSTRINGCREDS=8388608,
    BINDINFO_OPTIONS_USE_IE_ENCODING=524288,
    BINDINFO_OPTIONS_WININETFLAG=65536,
    BINDINFO_WPC_DOWNLOADBLOCKED=134217728,
    BINDINFO_WPC_LOGGING_ENABLED=268435456
} __MIDL_IBindStatusCallback_0005;

typedef enum __MIDL_IBindStatusCallback_0006 {
    BSCF_64BITLENGTHDOWNLOAD=64,
    BSCF_AVAILABLEDATASIZEUNKNOWN=16,
    BSCF_DATAFULLYAVAILABLE=8,
    BSCF_FIRSTDATANOTIFICATION=1,
    BSCF_INTERMEDIATEDATANOTIFICATION=2,
    BSCF_LASTDATANOTIFICATION=4,
    BSCF_SKIPDRAINDATAFORFILEURLS=32
} __MIDL_IBindStatusCallback_0006;

typedef enum __MIDL_IBindStatusCallbackEx_0001 {
    BINDF2_DISABLEAUTOCOOKIEHANDLING=2,
    BINDF2_DISABLEBASICOVERHTTP=1,
    BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID=8,
    BINDF2_READ_DATA_GREATER_THAN_4GB=4,
    BINDF2_RESERVED_1=-2147483648,
    BINDF2_RESERVED_2=1073741824,
    BINDF2_RESERVED_3=536870912
} __MIDL_IBindStatusCallbackEx_0001;

typedef enum __MIDL_ICodeInstall_0001 {
    CIP_ACCESS_DENIED=1,
    CIP_DISK_FULL=0,
    CIP_EXE_SELF_REGISTERATION_TIMEOUT=6,
    CIP_NAME_CONFLICT=4,
    CIP_NEED_REBOOT=8,
    CIP_NEED_REBOOT_UI_PERMISSION=9,
    CIP_NEWER_VERSION_EXISTS=2,
    CIP_OLDER_VERSION_EXISTS=3,
    CIP_TRUST_VERIFICATION_COMPONENT_MISSING=5,
    CIP_UNSAFE_TO_ABORT=7
} __MIDL_ICodeInstall_0001;

typedef enum __MIDL_IInternetSecurityManager_0001 {
    PUAF_ACCEPT_WILDCARD_SCHEME=128,
    PUAF_CHECK_TIFS=16,
    PUAF_DEFAULT=0,
    PUAF_DEFAULTZONEPOL=262144,
    PUAF_DONTCHECKBOXINDIALOG=32,
    PUAF_DONT_USE_CACHE=4096,
    PUAF_DRAGPROTOCOLCHECK=2097152,
    PUAF_ENFORCERESTRICTED=256,
    PUAF_FORCEUI_FOREGROUND=8,
    PUAF_ISFILE=2,
    PUAF_LMZ_LOCKED=131072,
    PUAF_LMZ_UNLOCKED=65536,
    PUAF_NOSAVEDFILECHECK=512,
    PUAF_NOUI=1,
    PUAF_NOUIIFLOCKED=1048576,
    PUAF_NPL_USE_LOCKED_IF_RESTRICTED=524288,
    PUAF_REQUIRESAVEDFILECHECK=1024,
    PUAF_RESERVED1=8192,
    PUAF_RESERVED2=16384,
    PUAF_TRUSTED=64,
    PUAF_WARN_IF_DENIED=4
} __MIDL_IInternetSecurityManager_0001;

typedef enum __MIDL_IInternetSecurityManager_0002 {
    PUAFOUT_DEFAULT=0,
    PUAFOUT_ISLOCKZONEPOLICY=1
} __MIDL_IInternetSecurityManager_0002;

typedef enum __MIDL_IInternetSecurityManager_0003 {
    SZM_CREATE=0,
    SZM_DELETE=1
} __MIDL_IInternetSecurityManager_0003;

typedef enum __MIDL_IInternetZoneManager_0001 {
    MAX_ZONE_DESCRIPTION=200,
    MAX_ZONE_PATH=260
} __MIDL_IInternetZoneManager_0001;

typedef enum __MIDL_IInternetZoneManager_0002 {
    ZAFLAGS_ADD_SITES=2,
    ZAFLAGS_CUSTOM_EDIT=1,
    ZAFLAGS_DETECT_INTRANET=256,
    ZAFLAGS_INCLUDE_INTRANET_SITES=16,
    ZAFLAGS_INCLUDE_PROXY_OVERRIDE=8,
    ZAFLAGS_NO_CACHE=262144,
    ZAFLAGS_NO_UI=32,
    ZAFLAGS_REQUIRE_VERIFICATION=4,
    ZAFLAGS_SUPPORTS_VERIFICATION=64,
    ZAFLAGS_UNC_AS_INTRANET=128,
    ZAFLAGS_USE_LOCKED_ZONES=65536,
    ZAFLAGS_VERIFY_TEMPLATE_SETTINGS=131072
} __MIDL_IInternetZoneManager_0002;

typedef enum __MIDL_IMonikerProp_0001 {
    CLASSIDPROP=2,
    MIMETYPEPROP=0,
    POPUPLEVELPROP=4,
    TRUSTEDDOWNLOADPROP=3,
    USE_SRC_URL=1
} __MIDL_IMonikerProp_0001;

typedef enum __MIDL_IUri_0001 {
    Uri_PROPERTY_ABSOLUTE_URI=0,
    Uri_PROPERTY_AUTHORITY=1,
    Uri_PROPERTY_DISPLAY_URI=2,
    Uri_PROPERTY_DOMAIN=3,
    Uri_PROPERTY_DWORD_LAST=19,
    Uri_PROPERTY_DWORD_START=16,
    Uri_PROPERTY_EXTENSION=4,
    Uri_PROPERTY_FRAGMENT=5,
    Uri_PROPERTY_HOST=6,
    Uri_PROPERTY_HOST_TYPE=15,
    Uri_PROPERTY_PASSWORD=7,
    Uri_PROPERTY_PATH=8,
    Uri_PROPERTY_PATH_AND_QUERY=9,
    Uri_PROPERTY_PORT=16,
    Uri_PROPERTY_QUERY=10,
    Uri_PROPERTY_RAW_URI=11,
    Uri_PROPERTY_SCHEME=17,
    Uri_PROPERTY_SCHEME_NAME=12,
    Uri_PROPERTY_STRING_LAST=15,
    Uri_PROPERTY_STRING_START=1,
    Uri_PROPERTY_USER_INFO=13,
    Uri_PROPERTY_USER_NAME=14,
    Uri_PROPERTY_ZONE=18
} __MIDL_IUri_0001;

typedef enum __MIDL_IUri_0002 {
    Uri_HOST_DNS=1,
    Uri_HOST_IDN=4,
    Uri_HOST_IPV4=2,
    Uri_HOST_IPV6=3,
    Uri_HOST_UNKNOWN=0
} __MIDL_IUri_0002;

typedef struct _REMSECURITY_ATTRIBUTES _REMSECURITY_ATTRIBUTES, *P_REMSECURITY_ATTRIBUTES;

struct _REMSECURITY_ATTRIBUTES {
    DWORD nLength;
    DWORD lpSecurityDescriptor;
    BOOL bInheritHandle;
};

typedef struct _tagAUTHENTICATEINFO _tagAUTHENTICATEINFO, *P_tagAUTHENTICATEINFO;

struct _tagAUTHENTICATEINFO {
    DWORD dwFlags;
    DWORD dwReserved;
};

typedef struct _tagCODEBASEHOLD _tagCODEBASEHOLD, *P_tagCODEBASEHOLD;

struct _tagCODEBASEHOLD {
    ULONG cbSize;
    LPWSTR szDistUnit;
    LPWSTR szCodeBase;
    DWORD dwVersionMS;
    DWORD dwVersionLS;
    DWORD dwStyle;
};

typedef struct _tagDATAINFO _tagDATAINFO, *P_tagDATAINFO;

struct _tagDATAINFO {
    ULONG ulTotalSize;
    ULONG ulavrPacketSize;
    ULONG ulConnectSpeed;
    ULONG ulProcessorSpeed;
};

typedef struct _tagHIT_LOGGING_INFO _tagHIT_LOGGING_INFO, *P_tagHIT_LOGGING_INFO;

struct _tagHIT_LOGGING_INFO {
    DWORD dwStructSize;
    LPSTR lpszLoggedUrlName;
    SYSTEMTIME StartTime;
    SYSTEMTIME EndTime;
    LPSTR lpszExtendedInfo;
};

typedef enum _tagINTERNETFEATURELIST {
    FEATURE_ADDON_MANAGEMENT=13,
    FEATURE_BEHAVIORS=6,
    FEATURE_BLOCK_INPUT_PROMPTS=27,
    FEATURE_DISABLE_LEGACY_COMPRESSION=22,
    FEATURE_DISABLE_MK_PROTOCOL=7,
    FEATURE_DISABLE_NAVIGATION_SOUNDS=21,
    FEATURE_DISABLE_TELNET_PROTOCOL=25,
    FEATURE_ENTRY_COUNT=28,
    FEATURE_FEEDS=26,
    FEATURE_FORCE_ADDR_AND_STATUS=23,
    FEATURE_GET_URL_DOM_FILEPATH_UNENCODED=18,
    FEATURE_HTTP_USERNAME_PASSWORD_DISABLE=15,
    FEATURE_LOCALMACHINE_LOCKDOWN=8,
    FEATURE_MIME_HANDLING=2,
    FEATURE_MIME_SNIFFING=3,
    FEATURE_OBJECT_CACHING=0,
    FEATURE_PROTOCOL_LOCKDOWN=14,
    FEATURE_RESTRICT_ACTIVEXINSTALL=10,
    FEATURE_RESTRICT_FILEDOWNLOAD=12,
    FEATURE_SAFE_BINDTOOBJECT=16,
    FEATURE_SECURITYBAND=9,
    FEATURE_SSLUX=20,
    FEATURE_TABBED_BROWSING=19,
    FEATURE_UNC_SAVEDFILECHECK=17,
    FEATURE_VALIDATE_NAVIGATE_URL=11,
    FEATURE_WEBOC_POPUPMANAGEMENT=5,
    FEATURE_WINDOW_RESTRICTIONS=4,
    FEATURE_XMLHTTP=24,
    FEATURE_ZONE_ELEVATION=1
} _tagINTERNETFEATURELIST;

typedef enum _tagOIBDG_FLAGS {
    OIBDG_APARTMENTTHREADED=256,
    OIBDG_DATAONLY=4096
} _tagOIBDG_FLAGS;

typedef enum _tagPARSEACTION {
    PARSE_ANCHOR=6,
    PARSE_CANONICALIZE=1,
    PARSE_DECODE_IS_ESCAPE=8,
    PARSE_DOCUMENT=5,
    PARSE_DOMAIN=15,
    PARSE_ENCODE_IS_UNESCAPE=7,
    PARSE_ESCAPE=18,
    PARSE_FRIENDLY=2,
    PARSE_LOCATION=16,
    PARSE_MIME=11,
    PARSE_PATH_FROM_URL=9,
    PARSE_ROOTDOCUMENT=4,
    PARSE_SCHEMA=13,
    PARSE_SECURITY_DOMAIN=17,
    PARSE_SECURITY_URL=3,
    PARSE_SERVER=12,
    PARSE_SITE=14,
    PARSE_UNESCAPE=19,
    PARSE_URL_FROM_PATH=10
} _tagPARSEACTION;

typedef enum _tagPI_FLAGS {
    PD_FORCE_SWITCH=65536,
    PI_APARTMENTTHREADED=256,
    PI_CLASSINSTALL=512,
    PI_CLSIDLOOKUP=32,
    PI_DATAPROGRESS=64,
    PI_FILTER_MODE=2,
    PI_FORCE_ASYNC=4,
    PI_LOADAPPDIRECT=16384,
    PI_MIMEVERIFICATION=16,
    PI_NOMIMEHANDLER=32768,
    PI_PARSE_URL=1,
    PI_PASSONBINDCTX=8192,
    PI_PREFERDEFAULTHANDLER=131072,
    PI_SYNCHRONOUS=128,
    PI_USE_WORKERTHREAD=8
} _tagPI_FLAGS;

typedef struct _tagPROTOCOLDATA _tagPROTOCOLDATA, *P_tagPROTOCOLDATA;

struct _tagPROTOCOLDATA {
    DWORD grfFlags;
    DWORD dwState;
    LPVOID pData;
    ULONG cbData;
};

typedef struct _tagPROTOCOLFILTERDATA _tagPROTOCOLFILTERDATA, *P_tagPROTOCOLFILTERDATA;

typedef struct IInternetProtocolSink IInternetProtocolSink, *PIInternetProtocolSink;

typedef struct IInternetProtocol IInternetProtocol, *PIInternetProtocol;

typedef struct IInternetProtocolSinkVtbl IInternetProtocolSinkVtbl, *PIInternetProtocolSinkVtbl;

typedef struct _tagPROTOCOLDATA PROTOCOLDATA;

typedef struct IInternetProtocolVtbl IInternetProtocolVtbl, *PIInternetProtocolVtbl;

typedef struct IInternetBindInfo IInternetBindInfo, *PIInternetBindInfo;

typedef struct IInternetBindInfoVtbl IInternetBindInfoVtbl, *PIInternetBindInfoVtbl;

struct IInternetProtocolSinkVtbl {
    HRESULT (* QueryInterface)(struct IInternetProtocolSink *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetProtocolSink *);
    ULONG (* Release)(struct IInternetProtocolSink *);
    HRESULT (* Switch)(struct IInternetProtocolSink *, PROTOCOLDATA *);
    HRESULT (* ReportProgress)(struct IInternetProtocolSink *, ULONG, LPCWSTR);
    HRESULT (* ReportData)(struct IInternetProtocolSink *, DWORD, ULONG, ULONG);
    HRESULT (* ReportResult)(struct IInternetProtocolSink *, HRESULT, DWORD, LPCWSTR);
};

struct IInternetProtocolSink {
    struct IInternetProtocolSinkVtbl * lpVtbl;
};

struct IInternetProtocolVtbl {
    HRESULT (* QueryInterface)(struct IInternetProtocol *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetProtocol *);
    ULONG (* Release)(struct IInternetProtocol *);
    HRESULT (* Start)(struct IInternetProtocol *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (* Continue)(struct IInternetProtocol *, PROTOCOLDATA *);
    HRESULT (* Abort)(struct IInternetProtocol *, HRESULT, DWORD);
    HRESULT (* Terminate)(struct IInternetProtocol *, DWORD);
    HRESULT (* Suspend)(struct IInternetProtocol *);
    HRESULT (* Resume)(struct IInternetProtocol *);
    HRESULT (* Read)(struct IInternetProtocol *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct IInternetProtocol *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* LockRequest)(struct IInternetProtocol *, DWORD);
    HRESULT (* UnlockRequest)(struct IInternetProtocol *);
};

struct IInternetProtocol {
    struct IInternetProtocolVtbl * lpVtbl;
};

struct IInternetBindInfo {
    struct IInternetBindInfoVtbl * lpVtbl;
};

struct IInternetBindInfoVtbl {
    HRESULT (* QueryInterface)(struct IInternetBindInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetBindInfo *);
    ULONG (* Release)(struct IInternetBindInfo *);
    HRESULT (* GetBindInfo)(struct IInternetBindInfo *, DWORD *, BINDINFO *);
    HRESULT (* GetBindString)(struct IInternetBindInfo *, ULONG, LPOLESTR *, ULONG, ULONG *);
};

struct _tagPROTOCOLFILTERDATA {
    DWORD cbSize;
    struct IInternetProtocolSink * pProtocolSink;
    struct IInternetProtocol * pProtocol;
    struct IUnknown * pUnk;
    DWORD dwFilterFlags;
};

typedef enum _tagPSUACTION {
    PSU_DEFAULT=1,
    PSU_SECURITY_URL_ONLY=2
} _tagPSUACTION;

typedef enum _tagQUERYOPTION {
    QUERY_CAN_NAVIGATE=7,
    QUERY_CONTENT_ENCODING=3,
    QUERY_CONTENT_TYPE=4,
    QUERY_EXPIRATION_DATE=1,
    QUERY_IS_CACHED=9,
    QUERY_IS_CACHED_OR_MAPPED=11,
    QUERY_IS_INSTALLEDENTRY=10,
    QUERY_IS_SAFE=14,
    QUERY_IS_SECURE=13,
    QUERY_RECOMBINE=6,
    QUERY_REFRESH=5,
    QUERY_TIME_OF_LAST_CHANGE=2,
    QUERY_USES_CACHE=12,
    QUERY_USES_HISTORYFOLDER=15,
    QUERY_USES_NETWORK=8
} _tagQUERYOPTION;

typedef struct _tagRemBINDINFO _tagRemBINDINFO, *P_tagRemBINDINFO;

typedef struct _REMSECURITY_ATTRIBUTES REMSECURITY_ATTRIBUTES;

struct _tagRemBINDINFO {
    ULONG cbSize;
    LPWSTR szExtraInfo;
    DWORD grfBindInfoF;
    DWORD dwBindVerb;
    LPWSTR szCustomVerb;
    DWORD cbstgmedData;
    DWORD dwOptions;
    DWORD dwOptionsFlags;
    DWORD dwCodePage;
    REMSECURITY_ATTRIBUTES securityAttributes;
    IID iid;
    struct IUnknown * pUnk;
    DWORD dwReserved;
};

typedef struct _tagSOFTDISTINFO _tagSOFTDISTINFO, *P_tagSOFTDISTINFO;

struct _tagSOFTDISTINFO {
    ULONG cbSize;
    DWORD dwFlags;
    DWORD dwAdState;
    LPWSTR szTitle;
    LPWSTR szAbstract;
    LPWSTR szHREF;
    DWORD dwInstalledVersionMS;
    DWORD dwInstalledVersionLS;
    DWORD dwUpdateVersionMS;
    DWORD dwUpdateVersionLS;
    DWORD dwAdvertisedVersionMS;
    DWORD dwAdvertisedVersionLS;
    DWORD dwReserved;
};

typedef struct _tagStartParam _tagStartParam, *P_tagStartParam;

struct _tagStartParam {
    IID iid;
    struct IBindCtx * pIBindCtx;
    struct IUnknown * pItf;
};

typedef enum _URLZONEREG {
    URLZONEREG_DEFAULT=0,
    URLZONEREG_HKCU=2,
    URLZONEREG_HKLM=1
} _URLZONEREG;

typedef struct _ZONEATTRIBUTES _ZONEATTRIBUTES, *P_ZONEATTRIBUTES;

struct _ZONEATTRIBUTES {
    ULONG cbSize;
    WCHAR szDisplayName[260];
    WCHAR szDescription[200];
    WCHAR szIconPath[260];
    DWORD dwTemplateMinLevel;
    DWORD dwTemplateRecommended;
    DWORD dwTemplateCurrentLevel;
    DWORD dwFlags;
};

typedef enum __MIDL_IAuthenticateEx_0001 AUTHENTICATEF;

typedef struct _tagAUTHENTICATEINFO AUTHENTICATEINFO;

typedef enum __MIDL_IBindStatusCallback_0003 BINDF;

typedef enum __MIDL_IBindStatusCallbackEx_0001 BINDF2;

typedef enum __MIDL_IBindStatusCallback_0005 BINDINFO_OPTIONS;

typedef enum __MIDL_IBindStatusCallback_0002 BINDINFOF;

typedef enum tagBINDSTATUS {
    BINDSTATUS_64BIT_PROGRESS=56,
    BINDSTATUS_ACCEPTRANGES=33,
    BINDSTATUS_BEGINDOWNLOADCOMPONENTS=7,
    BINDSTATUS_BEGINDOWNLOADDATA=4,
    BINDSTATUS_BEGINSYNCOPERATION=15,
    BINDSTATUS_BEGINUPLOADDATA=17,
    BINDSTATUS_CACHECONTROL=48,
    BINDSTATUS_CACHEFILENAMEAVAILABLE=14,
    BINDSTATUS_CLASSIDAVAILABLE=12,
    BINDSTATUS_CLASSINSTALLLOCATION=23,
    BINDSTATUS_CLSIDCANINSTANTIATE=28,
    BINDSTATUS_COMPACT_POLICY_RECEIVED=35,
    BINDSTATUS_CONNECTING=2,
    BINDSTATUS_CONTENTDISPOSITIONATTACH=26,
    BINDSTATUS_CONTENTDISPOSITIONFILENAME=49,
    BINDSTATUS_COOKIE_SENT=34,
    BINDSTATUS_COOKIE_STATE_ACCEPT=38,
    BINDSTATUS_COOKIE_STATE_DOWNGRADE=42,
    BINDSTATUS_COOKIE_STATE_LEASH=41,
    BINDSTATUS_COOKIE_STATE_PROMPT=40,
    BINDSTATUS_COOKIE_STATE_REJECT=39,
    BINDSTATUS_COOKIE_STATE_UNKNOWN=37,
    BINDSTATUS_COOKIE_SUPPRESSED=36,
    BINDSTATUS_DECODING=24,
    BINDSTATUS_DIRECTBIND=30,
    BINDSTATUS_DISPLAYNAMEAVAILABLE=52,
    BINDSTATUS_DOWNLOADINGDATA=5,
    BINDSTATUS_ENCODING=21,
    BINDSTATUS_ENDDOWNLOADCOMPONENTS=9,
    BINDSTATUS_ENDDOWNLOADDATA=6,
    BINDSTATUS_ENDSYNCOPERATION=16,
    BINDSTATUS_ENDUPLOADDATA=19,
    BINDSTATUS_FILTERREPORTMIMETYPE=27,
    BINDSTATUS_FINDINGRESOURCE=1,
    BINDSTATUS_INSTALLINGCOMPONENTS=8,
    BINDSTATUS_IUNKNOWNAVAILABLE=29,
    BINDSTATUS_LOADINGMIMEHANDLER=25,
    BINDSTATUS_MIMETEXTPLAINMISMATCH=50,
    BINDSTATUS_MIMETYPEAVAILABLE=13,
    BINDSTATUS_P3P_HEADER=44,
    BINDSTATUS_PERSISTENT_COOKIE_RECEIVED=46,
    BINDSTATUS_POLICY_HREF=43,
    BINDSTATUS_PROTOCOLCLASSID=20,
    BINDSTATUS_PROXYDETECTING=32,
    BINDSTATUS_PUBLISHERAVAILABLE=51,
    BINDSTATUS_RAWMIMETYPE=31,
    BINDSTATUS_REDIRECTING=3,
    BINDSTATUS_SENDINGREQUEST=11,
    BINDSTATUS_SERVER_MIMETYPEAVAILABLE=54,
    BINDSTATUS_SESSION_COOKIES_ALLOWED=47,
    BINDSTATUS_SESSION_COOKIE_RECEIVED=45,
    BINDSTATUS_SNIFFED_CLASSIDAVAILABLE=55,
    BINDSTATUS_SSLUX_NAVBLOCKED=53,
    BINDSTATUS_UPLOADINGDATA=18,
    BINDSTATUS_USINGCACHEDCOPY=10,
    BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE=22
} tagBINDSTATUS;

typedef enum tagBINDSTATUS BINDSTATUS;

typedef enum tagBINDSTRING {
    BINDSTRING_ACCEPT_ENCODINGS=11,
    BINDSTRING_ACCEPT_MIMES=2,
    BINDSTRING_EXTRA_URL=3,
    BINDSTRING_FLAG_BIND_TO_OBJECT=16,
    BINDSTRING_HEADERS=1,
    BINDSTRING_IID=15,
    BINDSTRING_LANGUAGE=4,
    BINDSTRING_OS=9,
    BINDSTRING_PASSWORD=6,
    BINDSTRING_POST_COOKIE=12,
    BINDSTRING_POST_DATA_MIME=13,
    BINDSTRING_PTR_BIND_CONTEXT=17,
    BINDSTRING_UA_COLOR=8,
    BINDSTRING_UA_PIXELS=7,
    BINDSTRING_URL=14,
    BINDSTRING_USERNAME=5,
    BINDSTRING_USER_AGENT=10,
    BINDSTRING_XDR_ORIGIN=18
} tagBINDSTRING;

typedef enum tagBINDSTRING BINDSTRING;

typedef enum __MIDL_IBindStatusCallback_0001 BINDVERB;

typedef enum __MIDL_IBindStatusCallback_0006 BSCF;

typedef enum __MIDL_ICodeInstall_0001 CIP_STATUS;

typedef struct _tagCODEBASEHOLD CODEBASEHOLD;

typedef struct CONFIRMSAFETY CONFIRMSAFETY, *PCONFIRMSAFETY;

struct CONFIRMSAFETY {
    CLSID clsid;
    struct IUnknown * pUnk;
    DWORD dwFlags;
};

typedef struct _tagDATAINFO DATAINFO;

typedef struct _tagHIT_LOGGING_INFO HIT_LOGGING_INFO;

typedef struct IAuthenticateEx IAuthenticateEx, *PIAuthenticateEx;

typedef struct IAuthenticateExVtbl IAuthenticateExVtbl, *PIAuthenticateExVtbl;

struct IAuthenticateEx {
    struct IAuthenticateExVtbl * lpVtbl;
};

struct IAuthenticateExVtbl {
    HRESULT (* QueryInterface)(struct IAuthenticateEx *, IID *, void * *);
    ULONG (* AddRef)(struct IAuthenticateEx *);
    ULONG (* Release)(struct IAuthenticateEx *);
    HRESULT (* Authenticate)(struct IAuthenticateEx *, HWND *, LPWSTR *, LPWSTR *);
    HRESULT (* AuthenticateEx)(struct IAuthenticateEx *, HWND *, LPWSTR *, LPWSTR *, AUTHENTICATEINFO *);
};

typedef struct IBindProtocol IBindProtocol, *PIBindProtocol;

typedef struct IBindProtocolVtbl IBindProtocolVtbl, *PIBindProtocolVtbl;

struct IBindProtocolVtbl {
    HRESULT (* QueryInterface)(struct IBindProtocol *, IID *, void * *);
    ULONG (* AddRef)(struct IBindProtocol *);
    ULONG (* Release)(struct IBindProtocol *);
    HRESULT (* CreateBinding)(struct IBindProtocol *, LPCWSTR, struct IBindCtx *, struct IBinding * *);
};

struct IBindProtocol {
    struct IBindProtocolVtbl * lpVtbl;
};

typedef struct IBindStatusCallbackEx IBindStatusCallbackEx, *PIBindStatusCallbackEx;

typedef struct IBindStatusCallbackExVtbl IBindStatusCallbackExVtbl, *PIBindStatusCallbackExVtbl;

struct IBindStatusCallbackExVtbl {
    HRESULT (* QueryInterface)(struct IBindStatusCallbackEx *, IID *, void * *);
    ULONG (* AddRef)(struct IBindStatusCallbackEx *);
    ULONG (* Release)(struct IBindStatusCallbackEx *);
    HRESULT (* OnStartBinding)(struct IBindStatusCallbackEx *, DWORD, struct IBinding *);
    HRESULT (* GetPriority)(struct IBindStatusCallbackEx *, LONG *);
    HRESULT (* OnLowResource)(struct IBindStatusCallbackEx *, DWORD);
    HRESULT (* OnProgress)(struct IBindStatusCallbackEx *, ULONG, ULONG, ULONG, LPCWSTR);
    HRESULT (* OnStopBinding)(struct IBindStatusCallbackEx *, HRESULT, LPCWSTR);
    HRESULT (* GetBindInfo)(struct IBindStatusCallbackEx *, DWORD *, BINDINFO *);
    HRESULT (* OnDataAvailable)(struct IBindStatusCallbackEx *, DWORD, DWORD, FORMATETC *, STGMEDIUM *);
    HRESULT (* OnObjectAvailable)(struct IBindStatusCallbackEx *, IID *, struct IUnknown *);
    HRESULT (* GetBindInfoEx)(struct IBindStatusCallbackEx *, DWORD *, BINDINFO *, DWORD *, DWORD *);
};

struct IBindStatusCallbackEx {
    struct IBindStatusCallbackExVtbl * lpVtbl;
};

typedef struct ICatalogFileInfo ICatalogFileInfo, *PICatalogFileInfo;

typedef struct ICatalogFileInfoVtbl ICatalogFileInfoVtbl, *PICatalogFileInfoVtbl;

struct ICatalogFileInfoVtbl {
    HRESULT (* QueryInterface)(struct ICatalogFileInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ICatalogFileInfo *);
    ULONG (* Release)(struct ICatalogFileInfo *);
    HRESULT (* GetCatalogFile)(struct ICatalogFileInfo *, LPSTR *);
    HRESULT (* GetJavaTrust)(struct ICatalogFileInfo *, void * *);
};

struct ICatalogFileInfo {
    struct ICatalogFileInfoVtbl * lpVtbl;
};

typedef struct ICodeInstall ICodeInstall, *PICodeInstall;

typedef struct ICodeInstallVtbl ICodeInstallVtbl, *PICodeInstallVtbl;

struct ICodeInstallVtbl {
    HRESULT (* QueryInterface)(struct ICodeInstall *, IID *, void * *);
    ULONG (* AddRef)(struct ICodeInstall *);
    ULONG (* Release)(struct ICodeInstall *);
    HRESULT (* GetWindow)(struct ICodeInstall *, GUID *, HWND *);
    HRESULT (* OnCodeInstallProblem)(struct ICodeInstall *, ULONG, LPCWSTR, LPCWSTR, DWORD);
};

struct ICodeInstall {
    struct ICodeInstallVtbl * lpVtbl;
};

typedef struct IDataFilter IDataFilter, *PIDataFilter;

typedef struct IDataFilterVtbl IDataFilterVtbl, *PIDataFilterVtbl;

struct IDataFilterVtbl {
    HRESULT (* QueryInterface)(struct IDataFilter *, IID *, void * *);
    ULONG (* AddRef)(struct IDataFilter *);
    ULONG (* Release)(struct IDataFilter *);
    HRESULT (* DoEncode)(struct IDataFilter *, DWORD, LONG, BYTE *, LONG, BYTE *, LONG, LONG *, LONG *, DWORD);
    HRESULT (* DoDecode)(struct IDataFilter *, DWORD, LONG, BYTE *, LONG, BYTE *, LONG, LONG *, LONG *, DWORD);
    HRESULT (* SetEncodingLevel)(struct IDataFilter *, DWORD);
};

struct IDataFilter {
    struct IDataFilterVtbl * lpVtbl;
};

typedef struct IEncodingFilterFactory IEncodingFilterFactory, *PIEncodingFilterFactory;

typedef struct IEncodingFilterFactoryVtbl IEncodingFilterFactoryVtbl, *PIEncodingFilterFactoryVtbl;

struct IEncodingFilterFactory {
    struct IEncodingFilterFactoryVtbl * lpVtbl;
};

struct IEncodingFilterFactoryVtbl {
    HRESULT (* QueryInterface)(struct IEncodingFilterFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IEncodingFilterFactory *);
    ULONG (* Release)(struct IEncodingFilterFactory *);
    HRESULT (* FindBestFilter)(struct IEncodingFilterFactory *, LPCWSTR, LPCWSTR, DATAINFO, struct IDataFilter * *);
    HRESULT (* GetDefaultFilter)(struct IEncodingFilterFactory *, LPCWSTR, LPCWSTR, struct IDataFilter * *);
};

typedef struct IHttpNegotiate IHttpNegotiate, *PIHttpNegotiate;

typedef struct IHttpNegotiateVtbl IHttpNegotiateVtbl, *PIHttpNegotiateVtbl;

struct IHttpNegotiate {
    struct IHttpNegotiateVtbl * lpVtbl;
};

struct IHttpNegotiateVtbl {
    HRESULT (* QueryInterface)(struct IHttpNegotiate *, IID *, void * *);
    ULONG (* AddRef)(struct IHttpNegotiate *);
    ULONG (* Release)(struct IHttpNegotiate *);
    HRESULT (* BeginningTransaction)(struct IHttpNegotiate *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (* OnResponse)(struct IHttpNegotiate *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
};

typedef struct IHttpNegotiate2 IHttpNegotiate2, *PIHttpNegotiate2;

typedef struct IHttpNegotiate2Vtbl IHttpNegotiate2Vtbl, *PIHttpNegotiate2Vtbl;

struct IHttpNegotiate2 {
    struct IHttpNegotiate2Vtbl * lpVtbl;
};

struct IHttpNegotiate2Vtbl {
    HRESULT (* QueryInterface)(struct IHttpNegotiate2 *, IID *, void * *);
    ULONG (* AddRef)(struct IHttpNegotiate2 *);
    ULONG (* Release)(struct IHttpNegotiate2 *);
    HRESULT (* BeginningTransaction)(struct IHttpNegotiate2 *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (* OnResponse)(struct IHttpNegotiate2 *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
    HRESULT (* GetRootSecurityId)(struct IHttpNegotiate2 *, BYTE *, DWORD *, DWORD_PTR);
};

typedef struct IHttpNegotiate3 IHttpNegotiate3, *PIHttpNegotiate3;

typedef struct IHttpNegotiate3Vtbl IHttpNegotiate3Vtbl, *PIHttpNegotiate3Vtbl;

struct IHttpNegotiate3Vtbl {
    HRESULT (* QueryInterface)(struct IHttpNegotiate3 *, IID *, void * *);
    ULONG (* AddRef)(struct IHttpNegotiate3 *);
    ULONG (* Release)(struct IHttpNegotiate3 *);
    HRESULT (* BeginningTransaction)(struct IHttpNegotiate3 *, LPCWSTR, LPCWSTR, DWORD, LPWSTR *);
    HRESULT (* OnResponse)(struct IHttpNegotiate3 *, DWORD, LPCWSTR, LPCWSTR, LPWSTR *);
    HRESULT (* GetRootSecurityId)(struct IHttpNegotiate3 *, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (* GetSerializedClientCertContext)(struct IHttpNegotiate3 *, BYTE * *, DWORD *);
};

struct IHttpNegotiate3 {
    struct IHttpNegotiate3Vtbl * lpVtbl;
};

typedef struct IHttpSecurity IHttpSecurity, *PIHttpSecurity;

typedef struct IHttpSecurityVtbl IHttpSecurityVtbl, *PIHttpSecurityVtbl;

struct IHttpSecurity {
    struct IHttpSecurityVtbl * lpVtbl;
};

struct IHttpSecurityVtbl {
    HRESULT (* QueryInterface)(struct IHttpSecurity *, IID *, void * *);
    ULONG (* AddRef)(struct IHttpSecurity *);
    ULONG (* Release)(struct IHttpSecurity *);
    HRESULT (* GetWindow)(struct IHttpSecurity *, GUID *, HWND *);
    HRESULT (* OnSecurityProblem)(struct IHttpSecurity *, DWORD);
};

typedef struct IInternet IInternet, *PIInternet;

typedef struct IInternetVtbl IInternetVtbl, *PIInternetVtbl;

struct IInternet {
    struct IInternetVtbl * lpVtbl;
};

struct IInternetVtbl {
    HRESULT (* QueryInterface)(struct IInternet *, IID *, void * *);
    ULONG (* AddRef)(struct IInternet *);
    ULONG (* Release)(struct IInternet *);
};

typedef struct IInternetBindInfoEx IInternetBindInfoEx, *PIInternetBindInfoEx;

typedef struct IInternetBindInfoExVtbl IInternetBindInfoExVtbl, *PIInternetBindInfoExVtbl;

struct IInternetBindInfoExVtbl {
    HRESULT (* QueryInterface)(struct IInternetBindInfoEx *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetBindInfoEx *);
    ULONG (* Release)(struct IInternetBindInfoEx *);
    HRESULT (* GetBindInfo)(struct IInternetBindInfoEx *, DWORD *, BINDINFO *);
    HRESULT (* GetBindString)(struct IInternetBindInfoEx *, ULONG, LPOLESTR *, ULONG, ULONG *);
    HRESULT (* GetBindInfoEx)(struct IInternetBindInfoEx *, DWORD *, BINDINFO *, DWORD *, DWORD *);
};

struct IInternetBindInfoEx {
    struct IInternetBindInfoExVtbl * lpVtbl;
};

typedef struct IInternetHostSecurityManager IInternetHostSecurityManager, *PIInternetHostSecurityManager;

typedef struct IInternetHostSecurityManagerVtbl IInternetHostSecurityManagerVtbl, *PIInternetHostSecurityManagerVtbl;

struct IInternetHostSecurityManagerVtbl {
    HRESULT (* QueryInterface)(struct IInternetHostSecurityManager *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetHostSecurityManager *);
    ULONG (* Release)(struct IInternetHostSecurityManager *);
    HRESULT (* GetSecurityId)(struct IInternetHostSecurityManager *, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (* ProcessUrlAction)(struct IInternetHostSecurityManager *, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (* QueryCustomPolicy)(struct IInternetHostSecurityManager *, GUID *, BYTE * *, DWORD *, BYTE *, DWORD, DWORD);
};

struct IInternetHostSecurityManager {
    struct IInternetHostSecurityManagerVtbl * lpVtbl;
};

typedef struct IInternetPriority IInternetPriority, *PIInternetPriority;

typedef struct IInternetPriorityVtbl IInternetPriorityVtbl, *PIInternetPriorityVtbl;

struct IInternetPriorityVtbl {
    HRESULT (* QueryInterface)(struct IInternetPriority *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetPriority *);
    ULONG (* Release)(struct IInternetPriority *);
    HRESULT (* SetPriority)(struct IInternetPriority *, LONG);
    HRESULT (* GetPriority)(struct IInternetPriority *, LONG *);
};

struct IInternetPriority {
    struct IInternetPriorityVtbl * lpVtbl;
};

typedef struct IInternetProtocolEx IInternetProtocolEx, *PIInternetProtocolEx;

typedef struct IInternetProtocolExVtbl IInternetProtocolExVtbl, *PIInternetProtocolExVtbl;

typedef struct IUri IUri, *PIUri;

typedef struct IUriVtbl IUriVtbl, *PIUriVtbl;

typedef enum __MIDL_IUri_0001 Uri_PROPERTY;

struct IUri {
    struct IUriVtbl * lpVtbl;
};

struct IInternetProtocolExVtbl {
    HRESULT (* QueryInterface)(struct IInternetProtocolEx *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetProtocolEx *);
    ULONG (* Release)(struct IInternetProtocolEx *);
    HRESULT (* Start)(struct IInternetProtocolEx *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (* Continue)(struct IInternetProtocolEx *, PROTOCOLDATA *);
    HRESULT (* Abort)(struct IInternetProtocolEx *, HRESULT, DWORD);
    HRESULT (* Terminate)(struct IInternetProtocolEx *, DWORD);
    HRESULT (* Suspend)(struct IInternetProtocolEx *);
    HRESULT (* Resume)(struct IInternetProtocolEx *);
    HRESULT (* Read)(struct IInternetProtocolEx *, void *, ULONG, ULONG *);
    HRESULT (* Seek)(struct IInternetProtocolEx *, LARGE_INTEGER, DWORD, ULARGE_INTEGER *);
    HRESULT (* LockRequest)(struct IInternetProtocolEx *, DWORD);
    HRESULT (* UnlockRequest)(struct IInternetProtocolEx *);
    HRESULT (* StartEx)(struct IInternetProtocolEx *, struct IUri *, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
};

struct IInternetProtocolEx {
    struct IInternetProtocolExVtbl * lpVtbl;
};

struct IUriVtbl {
    HRESULT (* QueryInterface)(struct IUri *, IID *, void * *);
    ULONG (* AddRef)(struct IUri *);
    ULONG (* Release)(struct IUri *);
    HRESULT (* GetPropertyBSTR)(struct IUri *, Uri_PROPERTY, BSTR *, DWORD);
    HRESULT (* GetPropertyLength)(struct IUri *, Uri_PROPERTY, DWORD *, DWORD);
    HRESULT (* GetPropertyDWORD)(struct IUri *, Uri_PROPERTY, DWORD *, DWORD);
    HRESULT (* HasProperty)(struct IUri *, Uri_PROPERTY, BOOL *);
    HRESULT (* GetAbsoluteUri)(struct IUri *, BSTR *);
    HRESULT (* GetAuthority)(struct IUri *, BSTR *);
    HRESULT (* GetDisplayUri)(struct IUri *, BSTR *);
    HRESULT (* GetDomain)(struct IUri *, BSTR *);
    HRESULT (* GetExtension)(struct IUri *, BSTR *);
    HRESULT (* GetFragment)(struct IUri *, BSTR *);
    HRESULT (* GetHost)(struct IUri *, BSTR *);
    HRESULT (* GetPassword)(struct IUri *, BSTR *);
    HRESULT (* GetPath)(struct IUri *, BSTR *);
    HRESULT (* GetPathAndQuery)(struct IUri *, BSTR *);
    HRESULT (* GetQuery)(struct IUri *, BSTR *);
    HRESULT (* GetRawUri)(struct IUri *, BSTR *);
    HRESULT (* GetSchemeName)(struct IUri *, BSTR *);
    HRESULT (* GetUserInfo)(struct IUri *, BSTR *);
    HRESULT (* GetUserNameA)(struct IUri *, BSTR *);
    HRESULT (* GetHostType)(struct IUri *, DWORD *);
    HRESULT (* GetPort)(struct IUri *, DWORD *);
    HRESULT (* GetScheme)(struct IUri *, DWORD *);
    HRESULT (* GetZone)(struct IUri *, DWORD *);
    HRESULT (* GetProperties)(struct IUri *, LPDWORD);
    HRESULT (* IsEqual)(struct IUri *, struct IUri *, BOOL *);
};

typedef struct IInternetProtocolInfo IInternetProtocolInfo, *PIInternetProtocolInfo;

typedef struct IInternetProtocolInfoVtbl IInternetProtocolInfoVtbl, *PIInternetProtocolInfoVtbl;

typedef enum _tagPARSEACTION PARSEACTION;

typedef enum _tagQUERYOPTION QUERYOPTION;

struct IInternetProtocolInfoVtbl {
    HRESULT (* QueryInterface)(struct IInternetProtocolInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetProtocolInfo *);
    ULONG (* Release)(struct IInternetProtocolInfo *);
    HRESULT (* ParseUrl)(struct IInternetProtocolInfo *, LPCWSTR, PARSEACTION, DWORD, LPWSTR, DWORD, DWORD *, DWORD);
    HRESULT (* CombineUrl)(struct IInternetProtocolInfo *, LPCWSTR, LPCWSTR, DWORD, LPWSTR, DWORD, DWORD *, DWORD);
    HRESULT (* CompareUrl)(struct IInternetProtocolInfo *, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* QueryInfo)(struct IInternetProtocolInfo *, LPCWSTR, QUERYOPTION, DWORD, LPVOID, DWORD, DWORD *, DWORD);
};

struct IInternetProtocolInfo {
    struct IInternetProtocolInfoVtbl * lpVtbl;
};

typedef struct IInternetProtocolRoot IInternetProtocolRoot, *PIInternetProtocolRoot;

typedef struct IInternetProtocolRootVtbl IInternetProtocolRootVtbl, *PIInternetProtocolRootVtbl;

struct IInternetProtocolRoot {
    struct IInternetProtocolRootVtbl * lpVtbl;
};

struct IInternetProtocolRootVtbl {
    HRESULT (* QueryInterface)(struct IInternetProtocolRoot *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetProtocolRoot *);
    ULONG (* Release)(struct IInternetProtocolRoot *);
    HRESULT (* Start)(struct IInternetProtocolRoot *, LPCWSTR, struct IInternetProtocolSink *, struct IInternetBindInfo *, DWORD, HANDLE_PTR);
    HRESULT (* Continue)(struct IInternetProtocolRoot *, PROTOCOLDATA *);
    HRESULT (* Abort)(struct IInternetProtocolRoot *, HRESULT, DWORD);
    HRESULT (* Terminate)(struct IInternetProtocolRoot *, DWORD);
    HRESULT (* Suspend)(struct IInternetProtocolRoot *);
    HRESULT (* Resume)(struct IInternetProtocolRoot *);
};

typedef struct IInternetProtocolSinkStackable IInternetProtocolSinkStackable, *PIInternetProtocolSinkStackable;

typedef struct IInternetProtocolSinkStackableVtbl IInternetProtocolSinkStackableVtbl, *PIInternetProtocolSinkStackableVtbl;

struct IInternetProtocolSinkStackable {
    struct IInternetProtocolSinkStackableVtbl * lpVtbl;
};

struct IInternetProtocolSinkStackableVtbl {
    HRESULT (* QueryInterface)(struct IInternetProtocolSinkStackable *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetProtocolSinkStackable *);
    ULONG (* Release)(struct IInternetProtocolSinkStackable *);
    HRESULT (* SwitchSink)(struct IInternetProtocolSinkStackable *, struct IInternetProtocolSink *);
    HRESULT (* CommitSwitch)(struct IInternetProtocolSinkStackable *);
    HRESULT (* RollbackSwitch)(struct IInternetProtocolSinkStackable *);
};

typedef struct IInternetSecurityManagerEx IInternetSecurityManagerEx, *PIInternetSecurityManagerEx;

typedef struct IInternetSecurityManagerExVtbl IInternetSecurityManagerExVtbl, *PIInternetSecurityManagerExVtbl;

struct IInternetSecurityManagerExVtbl {
    HRESULT (* QueryInterface)(struct IInternetSecurityManagerEx *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetSecurityManagerEx *);
    ULONG (* Release)(struct IInternetSecurityManagerEx *);
    HRESULT (* SetSecuritySite)(struct IInternetSecurityManagerEx *, struct IInternetSecurityMgrSite *);
    HRESULT (* GetSecuritySite)(struct IInternetSecurityManagerEx *, struct IInternetSecurityMgrSite * *);
    HRESULT (* MapUrlToZone)(struct IInternetSecurityManagerEx *, LPCWSTR, DWORD *, DWORD);
    HRESULT (* GetSecurityId)(struct IInternetSecurityManagerEx *, LPCWSTR, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (* ProcessUrlAction)(struct IInternetSecurityManagerEx *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (* QueryCustomPolicy)(struct IInternetSecurityManagerEx *, LPCWSTR, GUID *, BYTE * *, DWORD *, BYTE *, DWORD, DWORD);
    HRESULT (* SetZoneMapping)(struct IInternetSecurityManagerEx *, DWORD, LPCWSTR, DWORD);
    HRESULT (* GetZoneMappings)(struct IInternetSecurityManagerEx *, DWORD, struct IEnumString * *, DWORD);
    HRESULT (* ProcessUrlActionEx)(struct IInternetSecurityManagerEx *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD, DWORD *);
};

struct IInternetSecurityManagerEx {
    struct IInternetSecurityManagerExVtbl * lpVtbl;
};

typedef struct IInternetSecurityManagerEx2 IInternetSecurityManagerEx2, *PIInternetSecurityManagerEx2;

typedef struct IInternetSecurityManagerEx2Vtbl IInternetSecurityManagerEx2Vtbl, *PIInternetSecurityManagerEx2Vtbl;

struct IInternetSecurityManagerEx2Vtbl {
    HRESULT (* QueryInterface)(struct IInternetSecurityManagerEx2 *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetSecurityManagerEx2 *);
    ULONG (* Release)(struct IInternetSecurityManagerEx2 *);
    HRESULT (* SetSecuritySite)(struct IInternetSecurityManagerEx2 *, struct IInternetSecurityMgrSite *);
    HRESULT (* GetSecuritySite)(struct IInternetSecurityManagerEx2 *, struct IInternetSecurityMgrSite * *);
    HRESULT (* MapUrlToZone)(struct IInternetSecurityManagerEx2 *, LPCWSTR, DWORD *, DWORD);
    HRESULT (* GetSecurityId)(struct IInternetSecurityManagerEx2 *, LPCWSTR, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (* ProcessUrlAction)(struct IInternetSecurityManagerEx2 *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD);
    HRESULT (* QueryCustomPolicy)(struct IInternetSecurityManagerEx2 *, LPCWSTR, GUID *, BYTE * *, DWORD *, BYTE *, DWORD, DWORD);
    HRESULT (* SetZoneMapping)(struct IInternetSecurityManagerEx2 *, DWORD, LPCWSTR, DWORD);
    HRESULT (* GetZoneMappings)(struct IInternetSecurityManagerEx2 *, DWORD, struct IEnumString * *, DWORD);
    HRESULT (* ProcessUrlActionEx)(struct IInternetSecurityManagerEx2 *, LPCWSTR, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD, DWORD *);
    HRESULT (* MapUrlToZoneEx2)(struct IInternetSecurityManagerEx2 *, struct IUri *, DWORD *, DWORD, LPWSTR *, DWORD *);
    HRESULT (* ProcessUrlActionEx2)(struct IInternetSecurityManagerEx2 *, struct IUri *, DWORD, BYTE *, DWORD, BYTE *, DWORD, DWORD, DWORD_PTR, DWORD *);
    HRESULT (* GetSecurityIdEx2)(struct IInternetSecurityManagerEx2 *, struct IUri *, BYTE *, DWORD *, DWORD_PTR);
    HRESULT (* QueryCustomPolicyEx2)(struct IInternetSecurityManagerEx2 *, struct IUri *, GUID *, BYTE * *, DWORD *, BYTE *, DWORD, DWORD_PTR);
};

struct IInternetSecurityManagerEx2 {
    struct IInternetSecurityManagerEx2Vtbl * lpVtbl;
};

typedef struct IInternetSession IInternetSession, *PIInternetSession;

typedef struct IInternetSessionVtbl IInternetSessionVtbl, *PIInternetSessionVtbl;

struct IInternetSessionVtbl {
    HRESULT (* QueryInterface)(struct IInternetSession *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetSession *);
    ULONG (* Release)(struct IInternetSession *);
    HRESULT (* RegisterNameSpace)(struct IInternetSession *, struct IClassFactory *, IID *, LPCWSTR, ULONG, LPCWSTR *, DWORD);
    HRESULT (* UnregisterNameSpace)(struct IInternetSession *, struct IClassFactory *, LPCWSTR);
    HRESULT (* RegisterMimeFilter)(struct IInternetSession *, struct IClassFactory *, IID *, LPCWSTR);
    HRESULT (* UnregisterMimeFilter)(struct IInternetSession *, struct IClassFactory *, LPCWSTR);
    HRESULT (* CreateBinding)(struct IInternetSession *, LPBC, LPCWSTR, struct IUnknown *, struct IUnknown * *, struct IInternetProtocol * *, DWORD);
    HRESULT (* SetSessionOption)(struct IInternetSession *, DWORD, LPVOID, DWORD, DWORD);
    HRESULT (* GetSessionOption)(struct IInternetSession *, DWORD, LPVOID, DWORD *, DWORD);
};

struct IInternetSession {
    struct IInternetSessionVtbl * lpVtbl;
};

typedef struct IInternetThreadSwitch IInternetThreadSwitch, *PIInternetThreadSwitch;

typedef struct IInternetThreadSwitchVtbl IInternetThreadSwitchVtbl, *PIInternetThreadSwitchVtbl;

struct IInternetThreadSwitchVtbl {
    HRESULT (* QueryInterface)(struct IInternetThreadSwitch *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetThreadSwitch *);
    ULONG (* Release)(struct IInternetThreadSwitch *);
    HRESULT (* Prepare)(struct IInternetThreadSwitch *);
    HRESULT (* Continue)(struct IInternetThreadSwitch *);
};

struct IInternetThreadSwitch {
    struct IInternetThreadSwitchVtbl * lpVtbl;
};

typedef struct IInternetZoneManager IInternetZoneManager, *PIInternetZoneManager;

typedef struct IInternetZoneManagerVtbl IInternetZoneManagerVtbl, *PIInternetZoneManagerVtbl;

typedef struct _ZONEATTRIBUTES ZONEATTRIBUTES;

typedef enum _URLZONEREG URLZONEREG;

struct IInternetZoneManagerVtbl {
    HRESULT (* QueryInterface)(struct IInternetZoneManager *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetZoneManager *);
    ULONG (* Release)(struct IInternetZoneManager *);
    HRESULT (* GetZoneAttributes)(struct IInternetZoneManager *, DWORD, ZONEATTRIBUTES *);
    HRESULT (* SetZoneAttributes)(struct IInternetZoneManager *, DWORD, ZONEATTRIBUTES *);
    HRESULT (* GetZoneCustomPolicy)(struct IInternetZoneManager *, DWORD, GUID *, BYTE * *, DWORD *, URLZONEREG);
    HRESULT (* SetZoneCustomPolicy)(struct IInternetZoneManager *, DWORD, GUID *, BYTE *, DWORD, URLZONEREG);
    HRESULT (* GetZoneActionPolicy)(struct IInternetZoneManager *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (* SetZoneActionPolicy)(struct IInternetZoneManager *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (* PromptAction)(struct IInternetZoneManager *, DWORD, HWND, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* LogAction)(struct IInternetZoneManager *, DWORD, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* CreateZoneEnumerator)(struct IInternetZoneManager *, DWORD *, DWORD *, DWORD);
    HRESULT (* GetZoneAt)(struct IInternetZoneManager *, DWORD, DWORD, DWORD *);
    HRESULT (* DestroyZoneEnumerator)(struct IInternetZoneManager *, DWORD);
    HRESULT (* CopyTemplatePoliciesToZone)(struct IInternetZoneManager *, DWORD, DWORD, DWORD);
};

struct IInternetZoneManager {
    struct IInternetZoneManagerVtbl * lpVtbl;
};

typedef struct IInternetZoneManagerEx IInternetZoneManagerEx, *PIInternetZoneManagerEx;

typedef struct IInternetZoneManagerExVtbl IInternetZoneManagerExVtbl, *PIInternetZoneManagerExVtbl;

struct IInternetZoneManagerExVtbl {
    HRESULT (* QueryInterface)(struct IInternetZoneManagerEx *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetZoneManagerEx *);
    ULONG (* Release)(struct IInternetZoneManagerEx *);
    HRESULT (* GetZoneAttributes)(struct IInternetZoneManagerEx *, DWORD, ZONEATTRIBUTES *);
    HRESULT (* SetZoneAttributes)(struct IInternetZoneManagerEx *, DWORD, ZONEATTRIBUTES *);
    HRESULT (* GetZoneCustomPolicy)(struct IInternetZoneManagerEx *, DWORD, GUID *, BYTE * *, DWORD *, URLZONEREG);
    HRESULT (* SetZoneCustomPolicy)(struct IInternetZoneManagerEx *, DWORD, GUID *, BYTE *, DWORD, URLZONEREG);
    HRESULT (* GetZoneActionPolicy)(struct IInternetZoneManagerEx *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (* SetZoneActionPolicy)(struct IInternetZoneManagerEx *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (* PromptAction)(struct IInternetZoneManagerEx *, DWORD, HWND, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* LogAction)(struct IInternetZoneManagerEx *, DWORD, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* CreateZoneEnumerator)(struct IInternetZoneManagerEx *, DWORD *, DWORD *, DWORD);
    HRESULT (* GetZoneAt)(struct IInternetZoneManagerEx *, DWORD, DWORD, DWORD *);
    HRESULT (* DestroyZoneEnumerator)(struct IInternetZoneManagerEx *, DWORD);
    HRESULT (* CopyTemplatePoliciesToZone)(struct IInternetZoneManagerEx *, DWORD, DWORD, DWORD);
    HRESULT (* GetZoneActionPolicyEx)(struct IInternetZoneManagerEx *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG, DWORD);
    HRESULT (* SetZoneActionPolicyEx)(struct IInternetZoneManagerEx *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG, DWORD);
};

struct IInternetZoneManagerEx {
    struct IInternetZoneManagerExVtbl * lpVtbl;
};

typedef struct IInternetZoneManagerEx2 IInternetZoneManagerEx2, *PIInternetZoneManagerEx2;

typedef struct IInternetZoneManagerEx2Vtbl IInternetZoneManagerEx2Vtbl, *PIInternetZoneManagerEx2Vtbl;

struct IInternetZoneManagerEx2 {
    struct IInternetZoneManagerEx2Vtbl * lpVtbl;
};

struct IInternetZoneManagerEx2Vtbl {
    HRESULT (* QueryInterface)(struct IInternetZoneManagerEx2 *, IID *, void * *);
    ULONG (* AddRef)(struct IInternetZoneManagerEx2 *);
    ULONG (* Release)(struct IInternetZoneManagerEx2 *);
    HRESULT (* GetZoneAttributes)(struct IInternetZoneManagerEx2 *, DWORD, ZONEATTRIBUTES *);
    HRESULT (* SetZoneAttributes)(struct IInternetZoneManagerEx2 *, DWORD, ZONEATTRIBUTES *);
    HRESULT (* GetZoneCustomPolicy)(struct IInternetZoneManagerEx2 *, DWORD, GUID *, BYTE * *, DWORD *, URLZONEREG);
    HRESULT (* SetZoneCustomPolicy)(struct IInternetZoneManagerEx2 *, DWORD, GUID *, BYTE *, DWORD, URLZONEREG);
    HRESULT (* GetZoneActionPolicy)(struct IInternetZoneManagerEx2 *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (* SetZoneActionPolicy)(struct IInternetZoneManagerEx2 *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG);
    HRESULT (* PromptAction)(struct IInternetZoneManagerEx2 *, DWORD, HWND, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* LogAction)(struct IInternetZoneManagerEx2 *, DWORD, LPCWSTR, LPCWSTR, DWORD);
    HRESULT (* CreateZoneEnumerator)(struct IInternetZoneManagerEx2 *, DWORD *, DWORD *, DWORD);
    HRESULT (* GetZoneAt)(struct IInternetZoneManagerEx2 *, DWORD, DWORD, DWORD *);
    HRESULT (* DestroyZoneEnumerator)(struct IInternetZoneManagerEx2 *, DWORD);
    HRESULT (* CopyTemplatePoliciesToZone)(struct IInternetZoneManagerEx2 *, DWORD, DWORD, DWORD);
    HRESULT (* GetZoneActionPolicyEx)(struct IInternetZoneManagerEx2 *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG, DWORD);
    HRESULT (* SetZoneActionPolicyEx)(struct IInternetZoneManagerEx2 *, DWORD, DWORD, BYTE *, DWORD, URLZONEREG, DWORD);
    HRESULT (* GetZoneAttributesEx)(struct IInternetZoneManagerEx2 *, DWORD, ZONEATTRIBUTES *, DWORD);
    HRESULT (* GetZoneSecurityState)(struct IInternetZoneManagerEx2 *, DWORD, BOOL, LPDWORD, BOOL *);
    HRESULT (* GetIESecurityState)(struct IInternetZoneManagerEx2 *, BOOL, LPDWORD, BOOL *, BOOL);
    HRESULT (* FixUnsecureSettings)(struct IInternetZoneManagerEx2 *);
};

typedef struct IMonikerProp IMonikerProp, *PIMonikerProp;

typedef struct IMonikerPropVtbl IMonikerPropVtbl, *PIMonikerPropVtbl;

typedef enum __MIDL_IMonikerProp_0001 MONIKERPROPERTY;

struct IMonikerProp {
    struct IMonikerPropVtbl * lpVtbl;
};

struct IMonikerPropVtbl {
    HRESULT (* QueryInterface)(struct IMonikerProp *, IID *, void * *);
    ULONG (* AddRef)(struct IMonikerProp *);
    ULONG (* Release)(struct IMonikerProp *);
    HRESULT (* PutProperty)(struct IMonikerProp *, MONIKERPROPERTY, LPCWSTR);
};

typedef enum _tagINTERNETFEATURELIST INTERNETFEATURELIST;

typedef struct IPersistMoniker IPersistMoniker, *PIPersistMoniker;

typedef struct IPersistMonikerVtbl IPersistMonikerVtbl, *PIPersistMonikerVtbl;

struct IPersistMonikerVtbl {
    HRESULT (* QueryInterface)(struct IPersistMoniker *, IID *, void * *);
    ULONG (* AddRef)(struct IPersistMoniker *);
    ULONG (* Release)(struct IPersistMoniker *);
    HRESULT (* GetClassID)(struct IPersistMoniker *, CLSID *);
    HRESULT (* IsDirty)(struct IPersistMoniker *);
    HRESULT (* Load)(struct IPersistMoniker *, BOOL, struct IMoniker *, LPBC, DWORD);
    HRESULT (* Save)(struct IPersistMoniker *, struct IMoniker *, LPBC, BOOL);
    HRESULT (* SaveCompleted)(struct IPersistMoniker *, struct IMoniker *, LPBC);
    HRESULT (* GetCurMoniker)(struct IPersistMoniker *, struct IMoniker * *);
};

struct IPersistMoniker {
    struct IPersistMonikerVtbl * lpVtbl;
};

typedef struct ISoftDistExt ISoftDistExt, *PISoftDistExt;

typedef struct ISoftDistExtVtbl ISoftDistExtVtbl, *PISoftDistExtVtbl;

typedef struct _tagSOFTDISTINFO * LPSOFTDISTINFO;

typedef struct _tagCODEBASEHOLD * LPCODEBASEHOLD;

struct ISoftDistExt {
    struct ISoftDistExtVtbl * lpVtbl;
};

struct ISoftDistExtVtbl {
    HRESULT (* QueryInterface)(struct ISoftDistExt *, IID *, void * *);
    ULONG (* AddRef)(struct ISoftDistExt *);
    ULONG (* Release)(struct ISoftDistExt *);
    HRESULT (* ProcessSoftDist)(struct ISoftDistExt *, LPCWSTR, struct IXMLElement *, LPSOFTDISTINFO);
    HRESULT (* GetFirstCodeBase)(struct ISoftDistExt *, LPWSTR *, LPDWORD);
    HRESULT (* GetNextCodeBase)(struct ISoftDistExt *, LPWSTR *, LPDWORD);
    HRESULT (* AsyncInstallDistributionUnit)(struct ISoftDistExt *, struct IBindCtx *, LPVOID, DWORD, LPCODEBASEHOLD);
};

typedef struct IUriBuilder IUriBuilder, *PIUriBuilder;

typedef struct IUriBuilderVtbl IUriBuilderVtbl, *PIUriBuilderVtbl;

struct IUriBuilder {
    struct IUriBuilderVtbl * lpVtbl;
};

struct IUriBuilderVtbl {
    HRESULT (* QueryInterface)(struct IUriBuilder *, IID *, void * *);
    ULONG (* AddRef)(struct IUriBuilder *);
    ULONG (* Release)(struct IUriBuilder *);
    HRESULT (* CreateUriSimple)(struct IUriBuilder *, DWORD, DWORD_PTR, struct IUri * *);
    HRESULT (* CreateUri)(struct IUriBuilder *, DWORD, DWORD, DWORD_PTR, struct IUri * *);
    HRESULT (* CreateUriWithFlags)(struct IUriBuilder *, DWORD, DWORD, DWORD, DWORD_PTR, struct IUri * *);
    HRESULT (* GetIUri)(struct IUriBuilder *, struct IUri * *);
    HRESULT (* SetIUri)(struct IUriBuilder *, struct IUri *);
    HRESULT (* GetFragment)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* GetHost)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* GetPassword)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* GetPath)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* GetPort)(struct IUriBuilder *, BOOL *, DWORD *);
    HRESULT (* GetQuery)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* GetSchemeName)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* GetUserNameA)(struct IUriBuilder *, DWORD *, LPCWSTR *);
    HRESULT (* SetFragment)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* SetHost)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* SetPassword)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* SetPath)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* SetPortA)(struct IUriBuilder *, BOOL, DWORD);
    HRESULT (* SetQuery)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* SetSchemeName)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* SetUserName)(struct IUriBuilder *, LPCWSTR);
    HRESULT (* RemoveProperties)(struct IUriBuilder *, DWORD);
    HRESULT (* HasBeenModified)(struct IUriBuilder *, BOOL *);
};

typedef struct IUriBuilderFactory IUriBuilderFactory, *PIUriBuilderFactory;

typedef struct IUriBuilderFactoryVtbl IUriBuilderFactoryVtbl, *PIUriBuilderFactoryVtbl;

struct IUriBuilderFactory {
    struct IUriBuilderFactoryVtbl * lpVtbl;
};

struct IUriBuilderFactoryVtbl {
    HRESULT (* QueryInterface)(struct IUriBuilderFactory *, IID *, void * *);
    ULONG (* AddRef)(struct IUriBuilderFactory *);
    ULONG (* Release)(struct IUriBuilderFactory *);
    HRESULT (* CreateIUriBuilder)(struct IUriBuilderFactory *, DWORD, DWORD_PTR, struct IUriBuilder * *);
    HRESULT (* CreateInitializedIUriBuilder)(struct IUriBuilderFactory *, DWORD, DWORD_PTR, struct IUriBuilder * *);
};

typedef struct IUriContainer IUriContainer, *PIUriContainer;

typedef struct IUriContainerVtbl IUriContainerVtbl, *PIUriContainerVtbl;

struct IUriContainer {
    struct IUriContainerVtbl * lpVtbl;
};

struct IUriContainerVtbl {
    HRESULT (* QueryInterface)(struct IUriContainer *, IID *, void * *);
    ULONG (* AddRef)(struct IUriContainer *);
    ULONG (* Release)(struct IUriContainer *);
    HRESULT (* GetIUri)(struct IUriContainer *, struct IUri * *);
};

typedef struct IWindowForBindingUI IWindowForBindingUI, *PIWindowForBindingUI;

typedef struct IWindowForBindingUIVtbl IWindowForBindingUIVtbl, *PIWindowForBindingUIVtbl;

struct IWindowForBindingUI {
    struct IWindowForBindingUIVtbl * lpVtbl;
};

struct IWindowForBindingUIVtbl {
    HRESULT (* QueryInterface)(struct IWindowForBindingUI *, IID *, void * *);
    ULONG (* AddRef)(struct IWindowForBindingUI *);
    ULONG (* Release)(struct IWindowForBindingUI *);
    HRESULT (* GetWindow)(struct IWindowForBindingUI *, GUID *, HWND *);
};

typedef struct IWinInetCacheHints IWinInetCacheHints, *PIWinInetCacheHints;

typedef struct IWinInetCacheHintsVtbl IWinInetCacheHintsVtbl, *PIWinInetCacheHintsVtbl;

struct IWinInetCacheHints {
    struct IWinInetCacheHintsVtbl * lpVtbl;
};

struct IWinInetCacheHintsVtbl {
    HRESULT (* QueryInterface)(struct IWinInetCacheHints *, IID *, void * *);
    ULONG (* AddRef)(struct IWinInetCacheHints *);
    ULONG (* Release)(struct IWinInetCacheHints *);
    HRESULT (* SetCacheExtension)(struct IWinInetCacheHints *, LPCWSTR, LPVOID, DWORD *, DWORD *, DWORD *);
};

typedef struct IWinInetCacheHints2 IWinInetCacheHints2, *PIWinInetCacheHints2;

typedef struct IWinInetCacheHints2Vtbl IWinInetCacheHints2Vtbl, *PIWinInetCacheHints2Vtbl;

struct IWinInetCacheHints2Vtbl {
    HRESULT (* QueryInterface)(struct IWinInetCacheHints2 *, IID *, void * *);
    ULONG (* AddRef)(struct IWinInetCacheHints2 *);
    ULONG (* Release)(struct IWinInetCacheHints2 *);
    HRESULT (* SetCacheExtension)(struct IWinInetCacheHints2 *, LPCWSTR, LPVOID, DWORD *, DWORD *, DWORD *);
    HRESULT (* SetCacheExtension2)(struct IWinInetCacheHints2 *, LPCWSTR, WCHAR *, DWORD *, DWORD *, DWORD *);
};

struct IWinInetCacheHints2 {
    struct IWinInetCacheHints2Vtbl * lpVtbl;
};

typedef struct IWinInetFileStream IWinInetFileStream, *PIWinInetFileStream;

typedef struct IWinInetFileStreamVtbl IWinInetFileStreamVtbl, *PIWinInetFileStreamVtbl;

struct IWinInetFileStreamVtbl {
    HRESULT (* QueryInterface)(struct IWinInetFileStream *, IID *, void * *);
    ULONG (* AddRef)(struct IWinInetFileStream *);
    ULONG (* Release)(struct IWinInetFileStream *);
    HRESULT (* SetHandleForUnlock)(struct IWinInetFileStream *, DWORD_PTR, DWORD_PTR);
    HRESULT (* SetDeleteFile)(struct IWinInetFileStream *, DWORD_PTR);
};

struct IWinInetFileStream {
    struct IWinInetFileStreamVtbl * lpVtbl;
};

typedef struct IWinInetHttpInfo IWinInetHttpInfo, *PIWinInetHttpInfo;

typedef struct IWinInetHttpInfoVtbl IWinInetHttpInfoVtbl, *PIWinInetHttpInfoVtbl;

struct IWinInetHttpInfo {
    struct IWinInetHttpInfoVtbl * lpVtbl;
};

struct IWinInetHttpInfoVtbl {
    HRESULT (* QueryInterface)(struct IWinInetHttpInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IWinInetHttpInfo *);
    ULONG (* Release)(struct IWinInetHttpInfo *);
    HRESULT (* QueryOption)(struct IWinInetHttpInfo *, DWORD, LPVOID, DWORD *);
    HRESULT (* QueryInfo)(struct IWinInetHttpInfo *, DWORD, LPVOID, DWORD *, DWORD *, DWORD *);
};

typedef struct IWinInetInfo IWinInetInfo, *PIWinInetInfo;

typedef struct IWinInetInfoVtbl IWinInetInfoVtbl, *PIWinInetInfoVtbl;

struct IWinInetInfoVtbl {
    HRESULT (* QueryInterface)(struct IWinInetInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IWinInetInfo *);
    ULONG (* Release)(struct IWinInetInfo *);
    HRESULT (* QueryOption)(struct IWinInetInfo *, DWORD, LPVOID, DWORD *);
};

struct IWinInetInfo {
    struct IWinInetInfoVtbl * lpVtbl;
};

typedef struct IWrappedProtocol IWrappedProtocol, *PIWrappedProtocol;

typedef struct IWrappedProtocolVtbl IWrappedProtocolVtbl, *PIWrappedProtocolVtbl;

struct IWrappedProtocol {
    struct IWrappedProtocolVtbl * lpVtbl;
};

struct IWrappedProtocolVtbl {
    HRESULT (* QueryInterface)(struct IWrappedProtocol *, IID *, void * *);
    ULONG (* AddRef)(struct IWrappedProtocol *);
    ULONG (* Release)(struct IWrappedProtocol *);
    HRESULT (* GetWrapperCode)(struct IWrappedProtocol *, LONG *, DWORD_PTR);
};

typedef struct IZoneIdentifier IZoneIdentifier, *PIZoneIdentifier;

typedef struct IZoneIdentifierVtbl IZoneIdentifierVtbl, *PIZoneIdentifierVtbl;

struct IZoneIdentifierVtbl {
    HRESULT (* QueryInterface)(struct IZoneIdentifier *, IID *, void * *);
    ULONG (* AddRef)(struct IZoneIdentifier *);
    ULONG (* Release)(struct IZoneIdentifier *);
    HRESULT (* GetId)(struct IZoneIdentifier *, DWORD *);
    HRESULT (* SetId)(struct IZoneIdentifier *, DWORD);
    HRESULT (* Remove)(struct IZoneIdentifier *);
};

struct IZoneIdentifier {
    struct IZoneIdentifierVtbl * lpVtbl;
};

typedef struct IAuthenticate * LPAUTHENTICATION;

typedef struct IAuthenticateEx * LPAUTHENTICATIONEX;

typedef struct IBindHost * LPBINDHOST;

typedef struct IBinding * LPBINDING;

typedef struct IBindProtocol * LPBINDPROTOCOL;

typedef struct IBindStatusCallback * LPBINDSTATUSCALLBACK;

typedef struct IBindStatusCallbackEx * LPBINDSTATUSCALLBACKEX;

typedef struct ICatalogFileInfo * LPCATALOGFILEINFO;

typedef struct ICodeInstall * LPCODEINSTALL;

typedef struct IDataFilter * LPDATAFILTER;

typedef struct IEncodingFilterFactory * LPENCODINGFILTERFACTORY;

typedef struct _tagHIT_LOGGING_INFO * LPHIT_LOGGING_INFO;

typedef struct IHttpNegotiate * LPHTTPNEGOTIATE;

typedef struct IHttpNegotiate2 * LPHTTPNEGOTIATE2;

typedef struct IHttpNegotiate3 * LPHTTPNEGOTIATE3;

typedef struct IHttpSecurity * LPHTTPSECURITY;

typedef struct IInternet * LPIINTERNET;

typedef struct IInternetBindInfo * LPIINTERNETBINDINFO;

typedef struct IInternetBindInfoEx * LPIINTERNETBINDINFOEX;

typedef struct IInternetPriority * LPIINTERNETPRIORITY;

typedef struct IInternetProtocol * LPIINTERNETPROTOCOL;

typedef struct IInternetProtocolInfo * LPIINTERNETPROTOCOLINFO;

typedef struct IInternetProtocolRoot * LPIINTERNETPROTOCOLROOT;

typedef struct IInternetProtocolSink * LPIINTERNETPROTOCOLSINK;

typedef struct IInternetProtocolSinkStackable * LPIINTERNETPROTOCOLSINKStackable;

typedef struct IInternetSession * LPIINTERNETSESSION;

typedef struct IInternetThreadSwitch * LPIINTERNETTHREADSWITCH;

typedef struct IWrappedProtocol * LPIWRAPPEDPROTOCOL;

typedef struct IMonikerProp * LPMONIKERPROP;

typedef struct IPersistMoniker * LPPERSISTMONIKER;

typedef struct tagRemFORMATETC tagRemFORMATETC, *PtagRemFORMATETC;

typedef struct tagRemFORMATETC * LPREMFORMATETC;

struct tagRemFORMATETC {
    DWORD cfFormat;
    DWORD ptd;
    DWORD dwAspect;
    LONG lindex;
    DWORD tymed;
};

typedef struct _REMSECURITY_ATTRIBUTES * LPREMSECURITY_ATTRIBUTES;

typedef struct IInternetZoneManager * LPURLZONEMANAGER;

typedef struct IWindowForBindingUI * LPWINDOWFORBINDINGUI;

typedef struct IWinInetCacheHints * LPWININETCACHEHINTS;

typedef struct IWinInetCacheHints2 * LPWININETCACHEHINTS2;

typedef struct IWinInetFileStream * LPWININETFILESTREAM;

typedef struct IWinInetHttpInfo * LPWININETHTTPINFO;

typedef struct IWinInetInfo * LPWININETINFO;

typedef struct _ZONEATTRIBUTES * LPZONEATTRIBUTES;

typedef enum _tagOIBDG_FLAGS OIBDG_FLAGS;

typedef enum _tagPI_FLAGS PI_FLAGS;

typedef struct _REMSECURITY_ATTRIBUTES * PREMSECURITY_ATTRIBUTES;

typedef struct _tagPROTOCOLFILTERDATA PROTOCOLFILTERDATA;

typedef enum _tagPSUACTION PSUACTION;

typedef enum __MIDL_IInternetSecurityManager_0001 PUAF;

typedef enum __MIDL_IInternetSecurityManager_0002 PUAFOUT;

typedef struct _tagRemBINDINFO RemBINDINFO;

typedef struct tagRemFORMATETC RemFORMATETC;

typedef struct _tagSOFTDISTINFO SOFTDISTINFO;

typedef struct _tagStartParam StartParam;

typedef enum __MIDL_IInternetSecurityManager_0003 SZM_FLAGS;

typedef enum tagURLTEMPLATE {
    URLTEMPLATE_CUSTOM=0,
    URLTEMPLATE_HIGH=73728,
    URLTEMPLATE_LOW=65536,
    URLTEMPLATE_MEDHIGH=70912,
    URLTEMPLATE_MEDIUM=69632,
    URLTEMPLATE_MEDLOW=66816,
    URLTEMPLATE_PREDEFINED_MAX=131072,
    URLTEMPLATE_PREDEFINED_MIN=65536
} tagURLTEMPLATE;

typedef enum tagURLZONE {
    URLZONE_INTERNET=3,
    URLZONE_INTRANET=1,
    URLZONE_INVALID=0,
    URLZONE_LOCAL_MACHINE=0,
    URLZONE_PREDEFINED_MAX=999,
    URLZONE_PREDEFINED_MIN=0,
    URLZONE_TRUSTED=2,
    URLZONE_UNTRUSTED=4,
    URLZONE_USER_MAX=10000,
    URLZONE_USER_MIN=1000
} tagURLZONE;

typedef enum __MIDL_IUri_0002 Uri_HOST_TYPE;

typedef enum __MIDL_IBindStatusCallback_0004 URL_ENCODING;

typedef enum tagURLTEMPLATE URLTEMPLATE;

typedef enum tagURLZONE URLZONE;

typedef enum __MIDL_IInternetZoneManager_0002 ZAFLAGS;

#define BPPF_ERASE 1

#define BPPF_NOCLIP 2

#define BPPF_NONCLIENT 4

#define DTBG_CLIPRECT 1

#define DTBG_COMPUTINGREGION 16

#define DTBG_DRAWSOLID 2

#define DTBG_MIRRORDC 32

#define DTBG_NOMIRROR 64

#define DTBG_OMITBORDER 4

#define DTBG_OMITCONTENT 8

#define DTPB_USECTLCOLORSTATIC 2

#define DTPB_USEERASEBKGND 4

#define DTPB_WINDOWDC 1

#define DTT_APPLYOVERLAY 1024

#define DTT_BORDERCOLOR 2

#define DTT_BORDERSIZE 32

#define DTT_CALCRECT 512

#define DTT_CALLBACK 4096

#define DTT_COLORPROP 128

#define DTT_COMPOSITED 8192

#define DTT_FLAGS2VALIDBITS 1

#define DTT_FONTPROP 64

#define DTT_GLOWSIZE 2048

#define DTT_GRAYED 1

#define DTT_SHADOWCOLOR 4

#define DTT_SHADOWOFFSET 16

#define DTT_SHADOWTYPE 8

#define DTT_STATEID 256

#define DTT_TEXTCOLOR 1

#define ETDT_DISABLE 1

#define ETDT_ENABLE 2

#define ETDT_USEAEROWIZARDTABTEXTURE 8

#define ETDT_USETABTEXTURE 4

#define GBF_COPY 2

#define GBF_DIRECT 1

#define HTTB_BACKGROUNDSEG 0

#define HTTB_CAPTION 4

#define HTTB_FIXEDBORDER 2

#define HTTB_RESIZINGBORDER_BOTTOM 128

#define HTTB_RESIZINGBORDER_LEFT 16

#define HTTB_RESIZINGBORDER_RIGHT 64

#define HTTB_RESIZINGBORDER_TOP 32

#define HTTB_SIZINGTEMPLATE 256

#define HTTB_SYSTEMSIZINGMARGINS 512

#define MAX_INTLIST_COUNT 402

#define MAX_THEMECOLOR 64

#define MAX_THEMESIZE 64

#define OTD_FORCE_RECT_SIZING 1

#define OTD_NONCLIENT 2

#define STAP_ALLOW_CONTROLS 2

#define STAP_ALLOW_NONCLIENT 1

#define STAP_ALLOW_WEBCONTENT 4

#define WTNCA_NODRAWCAPTION 1

#define WTNCA_NODRAWICON 2

#define WTNCA_NOMIRRORHELP 8

#define WTNCA_NOSYSMENU 4

typedef struct _BP_ANIMATIONPARAMS _BP_ANIMATIONPARAMS, *P_BP_ANIMATIONPARAMS;

typedef enum _BP_ANIMATIONSTYLE {
    BPAS_CUBIC=2,
    BPAS_LINEAR=1,
    BPAS_NONE=0,
    BPAS_SINE=3
} _BP_ANIMATIONSTYLE;

typedef enum _BP_ANIMATIONSTYLE BP_ANIMATIONSTYLE;

struct _BP_ANIMATIONPARAMS {
    DWORD cbSize;
    DWORD dwFlags;
    BP_ANIMATIONSTYLE style;
    DWORD dwDuration;
};

typedef enum _BP_BUFFERFORMAT {
    BPBF_COMPATIBLEBITMAP=0,
    BPBF_DIB=1,
    BPBF_TOPDOWNDIB=2,
    BPBF_TOPDOWNMONODIB=3
} _BP_BUFFERFORMAT;

typedef struct _BP_PAINTPARAMS _BP_PAINTPARAMS, *P_BP_PAINTPARAMS;

typedef struct _BLENDFUNCTION _BLENDFUNCTION, *P_BLENDFUNCTION;

typedef struct _BLENDFUNCTION BLENDFUNCTION;

struct _BP_PAINTPARAMS {
    DWORD cbSize;
    DWORD dwFlags;
    RECT * prcExclude;
    BLENDFUNCTION * pBlendFunction;
};

struct _BLENDFUNCTION {
    BYTE BlendOp;
    BYTE BlendFlags;
    BYTE SourceConstantAlpha;
    BYTE AlphaFormat;
};

typedef struct _DTBGOPTS _DTBGOPTS, *P_DTBGOPTS;

struct _DTBGOPTS {
    DWORD dwSize;
    DWORD dwFlags;
    RECT rcClip;
};

typedef struct _DTTOPTS _DTTOPTS, *P_DTTOPTS;

typedef int (* DTT_CALLBACK_PROC)(HDC, LPWSTR, int, LPRECT, UINT, LPARAM);

struct _DTTOPTS {
    DWORD dwSize;
    DWORD dwFlags;
    COLORREF crText;
    COLORREF crBorder;
    COLORREF crShadow;
    int iTextShadowType;
    POINT ptShadowOffset;
    int iBorderSize;
    int iFontPropId;
    int iColorPropId;
    int iStateId;
    BOOL fApplyOverlay;
    int iGlowSize;
    DTT_CALLBACK_PROC pfnDrawTextCallback;
    LPARAM lParam;
};

typedef struct _INTLIST _INTLIST, *P_INTLIST;

struct _INTLIST {
    int iValueCount;
    int iValues[402];
};

typedef struct _MARGINS _MARGINS, *P_MARGINS;

struct _MARGINS {
    int cxLeftWidth;
    int cxRightWidth;
    int cyTopHeight;
    int cyBottomHeight;
};

typedef struct _WTA_OPTIONS _WTA_OPTIONS, *P_WTA_OPTIONS;

struct _WTA_OPTIONS {
    DWORD dwFlags;
    DWORD dwMask;
};

typedef struct _BP_ANIMATIONPARAMS BP_ANIMATIONPARAMS;

typedef enum _BP_BUFFERFORMAT BP_BUFFERFORMAT;

typedef struct _BP_PAINTPARAMS BP_PAINTPARAMS;

typedef struct _DTBGOPTS DTBGOPTS;

typedef struct _DTTOPTS DTTOPTS;

typedef HANDLE HANIMATIONBUFFER;

typedef HANDLE HPAINTBUFFER;

typedef struct _INTLIST INTLIST;

typedef struct _MARGINS MARGINS;

typedef struct _BP_ANIMATIONPARAMS * PBP_ANIMATIONPARAMS;

typedef struct _BP_PAINTPARAMS * PBP_PAINTPARAMS;

typedef struct _DTBGOPTS * PDTBGOPTS;

typedef struct _DTTOPTS * PDTTOPTS;

typedef struct _INTLIST * PINTLIST;

typedef struct _MARGINS * PMARGINS;

typedef enum PROPERTYORIGIN {
    PO_CLASS=2,
    PO_GLOBAL=3,
    PO_NOTFOUND=4,
    PO_PART=1,
    PO_STATE=0
} PROPERTYORIGIN;

typedef struct _WTA_OPTIONS * PWTA_OPTIONS;

typedef enum THEMESIZE {
    TS_DRAW=2,
    TS_MIN=0,
    TS_TRUE=1
} THEMESIZE;

typedef enum WINDOWTHEMEATTRIBUTETYPE {
    WTA_NONCLIENT=1
} WINDOWTHEMEATTRIBUTETYPE;

typedef struct _WTA_OPTIONS WTA_OPTIONS;

#define _CRT_PACKING 8

#define FILE_VER_GET_LOCALISED 1

#define FILE_VER_GET_NEUTRAL 2

#define FILE_VER_GET_PREFETCHED 4

#define VFF_BUFFTOOSMALL 4

#define VFF_CURNEDEST 1

#define VFF_FILEINUSE 2

#define VFFF_ISSHAREDFILE 1

#define VFT2_DRV_COMM 10

#define VFT2_DRV_DISPLAY 4

#define VFT2_DRV_INPUTMETHOD 11

#define VFT2_DRV_INSTALLABLE 8

#define VFT2_DRV_KEYBOARD 2

#define VFT2_DRV_LANGUAGE 3

#define VFT2_DRV_MOUSE 5

#define VFT2_DRV_NETWORK 6

#define VFT2_DRV_PRINTER 1

#define VFT2_DRV_SOUND 9

#define VFT2_DRV_SYSTEM 7

#define VFT2_DRV_VERSIONED_PRINTER 12

#define VFT2_FONT_RASTER 1

#define VFT2_FONT_TRUETYPE 3

#define VFT2_FONT_VECTOR 2

#define VFT2_UNKNOWN 0

#define VFT_APP 1

#define VFT_DLL 2

#define VFT_DRV 3

#define VFT_FONT 4

#define VFT_STATIC_LIB 7

#define VFT_UNKNOWN 0

#define VFT_VXD 5

#define VIF_ACCESSVIOLATION 512

#define VIF_BUFFTOOSMALL 262144

#define VIF_CANNOTCREATE 2048

#define VIF_CANNOTDELETE 4096

#define VIF_CANNOTDELETECUR 16384

#define VIF_CANNOTLOADCABINET 1048576

#define VIF_CANNOTLOADLZ32 524288

#define VIF_CANNOTREADDST 131072

#define VIF_CANNOTREADSRC 65536

#define VIF_CANNOTRENAME 8192

#define VIF_DIFFCODEPG 16

#define VIF_DIFFLANG 8

#define VIF_DIFFTYPE 32

#define VIF_FILEINUSE 128

#define VIF_MISMATCH 2

#define VIF_OUTOFMEMORY 32768

#define VIF_OUTOFSPACE 256

#define VIF_SHARINGVIOLATION 1024

#define VIF_SRCOLD 4

#define VIF_TEMPFILE 1

#define VIF_WRITEPROT 64

#define VIFF_DONTDELETEOLD 2

#define VIFF_FORCEINSTALL 1

#define VOS__BASE 0

#define VOS__PM16 2

#define VOS__PM32 3

#define VOS__WINDOWS16 1

#define VOS__WINDOWS32 4

#define VOS_DOS 65536

#define VOS_DOS_WINDOWS16 65537

#define VOS_DOS_WINDOWS32 65540

#define VOS_NT 262144

#define VOS_NT_WINDOWS32 262148

#define VOS_OS216 131072

#define VOS_OS216_PM16 131074

#define VOS_OS232 196608

#define VOS_OS232_PM32 196611

#define VOS_UNKNOWN 0

#define VOS_WINCE 327680

#define VS_FF_DEBUG 1

#define VS_FF_INFOINFERRED 16

#define VS_FF_PATCHED 4

#define VS_FF_PRERELEASE 2

#define VS_FF_PRIVATEBUILD 8

#define VS_FF_SPECIALBUILD 32

#define VS_FFI_FILEFLAGSMASK 63

#define VS_FFI_SIGNATURE 4277077181

#define VS_FFI_STRUCVERSION 65536

#define VS_USER_DEFINED 100

#define VS_VERSION_INFO 1

typedef struct tagVS_FIXEDFILEINFO tagVS_FIXEDFILEINFO, *PtagVS_FIXEDFILEINFO;

struct tagVS_FIXEDFILEINFO {
    DWORD dwSignature;
    DWORD dwStrucVersion;
    DWORD dwFileVersionMS;
    DWORD dwFileVersionLS;
    DWORD dwProductVersionMS;
    DWORD dwProductVersionLS;
    DWORD dwFileFlagsMask;
    DWORD dwFileFlags;
    DWORD dwFileOS;
    DWORD dwFileType;
    DWORD dwFileSubtype;
    DWORD dwFileDateMS;
    DWORD dwFileDateLS;
};

typedef struct tagVS_FIXEDFILEINFO VS_FIXEDFILEINFO;

#define WCHAR_MAX 65535

#define WCHAR_MIN 0

typedef uint _dev_t;

typedef ushort _ino_t;

typedef long _off_t;

typedef struct _stat32 _stat32, *P_stat32;

struct _stat32 {
    _dev_t st_dev;
    _ino_t st_ino;
    ushort st_mode;
    short st_nlink;
    short st_uid;
    short st_gid;
    _dev_t st_rdev;
    _off_t st_size;
    __time32_t st_atime;
    __time32_t st_mtime;
    __time32_t st_ctime;
};

typedef struct _stat32i64 _stat32i64, *P_stat32i64;

struct _stat32i64 {
    _dev_t st_dev;
    _ino_t st_ino;
    ushort st_mode;
    short st_nlink;
    short st_uid;
    short st_gid;
    _dev_t st_rdev;
    longlong st_size;
    __time32_t st_atime;
    __time32_t st_mtime;
    __time32_t st_ctime;
};

typedef struct _stat64 _stat64, *P_stat64;

struct _stat64 {
    _dev_t st_dev;
    _ino_t st_ino;
    ushort st_mode;
    short st_nlink;
    short st_uid;
    short st_gid;
    _dev_t st_rdev;
    longlong st_size;
    __time64_t st_atime;
    __time64_t st_mtime;
    __time64_t st_ctime;
};

typedef struct _stat64i32 _stat64i32, *P_stat64i32;

struct _stat64i32 {
    _dev_t st_dev;
    _ino_t st_ino;
    ushort st_mode;
    short st_nlink;
    short st_uid;
    short st_gid;
    _dev_t st_rdev;
    _off_t st_size;
    __time64_t st_atime;
    __time64_t st_mtime;
    __time64_t st_ctime;
};

typedef wchar_t _Wint_t;

typedef uint dev_t;

typedef ushort ino_t;

typedef int mbstate_t;

typedef long off_t;

typedef struct stat stat, *Pstat;

struct stat {
    _dev_t st_dev;
    _ino_t st_ino;
    ushort st_mode;
    short st_nlink;
    short st_uid;
    short st_gid;
    _dev_t st_rdev;
    _off_t st_size;
    time_t st_atime;
    time_t st_mtime;
    time_t st_ctime;
};

typedef struct IWCNConnectNotify IWCNConnectNotify, *PIWCNConnectNotify;

struct IWCNConnectNotify {
};

typedef struct IWCNDevice IWCNDevice, *PIWCNDevice;

struct IWCNDevice {
};

typedef struct WCNDeviceObject WCNDeviceObject, *PWCNDeviceObject;

struct WCNDeviceObject {
};

#define WCN_E_AUTHENTICATION_FAILED 2147761154

#define WCN_E_CONNECTION_REJECTED 2147761155

#define WCN_E_PEER_NOT_FOUND 2147761153

#define WCN_E_PROTOCOL_ERROR 2147761157

#define WCN_E_SESSION_TIMEDOUT 2147761156

#define WCN_VALUE_DT_CATEGORY_CAMERA 4

#define WCN_VALUE_DT_CATEGORY_COMPUTER 1

#define WCN_VALUE_DT_CATEGORY_DISPLAY 7

#define WCN_VALUE_DT_CATEGORY_GAMING_DEVICE 9

#define WCN_VALUE_DT_CATEGORY_INPUT_DEVICE 2

#define WCN_VALUE_DT_CATEGORY_MULTIMEDIA_DEVICE 8

#define WCN_VALUE_DT_CATEGORY_NETWORK_INFRASTRUCTURE 6

#define WCN_VALUE_DT_CATEGORY_PRINTER 3

#define WCN_VALUE_DT_CATEGORY_STORAGE 5

#define WCN_VALUE_DT_CATEGORY_TELEPHONE 10

#define WCN_VALUE_DT_SUBTYPE_CAMERA__STILL_CAMERA 1

#define WCN_VALUE_DT_SUBTYPE_COMPUTER__PC 1

#define WCN_VALUE_DT_SUBTYPE_COMPUTER__SERVER 2

#define WCN_VALUE_DT_SUBTYPE_DISPLAY__PICTURE_FRAME 2

#define WCN_VALUE_DT_SUBTYPE_DISPLAY__PROJECTOR 3

#define WCN_VALUE_DT_SUBTYPE_DISPLAY__TELEVISION 1

#define WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__PLAYSTATION 3

#define WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__XBOX 1

#define WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__XBOX360 2

#define WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__DAR 1

#define WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__MCX 3

#define WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__PVR 2

#define WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__AP 1

#define WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__ROUTER 2

#define WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__SWITCH 3

#define WCN_VALUE_DT_SUBTYPE_PRINTER__PRINTER 1

#define WCN_VALUE_DT_SUBTYPE_PRINTER__SCANNER 2

#define WCN_VALUE_DT_SUBTYPE_STORAGE__NAS 1

#define WCN_VALUE_DT_SUBTYPE_TELEPHONE__WINDOWS_MOBILE 1

#define WCN_VALUE_DT_SUBTYPE_WIFI_OUI 5304836

typedef enum tagWCN_ATTRIBUTE_TYPE {
    WCN_NUM_ATTRIBUTE_TYPES=93,
    WCN_TYPE_802_1X_ENABLED=83,
    WCN_TYPE_APPLICATION_EXTENSION=79,
    WCN_TYPE_APPSESSIONKEY=84,
    WCN_TYPE_AP_CHANNEL=0,
    WCN_TYPE_AP_SETUP_LOCKED=78,
    WCN_TYPE_ASSOCIATION_STATE=1,
    WCN_TYPE_AUTHENTICATION_TYPE=2,
    WCN_TYPE_AUTHENTICATION_TYPE_FLAGS=3,
    WCN_TYPE_AUTHENTICATOR=4,
    WCN_TYPE_BSSID=91,
    WCN_TYPE_CONFIGURATION_ERROR=6,
    WCN_TYPE_CONFIG_METHODS=5,
    WCN_TYPE_CONFIRMATION_URL4=7,
    WCN_TYPE_CONFIRMATION_URL6=8,
    WCN_TYPE_CONNECTION_TYPE=9,
    WCN_TYPE_CONNECTION_TYPE_FLAGS=10,
    WCN_TYPE_CREDENTIAL=11,
    WCN_TYPE_CURRENT_SSID=90,
    WCN_TYPE_DEVICE_NAME=12,
    WCN_TYPE_DEVICE_PASSWORD_ID=13,
    WCN_TYPE_DOT11_MAC_ADDRESS=92,
    WCN_TYPE_EAP_IDENTITY=68,
    WCN_TYPE_EAP_TYPE=80,
    WCN_TYPE_ENCRYPTED_SETTINGS=18,
    WCN_TYPE_ENCRYPTION_TYPE=19,
    WCN_TYPE_ENCRYPTION_TYPE_FLAGS=20,
    WCN_TYPE_ENROLLEE_NONCE=21,
    WCN_TYPE_E_HASH1=14,
    WCN_TYPE_E_HASH2=15,
    WCN_TYPE_E_SNONCE1=16,
    WCN_TYPE_E_SNONCE2=17,
    WCN_TYPE_FEATURE_ID=22,
    WCN_TYPE_IDENTITY=23,
    WCN_TYPE_IDENTITY_PROOF=24,
    WCN_TYPE_INITIALIZATION_VECTOR=81,
    WCN_TYPE_KEY_IDENTIFIER=26,
    WCN_TYPE_KEY_LIFETIME=72,
    WCN_TYPE_KEY_PROVIDED_AUTOMATICALLY=82,
    WCN_TYPE_KEY_WRAP_AUTHENTICATOR=25,
    WCN_TYPE_MAC_ADDRESS=27,
    WCN_TYPE_MANUFACTURER=28,
    WCN_TYPE_MESSAGE_COUNTER=69,
    WCN_TYPE_MESSAGE_TYPE=29,
    WCN_TYPE_MODEL_NAME=30,
    WCN_TYPE_MODEL_NUMBER=31,
    WCN_TYPE_NETWORK_INDEX=32,
    WCN_TYPE_NETWORK_KEY=33,
    WCN_TYPE_NETWORK_KEY_INDEX=34,
    WCN_TYPE_NEW_DEVICE_NAME=35,
    WCN_TYPE_NEW_PASSWORD=36,
    WCN_TYPE_OOB_DEVICE_PASSWORD=37,
    WCN_TYPE_OS_VERSION=38,
    WCN_TYPE_PERMITTED_CONFIG_METHODS=73,
    WCN_TYPE_PORTABLE_DEVICE=77,
    WCN_TYPE_POWER_LEVEL=39,
    WCN_TYPE_PRIMARY_DEVICE_TYPE=75,
    WCN_TYPE_PRIMARY_DEVICE_TYPE_CATEGORY=87,
    WCN_TYPE_PRIMARY_DEVICE_TYPE_SUBCATEGORY=89,
    WCN_TYPE_PRIMARY_DEVICE_TYPE_SUBCATEGORY_OUI=88,
    WCN_TYPE_PSK_CURRENT=40,
    WCN_TYPE_PSK_MAX=41,
    WCN_TYPE_PUBLIC_KEY=42,
    WCN_TYPE_PUBLIC_KEY_HASH=70,
    WCN_TYPE_RADIO_ENABLED=43,
    WCN_TYPE_REBOOT=44,
    WCN_TYPE_REGISTRAR_CURRENT=45,
    WCN_TYPE_REGISTRAR_ESTABLISHED=46,
    WCN_TYPE_REGISTRAR_LIST=47,
    WCN_TYPE_REGISTRAR_MAX=48,
    WCN_TYPE_REGISTRAR_NONCE=49,
    WCN_TYPE_REKEY_KEY=71,
    WCN_TYPE_REQUEST_TYPE=50,
    WCN_TYPE_RESPONSE_TYPE=51,
    WCN_TYPE_RF_BANDS=52,
    WCN_TYPE_R_HASH1=53,
    WCN_TYPE_R_HASH2=54,
    WCN_TYPE_R_SNONCE1=55,
    WCN_TYPE_R_SNONCE2=56,
    WCN_TYPE_SECONDARY_DEVICE_TYPE_LIST=76,
    WCN_TYPE_SELECTED_REGISTRAR=57,
    WCN_TYPE_SELECTED_REGISTRAR_CONFIG_METHODS=74,
    WCN_TYPE_SERIAL_NUMBER=58,
    WCN_TYPE_SSID=60,
    WCN_TYPE_TOTAL_NETWORKS=61,
    WCN_TYPE_UUID=86,
    WCN_TYPE_UUID_E=62,
    WCN_TYPE_UUID_R=63,
    WCN_TYPE_VENDOR_EXTENSION=64,
    WCN_TYPE_VERSION=65,
    WCN_TYPE_WEPTRANSMITKEY=85,
    WCN_TYPE_WI_FI_PROTECTED_SETUP_STATE=59,
    WCN_TYPE_X_509_CERTIFICATE=67,
    WCN_TYPE_X_509_CERTIFICATE_REQUEST=66
} tagWCN_ATTRIBUTE_TYPE;

typedef enum tagWCN_VALUE_TYPE_ASSOCIATION_STATE {
    WCN_VALUE_AS_ASSOCIATION_FAILURE=3,
    WCN_VALUE_AS_CONFIGURATION_FAILURE=2,
    WCN_VALUE_AS_CONNECTION_SUCCESS=1,
    WCN_VALUE_AS_IP_FAILURE=4,
    WCN_VALUE_AS_NOT_ASSOCIATED=0
} tagWCN_VALUE_TYPE_ASSOCIATION_STATE;

typedef enum tagWCN_VALUE_TYPE_AUTHENTICATION_TYPE {
    WCN_VALUE_AT_OPEN=1,
    WCN_VALUE_AT_SHARED=4,
    WCN_VALUE_AT_WPA=8,
    WCN_VALUE_AT_WPA2=16,
    WCN_VALUE_AT_WPA2PSK=32,
    WCN_VALUE_AT_WPAPSK=2
} tagWCN_VALUE_TYPE_AUTHENTICATION_TYPE;

typedef enum tagWCN_VALUE_TYPE_BOOLEAN {
    WCN_VALUE_FALSE=0,
    WCN_VALUE_TRUE=1
} tagWCN_VALUE_TYPE_BOOLEAN;

typedef enum tagWCN_VALUE_TYPE_CONFIG_METHODS {
    WCN_VALUE_CM_DISPLAY=8,
    WCN_VALUE_CM_ETHERNET=2,
    WCN_VALUE_CM_EXTERNAL_NFC=16,
    WCN_VALUE_CM_INTEGRATED_NFC=32,
    WCN_VALUE_CM_KEYPAD=256,
    WCN_VALUE_CM_LABEL=4,
    WCN_VALUE_CM_NFC_INTERFACE=64,
    WCN_VALUE_CM_PUSHBUTTON=128,
    WCN_VALUE_CM_USBA=1
} tagWCN_VALUE_TYPE_CONFIG_METHODS;

typedef enum tagWCN_VALUE_TYPE_CONFIGURATION_ERROR {
    WCN_VALUE_CE_2_4_CHANNEL_NOT_SUPPORTED=3,
    WCN_VALUE_CE_5_0_CHANNEL_NOT_SUPPORTED=4,
    WCN_VALUE_CE_COULD_NOT_CONNECT_TO_REGISTRAR=11,
    WCN_VALUE_CE_DECRYPTION_CRC_FAILURE=2,
    WCN_VALUE_CE_DEVICE_BUSY=14,
    WCN_VALUE_CE_DEVICE_PASSWORD_AUTH_FAILURE=18,
    WCN_VALUE_CE_FAILED_DHCP_CONFIG=9,
    WCN_VALUE_CE_IP_ADDRESS_CONFLICT=10,
    WCN_VALUE_CE_MESSAGE_TIMEOUT=16,
    WCN_VALUE_CE_MULTIPLE_PBC_SESSIONS_DETECTED=12,
    WCN_VALUE_CE_NETWORK_ASSOCIATION_FAILURE=7,
    WCN_VALUE_CE_NETWORK_AUTHENTICATION_FAILURE=6,
    WCN_VALUE_CE_NO_DHCP_RESPONSE=8,
    WCN_VALUE_CE_NO_ERROR=0,
    WCN_VALUE_CE_OOB_INTERFACE_READ_ERROR=1,
    WCN_VALUE_CE_REGISTRATION_SESSION_TIMEOUT=17,
    WCN_VALUE_CE_ROGUE_ACTIVITY_SUSPECTED=13,
    WCN_VALUE_CE_SETUP_LOCKED=15,
    WCN_VALUE_CE_SIGNAL_TOO_WEAK=5
} tagWCN_VALUE_TYPE_CONFIGURATION_ERROR;

typedef enum tagWCN_VALUE_TYPE_CONNECTION_TYPE {
    WCN_VALUE_CT_ESS=1,
    WCN_VALUE_CT_IBSS=2
} tagWCN_VALUE_TYPE_CONNECTION_TYPE;

typedef enum tagWCN_VALUE_TYPE_DEVICE_PASSWORD_ID {
    WCN_VALUE_DP_DEFAULT=0,
    WCN_VALUE_DP_MACHINE_SPECIFIED=2,
    WCN_VALUE_DP_PUSHBUTTON=4,
    WCN_VALUE_DP_REGISTRAR_SPECIFIED=5,
    WCN_VALUE_DP_REKEY=3,
    WCN_VALUE_DP_USER_SPECIFIED=1
} tagWCN_VALUE_TYPE_DEVICE_PASSWORD_ID;

typedef enum tagWCN_VALUE_TYPE_ENCRYPTION_TYPE {
    WCN_VALUE_ET_AES=8,
    WCN_VALUE_ET_NONE=1,
    WCN_VALUE_ET_TKIP=4,
    WCN_VALUE_ET_WEP=2
} tagWCN_VALUE_TYPE_ENCRYPTION_TYPE;

typedef enum tagWCN_VALUE_TYPE_MESSAGE_TYPE {
    WCN_VALUE_MT_ACK=13,
    WCN_VALUE_MT_BEACON=1,
    WCN_VALUE_MT_DONE=15,
    WCN_VALUE_MT_M1=4,
    WCN_VALUE_MT_M2=5,
    WCN_VALUE_MT_M2D=6,
    WCN_VALUE_MT_M3=7,
    WCN_VALUE_MT_M4=8,
    WCN_VALUE_MT_M5=9,
    WCN_VALUE_MT_M6=10,
    WCN_VALUE_MT_M7=11,
    WCN_VALUE_MT_M8=12,
    WCN_VALUE_MT_NACK=14,
    WCN_VALUE_MT_PROBE_REQUEST=2,
    WCN_VALUE_MT_PROBE_RESPONSE=3
} tagWCN_VALUE_TYPE_MESSAGE_TYPE;

typedef struct tagWCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE tagWCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE, *PtagWCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE;

typedef ushort WCN_VALUE_TYPE_DEVICE_TYPE_CATEGORY;

typedef uint WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY_OUI;

typedef ushort WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY;

struct tagWCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE {
    WCN_VALUE_TYPE_DEVICE_TYPE_CATEGORY Category;
    WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY_OUI SubCategoryOUI;
    WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY SubCategory;
};

typedef enum tagWCN_VALUE_TYPE_REQUEST_TYPE {
    WCN_VALUE_ReqT_ENROLLEE_INFO=0,
    WCN_VALUE_ReqT_ENROLLEE_OPEN_1X=1,
    WCN_VALUE_ReqT_MANAGER_REGISTRAR=3,
    WCN_VALUE_ReqT_REGISTRAR=2
} tagWCN_VALUE_TYPE_REQUEST_TYPE;

typedef enum tagWCN_VALUE_TYPE_RESPONSE_TYPE {
    WCN_VALUE_RspT_AP=3,
    WCN_VALUE_RspT_ENROLLEE_INFO=0,
    WCN_VALUE_RspT_ENROLLEE_OPEN_1X=1,
    WCN_VALUE_RspT_REGISTRAR=2
} tagWCN_VALUE_TYPE_RESPONSE_TYPE;

typedef enum tagWCN_VALUE_TYPE_RF_BANDS {
    WCN_VALUE_RB_24GHZ=1,
    WCN_VALUE_RB_50GHZ=2
} tagWCN_VALUE_TYPE_RF_BANDS;

typedef enum tagWCN_VALUE_TYPE_WI_FI_PROTECTED_SETUP_STATE {
    WCN_VALUE_SS_CONFIGURED=2,
    WCN_VALUE_SS_NOT_CONFIGURED=1,
    WCN_VALUE_SS_RESERVED00=0
} tagWCN_VALUE_TYPE_WI_FI_PROTECTED_SETUP_STATE;

typedef enum tagWCN_ATTRIBUTE_TYPE WCN_ATTRIBUTE_TYPE;

typedef enum tagWCN_VALUE_TYPE_ASSOCIATION_STATE WCN_VALUE_TYPE_ASSOCIATION_STATE;

typedef enum tagWCN_VALUE_TYPE_AUTHENTICATION_TYPE WCN_VALUE_TYPE_AUTHENTICATION_TYPE;

typedef enum tagWCN_VALUE_TYPE_BOOLEAN WCN_VALUE_TYPE_BOOLEAN;

typedef enum tagWCN_VALUE_TYPE_CONFIG_METHODS WCN_VALUE_TYPE_CONFIG_METHODS;

typedef enum tagWCN_VALUE_TYPE_CONFIGURATION_ERROR WCN_VALUE_TYPE_CONFIGURATION_ERROR;

typedef enum tagWCN_VALUE_TYPE_CONNECTION_TYPE WCN_VALUE_TYPE_CONNECTION_TYPE;

typedef enum tagWCN_VALUE_TYPE_DEVICE_PASSWORD_ID WCN_VALUE_TYPE_DEVICE_PASSWORD_ID;

typedef enum tagWCN_VALUE_TYPE_ENCRYPTION_TYPE WCN_VALUE_TYPE_ENCRYPTION_TYPE;

typedef enum tagWCN_VALUE_TYPE_MESSAGE_TYPE WCN_VALUE_TYPE_MESSAGE_TYPE;

typedef struct tagWCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE WCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE;

typedef enum tagWCN_VALUE_TYPE_REQUEST_TYPE WCN_VALUE_TYPE_REQUEST_TYPE;

typedef enum tagWCN_VALUE_TYPE_RESPONSE_TYPE WCN_VALUE_TYPE_RESPONSE_TYPE;

typedef enum tagWCN_VALUE_TYPE_RF_BANDS WCN_VALUE_TYPE_RF_BANDS;

typedef enum tagWCN_VALUE_TYPE_WI_FI_PROTECTED_SETUP_STATE WCN_VALUE_TYPE_WI_FI_PROTECTED_SETUP_STATE;

typedef wchar_t wctrans_t;

#define WDS_CLI_NO_SPARSE_FILE 2

#define WDS_CLI_TRANSFER_ASYNCHRONOUS 1

typedef enum _WDS_CLI_FIRMWARE_TYPE {
    WDS_CLI_FIRMWARE_BIOS=1,
    WDS_CLI_FIRMWARE_EFI=2,
    WDS_CLI_FIRMWARE_UNKNOWN=0
} _WDS_CLI_FIRMWARE_TYPE;

typedef enum _WDS_CLI_IMAGE_PARAM_TYPE {
    WDS_CLI_IMAGE_PARAM_SPARSE_FILE=1,
    WDS_CLI_IMAGE_PARAM_SUPPORTED_FIRMWARES=2,
    WDS_CLI_IMAGE_PARAM_UNKNOWN=0
} _WDS_CLI_IMAGE_PARAM_TYPE;

typedef enum _WDS_CLI_IMAGE_TYPE {
    WDS_CLI_IMAGE_TYPE_UNKNOWN=0,
    WDS_CLI_IMAGE_TYPE_VHD=2,
    WDS_CLI_IMAGE_TYPE_WIM=1
} _WDS_CLI_IMAGE_TYPE;

typedef enum enum_8389 {
    WdsCliFlagEnumFilterFirmware=2,
    WdsCliFlagEnumFilterVersion=1
} enum_8389;

typedef enum enum_8390 {
    WDS_LOG_TYPE_CLIENT_APPLY_FINISHED=6,
    WDS_LOG_TYPE_CLIENT_APPLY_FINISHED_2=16,
    WDS_LOG_TYPE_CLIENT_APPLY_STARTED=5,
    WDS_LOG_TYPE_CLIENT_APPLY_STARTED_2=15,
    WDS_LOG_TYPE_CLIENT_DOMAINJOINERROR=12,
    WDS_LOG_TYPE_CLIENT_DOMAINJOINERROR_2=17,
    WDS_LOG_TYPE_CLIENT_DRIVER_PACKAGE_NOT_ACCESSIBLE=18,
    WDS_LOG_TYPE_CLIENT_ERROR=1,
    WDS_LOG_TYPE_CLIENT_FINISHED=3,
    WDS_LOG_TYPE_CLIENT_GENERIC_MESSAGE=7,
    WDS_LOG_TYPE_CLIENT_IMAGE_SELECTED=4,
    WDS_LOG_TYPE_CLIENT_IMAGE_SELECTED2=22,
    WDS_LOG_TYPE_CLIENT_MAX_CODE=23,
    WDS_LOG_TYPE_CLIENT_OFFLINE_DRIVER_INJECTION_END=20,
    WDS_LOG_TYPE_CLIENT_OFFLINE_DRIVER_INJECTION_FAILURE=21,
    WDS_LOG_TYPE_CLIENT_OFFLINE_DRIVER_INJECTION_START=19,
    WDS_LOG_TYPE_CLIENT_POST_ACTIONS_END=14,
    WDS_LOG_TYPE_CLIENT_POST_ACTIONS_START=13,
    WDS_LOG_TYPE_CLIENT_STARTED=2,
    WDS_LOG_TYPE_CLIENT_TRANSFER_DOWNGRADE=11,
    WDS_LOG_TYPE_CLIENT_TRANSFER_END=10,
    WDS_LOG_TYPE_CLIENT_TRANSFER_START=9,
    WDS_LOG_TYPE_CLIENT_UNATTEND_MODE=8
} enum_8390;

typedef enum enum_8391 {
    WDS_LOG_LEVEL_DISABLED=0,
    WDS_LOG_LEVEL_ERROR=1,
    WDS_LOG_LEVEL_INFO=3,
    WDS_LOG_LEVEL_WARNING=2
} enum_8391;

typedef enum enum_8392 {
    WDS_CLI_MSG_COMPLETE=1,
    WDS_CLI_MSG_PROGRESS=2,
    WDS_CLI_MSG_START=0,
    WDS_CLI_MSG_TEXT=3
} enum_8392;

typedef struct tagWDS_CLI_CRED tagWDS_CLI_CRED, *PtagWDS_CLI_CRED;

typedef struct tagWDS_CLI_CRED * LPWDS_CLI_CRED;

struct tagWDS_CLI_CRED {
    PCWSTR pwszUserName;
    PCWSTR pwszDomain;
    PCWSTR pwszPassword;
};

typedef void (* PFN_WdsCliCallback)(DWORD, WPARAM, LPARAM, PVOID);

typedef void (* PFN_WdsCliTraceFunction)(LPCWSTR, va_list);

typedef struct tagWDS_CLI_CRED * PWDS_CLI_CRED;

typedef enum _WDS_CLI_FIRMWARE_TYPE * PWDS_CLI_FIRMWARE_TYPE;

typedef enum _WDS_CLI_IMAGE_PARAM_TYPE * PWDS_CLI_IMAGE_PARAM_TYPE;

typedef enum _WDS_CLI_IMAGE_TYPE * PWDS_CLI_IMAGE_TYPE;

typedef struct tagWDS_CLI_CRED WDS_CLI_CRED;

typedef enum _WDS_CLI_FIRMWARE_TYPE WDS_CLI_FIRMWARE_TYPE;

typedef enum _WDS_CLI_IMAGE_PARAM_TYPE WDS_CLI_IMAGE_PARAM_TYPE;

typedef enum _WDS_CLI_IMAGE_TYPE WDS_CLI_IMAGE_TYPE;

#define WER_DUMP_MASK_DUMPTYPE 1

#define WER_DUMP_MASK_ONLY_THISTHREAD 2

#define WER_DUMP_MASK_OTHER_MODULESFLAGS 128

#define WER_DUMP_MASK_OTHERTHREADFLAGS 16

#define WER_DUMP_MASK_OTHERTHREADFLAGS_EX 32

#define WER_DUMP_MASK_PREFERRED_MODULE_LIST 256

#define WER_DUMP_MASK_PREFERRED_MODULESFLAGS 64

#define WER_DUMP_MASK_START 1

#define WER_DUMP_MASK_THREADFLAGS 4

#define WER_DUMP_MASK_THREADFLAGS_EX 8

#define WER_DUMP_NOHEAP_ONQUEUE 1

#define WER_E_MISSING_PARAM 2148073221

#define WER_E_STORE_DISABLED 2148073219

#define WER_ERROR_START 65280

#define WER_FAULT_REPORTING_ALWAYS_SHOW_UI 16

#define WER_FAULT_REPORTING_FLAG_DISABLE_THREAD_SUSPENSION 4

#define WER_FAULT_REPORTING_FLAG_NOHEAP 1

#define WER_FAULT_REPORTING_FLAG_QUEUE 2

#define WER_FAULT_REPORTING_FLAG_QUEUE_UPLOAD 8

#define WER_FILE_ANONYMOUS_DATA 2

#define WER_FILE_DELETE_WHEN_DONE 1

#define WER_MAX_EVENT_NAME_LENGTH 64

#define WER_MAX_MEM_BLOCK_SIZE 65536

#define WER_MAX_PARAM_COUNT 10

#define WER_MAX_PARAM_LENGTH 260

#define WER_MAX_PREFERRED_MODULES 128

#define WER_MAX_PREFERRED_MODULES_BUFFER 256

#define WER_MAX_REGISTERED_ENTRIES 512

#define WER_MAX_REGISTERED_RUNTIME_EXCEPTION_MODULES 16

#define WER_MAX_SIGNATURE_NAME_LENGTH 128

#define WER_MAX_TOTAL_PARAM_LENGTH 1720

#define WER_P0 0

#define WER_P1 1

#define WER_P2 2

#define WER_P3 3

#define WER_P4 4

#define WER_P5 5

#define WER_P6 6

#define WER_P7 7

#define WER_P8 8

#define WER_P9 9

#define WER_SUBMIT_ADD_REGISTERED_DATA 16

#define WER_SUBMIT_ARCHIVE_PARAMETERS_ONLY 4096

#define WER_SUBMIT_BYPASS_DATA_THROTTLING 2048

#define WER_SUBMIT_HONOR_RECOVERY 1

#define WER_SUBMIT_HONOR_RESTART 2

#define WER_SUBMIT_NO_ARCHIVE 256

#define WER_SUBMIT_NO_CLOSE_UI 64

#define WER_SUBMIT_NO_QUEUE 128

#define WER_SUBMIT_OUTOFPROCESS 32

#define WER_SUBMIT_OUTOFPROCESS_ASYNC 1024

#define WER_SUBMIT_QUEUE 4

#define WER_SUBMIT_REPORT_MACHINE_ID 8192

#define WER_SUBMIT_SHOW_DEBUG 8

#define WER_SUBMIT_START_MINIMIZED 512

typedef enum _WER_CONSENT {
    WerConsentAlwaysPrompt=4,
    WerConsentApproved=2,
    WerConsentDenied=3,
    WerConsentMax=5,
    WerConsentNotAsked=1
} _WER_CONSENT;

typedef struct _WER_DUMP_CUSTOM_OPTIONS _WER_DUMP_CUSTOM_OPTIONS, *P_WER_DUMP_CUSTOM_OPTIONS;

struct _WER_DUMP_CUSTOM_OPTIONS {
    DWORD dwSize;
    DWORD dwMask;
    DWORD dwDumpFlags;
    BOOL bOnlyThisThread;
    DWORD dwExceptionThreadFlags;
    DWORD dwOtherThreadFlags;
    DWORD dwExceptionThreadExFlags;
    DWORD dwOtherThreadExFlags;
    DWORD dwPreferredModuleFlags;
    DWORD dwOtherModuleFlags;
    WCHAR wzPreferredModuleList[256];
};

typedef enum _WER_DUMP_TYPE {
    WerDumpTypeHeapDump=3,
    WerDumpTypeMax=4,
    WerDumpTypeMicroDump=1,
    WerDumpTypeMiniDump=2
} _WER_DUMP_TYPE;

typedef struct _WER_EXCEPTION_INFORMATION _WER_EXCEPTION_INFORMATION, *P_WER_EXCEPTION_INFORMATION;

typedef struct _EXCEPTION_POINTERS * PEXCEPTION_POINTERS;

struct _WER_EXCEPTION_INFORMATION {
    PEXCEPTION_POINTERS pExceptionPointers;
    BOOL bClientPointers;
};

typedef enum _WER_FILE_TYPE {
    WerFileTypeHeapdump=3,
    WerFileTypeMax=6,
    WerFileTypeMicrodump=1,
    WerFileTypeMinidump=2,
    WerFileTypeOther=5,
    WerFileTypeUserDocument=4
} _WER_FILE_TYPE;

typedef enum _WER_REGISTER_FILE_TYPE {
    WerRegFileTypeMax=3,
    WerRegFileTypeOther=2,
    WerRegFileTypeUserDocument=1
} _WER_REGISTER_FILE_TYPE;

typedef struct _WER_REPORT_INFORMATION _WER_REPORT_INFORMATION, *P_WER_REPORT_INFORMATION;

struct _WER_REPORT_INFORMATION {
    DWORD dwSize;
    HANDLE hProcess;
    WCHAR wzConsentKey[64];
    WCHAR wzFriendlyEventName[128];
    WCHAR wzApplicationName[128];
    WCHAR wzApplicationPath[260];
    WCHAR wzDescription[512];
    HWND hwndParent;
};

typedef enum _WER_REPORT_TYPE {
    WerReportApplicationCrash=2,
    WerReportApplicationHang=3,
    WerReportCritical=1,
    WerReportInvalid=5,
    WerReportKernel=4,
    WerReportNonCritical=0
} _WER_REPORT_TYPE;

typedef enum _WER_REPORT_UI {
    WerUIAdditionalDataDlgHeader=1,
    WerUICloseDlgBody=9,
    WerUICloseDlgButtonText=10,
    WerUICloseDlgHeader=8,
    WerUICloseText=7,
    WerUIConsentDlgBody=4,
    WerUIConsentDlgHeader=3,
    WerUICustomActionButtonText=11,
    WerUIIconFilePath=2,
    WerUIMax=12,
    WerUIOfflineSolutionCheckText=6,
    WerUIOnlineSolutionCheckText=5
} _WER_REPORT_UI;

typedef struct _WER_RUNTIME_EXCEPTION_INFORMATION _WER_RUNTIME_EXCEPTION_INFORMATION, *P_WER_RUNTIME_EXCEPTION_INFORMATION;

struct _WER_RUNTIME_EXCEPTION_INFORMATION {
    DWORD dwSize;
    HANDLE hProcess;
    HANDLE hThread;
    EXCEPTION_RECORD exceptionRecord;
    CONTEXT context;
    PCWSTR pwszReportId;
};

typedef enum _WER_SUBMIT_RESULT {
    WerCustomAction=9,
    WerDisabled=5,
    WerDisabledQueue=7,
    WerReportAsync=8,
    WerReportCancelled=6,
    WerReportDebug=3,
    WerReportFailed=4,
    WerReportQueued=1,
    WerReportUploaded=2
} _WER_SUBMIT_RESULT;

typedef HANDLE HREPORT;

typedef struct _WER_RUNTIME_EXCEPTION_INFORMATION * PWER_RUNTIME_EXCEPTION_INFORMATION;

typedef HRESULT (* PFN_WER_RUNTIME_EXCEPTION_DEBUGGER_LAUNCH)(PVOID, PWER_RUNTIME_EXCEPTION_INFORMATION, PBOOL, PWSTR, PDWORD, PBOOL);

typedef HRESULT (* PFN_WER_RUNTIME_EXCEPTION_EVENT)(PVOID, PWER_RUNTIME_EXCEPTION_INFORMATION, BOOL *, PWSTR, PDWORD, PDWORD);

typedef HRESULT (* PFN_WER_RUNTIME_EXCEPTION_EVENT_SIGNATURE)(PVOID, PWER_RUNTIME_EXCEPTION_INFORMATION, DWORD, PWSTR, PDWORD, PWSTR, PDWORD);

typedef struct _WER_DUMP_CUSTOM_OPTIONS * PWER_DUMP_CUSTOM_OPTIONS;

typedef struct _WER_EXCEPTION_INFORMATION * PWER_EXCEPTION_INFORMATION;

typedef struct _WER_REPORT_INFORMATION * PWER_REPORT_INFORMATION;

typedef enum _WER_SUBMIT_RESULT * PWER_SUBMIT_RESULT;

typedef enum _WER_CONSENT WER_CONSENT;

typedef struct _WER_DUMP_CUSTOM_OPTIONS WER_DUMP_CUSTOM_OPTIONS;

typedef enum _WER_DUMP_TYPE WER_DUMP_TYPE;

typedef struct _WER_EXCEPTION_INFORMATION WER_EXCEPTION_INFORMATION;

typedef enum _WER_FILE_TYPE WER_FILE_TYPE;

typedef enum _WER_REGISTER_FILE_TYPE WER_REGISTER_FILE_TYPE;

typedef struct _WER_REPORT_INFORMATION WER_REPORT_INFORMATION;

typedef enum _WER_REPORT_TYPE WER_REPORT_TYPE;

typedef enum _WER_REPORT_UI WER_REPORT_UI;

typedef struct _WER_RUNTIME_EXCEPTION_INFORMATION WER_RUNTIME_EXCEPTION_INFORMATION;

typedef enum _WER_SUBMIT_RESULT WER_SUBMIT_RESULT;

#define ABOVE_NORMAL_PRIORITY_CLASS 32768

#define AC_LINE_BACKUP_POWER 2

#define AC_LINE_OFFLINE 0

#define AC_LINE_ONLINE 1

#define AC_LINE_UNKNOWN 255

#define ACTCTX_FLAG_APPLICATION_NAME_VALID 32

#define ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID 4

#define ACTCTX_FLAG_HMODULE_VALID 128

#define ACTCTX_FLAG_LANGID_VALID 2

#define ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID 1

#define ACTCTX_FLAG_RESOURCE_NAME_VALID 8

#define ACTCTX_FLAG_SET_PROCESS_DEFAULT 16

#define ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF 64

#define ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED 1

#define BACKUP_ALTERNATE_DATA 4

#define BACKUP_DATA 1

#define BACKUP_EA_DATA 2

#define BACKUP_INVALID 0

#define BACKUP_LINK 5

#define BACKUP_OBJECT_ID 7

#define BACKUP_PROPERTY_DATA 6

#define BACKUP_REPARSE_DATA 8

#define BACKUP_SECURITY_DATA 3

#define BACKUP_SPARSE_BLOCK 9

#define BACKUP_TXFS_DATA 10

#define BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE 65536

#define BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE 1

#define BASE_SEARCH_PATH_INVALID_FLAGS -98306

#define BASE_SEARCH_PATH_PERMANENT 32768

#define BATTERY_FLAG_CHARGING 8

#define BATTERY_FLAG_CRITICAL 4

#define BATTERY_FLAG_HIGH 1

#define BATTERY_FLAG_LOW 2

#define BATTERY_FLAG_NO_BATTERY 128

#define BATTERY_FLAG_UNKNOWN 255

#define BATTERY_LIFE_UNKNOWN 4294967295

#define BATTERY_PERCENTAGE_UNKNOWN 255

#define BAUD_075 1

#define BAUD_110 2

#define BAUD_115200 131072

#define BAUD_1200 64

#define BAUD_128K 65536

#define BAUD_134_5 4

#define BAUD_14400 4096

#define BAUD_150 8

#define BAUD_1800 128

#define BAUD_19200 8192

#define BAUD_2400 256

#define BAUD_300 16

#define BAUD_38400 16384

#define BAUD_4800 512

#define BAUD_56K 32768

#define BAUD_57600 262144

#define BAUD_600 32

#define BAUD_7200 1024

#define BAUD_9600 2048

#define BAUD_USER 268435456

#define BELOW_NORMAL_PRIORITY_CLASS 16384

#define CALLBACK_CHUNK_FINISHED 0

#define CALLBACK_STREAM_SWITCH 1

#define CBR_110 110

#define CBR_115200 115200

#define CBR_1200 1200

#define CBR_128000 128000

#define CBR_14400 14400

#define CBR_19200 19200

#define CBR_2400 2400

#define CBR_256000 256000

#define CBR_300 300

#define CBR_38400 38400

#define CBR_4800 4800

#define CBR_56000 56000

#define CBR_57600 57600

#define CBR_600 600

#define CBR_9600 9600

#define CE_BREAK 16

#define CE_DNS 2048

#define CE_FRAME 8

#define CE_IOE 1024

#define CE_MODE 32768

#define CE_OOP 4096

#define CE_OVERRUN 2

#define CE_PTO 512

#define CE_RXOVER 1

#define CE_RXPARITY 4

#define CE_TXFULL 256

#define CLRBREAK 9

#define CLRDTR 6

#define CLRRTS 4

#define COMMPROP_INITIALIZED 3879531822

#define CONDITION_VARIABLE_LOCKMODE_SHARED 1

#define CONTROL_C_EXIT 3221225786

#define COPY_FILE_ALLOW_DECRYPTED_DESTINATION 8

#define COPY_FILE_COPY_SYMLINK 2048

#define COPY_FILE_FAIL_IF_EXISTS 1

#define COPY_FILE_NO_BUFFERING 4096

#define COPY_FILE_OPEN_SOURCE_FOR_WRITE 4

#define COPY_FILE_RESTARTABLE 2

#define CREATE_ALWAYS 2

#define CREATE_BREAKAWAY_FROM_JOB 16777216

#define CREATE_DEFAULT_ERROR_MODE 67108864

#define CREATE_EVENT_INITIAL_SET 2

#define CREATE_EVENT_MANUAL_RESET 1

#define CREATE_FOR_DIR 2

#define CREATE_FOR_IMPORT 1

#define CREATE_FORCEDOS 8192

#define CREATE_IGNORE_SYSTEM_DEFAULT 2147483648

#define CREATE_MUTEX_INITIAL_OWNER 1

#define CREATE_NEW 1

#define CREATE_NEW_CONSOLE 16

#define CREATE_NEW_PROCESS_GROUP 512

#define CREATE_NO_WINDOW 134217728

#define CREATE_PRESERVE_CODE_AUTHZ_LEVEL 33554432

#define CREATE_PROCESS_DEBUG_EVENT 3

#define CREATE_PROTECTED_PROCESS 262144

#define CREATE_SEPARATE_WOW_VDM 2048

#define CREATE_SHARED_WOW_VDM 4096

#define CREATE_SUSPENDED 4

#define CREATE_THREAD_DEBUG_EVENT 2

#define CREATE_UNICODE_ENVIRONMENT 1024

#define CREATE_WAITABLE_TIMER_MANUAL_RESET 1

#define CRITICAL_SECTION_NO_DEBUG_INFO 16777216

#define DATABITS_16 16

#define DATABITS_16X 32

#define DATABITS_5 1

#define DATABITS_6 2

#define DATABITS_7 4

#define DATABITS_8 8

#define DDD_EXACT_MATCH_ON_REMOVE 4

#define DDD_LUID_BROADCAST_DRIVE 16

#define DDD_NO_BROADCAST_SYSTEM 8

#define DDD_RAW_TARGET_PATH 1

#define DDD_REMOVE_DEFINITION 2

#define DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION 1

#define DEBUG_ONLY_THIS_PROCESS 2

#define DEBUG_PROCESS 1

#define DETACHED_PROCESS 8

#define DOCKINFO_DOCKED 2

#define DOCKINFO_UNDOCKED 1

#define DOCKINFO_USER_DOCKED 6

#define DOCKINFO_USER_SUPPLIED 4

#define DOCKINFO_USER_UNDOCKED 5

#define DONT_RESOLVE_DLL_REFERENCES 1

#define DRIVE_CDROM 5

#define DRIVE_FIXED 3

#define DRIVE_NO_ROOT_DIR 1

#define DRIVE_RAMDISK 6

#define DRIVE_REMOTE 4

#define DRIVE_REMOVABLE 2

#define DRIVE_UNKNOWN 0

#define DTR_CONTROL_DISABLE 0

#define DTR_CONTROL_ENABLE 1

#define DTR_CONTROL_HANDSHAKE 2

#define EFS_USE_RECOVERY_KEYS 1

#define EFSRPC_SECURE_ONLY 8

#define EV_BREAK 64

#define EV_CTS 8

#define EV_DSR 16

#define EV_ERR 128

#define EV_EVENT1 2048

#define EV_EVENT2 4096

#define EV_PERR 512

#define EV_RING 256

#define EV_RLSD 32

#define EV_RX80FULL 1024

#define EV_RXCHAR 1

#define EV_RXFLAG 2

#define EV_TXEMPTY 4

#define EVENPARITY 2

#define EVENTLOG_FULL_INFO 0

#define EXCEPTION_ACCESS_VIOLATION 3221225477

#define EXCEPTION_ARRAY_BOUNDS_EXCEEDED 3221225612

#define EXCEPTION_BREAKPOINT 2147483651

#define EXCEPTION_DATATYPE_MISALIGNMENT 2147483650

#define EXCEPTION_DEBUG_EVENT 1

#define EXCEPTION_FLT_DENORMAL_OPERAND 3221225613

#define EXCEPTION_FLT_DIVIDE_BY_ZERO 3221225614

#define EXCEPTION_FLT_INEXACT_RESULT 3221225615

#define EXCEPTION_FLT_INVALID_OPERATION 3221225616

#define EXCEPTION_FLT_OVERFLOW 3221225617

#define EXCEPTION_FLT_STACK_CHECK 3221225618

#define EXCEPTION_FLT_UNDERFLOW 3221225619

#define EXCEPTION_GUARD_PAGE 2147483649

#define EXCEPTION_ILLEGAL_INSTRUCTION 3221225501

#define EXCEPTION_IN_PAGE_ERROR 3221225478

#define EXCEPTION_INT_DIVIDE_BY_ZERO 3221225620

#define EXCEPTION_INT_OVERFLOW 3221225621

#define EXCEPTION_INVALID_DISPOSITION 3221225510

#define EXCEPTION_INVALID_HANDLE 3221225480

#define EXCEPTION_NONCONTINUABLE_EXCEPTION 3221225509

#define EXCEPTION_PRIV_INSTRUCTION 3221225622

#define EXCEPTION_SINGLE_STEP 2147483652

#define EXCEPTION_STACK_OVERFLOW 3221225725

#define EXIT_PROCESS_DEBUG_EVENT 5

#define EXIT_THREAD_DEBUG_EVENT 4

#define EXTENDED_STARTUPINFO_PRESENT 524288

#define FAIL_FAST_GENERATE_EXCEPTION_ADDRESS 1

#define FAIL_FAST_NO_HARD_ERROR_DLG 2

#define FIBER_FLAG_FLOAT_SWITCH 1

#define FILE_BEGIN 0

#define FILE_CACHE_MAX_HARD_DISABLE 2

#define FILE_CACHE_MAX_HARD_ENABLE 1

#define FILE_CACHE_MIN_HARD_DISABLE 8

#define FILE_CACHE_MIN_HARD_ENABLE 4

#define FILE_CURRENT 1

#define FILE_DIR_DISALLOWED 9

#define FILE_ENCRYPTABLE 0

#define FILE_END 2

#define FILE_FLAG_BACKUP_SEMANTICS 33554432

#define FILE_FLAG_DELETE_ON_CLOSE 67108864

#define FILE_FLAG_FIRST_PIPE_INSTANCE 524288

#define FILE_FLAG_NO_BUFFERING 536870912

#define FILE_FLAG_OPEN_NO_RECALL 1048576

#define FILE_FLAG_OPEN_REPARSE_POINT 2097152

#define FILE_FLAG_OVERLAPPED 1073741824

#define FILE_FLAG_POSIX_SEMANTICS 16777216

#define FILE_FLAG_RANDOM_ACCESS 268435456

#define FILE_FLAG_SEQUENTIAL_SCAN 134217728

#define FILE_FLAG_WRITE_THROUGH 2147483648

#define FILE_IS_ENCRYPTED 1

#define FILE_MAP_ALL_ACCESS 983071

#define FILE_MAP_COPY 1

#define FILE_MAP_EXECUTE 32

#define FILE_MAP_READ 4

#define FILE_MAP_WRITE 2

#define FILE_NAME_NORMALIZED 0

#define FILE_NAME_OPENED 8

#define FILE_READ_ONLY 8

#define FILE_ROOT_DIR 3

#define FILE_SKIP_COMPLETION_PORT_ON_SUCCESS 1

#define FILE_SKIP_SET_EVENT_ON_HANDLE 2

#define FILE_SYSTEM_ATTR 2

#define FILE_SYSTEM_DIR 4

#define FILE_SYSTEM_NOT_SUPPORT 6

#define FILE_TYPE_CHAR 2

#define FILE_TYPE_DISK 1

#define FILE_TYPE_PIPE 3

#define FILE_TYPE_REMOTE 32768

#define FILE_TYPE_UNKNOWN 0

#define FILE_UNKNOWN 5

#define FILE_USER_DISALLOWED 7

#define FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA 4

#define FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS 2

#define FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX 1

#define FIND_FIRST_EX_CASE_SENSITIVE 1

#define FIND_FIRST_EX_LARGE_FETCH 2

#define FLS_OUT_OF_INDEXES 4294967295

#define FORMAT_MESSAGE_ALLOCATE_BUFFER 256

#define FORMAT_MESSAGE_ARGUMENT_ARRAY 8192

#define FORMAT_MESSAGE_FROM_HMODULE 2048

#define FORMAT_MESSAGE_FROM_STRING 1024

#define FORMAT_MESSAGE_FROM_SYSTEM 4096

#define FORMAT_MESSAGE_IGNORE_INSERTS 512

#define FORMAT_MESSAGE_MAX_WIDTH_MASK 255

#define FS_CASE_IS_PRESERVED 2

#define FS_CASE_SENSITIVE 1

#define FS_FILE_COMPRESSION 16

#define FS_FILE_ENCRYPTION 131072

#define FS_PERSISTENT_ACLS 8

#define FS_UNICODE_STORED_ON_DISK 4

#define FS_VOL_IS_COMPRESSED 32768

#define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS 4

#define GET_MODULE_HANDLE_EX_FLAG_PIN 1

#define GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT 2

#define GET_TAPE_DRIVE_INFORMATION 1

#define GET_TAPE_MEDIA_INFORMATION 0

#define GHND 66

#define GMEM_DDESHARE 8192

#define GMEM_DISCARDABLE 256

#define GMEM_DISCARDED 16384

#define GMEM_FIXED 0

#define GMEM_INVALID_HANDLE 32768

#define GMEM_LOCKCOUNT 255

#define GMEM_LOWER 4096

#define GMEM_MODIFY 128

#define GMEM_MOVEABLE 2

#define GMEM_NOCOMPACT 16

#define GMEM_NODISCARD 32

#define GMEM_NOT_BANKED 4096

#define GMEM_NOTIFY 16384

#define GMEM_SHARE 8192

#define GMEM_VALID_FLAGS 32626

#define GMEM_ZEROINIT 64

#define GPTR 64

#define HANDLE_FLAG_INHERIT 1

#define HANDLE_FLAG_PROTECT_FROM_CLOSE 2

#define HIGH_PRIORITY_CLASS 128

#define HINSTANCE_ERROR 32

#define HW_PROFILE_GUIDLEN 39

#define IDLE_PRIORITY_CLASS 64

#define IE_BADID -1

#define IE_BAUDRATE -12

#define IE_BYTESIZE -11

#define IE_DEFAULT -5

#define IE_HARDWARE -10

#define IE_MEMORY -4

#define IE_NOPEN -3

#define IE_OPEN -2

#define IGNORE 0

#define INFINITE 4294967295

#define INHERIT_CALLER_PRIORITY 131072

#define INHERIT_PARENT_AFFINITY 65536

#define INIT_ONCE_ASYNC 2

#define INIT_ONCE_CHECK_ONLY 1

#define INIT_ONCE_CTX_RESERVED_BITS 2

#define INIT_ONCE_INIT_FAILED 4

#define INVALID_ATOM 0

#define INVALID_FILE_ATTRIBUTES -1

#define INVALID_FILE_SIZE 4294967295

#define INVALID_HANDLE_VALUE -1

#define INVALID_SET_FILE_POINTER -1

#define LHND 66

#define LMEM_DISCARDABLE 3840

#define LMEM_DISCARDED 16384

#define LMEM_FIXED 0

#define LMEM_INVALID_HANDLE 32768

#define LMEM_LOCKCOUNT 255

#define LMEM_MODIFY 128

#define LMEM_MOVEABLE 2

#define LMEM_NOCOMPACT 16

#define LMEM_NODISCARD 32

#define LMEM_VALID_FLAGS 3954

#define LMEM_ZEROINIT 64

#define LOAD_DLL_DEBUG_EVENT 6

#define LOAD_IGNORE_CODE_AUTHZ_LEVEL 16

#define LOAD_LIBRARY_AS_DATAFILE 2

#define LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE 64

#define LOAD_LIBRARY_AS_IMAGE_RESOURCE 32

#define LOAD_LIBRARY_REQUIRE_SIGNED_TARGET 128

#define LOAD_WITH_ALTERED_SEARCH_PATH 8

#define LOCKFILE_EXCLUSIVE_LOCK 2

#define LOCKFILE_FAIL_IMMEDIATELY 1

#define LOGON32_LOGON_BATCH 4

#define LOGON32_LOGON_INTERACTIVE 2

#define LOGON32_LOGON_NETWORK 3

#define LOGON32_LOGON_NETWORK_CLEARTEXT 8

#define LOGON32_LOGON_NEW_CREDENTIALS 9

#define LOGON32_LOGON_SERVICE 5

#define LOGON32_LOGON_UNLOCK 7

#define LOGON32_PROVIDER_DEFAULT 0

#define LOGON32_PROVIDER_VIRTUAL 4

#define LOGON32_PROVIDER_WINNT35 1

#define LOGON32_PROVIDER_WINNT40 2

#define LOGON32_PROVIDER_WINNT50 3

#define LOGON_NETCREDENTIALS_ONLY 2

#define LOGON_WITH_PROFILE 1

#define LOGON_ZERO_PASSWORD_BUFFER 2147483648

#define LPTR 64

#define LPTx 128

#define MARKPARITY 3

#define MAX_COMPUTERNAME_LENGTH 15

#define MAX_PROFILE_LEN 80

#define MAXINTATOM 49152

#define MICROSOFT_WINBASE_H_DEFINE_INTERLOCKED_CPLUSPLUS_OVERLOADS 0

#define MOVEFILE_COPY_ALLOWED 2

#define MOVEFILE_CREATE_HARDLINK 16

#define MOVEFILE_DELAY_UNTIL_REBOOT 4

#define MOVEFILE_FAIL_IF_NOT_TRACKABLE 32

#define MOVEFILE_REPLACE_EXISTING 1

#define MOVEFILE_WRITE_THROUGH 8

#define MS_CTS_ON 16

#define MS_DSR_ON 32

#define MS_RING_ON 64

#define MS_RLSD_ON 128

#define MUTEX_ALL_ACCESS 2031617

#define MUTEX_MODIFY_STATE 1

#define NMPWAIT_NOWAIT 1

#define NMPWAIT_USE_DEFAULT_WAIT 0

#define NMPWAIT_WAIT_FOREVER 4294967295

#define NONZEROLHND 2

#define NONZEROLPTR 0

#define NOPARITY 0

#define NORMAL_PRIORITY_CLASS 32

#define NUMA_NO_PREFERRED_NODE -1

#define ODDPARITY 1

#define OF_CANCEL 2048

#define OF_CREATE 4096

#define OF_DELETE 512

#define OF_EXIST 16384

#define OF_PARSE 256

#define OF_PROMPT 8192

#define OF_READ 0

#define OF_READWRITE 2

#define OF_REOPEN 32768

#define OF_SHARE_COMPAT 0

#define OF_SHARE_DENY_NONE 64

#define OF_SHARE_DENY_READ 48

#define OF_SHARE_DENY_WRITE 32

#define OF_SHARE_EXCLUSIVE 16

#define OF_VERIFY 1024

#define OF_WRITE 1

#define OFS_MAXPATHNAME 128

#define ONE5STOPBITS 1

#define ONESTOPBIT 0

#define OPEN_ALWAYS 4

#define OPEN_EXISTING 3

#define OUTPUT_DEBUG_STRING_EVENT 8

#define OVERWRITE_HIDDEN 4

#define PARITY_EVEN 1024

#define PARITY_MARK 2048

#define PARITY_NONE 256

#define PARITY_ODD 512

#define PARITY_SPACE 4096

#define PCF_16BITMODE 512

#define PCF_DTRDSR 1

#define PCF_INTTIMEOUTS 128

#define PCF_PARITY_CHECK 8

#define PCF_RLSD 4

#define PCF_RTSCTS 2

#define PCF_SETXCHAR 32

#define PCF_SPECIALCHARS 256

#define PCF_TOTALTIMEOUTS 64

#define PCF_XONXOFF 16

#define PIPE_ACCEPT_REMOTE_CLIENTS 0

#define PIPE_ACCESS_DUPLEX 3

#define PIPE_ACCESS_INBOUND 1

#define PIPE_ACCESS_OUTBOUND 2

#define PIPE_CLIENT_END 0

#define PIPE_NOWAIT 1

#define PIPE_READMODE_BYTE 0

#define PIPE_READMODE_MESSAGE 2

#define PIPE_REJECT_REMOTE_CLIENTS 8

#define PIPE_SERVER_END 1

#define PIPE_TYPE_BYTE 0

#define PIPE_TYPE_MESSAGE 4

#define PIPE_UNLIMITED_INSTANCES 255

#define PIPE_WAIT 0

#define PRIVATE_NAMESPACE_FLAG_DESTROY 1

#define PROC_THREAD_ATTRIBUTE_ADDITIVE 262144

#define PROC_THREAD_ATTRIBUTE_INPUT 131072

#define PROC_THREAD_ATTRIBUTE_NUMBER 65535

#define PROC_THREAD_ATTRIBUTE_REPLACE_VALUE 1

#define PROC_THREAD_ATTRIBUTE_THREAD 65536

#define PROCESS_AFFINITY_ENABLE_AUTO_UPDATE 1

#define PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE 2

#define PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE 1

#define PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE 4

#define PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION 2

#define PROCESS_DEP_ENABLE 1

#define PROCESS_HEAP_ENTRY_BUSY 4

#define PROCESS_HEAP_ENTRY_DDESHARE 32

#define PROCESS_HEAP_ENTRY_MOVEABLE 16

#define PROCESS_HEAP_REGION 1

#define PROCESS_HEAP_UNCOMMITTED_RANGE 2

#define PROCESS_MODE_BACKGROUND_BEGIN 1048576

#define PROCESS_MODE_BACKGROUND_END 2097152

#define PROCESS_NAME_NATIVE 1

#define PROFILE_KERNEL 536870912

#define PROFILE_SERVER 1073741824

#define PROFILE_USER 268435456

#define PROGRESS_CANCEL 1

#define PROGRESS_CONTINUE 0

#define PROGRESS_QUIET 3

#define PROGRESS_STOP 2

#define PST_FAX 33

#define PST_LAT 257

#define PST_MODEM 6

#define PST_NETWORK_BRIDGE 256

#define PST_PARALLELPORT 2

#define PST_RS232 1

#define PST_RS422 3

#define PST_RS423 4

#define PST_RS449 5

#define PST_SCANNER 34

#define PST_TCPIP_TELNET 258

#define PST_UNSPECIFIED 0

#define PST_X25 259

#define PURGE_RXABORT 2

#define PURGE_RXCLEAR 8

#define PURGE_TXABORT 1

#define PURGE_TXCLEAR 4

#define QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS 16

#define QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE 8

#define QUERY_ACTCTX_FLAG_NO_ADDREF 2147483648

#define QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX 4

#define REALTIME_PRIORITY_CLASS 256

#define RECOVERY_DEFAULT_PING_INTERVAL 5000

#define RECOVERY_MAX_PING_INTERVAL 300000

#define REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK 1

#define REMOTE_PROTOCOL_INFO_FLAG_OFFLINE 2

#define REPLACEFILE_IGNORE_ACL_ERRORS 4

#define REPLACEFILE_IGNORE_MERGE_ERRORS 2

#define REPLACEFILE_WRITE_THROUGH 1

#define RESETDEV 7

#define RESOURCE_ENUM_LN 1

#define RESOURCE_ENUM_MODULE_EXACT 16

#define RESOURCE_ENUM_MUI 2

#define RESOURCE_ENUM_MUI_SYSTEM 4

#define RESOURCE_ENUM_VALIDATE 8

#define RESTART_MAX_CMD_LINE 1024

#define RESTART_NO_CRASH 1

#define RESTART_NO_HANG 2

#define RESTART_NO_PATCH 4

#define RESTART_NO_REBOOT 8

#define RIP_EVENT 9

#define RTS_CONTROL_DISABLE 0

#define RTS_CONTROL_ENABLE 1

#define RTS_CONTROL_HANDSHAKE 2

#define RTS_CONTROL_TOGGLE 3

#define S_ALLTHRESHOLD 2

#define S_LEGATO 1

#define S_NORMAL 0

#define S_PERIOD1024 1

#define S_PERIOD2048 2

#define S_PERIOD512 0

#define S_PERIODVOICE 3

#define S_QUEUEEMPTY 0

#define S_SERBDNT -5

#define S_SERDCC -7

#define S_SERDDR -14

#define S_SERDFQ -13

#define S_SERDLN -6

#define S_SERDMD -10

#define S_SERDPT -12

#define S_SERDSH -11

#define S_SERDSR -15

#define S_SERDST -16

#define S_SERDTP -8

#define S_SERDVL -9

#define S_SERDVNA -1

#define S_SERMACT -3

#define S_SEROFM -2

#define S_SERQFUL -4

#define S_STACCATO 2

#define S_THRESHOLD 1

#define S_WHITE1024 5

#define S_WHITE2048 6

#define S_WHITE512 4

#define S_WHITEVOICE 7

#define SCS_32BIT_BINARY 0

#define SCS_64BIT_BINARY 6

#define SCS_DOS_BINARY 1

#define SCS_OS216_BINARY 5

#define SCS_PIF_BINARY 3

#define SCS_POSIX_BINARY 4

#define SCS_THIS_PLATFORM_BINARY 0

#define SCS_WOW_BINARY 2

#define SECURITY_CONTEXT_TRACKING 262144

#define SECURITY_EFFECTIVE_ONLY 524288

#define SECURITY_SQOS_PRESENT 1048576

#define SECURITY_VALID_SQOS_FLAGS 2031616

#define SEM_FAILCRITICALERRORS 1

#define SEM_NOALIGNMENTFAULTEXCEPT 4

#define SEM_NOGPFAULTERRORBOX 2

#define SEM_NOOPENFILEERRORBOX 32768

#define SET_TAPE_DRIVE_INFORMATION 1

#define SET_TAPE_MEDIA_INFORMATION 0

#define SETBREAK 8

#define SETDTR 5

#define SETRTS 3

#define SETXOFF 1

#define SETXON 2

#define SHUTDOWN_NORETRY 1

#define SP_BAUD 2

#define SP_DATABITS 4

#define SP_HANDSHAKING 16

#define SP_PARITY 1

#define SP_PARITY_CHECK 32

#define SP_RLSD 64

#define SP_SERIALCOMM 1

#define SP_STOPBITS 8

#define SPACEPARITY 4

#define STACK_SIZE_PARAM_IS_A_RESERVATION 65536

#define STARTF_FORCEOFFFEEDBACK 128

#define STARTF_FORCEONFEEDBACK 64

#define STARTF_PREVENTPINNING 8192

#define STARTF_RUNFULLSCREEN 32

#define STARTF_TITLEISAPPID 4096

#define STARTF_TITLEISLINKNAME 2048

#define STARTF_USECOUNTCHARS 8

#define STARTF_USEFILLATTRIBUTE 16

#define STARTF_USEHOTKEY 512

#define STARTF_USEPOSITION 4

#define STARTF_USESHOWWINDOW 1

#define STARTF_USESIZE 2

#define STARTF_USESTDHANDLES 256

#define STD_ERROR_HANDLE -12

#define STD_INPUT_HANDLE -10

#define STD_OUTPUT_HANDLE -11

#define STILL_ACTIVE 259

#define STOPBITS_10 1

#define STOPBITS_15 2

#define STOPBITS_20 4

#define STREAM_CONTAINS_PROPERTIES 4

#define STREAM_CONTAINS_SECURITY 2

#define STREAM_MODIFIED_WHEN_READ 1

#define STREAM_NORMAL_ATTRIBUTE 0

#define STREAM_SPARSE_ATTRIBUTE 8

#define SYMBOLIC_LINK_FLAG_DIRECTORY 1

#define TC_GP_TRAP 2

#define TC_HARDERR 1

#define TC_NORMAL 0

#define TC_SIGNAL 3

#define THREAD_MODE_BACKGROUND_BEGIN 65536

#define THREAD_MODE_BACKGROUND_END 131072

#define THREAD_PRIORITY_ABOVE_NORMAL 1

#define THREAD_PRIORITY_BELOW_NORMAL -1

#define THREAD_PRIORITY_ERROR_RETURN 2147483647

#define THREAD_PRIORITY_HIGHEST 2

#define THREAD_PRIORITY_IDLE -15

#define THREAD_PRIORITY_LOWEST -2

#define THREAD_PRIORITY_NORMAL 0

#define THREAD_PRIORITY_TIME_CRITICAL 15

#define TIME_ZONE_ID_INVALID 4294967295

#define TLS_OUT_OF_INDEXES 4294967295

#define TRUNCATE_EXISTING 5

#define TWOSTOPBITS 2

#define UMS_VERSION 256

#define UNLOAD_DLL_DEBUG_EVENT 7

#define VALID_SYMBOLIC_LINK_FLAGS 1

#define VOLUME_NAME_DOS 0

#define VOLUME_NAME_GUID 1

#define VOLUME_NAME_NONE 4

#define VOLUME_NAME_NT 2

#define WAIT_ABANDONED 128

#define WAIT_ABANDONED_0 128

#define WAIT_FAILED 4294967295

#define WAIT_IO_COMPLETION 192

#define WAIT_OBJECT_0 0

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION _ACTIVATION_CONTEXT_BASIC_INFORMATION, *P_ACTIVATION_CONTEXT_BASIC_INFORMATION;

struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {
    HANDLE hActCtx;
    DWORD dwFlags;
};

typedef struct _BY_HANDLE_FILE_INFORMATION _BY_HANDLE_FILE_INFORMATION, *P_BY_HANDLE_FILE_INFORMATION;

struct _BY_HANDLE_FILE_INFORMATION {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD dwVolumeSerialNumber;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD nNumberOfLinks;
    DWORD nFileIndexHigh;
    DWORD nFileIndexLow;
};

typedef struct _COMMCONFIG _COMMCONFIG, *P_COMMCONFIG;

typedef struct _DCB _DCB, *P_DCB;

typedef struct _DCB DCB;

typedef union anon__struct_526_bitfield_1 anon__struct_526_bitfield_1, *Panon__struct_526_bitfield_1;

union anon__struct_526_bitfield_1 {
    DWORD fBinary:1; /* : bits 0 */
    DWORD fParity:1; /* : bits 1 */
    DWORD fOutxCtsFlow:1; /* : bits 2 */
    DWORD fOutxDsrFlow:1; /* : bits 3 */
    DWORD fDtrControl:2; /* : bits 4-5 */
    DWORD fDsrSensitivity:1; /* : bits 6 */
    DWORD fTXContinueOnXoff:1; /* : bits 7 */
    DWORD fOutX:1; /* : bits 8 */
    DWORD fInX:1; /* : bits 9 */
    DWORD fErrorChar:1; /* : bits 10 */
    DWORD fNull:1; /* : bits 11 */
    DWORD fRtsControl:2; /* : bits 12-13 */
    DWORD fAbortOnError:1; /* : bits 14 */
    DWORD fDummy2:17; /* : bits 15-31 */
};

struct _DCB {
    DWORD DCBlength;
    DWORD BaudRate;
    union anon__struct_526_bitfield_1 field_0x8;
    WORD wReserved;
    WORD XonLim;
    WORD XoffLim;
    BYTE ByteSize;
    BYTE Parity;
    BYTE StopBits;
    char XonChar;
    char XoffChar;
    char ErrorChar;
    char EofChar;
    char EvtChar;
    WORD wReserved1;
};

struct _COMMCONFIG {
    DWORD dwSize;
    WORD wVersion;
    WORD wReserved;
    DCB dcb;
    DWORD dwProviderSubType;
    DWORD dwProviderOffset;
    DWORD dwProviderSize;
    WCHAR wcProviderData[1];
};

typedef struct _COMMPROP _COMMPROP, *P_COMMPROP;

struct _COMMPROP {
    WORD wPacketLength;
    WORD wPacketVersion;
    DWORD dwServiceMask;
    DWORD dwReserved1;
    DWORD dwMaxTxQueue;
    DWORD dwMaxRxQueue;
    DWORD dwMaxBaud;
    DWORD dwProvSubType;
    DWORD dwProvCapabilities;
    DWORD dwSettableParams;
    DWORD dwSettableBaud;
    WORD wSettableData;
    WORD wSettableStopParity;
    DWORD dwCurrentTxQueue;
    DWORD dwCurrentRxQueue;
    DWORD dwProvSpec1;
    DWORD dwProvSpec2;
    WCHAR wcProvChar[1];
};

typedef struct _COMMTIMEOUTS _COMMTIMEOUTS, *P_COMMTIMEOUTS;

struct _COMMTIMEOUTS {
    DWORD ReadIntervalTimeout;
    DWORD ReadTotalTimeoutMultiplier;
    DWORD ReadTotalTimeoutConstant;
    DWORD WriteTotalTimeoutMultiplier;
    DWORD WriteTotalTimeoutConstant;
};

typedef enum _COMPUTER_NAME_FORMAT {
    ComputerNameDnsDomain=2,
    ComputerNameDnsFullyQualified=3,
    ComputerNameDnsHostname=1,
    ComputerNameMax=8,
    ComputerNameNetBIOS=0,
    ComputerNamePhysicalDnsDomain=6,
    ComputerNamePhysicalDnsFullyQualified=7,
    ComputerNamePhysicalDnsHostname=5,
    ComputerNamePhysicalNetBIOS=4
} _COMPUTER_NAME_FORMAT;

typedef struct _COMSTAT _COMSTAT, *P_COMSTAT;

typedef union anon__struct_525_bitfield_1 anon__struct_525_bitfield_1, *Panon__struct_525_bitfield_1;

union anon__struct_525_bitfield_1 {
    DWORD fCtsHold:1; /* : bits 0 */
    DWORD fDsrHold:1; /* : bits 1 */
    DWORD fRlsdHold:1; /* : bits 2 */
    DWORD fXoffHold:1; /* : bits 3 */
    DWORD fXoffSent:1; /* : bits 4 */
    DWORD fEof:1; /* : bits 5 */
    DWORD fTxim:1; /* : bits 6 */
    DWORD fReserved:25; /* : bits 7-31 */
};

struct _COMSTAT {
    union anon__struct_525_bitfield_1 field_0x0;
    DWORD cbInQue;
    DWORD cbOutQue;
};

typedef struct _CREATE_PROCESS_DEBUG_INFO _CREATE_PROCESS_DEBUG_INFO, *P_CREATE_PROCESS_DEBUG_INFO;

typedef DWORD (* PTHREAD_START_ROUTINE)(LPVOID);

typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;

struct _CREATE_PROCESS_DEBUG_INFO {
    HANDLE hFile;
    HANDLE hProcess;
    HANDLE hThread;
    LPVOID lpBaseOfImage;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
    LPVOID lpImageName;
    WORD fUnicode;
};

typedef struct _CREATE_THREAD_DEBUG_INFO _CREATE_THREAD_DEBUG_INFO, *P_CREATE_THREAD_DEBUG_INFO;

struct _CREATE_THREAD_DEBUG_INFO {
    HANDLE hThread;
    LPVOID lpThreadLocalBase;
    LPTHREAD_START_ROUTINE lpStartAddress;
};

typedef struct _DEBUG_EVENT _DEBUG_EVENT, *P_DEBUG_EVENT;

typedef union _union_543 _union_543, *P_union_543;

typedef struct _EXCEPTION_DEBUG_INFO _EXCEPTION_DEBUG_INFO, *P_EXCEPTION_DEBUG_INFO;

typedef struct _EXCEPTION_DEBUG_INFO EXCEPTION_DEBUG_INFO;

typedef struct _CREATE_THREAD_DEBUG_INFO CREATE_THREAD_DEBUG_INFO;

typedef struct _CREATE_PROCESS_DEBUG_INFO CREATE_PROCESS_DEBUG_INFO;

typedef struct _EXIT_THREAD_DEBUG_INFO _EXIT_THREAD_DEBUG_INFO, *P_EXIT_THREAD_DEBUG_INFO;

typedef struct _EXIT_THREAD_DEBUG_INFO EXIT_THREAD_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO _EXIT_PROCESS_DEBUG_INFO, *P_EXIT_PROCESS_DEBUG_INFO;

typedef struct _EXIT_PROCESS_DEBUG_INFO EXIT_PROCESS_DEBUG_INFO;

typedef struct _LOAD_DLL_DEBUG_INFO _LOAD_DLL_DEBUG_INFO, *P_LOAD_DLL_DEBUG_INFO;

typedef struct _LOAD_DLL_DEBUG_INFO LOAD_DLL_DEBUG_INFO;

typedef struct _UNLOAD_DLL_DEBUG_INFO _UNLOAD_DLL_DEBUG_INFO, *P_UNLOAD_DLL_DEBUG_INFO;

typedef struct _UNLOAD_DLL_DEBUG_INFO UNLOAD_DLL_DEBUG_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO _OUTPUT_DEBUG_STRING_INFO, *P_OUTPUT_DEBUG_STRING_INFO;

typedef struct _OUTPUT_DEBUG_STRING_INFO OUTPUT_DEBUG_STRING_INFO;

typedef struct _RIP_INFO _RIP_INFO, *P_RIP_INFO;

typedef struct _RIP_INFO RIP_INFO;

struct _EXCEPTION_DEBUG_INFO {
    EXCEPTION_RECORD ExceptionRecord;
    DWORD dwFirstChance;
};

struct _EXIT_PROCESS_DEBUG_INFO {
    DWORD dwExitCode;
};

struct _UNLOAD_DLL_DEBUG_INFO {
    LPVOID lpBaseOfDll;
};

struct _LOAD_DLL_DEBUG_INFO {
    HANDLE hFile;
    LPVOID lpBaseOfDll;
    DWORD dwDebugInfoFileOffset;
    DWORD nDebugInfoSize;
    LPVOID lpImageName;
    WORD fUnicode;
};

struct _EXIT_THREAD_DEBUG_INFO {
    DWORD dwExitCode;
};

struct _OUTPUT_DEBUG_STRING_INFO {
    LPSTR lpDebugStringData;
    WORD fUnicode;
    WORD nDebugStringLength;
};

struct _RIP_INFO {
    DWORD dwError;
    DWORD dwType;
};

union _union_543 {
    EXCEPTION_DEBUG_INFO Exception;
    CREATE_THREAD_DEBUG_INFO CreateThread;
    CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
    EXIT_THREAD_DEBUG_INFO ExitThread;
    EXIT_PROCESS_DEBUG_INFO ExitProcess;
    LOAD_DLL_DEBUG_INFO LoadDll;
    UNLOAD_DLL_DEBUG_INFO UnloadDll;
    OUTPUT_DEBUG_STRING_INFO DebugString;
    RIP_INFO RipInfo;
};

struct _DEBUG_EVENT {
    DWORD dwDebugEventCode;
    DWORD dwProcessId;
    DWORD dwThreadId;
    union _union_543 u;
};

typedef enum _DEP_SYSTEM_POLICY_TYPE {
    DEPPolicyAlwaysOff=0,
    DEPPolicyAlwaysOn=1,
    DEPPolicyOptIn=2,
    DEPPolicyOptOut=3,
    DEPTotalPolicyCount=4
} _DEP_SYSTEM_POLICY_TYPE;

typedef struct _EVENTLOG_FULL_INFORMATION _EVENTLOG_FULL_INFORMATION, *P_EVENTLOG_FULL_INFORMATION;

struct _EVENTLOG_FULL_INFORMATION {
    DWORD dwFull;
};

typedef struct _FILE_ALLOCATION_INFO _FILE_ALLOCATION_INFO, *P_FILE_ALLOCATION_INFO;

struct _FILE_ALLOCATION_INFO {
    LARGE_INTEGER AllocationSize;
};

typedef struct _FILE_ATTRIBUTE_TAG_INFO _FILE_ATTRIBUTE_TAG_INFO, *P_FILE_ATTRIBUTE_TAG_INFO;

struct _FILE_ATTRIBUTE_TAG_INFO {
    DWORD FileAttributes;
    DWORD ReparseTag;
};

typedef struct _FILE_BASIC_INFO _FILE_BASIC_INFO, *P_FILE_BASIC_INFO;

struct _FILE_BASIC_INFO {
    LARGE_INTEGER CreationTime;
    LARGE_INTEGER LastAccessTime;
    LARGE_INTEGER LastWriteTime;
    LARGE_INTEGER ChangeTime;
    DWORD FileAttributes;
};

typedef struct _FILE_COMPRESSION_INFO _FILE_COMPRESSION_INFO, *P_FILE_COMPRESSION_INFO;

struct _FILE_COMPRESSION_INFO {
    LARGE_INTEGER CompressedFileSize;
    WORD CompressionFormat;
    UCHAR CompressionUnitShift;
    UCHAR ChunkShift;
    UCHAR ClusterShift;
    UCHAR Reserved[3];
};

typedef struct _FILE_DISPOSITION_INFO _FILE_DISPOSITION_INFO, *P_FILE_DISPOSITION_INFO;

struct _FILE_DISPOSITION_INFO {
    BOOLEAN DeleteFileA;
};

typedef struct _FILE_END_OF_FILE_INFO _FILE_END_OF_FILE_INFO, *P_FILE_END_OF_FILE_INFO;

struct _FILE_END_OF_FILE_INFO {
    LARGE_INTEGER EndOfFile;
};

typedef struct _FILE_ID_BOTH_DIR_INFO _FILE_ID_BOTH_DIR_INFO, *P_FILE_ID_BOTH_DIR_INFO;

typedef char CCHAR;

struct _FILE_ID_BOTH_DIR_INFO {
    DWORD NextEntryOffset;
    DWORD FileIndex;
    LARGE_INTEGER CreationTime;
    LARGE_INTEGER LastAccessTime;
    LARGE_INTEGER LastWriteTime;
    LARGE_INTEGER ChangeTime;
    LARGE_INTEGER EndOfFile;
    LARGE_INTEGER AllocationSize;
    DWORD FileAttributes;
    DWORD FileNameLength;
    DWORD EaSize;
    CCHAR ShortNameLength;
    WCHAR ShortName[12];
    LARGE_INTEGER FileId;
    WCHAR FileName[1];
};

typedef enum _FILE_ID_TYPE {
    FileIdType=0,
    MaximumFileIdType=2,
    ObjectIdType=1
} _FILE_ID_TYPE;

typedef enum _FILE_INFO_BY_HANDLE_CLASS {
    FileAllocationInfo=5,
    FileAttributeTagInfo=9,
    FileBasicInfo=0,
    FileCompressionInfo=8,
    FileDispositionInfo=4,
    FileEndOfFileInfo=6,
    FileIdBothDirectoryInfo=10,
    FileIdBothDirectoryRestartInfo=11,
    FileIoPriorityHintInfo=12,
    FileNameInfo=2,
    FileRemoteProtocolInfo=13,
    FileRenameInfo=3,
    FileStandardInfo=1,
    FileStreamInfo=7,
    MaximumFileInfoByHandleClass=14
} _FILE_INFO_BY_HANDLE_CLASS;

typedef struct _FILE_IO_PRIORITY_HINT_INFO _FILE_IO_PRIORITY_HINT_INFO, *P_FILE_IO_PRIORITY_HINT_INFO;

typedef enum _PRIORITY_HINT {
    IoPriorityHintLow=1,
    IoPriorityHintNormal=2,
    IoPriorityHintVeryLow=0,
    MaximumIoPriorityHintType=3
} _PRIORITY_HINT;

typedef enum _PRIORITY_HINT PRIORITY_HINT;

struct _FILE_IO_PRIORITY_HINT_INFO {
    PRIORITY_HINT PriorityHint;
};

typedef struct _FILE_NAME_INFO _FILE_NAME_INFO, *P_FILE_NAME_INFO;

struct _FILE_NAME_INFO {
    DWORD FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_REMOTE_PROTOCOL_INFO _FILE_REMOTE_PROTOCOL_INFO, *P_FILE_REMOTE_PROTOCOL_INFO;

typedef struct _struct_595 _struct_595, *P_struct_595;

typedef struct _struct_596 _struct_596, *P_struct_596;

struct _struct_596 {
    DWORD Reserved[16];
};

struct _struct_595 {
    DWORD Reserved[8];
};

struct _FILE_REMOTE_PROTOCOL_INFO {
    USHORT StructureVersion;
    USHORT StructureSize;
    DWORD Protocol;
    USHORT ProtocolMajorVersion;
    USHORT ProtocolMinorVersion;
    USHORT ProtocolRevision;
    USHORT Reserved;
    DWORD Flags;
    struct _struct_595 GenericReserved;
    struct _struct_596 ProtocolSpecificReserved;
};

typedef struct _FILE_RENAME_INFO _FILE_RENAME_INFO, *P_FILE_RENAME_INFO;

struct _FILE_RENAME_INFO {
    BOOLEAN ReplaceIfExists;
    HANDLE RootDirectory;
    DWORD FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FILE_STANDARD_INFO _FILE_STANDARD_INFO, *P_FILE_STANDARD_INFO;

struct _FILE_STANDARD_INFO {
    LARGE_INTEGER AllocationSize;
    LARGE_INTEGER EndOfFile;
    DWORD NumberOfLinks;
    BOOLEAN DeletePending;
    BOOLEAN Directory;
};

typedef struct _FILE_STREAM_INFO _FILE_STREAM_INFO, *P_FILE_STREAM_INFO;

struct _FILE_STREAM_INFO {
    DWORD NextEntryOffset;
    DWORD StreamNameLength;
    LARGE_INTEGER StreamSize;
    LARGE_INTEGER StreamAllocationSize;
    WCHAR StreamName[1];
};

typedef enum _FINDEX_INFO_LEVELS {
    FindExInfoBasic=1,
    FindExInfoMaxInfoLevel=2,
    FindExInfoStandard=0
} _FINDEX_INFO_LEVELS;

typedef enum _FINDEX_SEARCH_OPS {
    FindExSearchLimitToDevices=2,
    FindExSearchLimitToDirectories=1,
    FindExSearchMaxSearchOp=3,
    FindExSearchNameMatch=0
} _FINDEX_SEARCH_OPS;

typedef enum _GET_FILEEX_INFO_LEVELS {
    GetFileExInfoStandard=0,
    GetFileExMaxInfoLevel=1
} _GET_FILEEX_INFO_LEVELS;

typedef struct _JIT_DEBUG_INFO _JIT_DEBUG_INFO, *P_JIT_DEBUG_INFO;

struct _JIT_DEBUG_INFO {
    DWORD dwSize;
    DWORD dwProcessorArchitecture;
    DWORD dwThreadID;
    DWORD dwReserved0;
    ULONG64 lpExceptionAddress;
    ULONG64 lpExceptionRecord;
    ULONG64 lpContextRecord;
};

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE {
    HighMemoryResourceNotification=1,
    LowMemoryResourceNotification=0
} _MEMORY_RESOURCE_NOTIFICATION_TYPE;

typedef struct _MEMORYSTATUS _MEMORYSTATUS, *P_MEMORYSTATUS;

struct _MEMORYSTATUS {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    SIZE_T dwTotalPhys;
    SIZE_T dwAvailPhys;
    SIZE_T dwTotalPageFile;
    SIZE_T dwAvailPageFile;
    SIZE_T dwTotalVirtual;
    SIZE_T dwAvailVirtual;
};

typedef struct _MEMORYSTATUSEX _MEMORYSTATUSEX, *P_MEMORYSTATUSEX;

struct _MEMORYSTATUSEX {
    DWORD dwLength;
    DWORD dwMemoryLoad;
    DWORDLONG ullTotalPhys;
    DWORDLONG ullAvailPhys;
    DWORDLONG ullTotalPageFile;
    DWORDLONG ullAvailPageFile;
    DWORDLONG ullTotalVirtual;
    DWORDLONG ullAvailVirtual;
    DWORDLONG ullAvailExtendedVirtual;
};

typedef struct _OFSTRUCT _OFSTRUCT, *P_OFSTRUCT;

struct _OFSTRUCT {
    BYTE cBytes;
    BYTE fFixedDisk;
    WORD nErrCode;
    WORD Reserved1;
    WORD Reserved2;
    CHAR szPathName[128];
};

typedef struct _OVERLAPPED_ENTRY _OVERLAPPED_ENTRY, *P_OVERLAPPED_ENTRY;

struct _OVERLAPPED_ENTRY {
    ULONG_PTR lpCompletionKey;
    LPOVERLAPPED lpOverlapped;
    ULONG_PTR Internal;
    DWORD dwNumberOfBytesTransferred;
};

typedef struct _PROC_THREAD_ATTRIBUTE_LIST _PROC_THREAD_ATTRIBUTE_LIST, *P_PROC_THREAD_ATTRIBUTE_LIST;

struct _PROC_THREAD_ATTRIBUTE_LIST {
};

typedef enum _PROC_THREAD_ATTRIBUTE_NUM {
    ProcThreadAttributeExtendedFlags=1,
    ProcThreadAttributeGroupAffinity=3,
    ProcThreadAttributeHandleList=2,
    ProcThreadAttributeIdealProcessor=5,
    ProcThreadAttributeMax=8,
    ProcThreadAttributeMitigationPolicy=7,
    ProcThreadAttributeParentProcess=0,
    ProcThreadAttributePreferredNode=4,
    ProcThreadAttributeUmsThread=6
} _PROC_THREAD_ATTRIBUTE_NUM;

typedef struct _PROCESS_HEAP_ENTRY _PROCESS_HEAP_ENTRY, *P_PROCESS_HEAP_ENTRY;

typedef union _union_548 _union_548, *P_union_548;

typedef struct _struct_549 _struct_549, *P_struct_549;

typedef struct _struct_550 _struct_550, *P_struct_550;

struct _struct_549 {
    HANDLE hMem;
    DWORD dwReserved[3];
};

struct _struct_550 {
    DWORD dwCommittedSize;
    DWORD dwUnCommittedSize;
    LPVOID lpFirstBlock;
    LPVOID lpLastBlock;
};

union _union_548 {
    struct _struct_549 Block;
    struct _struct_550 Region;
};

struct _PROCESS_HEAP_ENTRY {
    PVOID lpData;
    DWORD cbData;
    BYTE cbOverhead;
    BYTE iRegionIndex;
    WORD wFlags;
    union _union_548 u;
};

typedef struct _PROCESS_INFORMATION _PROCESS_INFORMATION, *P_PROCESS_INFORMATION;

struct _PROCESS_INFORMATION {
    HANDLE hProcess;
    HANDLE hThread;
    DWORD dwProcessId;
    DWORD dwThreadId;
};

typedef struct _REASON_CONTEXT _REASON_CONTEXT, *P_REASON_CONTEXT;

typedef union _union_556 _union_556, *P_union_556;

typedef struct _struct_557 _struct_557, *P_struct_557;

struct _struct_557 {
    HMODULE LocalizedReasonModule;
    ULONG LocalizedReasonId;
    ULONG ReasonStringCount;
    LPWSTR * ReasonStrings;
};

union _union_556 {
    struct _struct_557 Detailed;
    LPWSTR SimpleReasonString;
};

struct _REASON_CONTEXT {
    ULONG Version;
    DWORD Flags;
    union _union_556 Reason;
};

typedef struct _STARTUPINFOA _STARTUPINFOA, *P_STARTUPINFOA;

struct _STARTUPINFOA {
    DWORD cb;
    LPSTR lpReserved;
    LPSTR lpDesktop;
    LPSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

typedef struct _STARTUPINFOEXA _STARTUPINFOEXA, *P_STARTUPINFOEXA;

typedef struct _STARTUPINFOA STARTUPINFOA;

typedef struct _PROC_THREAD_ATTRIBUTE_LIST * LPPROC_THREAD_ATTRIBUTE_LIST;

struct _STARTUPINFOEXA {
    STARTUPINFOA StartupInfo;
    LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;
};

typedef struct _STARTUPINFOEXW _STARTUPINFOEXW, *P_STARTUPINFOEXW;

typedef struct _STARTUPINFOW _STARTUPINFOW, *P_STARTUPINFOW;

typedef struct _STARTUPINFOW STARTUPINFOW;

struct _STARTUPINFOW {
    DWORD cb;
    LPWSTR lpReserved;
    LPWSTR lpDesktop;
    LPWSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

struct _STARTUPINFOEXW {
    STARTUPINFOW StartupInfo;
    LPPROC_THREAD_ATTRIBUTE_LIST lpAttributeList;
};

typedef enum _STREAM_INFO_LEVELS {
    FindStreamInfoMaxInfoLevel=1,
    FindStreamInfoStandard=0
} _STREAM_INFO_LEVELS;

typedef struct _struct_531 _struct_531, *P_struct_531;

struct _struct_531 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

typedef struct _SYSTEM_INFO _SYSTEM_INFO, *P_SYSTEM_INFO;

typedef union _union_530 _union_530, *P_union_530;

union _union_530 {
    DWORD dwOemId;
    struct _struct_531 s;
};

struct _SYSTEM_INFO {
    union _union_530 u;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD_PTR dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    WORD wProcessorLevel;
    WORD wProcessorRevision;
};

typedef struct _SYSTEM_POWER_STATUS _SYSTEM_POWER_STATUS, *P_SYSTEM_POWER_STATUS;

struct _SYSTEM_POWER_STATUS {
    BYTE ACLineStatus;
    BYTE BatteryFlag;
    BYTE BatteryLifePercent;
    BYTE Reserved1;
    DWORD BatteryLifeTime;
    DWORD BatteryFullLifeTime;
};

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION _TIME_DYNAMIC_ZONE_INFORMATION, *P_TIME_DYNAMIC_ZONE_INFORMATION;

struct _TIME_DYNAMIC_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    SYSTEMTIME DaylightDate;
    LONG DaylightBias;
    WCHAR TimeZoneKeyName[128];
    BOOLEAN DynamicDaylightTimeDisabled;
};

typedef struct _TIME_ZONE_INFORMATION _TIME_ZONE_INFORMATION, *P_TIME_ZONE_INFORMATION;

struct _TIME_ZONE_INFORMATION {
    LONG Bias;
    WCHAR StandardName[32];
    SYSTEMTIME StandardDate;
    LONG StandardBias;
    WCHAR DaylightName[32];
    SYSTEMTIME DaylightDate;
    LONG DaylightBias;
};

typedef struct _UMS_SCHEDULER_STARTUP_INFO _UMS_SCHEDULER_STARTUP_INFO, *P_UMS_SCHEDULER_STARTUP_INFO;

typedef void * PUMS_COMPLETION_LIST;

typedef enum _RTL_UMS_SCHEDULER_REASON {
    UmsSchedulerStartup=0,
    UmsSchedulerThreadBlocked=1,
    UmsSchedulerThreadYield=2
} _RTL_UMS_SCHEDULER_REASON;

typedef enum _RTL_UMS_SCHEDULER_REASON RTL_UMS_SCHEDULER_REASON;

typedef void (RTL_UMS_SCHEDULER_ENTRY_POINT)(RTL_UMS_SCHEDULER_REASON, ULONG_PTR, PVOID);

typedef RTL_UMS_SCHEDULER_ENTRY_POINT * PRTL_UMS_SCHEDULER_ENTRY_POINT;

typedef PRTL_UMS_SCHEDULER_ENTRY_POINT PUMS_SCHEDULER_ENTRY_POINT;

struct _UMS_SCHEDULER_STARTUP_INFO {
    ULONG UmsVersion;
    PUMS_COMPLETION_LIST CompletionList;
    PUMS_SCHEDULER_ENTRY_POINT SchedulerProc;
    PVOID SchedulerParam;
};

typedef union _union_598 _union_598, *P_union_598;

union _union_598 {
    LARGE_INTEGER FileId;
    GUID ObjectId;
};

typedef struct _WIN32_FILE_ATTRIBUTE_DATA _WIN32_FILE_ATTRIBUTE_DATA, *P_WIN32_FILE_ATTRIBUTE_DATA;

struct _WIN32_FILE_ATTRIBUTE_DATA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
};

typedef struct _WIN32_FIND_STREAM_DATA _WIN32_FIND_STREAM_DATA, *P_WIN32_FIND_STREAM_DATA;

struct _WIN32_FIND_STREAM_DATA {
    LARGE_INTEGER StreamSize;
    WCHAR cStreamName[296];
};

typedef struct _WIN32_STREAM_ID _WIN32_STREAM_ID, *P_WIN32_STREAM_ID;

struct _WIN32_STREAM_ID {
    DWORD dwStreamId;
    DWORD dwStreamAttributes;
    LARGE_INTEGER Size;
    DWORD dwStreamNameSize;
    WCHAR cStreamName[1];
};

typedef struct tagACTCTXA tagACTCTXA, *PtagACTCTXA;

typedef struct tagACTCTXA ACTCTXA;

typedef ACTCTXA ACTCTX;


/* WARNING! conflicting data type names: /winnt.h/LANGID - /wtypes.h/LANGID */

struct tagACTCTXA {
    ULONG cbSize;
    DWORD dwFlags;
    LPCSTR lpSource;
    USHORT wProcessorArchitecture;
    LANGID wLangId;
    LPCSTR lpAssemblyDirectory;
    LPCSTR lpResourceName;
    LPCSTR lpApplicationName;
    HMODULE hModule;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA tagACTCTX_SECTION_KEYED_DATA, *PtagACTCTX_SECTION_KEYED_DATA;

typedef struct tagACTCTX_SECTION_KEYED_DATA ACTCTX_SECTION_KEYED_DATA;

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PtagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
    PVOID lpInformation;
    PVOID lpSectionBase;
    ULONG ulSectionLength;
    PVOID lpSectionGlobalDataBase;
    ULONG ulSectionGlobalDataLength;
};

struct tagACTCTX_SECTION_KEYED_DATA {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    HANDLE hActCtx;
    ULONG ulAssemblyRosterIndex;
    ULONG ulFlags;
    ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
};

typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 tagACTCTX_SECTION_KEYED_DATA_2600, *PtagACTCTX_SECTION_KEYED_DATA_2600;

typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 ACTCTX_SECTION_KEYED_DATA_2600;

struct tagACTCTX_SECTION_KEYED_DATA_2600 {
    ULONG cbSize;
    ULONG ulDataFormatVersion;
    PVOID lpData;
    ULONG ulLength;
    PVOID lpSectionGlobalData;
    ULONG ulSectionGlobalDataLength;
    PVOID lpSectionBase;
    ULONG ulSectionTotalLength;
    HANDLE hActCtx;
    ULONG ulAssemblyRosterIndex;
};

typedef struct tagACTCTXW tagACTCTXW, *PtagACTCTXW;

typedef struct tagACTCTXW ACTCTXW;

struct tagACTCTXW {
    ULONG cbSize;
    DWORD dwFlags;
    LPCWSTR lpSource;
    USHORT wProcessorArchitecture;
    LANGID wLangId;
    LPCWSTR lpAssemblyDirectory;
    LPCWSTR lpResourceName;
    LPCWSTR lpApplicationName;
    HMODULE hModule;
};

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION ACTIVATION_CONTEXT_BASIC_INFORMATION;

typedef DWORD (* APPLICATION_RECOVERY_CALLBACK)(PVOID);

typedef struct _BY_HANDLE_FILE_INFORMATION BY_HANDLE_FILE_INFORMATION;

typedef struct _COMMCONFIG COMMCONFIG;

typedef struct _COMMPROP COMMPROP;

typedef struct _COMMTIMEOUTS COMMTIMEOUTS;

typedef enum _COMPUTER_NAME_FORMAT COMPUTER_NAME_FORMAT;

typedef struct _COMSTAT COMSTAT;

typedef struct _RTL_CONDITION_VARIABLE _RTL_CONDITION_VARIABLE, *P_RTL_CONDITION_VARIABLE;

typedef struct _RTL_CONDITION_VARIABLE RTL_CONDITION_VARIABLE;

typedef RTL_CONDITION_VARIABLE CONDITION_VARIABLE;

struct _RTL_CONDITION_VARIABLE {
    PVOID Ptr;
};

typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_CRITICAL_SECTION_DEBUG;

typedef RTL_CRITICAL_SECTION_DEBUG CRITICAL_SECTION_DEBUG;

typedef struct _DEBUG_EVENT DEBUG_EVENT;

typedef enum _DEP_SYSTEM_POLICY_TYPE DEP_SYSTEM_POLICY_TYPE;

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION DYNAMIC_TIME_ZONE_INFORMATION;

typedef enum enum_570 {
    PipeAttribute=0,
    PipeConnectionAttribute=1,
    PipeHandleAttribute=2
} enum_570;

typedef BOOL (* ENUMRESLANGPROCA)(HMODULE, LPCSTR, LPCSTR, WORD, LONG_PTR);

typedef BOOL (* ENUMRESLANGPROCW)(HMODULE, LPCWSTR, LPCWSTR, WORD, LONG_PTR);

typedef BOOL (* ENUMRESNAMEPROCA)(HMODULE, LPCSTR, LPSTR, LONG_PTR);

typedef BOOL (* ENUMRESNAMEPROCW)(HMODULE, LPCWSTR, LPWSTR, LONG_PTR);

typedef BOOL (* ENUMRESTYPEPROCA)(HMODULE, LPSTR, LONG_PTR);

typedef BOOL (* ENUMRESTYPEPROCW)(HMODULE, LPWSTR, LONG_PTR);

typedef struct _EVENTLOG_FULL_INFORMATION EVENTLOG_FULL_INFORMATION;

typedef struct _FILE_ALLOCATION_INFO FILE_ALLOCATION_INFO;

typedef struct _FILE_ATTRIBUTE_TAG_INFO FILE_ATTRIBUTE_TAG_INFO;

typedef struct _FILE_BASIC_INFO FILE_BASIC_INFO;

typedef struct _FILE_COMPRESSION_INFO FILE_COMPRESSION_INFO;

typedef struct _FILE_DISPOSITION_INFO FILE_DISPOSITION_INFO;

typedef struct _FILE_END_OF_FILE_INFO FILE_END_OF_FILE_INFO;

typedef struct _FILE_ID_BOTH_DIR_INFO FILE_ID_BOTH_DIR_INFO;

typedef struct FILE_ID_DESCRIPTOR FILE_ID_DESCRIPTOR, *PFILE_ID_DESCRIPTOR;

typedef enum _FILE_ID_TYPE FILE_ID_TYPE;

struct FILE_ID_DESCRIPTOR {
    DWORD dwSize;
    FILE_ID_TYPE Type;
    union _union_598 u;
};

typedef enum _FILE_INFO_BY_HANDLE_CLASS FILE_INFO_BY_HANDLE_CLASS;

typedef struct _FILE_IO_PRIORITY_HINT_INFO FILE_IO_PRIORITY_HINT_INFO;

typedef struct _FILE_NAME_INFO FILE_NAME_INFO;

typedef struct _FILE_REMOTE_PROTOCOL_INFO FILE_REMOTE_PROTOCOL_INFO;

typedef struct _FILE_RENAME_INFO FILE_RENAME_INFO;

typedef struct _FILE_STANDARD_INFO FILE_STANDARD_INFO;

typedef struct _FILE_STREAM_INFO FILE_STREAM_INFO;

typedef enum _FINDEX_INFO_LEVELS FINDEX_INFO_LEVELS;

typedef enum _FINDEX_SEARCH_OPS FINDEX_SEARCH_OPS;

typedef enum _GET_FILEEX_INFO_LEVELS GET_FILEEX_INFO_LEVELS;

typedef struct tagHW_PROFILE_INFOA tagHW_PROFILE_INFOA, *PtagHW_PROFILE_INFOA;

typedef struct tagHW_PROFILE_INFOA HW_PROFILE_INFOA;

typedef HW_PROFILE_INFOA HW_PROFILE_INFO;

struct tagHW_PROFILE_INFOA {
    DWORD dwDockInfo;
    CHAR szHwProfileGuid[39];
    CHAR szHwProfileName[80];
};

typedef struct tagHW_PROFILE_INFOW tagHW_PROFILE_INFOW, *PtagHW_PROFILE_INFOW;

typedef struct tagHW_PROFILE_INFOW HW_PROFILE_INFOW;

struct tagHW_PROFILE_INFOW {
    DWORD dwDockInfo;
    WCHAR szHwProfileGuid[39];
    WCHAR szHwProfileName[80];
};

typedef union _RTL_RUN_ONCE _RTL_RUN_ONCE, *P_RTL_RUN_ONCE;

typedef union _RTL_RUN_ONCE RTL_RUN_ONCE;

typedef RTL_RUN_ONCE INIT_ONCE;

union _RTL_RUN_ONCE {
    PVOID Ptr;
};

typedef struct _JIT_DEBUG_INFO JIT_DEBUG_INFO;

typedef JIT_DEBUG_INFO JIT_DEBUG_INFO32;

typedef JIT_DEBUG_INFO JIT_DEBUG_INFO64;

typedef struct _BY_HANDLE_FILE_INFORMATION * LPBY_HANDLE_FILE_INFORMATION;

typedef struct _COMMCONFIG * LPCOMMCONFIG;

typedef struct _COMMPROP * LPCOMMPROP;

typedef struct _COMMTIMEOUTS * LPCOMMTIMEOUTS;

typedef struct _COMSTAT * LPCOMSTAT;

typedef PCONTEXT LPCONTEXT;

typedef struct _CREATE_PROCESS_DEBUG_INFO * LPCREATE_PROCESS_DEBUG_INFO;

typedef struct _CREATE_THREAD_DEBUG_INFO * LPCREATE_THREAD_DEBUG_INFO;

typedef struct _RTL_CRITICAL_SECTION * PRTL_CRITICAL_SECTION;

typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG;

typedef struct _DCB * LPDCB;

typedef struct _DEBUG_EVENT * LPDEBUG_EVENT;

typedef struct _EVENTLOG_FULL_INFORMATION * LPEVENTLOG_FULL_INFORMATION;

typedef struct _EXCEPTION_DEBUG_INFO * LPEXCEPTION_DEBUG_INFO;

typedef PEXCEPTION_POINTERS LPEXCEPTION_POINTERS;

typedef PEXCEPTION_RECORD LPEXCEPTION_RECORD;

typedef struct _EXIT_PROCESS_DEBUG_INFO * LPEXIT_PROCESS_DEBUG_INFO;

typedef struct _EXIT_THREAD_DEBUG_INFO * LPEXIT_THREAD_DEBUG_INFO;

typedef void (* PFIBER_START_ROUTINE)(LPVOID);

typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE;

typedef struct FILE_ID_DESCRIPTOR * LPFILE_ID_DESCRIPTOR;

typedef struct tagHW_PROFILE_INFOA * LPHW_PROFILE_INFOA;

typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO;

typedef struct tagHW_PROFILE_INFOW * LPHW_PROFILE_INFOW;

typedef union _RTL_RUN_ONCE * PRTL_RUN_ONCE;

typedef PRTL_RUN_ONCE LPINIT_ONCE;

typedef struct _JIT_DEBUG_INFO * LPJIT_DEBUG_INFO;

typedef JIT_DEBUG_INFO * LPJIT_DEBUG_INFO32;

typedef JIT_DEBUG_INFO * LPJIT_DEBUG_INFO64;

typedef struct _LDT_ENTRY _LDT_ENTRY, *P_LDT_ENTRY;

typedef struct _LDT_ENTRY * PLDT_ENTRY;

typedef PLDT_ENTRY LPLDT_ENTRY;

typedef union _union_54 _union_54, *P_union_54;

typedef struct _struct_55 _struct_55, *P_struct_55;

typedef struct _struct_56 _struct_56, *P_struct_56;

typedef union anon__struct_56_bitfield_1 anon__struct_56_bitfield_1, *Panon__struct_56_bitfield_1;

struct _struct_55 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

union anon__struct_56_bitfield_1 {
    DWORD BaseMid:8; /* : bits 0-7 */
    DWORD Type:5; /* : bits 8-12 */
    DWORD Dpl:2; /* : bits 13-14 */
    DWORD Pres:1; /* : bits 15 */
    DWORD LimitHi:4; /* : bits 16-19 */
    DWORD Sys:1; /* : bits 20 */
    DWORD Reserved_0:1; /* : bits 21 */
    DWORD Default_Big:1; /* : bits 22 */
    DWORD Granularity:1; /* : bits 23 */
    DWORD BaseHi:8; /* : bits 24-31 */
};

struct _struct_56 {
    union anon__struct_56_bitfield_1 field_0x0;
};

union _union_54 {
    struct _struct_55 Bytes;
    struct _struct_56 Bits;
};

struct _LDT_ENTRY {
    WORD LimitLow;
    WORD BaseLow;
    union _union_54 HighWord;
};

typedef struct _LOAD_DLL_DEBUG_INFO * LPLOAD_DLL_DEBUG_INFO;

typedef struct _MEMORYSTATUS * LPMEMORYSTATUS;

typedef struct _MEMORYSTATUSEX * LPMEMORYSTATUSEX;

typedef struct _OFSTRUCT * LPOFSTRUCT;

typedef struct _OUTPUT_DEBUG_STRING_INFO * LPOUTPUT_DEBUG_STRING_INFO;

typedef void (* LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD, DWORD, LPOVERLAPPED);

typedef struct _OVERLAPPED_ENTRY * LPOVERLAPPED_ENTRY;

typedef struct _REASON_CONTEXT REASON_CONTEXT;

typedef REASON_CONTEXT * LPPOWER_REQUEST_CONTEXT;

typedef struct _PROCESS_HEAP_ENTRY * LPPROCESS_HEAP_ENTRY;

typedef struct _PROCESS_INFORMATION * LPPROCESS_INFORMATION;

typedef DWORD (* LPPROGRESS_ROUTINE)(LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, LARGE_INTEGER, DWORD, DWORD, HANDLE, HANDLE, LPVOID);

typedef struct _RIP_INFO * LPRIP_INFO;

typedef struct _STARTUPINFOA * LPSTARTUPINFOA;

typedef LPSTARTUPINFOA LPSTARTUPINFO;

typedef struct _STARTUPINFOEXA * LPSTARTUPINFOEXA;

typedef LPSTARTUPINFOEXA LPSTARTUPINFOEX;

typedef struct _STARTUPINFOEXW * LPSTARTUPINFOEXW;

typedef struct _STARTUPINFOW * LPSTARTUPINFOW;

typedef struct _SYSTEM_INFO * LPSYSTEM_INFO;

typedef struct _SYSTEM_POWER_STATUS * LPSYSTEM_POWER_STATUS;

typedef struct _SYSTEMTIME * LPSYSTEMTIME;

typedef struct _TIME_ZONE_INFORMATION * LPTIME_ZONE_INFORMATION;

typedef LONG (* PTOP_LEVEL_EXCEPTION_FILTER)(struct _EXCEPTION_POINTERS *);

typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;

typedef struct _UNLOAD_DLL_DEBUG_INFO * LPUNLOAD_DLL_DEBUG_INFO;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA * LPWIN32_FILE_ATTRIBUTE_DATA;

typedef struct _WIN32_FIND_DATAA * LPWIN32_FIND_DATAA;

typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;

typedef struct _WIN32_FIND_DATAW * LPWIN32_FIND_DATAW;

typedef struct _WIN32_STREAM_ID * LPWIN32_STREAM_ID;

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE MEMORY_RESOURCE_NOTIFICATION_TYPE;

typedef struct _MEMORYSTATUS MEMORYSTATUS;

typedef struct _MEMORYSTATUSEX MEMORYSTATUSEX;

typedef struct _OFSTRUCT OFSTRUCT;

typedef struct _OVERLAPPED_ENTRY OVERLAPPED_ENTRY;

typedef struct tagACTCTXA * PACTCTXA;

typedef PACTCTXA PACTCTX;

typedef struct tagACTCTX_SECTION_KEYED_DATA * PACTCTX_SECTION_KEYED_DATA;

typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 * PACTCTX_SECTION_KEYED_DATA_2600;

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA * PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

typedef struct tagACTCTXW * PACTCTXW;

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION * PACTIVATION_CONTEXT_BASIC_INFORMATION;

typedef struct _BY_HANDLE_FILE_INFORMATION * PBY_HANDLE_FILE_INFORMATION;

typedef ACTCTXA * PCACTCTXA;

typedef PCACTCTXA PCACTCTX;

typedef ACTCTX_SECTION_KEYED_DATA * PCACTCTX_SECTION_KEYED_DATA;

typedef ACTCTX_SECTION_KEYED_DATA_2600 * PCACTCTX_SECTION_KEYED_DATA_2600;

typedef ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA * PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;

typedef ACTCTXW * PCACTCTXW;

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION * PCACTIVATION_CONTEXT_BASIC_INFORMATION;

typedef RTL_CONDITION_VARIABLE * PCONDITION_VARIABLE;

typedef PRTL_CRITICAL_SECTION PCRITICAL_SECTION;

typedef PRTL_CRITICAL_SECTION_DEBUG PCRITICAL_SECTION_DEBUG;

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION * PDYNAMIC_TIME_ZONE_INFORMATION;

typedef DWORD (* PFE_EXPORT_FUNC)(PBYTE, PVOID, ULONG);

typedef ULONG * PULONG;

typedef DWORD (* PFE_IMPORT_FUNC)(PBYTE, PVOID, PULONG);

typedef struct _FILE_ALLOCATION_INFO * PFILE_ALLOCATION_INFO;

typedef struct _FILE_ATTRIBUTE_TAG_INFO * PFILE_ATTRIBUTE_TAG_INFO;

typedef struct _FILE_BASIC_INFO * PFILE_BASIC_INFO;

typedef struct _FILE_COMPRESSION_INFO * PFILE_COMPRESSION_INFO;

typedef struct _FILE_DISPOSITION_INFO * PFILE_DISPOSITION_INFO;

typedef struct _FILE_END_OF_FILE_INFO * PFILE_END_OF_FILE_INFO;

typedef struct _FILE_ID_BOTH_DIR_INFO * PFILE_ID_BOTH_DIR_INFO;

typedef enum _FILE_ID_TYPE * PFILE_ID_TYPE;

typedef enum _FILE_INFO_BY_HANDLE_CLASS * PFILE_INFO_BY_HANDLE_CLASS;

typedef struct _FILE_IO_PRIORITY_HINT_INFO * PFILE_IO_PRIORITY_HINT_INFO;

typedef struct _FILE_NAME_INFO * PFILE_NAME_INFO;

typedef struct _FILE_REMOTE_PROTOCOL_INFO * PFILE_REMOTE_PROTOCOL_INFO;

typedef struct _FILE_RENAME_INFO * PFILE_RENAME_INFO;

typedef struct _FILE_STANDARD_INFO * PFILE_STANDARD_INFO;

typedef struct _FILE_STREAM_INFO * PFILE_STREAM_INFO;

typedef BOOL (* PGET_MODULE_HANDLE_EXA)(DWORD, LPCSTR, HMODULE *);

typedef BOOL (* PGET_MODULE_HANDLE_EXW)(DWORD, LPCWSTR, HMODULE *);

typedef UINT (* PGET_SYSTEM_WOW64_DIRECTORY_A)(LPSTR, UINT);

typedef UINT (* PGET_SYSTEM_WOW64_DIRECTORY_W)(LPWSTR, UINT);

typedef PRTL_RUN_ONCE PINIT_ONCE;

typedef BOOL (* PINIT_ONCE_FN)(PINIT_ONCE, PVOID, PVOID *);

typedef enum enum_570 PIPE_ATTRIBUTE_TYPE;

typedef struct _OFSTRUCT * POFSTRUCT;

typedef REASON_CONTEXT POWER_REQUEST_CONTEXT;

typedef REASON_CONTEXT * PPOWER_REQUEST_CONTEXT;

typedef struct _PROC_THREAD_ATTRIBUTE_LIST * PPROC_THREAD_ATTRIBUTE_LIST;

typedef struct _PROCESS_HEAP_ENTRY * PPROCESS_HEAP_ENTRY;

typedef struct _PROCESS_INFORMATION * PPROCESS_INFORMATION;

typedef BOOL (* PQUERYACTCTXW_FUNC)(DWORD, HANDLE, PVOID, ULONG, PVOID, SIZE_T, SIZE_T *);

typedef struct _REASON_CONTEXT * PREASON_CONTEXT;

typedef enum _PROC_THREAD_ATTRIBUTE_NUM PROC_THREAD_ATTRIBUTE_NUM;

typedef struct _PROCESS_HEAP_ENTRY PROCESS_HEAP_ENTRY;

typedef struct _PROCESS_INFORMATION PROCESS_INFORMATION;

typedef struct _SECURITY_ATTRIBUTES * PSECURITY_ATTRIBUTES;

typedef struct _RTL_SRWLOCK _RTL_SRWLOCK, *P_RTL_SRWLOCK;

typedef struct _RTL_SRWLOCK RTL_SRWLOCK;

typedef RTL_SRWLOCK * PSRWLOCK;

struct _RTL_SRWLOCK {
    PVOID Ptr;
};

typedef struct _SYSTEMTIME * PSYSTEMTIME;

typedef struct _TIME_ZONE_INFORMATION * PTIME_ZONE_INFORMATION;

typedef void (* PTIMERAPCROUTINE)(LPVOID, DWORD, DWORD);

typedef struct _TP_CALLBACK_INSTANCE _TP_CALLBACK_INSTANCE, *P_TP_CALLBACK_INSTANCE;

typedef struct _TP_CALLBACK_INSTANCE * PTP_CALLBACK_INSTANCE;

typedef struct _TP_IO _TP_IO, *P_TP_IO;

typedef struct _TP_IO * PTP_IO;

typedef void (* PTP_WIN32_IO_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PVOID, ULONG, ULONG_PTR, PTP_IO);

struct _TP_IO {
};

struct _TP_CALLBACK_INSTANCE {
};

typedef void * PUMS_CONTEXT;

typedef struct _UMS_SCHEDULER_STARTUP_INFO * PUMS_SCHEDULER_STARTUP_INFO;

typedef enum _RTL_UMS_THREAD_INFO_CLASS {
    UmsThreadAffinity=3,
    UmsThreadInvalidInfoClass=0,
    UmsThreadIsSuspended=5,
    UmsThreadIsTerminated=6,
    UmsThreadMaxInfoClass=7,
    UmsThreadPriority=2,
    UmsThreadTeb=4,
    UmsThreadUserContext=1
} _RTL_UMS_THREAD_INFO_CLASS;

typedef enum _RTL_UMS_THREAD_INFO_CLASS * PUMS_THREAD_INFO_CLASS;

typedef struct _WIN32_FIND_DATAA * PWIN32_FIND_DATAA;

typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;

typedef struct _WIN32_FIND_DATAW * PWIN32_FIND_DATAW;

typedef struct _WIN32_FIND_STREAM_DATA * PWIN32_FIND_STREAM_DATA;

typedef RTL_SRWLOCK SRWLOCK;

typedef STARTUPINFOA STARTUPINFO;

typedef struct _STARTUPINFOEXA STARTUPINFOEXA;

typedef STARTUPINFOEXA STARTUPINFOEX;

typedef struct _STARTUPINFOEXW STARTUPINFOEXW;

typedef enum _STREAM_INFO_LEVELS STREAM_INFO_LEVELS;

typedef struct _SYSTEM_INFO SYSTEM_INFO;

typedef struct _SYSTEM_POWER_STATUS SYSTEM_POWER_STATUS;

typedef struct _TIME_ZONE_INFORMATION TIME_ZONE_INFORMATION;

typedef enum _RTL_UMS_SCHEDULER_REASON UMS_SCHEDULER_REASON;

typedef struct _UMS_SCHEDULER_STARTUP_INFO UMS_SCHEDULER_STARTUP_INFO;

typedef enum _RTL_UMS_THREAD_INFO_CLASS UMS_THREAD_INFO_CLASS;

typedef void (* WAITORTIMERCALLBACKFUNC)(PVOID, BOOLEAN);

typedef WAITORTIMERCALLBACKFUNC WAITORTIMERCALLBACK;

typedef struct _WIN32_FILE_ATTRIBUTE_DATA WIN32_FILE_ATTRIBUTE_DATA;

typedef WIN32_FIND_DATAA WIN32_FIND_DATA;

typedef struct _WIN32_FIND_STREAM_DATA WIN32_FIND_STREAM_DATA;

typedef struct _WIN32_STREAM_ID WIN32_STREAM_ID;

#define ATTACH_PARENT_PROCESS -1

#define BACKGROUND_BLUE 16

#define BACKGROUND_GREEN 32

#define BACKGROUND_INTENSITY 128

#define BACKGROUND_RED 64

#define CAPSLOCK_ON 128

#define COMMON_LVB_GRID_HORIZONTAL 1024

#define COMMON_LVB_GRID_LVERTICAL 2048

#define COMMON_LVB_GRID_RVERTICAL 4096

#define COMMON_LVB_LEADING_BYTE 256

#define COMMON_LVB_REVERSE_VIDEO 16384

#define COMMON_LVB_SBCSDBCS 768

#define COMMON_LVB_TRAILING_BYTE 512

#define COMMON_LVB_UNDERSCORE 32768

#define CONSOLE_FULLSCREEN 1

#define CONSOLE_FULLSCREEN_HARDWARE 2

#define CONSOLE_FULLSCREEN_MODE 1

#define CONSOLE_MOUSE_DOWN 8

#define CONSOLE_MOUSE_SELECTION 4

#define CONSOLE_NO_SELECTION 0

#define CONSOLE_REAL_INPUT_HANDLE -3

#define CONSOLE_REAL_OUTPUT_HANDLE -2

#define CONSOLE_SELECTION_IN_PROGRESS 1

#define CONSOLE_SELECTION_NOT_EMPTY 2

#define CONSOLE_TEXTMODE_BUFFER 1

#define CONSOLE_WINDOWED_MODE 2

#define CTRL_BREAK_EVENT 1

#define CTRL_C_EVENT 0

#define CTRL_CLOSE_EVENT 2

#define CTRL_LOGOFF_EVENT 5

#define CTRL_SHUTDOWN_EVENT 6

#define DOUBLE_CLICK 2

#define ENABLE_AUTO_POSITION 256

#define ENABLE_ECHO_INPUT 4

#define ENABLE_EXTENDED_FLAGS 128

#define ENABLE_INSERT_MODE 32

#define ENABLE_LINE_INPUT 2

#define ENABLE_MOUSE_INPUT 16

#define ENABLE_PROCESSED_INPUT 1

#define ENABLE_PROCESSED_OUTPUT 1

#define ENABLE_QUICK_EDIT_MODE 64

#define ENABLE_WINDOW_INPUT 8

#define ENABLE_WRAP_AT_EOL_OUTPUT 2

#define ENHANCED_KEY 256

#define FOCUS_EVENT 16

#define FOREGROUND_BLUE 1

#define FOREGROUND_GREEN 2

#define FOREGROUND_INTENSITY 8

#define FOREGROUND_RED 4

#define FROM_LEFT_1ST_BUTTON_PRESSED 1

#define FROM_LEFT_2ND_BUTTON_PRESSED 4

#define FROM_LEFT_3RD_BUTTON_PRESSED 8

#define FROM_LEFT_4TH_BUTTON_PRESSED 16

#define HISTORY_NO_DUP_FLAG 1

#define KEY_EVENT 1

#define LEFT_ALT_PRESSED 2

#define LEFT_CTRL_PRESSED 8

#define MENU_EVENT 8

#define MOUSE_EVENT 2

#define MOUSE_HWHEELED 8

#define MOUSE_MOVED 1

#define MOUSE_WHEELED 4

#define NLS_ALPHANUMERIC 0

#define NLS_DBCSCHAR 65536

#define NLS_HIRAGANA 262144

#define NLS_IME_CONVERSION 8388608

#define NLS_IME_DISABLE 536870912

#define NLS_KATAKANA 131072

#define NLS_ROMAN 4194304

#define NUMLOCK_ON 32

#define RIGHT_ALT_PRESSED 1

#define RIGHT_CTRL_PRESSED 4

#define RIGHTMOST_BUTTON_PRESSED 2

#define SCROLLLOCK_ON 64

#define SHIFT_PRESSED 16

#define WINDOW_BUFFER_SIZE_EVENT 4

typedef struct _CHAR_INFO _CHAR_INFO, *P_CHAR_INFO;

typedef union _union_963 _union_963, *P_union_963;

union _union_963 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

struct _CHAR_INFO {
    union _union_963 Char;
    WORD Attributes;
};

typedef struct _CONSOLE_CURSOR_INFO _CONSOLE_CURSOR_INFO, *P_CONSOLE_CURSOR_INFO;

struct _CONSOLE_CURSOR_INFO {
    DWORD dwSize;
    BOOL bVisible;
};

typedef struct _CONSOLE_FONT_INFO _CONSOLE_FONT_INFO, *P_CONSOLE_FONT_INFO;

struct _CONSOLE_FONT_INFO {
    DWORD nFont;
    COORD dwFontSize;
};

typedef struct _CONSOLE_FONT_INFOEX _CONSOLE_FONT_INFOEX, *P_CONSOLE_FONT_INFOEX;

struct _CONSOLE_FONT_INFOEX {
    ULONG cbSize;
    DWORD nFont;
    COORD dwFontSize;
    UINT FontFamily;
    UINT FontWeight;
    WCHAR FaceName[32];
};

typedef struct _CONSOLE_HISTORY_INFO _CONSOLE_HISTORY_INFO, *P_CONSOLE_HISTORY_INFO;

struct _CONSOLE_HISTORY_INFO {
    UINT cbSize;
    UINT HistoryBufferSize;
    UINT NumberOfHistoryBuffers;
    DWORD dwFlags;
};

typedef struct _CONSOLE_READCONSOLE_CONTROL _CONSOLE_READCONSOLE_CONTROL, *P_CONSOLE_READCONSOLE_CONTROL;

struct _CONSOLE_READCONSOLE_CONTROL {
    ULONG nLength;
    ULONG nInitialChars;
    ULONG dwCtrlWakeupMask;
    ULONG dwControlKeyState;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFO _CONSOLE_SCREEN_BUFFER_INFO, *P_CONSOLE_SCREEN_BUFFER_INFO;

typedef struct _SMALL_RECT _SMALL_RECT, *P_SMALL_RECT;

typedef struct _SMALL_RECT SMALL_RECT;

struct _SMALL_RECT {
    SHORT Left;
    SHORT Top;
    SHORT Right;
    SHORT Bottom;
};

struct _CONSOLE_SCREEN_BUFFER_INFO {
    COORD dwSize;
    COORD dwCursorPosition;
    WORD wAttributes;
    SMALL_RECT srWindow;
    COORD dwMaximumWindowSize;
};

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX _CONSOLE_SCREEN_BUFFER_INFOEX, *P_CONSOLE_SCREEN_BUFFER_INFOEX;

struct _CONSOLE_SCREEN_BUFFER_INFOEX {
    ULONG cbSize;
    COORD dwSize;
    COORD dwCursorPosition;
    WORD wAttributes;
    SMALL_RECT srWindow;
    COORD dwMaximumWindowSize;
    WORD wPopupAttributes;
    BOOL bFullscreenSupported;
    COLORREF ColorTable[16];
};

typedef struct _CONSOLE_SELECTION_INFO _CONSOLE_SELECTION_INFO, *P_CONSOLE_SELECTION_INFO;

struct _CONSOLE_SELECTION_INFO {
    DWORD dwFlags;
    COORD dwSelectionAnchor;
    SMALL_RECT srSelection;
};

typedef struct _FOCUS_EVENT_RECORD _FOCUS_EVENT_RECORD, *P_FOCUS_EVENT_RECORD;

struct _FOCUS_EVENT_RECORD {
    BOOL bSetFocus;
};

typedef struct _INPUT_RECORD _INPUT_RECORD, *P_INPUT_RECORD;

typedef union _union_961 _union_961, *P_union_961;

typedef struct _KEY_EVENT_RECORD _KEY_EVENT_RECORD, *P_KEY_EVENT_RECORD;

typedef struct _KEY_EVENT_RECORD KEY_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD _MOUSE_EVENT_RECORD, *P_MOUSE_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD MOUSE_EVENT_RECORD;

typedef struct _WINDOW_BUFFER_SIZE_RECORD _WINDOW_BUFFER_SIZE_RECORD, *P_WINDOW_BUFFER_SIZE_RECORD;

typedef struct _WINDOW_BUFFER_SIZE_RECORD WINDOW_BUFFER_SIZE_RECORD;

typedef struct _MENU_EVENT_RECORD _MENU_EVENT_RECORD, *P_MENU_EVENT_RECORD;

typedef struct _MENU_EVENT_RECORD MENU_EVENT_RECORD;

typedef struct _FOCUS_EVENT_RECORD FOCUS_EVENT_RECORD;

typedef union _union_955 _union_955, *P_union_955;

struct _WINDOW_BUFFER_SIZE_RECORD {
    COORD dwSize;
};

struct _MOUSE_EVENT_RECORD {
    COORD dwMousePosition;
    DWORD dwButtonState;
    DWORD dwControlKeyState;
    DWORD dwEventFlags;
};

union _union_955 {
    WCHAR UnicodeChar;
    CHAR AsciiChar;
};

struct _KEY_EVENT_RECORD {
    BOOL bKeyDown;
    WORD wRepeatCount;
    WORD wVirtualKeyCode;
    WORD wVirtualScanCode;
    union _union_955 uChar;
    DWORD dwControlKeyState;
};

struct _MENU_EVENT_RECORD {
    UINT dwCommandId;
};

union _union_961 {
    KEY_EVENT_RECORD KeyEvent;
    MOUSE_EVENT_RECORD MouseEvent;
    WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
    MENU_EVENT_RECORD MenuEvent;
    FOCUS_EVENT_RECORD FocusEvent;
};

struct _INPUT_RECORD {
    WORD EventType;
    union _union_961 Event;
};

typedef struct _CHAR_INFO CHAR_INFO;

typedef struct _CONSOLE_CURSOR_INFO CONSOLE_CURSOR_INFO;

typedef struct _CONSOLE_FONT_INFO CONSOLE_FONT_INFO;

typedef struct _CONSOLE_FONT_INFOEX CONSOLE_FONT_INFOEX;

typedef struct _CONSOLE_HISTORY_INFO CONSOLE_HISTORY_INFO;

typedef struct _CONSOLE_READCONSOLE_CONTROL CONSOLE_READCONSOLE_CONTROL;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO CONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX CONSOLE_SCREEN_BUFFER_INFOEX;

typedef struct _CONSOLE_SELECTION_INFO CONSOLE_SELECTION_INFO;

typedef struct _INPUT_RECORD INPUT_RECORD;

typedef struct _CHAR_INFO * PCHAR_INFO;

typedef struct _CONSOLE_CURSOR_INFO * PCONSOLE_CURSOR_INFO;

typedef struct _CONSOLE_FONT_INFO * PCONSOLE_FONT_INFO;

typedef struct _CONSOLE_FONT_INFOEX * PCONSOLE_FONT_INFOEX;

typedef struct _CONSOLE_HISTORY_INFO * PCONSOLE_HISTORY_INFO;

typedef struct _CONSOLE_READCONSOLE_CONTROL * PCONSOLE_READCONSOLE_CONTROL;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO * PCONSOLE_SCREEN_BUFFER_INFO;

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX * PCONSOLE_SCREEN_BUFFER_INFOEX;

typedef struct _CONSOLE_SELECTION_INFO * PCONSOLE_SELECTION_INFO;

typedef struct _COORD * PCOORD;

typedef struct _FOCUS_EVENT_RECORD * PFOCUS_EVENT_RECORD;

typedef BOOL (* PHANDLER_ROUTINE)(DWORD);

typedef struct _INPUT_RECORD * PINPUT_RECORD;

typedef struct _KEY_EVENT_RECORD * PKEY_EVENT_RECORD;

typedef struct _MENU_EVENT_RECORD * PMENU_EVENT_RECORD;

typedef struct _MOUSE_EVENT_RECORD * PMOUSE_EVENT_RECORD;

typedef struct _SMALL_RECT * PSMALL_RECT;

typedef struct _WINDOW_BUFFER_SIZE_RECORD * PWINDOW_BUFFER_SIZE_RECORD;

#define ALG_CLASS_ALL 57344

#define ALG_CLASS_ANY 0

#define ALG_CLASS_DATA_ENCRYPT 24576

#define ALG_CLASS_HASH 32768

#define ALG_CLASS_KEY_EXCHANGE 40960

#define ALG_CLASS_MSG_ENCRYPT 16384

#define ALG_CLASS_SIGNATURE 8192

#define ALG_SID_3DES 3

#define ALG_SID_3DES_112 9

#define ALG_SID_AGREED_KEY_ANY 3

#define ALG_SID_ANY 0

#define ALG_SID_CAST 6

#define ALG_SID_CYLINK_MEK 12

#define ALG_SID_DES 1

#define ALG_SID_DESX 4

#define ALG_SID_DH_EPHEM 2

#define ALG_SID_DH_SANDF 1

#define ALG_SID_DSS_ANY 0

#define ALG_SID_DSS_DMS 2

#define ALG_SID_DSS_PKCS 1

#define ALG_SID_ECDH 5

#define ALG_SID_ECDSA 3

#define ALG_SID_ECMQV 1

#define ALG_SID_EXAMPLE 80

#define ALG_SID_HMAC 9

#define ALG_SID_IDEA 5

#define ALG_SID_KEA 4

#define ALG_SID_MAC 5

#define ALG_SID_MD2 1

#define ALG_SID_MD4 2

#define ALG_SID_MD5 3

#define ALG_SID_PCT1_MASTER 4

#define ALG_SID_RC2 2

#define ALG_SID_RC4 1

#define ALG_SID_RC5 13

#define ALG_SID_RIPEMD 6

#define ALG_SID_RIPEMD160 7

#define ALG_SID_RSA_ANY 0

#define ALG_SID_RSA_ENTRUST 3

#define ALG_SID_RSA_MSATWORK 2

#define ALG_SID_RSA_PGP 4

#define ALG_SID_RSA_PKCS 1

#define ALG_SID_SAFERSK128 8

#define ALG_SID_SAFERSK64 7

#define ALG_SID_SCHANNEL_ENC_KEY 7

#define ALG_SID_SCHANNEL_MAC_KEY 3

#define ALG_SID_SCHANNEL_MASTER_HASH 2

#define ALG_SID_SEAL 2

#define ALG_SID_SHA 4

#define ALG_SID_SHA1 4

#define ALG_SID_SKIPJACK 10

#define ALG_SID_SSL2_MASTER 5

#define ALG_SID_SSL3_MASTER 1

#define ALG_SID_SSL3SHAMD5 8

#define ALG_SID_TEK 11

#define ALG_SID_TLS1_MASTER 6

#define ALG_SID_TLS1PRF 10

#define ALG_TYPE_ANY 0

#define ALG_TYPE_BLOCK 1536

#define ALG_TYPE_DH 2560

#define ALG_TYPE_DSS 512

#define ALG_TYPE_RSA 1024

#define ALG_TYPE_SECURECHANNEL 3072

#define ALG_TYPE_STREAM 2048

#define AT_KEYEXCHANGE 1

#define AT_SIGNATURE 2

#define AUTHTYPE_CLIENT 1

#define AUTHTYPE_SERVER 2

#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG 2147483648

#define BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG 1073741824

#define CALG_3DES 26115

#define CALG_3DES_112 26121

#define CALG_AGREEDKEY_ANY 43523

#define CALG_CYLINK_MEK 26124

#define CALG_DES 26113

#define CALG_DESX 26116

#define CALG_DH_EPHEM 43522

#define CALG_DH_SF 43521

#define CALG_DSS_SIGN 8704

#define CALG_ECDH 43525

#define CALG_ECDSA 8707

#define CALG_ECMQV 40961

#define CALG_HMAC 32777

#define CALG_HUGHES_MD5 40963

#define CALG_KEA_KEYX 43524

#define CALG_MAC 32773

#define CALG_MD2 32769

#define CALG_MD4 32770

#define CALG_MD5 32771

#define CALG_OID_INFO_CNG_ONLY 4294967295

#define CALG_OID_INFO_PARAMETERS 4294967294

#define CALG_PCT1_MASTER 19460

#define CALG_RC2 26114

#define CALG_RC4 26625

#define CALG_RC5 26125

#define CALG_RSA_KEYX 41984

#define CALG_RSA_SIGN 9216

#define CALG_SCHANNEL_ENC_KEY 19463

#define CALG_SCHANNEL_MAC_KEY 19459

#define CALG_SCHANNEL_MASTER_HASH 19458

#define CALG_SEAL 26626

#define CALG_SHA 32772

#define CALG_SHA1 32772

#define CALG_SKIPJACK 26122

#define CALG_SSL2_MASTER 19461

#define CALG_SSL3_MASTER 19457

#define CALG_SSL3_SHAMD5 32776

#define CALG_TEK 26123

#define CALG_TLS1_MASTER 19462

#define CALG_TLS1PRF 32778

#define CERT_ACCESS_STATE_GP_SYSTEM_STORE_FLAG 8

#define CERT_ACCESS_STATE_LM_SYSTEM_STORE_FLAG 4

#define CERT_ACCESS_STATE_PROP_ID 14

#define CERT_ACCESS_STATE_SYSTEM_STORE_FLAG 2

#define CERT_ACCESS_STATE_WRITE_PERSIST_FLAG 1

#define CERT_AIA_URL_RETRIEVED_PROP_ID 67

#define CERT_ALT_NAME_DIRECTORY_NAME 5

#define CERT_ALT_NAME_DNS_NAME 3

#define CERT_ALT_NAME_EDI_PARTY_NAME 6

#define CERT_ALT_NAME_ENTRY_ERR_INDEX_MASK 255

#define CERT_ALT_NAME_ENTRY_ERR_INDEX_SHIFT 16

#define CERT_ALT_NAME_IP_ADDRESS 8

#define CERT_ALT_NAME_OTHER_NAME 1

#define CERT_ALT_NAME_REGISTERED_ID 9

#define CERT_ALT_NAME_RFC822_NAME 2

#define CERT_ALT_NAME_URL 7

#define CERT_ALT_NAME_VALUE_ERR_INDEX_MASK 65535

#define CERT_ALT_NAME_VALUE_ERR_INDEX_SHIFT 0

#define CERT_ALT_NAME_X400_ADDRESS 4

#define CERT_ARCHIVED_KEY_HASH_PROP_ID 65

#define CERT_ARCHIVED_PROP_ID 19

#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_PARTIAL_CHAIN_LOGGING_FLAG 2

#define CERT_AUTH_ROOT_AUTO_UPDATE_DISABLE_UNTRUSTED_ROOT_LOGGING_FLAG 1

#define CERT_AUTHORITY_INFO_ACCESS_PROP_ID 68

#define CERT_AUTO_ENROLL_PROP_ID 21

#define CERT_AUTO_ENROLL_RETRY_PROP_ID 66

#define CERT_BACKED_UP_PROP_ID 69

#define CERT_BIOMETRIC_OID_DATA_CHOICE 2

#define CERT_BIOMETRIC_PICTURE_TYPE 0

#define CERT_BIOMETRIC_PREDEFINED_DATA_CHOICE 1

#define CERT_BIOMETRIC_SIGNATURE_TYPE 1

#define CERT_BUNDLE_CERTIFICATE 0

#define CERT_BUNDLE_CRL 1

#define CERT_CA_DISABLE_CRL_PROP_ID 82

#define CERT_CA_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID 81

#define CERT_CA_SUBJECT_FLAG 128

#define CERT_CASE_INSENSITIVE_IS_RDN_ATTRS_FLAG 2

#define CERT_CEP_PROP_ID 87

#define CERT_CHAIN_CACHE_END_CERT 1

#define CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL 4

#define CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT 12

#define CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_DEFAULT 168

#define CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE 256

#define CERT_CHAIN_DISABLE_MY_PEER_TRUST 2048

#define CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING 64

#define CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE 16

#define CERT_CHAIN_ENABLE_PEER_TRUST 1024

#define CERT_CHAIN_ENABLE_SHARE_STORE 32

#define CERT_CHAIN_FIND_BY_ISSUER 1

#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG 32768

#define CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG 4

#define CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG 1

#define CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG 2

#define CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG 8

#define CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG 16384

#define CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT 5

#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT 100000

#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT 10

#define CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT 3

#define CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_DEFAULT 104857600

#define CERT_CHAIN_OCSP_VALIDITY_SECONDS_DEFAULT 43200

#define CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL 2

#define CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL 4

#define CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG 32768

#define CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG 16

#define CERT_CHAIN_POLICY_AUTHENTICODE 2

#define CERT_CHAIN_POLICY_AUTHENTICODE_TS 3

#define CERT_CHAIN_POLICY_BASE 1

#define CERT_CHAIN_POLICY_BASIC_CONSTRAINTS 5

#define CERT_CHAIN_POLICY_EV 8

#define CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG 1024

#define CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG 2

#define CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG 512

#define CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG 256

#define CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG 8

#define CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG 64

#define CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG 128

#define CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG 8192

#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG 4

#define CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG 1

#define CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG 4096

#define CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG 2048

#define CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG 32

#define CERT_CHAIN_POLICY_MICROSOFT_ROOT 7

#define CERT_CHAIN_POLICY_NT_AUTH 6

#define CERT_CHAIN_POLICY_SSL 4

#define CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG 16384

#define CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS 128

#define CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT 20000

#define CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT 134217728

#define CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY 2147483648

#define CERT_CHAIN_REVOCATION_CHECK_CHAIN 536870912

#define CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 1073741824

#define CERT_CHAIN_REVOCATION_CHECK_END_CERT 268435456

#define CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT 67108864

#define CERT_CHAIN_THREAD_STORE_SYNC 2

#define CERT_CHAIN_TIMESTAMP_TIME 512

#define CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT 15000

#define CERT_CHAIN_USE_LOCAL_MACHINE_STORE 8

#define CERT_CLOSE_STORE_CHECK_FLAG 2

#define CERT_CLOSE_STORE_FORCE_FLAG 1

#define CERT_COMPARE_ANY 0

#define CERT_COMPARE_ATTR 3

#define CERT_COMPARE_CERT_ID 16

#define CERT_COMPARE_CROSS_CERT_DIST_POINTS 17

#define CERT_COMPARE_CTL_USAGE 10

#define CERT_COMPARE_ENHKEY_USAGE 10

#define CERT_COMPARE_EXISTING 13

#define CERT_COMPARE_HASH 1

#define CERT_COMPARE_ISSUER_OF 12

#define CERT_COMPARE_KEY_IDENTIFIER 15

#define CERT_COMPARE_KEY_SPEC 9

#define CERT_COMPARE_MASK 65535

#define CERT_COMPARE_MD5_HASH 4

#define CERT_COMPARE_NAME 2

#define CERT_COMPARE_NAME_STR_A 7

#define CERT_COMPARE_NAME_STR_W 8

#define CERT_COMPARE_PROPERTY 5

#define CERT_COMPARE_PUBKEY_MD5_HASH 18

#define CERT_COMPARE_PUBLIC_KEY 6

#define CERT_COMPARE_SHA1_HASH 1

#define CERT_COMPARE_SHIFT 16

#define CERT_COMPARE_SIGNATURE_HASH 14

#define CERT_COMPARE_SUBJECT_CERT 11

#define CERT_COMPARE_SUBJECT_INFO_ACCESS 19

#define CERT_CONTEXT_REVOCATION_TYPE 1

#define CERT_CREATE_CONTEXT_NO_ENTRY_FLAG 8

#define CERT_CREATE_CONTEXT_NO_HCRYPTMSG_FLAG 4

#define CERT_CREATE_CONTEXT_NOCOPY_FLAG 1

#define CERT_CREATE_CONTEXT_SORTED_FLAG 2

#define CERT_CREATE_SELFSIGN_NO_KEY_INFO 2

#define CERT_CREATE_SELFSIGN_NO_SIGN 1

#define CERT_CRL_SIGN_KEY_USAGE 2

#define CERT_CROSS_CERT_DIST_POINTS_PROP_ID 23

#define CERT_CTL_USAGE_PROP_ID 9

#define CERT_DATA_ENCIPHERMENT_KEY_USAGE 16

#define CERT_DATE_STAMP_PROP_ID 27

#define CERT_DECIPHER_ONLY_KEY_USAGE 128

#define CERT_DESCRIPTION_PROP_ID 13

#define CERT_DIGITAL_SIGNATURE_KEY_USAGE 128

#define CERT_DSS_R_LEN 20

#define CERT_DSS_S_LEN 20

#define CERT_DSS_SIGNATURE_LEN 40

#define CERT_EFS_PROP_ID 17

#define CERT_ENCIPHER_ONLY_KEY_USAGE 1

#define CERT_ENCODING_TYPE_MASK 65535

#define CERT_END_ENTITY_SUBJECT_FLAG 64

#define CERT_ENHKEY_USAGE_PROP_ID 9

#define CERT_ENROLLMENT_PROP_ID 26

#define CERT_EXCLUDED_SUBTREE_BIT 2147483648

#define CERT_EXTENDED_ERROR_INFO_PROP_ID 30

#define CERT_FILE_STORE_COMMIT_ENABLE_FLAG 65536

#define CERT_FIND_ANY 0

#define CERT_FIND_CERT_ID 1048576

#define CERT_FIND_CROSS_CERT_DIST_POINTS 1114112

#define CERT_FIND_CTL_USAGE 655360

#define CERT_FIND_ENHKEY_USAGE 655360

#define CERT_FIND_EXISTING 851968

#define CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG 2

#define CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG 2

#define CERT_FIND_HASH 65536

#define CERT_FIND_ISSUER_OF 786432

#define CERT_FIND_ISSUER_STR 524292

#define CERT_FIND_KEY_IDENTIFIER 983040

#define CERT_FIND_KEY_SPEC 589824

#define CERT_FIND_MD5_HASH 262144

#define CERT_FIND_NO_CTL_USAGE_FLAG 8

#define CERT_FIND_NO_ENHKEY_USAGE_FLAG 8

#define CERT_FIND_OPTIONAL_CTL_USAGE_FLAG 1

#define CERT_FIND_OPTIONAL_ENHKEY_USAGE_FLAG 1

#define CERT_FIND_OR_CTL_USAGE_FLAG 16

#define CERT_FIND_OR_ENHKEY_USAGE_FLAG 16

#define CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG 4

#define CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG 4

#define CERT_FIND_PROPERTY 327680

#define CERT_FIND_PUBKEY_MD5_HASH 1179648

#define CERT_FIND_PUBLIC_KEY 393216

#define CERT_FIND_SHA1_HASH 65536

#define CERT_FIND_SIGNATURE_HASH 917504

#define CERT_FIND_SUBJECT_CERT 720896

#define CERT_FIND_SUBJECT_INFO_ACCESS 1245184

#define CERT_FIND_SUBJECT_STR 524295

#define CERT_FIND_VALID_CTL_USAGE_FLAG 32

#define CERT_FIND_VALID_ENHKEY_USAGE_FLAG 32

#define CERT_FIRST_RESERVED_PROP_ID 92

#define CERT_FIRST_USER_PROP_ID 32768

#define CERT_FORTEZZA_DATA_PROP_ID 18

#define CERT_FRIENDLY_NAME_PROP_ID 11

#define CERT_HASH_PROP_ID 3

#define CERT_HCRYPTPROV_OR_NCRYPT_KEY_HANDLE_PROP_ID 79

#define CERT_ID_ISSUER_SERIAL_NUMBER 1

#define CERT_ID_KEY_IDENTIFIER 2

#define CERT_ID_SHA1_HASH 3

#define CERT_IE30_RESERVED_PROP_ID 7

#define CERT_INFO_EXTENSION_FLAG 11

#define CERT_INFO_ISSUER_FLAG 4

#define CERT_INFO_ISSUER_UNIQUE_ID_FLAG 9

#define CERT_INFO_NOT_AFTER_FLAG 6

#define CERT_INFO_NOT_BEFORE_FLAG 5

#define CERT_INFO_SERIAL_NUMBER_FLAG 2

#define CERT_INFO_SIGNATURE_ALGORITHM_FLAG 3

#define CERT_INFO_SUBJECT_FLAG 7

#define CERT_INFO_SUBJECT_PUBLIC_KEY_INFO_FLAG 8

#define CERT_INFO_SUBJECT_UNIQUE_ID_FLAG 10

#define CERT_INFO_VERSION_FLAG 1

#define CERT_ISSUER_PUBLIC_KEY_MD5_HASH_PROP_ID 24

#define CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID 28

#define CERT_KEY_AGREEMENT_KEY_USAGE 8

#define CERT_KEY_CERT_SIGN_KEY_USAGE 4

#define CERT_KEY_CONTEXT_PROP_ID 5

#define CERT_KEY_ENCIPHERMENT_KEY_USAGE 32

#define CERT_KEY_IDENTIFIER_PROP_ID 20

#define CERT_KEY_PROV_HANDLE_PROP_ID 1

#define CERT_KEY_PROV_INFO_PROP_ID 2

#define CERT_KEY_SPEC_PROP_ID 6

#define CERT_KEYGEN_REQUEST_V1 0

#define CERT_LAST_RESERVED_PROP_ID 32767

#define CERT_LAST_USER_PROP_ID 65535

#define CERT_LDAP_STORE_AREC_EXCLUSIVE_FLAG 131072

#define CERT_LDAP_STORE_OPENED_FLAG 262144

#define CERT_LDAP_STORE_SIGN_FLAG 65536

#define CERT_LDAP_STORE_UNBIND_FLAG 524288

#define CERT_LOGOTYPE_BITS_IMAGE_RESOLUTION_CHOICE 1

#define CERT_LOGOTYPE_COLOR_IMAGE_INFO_CHOICE 2

#define CERT_LOGOTYPE_DIRECT_INFO_CHOICE 1

#define CERT_LOGOTYPE_GRAY_SCALE_IMAGE_INFO_CHOICE 1

#define CERT_LOGOTYPE_INDIRECT_INFO_CHOICE 2

#define CERT_LOGOTYPE_NO_IMAGE_RESOLUTION_CHOICE 0

#define CERT_LOGOTYPE_TABLE_SIZE_IMAGE_RESOLUTION_CHOICE 2

#define CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN 48

#define CERT_MD5_HASH_PROP_ID 4

#define CERT_NAME_ATTR_TYPE 3

#define CERT_NAME_DISABLE_IE4_UTF8_FLAG 65536

#define CERT_NAME_DNS_TYPE 6

#define CERT_NAME_EMAIL_TYPE 1

#define CERT_NAME_FRIENDLY_DISPLAY_TYPE 5

#define CERT_NAME_ISSUER_FLAG 1

#define CERT_NAME_RDN_TYPE 2

#define CERT_NAME_SIMPLE_DISPLAY_TYPE 4

#define CERT_NAME_STR_COMMA_FLAG 67108864

#define CERT_NAME_STR_CRLF_FLAG 134217728

#define CERT_NAME_STR_DISABLE_IE4_UTF8_FLAG 65536

#define CERT_NAME_STR_DISABLE_UTF8_DIR_STR_FLAG 1048576

#define CERT_NAME_STR_ENABLE_PUNYCODE_FLAG 2097152

#define CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG 131072

#define CERT_NAME_STR_ENABLE_UTF8_UNICODE_FLAG 262144

#define CERT_NAME_STR_FORCE_UTF8_DIR_STR_FLAG 524288

#define CERT_NAME_STR_FORWARD_FLAG 16777216

#define CERT_NAME_STR_NO_PLUS_FLAG 536870912

#define CERT_NAME_STR_NO_QUOTING_FLAG 268435456

#define CERT_NAME_STR_REVERSE_FLAG 33554432

#define CERT_NAME_STR_SEMICOLON_FLAG 1073741824

#define CERT_NAME_UPN_TYPE 8

#define CERT_NAME_URL_TYPE 7

#define CERT_NCRYPT_KEY_HANDLE_PROP_ID 78

#define CERT_NCRYPT_KEY_SPEC 4294967295

#define CERT_NEW_KEY_PROP_ID 74

#define CERT_NEXT_UPDATE_LOCATION_PROP_ID 10

#define CERT_NO_AUTO_EXPIRE_CHECK_PROP_ID 77

#define CERT_NON_REPUDIATION_KEY_USAGE 64

#define CERT_OCSP_CACHE_PREFIX_PROP_ID 75

#define CERT_OCSP_RESPONSE_PROP_ID 70

#define CERT_OFFLINE_CRL_SIGN_KEY_USAGE 2

#define CERT_OID_NAME_STR 2

#define CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG 1

#define CERT_PHYSICAL_STORE_INSERT_COMPUTER_NAME_ENABLE_FLAG 8

#define CERT_PHYSICAL_STORE_OPEN_DISABLE_FLAG 2

#define CERT_PHYSICAL_STORE_PREDEFINED_ENUM_FLAG 1

#define CERT_PHYSICAL_STORE_REMOTE_OPEN_DISABLE_FLAG 4

#define CERT_PROT_ROOT_DISABLE_CURRENT_USER_FLAG 1

#define CERT_PROT_ROOT_DISABLE_LM_AUTH_FLAG 8

#define CERT_PROT_ROOT_DISABLE_NOT_DEFINED_NAME_CONSTRAINT_FLAG 32

#define CERT_PROT_ROOT_DISABLE_NT_AUTH_REQUIRED_FLAG 16

#define CERT_PROT_ROOT_DISABLE_PEER_TRUST 65536

#define CERT_PROT_ROOT_INHIBIT_ADD_AT_INIT_FLAG 2

#define CERT_PROT_ROOT_INHIBIT_PURGE_LM_FLAG 4

#define CERT_PROT_ROOT_ONLY_LM_GPT_FLAG 8

#define CERT_PUBKEY_ALG_PARA_PROP_ID 22

#define CERT_PUBKEY_HASH_RESERVED_PROP_ID 8

#define CERT_PVK_FILE_PROP_ID 12

#define CERT_QUERY_CONTENT_CERT 1

#define CERT_QUERY_CONTENT_CERT_PAIR 13

#define CERT_QUERY_CONTENT_CRL 3

#define CERT_QUERY_CONTENT_CTL 2

#define CERT_QUERY_CONTENT_FLAG_CERT 2

#define CERT_QUERY_CONTENT_FLAG_CERT_PAIR 8192

#define CERT_QUERY_CONTENT_FLAG_CRL 8

#define CERT_QUERY_CONTENT_FLAG_CTL 4

#define CERT_QUERY_CONTENT_FLAG_PFX 4096

#define CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD 16384

#define CERT_QUERY_CONTENT_FLAG_PKCS10 2048

#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED 256

#define CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED 1024

#define CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED 512

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT 32

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL 128

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL 64

#define CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE 16

#define CERT_QUERY_CONTENT_PFX 12

#define CERT_QUERY_CONTENT_PFX_AND_LOAD 14

#define CERT_QUERY_CONTENT_PKCS10 11

#define CERT_QUERY_CONTENT_PKCS7_SIGNED 8

#define CERT_QUERY_CONTENT_PKCS7_SIGNED_EMBED 10

#define CERT_QUERY_CONTENT_PKCS7_UNSIGNED 9

#define CERT_QUERY_CONTENT_SERIALIZED_CERT 5

#define CERT_QUERY_CONTENT_SERIALIZED_CRL 7

#define CERT_QUERY_CONTENT_SERIALIZED_CTL 6

#define CERT_QUERY_CONTENT_SERIALIZED_STORE 4

#define CERT_QUERY_FORMAT_ASN_ASCII_HEX_ENCODED 3

#define CERT_QUERY_FORMAT_BASE64_ENCODED 2

#define CERT_QUERY_FORMAT_BINARY 1

#define CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED 8

#define CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED 4

#define CERT_QUERY_FORMAT_FLAG_BINARY 2

#define CERT_QUERY_OBJECT_BLOB 2

#define CERT_QUERY_OBJECT_FILE 1

#define CERT_RDN_ANY_TYPE 0

#define CERT_RDN_BMP_STRING 12

#define CERT_RDN_DISABLE_CHECK_TYPE_FLAG 1073741824

#define CERT_RDN_DISABLE_IE4_UTF8_FLAG 16777216

#define CERT_RDN_ENABLE_PUNYCODE_FLAG 33554432

#define CERT_RDN_ENABLE_T61_UNICODE_FLAG 2147483648

#define CERT_RDN_ENABLE_UTF8_UNICODE_FLAG 536870912

#define CERT_RDN_ENCODED_BLOB 1

#define CERT_RDN_FLAGS_MASK 4278190080

#define CERT_RDN_FORCE_UTF8_UNICODE_FLAG 268435456

#define CERT_RDN_GENERAL_STRING 10

#define CERT_RDN_GRAPHIC_STRING 8

#define CERT_RDN_IA5_STRING 7

#define CERT_RDN_INT4_STRING 11

#define CERT_RDN_ISO646_STRING 9

#define CERT_RDN_NUMERIC_STRING 3

#define CERT_RDN_OCTET_STRING 2

#define CERT_RDN_PRINTABLE_STRING 4

#define CERT_RDN_T61_STRING 5

#define CERT_RDN_TELETEX_STRING 5

#define CERT_RDN_TYPE_MASK 255

#define CERT_RDN_UNICODE_STRING 12

#define CERT_RDN_UNIVERSAL_STRING 11

#define CERT_RDN_UTF8_STRING 13

#define CERT_RDN_VIDEOTEX_STRING 6

#define CERT_RDN_VISIBLE_STRING 9

#define CERT_REGISTRY_STORE_CLIENT_GPT_FLAG 2147483648

#define CERT_REGISTRY_STORE_LM_GPT_FLAG 16777216

#define CERT_REGISTRY_STORE_MY_IE_DIRTY_FLAG 524288

#define CERT_REGISTRY_STORE_REMOTE_FLAG 65536

#define CERT_REGISTRY_STORE_ROAMING_FLAG 262144

#define CERT_REGISTRY_STORE_SERIALIZED_FLAG 131072

#define CERT_RENEWAL_PROP_ID 64

#define CERT_REQUEST_ORIGINATOR_PROP_ID 71

#define CERT_REQUEST_V1 0

#define CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE 1000

#define CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE 1000

#define CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE 1001

#define CERT_RETRIEVE_COMMUNITY_LOGO 3

#define CERT_RETRIEVE_ISSUER_LOGO 1

#define CERT_RETRIEVE_SUBJECT_LOGO 2

#define CERT_ROOT_PROGRAM_CERT_POLICIES_PROP_ID 83

#define CERT_ROOT_PROGRAM_FLAG_ADDRESS 8

#define CERT_ROOT_PROGRAM_FLAG_LSC 64

#define CERT_ROOT_PROGRAM_FLAG_ORG 128

#define CERT_ROOT_PROGRAM_FLAG_OU 16

#define CERT_ROOT_PROGRAM_FLAG_SUBJECT_LOGO 32

#define CERT_ROOT_PROGRAM_NAME_CONSTRAINTS_PROP_ID 84

#define CERT_SCARD_PIN_ID_PROP_ID 90

#define CERT_SCARD_PIN_INFO_PROP_ID 91

#define CERT_SET_KEY_CONTEXT_PROP_ID 1

#define CERT_SET_KEY_PROV_HANDLE_PROP_ID 1

#define CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG 2147483648

#define CERT_SET_PROPERTY_INHIBIT_PERSIST_FLAG 1073741824

#define CERT_SHA1_HASH_PROP_ID 3

#define CERT_SIGN_HASH_CNG_ALG_PROP_ID 89

#define CERT_SIGNATURE_HASH_PROP_ID 15

#define CERT_SIMPLE_NAME_STR 1

#define CERT_SMART_CARD_DATA_PROP_ID 16

#define CERT_SMART_CARD_ROOT_INFO_PROP_ID 76

#define CERT_SOURCE_LOCATION_PROP_ID 72

#define CERT_SOURCE_URL_PROP_ID 73

#define CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT 14400

#define CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT 60

#define CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT 120

#define CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_DEFAULT 600

#define CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT 15000

#define CERT_STORE_ADD_ALWAYS 4

#define CERT_STORE_ADD_NEW 1

#define CERT_STORE_ADD_NEWER 6

#define CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES 7

#define CERT_STORE_ADD_REPLACE_EXISTING 3

#define CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES 5

#define CERT_STORE_ADD_USE_EXISTING 2

#define CERT_STORE_ALL_CONTEXT_FLAG -1

#define CERT_STORE_BACKUP_RESTORE_FLAG 2048

#define CERT_STORE_BASE_CRL_FLAG 256

#define CERT_STORE_CERTIFICATE_CONTEXT 1

#define CERT_STORE_CERTIFICATE_CONTEXT_FLAG 2

#define CERT_STORE_CREATE_NEW_FLAG 8192

#define CERT_STORE_CRL_CONTEXT 2

#define CERT_STORE_CRL_CONTEXT_FLAG 4

#define CERT_STORE_CTL_CONTEXT 3

#define CERT_STORE_CTL_CONTEXT_FLAG 8

#define CERT_STORE_CTRL_AUTO_RESYNC 4

#define CERT_STORE_CTRL_CANCEL_NOTIFY 5

#define CERT_STORE_CTRL_COMMIT 3

#define CERT_STORE_CTRL_COMMIT_CLEAR_FLAG 2

#define CERT_STORE_CTRL_COMMIT_FORCE_FLAG 1

#define CERT_STORE_CTRL_INHIBIT_DUPLICATE_HANDLE_FLAG 1

#define CERT_STORE_CTRL_NOTIFY_CHANGE 2

#define CERT_STORE_CTRL_RESYNC 1

#define CERT_STORE_DEFER_CLOSE_UNTIL_LAST_FREE_FLAG 4

#define CERT_STORE_DELETE_FLAG 16

#define CERT_STORE_DELTA_CRL_FLAG 512

#define CERT_STORE_ENUM_ARCHIVED_FLAG 512

#define CERT_STORE_LOCALIZED_NAME_PROP_ID 4096

#define CERT_STORE_MANIFOLD_FLAG 256

#define CERT_STORE_MAXIMUM_ALLOWED_FLAG 4096

#define CERT_STORE_NO_CRL_FLAG 65536

#define CERT_STORE_NO_CRYPT_RELEASE_FLAG 1

#define CERT_STORE_NO_ISSUER_FLAG 131072

#define CERT_STORE_OPEN_EXISTING_FLAG 16384

#define CERT_STORE_PROV_CLOSE_FUNC 0

#define CERT_STORE_PROV_COLLECTION 11

#define CERT_STORE_PROV_CONTROL_FUNC 13

#define CERT_STORE_PROV_DELETE_CERT_FUNC 3

#define CERT_STORE_PROV_DELETE_CRL_FUNC 7

#define CERT_STORE_PROV_DELETE_CTL_FUNC 11

#define CERT_STORE_PROV_DELETED_FLAG 2

#define CERT_STORE_PROV_EXTERNAL_FLAG 1

#define CERT_STORE_PROV_FILE 3

#define CERT_STORE_PROV_FILENAME 8

#define CERT_STORE_PROV_FILENAME_A 7

#define CERT_STORE_PROV_FILENAME_W 8

#define CERT_STORE_PROV_FIND_CERT_FUNC 14

#define CERT_STORE_PROV_FIND_CRL_FUNC 17

#define CERT_STORE_PROV_FIND_CTL_FUNC 20

#define CERT_STORE_PROV_FREE_FIND_CERT_FUNC 15

#define CERT_STORE_PROV_FREE_FIND_CRL_FUNC 18

#define CERT_STORE_PROV_FREE_FIND_CTL_FUNC 21

#define CERT_STORE_PROV_GET_CERT_PROPERTY_FUNC 16

#define CERT_STORE_PROV_GET_CRL_PROPERTY_FUNC 19

#define CERT_STORE_PROV_GET_CTL_PROPERTY_FUNC 22

#define CERT_STORE_PROV_GP_SYSTEM_STORE_FLAG 32

#define CERT_STORE_PROV_LDAP 16

#define CERT_STORE_PROV_LDAP_W 16

#define CERT_STORE_PROV_LM_SYSTEM_STORE_FLAG 16

#define CERT_STORE_PROV_MEMORY 2

#define CERT_STORE_PROV_MSG 1

#define CERT_STORE_PROV_NO_PERSIST_FLAG 4

#define CERT_STORE_PROV_PHYSICAL 14

#define CERT_STORE_PROV_PHYSICAL_W 14

#define CERT_STORE_PROV_PKCS12 17

#define CERT_STORE_PROV_PKCS7 5

#define CERT_STORE_PROV_READ_CERT_FUNC 1

#define CERT_STORE_PROV_READ_CRL_FUNC 5

#define CERT_STORE_PROV_READ_CTL_FUNC 9

#define CERT_STORE_PROV_REG 4

#define CERT_STORE_PROV_SERIALIZED 6

#define CERT_STORE_PROV_SET_CERT_PROPERTY_FUNC 4

#define CERT_STORE_PROV_SET_CRL_PROPERTY_FUNC 8

#define CERT_STORE_PROV_SET_CTL_PROPERTY_FUNC 12

#define CERT_STORE_PROV_SMART_CARD 15

#define CERT_STORE_PROV_SMART_CARD_W 15

#define CERT_STORE_PROV_SYSTEM 10

#define CERT_STORE_PROV_SYSTEM_A 9

#define CERT_STORE_PROV_SYSTEM_REGISTRY 13

#define CERT_STORE_PROV_SYSTEM_REGISTRY_A 12

#define CERT_STORE_PROV_SYSTEM_REGISTRY_W 13

#define CERT_STORE_PROV_SYSTEM_STORE_FLAG 8

#define CERT_STORE_PROV_SYSTEM_W 10

#define CERT_STORE_PROV_WRITE_ADD_FLAG 1

#define CERT_STORE_PROV_WRITE_CERT_FUNC 2

#define CERT_STORE_PROV_WRITE_CRL_FUNC 6

#define CERT_STORE_PROV_WRITE_CTL_FUNC 10

#define CERT_STORE_READONLY_FLAG 32768

#define CERT_STORE_REVOCATION_FLAG 4

#define CERT_STORE_SAVE_AS_PKCS12 3

#define CERT_STORE_SAVE_AS_PKCS7 2

#define CERT_STORE_SAVE_AS_STORE 1

#define CERT_STORE_SAVE_TO_FILE 1

#define CERT_STORE_SAVE_TO_FILENAME 4

#define CERT_STORE_SAVE_TO_FILENAME_A 3

#define CERT_STORE_SAVE_TO_FILENAME_W 4

#define CERT_STORE_SAVE_TO_MEMORY 2

#define CERT_STORE_SET_LOCALIZED_NAME_FLAG 2

#define CERT_STORE_SHARE_CONTEXT_FLAG 128

#define CERT_STORE_SHARE_STORE_FLAG 64

#define CERT_STORE_SIGNATURE_FLAG 1

#define CERT_STORE_TIME_VALIDITY_FLAG 2

#define CERT_STORE_UNSAFE_PHYSICAL_FLAG 32

#define CERT_STORE_UPDATE_KEYID_FLAG 1024

#define CERT_SUBJECT_DISABLE_CRL_PROP_ID 86

#define CERT_SUBJECT_INFO_ACCESS_PROP_ID 80

#define CERT_SUBJECT_NAME_MD5_HASH_PROP_ID 29

#define CERT_SUBJECT_OCSP_AUTHORITY_INFO_ACCESS_PROP_ID 85

#define CERT_SUBJECT_PUBLIC_KEY_MD5_HASH_PROP_ID 25

#define CERT_SYSTEM_STORE_CURRENT_SERVICE 262144

#define CERT_SYSTEM_STORE_CURRENT_SERVICE_ID 4

#define CERT_SYSTEM_STORE_CURRENT_USER 65536

#define CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY_ID 7

#define CERT_SYSTEM_STORE_CURRENT_USER_ID 1

#define CERT_SYSTEM_STORE_LOCAL_MACHINE 131072

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE_ID 9

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY_ID 8

#define CERT_SYSTEM_STORE_LOCAL_MACHINE_ID 2

#define CERT_SYSTEM_STORE_LOCATION_MASK 16711680

#define CERT_SYSTEM_STORE_LOCATION_SHIFT 16

#define CERT_SYSTEM_STORE_MASK 4294901760

#define CERT_SYSTEM_STORE_RELOCATE_FLAG 2147483648

#define CERT_SYSTEM_STORE_SERVICES 327680

#define CERT_SYSTEM_STORE_SERVICES_ID 5

#define CERT_SYSTEM_STORE_UNPROTECTED_FLAG 1073741824

#define CERT_SYSTEM_STORE_USERS 393216

#define CERT_SYSTEM_STORE_USERS_ID 6

#define CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID 262144

#define CERT_TRUST_CTL_IS_NOT_TIME_VALID 131072

#define CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE 524288

#define CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED 4096

#define CERT_TRUST_HAS_EXACT_MATCH_ISSUER 1

#define CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT 32768

#define CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY 512

#define CERT_TRUST_HAS_KEY_MATCH_ISSUER 2

#define CERT_TRUST_HAS_NAME_MATCH_ISSUER 4

#define CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT 8192

#define CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT 16384

#define CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT 134217728

#define CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT 4096

#define CERT_TRUST_HAS_PREFERRED_ISSUER 256

#define CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS 1024

#define CERT_TRUST_INVALID_BASIC_CONSTRAINTS 1024

#define CERT_TRUST_INVALID_EXTENSION 256

#define CERT_TRUST_INVALID_NAME_CONSTRAINTS 2048

#define CERT_TRUST_INVALID_POLICY_CONSTRAINTS 512

#define CERT_TRUST_IS_COMPLEX_CHAIN 65536

#define CERT_TRUST_IS_CYCLIC 128

#define CERT_TRUST_IS_EXPLICIT_DISTRUST 67108864

#define CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE 8192

#define CERT_TRUST_IS_NOT_SIGNATURE_VALID 8

#define CERT_TRUST_IS_NOT_TIME_NESTED 2

#define CERT_TRUST_IS_NOT_TIME_VALID 1

#define CERT_TRUST_IS_NOT_VALID_FOR_USAGE 16

#define CERT_TRUST_IS_OFFLINE_REVOCATION 16777216

#define CERT_TRUST_IS_PARTIAL_CHAIN 65536

#define CERT_TRUST_IS_PEER_TRUSTED 2048

#define CERT_TRUST_IS_REVOKED 4

#define CERT_TRUST_IS_SELF_SIGNED 8

#define CERT_TRUST_IS_UNTRUSTED_ROOT 32

#define CERT_TRUST_NO_ERROR 0

#define CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY 33554432

#define CERT_TRUST_PUB_ALLOW_END_USER_TRUST 0

#define CERT_TRUST_PUB_ALLOW_ENTERPRISE_ADMIN_TRUST 2

#define CERT_TRUST_PUB_ALLOW_MACHINE_ADMIN_TRUST 1

#define CERT_TRUST_PUB_ALLOW_TRUST_MASK 3

#define CERT_TRUST_PUB_CHECK_PUBLISHER_REV_FLAG 256

#define CERT_TRUST_PUB_CHECK_TIMESTAMP_REV_FLAG 512

#define CERT_TRUST_REVOCATION_STATUS_UNKNOWN 64

#define CERT_UNICODE_ATTR_ERR_INDEX_MASK 63

#define CERT_UNICODE_ATTR_ERR_INDEX_SHIFT 16

#define CERT_UNICODE_IS_RDN_ATTRS_FLAG 1

#define CERT_UNICODE_RDN_ERR_INDEX_MASK 1023

#define CERT_UNICODE_RDN_ERR_INDEX_SHIFT 22

#define CERT_UNICODE_VALUE_ERR_INDEX_MASK 65535

#define CERT_UNICODE_VALUE_ERR_INDEX_SHIFT 0

#define CERT_V1 0

#define CERT_V2 1

#define CERT_V3 2

#define CERT_VERIFY_ALLOW_MORE_USAGE_FLAG 8

#define CERT_VERIFY_CACHE_ONLY_BASED_REVOCATION 2

#define CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG 1

#define CERT_VERIFY_NO_TIME_CHECK_FLAG 4

#define CERT_VERIFY_REV_ACCUMULATIVE_TIMEOUT_FLAG 4

#define CERT_VERIFY_REV_CHAIN_FLAG 1

#define CERT_VERIFY_REV_SERVER_OCSP_FLAG 8

#define CERT_VERIFY_TRUSTED_SIGNERS_FLAG 2

#define CERT_VERIFY_UPDATED_CTL_FLAG 1

#define CERT_X500_NAME_STR 3

#define CERT_XML_NAME_STR 4

#define CMC_ADD_ATTRIBUTES 63

#define CMC_ADD_EXTENSIONS 62

#define CMC_DATA 59

#define CMC_FAIL_BAD_ALG 0

#define CMC_FAIL_BAD_CERT_ID 4

#define CMC_FAIL_BAD_IDENTITY 7

#define CMC_FAIL_BAD_MESSAGE_CHECK 1

#define CMC_FAIL_BAD_REQUEST 2

#define CMC_FAIL_BAD_TIME 3

#define CMC_FAIL_INTERNAL_CA_ERROR 11

#define CMC_FAIL_MUST_ARCHIVE_KEYS 6

#define CMC_FAIL_NO_KEY_REUSE 10

#define CMC_FAIL_POP_FAILED 9

#define CMC_FAIL_POP_REQUIRED 8

#define CMC_FAIL_TRY_LATER 12

#define CMC_FAIL_UNSUPORTED_EXT 5

#define CMC_OTHER_INFO_FAIL_CHOICE 1

#define CMC_OTHER_INFO_NO_CHOICE 0

#define CMC_OTHER_INFO_PEND_CHOICE 2

#define CMC_RESPONSE 60

#define CMC_STATUS 61

#define CMC_STATUS_CONFIRM_REQUIRED 5

#define CMC_STATUS_FAILED 2

#define CMC_STATUS_NO_SUPPORT 4

#define CMC_STATUS_PENDING 3

#define CMC_STATUS_SUCCESS 0

#define CMC_TAGGED_CERT_REQUEST_CHOICE 1

#define CMS_SIGNER_INFO 501

#define CMSG_ALL_FLAGS -1

#define CMSG_ATTR_CERT_COUNT_PARAM 31

#define CMSG_ATTR_CERT_PARAM 32

#define CMSG_AUTHENTICATED_ATTRIBUTES_FLAG 8

#define CMSG_BARE_CONTENT_FLAG 1

#define CMSG_BARE_CONTENT_PARAM 3

#define CMSG_CERT_COUNT_PARAM 11

#define CMSG_CERT_PARAM 12

#define CMSG_CMS_ENCAPSULATED_CONTENT_FLAG 64

#define CMSG_CMS_ENCAPSULATED_CTL_FLAG 32768

#define CMSG_CMS_RECIPIENT_COUNT_PARAM 33

#define CMSG_CMS_RECIPIENT_ENCRYPTED_KEY_INDEX_PARAM 35

#define CMSG_CMS_RECIPIENT_INDEX_PARAM 34

#define CMSG_CMS_RECIPIENT_INFO_PARAM 36

#define CMSG_CMS_SIGNER_INFO_PARAM 39

#define CMSG_COMPUTED_HASH_PARAM 22

#define CMSG_CONTENT_ENCRYPT_FREE_OBJID_FLAG 2

#define CMSG_CONTENT_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_CONTENT_ENCRYPT_PAD_ENCODED_LEN_FLAG 1

#define CMSG_CONTENT_ENCRYPT_RELEASE_CONTEXT_FLAG 32768

#define CMSG_CONTENT_PARAM 2

#define CMSG_CONTENTS_OCTETS_FLAG 16

#define CMSG_CRL_COUNT_PARAM 13

#define CMSG_CRL_PARAM 14

#define CMSG_CRYPT_RELEASE_CONTEXT_FLAG 32768

#define CMSG_CTRL_ADD_ATTR_CERT 14

#define CMSG_CTRL_ADD_CERT 10

#define CMSG_CTRL_ADD_CMS_SIGNER_INFO 20

#define CMSG_CTRL_ADD_CRL 12

#define CMSG_CTRL_ADD_SIGNER 6

#define CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR 8

#define CMSG_CTRL_DECRYPT 2

#define CMSG_CTRL_DEL_ATTR_CERT 15

#define CMSG_CTRL_DEL_CERT 11

#define CMSG_CTRL_DEL_CRL 13

#define CMSG_CTRL_DEL_SIGNER 7

#define CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR 9

#define CMSG_CTRL_KEY_AGREE_DECRYPT 17

#define CMSG_CTRL_KEY_TRANS_DECRYPT 16

#define CMSG_CTRL_MAIL_LIST_DECRYPT 18

#define CMSG_CTRL_VERIFY_HASH 5

#define CMSG_CTRL_VERIFY_SIGNATURE 1

#define CMSG_CTRL_VERIFY_SIGNATURE_EX 19

#define CMSG_DATA 1

#define CMSG_DATA_FLAG 2

#define CMSG_DEFAULT_INSTALLABLE_FUNC_OID 1

#define CMSG_DETACHED_FLAG 4

#define CMSG_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 2

#define CMSG_ENCODE_SORTED_CTL_FLAG 1

#define CMSG_ENCODED_MESSAGE 29

#define CMSG_ENCODED_SIGNER 28

#define CMSG_ENCODING_TYPE_MASK 4294901760

#define CMSG_ENCRYPT_PARAM 26

#define CMSG_ENCRYPTED 6

#define CMSG_ENCRYPTED_DIGEST 27

#define CMSG_ENCRYPTED_FLAG 64

#define CMSG_ENVELOPE_ALGORITHM_PARAM 15

#define CMSG_ENVELOPED 3

#define CMSG_ENVELOPED_DATA_CMS_VERSION 2

#define CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION 0

#define CMSG_ENVELOPED_DATA_V0 0

#define CMSG_ENVELOPED_DATA_V2 2

#define CMSG_ENVELOPED_FLAG 8

#define CMSG_ENVELOPED_RECIPIENT_V0 0

#define CMSG_ENVELOPED_RECIPIENT_V2 2

#define CMSG_ENVELOPED_RECIPIENT_V3 3

#define CMSG_ENVELOPED_RECIPIENT_V4 4

#define CMSG_HASH_ALGORITHM_PARAM 20

#define CMSG_HASH_DATA_PARAM 21

#define CMSG_HASHED 5

#define CMSG_HASHED_DATA_CMS_VERSION 2

#define CMSG_HASHED_DATA_PKCS_1_5_VERSION 0

#define CMSG_HASHED_DATA_V0 0

#define CMSG_HASHED_DATA_V2 2

#define CMSG_HASHED_FLAG 32

#define CMSG_INDEFINITE_LENGTH 4294967295

#define CMSG_INNER_CONTENT_TYPE_PARAM 4

#define CMSG_KEY_AGREE_ENCRYPT_FREE_MATERIAL_FLAG 2

#define CMSG_KEY_AGREE_ENCRYPT_FREE_OBJID_FLAG 32

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_ALG_FLAG 4

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_BITS_FLAG 16

#define CMSG_KEY_AGREE_ENCRYPT_FREE_PUBKEY_PARA_FLAG 8

#define CMSG_KEY_AGREE_EPHEMERAL_KEY_CHOICE 1

#define CMSG_KEY_AGREE_ORIGINATOR_CERT 1

#define CMSG_KEY_AGREE_ORIGINATOR_PUBLIC_KEY 2

#define CMSG_KEY_AGREE_RECIPIENT 2

#define CMSG_KEY_AGREE_STATIC_KEY_CHOICE 2

#define CMSG_KEY_AGREE_VERSION 3

#define CMSG_KEY_TRANS_CMS_VERSION 2

#define CMSG_KEY_TRANS_ENCRYPT_FREE_OBJID_FLAG 2

#define CMSG_KEY_TRANS_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_KEY_TRANS_PKCS_1_5_VERSION 0

#define CMSG_KEY_TRANS_RECIPIENT 1

#define CMSG_LENGTH_ONLY_FLAG 2

#define CMSG_MAIL_LIST_ENCRYPT_FREE_OBJID_FLAG 2

#define CMSG_MAIL_LIST_ENCRYPT_FREE_PARA_FLAG 1

#define CMSG_MAIL_LIST_HANDLE_KEY_CHOICE 1

#define CMSG_MAIL_LIST_RECIPIENT 3

#define CMSG_MAIL_LIST_VERSION 4

#define CMSG_MAX_LENGTH_FLAG 32

#define CMSG_RC4_NO_SALT_FLAG 1073741824

#define CMSG_RECIPIENT_COUNT_PARAM 17

#define CMSG_RECIPIENT_INDEX_PARAM 18

#define CMSG_RECIPIENT_INFO_PARAM 19

#define CMSG_SIGNED 2

#define CMSG_SIGNED_AND_ENVELOPED 4

#define CMSG_SIGNED_AND_ENVELOPED_FLAG 16

#define CMSG_SIGNED_DATA_CMS_VERSION 3

#define CMSG_SIGNED_DATA_PKCS_1_5_VERSION 1

#define CMSG_SIGNED_DATA_V1 1

#define CMSG_SIGNED_DATA_V3 3

#define CMSG_SIGNED_FLAG 4

#define CMSG_SIGNER_AUTH_ATTR_PARAM 9

#define CMSG_SIGNER_CERT_ID_PARAM 38

#define CMSG_SIGNER_CERT_INFO_PARAM 7

#define CMSG_SIGNER_COUNT_PARAM 5

#define CMSG_SIGNER_HASH_ALGORITHM_PARAM 8

#define CMSG_SIGNER_INFO_CMS_VERSION 3

#define CMSG_SIGNER_INFO_PARAM 6

#define CMSG_SIGNER_INFO_PKCS_1_5_VERSION 1

#define CMSG_SIGNER_INFO_V1 1

#define CMSG_SIGNER_INFO_V3 3

#define CMSG_SIGNER_ONLY_FLAG 2

#define CMSG_SIGNER_UNAUTH_ATTR_PARAM 10

#define CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG 2147483648

#define CMSG_TRUSTED_SIGNER_FLAG 1

#define CMSG_TYPE_PARAM 1

#define CMSG_UNPROTECTED_ATTR_PARAM 37

#define CMSG_USE_SIGNER_INDEX_FLAG 4

#define CMSG_VERIFY_SIGNER_CERT 2

#define CMSG_VERIFY_SIGNER_CHAIN 3

#define CMSG_VERIFY_SIGNER_NULL 4

#define CMSG_VERIFY_SIGNER_PUBKEY 1

#define CMSG_VERSION_PARAM 30

#define CNG_RSA_PUBLIC_KEY_BLOB 72

#define CONTEXT_OID_CAPI2_ANY 5

#define CONTEXT_OID_CERTIFICATE 1

#define CONTEXT_OID_CRL 2

#define CONTEXT_OID_CTL 3

#define CONTEXT_OID_OCSP_RESP 6

#define CONTEXT_OID_PKCS7 4

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS 1

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_A 1

#define CREDENTIAL_OID_PASSWORD_CREDENTIALS_W 2

#define CRL_DIST_POINT_ERR_CRL_ISSUER_BIT 2147483648

#define CRL_DIST_POINT_ERR_INDEX_MASK 127

#define CRL_DIST_POINT_ERR_INDEX_SHIFT 24

#define CRL_DIST_POINT_FULL_NAME 1

#define CRL_DIST_POINT_ISSUER_RDN_NAME 2

#define CRL_DIST_POINT_NO_NAME 0

#define CRL_FIND_ANY 0

#define CRL_FIND_EXISTING 2

#define CRL_FIND_ISSUED_BY 1

#define CRL_FIND_ISSUED_BY_AKI_FLAG 1

#define CRL_FIND_ISSUED_BY_BASE_FLAG 8

#define CRL_FIND_ISSUED_BY_DELTA_FLAG 4

#define CRL_FIND_ISSUED_BY_SIGNATURE_FLAG 2

#define CRL_FIND_ISSUED_FOR 3

#define CRL_REASON_AFFILIATION_CHANGED 3

#define CRL_REASON_AFFILIATION_CHANGED_FLAG 16

#define CRL_REASON_CA_COMPROMISE 2

#define CRL_REASON_CA_COMPROMISE_FLAG 32

#define CRL_REASON_CERTIFICATE_HOLD 6

#define CRL_REASON_CERTIFICATE_HOLD_FLAG 2

#define CRL_REASON_CESSATION_OF_OPERATION 5

#define CRL_REASON_CESSATION_OF_OPERATION_FLAG 4

#define CRL_REASON_KEY_COMPROMISE 1

#define CRL_REASON_KEY_COMPROMISE_FLAG 64

#define CRL_REASON_REMOVE_FROM_CRL 8

#define CRL_REASON_SUPERSEDED 4

#define CRL_REASON_SUPERSEDED_FLAG 8

#define CRL_REASON_UNSPECIFIED 0

#define CRL_REASON_UNUSED_FLAG 128

#define CRL_V1 0

#define CRL_V2 1

#define CROSS_CERT_DIST_POINT_ERR_INDEX_MASK 255

#define CROSS_CERT_DIST_POINT_ERR_INDEX_SHIFT 24

#define CRYPT_ACCUMULATIVE_TIMEOUT 2048

#define CRYPT_ACQUIRE_ALLOW_NCRYPT_KEY_FLAG 65536

#define CRYPT_ACQUIRE_CACHE_FLAG 1

#define CRYPT_ACQUIRE_COMPARE_KEY_FLAG 4

#define CRYPT_ACQUIRE_NCRYPT_KEY_FLAGS_MASK 458752

#define CRYPT_ACQUIRE_NO_HEALING 8

#define CRYPT_ACQUIRE_ONLY_NCRYPT_KEY_FLAG 262144

#define CRYPT_ACQUIRE_PREFER_NCRYPT_KEY_FLAG 131072

#define CRYPT_ACQUIRE_SILENT_FLAG 64

#define CRYPT_ACQUIRE_USE_PROV_INFO_FLAG 2

#define CRYPT_AIA_RETRIEVAL 524288

#define CRYPT_ASN_ENCODING 1

#define CRYPT_ASYNC_RETRIEVAL 16

#define CRYPT_BLOB_VER3 128

#define CRYPT_CACHE_ONLY_RETRIEVAL 2

#define CRYPT_CHECK_FRESHNESS_TIME_VALIDITY 1024

#define CRYPT_CREATE_IV 512

#define CRYPT_CREATE_SALT 4

#define CRYPT_DATA_KEY 2048

#define CRYPT_DECODE_ALLOC_FLAG 32768

#define CRYPT_DECODE_ENABLE_PUNYCODE_FLAG 33554432

#define CRYPT_DECODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 8

#define CRYPT_DECODE_NOCOPY_FLAG 1

#define CRYPT_DECODE_SHARE_OID_STRING_FLAG 4

#define CRYPT_DECODE_TO_BE_SIGNED_FLAG 2

#define CRYPT_DECRYPT 2

#define CRYPT_DEFAULT_CONTAINER_OPTIONAL 128

#define CRYPT_DEFAULT_CONTEXT_AUTO_RELEASE_FLAG 1

#define CRYPT_DEFAULT_CONTEXT_CERT_SIGN_OID 1

#define CRYPT_DEFAULT_CONTEXT_MULTI_CERT_SIGN_OID 2

#define CRYPT_DEFAULT_CONTEXT_PROCESS_FLAG 2

#define CRYPT_DELETE_DEFAULT 4

#define CRYPT_DELETE_KEYSET 16

#define CRYPT_DELETEKEYSET 16

#define CRYPT_DESTROYKEY 4

#define CRYPT_DONT_CACHE_RESULT 8

#define CRYPT_DONT_CHECK_TIME_VALIDITY 512

#define CRYPT_DONT_VERIFY_SIGNATURE 256

#define CRYPT_ECC_CMS_SHARED_INFO_SUPPPUBINFO_BYTE_LENGTH 4

#define CRYPT_ENCODE_ALLOC_FLAG 32768

#define CRYPT_ENCODE_DECODE_NONE 0

#define CRYPT_ENCODE_ENABLE_PUNYCODE_FLAG 131072

#define CRYPT_ENCODE_NO_SIGNATURE_BYTE_REVERSAL_FLAG 8

#define CRYPT_ENCRYPT 1

#define CRYPT_ENCRYPT_ALG_OID_GROUP_ID 2

#define CRYPT_ENHKEY_USAGE_OID_GROUP_ID 7

#define CRYPT_EXPORT 4

#define CRYPT_EXPORT_KEY 64

#define CRYPT_EXPORTABLE 1

#define CRYPT_EXT_OR_ATTR_OID_GROUP_ID 6

#define CRYPT_FAILED 0

#define CRYPT_FASTSGC 2

#define CRYPT_FIND_MACHINE_KEYSET_FLAG 2

#define CRYPT_FIND_SILENT_KEYSET_FLAG 64

#define CRYPT_FIND_USER_KEYSET_FLAG 1

#define CRYPT_FIRST 1

#define CRYPT_FIRST_ALG_OID_GROUP_ID 1

#define CRYPT_FLAG_IPSEC 16

#define CRYPT_FLAG_PCT1 1

#define CRYPT_FLAG_SIGNING 32

#define CRYPT_FLAG_SSL2 2

#define CRYPT_FLAG_SSL3 4

#define CRYPT_FLAG_TLS1 8

#define CRYPT_FORCE_KEY_PROTECTION_HIGH 32768

#define CRYPT_FORMAT_COMMA 4096

#define CRYPT_FORMAT_CRLF 512

#define CRYPT_FORMAT_OID 4

#define CRYPT_FORMAT_RDN_CRLF 512

#define CRYPT_FORMAT_RDN_REVERSE 2048

#define CRYPT_FORMAT_RDN_SEMICOLON 256

#define CRYPT_FORMAT_RDN_UNQUOTE 1024

#define CRYPT_FORMAT_SEMICOLON 256

#define CRYPT_FORMAT_SIMPLE 1

#define CRYPT_FORMAT_STR_MULTI_LINE 1

#define CRYPT_FORMAT_STR_NO_HEX 16

#define CRYPT_FORMAT_X509 2

#define CRYPT_GET_INSTALLED_OID_FUNC_FLAG 1

#define CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE 8

#define CRYPT_GET_URL_FROM_EXTENSION 2

#define CRYPT_GET_URL_FROM_PROPERTY 1

#define CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE 4

#define CRYPT_HASH_ALG_OID_GROUP_ID 1

#define CRYPT_HTTP_POST_RETRIEVAL 1048576

#define CRYPT_IMPL_HARDWARE 1

#define CRYPT_IMPL_MIXED 3

#define CRYPT_IMPL_REMOVABLE 8

#define CRYPT_IMPL_SOFTWARE 2

#define CRYPT_IMPL_UNKNOWN 4

#define CRYPT_IMPORT_KEY 128

#define CRYPT_INITIATOR 64

#define CRYPT_INSTALL_OID_FUNC_BEFORE_FLAG 1

#define CRYPT_INSTALL_OID_INFO_BEFORE_FLAG 1

#define CRYPT_KDF_OID_GROUP_ID 10

#define CRYPT_KEEP_TIME_VALID 128

#define CRYPT_KEK 1024

#define CRYPT_KEYID_ALLOC_FLAG 32768

#define CRYPT_KEYID_DELETE_FLAG 16

#define CRYPT_KEYID_MACHINE_FLAG 32

#define CRYPT_KEYID_SET_NEW_FLAG 8192

#define CRYPT_LAST_ALG_OID_GROUP_ID 4

#define CRYPT_LAST_OID_GROUP_ID 10

#define CRYPT_LDAP_AREC_EXCLUSIVE_RETRIEVAL 262144

#define CRYPT_LDAP_INSERT_ENTRY_ATTRIBUTE 32768

#define CRYPT_LDAP_SCOPE_BASE_ONLY_RETRIEVAL 8192

#define CRYPT_LDAP_SIGN_RETRIEVAL 65536

#define CRYPT_LITTLE_ENDIAN 1

#define CRYPT_LOCALIZED_NAME_ENCODING_TYPE 0

#define CRYPT_MAC 32

#define CRYPT_MACHINE_DEFAULT 1

#define CRYPT_MACHINE_KEYSET 32

#define CRYPT_MATCH_ANY_ENCODING_TYPE 4294967295

#define CRYPT_MESSAGE_BARE_CONTENT_OUT_FLAG 1

#define CRYPT_MESSAGE_ENCAPSULATED_CONTENT_OUT_FLAG 2

#define CRYPT_MESSAGE_KEYID_RECIPIENT_FLAG 4

#define CRYPT_MESSAGE_KEYID_SIGNER_FLAG 4

#define CRYPT_MESSAGE_SILENT_KEYSET_FLAG 64

#define CRYPT_MODE_CBC 1

#define CRYPT_MODE_CBCI 6

#define CRYPT_MODE_CBCOFM 9

#define CRYPT_MODE_CBCOFMI 10

#define CRYPT_MODE_CFB 4

#define CRYPT_MODE_CFBP 7

#define CRYPT_MODE_CTS 5

#define CRYPT_MODE_ECB 2

#define CRYPT_MODE_OFB 3

#define CRYPT_MODE_OFBP 8

#define CRYPT_NDR_ENCODING 2

#define CRYPT_NEWKEYSET 8

#define CRYPT_NEXT 2

#define CRYPT_NO_AUTH_RETRIEVAL 131072

#define CRYPT_NO_SALT 16

#define CRYPT_NOHASHOID 1

#define CRYPT_NOT_MODIFIED_RETRIEVAL 4194304

#define CRYPT_OAEP 64

#define CRYPT_OCSP_ONLY_RETRIEVAL 16777216

#define CRYPT_OFFLINE_CHECK_RETRIEVAL 16384

#define CRYPT_OID_DISABLE_SEARCH_DS_FLAG 2147483648

#define CRYPT_OID_INFO_ALGID_KEY 3

#define CRYPT_OID_INFO_CNG_ALGID_KEY 5

#define CRYPT_OID_INFO_CNG_SIGN_KEY 6

#define CRYPT_OID_INFO_NAME_KEY 2

#define CRYPT_OID_INFO_OID_GROUP_BIT_LEN_MASK 268369920

#define CRYPT_OID_INFO_OID_GROUP_BIT_LEN_SHIFT 16

#define CRYPT_OID_INFO_OID_KEY 1

#define CRYPT_OID_INFO_OID_KEY_FLAGS_MASK 4294901760

#define CRYPT_OID_INFO_PUBKEY_ENCRYPT_KEY_FLAG 1073741824

#define CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG 2147483648

#define CRYPT_OID_INFO_SIGN_KEY 4

#define CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG 1

#define CRYPT_OID_NO_NULL_ALGORITHM_PARA_FLAG 4

#define CRYPT_OID_PUBKEY_ENCRYPT_ONLY_FLAG 1073741824

#define CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG 2147483648

#define CRYPT_OID_USE_PUBKEY_PARA_FOR_PKCS7_FLAG 2

#define CRYPT_ONLINE 128

#define CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION 1

#define CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL 2

#define CRYPT_POLICY_OID_GROUP_ID 8

#define CRYPT_PREGEN 64

#define CRYPT_PROXY_CACHE_RETRIEVAL 2097152

#define CRYPT_PSTORE 2

#define CRYPT_PUBKEY_ALG_OID_GROUP_ID 3

#define CRYPT_RC2_128BIT_VERSION 58

#define CRYPT_RC2_40BIT_VERSION 160

#define CRYPT_RC2_56BIT_VERSION 52

#define CRYPT_RC2_64BIT_VERSION 120

#define CRYPT_RDN_ATTR_OID_GROUP_ID 5

#define CRYPT_READ 8

#define CRYPT_RECIPIENT 16

#define CRYPT_REGISTER_FIRST_INDEX 0

#define CRYPT_REGISTER_LAST_INDEX 4294967295

#define CRYPT_RETRIEVE_MULTIPLE_OBJECTS 1

#define CRYPT_SEC_DESCR 1

#define CRYPT_SECRETDIGEST 1

#define CRYPT_SERVER 1024

#define CRYPT_SF 256

#define CRYPT_SGC 1

#define CRYPT_SGC_ENUM 4

#define CRYPT_SGCKEY 8192

#define CRYPT_SIGN_ALG_OID_GROUP_ID 4

#define CRYPT_SILENT 64

#define CRYPT_SORTED_CTL_ENCODE_HASHED_SUBJECT_IDENTIFIER_FLAG 65536

#define CRYPT_SSL2_FALLBACK 2

#define CRYPT_STICKY_CACHE_RETRIEVAL 4096

#define CRYPT_STRING_ANY 7

#define CRYPT_STRING_BASE64 1

#define CRYPT_STRING_BASE64_ANY 6

#define CRYPT_STRING_BASE64HEADER 0

#define CRYPT_STRING_BASE64REQUESTHEADER 3

#define CRYPT_STRING_BASE64X509CRLHEADER 9

#define CRYPT_STRING_BINARY 2

#define CRYPT_STRING_HASHDATA 268435456

#define CRYPT_STRING_HEX 4

#define CRYPT_STRING_HEX_ANY 8

#define CRYPT_STRING_HEXADDR 10

#define CRYPT_STRING_HEXASCII 5

#define CRYPT_STRING_HEXASCIIADDR 11

#define CRYPT_STRING_HEXRAW 12

#define CRYPT_STRING_NOCR 2147483648

#define CRYPT_STRING_NOCRLF 1073741824

#define CRYPT_STRING_STRICT 536870912

#define CRYPT_SUCCEED 1

#define CRYPT_TEMPLATE_OID_GROUP_ID 9

#define CRYPT_TYPE2_FORMAT 2

#define CRYPT_UI_PROMPT 4

#define CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG 16777216

#define CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG 1073741824

#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG 2147483648

#define CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG 536870912

#define CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG 268435456

#define CRYPT_UPDATE_KEY 8

#define CRYPT_USER_DEFAULT 2

#define CRYPT_USER_KEYSET 4096

#define CRYPT_USER_PROTECTED 2

#define CRYPT_USERDATA 1

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CERT 2

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_CHAIN 3

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_NULL 4

#define CRYPT_VERIFY_CERT_SIGN_ISSUER_PUBKEY 1

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_BLOB 1

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CERT 2

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_CRL 3

#define CRYPT_VERIFY_CERT_SIGN_SUBJECT_OCSP_BASIC_SIGNED_RESPONSE 4

#define CRYPT_VERIFY_CONTEXT_SIGNATURE 32

#define CRYPT_VERIFY_DATA_HASH 64

#define CRYPT_VERIFYCONTEXT 4026531840

#define CRYPT_VOLATILE 4096

#define CRYPT_WIRE_ONLY_RETRIEVAL 4

#define CRYPT_WRITE 16

#define CRYPT_X931_FORMAT 4

#define CRYPT_X942_COUNTER_BYTE_LENGTH 4

#define CRYPT_X942_KEY_LENGTH_BYTE_LENGTH 4

#define CRYPT_X942_PUB_INFO_BYTE_LENGTH 64

#define CRYPT_Y_ONLY 1

#define CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT 50

#define CRYPTNET_CRL_BEFORE_OCSP_ENABLE 4294967295

#define CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT 500

#define CRYPTNET_OCSP_AFTER_CRL_DISABLE 4294967295

#define CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_DEFAULT 1800

#define CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT 10

#define CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT 20

#define CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT 14400

#define CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_DEFAULT 1209600

#define CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT 1800

#define CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT 3600

#define CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_DEFAULT 3600

#define CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_DEFAULT 300

#define CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT 30

#define CRYPTNET_PRE_FETCH_TRIGGER_DISABLE 4294967295

#define CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_DEFAULT 600

#define CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT 10

#define CRYPTNET_URL_CACHE_DEFAULT_FLUSH 0

#define CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_DEFAULT 2419200

#define CRYPTNET_URL_CACHE_DISABLE_FLUSH 4294967295

#define CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB 5

#define CRYPTNET_URL_CACHE_PRE_FETCH_BLOB 1

#define CRYPTNET_URL_CACHE_PRE_FETCH_CRL 2

#define CRYPTNET_URL_CACHE_PRE_FETCH_NONE 0

#define CRYPTNET_URL_CACHE_PRE_FETCH_OCSP 3

#define CRYPTNET_URL_CACHE_RESPONSE_HTTP 1

#define CRYPTNET_URL_CACHE_RESPONSE_NONE 0

#define CRYPTNET_URL_CACHE_RESPONSE_VALIDATED 32768

#define CRYPTPROTECT_AUDIT 16

#define CRYPTPROTECT_CRED_REGENERATE 128

#define CRYPTPROTECT_CRED_SYNC 8

#define CRYPTPROTECT_FIRST_RESERVED_FLAGVAL 268435455

#define CRYPTPROTECT_LAST_RESERVED_FLAGVAL 4294967295

#define CRYPTPROTECT_LOCAL_MACHINE 4

#define CRYPTPROTECT_NO_RECOVERY 32

#define CRYPTPROTECT_PROMPT_ON_PROTECT 2

#define CRYPTPROTECT_PROMPT_ON_UNPROTECT 1

#define CRYPTPROTECT_PROMPT_REQUIRE_STRONG 16

#define CRYPTPROTECT_PROMPT_RESERVED 4

#define CRYPTPROTECT_PROMPT_STRONG 8

#define CRYPTPROTECT_UI_FORBIDDEN 1

#define CRYPTPROTECT_VERIFY_PROTECTION 64

#define CRYPTPROTECTMEMORY_BLOCK_SIZE 16

#define CRYPTPROTECTMEMORY_CROSS_PROCESS 1

#define CRYPTPROTECTMEMORY_SAME_LOGON 2

#define CRYPTPROTECTMEMORY_SAME_PROCESS 0

#define CTL_ANY_SUBJECT_TYPE 1

#define CTL_CERT_SUBJECT_TYPE 2

#define CTL_ENTRY_FROM_PROP_CHAIN_FLAG 1

#define CTL_FIND_ANY 0

#define CTL_FIND_EXISTING 5

#define CTL_FIND_MD5_HASH 2

#define CTL_FIND_NO_LIST_ID_CBDATA 4294967295

#define CTL_FIND_NO_SIGNER_PTR -1

#define CTL_FIND_SAME_USAGE_FLAG 1

#define CTL_FIND_SHA1_HASH 1

#define CTL_FIND_SUBJECT 4

#define CTL_FIND_USAGE 3

#define CTL_V1 0

#define CUR_BLOB_VERSION 2

#define dwFORCE_KEY_PROTECTION_DISABLED 0

#define dwFORCE_KEY_PROTECTION_HIGH 2

#define dwFORCE_KEY_PROTECTION_USER_SELECT 1

#define ECC_CMS_SHARED_INFO 77

#define EXPORT_PRIVATE_KEYS 4

#define HCCE_CURRENT_USER 0

#define HCCE_LOCAL_MACHINE 1

#define HP_ALGID 1

#define HP_HASHSIZE 4

#define HP_HASHVAL 2

#define HP_HMAC_INFO 5

#define HP_TLS1PRF_LABEL 6

#define HP_TLS1PRF_SEED 7

#define INTERNATIONAL_USAGE 1

#define KEY_LENGTH_MASK 4294901760

#define KP_ADMIN_PIN 31

#define KP_ALGID 7

#define KP_BLOCKLEN 8

#define KP_CERTIFICATE 26

#define KP_CLEAR_KEY 27

#define KP_CLIENT_RANDOM 21

#define KP_CMS_DH_KEY_INFO 38

#define KP_CMS_KEY_INFO 37

#define KP_EFFECTIVE_KEYLEN 19

#define KP_G 12

#define KP_HIGHEST_VERSION 41

#define KP_INFO 18

#define KP_IV 1

#define KP_KEYEXCHANGE_PIN 32

#define KP_KEYLEN 9

#define KP_KEYVAL 30

#define KP_MODE 4

#define KP_MODE_BITS 5

#define KP_OAEP_PARAMS 36

#define KP_P 11

#define KP_PADDING 3

#define KP_PERMISSIONS 6

#define KP_PIN_ID 43

#define KP_PIN_INFO 44

#define KP_PRECOMP_MD5 24

#define KP_PRECOMP_SHA 25

#define KP_PREHASH 34

#define KP_PUB_EX_LEN 28

#define KP_PUB_EX_VAL 29

#define KP_PUB_PARAMS 39

#define KP_Q 13

#define KP_RA 16

#define KP_RB 17

#define KP_RP 23

#define KP_SALT 2

#define KP_SALT_EX 10

#define KP_SCHANNEL_ALG 20

#define KP_SERVER_RANDOM 22

#define KP_SIGNATURE_PIN 33

#define KP_VERIFY_PARAMS 40

#define KP_X 14

#define KP_Y 15

#define MAXUIDLEN 64

#define MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG 65536

#define NETSCAPE_SIGN_CA_CERT_TYPE 1

#define NETSCAPE_SIGN_CERT_TYPE 16

#define NETSCAPE_SMIME_CA_CERT_TYPE 2

#define NETSCAPE_SMIME_CERT_TYPE 32

#define NETSCAPE_SSL_CA_CERT_TYPE 4

#define NETSCAPE_SSL_CLIENT_AUTH_CERT_TYPE 128

#define NETSCAPE_SSL_SERVER_AUTH_CERT_TYPE 64

#define OCSP_BASIC_BY_KEY_RESPONDER_ID 2

#define OCSP_BASIC_BY_NAME_RESPONDER_ID 1

#define OCSP_BASIC_GOOD_CERT_STATUS 0

#define OCSP_BASIC_RESPONSE 69

#define OCSP_BASIC_RESPONSE_V1 0

#define OCSP_BASIC_REVOKED_CERT_STATUS 1

#define OCSP_BASIC_SIGNED_RESPONSE 68

#define OCSP_BASIC_UNKNOWN_CERT_STATUS 2

#define OCSP_INTERNAL_ERROR_RESPONSE 2

#define OCSP_MALFORMED_REQUEST_RESPONSE 1

#define OCSP_REQUEST 66

#define OCSP_REQUEST_V1 0

#define OCSP_RESPONSE 67

#define OCSP_SIG_REQUIRED_RESPONSE 5

#define OCSP_SIGNED_REQUEST 65

#define OCSP_SUCCESSFUL_RESPONSE 0

#define OCSP_TRY_LATER_RESPONSE 3

#define OCSP_UNAUTHORIZED_RESPONSE 6

#define OPAQUEKEYBLOB 9

#define PKCS12_ALLOW_OVERWRITE_KEY 16384

#define PKCS12_ALWAYS_CNG_KSP 512

#define PKCS12_EXPORT_RESERVED_MASK 4294901760

#define PKCS12_IMPORT_RESERVED_MASK 4294901760

#define PKCS12_INCLUDE_EXTENDED_PROPERTIES 16

#define PKCS12_NO_PERSIST_KEY 32768

#define PKCS12_PREFER_CNG_KSP 256

#define PKCS5_PADDING 1

#define PKCS7_SIGNER_INFO 500

#define PKCS_7_ASN_ENCODING 65536

#define PKCS_7_NDR_ENCODING 131072

#define PKCS_ATTRIBUTE 22

#define PKCS_ATTRIBUTES 48

#define PKCS_CONTENT_INFO 33

#define PKCS_CONTENT_INFO_SEQUENCE_OF_ANY 23

#define PKCS_CTL 37

#define PKCS_ENCRYPTED_PRIVATE_KEY_INFO 45

#define PKCS_PRIVATE_KEY_INFO 44

#define PKCS_RC2_CBC_PARAMETERS 41

#define PKCS_RSA_PRIVATE_KEY 43

#define PKCS_RSA_SSA_PSS_PARAMETERS 75

#define PKCS_RSA_SSA_PSS_TRAILER_FIELD_BC 1

#define PKCS_RSAES_OAEP_PARAMETERS 76

#define PKCS_SMIME_CAPABILITIES 42

#define PKCS_SORTED_CTL 49

#define PKCS_TIME_REQUEST 18

#define PKCS_UTC_TIME 17

#define PLAINTEXTKEYBLOB 8

#define PP_ADMIN_PIN 31

#define PP_APPLI_CERT 18

#define PP_CERTCHAIN 9

#define PP_CHANGE_PASSWORD 7

#define PP_CLIENT_HWND 1

#define PP_CONTAINER 6

#define PP_CONTEXT_INFO 11

#define PP_DELETEKEY 24

#define PP_ENUMALGS 1

#define PP_ENUMALGS_EX 22

#define PP_ENUMCONTAINERS 2

#define PP_ENUMELECTROOTS 26

#define PP_ENUMEX_SIGNING_PROT 40

#define PP_ENUMMANDROOTS 25

#define PP_IMPTYPE 3

#define PP_KEY_TYPE_SUBTYPE 10

#define PP_KEYEXCHANGE_ALG 14

#define PP_KEYEXCHANGE_KEYSIZE 12

#define PP_KEYEXCHANGE_PIN 32

#define PP_KEYSET_SEC_DESCR 8

#define PP_KEYSET_TYPE 27

#define PP_KEYSPEC 39

#define PP_KEYSTORAGE 17

#define PP_KEYX_KEYSIZE_INC 35

#define PP_NAME 4

#define PP_PIN_PROMPT_STRING 44

#define PP_PROVTYPE 16

#define PP_ROOT_CERTSTORE 46

#define PP_SECURE_KEYEXCHANGE_PIN 47

#define PP_SECURE_SIGNATURE_PIN 48

#define PP_SESSION_KEYSIZE 20

#define PP_SGC_INFO 37

#define PP_SIG_KEYSIZE_INC 34

#define PP_SIGNATURE_ALG 15

#define PP_SIGNATURE_KEYSIZE 13

#define PP_SIGNATURE_PIN 33

#define PP_SMARTCARD_GUID 45

#define PP_SMARTCARD_READER 43

#define PP_SYM_KEYSIZE 19

#define PP_UI_PROMPT 21

#define PP_UNIQUE_CONTAINER 36

#define PP_USE_HARDWARE_RNG 38

#define PP_USER_CERTSTORE 42

#define PP_VERSION 5

#define PRIVATEKEYBLOB 7

#define PROV_DH_SCHANNEL 18

#define PROV_DSS 3

#define PROV_DSS_DH 13

#define PROV_EC_ECDSA_FULL 16

#define PROV_EC_ECDSA_SIG 14

#define PROV_EC_ECNRA_FULL 17

#define PROV_EC_ECNRA_SIG 15

#define PROV_FORTEZZA 4

#define PROV_INTEL_SEC 22

#define PROV_MS_EXCHANGE 5

#define PROV_RNG 21

#define PROV_RSA_FULL 1

#define PROV_RSA_SCHANNEL 12

#define PROV_RSA_SIG 2

#define PROV_SPYRUS_LYNKS 20

#define PROV_SSL 6

#define PROV_STT_ACQ 8

#define PROV_STT_BRND 9

#define PROV_STT_ISS 11

#define PROV_STT_MER 7

#define PROV_STT_ROOT 10

#define PUBLICKEYBLOB 6

#define PUBLICKEYBLOBEX 10

#define RANDOM_PADDING 2

#define REPORT_NO_PRIVATE_KEY 1

#define REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY 2

#define REVOCATION_OID_CRL_REVOCATION 1

#define RSA1024BIT_KEY 67108864

#define RSA_CSP_PUBLICKEYBLOB 19

#define SCHANNEL_ENC_KEY 1

#define SCHANNEL_MAC_KEY 0

#define SIGNATURE_RESOURCE_NUMBER 666

#define SIMPLEBLOB 1

#define SORTED_CTL_EXT_COUNT_OFFSET 4

#define SORTED_CTL_EXT_FLAGS_OFFSET 0

#define SORTED_CTL_EXT_HASH_BUCKET_OFFSET 12

#define SORTED_CTL_EXT_HASHED_SUBJECT_IDENTIFIER_FLAG 1

#define SORTED_CTL_EXT_MAX_COLLISION_OFFSET 8

#define SYMMETRICWRAPKEYBLOB 11

#define TIME_VALID_OID_FLUSH_CRL 2

#define TIME_VALID_OID_FLUSH_CRL_FROM_CERT 3

#define TIME_VALID_OID_FLUSH_CTL 1

#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT 4

#define TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL 5

#define TIME_VALID_OID_GET_CRL 2

#define TIME_VALID_OID_GET_CRL_FROM_CERT 3

#define TIME_VALID_OID_GET_CTL 1

#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT 4

#define TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL 5

#define TIMESTAMP_INFO 80

#define TIMESTAMP_REQUEST 78

#define TIMESTAMP_RESPONSE 79

#define URL_OID_CERTIFICATE_CRL_DIST_POINT 2

#define URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP 11

#define URL_OID_CERTIFICATE_FRESHEST_CRL 6

#define URL_OID_CERTIFICATE_ISSUER 1

#define URL_OID_CERTIFICATE_OCSP 9

#define URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT 10

#define URL_OID_CERTIFICATE_ONLY_OCSP 13

#define URL_OID_CRL_FRESHEST_CRL 7

#define URL_OID_CRL_ISSUER 5

#define URL_OID_CROSS_CERT_DIST_POINT 8

#define URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS 12

#define URL_OID_CTL_ISSUER 3

#define URL_OID_CTL_NEXT_UPDATE 4

#define USAGE_MATCH_TYPE_AND 0

#define USAGE_MATCH_TYPE_OR 1

#define X509_ALGORITHM_IDENTIFIER 74

#define X509_ALTERNATE_NAME 12

#define X509_ANY_STRING 6

#define X509_ASN_ENCODING 1

#define X509_AUTHORITY_INFO_ACCESS 32

#define X509_AUTHORITY_KEY_ID 9

#define X509_AUTHORITY_KEY_ID2 31

#define X509_BASIC_CONSTRAINTS 13

#define X509_BASIC_CONSTRAINTS2 15

#define X509_BIOMETRIC_EXT 71

#define X509_BITS 26

#define X509_BITS_WITHOUT_TRAILING_ZEROES 51

#define X509_CERT 1

#define X509_CERT_BUNDLE 81

#define X509_CERT_CRL_TO_BE_SIGNED 3

#define X509_CERT_PAIR 53

#define X509_CERT_POLICIES 16

#define X509_CERT_REQUEST_TO_BE_SIGNED 4

#define X509_CERT_TO_BE_SIGNED 2

#define X509_CERTIFICATE_TEMPLATE 64

#define X509_CHOICE_OF_TIME 30

#define X509_CRL_DIST_POINTS 35

#define X509_CRL_REASON_CODE 29

#define X509_CROSS_CERT_DIST_POINTS 58

#define X509_DH_PARAMETERS 47

#define X509_DH_PUBLICKEY 38

#define X509_DSS_PARAMETERS 39

#define X509_DSS_PUBLICKEY 38

#define X509_DSS_SIGNATURE 40

#define X509_ECC_SIGNATURE 47

#define X509_ENHANCED_KEY_USAGE 36

#define X509_ENUMERATED 29

#define X509_EXTENSIONS 5

#define X509_INTEGER 27

#define X509_ISSUING_DIST_POINT 54

#define X509_KEY_ATTRIBUTES 10

#define X509_KEY_USAGE 14

#define X509_KEY_USAGE_RESTRICTION 11

#define X509_KEYGEN_REQUEST_TO_BE_SIGNED 21

#define X509_LOGOTYPE_EXT 70

#define X509_MULTI_BYTE_INTEGER 28

#define X509_MULTI_BYTE_UINT 38

#define X509_NAME 7

#define X509_NAME_CONSTRAINTS 55

#define X509_NAME_VALUE 6

#define X509_NDR_ENCODING 2

#define X509_OBJECT_IDENTIFIER 73

#define X509_OCTET_STRING 25

#define X509_PKIX_POLICY_QUALIFIER_USERNOTICE 46

#define X509_POLICY_CONSTRAINTS 57

#define X509_POLICY_MAPPINGS 56

#define X509_PUBLIC_KEY_INFO 8

#define X509_QC_STATEMENTS_EXT 42

#define X509_SEQUENCE_OF_ANY 34

#define X509_SUBJECT_INFO_ACCESS 32

#define X509_UNICODE_ANY_STRING 24

#define X509_UNICODE_NAME 20

#define X509_UNICODE_NAME_VALUE 24

#define X942_DH_PARAMETERS 50

#define X942_OTHER_INFO 52

#define ZERO_PADDING 3

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *P_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _CMSG_SIGNER_INFO * PCMSG_SIGNER_INFO;

struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRegPolicySettings;
    PCMSG_SIGNER_INFO pSignerInfo;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *P_AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    BOOL fCommercial;
};

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *P_AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRegPolicySettings;
    BOOL fCommercial;
};

typedef struct _CERT_ACCESS_DESCRIPTION _CERT_ACCESS_DESCRIPTION, *P_CERT_ACCESS_DESCRIPTION;

typedef struct _CERT_ALT_NAME_ENTRY _CERT_ALT_NAME_ENTRY, *P_CERT_ALT_NAME_ENTRY;

typedef struct _CERT_ALT_NAME_ENTRY CERT_ALT_NAME_ENTRY;

typedef union _union_1378 _union_1378, *P_union_1378;

typedef struct _CERT_OTHER_NAME _CERT_OTHER_NAME, *P_CERT_OTHER_NAME;

typedef struct _CERT_OTHER_NAME * PCERT_OTHER_NAME;

union _union_1378 {
    PCERT_OTHER_NAME pOtherName;
    LPWSTR pwszRfc822Name;
    LPWSTR pwszDNSName;
    CERT_NAME_BLOB DirectoryName;
    LPWSTR pwszURL;
    CRYPT_DATA_BLOB IPAddress;
    LPSTR pszRegisteredID;
};

struct _CERT_ALT_NAME_ENTRY {
    DWORD dwAltNameChoice;
    union _union_1378 u;
};

struct _CERT_ACCESS_DESCRIPTION {
    LPSTR pszAccessMethod;
    CERT_ALT_NAME_ENTRY AccessLocation;
};

struct _CERT_OTHER_NAME {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

typedef struct _CERT_ALT_NAME_INFO _CERT_ALT_NAME_INFO, *P_CERT_ALT_NAME_INFO;

typedef struct _CERT_ALT_NAME_ENTRY * PCERT_ALT_NAME_ENTRY;

struct _CERT_ALT_NAME_INFO {
    DWORD cAltEntry;
    PCERT_ALT_NAME_ENTRY rgAltEntry;
};

typedef struct _CERT_AUTHORITY_INFO_ACCESS _CERT_AUTHORITY_INFO_ACCESS, *P_CERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_ACCESS_DESCRIPTION * PCERT_ACCESS_DESCRIPTION;

struct _CERT_AUTHORITY_INFO_ACCESS {
    DWORD cAccDescr;
    PCERT_ACCESS_DESCRIPTION rgAccDescr;
};

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO _CERT_AUTHORITY_KEY_ID2_INFO, *P_CERT_AUTHORITY_KEY_ID2_INFO;

typedef struct _CERT_ALT_NAME_INFO CERT_ALT_NAME_INFO;

struct _CERT_AUTHORITY_KEY_ID2_INFO {
    CRYPT_DATA_BLOB KeyId;
    CERT_ALT_NAME_INFO AuthorityCertIssuer;
    CRYPT_INTEGER_BLOB AuthorityCertSerialNumber;
};

typedef struct _CERT_AUTHORITY_KEY_ID_INFO _CERT_AUTHORITY_KEY_ID_INFO, *P_CERT_AUTHORITY_KEY_ID_INFO;

struct _CERT_AUTHORITY_KEY_ID_INFO {
    CRYPT_DATA_BLOB KeyId;
    CERT_NAME_BLOB CertIssuer;
    CRYPT_INTEGER_BLOB CertSerialNumber;
};

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO _CERT_BASIC_CONSTRAINTS2_INFO, *P_CERT_BASIC_CONSTRAINTS2_INFO;

struct _CERT_BASIC_CONSTRAINTS2_INFO {
    BOOL fCA;
    BOOL fPathLenConstraint;
    DWORD dwPathLenConstraint;
};

typedef struct _CERT_BASIC_CONSTRAINTS_INFO _CERT_BASIC_CONSTRAINTS_INFO, *P_CERT_BASIC_CONSTRAINTS_INFO;

struct _CERT_BASIC_CONSTRAINTS_INFO {
    CRYPT_BIT_BLOB SubjectType;
    BOOL fPathLenConstraint;
    DWORD dwPathLenConstraint;
    DWORD cSubtreesConstraint;
    CERT_NAME_BLOB * rgSubtreesConstraint;
};

typedef struct _CERT_BIOMETRIC_DATA _CERT_BIOMETRIC_DATA, *P_CERT_BIOMETRIC_DATA;

typedef union _union_1451 _union_1451, *P_union_1451;

typedef struct _CERT_HASHED_URL _CERT_HASHED_URL, *P_CERT_HASHED_URL;

typedef struct _CERT_HASHED_URL CERT_HASHED_URL;

union _union_1451 {
    DWORD dwPredefined;
    LPSTR pszObjId;
};

struct _CERT_HASHED_URL {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_HASH_BLOB Hash;
    LPWSTR pwszUrl;
};

struct _CERT_BIOMETRIC_DATA {
    DWORD dwTypeOfBiometricDataChoice;
    union _union_1451 u;
    CERT_HASHED_URL HashedUrl;
};

typedef struct _CERT_BIOMETRIC_EXT_INFO _CERT_BIOMETRIC_EXT_INFO, *P_CERT_BIOMETRIC_EXT_INFO;

typedef struct _CERT_BIOMETRIC_DATA * PCERT_BIOMETRIC_DATA;

struct _CERT_BIOMETRIC_EXT_INFO {
    DWORD cBiometricData;
    PCERT_BIOMETRIC_DATA rgBiometricData;
};

typedef struct _CERT_CHAIN _CERT_CHAIN, *P_CERT_CHAIN;

typedef struct _CRYPTOAPI_BLOB * PCERT_BLOB;

typedef struct _CRYPT_KEY_PROV_INFO CRYPT_KEY_PROV_INFO;

struct _CERT_CHAIN {
    DWORD cCerts;
    PCERT_BLOB certs;
    CRYPT_KEY_PROV_INFO keyLocatorInfo;
};

typedef struct _CERT_CHAIN_ENGINE_CONFIG _CERT_CHAIN_ENGINE_CONFIG, *P_CERT_CHAIN_ENGINE_CONFIG;

struct _CERT_CHAIN_ENGINE_CONFIG {
    DWORD cbSize;
    HCERTSTORE hRestrictedRoot;
    HCERTSTORE hRestrictedTrust;
    HCERTSTORE hRestrictedOther;
    DWORD cAdditionalStore;
    HCERTSTORE * rghAdditionalStore;
    DWORD dwFlags;
    DWORD dwUrlRetrievalTimeout;
    DWORD MaximumCachedCertificates;
    DWORD CycleDetectionModulus;
};

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA _CERT_CHAIN_FIND_BY_ISSUER_PARA, *P_CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef BOOL (* PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK)(PCCERT_CONTEXT, void *);

struct _CERT_CHAIN_FIND_BY_ISSUER_PARA {
    DWORD cbSize;
    LPCSTR pszUsageIdentifier;
    DWORD dwKeySpec;
    DWORD dwAcquirePrivateKeyFlags;
    DWORD cIssuer;
    CERT_NAME_BLOB * rgIssuer;
    PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK pfnFindCallback;
    void * pvFindArg;
};

typedef struct _CERT_CHAIN_PARA _CERT_CHAIN_PARA, *P_CERT_CHAIN_PARA;

typedef struct _CERT_USAGE_MATCH CERT_USAGE_MATCH;

struct _CERT_CHAIN_PARA {
    DWORD cbSize;
    CERT_USAGE_MATCH RequestedUsage;
};

typedef struct _CERT_CHAIN_POLICY_PARA _CERT_CHAIN_POLICY_PARA, *P_CERT_CHAIN_POLICY_PARA;

struct _CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwFlags;
    void * pvExtraPolicyPara;
};

typedef struct _CERT_CHAIN_POLICY_STATUS _CERT_CHAIN_POLICY_STATUS, *P_CERT_CHAIN_POLICY_STATUS;

struct _CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    DWORD dwError;
    LONG lChainIndex;
    LONG lElementIndex;
    void * pvExtraPolicyStatus;
};

typedef struct _CERT_CREATE_CONTEXT_PARA _CERT_CREATE_CONTEXT_PARA, *P_CERT_CREATE_CONTEXT_PARA;

typedef void (* PFN_CRYPT_FREE)(LPVOID);

typedef BOOL (* PFN_CERT_CREATE_CONTEXT_SORT_FUNC)(DWORD, DWORD, DWORD, void *);

struct _CERT_CREATE_CONTEXT_PARA {
    DWORD cbSize;
    PFN_CRYPT_FREE pfnFree;
    void * pvFree;
    PFN_CERT_CREATE_CONTEXT_SORT_FUNC pfnSort;
    void * pvSort;
};

typedef struct _CERT_CRL_CONTEXT_PAIR _CERT_CRL_CONTEXT_PAIR, *P_CERT_CRL_CONTEXT_PAIR;

struct _CERT_CRL_CONTEXT_PAIR {
    PCCERT_CONTEXT pCertContext;
    PCCRL_CONTEXT pCrlContext;
};

typedef struct _CERT_DH_PARAMETERS _CERT_DH_PARAMETERS, *P_CERT_DH_PARAMETERS;

typedef struct _CRYPTOAPI_BLOB CRYPT_UINT_BLOB;

struct _CERT_DH_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB g;
};

typedef struct _CERT_DSS_PARAMETERS _CERT_DSS_PARAMETERS, *P_CERT_DSS_PARAMETERS;

struct _CERT_DSS_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB q;
    CRYPT_UINT_BLOB g;
};

typedef struct _CERT_ECC_SIGNATURE _CERT_ECC_SIGNATURE, *P_CERT_ECC_SIGNATURE;

struct _CERT_ECC_SIGNATURE {
    CRYPT_UINT_BLOB r;
    CRYPT_UINT_BLOB s;
};

typedef struct _CERT_EXTENSIONS _CERT_EXTENSIONS, *P_CERT_EXTENSIONS;

struct _CERT_EXTENSIONS {
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CERT_FORTEZZA_DATA_PROP _CERT_FORTEZZA_DATA_PROP, *P_CERT_FORTEZZA_DATA_PROP;

struct _CERT_FORTEZZA_DATA_PROP {
    uchar SerialNumber[8];
    int CertIndex;
    uchar CertLabel[36];
};

typedef struct _CERT_GENERAL_SUBTREE _CERT_GENERAL_SUBTREE, *P_CERT_GENERAL_SUBTREE;

struct _CERT_GENERAL_SUBTREE {
    CERT_ALT_NAME_ENTRY Base;
    DWORD dwMinimum;
    BOOL fMaximum;
    DWORD dwMaximum;
};

typedef struct _CERT_ID _CERT_ID, *P_CERT_ID;

typedef union _union_1470 _union_1470, *P_union_1470;

typedef struct _CERT_ISSUER_SERIAL_NUMBER _CERT_ISSUER_SERIAL_NUMBER, *P_CERT_ISSUER_SERIAL_NUMBER;

typedef struct _CERT_ISSUER_SERIAL_NUMBER CERT_ISSUER_SERIAL_NUMBER;

struct _CERT_ISSUER_SERIAL_NUMBER {
    CERT_NAME_BLOB Issuer;
    CRYPT_INTEGER_BLOB SerialNumber;
};

union _union_1470 {
    CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    CRYPT_HASH_BLOB KeyId;
    CRYPT_HASH_BLOB HashId;
};

struct _CERT_ID {
    DWORD dwIdChoice;
    union _union_1470 u;
};

typedef struct _CERT_KEY_ATTRIBUTES_INFO _CERT_KEY_ATTRIBUTES_INFO, *P_CERT_KEY_ATTRIBUTES_INFO;

typedef struct _CERT_PRIVATE_KEY_VALIDITY _CERT_PRIVATE_KEY_VALIDITY, *P_CERT_PRIVATE_KEY_VALIDITY;

typedef struct _CERT_PRIVATE_KEY_VALIDITY * PCERT_PRIVATE_KEY_VALIDITY;

struct _CERT_PRIVATE_KEY_VALIDITY {
    FILETIME NotBefore;
    FILETIME NotAfter;
};

struct _CERT_KEY_ATTRIBUTES_INFO {
    CRYPT_DATA_BLOB KeyId;
    CRYPT_BIT_BLOB IntendedKeyUsage;
    PCERT_PRIVATE_KEY_VALIDITY pPrivateKeyUsagePeriod;
};

typedef struct _CERT_KEY_CONTEXT _CERT_KEY_CONTEXT, *P_CERT_KEY_CONTEXT;

typedef union _union_1525 _union_1525, *P_union_1525;

union _union_1525 {
    HCRYPTPROV hCryptProv;
    NCRYPT_KEY_HANDLE hNCryptKey;
};

struct _CERT_KEY_CONTEXT {
    DWORD cbSize;
    union _union_1525 u;
    DWORD dwKeySpec;
};

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO _CERT_KEY_USAGE_RESTRICTION_INFO, *P_CERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_POLICY_ID _CERT_POLICY_ID, *P_CERT_POLICY_ID;

typedef struct _CERT_POLICY_ID * PCERT_POLICY_ID;

struct _CERT_KEY_USAGE_RESTRICTION_INFO {
    DWORD cCertPolicyId;
    PCERT_POLICY_ID rgCertPolicyId;
    CRYPT_BIT_BLOB RestrictedKeyUsage;
};

struct _CERT_POLICY_ID {
    DWORD cCertPolicyElementId;
    LPSTR * rgpszCertPolicyElementId;
};

typedef struct _CERT_KEYGEN_REQUEST_INFO _CERT_KEYGEN_REQUEST_INFO, *P_CERT_KEYGEN_REQUEST_INFO;

struct _CERT_KEYGEN_REQUEST_INFO {
    DWORD dwVersion;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    LPWSTR pwszChallengeString;
};

typedef struct _CERT_LDAP_STORE_OPENED_PARA _CERT_LDAP_STORE_OPENED_PARA, *P_CERT_LDAP_STORE_OPENED_PARA;

struct _CERT_LDAP_STORE_OPENED_PARA {
    void * pvLdapSessionHandle;
    LPCWSTR pwszLdapUrl;
};

typedef struct _CERT_LOGOTYPE_AUDIO _CERT_LOGOTYPE_AUDIO, *P_CERT_LOGOTYPE_AUDIO;

typedef struct _CERT_LOGOTYPE_DETAILS _CERT_LOGOTYPE_DETAILS, *P_CERT_LOGOTYPE_DETAILS;

typedef struct _CERT_LOGOTYPE_DETAILS CERT_LOGOTYPE_DETAILS;

typedef struct _CERT_LOGOTYPE_AUDIO_INFO _CERT_LOGOTYPE_AUDIO_INFO, *P_CERT_LOGOTYPE_AUDIO_INFO;

typedef struct _CERT_LOGOTYPE_AUDIO_INFO * PCERT_LOGOTYPE_AUDIO_INFO;

typedef struct _CERT_HASHED_URL * PCERT_HASHED_URL;

struct _CERT_LOGOTYPE_DETAILS {
    LPWSTR pwszMimeType;
    DWORD cHashedUrl;
    PCERT_HASHED_URL rgHashedUrl;
};

struct _CERT_LOGOTYPE_AUDIO {
    CERT_LOGOTYPE_DETAILS LogotypeDetails;
    PCERT_LOGOTYPE_AUDIO_INFO pLogotypeAudioInfo;
};

struct _CERT_LOGOTYPE_AUDIO_INFO {
    DWORD dwFileSize;
    DWORD dwPlayTime;
    DWORD dwChannels;
    DWORD dwSampleRate;
    LPWSTR pwszLanguage;
};

typedef struct _CERT_LOGOTYPE_DATA _CERT_LOGOTYPE_DATA, *P_CERT_LOGOTYPE_DATA;

typedef struct _CERT_LOGOTYPE_IMAGE _CERT_LOGOTYPE_IMAGE, *P_CERT_LOGOTYPE_IMAGE;

typedef struct _CERT_LOGOTYPE_IMAGE * PCERT_LOGOTYPE_IMAGE;

typedef struct _CERT_LOGOTYPE_AUDIO * PCERT_LOGOTYPE_AUDIO;

typedef struct _CERT_LOGOTYPE_IMAGE_INFO _CERT_LOGOTYPE_IMAGE_INFO, *P_CERT_LOGOTYPE_IMAGE_INFO;

typedef struct _CERT_LOGOTYPE_IMAGE_INFO * PCERT_LOGOTYPE_IMAGE_INFO;

typedef union _union_1441 _union_1441, *P_union_1441;

struct _CERT_LOGOTYPE_IMAGE {
    CERT_LOGOTYPE_DETAILS LogotypeDetails;
    PCERT_LOGOTYPE_IMAGE_INFO pLogotypeImageInfo;
};

struct _CERT_LOGOTYPE_DATA {
    DWORD cLogotypeImage;
    PCERT_LOGOTYPE_IMAGE rgLogotypeImage;
    DWORD cLogotypeAudio;
    PCERT_LOGOTYPE_AUDIO rgLogotypeAudio;
};

union _union_1441 {
    DWORD dwNumBits;
    DWORD dwTableSize;
};

struct _CERT_LOGOTYPE_IMAGE_INFO {
    DWORD dwLogotypeImageInfoChoice;
    DWORD dwFileSize;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwLogotypeImageResolutionChoice;
    union _union_1441 u;
    LPWSTR pwszLanguage;
};

typedef struct _CERT_LOGOTYPE_EXT_INFO _CERT_LOGOTYPE_EXT_INFO, *P_CERT_LOGOTYPE_EXT_INFO;

typedef struct _CERT_LOGOTYPE_INFO _CERT_LOGOTYPE_INFO, *P_CERT_LOGOTYPE_INFO;

typedef struct _CERT_LOGOTYPE_INFO * PCERT_LOGOTYPE_INFO;

typedef struct _CERT_OTHER_LOGOTYPE_INFO _CERT_OTHER_LOGOTYPE_INFO, *P_CERT_OTHER_LOGOTYPE_INFO;

typedef struct _CERT_OTHER_LOGOTYPE_INFO * PCERT_OTHER_LOGOTYPE_INFO;

typedef union _union_1447 _union_1447, *P_union_1447;

typedef struct _CERT_LOGOTYPE_INFO CERT_LOGOTYPE_INFO;

typedef struct _CERT_LOGOTYPE_DATA * PCERT_LOGOTYPE_DATA;

typedef struct _CERT_LOGOTYPE_REFERENCE _CERT_LOGOTYPE_REFERENCE, *P_CERT_LOGOTYPE_REFERENCE;

typedef struct _CERT_LOGOTYPE_REFERENCE * PCERT_LOGOTYPE_REFERENCE;

struct _CERT_LOGOTYPE_REFERENCE {
    DWORD cHashedUrl;
    PCERT_HASHED_URL rgHashedUrl;
};

union _union_1447 {
    PCERT_LOGOTYPE_DATA pLogotypeDirectInfo;
    PCERT_LOGOTYPE_REFERENCE pLogotypeIndirectInfo;
};

struct _CERT_LOGOTYPE_INFO {
    DWORD dwLogotypeInfoChoice;
    union _union_1447 u;
};

struct _CERT_LOGOTYPE_EXT_INFO {
    DWORD cCommunityLogo;
    PCERT_LOGOTYPE_INFO rgCommunityLogo;
    PCERT_LOGOTYPE_INFO pIssuerLogo;
    PCERT_LOGOTYPE_INFO pSubjectLogo;
    DWORD cOtherLogo;
    PCERT_OTHER_LOGOTYPE_INFO rgOtherLogo;
};

struct _CERT_OTHER_LOGOTYPE_INFO {
    LPSTR pszObjId;
    CERT_LOGOTYPE_INFO LogotypeInfo;
};

typedef struct _CERT_NAME_CONSTRAINTS_INFO _CERT_NAME_CONSTRAINTS_INFO, *P_CERT_NAME_CONSTRAINTS_INFO;

typedef struct _CERT_GENERAL_SUBTREE * PCERT_GENERAL_SUBTREE;

struct _CERT_NAME_CONSTRAINTS_INFO {
    DWORD cPermittedSubtree;
    PCERT_GENERAL_SUBTREE rgPermittedSubtree;
    DWORD cExcludedSubtree;
    PCERT_GENERAL_SUBTREE rgExcludedSubtree;
};

typedef struct _CERT_NAME_INFO _CERT_NAME_INFO, *P_CERT_NAME_INFO;

typedef struct _CERT_RDN _CERT_RDN, *P_CERT_RDN;

typedef struct _CERT_RDN * PCERT_RDN;

typedef struct _CERT_RDN_ATTR _CERT_RDN_ATTR, *P_CERT_RDN_ATTR;

typedef struct _CERT_RDN_ATTR * PCERT_RDN_ATTR;

typedef struct _CRYPTOAPI_BLOB CERT_RDN_VALUE_BLOB;

struct _CERT_RDN_ATTR {
    LPSTR pszObjId;
    DWORD dwValueType;
    CERT_RDN_VALUE_BLOB Value;
};

struct _CERT_NAME_INFO {
    DWORD cRDN;
    PCERT_RDN rgRDN;
};

struct _CERT_RDN {
    DWORD cRDNAttr;
    PCERT_RDN_ATTR rgRDNAttr;
};

typedef struct _CERT_NAME_VALUE _CERT_NAME_VALUE, *P_CERT_NAME_VALUE;

struct _CERT_NAME_VALUE {
    DWORD dwValueType;
    CERT_RDN_VALUE_BLOB Value;
};

typedef struct _CERT_OR_CRL_BLOB _CERT_OR_CRL_BLOB, *P_CERT_OR_CRL_BLOB;

struct _CERT_OR_CRL_BLOB {
    DWORD dwChoice;
    DWORD cbEncoded;
    BYTE * pbEncoded;
};

typedef struct _CERT_OR_CRL_BUNDLE _CERT_OR_CRL_BUNDLE, *P_CERT_OR_CRL_BUNDLE;

typedef struct _CERT_OR_CRL_BLOB * PCERT_OR_CRL_BLOB;

struct _CERT_OR_CRL_BUNDLE {
    DWORD cItem;
    PCERT_OR_CRL_BLOB rgItem;
};

typedef struct _CERT_PAIR _CERT_PAIR, *P_CERT_PAIR;

typedef struct _CRYPTOAPI_BLOB CERT_BLOB;

struct _CERT_PAIR {
    CERT_BLOB Forward;
    CERT_BLOB Reverse;
};

typedef struct _CERT_PHYSICAL_STORE_INFO _CERT_PHYSICAL_STORE_INFO, *P_CERT_PHYSICAL_STORE_INFO;

struct _CERT_PHYSICAL_STORE_INFO {
    DWORD cbSize;
    LPSTR pszOpenStoreProvider;
    DWORD dwOpenEncodingType;
    DWORD dwOpenFlags;
    CRYPT_DATA_BLOB OpenParameters;
    DWORD dwFlags;
    DWORD dwPriority;
};

typedef struct _CERT_POLICIES_INFO _CERT_POLICIES_INFO, *P_CERT_POLICIES_INFO;

typedef struct _CERT_POLICY_INFO _CERT_POLICY_INFO, *P_CERT_POLICY_INFO;

typedef struct _CERT_POLICY_INFO CERT_POLICY_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO _CERT_POLICY_QUALIFIER_INFO, *P_CERT_POLICY_QUALIFIER_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO CERT_POLICY_QUALIFIER_INFO;

struct _CERT_POLICY_INFO {
    LPSTR pszPolicyIdentifier;
    DWORD cPolicyQualifier;
    CERT_POLICY_QUALIFIER_INFO * rgPolicyQualifier;
};

struct _CERT_POLICIES_INFO {
    DWORD cPolicyInfo;
    CERT_POLICY_INFO * rgPolicyInfo;
};

struct _CERT_POLICY_QUALIFIER_INFO {
    LPSTR pszPolicyQualifierId;
    CRYPT_OBJID_BLOB Qualifier;
};

typedef struct _CERT_POLICY95_QUALIFIER1 _CERT_POLICY95_QUALIFIER1, *P_CERT_POLICY95_QUALIFIER1;

typedef struct _CPS_URLS _CPS_URLS, *P_CPS_URLS;

typedef struct _CPS_URLS CPS_URLS;

struct _CERT_POLICY95_QUALIFIER1 {
    LPWSTR pszPracticesReference;
    LPSTR pszNoticeIdentifier;
    LPSTR pszNSINoticeIdentifier;
    DWORD cCPSURLs;
    CPS_URLS * rgCPSURLs;
};

struct _CPS_URLS {
    LPWSTR pszURL;
    CRYPT_ALGORITHM_IDENTIFIER * pAlgorithm;
    CRYPT_DATA_BLOB * pDigest;
};

typedef struct _CERT_POLICY_CONSTRAINTS_INFO _CERT_POLICY_CONSTRAINTS_INFO, *P_CERT_POLICY_CONSTRAINTS_INFO;

struct _CERT_POLICY_CONSTRAINTS_INFO {
    BOOL fRequireExplicitPolicy;
    DWORD dwRequireExplicitPolicySkipCerts;
    BOOL fInhibitPolicyMapping;
    DWORD dwInhibitPolicyMappingSkipCerts;
};

typedef struct _CERT_POLICY_MAPPING _CERT_POLICY_MAPPING, *P_CERT_POLICY_MAPPING;

struct _CERT_POLICY_MAPPING {
    LPSTR pszIssuerDomainPolicy;
    LPSTR pszSubjectDomainPolicy;
};

typedef struct _CERT_POLICY_MAPPINGS_INFO _CERT_POLICY_MAPPINGS_INFO, *P_CERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_POLICY_MAPPING * PCERT_POLICY_MAPPING;

struct _CERT_POLICY_MAPPINGS_INFO {
    DWORD cPolicyMapping;
    PCERT_POLICY_MAPPING rgPolicyMapping;
};

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *P_CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE {
    LPSTR pszOrganization;
    DWORD cNoticeNumbers;
    int * rgNoticeNumbers;
};

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE _CERT_POLICY_QUALIFIER_USER_NOTICE, *P_CERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

struct _CERT_POLICY_QUALIFIER_USER_NOTICE {
    CERT_POLICY_QUALIFIER_NOTICE_REFERENCE * pNoticeReference;
    LPWSTR pszDisplayText;
};

typedef struct _CERT_QC_STATEMENT _CERT_QC_STATEMENT, *P_CERT_QC_STATEMENT;

struct _CERT_QC_STATEMENT {
    LPSTR pszStatementId;
    CRYPT_OBJID_BLOB StatementInfo;
};

typedef struct _CERT_QC_STATEMENTS_EXT_INFO _CERT_QC_STATEMENTS_EXT_INFO, *P_CERT_QC_STATEMENTS_EXT_INFO;

typedef struct _CERT_QC_STATEMENT * PCERT_QC_STATEMENT;

struct _CERT_QC_STATEMENTS_EXT_INFO {
    DWORD cStatement;
    PCERT_QC_STATEMENT rgStatement;
};

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA _CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *P_CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA {
    HKEY hKeyBase;
    LPWSTR pwszRegPath;
};

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA _CERT_REGISTRY_STORE_ROAMING_PARA, *P_CERT_REGISTRY_STORE_ROAMING_PARA;

struct _CERT_REGISTRY_STORE_ROAMING_PARA {
    HKEY hKey;
    LPWSTR pwszStoreDirectory;
};

typedef struct _CERT_REQUEST_INFO _CERT_REQUEST_INFO, *P_CERT_REQUEST_INFO;

struct _CERT_REQUEST_INFO {
    DWORD dwVersion;
    CERT_NAME_BLOB Subject;
    CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CERT_REVOCATION_CHAIN_PARA _CERT_REVOCATION_CHAIN_PARA, *P_CERT_REVOCATION_CHAIN_PARA;

typedef HANDLE HCERTCHAINENGINE;

struct _CERT_REVOCATION_CHAIN_PARA {
    DWORD cbSize;
    HCERTCHAINENGINE hChainEngine;
    HCERTSTORE hAdditionalStore;
    DWORD dwChainFlags;
    DWORD dwUrlRetrievalTimeout;
    LPFILETIME pftCurrentTime;
    LPFILETIME pftCacheResync;
    DWORD cbMaxUrlRetrievalByteCount;
};

typedef struct _CERT_REVOCATION_PARA _CERT_REVOCATION_PARA, *P_CERT_REVOCATION_PARA;

struct _CERT_REVOCATION_PARA {
    DWORD cbSize;
    PCCERT_CONTEXT pIssuerCert;
    DWORD cCertStore;
    HCERTSTORE * rgCertStore;
    HCERTSTORE hCrlStore;
    LPFILETIME pftTimeToUse;
};

typedef struct _CERT_REVOCATION_STATUS _CERT_REVOCATION_STATUS, *P_CERT_REVOCATION_STATUS;

struct _CERT_REVOCATION_STATUS {
    DWORD cbSize;
    DWORD dwIndex;
    DWORD dwError;
    DWORD dwReason;
    BOOL fHasFreshnessTime;
    DWORD dwFreshnessTime;
};

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT _CERT_SERVER_OCSP_RESPONSE_CONTEXT, *P_CERT_SERVER_OCSP_RESPONSE_CONTEXT;

struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT {
    DWORD cbSize;
    BYTE * pbEncodedOcspResponse;
    DWORD cbEncodedOcspResponse;
};

typedef struct _CERT_SIGNED_CONTENT_INFO _CERT_SIGNED_CONTENT_INFO, *P_CERT_SIGNED_CONTENT_INFO;

typedef struct _CRYPTOAPI_BLOB CRYPT_DER_BLOB;

struct _CERT_SIGNED_CONTENT_INFO {
    CRYPT_DER_BLOB ToBeSigned;
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CRYPT_BIT_BLOB Signature;
};

typedef struct _CERT_STORE_PROV_FIND_INFO _CERT_STORE_PROV_FIND_INFO, *P_CERT_STORE_PROV_FIND_INFO;

struct _CERT_STORE_PROV_FIND_INFO {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    DWORD dwFindFlags;
    DWORD dwFindType;
    void * pvFindPara;
};

typedef struct _CERT_STORE_PROV_INFO _CERT_STORE_PROV_INFO, *P_CERT_STORE_PROV_INFO;

typedef void * HCERTSTOREPROV;

typedef void * HCRYPTOIDFUNCADDR;

struct _CERT_STORE_PROV_INFO {
    DWORD cbSize;
    DWORD cStoreProvFunc;
    void * * rgpvStoreProvFunc;
    HCERTSTOREPROV hStoreProv;
    DWORD dwStoreProvFlags;
    HCRYPTOIDFUNCADDR hStoreProvFuncAddr2;
};

typedef struct _CERT_SYSTEM_STORE_INFO _CERT_SYSTEM_STORE_INFO, *P_CERT_SYSTEM_STORE_INFO;

struct _CERT_SYSTEM_STORE_INFO {
    DWORD cbSize;
};

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA _CERT_SYSTEM_STORE_RELOCATE_PARA, *P_CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef union _union_1529 _union_1529, *P_union_1529;

typedef union _union_1530 _union_1530, *P_union_1530;

union _union_1529 {
    HKEY hKeyBase;
    void * pvBase;
};

union _union_1530 {
    void * pvSystemStore;
    LPCSTR pszSystemStore;
    LPCWSTR pwszSystemStore;
};

struct _CERT_SYSTEM_STORE_RELOCATE_PARA {
    union _union_1529 u;
    union _union_1530 u2;
};

typedef struct _CERT_TEMPLATE_EXT _CERT_TEMPLATE_EXT, *P_CERT_TEMPLATE_EXT;

struct _CERT_TEMPLATE_EXT {
    LPSTR pszObjId;
    DWORD dwMajorVersion;
    BOOL fMinorVersion;
    DWORD dwMinorVersion;
};

typedef struct _CERT_X942_DH_PARAMETERS _CERT_X942_DH_PARAMETERS, *P_CERT_X942_DH_PARAMETERS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS _CERT_X942_DH_VALIDATION_PARAMS, *P_CERT_X942_DH_VALIDATION_PARAMS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS * PCERT_X942_DH_VALIDATION_PARAMS;

struct _CERT_X942_DH_PARAMETERS {
    CRYPT_UINT_BLOB p;
    CRYPT_UINT_BLOB g;
    CRYPT_UINT_BLOB q;
    CRYPT_UINT_BLOB j;
    PCERT_X942_DH_VALIDATION_PARAMS pValidationParams;
};

struct _CERT_X942_DH_VALIDATION_PARAMS {
    CRYPT_BIT_BLOB seed;
    DWORD pgenCounter;
};

typedef struct _CMC_ADD_ATTRIBUTES_INFO _CMC_ADD_ATTRIBUTES_INFO, *P_CMC_ADD_ATTRIBUTES_INFO;

struct _CMC_ADD_ATTRIBUTES_INFO {
    DWORD dwCmcDataReference;
    DWORD cCertReference;
    DWORD * rgdwCertReference;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CMC_ADD_EXTENSIONS_INFO _CMC_ADD_EXTENSIONS_INFO, *P_CMC_ADD_EXTENSIONS_INFO;

struct _CMC_ADD_EXTENSIONS_INFO {
    DWORD dwCmcDataReference;
    DWORD cCertReference;
    DWORD * rgdwCertReference;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _CMC_DATA_INFO _CMC_DATA_INFO, *P_CMC_DATA_INFO;

typedef struct _CMC_TAGGED_ATTRIBUTE _CMC_TAGGED_ATTRIBUTE, *P_CMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_ATTRIBUTE * PCMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_REQUEST _CMC_TAGGED_REQUEST, *P_CMC_TAGGED_REQUEST;

typedef struct _CMC_TAGGED_REQUEST * PCMC_TAGGED_REQUEST;

typedef struct _CMC_TAGGED_CONTENT_INFO _CMC_TAGGED_CONTENT_INFO, *P_CMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_CONTENT_INFO * PCMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_OTHER_MSG _CMC_TAGGED_OTHER_MSG, *P_CMC_TAGGED_OTHER_MSG;

typedef struct _CMC_TAGGED_OTHER_MSG * PCMC_TAGGED_OTHER_MSG;

typedef struct _CRYPT_ATTRIBUTE CRYPT_ATTRIBUTE;

typedef union _union_1426 _union_1426, *P_union_1426;

typedef struct _CMC_TAGGED_CERT_REQUEST _CMC_TAGGED_CERT_REQUEST, *P_CMC_TAGGED_CERT_REQUEST;

typedef struct _CMC_TAGGED_CERT_REQUEST * PCMC_TAGGED_CERT_REQUEST;

struct _CMC_TAGGED_OTHER_MSG {
    DWORD dwBodyPartID;
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

union _union_1426 {
    PCMC_TAGGED_CERT_REQUEST pTaggedCertRequest;
};

struct _CMC_TAGGED_REQUEST {
    DWORD dwTaggedRequestChoice;
    union _union_1426 u;
};

struct _CMC_TAGGED_CONTENT_INFO {
    DWORD dwBodyPartID;
    CRYPT_DER_BLOB EncodedContentInfo;
};

struct _CMC_TAGGED_ATTRIBUTE {
    DWORD dwBodyPartID;
    CRYPT_ATTRIBUTE Attribute;
};

struct _CMC_DATA_INFO {
    DWORD cTaggedAttribute;
    PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
    DWORD cTaggedRequest;
    PCMC_TAGGED_REQUEST rgTaggedRequest;
    DWORD cTaggedContentInfo;
    PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
    DWORD cTaggedOtherMsg;
    PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
};

struct _CMC_TAGGED_CERT_REQUEST {
    DWORD dwBodyPartID;
    CRYPT_DER_BLOB SignedCertRequest;
};

typedef struct _CMC_PEND_INFO _CMC_PEND_INFO, *P_CMC_PEND_INFO;

struct _CMC_PEND_INFO {
    CRYPT_DATA_BLOB PendToken;
    FILETIME PendTime;
};

typedef struct _CMC_RESPONSE_INFO _CMC_RESPONSE_INFO, *P_CMC_RESPONSE_INFO;

struct _CMC_RESPONSE_INFO {
    DWORD cTaggedAttribute;
    PCMC_TAGGED_ATTRIBUTE rgTaggedAttribute;
    DWORD cTaggedContentInfo;
    PCMC_TAGGED_CONTENT_INFO rgTaggedContentInfo;
    DWORD cTaggedOtherMsg;
    PCMC_TAGGED_OTHER_MSG rgTaggedOtherMsg;
};

typedef struct _CMC_STATUS_INFO _CMC_STATUS_INFO, *P_CMC_STATUS_INFO;

typedef union _union_1433 _union_1433, *P_union_1433;

typedef struct _CMC_PEND_INFO * PCMC_PEND_INFO;

union _union_1433 {
    DWORD dwFailInfo;
    PCMC_PEND_INFO pPendInfo;
};

struct _CMC_STATUS_INFO {
    DWORD dwStatus;
    DWORD cBodyList;
    DWORD * rgdwBodyList;
    LPWSTR pwszStatusString;
    DWORD dwOtherInfoChoice;
    union _union_1433 u;
};

typedef struct _CMS_DH_KEY_INFO _CMS_DH_KEY_INFO, *P_CMS_DH_KEY_INFO;

typedef uint ALG_ID;

struct _CMS_DH_KEY_INFO {
    DWORD dwVersion;
    ALG_ID Algid;
    LPSTR pszContentEncObjId;
    CRYPT_DATA_BLOB PubInfo;
    void * pReserved;
};

typedef struct _CMS_KEY_INFO _CMS_KEY_INFO, *P_CMS_KEY_INFO;

struct _CMS_KEY_INFO {
    DWORD dwVersion;
    ALG_ID Algid;
    BYTE * pbOID;
    DWORD cbOID;
};

typedef struct _CMSG_CMS_RECIPIENT_INFO _CMSG_CMS_RECIPIENT_INFO, *P_CMSG_CMS_RECIPIENT_INFO;

typedef union _union_1499 _union_1499, *P_union_1499;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO _CMSG_KEY_TRANS_RECIPIENT_INFO, *P_CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO * PCMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO _CMSG_KEY_AGREE_RECIPIENT_INFO, *P_CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO * PCMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO _CMSG_MAIL_LIST_RECIPIENT_INFO, *P_CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO * PCMSG_MAIL_LIST_RECIPIENT_INFO;

typedef struct _CERT_ID CERT_ID;

typedef union _union_1496 _union_1496, *P_union_1496;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *P_CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO * PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE * PCRYPT_ATTRIBUTE_TYPE_VALUE;

struct _CMSG_KEY_TRANS_RECIPIENT_INFO {
    DWORD dwVersion;
    CERT_ID RecipientId;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
};

union _union_1496 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

struct _CMSG_MAIL_LIST_RECIPIENT_INFO {
    DWORD dwVersion;
    CRYPT_DATA_BLOB KeyId;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO {
    CERT_ID RecipientId;
    CRYPT_DATA_BLOB EncryptedKey;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

union _union_1499 {
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
};

struct _CMSG_CMS_RECIPIENT_INFO {
    DWORD dwRecipientChoice;
    union _union_1499 u;
};

struct _CMSG_KEY_AGREE_RECIPIENT_INFO {
    DWORD dwVersion;
    DWORD dwOriginatorChoice;
    union _union_1496 u;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    DWORD cRecipientEncryptedKeys;
    PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO * rgpRecipientEncryptedKeys;
};

typedef struct _CMSG_CMS_SIGNER_INFO _CMSG_CMS_SIGNER_INFO, *P_CMSG_CMS_SIGNER_INFO;

struct _CMSG_CMS_SIGNER_INFO {
    DWORD dwVersion;
    CERT_ID SignerId;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedHash;
    CRYPT_ATTRIBUTES AuthAttrs;
    CRYPT_ATTRIBUTES UnauthAttrs;
};

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO _CMSG_CNG_CONTENT_DECRYPT_INFO, *P_CMSG_CNG_CONTENT_DECRYPT_INFO;

typedef void * (* PFN_CMSG_ALLOC)(size_t);

typedef void (* PFN_CMSG_FREE)(void *);

struct _CMSG_CNG_CONTENT_DECRYPT_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    PFN_CMSG_ALLOC pfnAlloc;
    PFN_CMSG_FREE pfnFree;
    NCRYPT_KEY_HANDLE hNCryptKey;
    BYTE * pbContentEncryptKey;
    DWORD cbContentEncryptKey;
    BCRYPT_KEY_HANDLE hCNGContentEncryptKey;
    BYTE * pbCNGContentEncryptKeyObject;
};

typedef struct _CMSG_CONTENT_ENCRYPT_INFO _CMSG_CONTENT_ENCRYPT_INFO, *P_CMSG_CONTENT_ENCRYPT_INFO;

typedef ULONG_PTR HCRYPTPROV_LEGACY;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO _CMSG_RECIPIENT_ENCODE_INFO, *P_CMSG_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO * PCMSG_RECIPIENT_ENCODE_INFO;

typedef union _union_1512 _union_1512, *P_union_1512;

typedef union _union_1483 _union_1483, *P_union_1483;

typedef ULONG_PTR HCRYPTKEY;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *P_CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO * PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *P_CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO * PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *P_CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO * PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef union _union_1479 _union_1479, *P_union_1479;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *P_CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO * PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef union _union_1481 _union_1481, *P_union_1481;

typedef struct _CRYPT_ALGORITHM_IDENTIFIER * PCRYPT_ALGORITHM_IDENTIFIER;

typedef struct _CERT_ID * PCERT_ID;

struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void * pvKeyEncryptionAuxInfo;
    HCRYPTPROV_LEGACY hCryptProv;
    CRYPT_BIT_BLOB RecipientPublicKey;
    CERT_ID RecipientId;
};

union _union_1512 {
    HCRYPTKEY hContentEncryptKey;
    BCRYPT_KEY_HANDLE hCNGContentEncryptKey;
};

union _union_1479 {
    PCRYPT_ALGORITHM_IDENTIFIER pEphemeralAlgorithm;
    PCERT_ID pSenderId;
};

union _union_1483 {
    PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO pKeyTrans;
    PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO pKeyAgree;
    PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO pMailList;
};

struct _CMSG_RECIPIENT_ENCODE_INFO {
    DWORD dwRecipientChoice;
    union _union_1483 u;
};

union _union_1481 {
    HCRYPTKEY hKeyEncryptionKey;
    void * pvKeyEncryptionKey;
};

struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void * pvKeyEncryptionAuxInfo;
    HCRYPTPROV hCryptProv;
    DWORD dwKeyChoice;
    union _union_1481 u;
    CRYPT_DATA_BLOB KeyId;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    void * pvKeyEncryptionAuxInfo;
    CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
    void * pvKeyWrapAuxInfo;
    HCRYPTPROV_LEGACY hCryptProv;
    DWORD dwKeySpec;
    DWORD dwKeyChoice;
    union _union_1479 u;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    DWORD cRecipientEncryptedKeys;
    PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO * rgpRecipientEncryptedKeys;
};

struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_BIT_BLOB RecipientPublicKey;
    CERT_ID RecipientId;
    FILETIME Date;
    PCRYPT_ATTRIBUTE_TYPE_VALUE pOtherAttr;
};

struct _CMSG_CONTENT_ENCRYPT_INFO {
    DWORD cbSize;
    HCRYPTPROV_LEGACY hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void * pvEncryptionAuxInfo;
    DWORD cRecipients;
    PCMSG_RECIPIENT_ENCODE_INFO rgCmsRecipients;
    PFN_CMSG_ALLOC pfnAlloc;
    PFN_CMSG_FREE pfnFree;
    DWORD dwEncryptFlags;
    union _union_1512 u;
    DWORD dwFlags;
    BOOL fCNG;
    BYTE * pbCNGContentEncryptKeyObject;
    BYTE * pbContentEncryptKey;
    DWORD cbContentEncryptKey;
};

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *P_CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA {
    DWORD cbSize;
    DWORD dwSignerIndex;
    CRYPT_DATA_BLOB blob;
};

typedef struct _CMSG_CTRL_DECRYPT_PARA _CMSG_CTRL_DECRYPT_PARA, *P_CMSG_CTRL_DECRYPT_PARA;

typedef union _union_1502 _union_1502, *P_union_1502;

union _union_1502 {
    HCRYPTPROV hCryptProv;
    NCRYPT_KEY_HANDLE hNCryptKey;
};

struct _CMSG_CTRL_DECRYPT_PARA {
    DWORD cbSize;
    union _union_1502 u;
    DWORD dwKeySpec;
    DWORD dwRecipientIndex;
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *P_CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA {
    DWORD cbSize;
    DWORD dwSignerIndex;
    DWORD dwUnauthAttrIndex;
};

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *P_CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef union _union_1506 _union_1506, *P_union_1506;

union _union_1506 {
    HCRYPTPROV hCryptProv;
    NCRYPT_KEY_HANDLE hNCryptKey;
};

struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA {
    DWORD cbSize;
    union _union_1506 u;
    DWORD dwKeySpec;
    PCMSG_KEY_AGREE_RECIPIENT_INFO pKeyAgree;
    DWORD dwRecipientIndex;
    DWORD dwRecipientEncryptedKeyIndex;
    CRYPT_BIT_BLOB OriginatorPublicKey;
};

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *P_CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef union _union_1504 _union_1504, *P_union_1504;

union _union_1504 {
    HCRYPTPROV hCryptProv;
    NCRYPT_KEY_HANDLE hNCryptKey;
};

struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA {
    DWORD cbSize;
    union _union_1504 u;
    DWORD dwKeySpec;
    PCMSG_KEY_TRANS_RECIPIENT_INFO pKeyTrans;
    DWORD dwRecipientIndex;
};

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *P_CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef union _union_1508 _union_1508, *P_union_1508;

union _union_1508 {
    HCRYPTKEY hKeyEncryptionKey;
    void * pvKeyEncryptionKey;
};

struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA {
    DWORD cbSize;
    HCRYPTPROV hCryptProv;
    PCMSG_MAIL_LIST_RECIPIENT_INFO pMailList;
    DWORD dwRecipientIndex;
    DWORD dwKeyChoice;
    union _union_1508 u;
};

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *P_CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA {
    DWORD cbSize;
    HCRYPTPROV_LEGACY hCryptProv;
    DWORD dwSignerIndex;
    DWORD dwSignerType;
    void * pvSigner;
};

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO _CMSG_ENCRYPTED_ENCODE_INFO, *P_CMSG_ENCRYPTED_ENCODE_INFO;

struct _CMSG_ENCRYPTED_ENCODE_INFO {
    DWORD cbSize;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void * pvEncryptionAuxInfo;
};

typedef struct _CMSG_ENVELOPED_ENCODE_INFO _CMSG_ENVELOPED_ENCODE_INFO, *P_CMSG_ENVELOPED_ENCODE_INFO;

struct _CMSG_ENVELOPED_ENCODE_INFO {
    DWORD cbSize;
    HCRYPTPROV_LEGACY hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void * pvEncryptionAuxInfo;
    DWORD cRecipients;
    PCERT_INFO * rgpRecipients;
};

typedef struct _CMSG_HASHED_ENCODE_INFO _CMSG_HASHED_ENCODE_INFO, *P_CMSG_HASHED_ENCODE_INFO;

struct _CMSG_HASHED_ENCODE_INFO {
    DWORD cbSize;
    HCRYPTPROV_LEGACY hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void * pvHashAuxInfo;
};

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO _CMSG_KEY_AGREE_ENCRYPT_INFO, *P_CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef union _union_1516 _union_1516, *P_union_1516;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *P_CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO * PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO {
    DWORD cbSize;
    CRYPT_DATA_BLOB EncryptedKey;
};

union _union_1516 {
    CERT_ID OriginatorCertId;
    CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
};

struct _CMSG_KEY_AGREE_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB UserKeyingMaterial;
    DWORD dwOriginatorChoice;
    union _union_1516 u;
    DWORD cKeyAgreeKeyEncryptInfo;
    PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO * rgpKeyAgreeKeyEncryptInfo;
    DWORD dwFlags;
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO _CMSG_KEY_TRANS_ENCRYPT_INFO, *P_CMSG_KEY_TRANS_ENCRYPT_INFO;

struct _CMSG_KEY_TRANS_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    DWORD dwFlags;
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO _CMSG_MAIL_LIST_ENCRYPT_INFO, *P_CMSG_MAIL_LIST_ENCRYPT_INFO;

struct _CMSG_MAIL_LIST_ENCRYPT_INFO {
    DWORD cbSize;
    DWORD dwRecipientIndex;
    CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedKey;
    DWORD dwFlags;
};

typedef struct _CMSG_RC2_AUX_INFO _CMSG_RC2_AUX_INFO, *P_CMSG_RC2_AUX_INFO;

struct _CMSG_RC2_AUX_INFO {
    DWORD cbSize;
    DWORD dwBitLen;
};

typedef struct _CMSG_RC4_AUX_INFO _CMSG_RC4_AUX_INFO, *P_CMSG_RC4_AUX_INFO;

struct _CMSG_RC4_AUX_INFO {
    DWORD cbSize;
    DWORD dwBitLen;
};

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *P_CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO _CMSG_SIGNED_ENCODE_INFO, *P_CMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO CMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO CMSG_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO _CMSG_SIGNER_ENCODE_INFO, *P_CMSG_SIGNER_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO * PCMSG_SIGNER_ENCODE_INFO;

typedef struct _CRYPTOAPI_BLOB * PCRL_BLOB;

typedef union _union_1472 _union_1472, *P_union_1472;

struct _CMSG_SIGNED_ENCODE_INFO {
    DWORD cbSize;
    DWORD cSigners;
    PCMSG_SIGNER_ENCODE_INFO rgSigners;
    DWORD cCertEncoded;
    PCERT_BLOB rgCertEncoded;
    DWORD cCrlEncoded;
    PCRL_BLOB rgCrlEncoded;
};

union _union_1472 {
    HCRYPTPROV hCryptProv;
    NCRYPT_KEY_HANDLE hNCryptKey;
};

struct _CMSG_SIGNER_ENCODE_INFO {
    DWORD cbSize;
    PCERT_INFO pCertInfo;
    union _union_1472 u;
    DWORD dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void * pvHashAuxInfo;
    DWORD cAuthAttr;
    PCRYPT_ATTRIBUTE rgAuthAttr;
    DWORD cUnauthAttr;
    PCRYPT_ATTRIBUTE rgUnauthAttr;
};

struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO {
    DWORD cbSize;
    CMSG_SIGNED_ENCODE_INFO SignedInfo;
    CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
};

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO _CMSG_SP3_COMPATIBLE_AUX_INFO, *P_CMSG_SP3_COMPATIBLE_AUX_INFO;

struct _CMSG_SP3_COMPATIBLE_AUX_INFO {
    DWORD cbSize;
    DWORD dwFlags;
};

typedef struct _CMSG_STREAM_INFO _CMSG_STREAM_INFO, *P_CMSG_STREAM_INFO;

typedef BOOL (* PFN_CMSG_STREAM_OUTPUT)(void *, BYTE *, DWORD, BOOL);

struct _CMSG_STREAM_INFO {
    DWORD cbContent;
    PFN_CMSG_STREAM_OUTPUT pfnStreamOutput;
    void * pvArg;
};

typedef struct _CRL_DIST_POINT _CRL_DIST_POINT, *P_CRL_DIST_POINT;

typedef struct _CRL_DIST_POINT_NAME _CRL_DIST_POINT_NAME, *P_CRL_DIST_POINT_NAME;

typedef struct _CRL_DIST_POINT_NAME CRL_DIST_POINT_NAME;

typedef union _union_1399 _union_1399, *P_union_1399;

union _union_1399 {
    CERT_ALT_NAME_INFO FullName;
};

struct _CRL_DIST_POINT_NAME {
    DWORD dwDistPointNameChoice;
    union _union_1399 u;
};

struct _CRL_DIST_POINT {
    CRL_DIST_POINT_NAME DistPointName;
    CRYPT_BIT_BLOB ReasonFlags;
    CERT_ALT_NAME_INFO CRLIssuer;
};

typedef struct _CRL_DIST_POINTS_INFO _CRL_DIST_POINTS_INFO, *P_CRL_DIST_POINTS_INFO;

typedef struct _CRL_DIST_POINT * PCRL_DIST_POINT;

struct _CRL_DIST_POINTS_INFO {
    DWORD cDistPoint;
    PCRL_DIST_POINT rgDistPoint;
};

typedef struct _CRL_FIND_ISSUED_FOR_PARA _CRL_FIND_ISSUED_FOR_PARA, *P_CRL_FIND_ISSUED_FOR_PARA;

struct _CRL_FIND_ISSUED_FOR_PARA {
    PCCERT_CONTEXT pSubjectCert;
    PCCERT_CONTEXT pIssuerCert;
};

typedef struct _CRL_ISSUING_DIST_POINT _CRL_ISSUING_DIST_POINT, *P_CRL_ISSUING_DIST_POINT;

struct _CRL_ISSUING_DIST_POINT {
    CRL_DIST_POINT_NAME DistPointName;
    BOOL fOnlyContainsUserCerts;
    BOOL fOnlyContainsCACerts;
    CRYPT_BIT_BLOB OnlySomeReasonFlags;
    BOOL fIndirectCRL;
};

typedef struct _CRL_REVOCATION_INFO _CRL_REVOCATION_INFO, *P_CRL_REVOCATION_INFO;

struct _CRL_REVOCATION_INFO {
    PCRL_ENTRY pCrlEntry;
    PCCRL_CONTEXT pCrlContext;
    PCCERT_CHAIN_CONTEXT pCrlIssuerChain;
};

typedef struct _CROSS_CERT_DIST_POINTS_INFO _CROSS_CERT_DIST_POINTS_INFO, *P_CROSS_CERT_DIST_POINTS_INFO;

typedef struct _CERT_ALT_NAME_INFO * PCERT_ALT_NAME_INFO;

struct _CROSS_CERT_DIST_POINTS_INFO {
    DWORD dwSyncDeltaTime;
    DWORD cDistPoint;
    PCERT_ALT_NAME_INFO rgDistPoint;
};

typedef struct _CRYPT_AES_128_KEY_STATE _CRYPT_AES_128_KEY_STATE, *P_CRYPT_AES_128_KEY_STATE;

struct _CRYPT_AES_128_KEY_STATE {
    uchar Key[16];
    uchar IV[16];
    uchar EncryptionState[11][16];
    uchar DecryptionState[11][16];
    uchar Feedback[16];
};

typedef struct _CRYPT_AES_256_KEY_STATE _CRYPT_AES_256_KEY_STATE, *P_CRYPT_AES_256_KEY_STATE;

struct _CRYPT_AES_256_KEY_STATE {
    uchar Key[32];
    uchar IV[16];
    uchar EncryptionState[15][16];
    uchar DecryptionState[15][16];
    uchar Feedback[16];
};

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION _CRYPT_ASYNC_RETRIEVAL_COMPLETION, *P_CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef void (* PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC)(LPVOID, DWORD, LPCSTR, LPSTR, LPVOID);

struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION {
    PFN_CRYPT_ASYNC_RETRIEVAL_COMPLETION_FUNC pfnCompletion;
    LPVOID pvCompletion;
};

typedef struct _CRYPT_BLOB_ARRAY _CRYPT_BLOB_ARRAY, *P_CRYPT_BLOB_ARRAY;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_DATA_BLOB;

struct _CRYPT_BLOB_ARRAY {
    DWORD cBlob;
    PCRYPT_DATA_BLOB rgBlob;
};

typedef struct _CRYPT_CONTENT_INFO _CRYPT_CONTENT_INFO, *P_CRYPT_CONTENT_INFO;

struct _CRYPT_CONTENT_INFO {
    LPSTR pszObjId;
    CRYPT_DER_BLOB Content;
};

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *P_CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_DER_BLOB;

struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY {
    LPSTR pszObjId;
    DWORD cValue;
    PCRYPT_DER_BLOB rgValue;
};

typedef struct _CRYPT_CREDENTIALS _CRYPT_CREDENTIALS, *P_CRYPT_CREDENTIALS;

struct _CRYPT_CREDENTIALS {
    DWORD cbSize;
    LPCSTR pszCredentialsOid;
    LPVOID pvCredentials;
};

typedef struct _CRYPT_CSP_PROVIDER _CRYPT_CSP_PROVIDER, *P_CRYPT_CSP_PROVIDER;

struct _CRYPT_CSP_PROVIDER {
    DWORD dwKeySpec;
    LPWSTR pwszProviderName;
    CRYPT_BIT_BLOB Signature;
};

typedef struct _CRYPT_DECODE_PARA _CRYPT_DECODE_PARA, *P_CRYPT_DECODE_PARA;

typedef LPVOID (* PFN_CRYPT_ALLOC)(size_t);

struct _CRYPT_DECODE_PARA {
    DWORD cbSize;
    PFN_CRYPT_ALLOC pfnAlloc;
    PFN_CRYPT_FREE pfnFree;
};

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA _CRYPT_DECRYPT_MESSAGE_PARA, *P_CRYPT_DECRYPT_MESSAGE_PARA;

struct _CRYPT_DECRYPT_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    DWORD cCertStore;
    HCERTSTORE * rghCertStore;
};

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *P_CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA {
    DWORD cOID;
    LPSTR * rgpszOID;
};

typedef struct _CRYPT_ECC_CMS_SHARED_INFO _CRYPT_ECC_CMS_SHARED_INFO, *P_CRYPT_ECC_CMS_SHARED_INFO;

struct _CRYPT_ECC_CMS_SHARED_INFO {
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_DATA_BLOB EntityUInfo;
    BYTE rgbSuppPubInfo[4];
};

typedef struct _CRYPT_ENCODE_PARA _CRYPT_ENCODE_PARA, *P_CRYPT_ENCODE_PARA;

struct _CRYPT_ENCODE_PARA {
    DWORD cbSize;
    PFN_CRYPT_ALLOC pfnAlloc;
    PFN_CRYPT_FREE pfnFree;
};

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA _CRYPT_ENCRYPT_MESSAGE_PARA, *P_CRYPT_ENCRYPT_MESSAGE_PARA;

struct _CRYPT_ENCRYPT_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV_LEGACY hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
    void * pvEncryptionAuxInfo;
    DWORD dwFlags;
    DWORD dwInnerContentType;
};

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *P_CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO {
    CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
    CRYPT_DATA_BLOB EncryptedPrivateKey;
};

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR _CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *P_CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR {
    LPWSTR pwszName;
    LPWSTR pwszValue;
};

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO, *P_CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;

typedef struct _CERT_REVOCATION_CHAIN_PARA * PCERT_REVOCATION_CHAIN_PARA;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_INTEGER_BLOB;

struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO {
    DWORD cbSize;
    int iDeltaCrlIndicator;
    LPFILETIME pftCacheResync;
    LPFILETIME pLastSyncTime;
    LPFILETIME pMaxAgeTime;
    PCERT_REVOCATION_CHAIN_PARA pChainPara;
    PCRYPT_INTEGER_BLOB pDeltaCrlIndicator;
};

typedef struct _CRYPT_HASH_INFO _CRYPT_HASH_INFO, *P_CRYPT_HASH_INFO;

struct _CRYPT_HASH_INFO {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_HASH_BLOB Hash;
};

typedef struct _CRYPT_HASH_MESSAGE_PARA _CRYPT_HASH_MESSAGE_PARA, *P_CRYPT_HASH_MESSAGE_PARA;

struct _CRYPT_HASH_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV_LEGACY hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void * pvHashAuxInfo;
};

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA _CRYPT_KEY_SIGN_MESSAGE_PARA, *P_CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef union _union_1556 _union_1556, *P_union_1556;

union _union_1556 {
    HCRYPTPROV hCryptProv;
    NCRYPT_KEY_HANDLE hNCryptKey;
};

struct _CRYPT_KEY_SIGN_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    union _union_1556 u;
    DWORD dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void * pvHashAuxInfo;
    CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
};

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA _CRYPT_KEY_VERIFY_MESSAGE_PARA, *P_CRYPT_KEY_VERIFY_MESSAGE_PARA;

struct _CRYPT_KEY_VERIFY_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    HCRYPTPROV_LEGACY hCryptProv;
};

typedef struct _CRYPT_MASK_GEN_ALGORITHM _CRYPT_MASK_GEN_ALGORITHM, *P_CRYPT_MASK_GEN_ALGORITHM;

struct _CRYPT_MASK_GEN_ALGORITHM {
    LPSTR pszObjId;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
};

typedef struct _CRYPT_OBJID_TABLE _CRYPT_OBJID_TABLE, *P_CRYPT_OBJID_TABLE;

struct _CRYPT_OBJID_TABLE {
    DWORD dwAlgId;
    LPCSTR pszObjId;
};

typedef struct _CRYPT_OID_FUNC_ENTRY _CRYPT_OID_FUNC_ENTRY, *P_CRYPT_OID_FUNC_ENTRY;

struct _CRYPT_OID_FUNC_ENTRY {
    LPCSTR pszOID;
    void * pvFuncAddr;
};

typedef struct _CRYPT_OID_INFO _CRYPT_OID_INFO, *P_CRYPT_OID_INFO;

typedef union _union_1467 _union_1467, *P_union_1467;

union _union_1467 {
    DWORD dwValue;
    ALG_ID Algid;
    DWORD dwLength;
};

struct _CRYPT_OID_INFO {
    DWORD cbSize;
    LPCSTR pszOID;
    LPCWSTR pwszName;
    DWORD dwGroupId;
    union _union_1467 u;
    CRYPT_DATA_BLOB ExtraInfo;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSA _CRYPT_PASSWORD_CREDENTIALSA, *P_CRYPT_PASSWORD_CREDENTIALSA;

struct _CRYPT_PASSWORD_CREDENTIALSA {
    DWORD cbSize;
    LPSTR pszUsername;
    LPSTR pszPassword;
};

typedef struct _CRYPT_PASSWORD_CREDENTIALSW _CRYPT_PASSWORD_CREDENTIALSW, *P_CRYPT_PASSWORD_CREDENTIALSW;

struct _CRYPT_PASSWORD_CREDENTIALSW {
    DWORD cbSize;
    LPWSTR pszUsername;
    LPWSTR pszPassword;
};

typedef struct _CRYPT_PKCS12_PBE_PARAMS _CRYPT_PKCS12_PBE_PARAMS, *P_CRYPT_PKCS12_PBE_PARAMS;

struct _CRYPT_PKCS12_PBE_PARAMS {
    int iIterations;
    ULONG cbSalt;
};

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS _CRYPT_PKCS8_EXPORT_PARAMS, *P_CRYPT_PKCS8_EXPORT_PARAMS;

typedef BOOL (* PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC)(CRYPT_ALGORITHM_IDENTIFIER *, CRYPT_DATA_BLOB *, BYTE *, DWORD *, LPVOID);

struct _CRYPT_PKCS8_EXPORT_PARAMS {
    HCRYPTPROV hCryptProv;
    DWORD dwKeySpec;
    LPSTR pszPrivateKeyObjId;
    PCRYPT_ENCRYPT_PRIVATE_KEY_FUNC pEncryptPrivateKeyFunc;
    LPVOID pVoidEncryptFunc;
};

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS _CRYPT_PKCS8_IMPORT_PARAMS, *P_CRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPTOAPI_BLOB CRYPT_DIGEST_BLOB;

typedef struct _CRYPT_PRIVATE_KEY_INFO _CRYPT_PRIVATE_KEY_INFO, *P_CRYPT_PRIVATE_KEY_INFO;

typedef struct _CRYPT_PRIVATE_KEY_INFO CRYPT_PRIVATE_KEY_INFO;

typedef BOOL (* PCRYPT_RESOLVE_HCRYPTPROV_FUNC)(CRYPT_PRIVATE_KEY_INFO *, HCRYPTPROV *, LPVOID);

typedef BOOL (* PCRYPT_DECRYPT_PRIVATE_KEY_FUNC)(CRYPT_ALGORITHM_IDENTIFIER, CRYPT_DATA_BLOB, BYTE *, DWORD *, LPVOID);

struct _CRYPT_PKCS8_IMPORT_PARAMS {
    CRYPT_DIGEST_BLOB PrivateKey;
    PCRYPT_RESOLVE_HCRYPTPROV_FUNC pResolvehCryptProvFunc;
    LPVOID pVoidResolveFunc;
    PCRYPT_DECRYPT_PRIVATE_KEY_FUNC pDecryptPrivateKeyFunc;
    LPVOID pVoidDecryptFunc;
};

struct _CRYPT_PRIVATE_KEY_INFO {
    DWORD Version;
    CRYPT_ALGORITHM_IDENTIFIER Algorithm;
    CRYPT_DER_BLOB PrivateKey;
    PCRYPT_ATTRIBUTES pAttributes;
};

typedef struct _CRYPT_PSOURCE_ALGORITHM _CRYPT_PSOURCE_ALGORITHM, *P_CRYPT_PSOURCE_ALGORITHM;

struct _CRYPT_PSOURCE_ALGORITHM {
    LPSTR pszObjId;
    CRYPT_DATA_BLOB EncodingParameters;
};

typedef struct _CRYPT_RC2_CBC_PARAMETERS _CRYPT_RC2_CBC_PARAMETERS, *P_CRYPT_RC2_CBC_PARAMETERS;

struct _CRYPT_RC2_CBC_PARAMETERS {
    DWORD dwVersion;
    BOOL fIV;
    BYTE rgbIV[8];
};

typedef struct _CRYPT_RETRIEVE_AUX_INFO _CRYPT_RETRIEVE_AUX_INFO, *P_CRYPT_RETRIEVE_AUX_INFO;

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO _CRYPTNET_URL_CACHE_PRE_FETCH_INFO, *P_CRYPTNET_URL_CACHE_PRE_FETCH_INFO;

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO * PCRYPTNET_URL_CACHE_PRE_FETCH_INFO;

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO _CRYPTNET_URL_CACHE_FLUSH_INFO, *P_CRYPTNET_URL_CACHE_FLUSH_INFO;

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO * PCRYPTNET_URL_CACHE_FLUSH_INFO;

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO _CRYPTNET_URL_CACHE_RESPONSE_INFO, *P_CRYPTNET_URL_CACHE_RESPONSE_INFO;

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO * PCRYPTNET_URL_CACHE_RESPONSE_INFO;

struct _CRYPT_RETRIEVE_AUX_INFO {
    DWORD cbSize;
    FILETIME * pLastSyncTime;
    DWORD dwMaxUrlRetrievalByteCount;
    PCRYPTNET_URL_CACHE_PRE_FETCH_INFO pPreFetchInfo;
    PCRYPTNET_URL_CACHE_FLUSH_INFO pFlushInfo;
    PCRYPTNET_URL_CACHE_RESPONSE_INFO * ppResponseInfo;
    LPWSTR pwszCacheFileNamePrefix;
    LPFILETIME pftCacheResync;
    BOOL fProxyCacheRetrieval;
    DWORD dwHttpStatusCode;
};

struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO {
    DWORD cbSize;
    DWORD dwObjectType;
    DWORD dwError;
    DWORD dwReserved;
    FILETIME ThisUpdateTime;
    FILETIME NextUpdateTime;
    FILETIME PublishTime;
};

struct _CRYPTNET_URL_CACHE_RESPONSE_INFO {
    DWORD cbSize;
    WORD wResponseType;
    WORD wResponseFlags;
    FILETIME LastModifiedTime;
    DWORD dwMaxAge;
    LPCWSTR pwszETag;
    DWORD dwProxyId;
};

struct _CRYPTNET_URL_CACHE_FLUSH_INFO {
    DWORD cbSize;
    DWORD dwExemptSeconds;
    FILETIME ExpireTime;
};

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS _CRYPT_RSA_SSA_PSS_PARAMETERS, *P_CRYPT_RSA_SSA_PSS_PARAMETERS;

typedef struct _CRYPT_MASK_GEN_ALGORITHM CRYPT_MASK_GEN_ALGORITHM;

struct _CRYPT_RSA_SSA_PSS_PARAMETERS {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
    DWORD dwSaltLength;
    DWORD dwTrailerField;
};

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS _CRYPT_RSAES_OAEP_PARAMETERS, *P_CRYPT_RSAES_OAEP_PARAMETERS;

typedef struct _CRYPT_PSOURCE_ALGORITHM CRYPT_PSOURCE_ALGORITHM;

struct _CRYPT_RSAES_OAEP_PARAMETERS {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
    CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
};

typedef struct _CRYPT_SEQUENCE_OF_ANY _CRYPT_SEQUENCE_OF_ANY, *P_CRYPT_SEQUENCE_OF_ANY;

struct _CRYPT_SEQUENCE_OF_ANY {
    DWORD cValue;
    PCRYPT_DER_BLOB rgValue;
};

typedef struct _CRYPT_SIGN_MESSAGE_PARA _CRYPT_SIGN_MESSAGE_PARA, *P_CRYPT_SIGN_MESSAGE_PARA;

struct _CRYPT_SIGN_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgEncodingType;
    PCCERT_CONTEXT pSigningCert;
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    void * pvHashAuxInfo;
    DWORD cMsgCert;
    PCCERT_CONTEXT * rgpMsgCert;
    DWORD cMsgCrl;
    PCCRL_CONTEXT * rgpMsgCrl;
    DWORD cAuthAttr;
    PCRYPT_ATTRIBUTE rgAuthAttr;
    DWORD cUnauthAttr;
    PCRYPT_ATTRIBUTE rgUnauthAttr;
    DWORD dwFlags;
    DWORD dwInnerContentType;
};

typedef struct _CRYPT_SMART_CARD_ROOT_INFO _CRYPT_SMART_CARD_ROOT_INFO, *P_CRYPT_SMART_CARD_ROOT_INFO;

typedef struct _ROOT_INFO_LUID _ROOT_INFO_LUID, *P_ROOT_INFO_LUID;

typedef struct _ROOT_INFO_LUID ROOT_INFO_LUID;

struct _ROOT_INFO_LUID {
    DWORD LowPart;
    LONG HighPart;
};

struct _CRYPT_SMART_CARD_ROOT_INFO {
    BYTE rgbCardID[16];
    ROOT_INFO_LUID luid;
};

typedef struct _CRYPT_SMIME_CAPABILITIES _CRYPT_SMIME_CAPABILITIES, *P_CRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_SMIME_CAPABILITY _CRYPT_SMIME_CAPABILITY, *P_CRYPT_SMIME_CAPABILITY;

typedef struct _CRYPT_SMIME_CAPABILITY * PCRYPT_SMIME_CAPABILITY;

struct _CRYPT_SMIME_CAPABILITIES {
    DWORD cCapability;
    PCRYPT_SMIME_CAPABILITY rgCapability;
};

struct _CRYPT_SMIME_CAPABILITY {
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Parameters;
};

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO _CRYPT_TIME_STAMP_REQUEST_INFO, *P_CRYPT_TIME_STAMP_REQUEST_INFO;

struct _CRYPT_TIME_STAMP_REQUEST_INFO {
    LPSTR pszTimeStampAlgorithm;
    LPSTR pszContentType;
    CRYPT_OBJID_BLOB Content;
    DWORD cAttribute;
    PCRYPT_ATTRIBUTE rgAttribute;
};

typedef struct _CRYPT_URL_ARRAY _CRYPT_URL_ARRAY, *P_CRYPT_URL_ARRAY;

struct _CRYPT_URL_ARRAY {
    DWORD cUrl;
    LPWSTR * rgwszUrl;
};

typedef struct _CRYPT_URL_INFO _CRYPT_URL_INFO, *P_CRYPT_URL_INFO;

struct _CRYPT_URL_INFO {
    DWORD cbSize;
    DWORD dwSyncDeltaTime;
    DWORD cGroup;
    DWORD * rgcGroupEntry;
};

typedef struct _CRYPT_VERIFY_MESSAGE_PARA _CRYPT_VERIFY_MESSAGE_PARA, *P_CRYPT_VERIFY_MESSAGE_PARA;

typedef PCCERT_CONTEXT (* PFN_CRYPT_GET_SIGNER_CERTIFICATE)(void *, DWORD, PCERT_INFO, HCERTSTORE);

struct _CRYPT_VERIFY_MESSAGE_PARA {
    DWORD cbSize;
    DWORD dwMsgAndCertEncodingType;
    HCRYPTPROV_LEGACY hCryptProv;
    PFN_CRYPT_GET_SIGNER_CERTIFICATE pfnGetSignerCertificate;
    void * pvGetArg;
};

typedef struct _CRYPT_X942_OTHER_INFO _CRYPT_X942_OTHER_INFO, *P_CRYPT_X942_OTHER_INFO;

struct _CRYPT_X942_OTHER_INFO {
    LPSTR pszContentEncryptionObjId;
    BYTE rgbCounter[4];
    BYTE rgbKeyLength[4];
    CRYPT_DATA_BLOB PubInfo;
};

typedef struct _CRYPTPROTECT_PROMPTSTRUCT _CRYPTPROTECT_PROMPTSTRUCT, *P_CRYPTPROTECT_PROMPTSTRUCT;

struct _CRYPTPROTECT_PROMPTSTRUCT {
    DWORD cbSize;
    DWORD dwPromptFlags;
    HWND hwndApp;
    LPCWSTR szPrompt;
};

typedef struct _CTL_ANY_SUBJECT_INFO _CTL_ANY_SUBJECT_INFO, *P_CTL_ANY_SUBJECT_INFO;

struct _CTL_ANY_SUBJECT_INFO {
    CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
    CRYPT_DATA_BLOB SubjectIdentifier;
};

typedef struct _CTL_FIND_SUBJECT_PARA _CTL_FIND_SUBJECT_PARA, *P_CTL_FIND_SUBJECT_PARA;

typedef struct _CTL_FIND_USAGE_PARA _CTL_FIND_USAGE_PARA, *P_CTL_FIND_USAGE_PARA;

typedef struct _CTL_FIND_USAGE_PARA * PCTL_FIND_USAGE_PARA;

struct _CTL_FIND_USAGE_PARA {
    DWORD cbSize;
    CTL_USAGE SubjectUsage;
    CRYPT_DATA_BLOB ListIdentifier;
    PCERT_INFO pSigner;
};

struct _CTL_FIND_SUBJECT_PARA {
    DWORD cbSize;
    PCTL_FIND_USAGE_PARA pUsagePara;
    DWORD dwSubjectType;
    void * pvSubject;
};

typedef struct _CTL_USAGE_MATCH _CTL_USAGE_MATCH, *P_CTL_USAGE_MATCH;

struct _CTL_USAGE_MATCH {
    DWORD dwType;
    CTL_USAGE Usage;
};

typedef struct _CTL_VERIFY_USAGE_PARA _CTL_VERIFY_USAGE_PARA, *P_CTL_VERIFY_USAGE_PARA;

struct _CTL_VERIFY_USAGE_PARA {
    DWORD cbSize;
    CRYPT_DATA_BLOB ListIdentifier;
    DWORD cCtlStore;
    HCERTSTORE * rghCtlStore;
    DWORD cSignerStore;
    HCERTSTORE * rghSignerStore;
};

typedef struct _CTL_VERIFY_USAGE_STATUS _CTL_VERIFY_USAGE_STATUS, *P_CTL_VERIFY_USAGE_STATUS;

struct _CTL_VERIFY_USAGE_STATUS {
    DWORD cbSize;
    DWORD dwError;
    DWORD dwFlags;
    PCCTL_CONTEXT * ppCtl;
    DWORD dwCtlEntryIndex;
    PCCERT_CONTEXT * ppSigner;
    DWORD dwSignerIndex;
};

typedef struct _DSSSEED _DSSSEED, *P_DSSSEED;

struct _DSSSEED {
    DWORD counter;
    BYTE seed[20];
};

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA _EV_EXTRA_CERT_CHAIN_POLICY_PARA, *P_EV_EXTRA_CERT_CHAIN_POLICY_PARA;

struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA {
    DWORD cbSize;
    DWORD dwRootProgramQualifierFlags;
};

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS _EV_EXTRA_CERT_CHAIN_POLICY_STATUS, *P_EV_EXTRA_CERT_CHAIN_POLICY_STATUS;

struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS {
    DWORD cbSize;
    DWORD dwQualifiers;
    DWORD dwIssuanceUsageIndex;
};

typedef struct _HMAC_Info _HMAC_Info, *P_HMAC_Info;

struct _HMAC_Info {
    ALG_ID HashAlgid;
    BYTE * pbInnerString;
    DWORD cbInnerString;
    BYTE * pbOuterString;
    DWORD cbOuterString;
};

typedef struct _HTTPSPolicyCallbackData _HTTPSPolicyCallbackData, *P_HTTPSPolicyCallbackData;

typedef union _union_1593 _union_1593, *P_union_1593;

union _union_1593 {
    DWORD cbStruct;
    DWORD cbSize;
};

struct _HTTPSPolicyCallbackData {
    union _union_1593 u;
    DWORD dwAuthType;
    DWORD fdwChecks;
    WCHAR * pwszServerName;
};

typedef struct _KEY_TYPE_SUBTYPE _KEY_TYPE_SUBTYPE, *P_KEY_TYPE_SUBTYPE;

struct _KEY_TYPE_SUBTYPE {
    DWORD dwKeySpec;
    GUID Type;
    GUID Subtype;
};

typedef struct _OCSP_BASIC_RESPONSE_ENTRY _OCSP_BASIC_RESPONSE_ENTRY, *P_OCSP_BASIC_RESPONSE_ENTRY;

typedef struct _OCSP_CERT_ID _OCSP_CERT_ID, *P_OCSP_CERT_ID;

typedef struct _OCSP_CERT_ID OCSP_CERT_ID;

typedef union _union_1462 _union_1462, *P_union_1462;

typedef struct _OCSP_BASIC_REVOKED_INFO _OCSP_BASIC_REVOKED_INFO, *P_OCSP_BASIC_REVOKED_INFO;

typedef struct _OCSP_BASIC_REVOKED_INFO * POCSP_BASIC_REVOKED_INFO;

union _union_1462 {
    POCSP_BASIC_REVOKED_INFO pRevokedInfo;
};

struct _OCSP_CERT_ID {
    CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
    CRYPT_HASH_BLOB IssuerNameHash;
    CRYPT_HASH_BLOB IssuerKeyHash;
    CRYPT_INTEGER_BLOB SerialNumber;
};

struct _OCSP_BASIC_RESPONSE_ENTRY {
    OCSP_CERT_ID CertId;
    DWORD dwCertStatus;
    union _union_1462 u;
    FILETIME ThisUpdate;
    FILETIME NextUpdate;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

struct _OCSP_BASIC_REVOKED_INFO {
    FILETIME RevocationDate;
    DWORD dwCrlReasonCode;
};

typedef struct _OCSP_BASIC_RESPONSE_INFO _OCSP_BASIC_RESPONSE_INFO, *P_OCSP_BASIC_RESPONSE_INFO;

typedef union _union_1464 _union_1464, *P_union_1464;

typedef struct _OCSP_BASIC_RESPONSE_ENTRY * POCSP_BASIC_RESPONSE_ENTRY;

union _union_1464 {
    CERT_NAME_BLOB ByNameResponderId;
    CRYPT_HASH_BLOB ByKeyResponderId;
};

struct _OCSP_BASIC_RESPONSE_INFO {
    DWORD dwVersion;
    DWORD dwResponderIdChoice;
    union _union_1464 u;
    FILETIME ProducedAt;
    DWORD cResponseEntry;
    POCSP_BASIC_RESPONSE_ENTRY rgResponseEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO _OCSP_BASIC_SIGNED_RESPONSE_INFO, *P_OCSP_BASIC_SIGNED_RESPONSE_INFO;

typedef struct _OCSP_SIGNATURE_INFO _OCSP_SIGNATURE_INFO, *P_OCSP_SIGNATURE_INFO;

typedef struct _OCSP_SIGNATURE_INFO OCSP_SIGNATURE_INFO;

struct _OCSP_SIGNATURE_INFO {
    CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
    CRYPT_BIT_BLOB Signature;
    DWORD cCertEncoded;
    PCERT_BLOB rgCertEncoded;
};

struct _OCSP_BASIC_SIGNED_RESPONSE_INFO {
    CRYPT_DER_BLOB ToBeSigned;
    OCSP_SIGNATURE_INFO SignatureInfo;
};

typedef struct _OCSP_REQUEST_ENTRY _OCSP_REQUEST_ENTRY, *P_OCSP_REQUEST_ENTRY;

struct _OCSP_REQUEST_ENTRY {
    OCSP_CERT_ID CertId;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _OCSP_REQUEST_INFO _OCSP_REQUEST_INFO, *P_OCSP_REQUEST_INFO;

typedef struct _OCSP_REQUEST_ENTRY * POCSP_REQUEST_ENTRY;

struct _OCSP_REQUEST_INFO {
    DWORD dwVersion;
    PCERT_ALT_NAME_ENTRY pRequestorName;
    DWORD cRequestEntry;
    POCSP_REQUEST_ENTRY rgRequestEntry;
    DWORD cExtension;
    PCERT_EXTENSION rgExtension;
};

typedef struct _OCSP_RESPONSE_INFO _OCSP_RESPONSE_INFO, *P_OCSP_RESPONSE_INFO;

struct _OCSP_RESPONSE_INFO {
    DWORD dwStatus;
    LPSTR pszObjId;
    CRYPT_OBJID_BLOB Value;
};

typedef struct _OCSP_SIGNED_REQUEST_INFO _OCSP_SIGNED_REQUEST_INFO, *P_OCSP_SIGNED_REQUEST_INFO;

typedef struct _OCSP_SIGNATURE_INFO * POCSP_SIGNATURE_INFO;

struct _OCSP_SIGNED_REQUEST_INFO {
    CRYPT_DER_BLOB ToBeSigned;
    POCSP_SIGNATURE_INFO pOptionalSignatureInfo;
};

typedef struct _PRIVKEYVER3 _PRIVKEYVER3, *P_PRIVKEYVER3;

typedef struct _DSSSEED DSSSEED;

struct _PRIVKEYVER3 {
    DWORD magic;
    DWORD bitlenP;
    DWORD bitlenQ;
    DWORD bitlenJ;
    DWORD bitlenX;
    DSSSEED DSSSeed;
};

typedef struct _PROV_ENUMALGS _PROV_ENUMALGS, *P_PROV_ENUMALGS;

struct _PROV_ENUMALGS {
    ALG_ID aiAlgid;
    DWORD dwBitLen;
    DWORD dwNameLen;
    CHAR szName[20];
};

typedef struct _PROV_ENUMALGS_EX _PROV_ENUMALGS_EX, *P_PROV_ENUMALGS_EX;

struct _PROV_ENUMALGS_EX {
    ALG_ID aiAlgid;
    DWORD dwDefaultLen;
    DWORD dwMinLen;
    DWORD dwMaxLen;
    DWORD dwProtocols;
    DWORD dwNameLen;
    CHAR szName[20];
    DWORD dwLongNameLen;
    CHAR szLongName[40];
};

typedef struct _PUBKEY _PUBKEY, *P_PUBKEY;

struct _PUBKEY {
    DWORD magic;
    DWORD bitlen;
};

typedef struct _PUBKEYVER3 _PUBKEYVER3, *P_PUBKEYVER3;

struct _PUBKEYVER3 {
    DWORD magic;
    DWORD bitlenP;
    DWORD bitlenQ;
    DWORD bitlenJ;
    DSSSEED DSSSeed;
};

typedef struct _PUBLICKEYSTRUC _PUBLICKEYSTRUC, *P_PUBLICKEYSTRUC;

struct _PUBLICKEYSTRUC {
    BYTE bType;
    BYTE bVersion;
    WORD reserved;
    ALG_ID aiKeyAlg;
};

typedef struct _RSAPUBKEY _RSAPUBKEY, *P_RSAPUBKEY;

struct _RSAPUBKEY {
    DWORD magic;
    DWORD bitlen;
    DWORD pubexp;
};

typedef struct _SCHANNEL_ALG _SCHANNEL_ALG, *P_SCHANNEL_ALG;

struct _SCHANNEL_ALG {
    DWORD dwUse;
    ALG_ID Algid;
    DWORD cBits;
    DWORD dwFlags;
    DWORD dwReserved;
};

typedef struct _VTableProvStruc _VTableProvStruc, *P_VTableProvStruc;

struct _VTableProvStruc {
    DWORD Version;
    FARPROC FuncVerifyImage;
    FARPROC FuncReturnhWnd;
    DWORD dwProvType;
    BYTE * pbContextInfo;
    DWORD cbContextInfo;
    LPSTR pszProvName;
};

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _PUBLICKEYSTRUC BLOBHEADER;

typedef struct _CERT_STORE_PROV_FIND_INFO CERT_STORE_PROV_FIND_INFO;

typedef CERT_STORE_PROV_FIND_INFO CCERT_STORE_PROV_FIND_INFO;

typedef struct _CRYPT_OID_INFO CRYPT_OID_INFO;

typedef CRYPT_OID_INFO CCRYPT_OID_INFO;

typedef struct _CERT_ACCESS_DESCRIPTION CERT_ACCESS_DESCRIPTION;

typedef struct _CERT_AUTHORITY_INFO_ACCESS CERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO CERT_AUTHORITY_KEY_ID2_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO CERT_AUTHORITY_KEY_ID_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO CERT_BASIC_CONSTRAINTS2_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO CERT_BASIC_CONSTRAINTS_INFO;

typedef struct _CERT_BIOMETRIC_DATA CERT_BIOMETRIC_DATA;

typedef struct _CERT_BIOMETRIC_EXT_INFO CERT_BIOMETRIC_EXT_INFO;

typedef struct _CERT_CHAIN CERT_CHAIN;

typedef struct _CERT_CHAIN_ELEMENT CERT_CHAIN_ELEMENT;

typedef struct _CERT_CHAIN_ENGINE_CONFIG CERT_CHAIN_ENGINE_CONFIG;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA CERT_CHAIN_FIND_ISSUER_PARA;

typedef struct _CERT_CHAIN_PARA CERT_CHAIN_PARA;

typedef struct _CERT_CHAIN_POLICY_PARA CERT_CHAIN_POLICY_PARA;

typedef struct _CERT_CHAIN_POLICY_STATUS CERT_CHAIN_POLICY_STATUS;

typedef struct _CERT_CREATE_CONTEXT_PARA CERT_CREATE_CONTEXT_PARA;

typedef struct _CERT_CRL_CONTEXT_PAIR CERT_CRL_CONTEXT_PAIR;

typedef struct _CERT_DH_PARAMETERS CERT_DH_PARAMETERS;

typedef struct _CERT_DSS_PARAMETERS CERT_DSS_PARAMETERS;

typedef struct _CERT_ECC_SIGNATURE CERT_ECC_SIGNATURE;

typedef struct _CERT_EXTENSION CERT_EXTENSION;

typedef struct _CERT_EXTENSIONS CERT_EXTENSIONS;

typedef struct _CERT_FORTEZZA_DATA_PROP CERT_FORTEZZA_DATA_PROP;

typedef struct _CERT_GENERAL_SUBTREE CERT_GENERAL_SUBTREE;

typedef struct _CERT_INFO CERT_INFO;

typedef struct _CERT_KEY_ATTRIBUTES_INFO CERT_KEY_ATTRIBUTES_INFO;

typedef struct _CERT_KEY_CONTEXT CERT_KEY_CONTEXT;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO CERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_KEYGEN_REQUEST_INFO CERT_KEYGEN_REQUEST_INFO;

typedef struct _CERT_LDAP_STORE_OPENED_PARA CERT_LDAP_STORE_OPENED_PARA;

typedef struct _CERT_LOGOTYPE_AUDIO CERT_LOGOTYPE_AUDIO;

typedef struct _CERT_LOGOTYPE_AUDIO_INFO CERT_LOGOTYPE_AUDIO_INFO;

typedef struct _CERT_LOGOTYPE_DATA CERT_LOGOTYPE_DATA;

typedef struct _CERT_LOGOTYPE_EXT_INFO CERT_LOGOTYPE_EXT_INFO;

typedef struct _CERT_LOGOTYPE_IMAGE CERT_LOGOTYPE_IMAGE;

typedef struct _CERT_LOGOTYPE_IMAGE_INFO CERT_LOGOTYPE_IMAGE_INFO;

typedef struct _CERT_LOGOTYPE_REFERENCE CERT_LOGOTYPE_REFERENCE;

typedef struct _CERT_NAME_CONSTRAINTS_INFO CERT_NAME_CONSTRAINTS_INFO;

typedef struct _CERT_NAME_INFO CERT_NAME_INFO;

typedef struct _CERT_NAME_VALUE CERT_NAME_VALUE;

typedef struct _CERT_OR_CRL_BLOB CERT_OR_CRL_BLOB;

typedef struct _CERT_OR_CRL_BUNDLE CERT_OR_CRL_BUNDLE;

typedef struct _CERT_OTHER_LOGOTYPE_INFO CERT_OTHER_LOGOTYPE_INFO;

typedef struct _CERT_OTHER_NAME CERT_OTHER_NAME;

typedef struct _CERT_PAIR CERT_PAIR;

typedef struct _CERT_PHYSICAL_STORE_INFO CERT_PHYSICAL_STORE_INFO;

typedef struct _CERT_POLICIES_INFO CERT_POLICIES_INFO;

typedef struct _CERT_POLICY95_QUALIFIER1 CERT_POLICY95_QUALIFIER1;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO CERT_POLICY_CONSTRAINTS_INFO;

typedef struct _CERT_POLICY_ID CERT_POLICY_ID;

typedef struct _CERT_POLICY_MAPPING CERT_POLICY_MAPPING;

typedef struct _CERT_POLICY_MAPPINGS_INFO CERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE CERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CERT_PRIVATE_KEY_VALIDITY CERT_PRIVATE_KEY_VALIDITY;

typedef struct _CERT_QC_STATEMENT CERT_QC_STATEMENT;

typedef struct _CERT_QC_STATEMENTS_EXT_INFO CERT_QC_STATEMENTS_EXT_INFO;

typedef struct _CERT_RDN CERT_RDN;

typedef struct _CERT_RDN_ATTR CERT_RDN_ATTR;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA CERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA CERT_REGISTRY_STORE_ROAMING_PARA;

typedef struct _CERT_REQUEST_INFO CERT_REQUEST_INFO;

typedef struct _CERT_REVOCATION_CHAIN_PARA CERT_REVOCATION_CHAIN_PARA;

typedef struct _CERT_REVOCATION_CRL_INFO CERT_REVOCATION_CRL_INFO;

typedef struct _CERT_REVOCATION_INFO CERT_REVOCATION_INFO;

typedef struct _CERT_REVOCATION_PARA CERT_REVOCATION_PARA;

typedef struct _CERT_REVOCATION_STATUS CERT_REVOCATION_STATUS;

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT CERT_SERVER_OCSP_RESPONSE_CONTEXT;

typedef struct _CERT_SIGNED_CONTENT_INFO CERT_SIGNED_CONTENT_INFO;

typedef struct _CERT_SIMPLE_CHAIN CERT_SIMPLE_CHAIN;

typedef struct _CERT_STORE_PROV_INFO CERT_STORE_PROV_INFO;

typedef struct _CERT_AUTHORITY_INFO_ACCESS CERT_SUBJECT_INFO_ACCESS;

typedef struct _CERT_SYSTEM_STORE_INFO CERT_SYSTEM_STORE_INFO;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA CERT_SYSTEM_STORE_RELOCATE_PARA;

typedef struct _CERT_TEMPLATE_EXT CERT_TEMPLATE_EXT;

typedef struct _CERT_TRUST_LIST_INFO CERT_TRUST_LIST_INFO;

typedef struct _CERT_X942_DH_PARAMETERS CERT_X942_DH_PARAMETERS;

typedef struct _CERT_X942_DH_VALIDATION_PARAMS CERT_X942_DH_VALIDATION_PARAMS;

typedef struct _CMC_ADD_ATTRIBUTES_INFO CMC_ADD_ATTRIBUTES_INFO;

typedef struct _CMC_ADD_EXTENSIONS_INFO CMC_ADD_EXTENSIONS_INFO;

typedef struct _CMC_DATA_INFO CMC_DATA_INFO;

typedef struct _CMC_PEND_INFO CMC_PEND_INFO;

typedef struct _CMC_RESPONSE_INFO CMC_RESPONSE_INFO;

typedef struct _CMC_STATUS_INFO CMC_STATUS_INFO;

typedef struct _CMC_TAGGED_ATTRIBUTE CMC_TAGGED_ATTRIBUTE;

typedef struct _CMC_TAGGED_CERT_REQUEST CMC_TAGGED_CERT_REQUEST;

typedef struct _CMC_TAGGED_CONTENT_INFO CMC_TAGGED_CONTENT_INFO;

typedef struct _CMC_TAGGED_OTHER_MSG CMC_TAGGED_OTHER_MSG;

typedef struct _CMC_TAGGED_REQUEST CMC_TAGGED_REQUEST;

typedef struct _CMS_DH_KEY_INFO CMS_DH_KEY_INFO;

typedef struct _CMS_KEY_INFO CMS_KEY_INFO;

typedef CRYPT_ATTRIBUTES CMSG_ATTR;

typedef struct _CMSG_CMS_RECIPIENT_INFO CMSG_CMS_RECIPIENT_INFO;

typedef struct _CMSG_CMS_SIGNER_INFO CMSG_CMS_SIGNER_INFO;

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO CMSG_CNG_CONTENT_DECRYPT_INFO;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO CMSG_CONTENT_ENCRYPT_INFO;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CMSG_CTRL_DECRYPT_PARA CMSG_CTRL_DECRYPT_PARA;

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO CMSG_ENCRYPTED_ENCODE_INFO;

typedef struct _CMSG_HASHED_ENCODE_INFO CMSG_HASHED_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO CMSG_KEY_AGREE_ENCRYPT_INFO;

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO CMSG_KEY_AGREE_RECIPIENT_INFO;

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO CMSG_KEY_TRANS_ENCRYPT_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO CMSG_KEY_TRANS_RECIPIENT_INFO;

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO CMSG_MAIL_LIST_ENCRYPT_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO CMSG_MAIL_LIST_RECIPIENT_INFO;

typedef struct _CMSG_RC2_AUX_INFO CMSG_RC2_AUX_INFO;

typedef struct _CMSG_RC4_AUX_INFO CMSG_RC4_AUX_INFO;

typedef struct _CMSG_RECIPIENT_ENCODE_INFO CMSG_RECIPIENT_ENCODE_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNER_ENCODE_INFO CMSG_SIGNER_ENCODE_INFO;

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO CMSG_SP3_COMPATIBLE_AUX_INFO;

typedef struct _CMSG_STREAM_INFO CMSG_STREAM_INFO;

typedef struct _CRYPTOAPI_BLOB CRL_BLOB;

typedef struct _CRL_DIST_POINT CRL_DIST_POINT;

typedef struct _CRL_DIST_POINTS_INFO CRL_DIST_POINTS_INFO;

typedef struct _CRL_ENTRY CRL_ENTRY;

typedef struct _CRL_FIND_ISSUED_FOR_PARA CRL_FIND_ISSUED_FOR_PARA;

typedef struct _CRL_INFO CRL_INFO;

typedef struct _CRL_ISSUING_DIST_POINT CRL_ISSUING_DIST_POINT;

typedef struct _CRL_REVOCATION_INFO CRL_REVOCATION_INFO;

typedef struct _CROSS_CERT_DIST_POINTS_INFO CROSS_CERT_DIST_POINTS_INFO;

typedef struct _CRYPT_AES_128_KEY_STATE CRYPT_AES_128_KEY_STATE;

typedef struct _CRYPT_AES_256_KEY_STATE CRYPT_AES_256_KEY_STATE;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION CRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef struct _CRYPT_BLOB_ARRAY CRYPT_BLOB_ARRAY;

typedef struct _CRYPT_CONTENT_INFO CRYPT_CONTENT_INFO;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPT_CREDENTIALS CRYPT_CREDENTIALS;

typedef struct _CRYPT_CSP_PROVIDER CRYPT_CSP_PROVIDER;

typedef struct _CRYPT_DECODE_PARA CRYPT_DECODE_PARA;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA CRYPT_DECRYPT_MESSAGE_PARA;

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef struct _CRYPT_ECC_CMS_SHARED_INFO CRYPT_ECC_CMS_SHARED_INFO;

typedef struct _CRYPT_ENCODE_PARA CRYPT_ENCODE_PARA;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA CRYPT_ENCRYPT_MESSAGE_PARA;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR CRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;

typedef struct _CRYPT_HASH_INFO CRYPT_HASH_INFO;

typedef struct _CRYPT_HASH_MESSAGE_PARA CRYPT_HASH_MESSAGE_PARA;

typedef struct _CRYPT_KEY_PROV_PARAM CRYPT_KEY_PROV_PARAM;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA CRYPT_KEY_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA CRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef struct _CRYPT_OBJID_TABLE CRYPT_OBJID_TABLE;

typedef struct _CRYPT_OID_FUNC_ENTRY CRYPT_OID_FUNC_ENTRY;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALSA;

typedef CRYPT_PASSWORD_CREDENTIALSA CRYPT_PASSWORD_CREDENTIALS;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW CRYPT_PASSWORD_CREDENTIALSW;

typedef struct _CRYPT_PKCS12_PBE_PARAMS CRYPT_PKCS12_PBE_PARAMS;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS CRYPT_PKCS8_EXPORT_PARAMS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS CRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

typedef struct _CRYPT_RC2_CBC_PARAMETERS CRYPT_RC2_CBC_PARAMETERS;

typedef struct _CRYPT_RETRIEVE_AUX_INFO CRYPT_RETRIEVE_AUX_INFO;

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS CRYPT_RSA_SSA_PSS_PARAMETERS;

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS CRYPT_RSAES_OAEP_PARAMETERS;

typedef struct _CRYPT_SEQUENCE_OF_ANY CRYPT_SEQUENCE_OF_ANY;

typedef struct _CRYPT_SIGN_MESSAGE_PARA CRYPT_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_SMART_CARD_ROOT_INFO CRYPT_SMART_CARD_ROOT_INFO;

typedef struct _CRYPT_SMIME_CAPABILITIES CRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_SMIME_CAPABILITY CRYPT_SMIME_CAPABILITY;

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO CRYPT_TIME_STAMP_REQUEST_INFO;

typedef struct _CRYPT_URL_ARRAY CRYPT_URL_ARRAY;

typedef struct _CRYPT_URL_INFO CRYPT_URL_INFO;

typedef struct _CRYPT_VERIFY_MESSAGE_PARA CRYPT_VERIFY_MESSAGE_PARA;

typedef struct _CRYPT_X942_OTHER_INFO CRYPT_X942_OTHER_INFO;

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO CRYPTNET_URL_CACHE_FLUSH_INFO;

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO CRYPTNET_URL_CACHE_PRE_FETCH_INFO;

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO CRYPTNET_URL_CACHE_RESPONSE_INFO;

typedef struct _CRYPTPROTECT_PROMPTSTRUCT CRYPTPROTECT_PROMPTSTRUCT;

typedef struct _CTL_ANY_SUBJECT_INFO CTL_ANY_SUBJECT_INFO;

typedef struct _CTL_ENTRY CTL_ENTRY;

typedef struct _CTL_FIND_SUBJECT_PARA CTL_FIND_SUBJECT_PARA;

typedef struct _CTL_FIND_USAGE_PARA CTL_FIND_USAGE_PARA;

typedef struct _CTL_INFO CTL_INFO;

typedef struct _CTL_USAGE_MATCH CTL_USAGE_MATCH;

typedef struct _CTL_VERIFY_USAGE_PARA CTL_VERIFY_USAGE_PARA;

typedef struct _CTL_VERIFY_USAGE_STATUS CTL_VERIFY_USAGE_STATUS;

typedef struct _CRYPTOAPI_BLOB DATA_BLOB;

typedef struct _PRIVKEYVER3 DHPRIVKEY_VER3;

typedef struct _PUBKEY DHPUBKEY;

typedef struct _PUBKEYVER3 DHPUBKEY_VER3;

typedef struct _PRIVKEYVER3 DSSPRIVKEY_VER3;

typedef struct _PUBKEY DSSPUBKEY;

typedef struct _PUBKEYVER3 DSSPUBKEY_VER3;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA EV_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS EV_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef void * HCERT_SERVER_OCSP_RESPONSE;

typedef HANDLE HCRYPTASYNC;

typedef void * HCRYPTDEFAULTCONTEXT;

typedef ULONG_PTR HCRYPTHASH;

typedef void * HCRYPTOIDFUNCSET;

typedef ULONG_PTR HCRYPTPROV_OR_NCRYPT_KEY_HANDLE;

typedef struct _HMAC_Info HMAC_INFO;

typedef struct _HTTPSPolicyCallbackData HTTPSPolicyCallbackData;

typedef struct _PUBKEY KEAPUBKEY;

typedef struct _KEY_TYPE_SUBTYPE KEY_TYPE_SUBTYPE;

typedef struct _OCSP_BASIC_RESPONSE_ENTRY OCSP_BASIC_RESPONSE_ENTRY;

typedef struct _OCSP_BASIC_RESPONSE_INFO OCSP_BASIC_RESPONSE_INFO;

typedef struct _OCSP_BASIC_REVOKED_INFO OCSP_BASIC_REVOKED_INFO;

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO OCSP_BASIC_SIGNED_RESPONSE_INFO;

typedef struct _OCSP_REQUEST_ENTRY OCSP_REQUEST_ENTRY;

typedef struct _OCSP_REQUEST_INFO OCSP_REQUEST_INFO;

typedef struct _OCSP_RESPONSE_INFO OCSP_RESPONSE_INFO;

typedef struct _OCSP_SIGNED_REQUEST_INFO OCSP_SIGNED_REQUEST_INFO;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA * PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS * PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA * PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef CERT_CHAIN_ELEMENT * PCCERT_CHAIN_ELEMENT;

typedef CERT_CRL_CONTEXT_PAIR * PCCERT_CRL_CONTEXT_PAIR;

typedef CERT_ENHKEY_USAGE * PCCERT_ENHKEY_USAGE;

typedef CERT_EXTENSION * PCCERT_EXTENSION;

typedef CERT_SERVER_OCSP_RESPONSE_CONTEXT * PCCERT_SERVER_OCSP_RESPONSE_CONTEXT;

typedef CERT_SIMPLE_CHAIN * PCCERT_SIMPLE_CHAIN;

typedef CERT_STORE_PROV_FIND_INFO * PCCERT_STORE_PROV_FIND_INFO;

typedef CRYPT_OID_INFO * PCCRYPT_OID_INFO;

typedef CTL_USAGE * PCCTL_USAGE;

typedef struct _CERT_AUTHORITY_INFO_ACCESS * PCERT_AUTHORITY_INFO_ACCESS;

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO * PCERT_AUTHORITY_KEY_ID2_INFO;

typedef struct _CERT_AUTHORITY_KEY_ID_INFO * PCERT_AUTHORITY_KEY_ID_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO * PCERT_BASIC_CONSTRAINTS2_INFO;

typedef struct _CERT_BASIC_CONSTRAINTS_INFO * PCERT_BASIC_CONSTRAINTS_INFO;

typedef struct _CERT_BIOMETRIC_EXT_INFO * PCERT_BIOMETRIC_EXT_INFO;

typedef struct _CERT_CHAIN * PCERT_CHAIN;

typedef struct _CERT_CHAIN_CONTEXT * PCERT_CHAIN_CONTEXT;

typedef struct _CERT_CHAIN_ENGINE_CONFIG * PCERT_CHAIN_ENGINE_CONFIG;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA * PCERT_CHAIN_FIND_BY_ISSUER_PARA;

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA * PCERT_CHAIN_FIND_ISSUER_PARA;

typedef struct _CERT_CHAIN_PARA * PCERT_CHAIN_PARA;

typedef struct _CERT_CHAIN_POLICY_PARA * PCERT_CHAIN_POLICY_PARA;

typedef struct _CERT_CHAIN_POLICY_STATUS * PCERT_CHAIN_POLICY_STATUS;

typedef struct _CERT_CONTEXT * PCERT_CONTEXT;

typedef struct _CERT_CREATE_CONTEXT_PARA * PCERT_CREATE_CONTEXT_PARA;

typedef struct _CERT_CRL_CONTEXT_PAIR * PCERT_CRL_CONTEXT_PAIR;

typedef struct _CERT_DH_PARAMETERS * PCERT_DH_PARAMETERS;

typedef struct _CERT_DSS_PARAMETERS * PCERT_DSS_PARAMETERS;

typedef struct _CERT_ECC_SIGNATURE * PCERT_ECC_SIGNATURE;

typedef struct _CERT_EXTENSIONS * PCERT_EXTENSIONS;

typedef struct _CERT_ISSUER_SERIAL_NUMBER * PCERT_ISSUER_SERIAL_NUMBER;

typedef struct _CERT_KEY_ATTRIBUTES_INFO * PCERT_KEY_ATTRIBUTES_INFO;

typedef struct _CERT_KEY_CONTEXT * PCERT_KEY_CONTEXT;

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO * PCERT_KEY_USAGE_RESTRICTION_INFO;

typedef struct _CERT_KEYGEN_REQUEST_INFO * PCERT_KEYGEN_REQUEST_INFO;

typedef struct _CERT_LDAP_STORE_OPENED_PARA * PCERT_LDAP_STORE_OPENED_PARA;

typedef struct _CERT_LOGOTYPE_DETAILS * PCERT_LOGOTYPE_DETAILS;

typedef struct _CERT_LOGOTYPE_EXT_INFO * PCERT_LOGOTYPE_EXT_INFO;

typedef struct _CRYPTOAPI_BLOB * PCERT_NAME_BLOB;

typedef struct _CERT_NAME_CONSTRAINTS_INFO * PCERT_NAME_CONSTRAINTS_INFO;

typedef struct _CERT_NAME_INFO * PCERT_NAME_INFO;

typedef struct _CERT_NAME_VALUE * PCERT_NAME_VALUE;

typedef struct _CERT_OR_CRL_BUNDLE * PCERT_OR_CRL_BUNDLE;

typedef struct _CERT_PAIR * PCERT_PAIR;

typedef struct _CERT_PHYSICAL_STORE_INFO * PCERT_PHYSICAL_STORE_INFO;

typedef struct _CERT_POLICIES_INFO * PCERT_POLICIES_INFO;

typedef struct _CERT_POLICY95_QUALIFIER1 * PCERT_POLICY95_QUALIFIER1;

typedef struct _CERT_POLICY_CONSTRAINTS_INFO * PCERT_POLICY_CONSTRAINTS_INFO;

typedef struct _CERT_POLICY_INFO * PCERT_POLICY_INFO;

typedef struct _CERT_POLICY_MAPPINGS_INFO * PCERT_POLICY_MAPPINGS_INFO;

typedef struct _CERT_POLICY_QUALIFIER_INFO * PCERT_POLICY_QUALIFIER_INFO;

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE * PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE;

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE * PCERT_POLICY_QUALIFIER_USER_NOTICE;

typedef struct _CERT_PUBLIC_KEY_INFO * PCERT_PUBLIC_KEY_INFO;

typedef struct _CERT_QC_STATEMENTS_EXT_INFO * PCERT_QC_STATEMENTS_EXT_INFO;

typedef struct _CRYPTOAPI_BLOB * PCERT_RDN_VALUE_BLOB;

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA * PCERT_REGISTRY_STORE_CLIENT_GPT_PARA;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA * PCERT_REGISTRY_STORE_ROAMING_PARA;

typedef struct _CERT_REQUEST_INFO * PCERT_REQUEST_INFO;

typedef struct _CERT_REVOCATION_PARA * PCERT_REVOCATION_PARA;

typedef struct _CERT_REVOCATION_STATUS * PCERT_REVOCATION_STATUS;

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT * PCERT_SERVER_OCSP_RESPONSE_CONTEXT;

typedef struct _CERT_SIGNED_CONTENT_INFO * PCERT_SIGNED_CONTENT_INFO;

typedef struct _CERT_STORE_PROV_FIND_INFO * PCERT_STORE_PROV_FIND_INFO;

typedef struct _CERT_STORE_PROV_INFO * PCERT_STORE_PROV_INFO;

typedef struct _CERT_AUTHORITY_INFO_ACCESS * PCERT_SUBJECT_INFO_ACCESS;

typedef struct _CERT_SYSTEM_STORE_INFO * PCERT_SYSTEM_STORE_INFO;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA * PCERT_SYSTEM_STORE_RELOCATE_PARA;

typedef struct _CERT_TEMPLATE_EXT * PCERT_TEMPLATE_EXT;

typedef struct _CERT_TRUST_STATUS * PCERT_TRUST_STATUS;

typedef struct _CERT_X942_DH_PARAMETERS * PCERT_X942_DH_PARAMETERS;

typedef struct _CMC_ADD_ATTRIBUTES_INFO * PCMC_ADD_ATTRIBUTES_INFO;

typedef struct _CMC_ADD_EXTENSIONS_INFO * PCMC_ADD_EXTENSIONS_INFO;

typedef struct _CMC_DATA_INFO * PCMC_DATA_INFO;

typedef struct _CMC_RESPONSE_INFO * PCMC_RESPONSE_INFO;

typedef struct _CMC_STATUS_INFO * PCMC_STATUS_INFO;

typedef struct _CMS_DH_KEY_INFO * PCMS_DH_KEY_INFO;

typedef struct _CMS_KEY_INFO * PCMS_KEY_INFO;

typedef CRYPT_ATTRIBUTES * PCMSG_ATTR;

typedef struct _CMSG_CMS_RECIPIENT_INFO * PCMSG_CMS_RECIPIENT_INFO;

typedef struct _CMSG_CMS_SIGNER_INFO * PCMSG_CMS_SIGNER_INFO;

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO * PCMSG_CNG_CONTENT_DECRYPT_INFO;

typedef struct _CMSG_CONTENT_ENCRYPT_INFO * PCMSG_CONTENT_ENCRYPT_INFO;

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA * PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CMSG_CTRL_DECRYPT_PARA * PCMSG_CTRL_DECRYPT_PARA;

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA * PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA * PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA;

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA * PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA;

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA * PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA * PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO * PCMSG_ENCRYPTED_ENCODE_INFO;

typedef struct _CMSG_ENVELOPED_ENCODE_INFO * PCMSG_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_HASHED_ENCODE_INFO * PCMSG_HASHED_ENCODE_INFO;

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO * PCMSG_KEY_AGREE_ENCRYPT_INFO;

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO * PCMSG_KEY_TRANS_ENCRYPT_INFO;

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO * PCMSG_MAIL_LIST_ENCRYPT_INFO;

typedef struct _CMSG_RC2_AUX_INFO * PCMSG_RC2_AUX_INFO;

typedef struct _CMSG_RC4_AUX_INFO * PCMSG_RC4_AUX_INFO;

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO * PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;

typedef struct _CMSG_SIGNED_ENCODE_INFO * PCMSG_SIGNED_ENCODE_INFO;

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO * PCMSG_SP3_COMPATIBLE_AUX_INFO;

typedef struct _CMSG_STREAM_INFO * PCMSG_STREAM_INFO;

typedef struct _CPS_URLS * PCPS_URLS;

typedef struct _CRL_CONTEXT * PCRL_CONTEXT;

typedef struct _CRL_DIST_POINT_NAME * PCRL_DIST_POINT_NAME;

typedef struct _CRL_DIST_POINTS_INFO * PCRL_DIST_POINTS_INFO;

typedef struct _CRL_FIND_ISSUED_FOR_PARA * PCRL_FIND_ISSUED_FOR_PARA;

typedef struct _CRL_ISSUING_DIST_POINT * PCRL_ISSUING_DIST_POINT;

typedef struct _CRL_REVOCATION_INFO * PCRL_REVOCATION_INFO;

typedef struct _CROSS_CERT_DIST_POINTS_INFO * PCROSS_CERT_DIST_POINTS_INFO;

typedef struct _CRYPT_AES_128_KEY_STATE * PCRYPT_AES_128_KEY_STATE;

typedef struct _CRYPT_AES_256_KEY_STATE * PCRYPT_AES_256_KEY_STATE;

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION * PCRYPT_ASYNC_RETRIEVAL_COMPLETION;

typedef struct _CRYPT_BIT_BLOB * PCRYPT_BIT_BLOB;

typedef struct _CRYPT_BLOB_ARRAY * PCRYPT_BLOB_ARRAY;

typedef struct _CRYPT_CONTENT_INFO * PCRYPT_CONTENT_INFO;

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY * PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;

typedef struct _CRYPT_CREDENTIALS * PCRYPT_CREDENTIALS;

typedef struct _CRYPT_CSP_PROVIDER * PCRYPT_CSP_PROVIDER;

typedef struct _CRYPT_DECODE_PARA * PCRYPT_DECODE_PARA;

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA * PCRYPT_DECRYPT_MESSAGE_PARA;

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA * PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_DIGEST_BLOB;

typedef struct _CRYPT_ECC_CMS_SHARED_INFO * PCRYPT_ECC_CMS_SHARED_INFO;

typedef struct _CRYPT_ENCODE_PARA * PCRYPT_ENCODE_PARA;

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA * PCRYPT_ENCRYPT_MESSAGE_PARA;

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO * PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO;

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR * PCRYPT_ENROLLMENT_NAME_VALUE_PAIR;

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO * PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_HASH_BLOB;

typedef struct _CRYPT_HASH_INFO * PCRYPT_HASH_INFO;

typedef struct _CRYPT_HASH_MESSAGE_PARA * PCRYPT_HASH_MESSAGE_PARA;

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA * PCRYPT_KEY_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA * PCRYPT_KEY_VERIFY_MESSAGE_PARA;

typedef struct _CRYPT_MASK_GEN_ALGORITHM * PCRYPT_MASK_GEN_ALGORITHM;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_OBJID_BLOB;

typedef struct _CRYPT_OBJID_TABLE * PCRYPT_OBJID_TABLE;

typedef struct _CRYPT_OID_FUNC_ENTRY * PCRYPT_OID_FUNC_ENTRY;

typedef struct _CRYPT_OID_INFO * PCRYPT_OID_INFO;

typedef struct _CRYPT_PASSWORD_CREDENTIALSA * PCRYPT_PASSWORD_CREDENTIALSA;

typedef PCRYPT_PASSWORD_CREDENTIALSA PCRYPT_PASSWORD_CREDENTIALS;

typedef struct _CRYPT_PASSWORD_CREDENTIALSW * PCRYPT_PASSWORD_CREDENTIALSW;

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS * PCRYPT_PKCS8_EXPORT_PARAMS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS * PCRYPT_PKCS8_IMPORT_PARAMS;

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS * PCRYPT_PRIVATE_KEY_BLOB_AND_PARAMS;

typedef struct _CRYPT_PRIVATE_KEY_INFO * PCRYPT_PRIVATE_KEY_INFO;

typedef struct _CRYPT_PSOURCE_ALGORITHM * PCRYPT_PSOURCE_ALGORITHM;

typedef struct _CRYPT_RC2_CBC_PARAMETERS * PCRYPT_RC2_CBC_PARAMETERS;

typedef struct _CRYPT_RETRIEVE_AUX_INFO * PCRYPT_RETRIEVE_AUX_INFO;

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS * PCRYPT_RSA_SSA_PSS_PARAMETERS;

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS * PCRYPT_RSAES_OAEP_PARAMETERS;

typedef struct _CRYPT_SEQUENCE_OF_ANY * PCRYPT_SEQUENCE_OF_ANY;

typedef struct _CRYPT_SIGN_MESSAGE_PARA * PCRYPT_SIGN_MESSAGE_PARA;

typedef struct _CRYPT_SMART_CARD_ROOT_INFO * PCRYPT_SMART_CARD_ROOT_INFO;

typedef struct _CRYPT_SMIME_CAPABILITIES * PCRYPT_SMIME_CAPABILITIES;

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO * PCRYPT_TIME_STAMP_REQUEST_INFO;

typedef struct _CRYPTOAPI_BLOB * PCRYPT_UINT_BLOB;

typedef struct _CRYPT_URL_ARRAY * PCRYPT_URL_ARRAY;

typedef struct _CRYPT_URL_INFO * PCRYPT_URL_INFO;

typedef struct _CRYPT_VERIFY_MESSAGE_PARA * PCRYPT_VERIFY_MESSAGE_PARA;

typedef struct _CRYPT_X942_OTHER_INFO * PCRYPT_X942_OTHER_INFO;

typedef struct _CRYPTPROTECT_PROMPTSTRUCT * PCRYPTPROTECT_PROMPTSTRUCT;

typedef struct _CTL_ANY_SUBJECT_INFO * PCTL_ANY_SUBJECT_INFO;

typedef struct _CTL_CONTEXT * PCTL_CONTEXT;

typedef struct _CTL_FIND_SUBJECT_PARA * PCTL_FIND_SUBJECT_PARA;

typedef struct _CTL_USAGE * PCTL_USAGE;

typedef struct _CTL_USAGE_MATCH * PCTL_USAGE_MATCH;

typedef struct _CTL_VERIFY_USAGE_PARA * PCTL_VERIFY_USAGE_PARA;

typedef struct _CTL_VERIFY_USAGE_STATUS * PCTL_VERIFY_USAGE_STATUS;

typedef struct _CRYPTOAPI_BLOB * PDATA_BLOB;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA * PEV_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS * PEV_EXTRA_CERT_CHAIN_POLICY_STATUS;

typedef BOOL (* PFN_CANCEL_ASYNC_RETRIEVAL_FUNC)(HCRYPTASYNC);

typedef BOOL (* PFN_CERT_DLL_OPEN_STORE_PROV_FUNC)(LPCSTR, DWORD, HCRYPTPROV_LEGACY, DWORD, void *, HCERTSTORE, PCERT_STORE_PROV_INFO);

typedef BOOL (* PFN_CERT_ENUM_PHYSICAL_STORE)(void *, DWORD, LPCWSTR, PCERT_PHYSICAL_STORE_INFO, void *, void *);

typedef BOOL (* PFN_CERT_ENUM_SYSTEM_STORE)(void *, DWORD, PCERT_SYSTEM_STORE_INFO, void *, void *);

typedef BOOL (* PFN_CERT_ENUM_SYSTEM_STORE_LOCATION)(LPCWSTR, DWORD, void *, void *);

typedef void (* PFN_CERT_STORE_PROV_CLOSE)(HCERTSTOREPROV, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_CONTROL)(HCERTSTOREPROV, DWORD, DWORD, void *);

typedef BOOL (* PFN_CERT_STORE_PROV_DELETE_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_DELETE_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_DELETE_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_FIND_CERT)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCERT_CONTEXT, DWORD, void * *, PCCERT_CONTEXT *);

typedef BOOL (* PFN_CERT_STORE_PROV_FIND_CRL)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCRL_CONTEXT, DWORD, void * *, PCCRL_CONTEXT *);

typedef BOOL (* PFN_CERT_STORE_PROV_FIND_CTL)(HCERTSTOREPROV, PCCERT_STORE_PROV_FIND_INFO, PCCTL_CONTEXT, DWORD, void * *, PCCTL_CONTEXT *);

typedef BOOL (* PFN_CERT_STORE_PROV_FREE_FIND_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, void *, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_FREE_FIND_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, void *, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_FREE_FIND_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, void *, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_GET_CERT_PROPERTY)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef BOOL (* PFN_CERT_STORE_PROV_GET_CRL_PROPERTY)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef BOOL (* PFN_CERT_STORE_PROV_GET_CTL_PROPERTY)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, DWORD, void *, DWORD *);

typedef BOOL (* PFN_CERT_STORE_PROV_READ_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, PCCERT_CONTEXT *);

typedef BOOL (* PFN_CERT_STORE_PROV_READ_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, PCCRL_CONTEXT *);

typedef BOOL (* PFN_CERT_STORE_PROV_READ_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, PCCTL_CONTEXT *);

typedef BOOL (* PFN_CERT_STORE_PROV_SET_CERT_PROPERTY)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (* PFN_CERT_STORE_PROV_SET_CRL_PROPERTY)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (* PFN_CERT_STORE_PROV_SET_CTL_PROPERTY)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD, DWORD, void *);

typedef BOOL (* PFN_CERT_STORE_PROV_WRITE_CERT)(HCERTSTOREPROV, PCCERT_CONTEXT, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_WRITE_CRL)(HCERTSTOREPROV, PCCRL_CONTEXT, DWORD);

typedef BOOL (* PFN_CERT_STORE_PROV_WRITE_CTL)(HCERTSTOREPROV, PCCTL_CONTEXT, DWORD);

typedef BOOL (* PFN_CMSG_CNG_IMPORT_CONTENT_ENCRYPT_KEY)(PCMSG_CNG_CONTENT_DECRYPT_INFO, DWORD, void *);

typedef BOOL (* PFN_CMSG_CNG_IMPORT_KEY_AGREE)(PCMSG_CNG_CONTENT_DECRYPT_INFO, PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA, DWORD, void *);

typedef BOOL (* PFN_CMSG_CNG_IMPORT_KEY_TRANS)(PCMSG_CNG_CONTENT_DECRYPT_INFO, PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA, DWORD, void *);

typedef BOOL (* PFN_CMSG_EXPORT_ENCRYPT_KEY)(HCRYPTPROV, HCRYPTKEY, PCERT_PUBLIC_KEY_INFO, PBYTE, PDWORD);

typedef BOOL (* PFN_CMSG_EXPORT_KEY_AGREE)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, PCMSG_KEY_AGREE_ENCRYPT_INFO, DWORD, void *);

typedef BOOL (* PFN_CMSG_EXPORT_KEY_TRANS)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, PCMSG_KEY_TRANS_ENCRYPT_INFO, DWORD, void *);

typedef BOOL (* PFN_CMSG_EXPORT_MAIL_LIST)(PCMSG_CONTENT_ENCRYPT_INFO, PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, PCMSG_MAIL_LIST_ENCRYPT_INFO, DWORD, void *);

typedef BOOL (* PFN_CMSG_GEN_CONTENT_ENCRYPT_KEY)(PCMSG_CONTENT_ENCRYPT_INFO, DWORD, void *);

typedef BOOL (* PFN_CMSG_GEN_ENCRYPT_KEY)(HCRYPTPROV *, PCRYPT_ALGORITHM_IDENTIFIER, PVOID, PCERT_PUBLIC_KEY_INFO, PFN_CMSG_ALLOC, HCRYPTKEY *, PBYTE *, PDWORD);

typedef BOOL (* PFN_CMSG_IMPORT_ENCRYPT_KEY)(HCRYPTPROV, DWORD, PCRYPT_ALGORITHM_IDENTIFIER, PCRYPT_ALGORITHM_IDENTIFIER, PBYTE, DWORD, HCRYPTKEY *);

typedef BOOL (* PFN_CMSG_IMPORT_KEY_AGREE)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef BOOL (* PFN_CMSG_IMPORT_KEY_TRANS)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef BOOL (* PFN_CMSG_IMPORT_MAIL_LIST)(PCRYPT_ALGORITHM_IDENTIFIER, PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA, DWORD, void *, HCRYPTKEY *);

typedef void (* PFN_CRYPT_ASYNC_PARAM_FREE_FUNC)(LPSTR, LPVOID);

typedef BOOL (* PFN_CRYPT_CANCEL_RETRIEVAL)(DWORD, void *);

typedef BOOL (* PFN_CRYPT_ENUM_KEYID_PROP)(CRYPT_HASH_BLOB *, DWORD, void *, void *, DWORD, DWORD *, void * *, DWORD *);

typedef BOOL (* PFN_CRYPT_ENUM_OID_FUNC)(DWORD, LPCSTR, LPCSTR, DWORD, DWORD *, LPCWSTR *, BYTE * *, DWORD *, void *);

typedef BOOL (* PFN_CRYPT_ENUM_OID_INFO)(PCCRYPT_OID_INFO, void *);

typedef BOOL (* PFN_CRYPT_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC)(NCRYPT_KEY_HANDLE, DWORD, LPSTR, DWORD, void *, PCERT_PUBLIC_KEY_INFO, DWORD *);

typedef BOOL (* PFN_CRYPT_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC)(DWORD, PCRYPT_ALGORITHM_IDENTIFIER, void * *, LPWSTR *);

typedef BOOL (* PFN_CRYPT_SIGN_AND_ENCODE_HASH_FUNC)(NCRYPT_KEY_HANDLE, DWORD, PCRYPT_ALGORITHM_IDENTIFIER, void *, LPCWSTR, LPCWSTR, BYTE *, DWORD, BYTE *, DWORD *);

typedef BOOL (* PFN_CRYPT_VERIFY_ENCODED_SIGNATURE_FUNC)(DWORD, PCERT_PUBLIC_KEY_INFO, PCRYPT_ALGORITHM_IDENTIFIER, void *, LPCWSTR, LPCWSTR, BYTE *, DWORD, BYTE *, DWORD);

typedef BOOL (* PFN_EXPORT_PRIV_KEY_FUNC)(HCRYPTPROV, DWORD, LPSTR, DWORD, void *, CRYPT_PRIVATE_KEY_INFO *, DWORD *);

typedef void (* PFN_FREE_ENCODED_OBJECT_FUNC)(LPCSTR, PCRYPT_BLOB_ARRAY, LPVOID);

typedef BOOL (* PFN_IMPORT_PRIV_KEY_FUNC)(HCRYPTPROV, CRYPT_PRIVATE_KEY_INFO *, DWORD, void *);

typedef BOOL (* PFN_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC)(DWORD, PCERT_PUBLIC_KEY_INFO, DWORD, void *, BCRYPT_KEY_HANDLE *);

typedef HANDLE * PHCRYPTASYNC;

typedef struct _HMAC_Info * PHMAC_INFO;

typedef struct _HTTPSPolicyCallbackData * PHTTPSPolicyCallbackData;

typedef struct _KEY_TYPE_SUBTYPE * PKEY_TYPE_SUBTYPE;

typedef struct _OCSP_BASIC_RESPONSE_INFO * POCSP_BASIC_RESPONSE_INFO;

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO * POCSP_BASIC_SIGNED_RESPONSE_INFO;

typedef struct _OCSP_CERT_ID * POCSP_CERT_ID;

typedef struct _OCSP_REQUEST_INFO * POCSP_REQUEST_INFO;

typedef struct _OCSP_RESPONSE_INFO * POCSP_RESPONSE_INFO;

typedef struct _OCSP_SIGNED_REQUEST_INFO * POCSP_SIGNED_REQUEST_INFO;

typedef struct _ROOT_INFO_LUID * PROOT_INFO_LUID;

typedef struct _PROV_ENUMALGS PROV_ENUMALGS;

typedef struct _PROV_ENUMALGS_EX PROV_ENUMALGS_EX;

typedef struct _SCHANNEL_ALG * PSCHANNEL_ALG;

typedef struct _HTTPSPolicyCallbackData * PSSL_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _PUBLICKEYSTRUC PUBLICKEYSTRUC;

typedef struct _VTableProvStruc * PVTableProvStruc;

typedef struct _RSAPUBKEY RSAPUBKEY;

typedef struct _SCHANNEL_ALG SCHANNEL_ALG;

typedef struct _HTTPSPolicyCallbackData SSL_EXTRA_CERT_CHAIN_POLICY_PARA;

typedef struct _PUBKEY TEKPUBKEY;

typedef struct _VTableProvStruc VTableProvStruc;

#define DC_BINNAMES 12

#define DC_BINS 6

#define DC_COPIES 18

#define DC_DRIVER 11

#define DC_DUPLEX 7

#define DC_ENUMRESOLUTIONS 13

#define DC_EXTRA 9

#define DC_FIELDS 1

#define DC_FILEDEPENDENCIES 14

#define DC_MAXEXTENT 5

#define DC_MINEXTENT 4

#define DC_ORIENTATION 17

#define DC_PAPERNAMES 16

#define DC_PAPERS 2

#define DC_PAPERSIZE 3

#define DC_SIZE 8

#define DC_TRUETYPE 15

#define DC_VERSION 10

#define DM_COPY 2

#define DM_IN_BUFFER 8

#define DM_IN_PROMPT 4

#define DM_MODIFY 8

#define DM_OUT_BUFFER 2

#define DM_OUT_DEFAULT 1

#define DM_PROMPT 4

#define DM_UPDATE 1

#define FALSE 0

#define HFILE_ERROR -1

#define MAX_PATH 260

#define STRICT 1

#define TRUE 1

typedef WORD ATOM;

typedef HANDLE GLOBALHANDLE;

typedef struct HCOLORSPACE__ HCOLORSPACE__, *PHCOLORSPACE__;

typedef struct HCOLORSPACE__ * HCOLORSPACE;

struct HCOLORSPACE__ {
    int unused;
};

typedef HICON HCURSOR;

typedef struct HDESK__ HDESK__, *PHDESK__;

typedef struct HDESK__ * HDESK;

struct HDESK__ {
    int unused;
};

typedef int HFILE;

typedef void * HGDIOBJ;

typedef struct HGLRC__ HGLRC__, *PHGLRC__;

typedef struct HGLRC__ * HGLRC;

struct HGLRC__ {
    int unused;
};

typedef struct HHOOK__ HHOOK__, *PHHOOK__;

typedef struct HHOOK__ * HHOOK;

struct HHOOK__ {
    int unused;
};

typedef HANDLE HLOCAL;

typedef struct HLSURF__ HLSURF__, *PHLSURF__;

typedef struct HLSURF__ * HLSURF;

struct HLSURF__ {
    int unused;
};

typedef struct HMETAFILE__ HMETAFILE__, *PHMETAFILE__;

typedef struct HMETAFILE__ * HMETAFILE;

struct HMETAFILE__ {
    int unused;
};

typedef struct HMONITOR__ HMONITOR__, *PHMONITOR__;

typedef struct HMONITOR__ * HMONITOR;

struct HMONITOR__ {
    int unused;
};

typedef struct HRSRC__ HRSRC__, *PHRSRC__;

typedef struct HRSRC__ * HRSRC;

struct HRSRC__ {
    int unused;
};

typedef struct HSPRITE__ HSPRITE__, *PHSPRITE__;

typedef struct HSPRITE__ * HSPRITE;

struct HSPRITE__ {
    int unused;
};

typedef struct HSTR__ HSTR__, *PHSTR__;

typedef struct HSTR__ * HSTR;

struct HSTR__ {
    int unused;
};

typedef struct HUMPD__ HUMPD__, *PHUMPD__;

typedef struct HUMPD__ * HUMPD;

struct HUMPD__ {
    int unused;
};

typedef struct HWINEVENTHOOK__ HWINEVENTHOOK__, *PHWINEVENTHOOK__;

typedef struct HWINEVENTHOOK__ * HWINEVENTHOOK;

struct HWINEVENTHOOK__ {
    int unused;
};

typedef struct HWINSTA__ HWINSTA__, *PHWINSTA__;

typedef struct HWINSTA__ * HWINSTA;

struct HWINSTA__ {
    int unused;
};

typedef HANDLE LOCALHANDLE;

typedef BOOL * LPBOOL;

typedef DWORD * LPCOLORREF;

typedef struct tagPOINT * LPPOINT;

typedef struct tagPOINTS tagPOINTS, *PtagPOINTS;

typedef struct tagPOINTS * LPPOINTS;

struct tagPOINTS {
    SHORT x;
    SHORT y;
};

typedef struct tagSIZE * LPSIZE;

typedef WORD * LPWORD;

typedef int (* NEARPROC)(void);

typedef struct tagPOINT * NPPOINT;

typedef struct tagRECT * NPRECT;

typedef FLOAT * PFLOAT;

typedef int * PINT;

typedef struct tagPOINTS POINTS;

typedef struct tagPOINT * PPOINT;

typedef struct _POINTL * PPOINTL;

typedef struct tagPOINTS * PPOINTS;

typedef struct tagRECT * PRECT;

typedef struct _RECTL * PRECTL;

typedef int (* PROC)(void);

typedef struct tagSIZE * PSIZE;

typedef SIZE * PSIZEL;

typedef char * PSZ;

typedef USHORT * PUSHORT;

typedef WORD * PWORD;

typedef HANDLE * SPHANDLE;

#define DOT11_BSSID_LIST_REVISION_1 1

#define DOT11_RATE_SET_MAX_LENGTH 126

typedef enum _DOT11_PHY_TYPE {
    dot11_phy_type_IHV_end=-1,
    dot11_phy_type_IHV_start=-2147483648,
    dot11_phy_type_any=1,
    dot11_phy_type_dsss=2,
    dot11_phy_type_erp=6,
    dot11_phy_type_fhss=1,
    dot11_phy_type_hrdsss=5,
    dot11_phy_type_ht=7,
    dot11_phy_type_irbaseband=3,
    dot11_phy_type_ofdm=4,
    dot11_phy_type_unknown=0
} _DOT11_PHY_TYPE;

typedef struct _DOT11_RATE_SET _DOT11_RATE_SET, *P_DOT11_RATE_SET;

struct _DOT11_RATE_SET {
    ULONG uRateSetLength;
    UCHAR ucRateSet[126];
};

typedef struct DOT11_BSSID_LIST DOT11_BSSID_LIST, *PDOT11_BSSID_LIST;

typedef UCHAR DOT11_MAC_ADDRESS[6];

struct DOT11_BSSID_LIST {
    NDIS_OBJECT_HEADER Header;
    ULONG uNumOfEntries;
    ULONG uTotalNumOfEntries;
    DOT11_MAC_ADDRESS BSSIDs[1];
};

typedef UCHAR DOT11_COUNTRY_OR_REGION_STRING[3];

typedef enum _DOT11_PHY_TYPE DOT11_PHY_TYPE;

typedef struct _DOT11_RATE_SET DOT11_RATE_SET;

typedef DOT11_COUNTRY_OR_REGION_STRING * PDOT11_COUNTRY_OR_REGION_STRING;

typedef DOT11_MAC_ADDRESS * PDOT11_MAC_ADDRESS;

typedef enum _DOT11_PHY_TYPE * PDOT11_PHY_TYPE;

typedef struct _DOT11_RATE_SET * PDOT11_RATE_SET;

typedef GUID APPLICATION_ID;

typedef ulong CONTENT_ID;

typedef LPWSTR DEVICE_ID;

typedef GUID ENDPOINT_ID;

typedef struct ISideShowBulkCapabilities ISideShowBulkCapabilities, *PISideShowBulkCapabilities;

typedef struct ISideShowBulkCapabilitiesVtbl ISideShowBulkCapabilitiesVtbl, *PISideShowBulkCapabilitiesVtbl;

typedef struct ISideShowKeyCollection ISideShowKeyCollection, *PISideShowKeyCollection;

typedef struct ISideShowPropVariantCollection ISideShowPropVariantCollection, *PISideShowPropVariantCollection;

typedef struct ISideShowKeyCollectionVtbl ISideShowKeyCollectionVtbl, *PISideShowKeyCollectionVtbl;

typedef struct ISideShowPropVariantCollectionVtbl ISideShowPropVariantCollectionVtbl, *PISideShowPropVariantCollectionVtbl;

struct ISideShowBulkCapabilitiesVtbl {
    HRESULT (* QueryInterface)(struct ISideShowBulkCapabilities *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowBulkCapabilities *);
    ULONG (* Release)(struct ISideShowBulkCapabilities *);
    HRESULT (* GetCapability)(struct ISideShowBulkCapabilities *, PROPERTYKEY *, PROPVARIANT *);
    HRESULT (* GetCapabilities)(struct ISideShowBulkCapabilities *, struct ISideShowKeyCollection *, struct ISideShowPropVariantCollection * *);
};

struct ISideShowBulkCapabilities {
    struct ISideShowBulkCapabilitiesVtbl * lpVtbl;
};

struct ISideShowKeyCollection {
    struct ISideShowKeyCollectionVtbl * lpVtbl;
};

struct ISideShowKeyCollectionVtbl {
    HRESULT (* QueryInterface)(struct ISideShowKeyCollection *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowKeyCollection *);
    ULONG (* Release)(struct ISideShowKeyCollection *);
    HRESULT (* Add)(struct ISideShowKeyCollection *, PROPERTYKEY *);
    HRESULT (* Clear)(struct ISideShowKeyCollection *);
    HRESULT (* GetAt)(struct ISideShowKeyCollection *, DWORD, PROPERTYKEY *);
    HRESULT (* GetCount)(struct ISideShowKeyCollection *, DWORD *);
    HRESULT (* RemoveAt)(struct ISideShowKeyCollection *, DWORD);
};

struct ISideShowPropVariantCollection {
    struct ISideShowPropVariantCollectionVtbl * lpVtbl;
};

struct ISideShowPropVariantCollectionVtbl {
    HRESULT (* QueryInterface)(struct ISideShowPropVariantCollection *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowPropVariantCollection *);
    ULONG (* Release)(struct ISideShowPropVariantCollection *);
    HRESULT (* Add)(struct ISideShowPropVariantCollection *, PROPVARIANT *);
    HRESULT (* Clear)(struct ISideShowPropVariantCollection *);
    HRESULT (* GetAt)(struct ISideShowPropVariantCollection *, DWORD, PROPVARIANT *);
    HRESULT (* GetCount)(struct ISideShowPropVariantCollection *, DWORD *);
    HRESULT (* RemoveAt)(struct ISideShowPropVariantCollection *, DWORD);
};

typedef struct ISideShowCapabilities ISideShowCapabilities, *PISideShowCapabilities;

typedef struct ISideShowCapabilitiesVtbl ISideShowCapabilitiesVtbl, *PISideShowCapabilitiesVtbl;

struct ISideShowCapabilitiesVtbl {
    HRESULT (* QueryInterface)(struct ISideShowCapabilities *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowCapabilities *);
    ULONG (* Release)(struct ISideShowCapabilities *);
    HRESULT (* GetCapability)(struct ISideShowCapabilities *, PROPERTYKEY *, PROPVARIANT *);
};

struct ISideShowCapabilities {
    struct ISideShowCapabilitiesVtbl * lpVtbl;
};

typedef struct ISideShowCapabilitiesCollection ISideShowCapabilitiesCollection, *PISideShowCapabilitiesCollection;

typedef struct ISideShowCapabilitiesCollectionVtbl ISideShowCapabilitiesCollectionVtbl, *PISideShowCapabilitiesCollectionVtbl;

struct ISideShowCapabilitiesCollectionVtbl {
    HRESULT (* QueryInterface)(struct ISideShowCapabilitiesCollection *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowCapabilitiesCollection *);
    ULONG (* Release)(struct ISideShowCapabilitiesCollection *);
    HRESULT (* GetCount)(struct ISideShowCapabilitiesCollection *, DWORD *);
    HRESULT (* GetAt)(struct ISideShowCapabilitiesCollection *, DWORD, struct ISideShowCapabilities * *);
};

struct ISideShowCapabilitiesCollection {
    struct ISideShowCapabilitiesCollectionVtbl * lpVtbl;
};

typedef struct ISideShowContent ISideShowContent, *PISideShowContent;

typedef struct ISideShowContentVtbl ISideShowContentVtbl, *PISideShowContentVtbl;

typedef CONTENT_ID * PCONTENT_ID;

struct ISideShowContent {
    struct ISideShowContentVtbl * lpVtbl;
};

struct ISideShowContentVtbl {
    HRESULT (* QueryInterface)(struct ISideShowContent *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowContent *);
    ULONG (* Release)(struct ISideShowContent *);
    HRESULT (* GetContent)(struct ISideShowContent *, struct ISideShowCapabilities *, DWORD *, BYTE * *);
    HRESULT (* get_ContentId)(struct ISideShowContent *, PCONTENT_ID);
    HRESULT (* get_DifferentiateContent)(struct ISideShowContent *, BOOL *);
};

typedef struct ISideShowContentManager ISideShowContentManager, *PISideShowContentManager;

typedef struct ISideShowContentManagerVtbl ISideShowContentManagerVtbl, *PISideShowContentManagerVtbl;

typedef struct ISideShowEvents ISideShowEvents, *PISideShowEvents;

typedef struct ISideShowEventsVtbl ISideShowEventsVtbl, *PISideShowEventsVtbl;

struct ISideShowContentManager {
    struct ISideShowContentManagerVtbl * lpVtbl;
};

struct ISideShowEvents {
    struct ISideShowEventsVtbl * lpVtbl;
};

struct ISideShowEventsVtbl {
    HRESULT (* QueryInterface)(struct ISideShowEvents *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowEvents *);
    ULONG (* Release)(struct ISideShowEvents *);
    HRESULT (* ContentMissing)(struct ISideShowEvents *, CONTENT_ID, struct ISideShowContent * *);
    HRESULT (* ApplicationEvent)(struct ISideShowEvents *, struct ISideShowCapabilities *, DWORD, DWORD, BYTE *);
    HRESULT (* DeviceAdded)(struct ISideShowEvents *, struct ISideShowCapabilities *);
    HRESULT (* DeviceRemoved)(struct ISideShowEvents *, struct ISideShowCapabilities *);
};

struct ISideShowContentManagerVtbl {
    HRESULT (* QueryInterface)(struct ISideShowContentManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowContentManager *);
    ULONG (* Release)(struct ISideShowContentManager *);
    HRESULT (* Add)(struct ISideShowContentManager *, struct ISideShowContent *);
    HRESULT (* Remove)(struct ISideShowContentManager *, CONTENT_ID);
    HRESULT (* RemoveAll)(struct ISideShowContentManager *);
    HRESULT (* SetEventSink)(struct ISideShowContentManager *, struct ISideShowEvents *);
    HRESULT (* GetDeviceCapabilities)(struct ISideShowContentManager *, struct ISideShowCapabilitiesCollection * *);
};

typedef struct ISideShowNotification ISideShowNotification, *PISideShowNotification;

typedef struct ISideShowNotificationVtbl ISideShowNotificationVtbl, *PISideShowNotificationVtbl;

typedef ulong NOTIFICATION_ID;

typedef NOTIFICATION_ID * PNOTIFICATION_ID;

struct ISideShowNotification {
    struct ISideShowNotificationVtbl * lpVtbl;
};

struct ISideShowNotificationVtbl {
    HRESULT (* QueryInterface)(struct ISideShowNotification *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowNotification *);
    ULONG (* Release)(struct ISideShowNotification *);
    HRESULT (* get_NotificationId)(struct ISideShowNotification *, PNOTIFICATION_ID);
    HRESULT (* put_NotificationId)(struct ISideShowNotification *, NOTIFICATION_ID);
    HRESULT (* get_Title)(struct ISideShowNotification *, LPWSTR *);
    HRESULT (* put_Title)(struct ISideShowNotification *, LPWSTR);
    HRESULT (* get_Message)(struct ISideShowNotification *, LPWSTR *);
    HRESULT (* put_Message)(struct ISideShowNotification *, LPWSTR);
    HRESULT (* get_Image)(struct ISideShowNotification *, HICON *);
    HRESULT (* put_Image)(struct ISideShowNotification *, HICON);
    HRESULT (* get_ExpirationTime)(struct ISideShowNotification *, SYSTEMTIME *);
    HRESULT (* put_ExpirationTime)(struct ISideShowNotification *, SYSTEMTIME *);
};

typedef struct ISideShowNotificationManager ISideShowNotificationManager, *PISideShowNotificationManager;

typedef struct ISideShowNotificationManagerVtbl ISideShowNotificationManagerVtbl, *PISideShowNotificationManagerVtbl;

struct ISideShowNotificationManager {
    struct ISideShowNotificationManagerVtbl * lpVtbl;
};

struct ISideShowNotificationManagerVtbl {
    HRESULT (* QueryInterface)(struct ISideShowNotificationManager *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowNotificationManager *);
    ULONG (* Release)(struct ISideShowNotificationManager *);
    HRESULT (* Show)(struct ISideShowNotificationManager *, struct ISideShowNotification *);
    HRESULT (* Revoke)(struct ISideShowNotificationManager *, NOTIFICATION_ID);
    HRESULT (* RevokeAll)(struct ISideShowNotificationManager *);
};

typedef struct ISideShowSession ISideShowSession, *PISideShowSession;

typedef struct ISideShowSessionVtbl ISideShowSessionVtbl, *PISideShowSessionVtbl;

typedef GUID * REFAPPLICATION_ID;

typedef GUID * REFENDPOINT_ID;

struct ISideShowSession {
    struct ISideShowSessionVtbl * lpVtbl;
};

struct ISideShowSessionVtbl {
    HRESULT (* QueryInterface)(struct ISideShowSession *, IID *, void * *);
    ULONG (* AddRef)(struct ISideShowSession *);
    ULONG (* Release)(struct ISideShowSession *);
    HRESULT (* RegisterContent)(struct ISideShowSession *, REFAPPLICATION_ID, REFENDPOINT_ID, struct ISideShowContentManager * *);
    HRESULT (* RegisterNotifications)(struct ISideShowSession *, REFAPPLICATION_ID, struct ISideShowNotificationManager * *);
};

typedef APPLICATION_ID * PAPPLICATION_ID;

typedef DEVICE_ID * PDEVICE_ID;

typedef ENDPOINT_ID * PENDPOINT_ID;

typedef struct SideShowKeyCollection SideShowKeyCollection, *PSideShowKeyCollection;

struct SideShowKeyCollection {
};

typedef struct SideShowNotification SideShowNotification, *PSideShowNotification;

struct SideShowNotification {
};

typedef struct SideShowPropVariantCollection SideShowPropVariantCollection, *PSideShowPropVariantCollection;

struct SideShowPropVariantCollection {
};

typedef struct SideShowSession SideShowSession, *PSideShowSession;

struct SideShowSession {
};

#define CACHE_E_FIRST 2147746160

#define CACHE_E_LAST 2147746175

#define CACHE_E_NOCACHE_UPDATED 2147746160

#define CACHE_S_FIRST 262512

#define CACHE_S_FORMATETC_NOTSUPPORTED 262512

#define CACHE_S_LAST 262527

#define CACHE_S_SAMECACHE 262513

#define CACHE_S_SOMECACHES_NOTUPDATED 262514

#define CAT_E_CATIDNOEXIST 2147746144

#define CAT_E_FIRST 2147746144

#define CAT_E_LAST 2147746145

#define CAT_E_NODESCRIPTION 2147746145

#define CERT_E_CHAINING 2148204810

#define CERT_E_CN_NO_MATCH 2148204815

#define CERT_E_CRITICAL 2148204805

#define CERT_E_EXPIRED 2148204801

#define CERT_E_INVALID_NAME 2148204820

#define CERT_E_INVALID_POLICY 2148204819

#define CERT_E_ISSUERCHAINING 2148204807

#define CERT_E_MALFORMED 2148204808

#define CERT_E_PATHLENCONST 2148204804

#define CERT_E_PURPOSE 2148204806

#define CERT_E_REVOCATION_FAILURE 2148204814

#define CERT_E_REVOKED 2148204812

#define CERT_E_ROLE 2148204803

#define CERT_E_UNTRUSTEDCA 2148204818

#define CERT_E_UNTRUSTEDROOT 2148204809

#define CERT_E_UNTRUSTEDTESTROOT 2148204813

#define CERT_E_VALIDITYPERIODNESTING 2148204802

#define CERT_E_WRONG_USAGE 2148204816

#define CERTSRV_E_ADMIN_DENIED_REQUEST 2148089876

#define CERTSRV_E_ALIGNMENT_FAULT 2148089872

#define CERTSRV_E_ARCHIVED_KEY_REQUIRED 2148091908

#define CERTSRV_E_ARCHIVED_KEY_UNEXPECTED 2148091920

#define CERTSRV_E_BAD_RENEWAL_CERT_ATTRIBUTE 2148089870

#define CERTSRV_E_BAD_RENEWAL_SUBJECT 2148091910

#define CERTSRV_E_BAD_REQUEST_KEY_ARCHIVAL 2148089868

#define CERTSRV_E_BAD_REQUESTSTATUS 2148089859

#define CERTSRV_E_BAD_REQUESTSUBJECT 2148089857

#define CERTSRV_E_BAD_TEMPLATE_VERSION 2148091911

#define CERTSRV_E_CERT_TYPE_OVERLAP 2148091924

#define CERTSRV_E_DOWNLEVEL_DC_SSL_OR_UPGRADE 2148089875

#define CERTSRV_E_ENCODING_LENGTH 2148089863

#define CERTSRV_E_ENROLL_DENIED 2148089873

#define CERTSRV_E_INVALID_CA_CERTIFICATE 2148089861

#define CERTSRV_E_ISSUANCE_POLICY_REQUIRED 2148091916

#define CERTSRV_E_KEY_ARCHIVAL_NOT_CONFIGURED 2148089866

#define CERTSRV_E_KEY_LENGTH 2148091921

#define CERTSRV_E_NO_CAADMIN_DEFINED 2148089869

#define CERTSRV_E_NO_CERT_TYPE 2148091905

#define CERTSRV_E_NO_DB_SESSIONS 2148089871

#define CERTSRV_E_NO_POLICY_SERVER 2148089877

#define CERTSRV_E_NO_REQUEST 2148089858

#define CERTSRV_E_NO_VALID_KRA 2148089867

#define CERTSRV_E_PROPERTY_EMPTY 2148089860

#define CERTSRV_E_RESTRICTEDOFFICER 2148089865

#define CERTSRV_E_ROLECONFLICT 2148089864

#define CERTSRV_E_SERVER_SUSPENDED 2148089862

#define CERTSRV_E_SIGNATURE_COUNT 2148091914

#define CERTSRV_E_SIGNATURE_POLICY_REQUIRED 2148091913

#define CERTSRV_E_SIGNATURE_REJECTED 2148091915

#define CERTSRV_E_SMIME_REQUIRED 2148091909

#define CERTSRV_E_SUBJECT_ALT_NAME_REQUIRED 2148091907

#define CERTSRV_E_SUBJECT_DIRECTORY_GUID_REQUIRED 2148091918

#define CERTSRV_E_SUBJECT_DNS_REQUIRED 2148091919

#define CERTSRV_E_SUBJECT_EMAIL_REQUIRED 2148091922

#define CERTSRV_E_SUBJECT_UPN_REQUIRED 2148091917

#define CERTSRV_E_TEMPLATE_CONFLICT 2148091906

#define CERTSRV_E_TEMPLATE_DENIED 2148089874

#define CERTSRV_E_TEMPLATE_POLICY_REQUIRED 2148091912

#define CERTSRV_E_TOO_MANY_SIGNATURES 2148091925

#define CERTSRV_E_UNKNOWN_CERT_TYPE 2148091923

#define CERTSRV_E_UNSUPPORTED_CERT_TYPE 2148091904

#define CLASS_E_CLASSNOTAVAILABLE 2147746065

#define CLASS_E_NOAGGREGATION 2147746064

#define CLASS_E_NOTLICENSED 2147746066

#define CLASSFACTORY_E_FIRST 2147746064

#define CLASSFACTORY_E_LAST 2147746079

#define CLASSFACTORY_S_FIRST 262416

#define CLASSFACTORY_S_LAST 262431

#define CLIENTSITE_E_FIRST 2147746192

#define CLIENTSITE_E_LAST 2147746207

#define CLIENTSITE_S_FIRST 262544

#define CLIENTSITE_S_LAST 262559

#define CLIPBRD_E_BAD_DATA 2147746259

#define CLIPBRD_E_CANT_CLOSE 2147746260

#define CLIPBRD_E_CANT_EMPTY 2147746257

#define CLIPBRD_E_CANT_OPEN 2147746256

#define CLIPBRD_E_CANT_SET 2147746258

#define CLIPBRD_E_FIRST 2147746256

#define CLIPBRD_E_LAST 2147746271

#define CLIPBRD_S_FIRST 262608

#define CLIPBRD_S_LAST 262623

#define CO_E_ACCESSCHECKFAILED 2147549482

#define CO_E_ACESINWRONGORDER 2147549498

#define CO_E_ACNOTINITIALIZED 2147549503

#define CO_E_ACTIVATIONFAILED 2147803169

#define CO_E_ACTIVATIONFAILED_CATALOGERROR 2147803171

#define CO_E_ACTIVATIONFAILED_EVENTLOGGED 2147803170

#define CO_E_ACTIVATIONFAILED_TIMEOUT 2147803172

#define CO_E_ALREADYINITIALIZED 2147746289

#define CO_E_APPDIDNTREG 2147746302

#define CO_E_APPNOTFOUND 2147746293

#define CO_E_APPSINGLEUSE 2147746294

#define CO_E_ASYNC_WORK_REJECTED 2147500073

#define CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT 2147500068

#define CO_E_BAD_PATH 2148007940

#define CO_E_BAD_SERVER_NAME 2147500052

#define CO_E_CALL_OUT_OF_TX_SCOPE_NOT_ALLOWED 2147803184

#define CO_E_CANCEL_DISABLED 2147549504

#define CO_E_CANT_REMOTE 2147500051

#define CO_E_CANTDETERMINECLASS 2147746290

#define CO_E_CLASS_CREATE_FAILED 2148007937

#define CO_E_CLASS_DISABLED 2147500071

#define CO_E_CLASSSTRING 2147746291

#define CO_E_CLRNOTAVAILABLE 2147500072

#define CO_E_CLSREG_INCONSISTENT 2147500063

#define CO_E_CONVERSIONFAILED 2147549486

#define CO_E_CREATEPROCESS_FAILURE 2147500056

#define CO_E_DBERROR 2147803179

#define CO_E_DECODEFAILED 2147549501

#define CO_E_DLLNOTFOUND 2147746296

#define CO_E_ELEVATION_DISABLED 2148007959

#define CO_E_ERRORINAPP 2147746295

#define CO_E_ERRORINDLL 2147746297

#define CO_E_EXCEEDSYSACLLIMIT 2147549497

#define CO_E_EXIT_TRANSACTION_SCOPE_NOT_CALLED 2147803185

#define CO_E_FAILEDTOCLOSEHANDLE 2147549496

#define CO_E_FAILEDTOCREATEFILE 2147549495

#define CO_E_FAILEDTOGENUUID 2147549494

#define CO_E_FAILEDTOGETSECCTX 2147549476

#define CO_E_FAILEDTOGETTOKENINFO 2147549478

#define CO_E_FAILEDTOGETWINDIR 2147549492

#define CO_E_FAILEDTOIMPERSONATE 2147549475

#define CO_E_FAILEDTOOPENPROCESSTOKEN 2147549500

#define CO_E_FAILEDTOOPENTHREADTOKEN 2147549477

#define CO_E_FAILEDTOQUERYCLIENTBLANKET 2147549480

#define CO_E_FAILEDTOSETDACL 2147549481

#define CO_E_FIRST 2147746288

#define CO_E_IIDREG_INCONSISTENT 2147500064

#define CO_E_IIDSTRING 2147746292

#define CO_E_INCOMPATIBLESTREAMVERSION 2147549499

#define CO_E_INIT_CLASS_CACHE 2147500041

#define CO_E_INIT_MEMORY_ALLOCATOR 2147500040

#define CO_E_INIT_ONLY_SINGLE_THREADED 2147500050

#define CO_E_INIT_RPC_CHANNEL 2147500042

#define CO_E_INIT_SCM_EXEC_FAILURE 2147500049

#define CO_E_INIT_SCM_FILE_MAPPING_EXISTS 2147500047

#define CO_E_INIT_SCM_MAP_VIEW_OF_FILE 2147500048

#define CO_E_INIT_SCM_MUTEX_EXISTS 2147500046

#define CO_E_INIT_SHARED_ALLOCATOR 2147500039

#define CO_E_INIT_TLS 2147500038

#define CO_E_INIT_TLS_CHANNEL_CONTROL 2147500044

#define CO_E_INIT_TLS_SET_CHANNEL_CONTROL 2147500043

#define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR 2147500045

#define CO_E_INITIALIZATIONFAILED 2147803173

#define CO_E_INVALIDSID 2147549485

#define CO_E_ISOLEVELMISMATCH 2147803183

#define CO_E_LAST 2147746303

#define CO_E_LAUNCH_PERMSSION_DENIED 2147500059

#define CO_E_LOOKUPACCNAMEFAILED 2147549490

#define CO_E_LOOKUPACCSIDFAILED 2147549488

#define CO_E_MALFORMED_SPN 2147500083

#define CO_E_MISSING_DISPLAYNAME 2148007957

#define CO_E_MSI_ERROR 2147500067

#define CO_E_NETACCESSAPIFAILED 2147549483

#define CO_E_NO_SECCTX_IN_ACTIVATE 2147500075

#define CO_E_NOCOOKIES 2147803178

#define CO_E_NOIISINTRINSICS 2147803177

#define CO_E_NOMATCHINGNAMEFOUND 2147549489

#define CO_E_NOMATCHINGSIDFOUND 2147549487

#define CO_E_NOSYNCHRONIZATION 2147803182

#define CO_E_NOT_SUPPORTED 2147500065

#define CO_E_NOTCONSTRUCTED 2147803181

#define CO_E_NOTINITIALIZED 2147746288

#define CO_E_NOTPOOLED 2147803180

#define CO_E_OBJISREG 2147746300

#define CO_E_OBJNOTCONNECTED 2147746301

#define CO_E_OBJNOTREG 2147746299

#define CO_E_OBJSRV_RPC_FAILURE 2148007942

#define CO_E_OLE1DDE_DISABLED 2147500054

#define CO_E_PATHTOOLONG 2147549493

#define CO_E_RELEASED 2147746303

#define CO_E_RELOAD_DLL 2147500066

#define CO_E_REMOTE_COMMUNICATION_FAILURE 2147500061

#define CO_E_RUNAS_CREATEPROCESS_FAILURE 2147500057

#define CO_E_RUNAS_LOGON_FAILURE 2147500058

#define CO_E_RUNAS_SYNTAX 2147500055

#define CO_E_RUNAS_VALUE_MUST_BE_AAA 2148007958

#define CO_E_SCM_ERROR 2148007938

#define CO_E_SCM_RPC_FAILURE 2148007939

#define CO_E_SERVER_EXEC_FAILURE 2148007941

#define CO_E_SERVER_INIT_TIMEOUT 2147500074

#define CO_E_SERVER_NOT_PAUSED 2147500070

#define CO_E_SERVER_PAUSED 2147500069

#define CO_E_SERVER_START_TIMEOUT 2147500062

#define CO_E_SERVER_STOPPING 2148007944

#define CO_E_SETSERLHNDLFAILED 2147549491

#define CO_E_START_SERVICE_FAILURE 2147500060

#define CO_E_SXS_CONFIG 2147500082

#define CO_E_THREADINGMODEL_CHANGED 2147803176

#define CO_E_THREADPOOL_CONFIG 2147500081

#define CO_E_TRACKER_CONFIG 2147500080

#define CO_E_TRUSTEEDOESNTMATCHCLIENT 2147549479

#define CO_E_WRONG_SERVER_IDENTITY 2147500053

#define CO_E_WRONGOSFORAPP 2147746298

#define CO_E_WRONGTRUSTEENAMESYNTAX 2147549484

#define CO_S_FIRST 262640

#define CO_S_LAST 262655

#define CO_S_MACHINENAMENOTFOUND 524307

#define CO_S_NOTALLINTERFACES 524306

#define COMADMIN_E_ALREADYINSTALLED 2148598788

#define COMADMIN_E_AMBIGUOUS_APPLICATION_NAME 2148598876

#define COMADMIN_E_AMBIGUOUS_PARTITION_NAME 2148598877

#define COMADMIN_E_APP_FILE_READFAIL 2148598792

#define COMADMIN_E_APP_FILE_VERSION 2148598793

#define COMADMIN_E_APP_FILE_WRITEFAIL 2148598791

#define COMADMIN_E_APP_NOT_RUNNING 2148599818

#define COMADMIN_E_APPDIRNOTFOUND 2148598815

#define COMADMIN_E_APPLICATIONEXISTS 2148598795

#define COMADMIN_E_APPLID_MATCHES_CLSID 2148598854

#define COMADMIN_E_AUTHENTICATIONLEVEL 2148598803

#define COMADMIN_E_BADPATH 2148598794

#define COMADMIN_E_BADREGISTRYLIBID 2148598814

#define COMADMIN_E_BADREGISTRYPROGID 2148598802

#define COMADMIN_E_BASE_PARTITION_ONLY 2148598864

#define COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET 2148599839

#define COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY 2148598858

#define COMADMIN_E_CAN_NOT_EXPORT_SYS_APP 2148598860

#define COMADMIN_E_CAN_NOT_START_APP 2148598859

#define COMADMIN_E_CANNOT_ALIAS_EVENTCLASS 2148599840

#define COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT 2148598861

#define COMADMIN_E_CANTCOPYFILE 2148598797

#define COMADMIN_E_CANTMAKEINPROCSERVICE 2148599828

#define COMADMIN_E_CANTRECYCLELIBRARYAPPS 2148599823

#define COMADMIN_E_CANTRECYCLESERVICEAPPS 2148599825

#define COMADMIN_E_CAT_BITNESSMISMATCH 2148598914

#define COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME 2148598871

#define COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED 2148598875

#define COMADMIN_E_CAT_INVALID_PARTITION_NAME 2148598872

#define COMADMIN_E_CAT_PARTITION_IN_USE 2148598873

#define COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED 2148598917

#define COMADMIN_E_CAT_SERVERFAULT 2148598918

#define COMADMIN_E_CAT_UNACCEPTABLEBITNESS 2148598915

#define COMADMIN_E_CAT_WRONGAPPBITNESS 2148598916

#define COMADMIN_E_CLSIDORIIDMISMATCH 2148598808

#define COMADMIN_E_COMP_MOVE_BAD_DEST 2148598830

#define COMADMIN_E_COMP_MOVE_DEST 2148599837

#define COMADMIN_E_COMP_MOVE_LOCKED 2148598829

#define COMADMIN_E_COMP_MOVE_PRIVATE 2148599838

#define COMADMIN_E_COMP_MOVE_SOURCE 2148599836

#define COMADMIN_E_COMPFILE_BADTLB 2148598824

#define COMADMIN_E_COMPFILE_CLASSNOTAVAIL 2148598823

#define COMADMIN_E_COMPFILE_DOESNOTEXIST 2148598820

#define COMADMIN_E_COMPFILE_GETCLASSOBJ 2148598822

#define COMADMIN_E_COMPFILE_LOADDLLFAIL 2148598821

#define COMADMIN_E_COMPFILE_NOREGISTRAR 2148598836

#define COMADMIN_E_COMPFILE_NOTINSTALLABLE 2148598825

#define COMADMIN_E_COMPONENTEXISTS 2148598841

#define COMADMIN_E_COREQCOMPINSTALLED 2148598837

#define COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET 2148599830

#define COMADMIN_E_DLLLOADFAILED 2148598813

#define COMADMIN_E_DLLREGISTERSERVER 2148598810

#define COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER 2148598862

#define COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES 2148598874

#define COMADMIN_E_INVALID_PARTITION 2148599819

#define COMADMIN_E_INVALIDUSERIDS 2148598800

#define COMADMIN_E_KEYMISSING 2148598787

#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT 2148599834

#define COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS 2148599835

#define COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE 2148598863

#define COMADMIN_E_MIG_SCHEMANOTFOUND 2148598913

#define COMADMIN_E_MIG_VERSIONNOTSUPPORTED 2148598912

#define COMADMIN_E_NOREGISTRYCLSID 2148598801

#define COMADMIN_E_NOSERVERSHARE 2148598811

#define COMADMIN_E_NOTCHANGEABLE 2148598826

#define COMADMIN_E_NOTDELETEABLE 2148598827

#define COMADMIN_E_NOTINREGISTRY 2148598846

#define COMADMIN_E_NOUSER 2148598799

#define COMADMIN_E_OBJECT_DOES_NOT_EXIST 2148599817

#define COMADMIN_E_OBJECT_PARENT_MISSING 2148599816

#define COMADMIN_E_OBJECTERRORS 2148598785

#define COMADMIN_E_OBJECTEXISTS 2148598840

#define COMADMIN_E_OBJECTINVALID 2148598786

#define COMADMIN_E_OBJECTNOTPOOLABLE 2148598847

#define COMADMIN_E_PARTITION_ACCESSDENIED 2148599832

#define COMADMIN_E_PARTITION_MSI_ONLY 2148599833

#define COMADMIN_E_PARTITIONS_DISABLED 2148599844

#define COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED 2148599827

#define COMADMIN_E_PRIVATE_ACCESSDENIED 2148599841

#define COMADMIN_E_PROCESSALREADYRECYCLED 2148599826

#define COMADMIN_E_PROGIDINUSEBYCLSID 2148599829

#define COMADMIN_E_PROPERTY_OVERFLOW 2148598844

#define COMADMIN_E_PROPERTYSAVEFAILED 2148598839

#define COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED 2148599831

#define COMADMIN_E_REGDB_ALREADYRUNNING 2148598901

#define COMADMIN_E_REGDB_NOTINITIALIZED 2148598898

#define COMADMIN_E_REGDB_NOTOPEN 2148598899

#define COMADMIN_E_REGDB_SYSTEMERR 2148598900

#define COMADMIN_E_REGFILE_CORRUPT 2148598843

#define COMADMIN_E_REGISTERTLB 2148598832

#define COMADMIN_E_REGISTRARFAILED 2148598819

#define COMADMIN_E_REGISTRY_ACCESSDENIED 2148599843

#define COMADMIN_E_REMOTEINTERFACE 2148598809

#define COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM 2148598857

#define COMADMIN_E_ROLE_DOES_NOT_EXIST 2148598855

#define COMADMIN_E_ROLEEXISTS 2148598796

#define COMADMIN_E_SAFERINVALID 2148599842

#define COMADMIN_E_SERVICENOTINSTALLED 2148598838

#define COMADMIN_E_SESSION 2148598828

#define COMADMIN_E_START_APP_DISABLED 2148598865

#define COMADMIN_E_START_APP_NEEDS_COMPONENTS 2148598856

#define COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE 2148599821

#define COMADMIN_E_SYSTEMAPP 2148598835

#define COMADMIN_E_USER_IN_SET 2148599822

#define COMADMIN_E_USERPASSWDNOTVALID 2148598804

#define COMQC_E_APPLICATION_NOT_QUEUED 2148599296

#define COMQC_E_BAD_MESSAGE 2148599300

#define COMQC_E_NO_IPERSISTSTREAM 2148599299

#define COMQC_E_NO_QUEUEABLE_INTERFACES 2148599297

#define COMQC_E_QUEUING_SERVICE_NOT_AVAILABLE 2148599298

#define COMQC_E_UNAUTHENTICATED 2148599301

#define COMQC_E_UNTRUSTED_ENQUEUER 2148599302

#define CONTEXT_E_ABORTED 2147803138

#define CONTEXT_E_ABORTING 2147803139

#define CONTEXT_E_FIRST 2147803136

#define CONTEXT_E_LAST 2147803183

#define CONTEXT_E_NOCONTEXT 2147803140

#define CONTEXT_E_NOJIT 2147803174

#define CONTEXT_E_NOTRANSACTION 2147803175

#define CONTEXT_E_OLDREF 2147803143

#define CONTEXT_E_ROLENOTFOUND 2147803148

#define CONTEXT_E_SYNCH_TIMEOUT 2147803142

#define CONTEXT_E_TMNOTAVAILABLE 2147803151

#define CONTEXT_E_WOULD_DEADLOCK 2147803141

#define CONTEXT_S_FIRST 319488

#define CONTEXT_S_LAST 319535

#define CONVERT10_E_FIRST 2147746240

#define CONVERT10_E_LAST 2147746255

#define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB 2147746243

#define CONVERT10_E_OLESTREAM_FMT 2147746242

#define CONVERT10_E_OLESTREAM_GET 2147746240

#define CONVERT10_E_OLESTREAM_PUT 2147746241

#define CONVERT10_E_STG_DIB_TO_BITMAP 2147746246

#define CONVERT10_E_STG_FMT 2147746244

#define CONVERT10_E_STG_NO_STD_STREAM 2147746245

#define CONVERT10_S_FIRST 262592

#define CONVERT10_S_LAST 262607

#define CONVERT10_S_NO_PRESENTATION 262592

#define CRYPT_E_ALREADY_DECRYPTED 2148077577

#define CRYPT_E_ASN1_BADARGS 2148086025

#define CRYPT_E_ASN1_BADPDU 2148086024

#define CRYPT_E_ASN1_BADREAL 2148086026

#define CRYPT_E_ASN1_BADTAG 2148086027

#define CRYPT_E_ASN1_CHOICE 2148086028

#define CRYPT_E_ASN1_CONSTRAINT 2148086021

#define CRYPT_E_ASN1_CORRUPT 2148086019

#define CRYPT_E_ASN1_EOD 2148086018

#define CRYPT_E_ASN1_ERROR 2148086016

#define CRYPT_E_ASN1_EXTENDED 2148086273

#define CRYPT_E_ASN1_INTERNAL 2148086017

#define CRYPT_E_ASN1_LARGE 2148086020

#define CRYPT_E_ASN1_MEMORY 2148086022

#define CRYPT_E_ASN1_NOEOD 2148086274

#define CRYPT_E_ASN1_NYI 2148086068

#define CRYPT_E_ASN1_OVERFLOW 2148086023

#define CRYPT_E_ASN1_PDU_TYPE 2148086067

#define CRYPT_E_ASN1_RULE 2148086029

#define CRYPT_E_ASN1_UTF8 2148086030

#define CRYPT_E_ATTRIBUTES_MISSING 2148077583

#define CRYPT_E_AUTH_ATTR_MISSING 2148077574

#define CRYPT_E_BAD_ENCODE 2148081666

#define CRYPT_E_BAD_LEN 2148081665

#define CRYPT_E_BAD_MSG 2148081677

#define CRYPT_E_CONTROL_TYPE 2148077580

#define CRYPT_E_DELETED_PREV 2148081672

#define CRYPT_E_EXISTS 2148081669

#define CRYPT_E_FILE_ERROR 2148081667

#define CRYPT_E_FILERESIZED 2148081701

#define CRYPT_E_HASH_VALUE 2148077575

#define CRYPT_E_INVALID_IA5_STRING 2148081698

#define CRYPT_E_INVALID_INDEX 2148077576

#define CRYPT_E_INVALID_MSG_TYPE 2148077572

#define CRYPT_E_INVALID_NUMERIC_STRING 2148081696

#define CRYPT_E_INVALID_PRINTABLE_STRING 2148081697

#define CRYPT_E_INVALID_X500_STRING 2148081699

#define CRYPT_E_ISSUER_SERIALNUMBER 2148077581

#define CRYPT_E_MISSING_PUBKEY_PARA 2148081708

#define CRYPT_E_MSG_ERROR 2148077569

#define CRYPT_E_NO_DECRYPT_CERT 2148081676

#define CRYPT_E_NO_KEY_PROPERTY 2148081675

#define CRYPT_E_NO_MATCH 2148081673

#define CRYPT_E_NO_PROVIDER 2148081670

#define CRYPT_E_NO_REVOCATION_CHECK 2148081682

#define CRYPT_E_NO_REVOCATION_DLL 2148081681

#define CRYPT_E_NO_SIGNER 2148081678

#define CRYPT_E_NO_TRUSTED_SIGNER 2148081707

#define CRYPT_E_NO_VERIFY_USAGE_CHECK 2148081704

#define CRYPT_E_NO_VERIFY_USAGE_DLL 2148081703

#define CRYPT_E_NOT_CHAR_STRING 2148081700

#define CRYPT_E_NOT_DECRYPTED 2148077578

#define CRYPT_E_NOT_FOUND 2148081668

#define CRYPT_E_NOT_IN_CTL 2148081706

#define CRYPT_E_NOT_IN_REVOCATION_DATABASE 2148081684

#define CRYPT_E_OID_FORMAT 2148077571

#define CRYPT_E_OSS_ERROR 2148085760

#define CRYPT_E_PENDING_CLOSE 2148081679

#define CRYPT_E_RECIPIENT_NOT_FOUND 2148077579

#define CRYPT_E_REVOCATION_OFFLINE 2148081683

#define CRYPT_E_REVOKED 2148081680

#define CRYPT_E_SECURITY_SETTINGS 2148081702

#define CRYPT_E_SELF_SIGNED 2148081671

#define CRYPT_E_SIGNER_NOT_FOUND 2148077582

#define CRYPT_E_STREAM_INSUFFICIENT_DATA 2148077585

#define CRYPT_E_STREAM_MSG_NOT_READY 2148077584

#define CRYPT_E_UNEXPECTED_ENCODING 2148077573

#define CRYPT_E_UNEXPECTED_MSG_TYPE 2148081674

#define CRYPT_E_UNKNOWN_ALGO 2148077570

#define CRYPT_E_VERIFY_USAGE_OFFLINE 2148081705

#define CRYPT_I_NEW_PROTECTION_REQUIRED 593938

#define CS_E_ADMIN_LIMIT_EXCEEDED 2147746157

#define CS_E_CLASS_NOTFOUND 2147746150

#define CS_E_FIRST 2147746148

#define CS_E_INTERNAL_ERROR 2147746159

#define CS_E_INVALID_PATH 2147746155

#define CS_E_INVALID_VERSION 2147746151

#define CS_E_LAST 2147746159

#define CS_E_NETWORK_ERROR 2147746156

#define CS_E_NO_CLASSSTORE 2147746152

#define CS_E_NOT_DELETABLE 2147746149

#define CS_E_OBJECT_ALREADY_EXISTS 2147746154

#define CS_E_OBJECT_NOTFOUND 2147746153

#define CS_E_PACKAGE_NOTFOUND 2147746148

#define CS_E_SCHEMA_MISMATCH 2147746158

#define DATA_E_FIRST 2147746096

#define DATA_E_LAST 2147746111

#define DATA_S_FIRST 262448

#define DATA_S_LAST 262463

#define DATA_S_SAMEFORMATETC 262448

#define DIGSIG_E_CRYPTO 2148204552

#define DIGSIG_E_DECODE 2148204550

#define DIGSIG_E_ENCODE 2148204549

#define DIGSIG_E_EXTENSIBILITY 2148204551

#define DISP_E_ARRAYISLOCKED 2147614733

#define DISP_E_BADCALLEE 2147614736

#define DISP_E_BADINDEX 2147614731

#define DISP_E_BADPARAMCOUNT 2147614734

#define DISP_E_BADVARTYPE 2147614728

#define DISP_E_BUFFERTOOSMALL 2147614739

#define DISP_E_DIVBYZERO 2147614738

#define DISP_E_EXCEPTION 2147614729

#define DISP_E_MEMBERNOTFOUND 2147614723

#define DISP_E_NONAMEDARGS 2147614727

#define DISP_E_NOTACOLLECTION 2147614737

#define DISP_E_OVERFLOW 2147614730

#define DISP_E_PARAMNOTFOUND 2147614724

#define DISP_E_PARAMNOTOPTIONAL 2147614735

#define DISP_E_TYPEMISMATCH 2147614725

#define DISP_E_UNKNOWNINTERFACE 2147614721

#define DISP_E_UNKNOWNLCID 2147614732

#define DISP_E_UNKNOWNNAME 2147614726

#define DNS_ERROR_ALIAS_LOOP 9722

#define DNS_ERROR_AUTOZONE_ALREADY_EXISTS 9610

#define DNS_ERROR_AXFR 9752

#define DNS_ERROR_BACKGROUND_LOADING 9568

#define DNS_ERROR_BAD_PACKET 9502

#define DNS_ERROR_CANNOT_FIND_ROOT_HINTS 9564

#define DNS_ERROR_CNAME_COLLISION 9709

#define DNS_ERROR_CNAME_LOOP 9707

#define DNS_ERROR_DATABASE_BASE 9700

#define DNS_ERROR_DATAFILE_BASE 9650

#define DNS_ERROR_DATAFILE_OPEN_FAILURE 9653

#define DNS_ERROR_DATAFILE_PARSING 9655

#define DNS_ERROR_DELEGATION_REQUIRED 9571

#define DNS_ERROR_DNAME_COLLISION 9721

#define DNS_ERROR_DP_ALREADY_ENLISTED 9904

#define DNS_ERROR_DP_ALREADY_EXISTS 9902

#define DNS_ERROR_DP_BASE 9900

#define DNS_ERROR_DP_DOES_NOT_EXIST 9901

#define DNS_ERROR_DP_FSMO_ERROR 9906

#define DNS_ERROR_DP_NOT_AVAILABLE 9905

#define DNS_ERROR_DP_NOT_ENLISTED 9903

#define DNS_ERROR_DS_UNAVAILABLE 9717

#define DNS_ERROR_DS_ZONE_ALREADY_EXISTS 9718

#define DNS_ERROR_DWORD_VALUE_TOO_LARGE 9567

#define DNS_ERROR_DWORD_VALUE_TOO_SMALL 9566

#define DNS_ERROR_FILE_WRITEBACK_FAILED 9654

#define DNS_ERROR_FORWARDER_ALREADY_EXISTS 9619

#define DNS_ERROR_GENERAL_API_BASE 9550

#define DNS_ERROR_INCONSISTENT_ROOT_HINTS 9565

#define DNS_ERROR_INVALID_DATA 13

#define DNS_ERROR_INVALID_DATAFILE_NAME 9652

#define DNS_ERROR_INVALID_IP_ADDRESS 9552

#define DNS_ERROR_INVALID_NAME 123

#define DNS_ERROR_INVALID_NAME_CHAR 9560

#define DNS_ERROR_INVALID_POLICY_TABLE 9572

#define DNS_ERROR_INVALID_PROPERTY 9553

#define DNS_ERROR_INVALID_TYPE 9551

#define DNS_ERROR_INVALID_ZONE_OPERATION 9603

#define DNS_ERROR_INVALID_ZONE_TYPE 9611

#define DNS_ERROR_MASK 9000

#define DNS_ERROR_NAME_DOES_NOT_EXIST 9714

#define DNS_ERROR_NAME_NOT_IN_ZONE 9706

#define DNS_ERROR_NBSTAT_INIT_FAILED 9617

#define DNS_ERROR_NEED_SECONDARY_ADDRESSES 9614

#define DNS_ERROR_NEED_WINS_SERVERS 9616

#define DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE 9719

#define DNS_ERROR_NO_CREATE_CACHE_DATA 9713

#define DNS_ERROR_NO_DNS_SERVERS 9852

#define DNS_ERROR_NO_MEMORY 14

#define DNS_ERROR_NO_PACKET 9503

#define DNS_ERROR_NO_TCPIP 9851

#define DNS_ERROR_NO_ZONE_INFO 9602

#define DNS_ERROR_NODE_CREATION_FAILED 9703

#define DNS_ERROR_NODE_IS_CNAME 9708

#define DNS_ERROR_NODE_IS_DNAME 9720

#define DNS_ERROR_NON_RFC_NAME 9556

#define DNS_ERROR_NOT_ALLOWED_ON_RODC 9569

#define DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER 9562

#define DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION 9563

#define DNS_ERROR_NOT_ALLOWED_UNDER_DNAME 9570

#define DNS_ERROR_NOT_UNIQUE 9555

#define DNS_ERROR_NUMERIC_NAME 9561

#define DNS_ERROR_OPERATION_BASE 9750

#define DNS_ERROR_PACKET_FMT_BASE 9500

#define DNS_ERROR_PRIMARY_REQUIRES_DATAFILE 9651

#define DNS_ERROR_RCODE 9504

#define DNS_ERROR_RCODE_BADKEY 9017

#define DNS_ERROR_RCODE_BADSIG 9016

#define DNS_ERROR_RCODE_BADTIME 9018

#define DNS_ERROR_RCODE_FORMAT_ERROR 9001

#define DNS_ERROR_RCODE_LAST 9018

#define DNS_ERROR_RCODE_NAME_ERROR 9003

#define DNS_ERROR_RCODE_NO_ERROR 0

#define DNS_ERROR_RCODE_NOT_IMPLEMENTED 9004

#define DNS_ERROR_RCODE_NOTAUTH 9009

#define DNS_ERROR_RCODE_NOTZONE 9010

#define DNS_ERROR_RCODE_NXRRSET 9008

#define DNS_ERROR_RCODE_REFUSED 9005

#define DNS_ERROR_RCODE_SERVER_FAILURE 9002

#define DNS_ERROR_RCODE_YXDOMAIN 9006

#define DNS_ERROR_RCODE_YXRRSET 9007

#define DNS_ERROR_RECORD_ALREADY_EXISTS 9711

#define DNS_ERROR_RECORD_DOES_NOT_EXIST 9701

#define DNS_ERROR_RECORD_FORMAT 9702

#define DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT 9710

#define DNS_ERROR_RECORD_TIMED_OUT 9705

#define DNS_ERROR_RESPONSE_CODES_BASE 9000

#define DNS_ERROR_SECONDARY_DATA 9712

#define DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP 9612

#define DNS_ERROR_SECURE_BASE 9800

#define DNS_ERROR_SETUP_BASE 9850

#define DNS_ERROR_SOA_DELETE_INVALID 9618

#define DNS_ERROR_TRY_AGAIN_LATER 9554

#define DNS_ERROR_UNKNOWN_RECORD_TYPE 9704

#define DNS_ERROR_UNSECURE_PACKET 9505

#define DNS_ERROR_WINS_INIT_FAILED 9615

#define DNS_ERROR_ZONE_ALREADY_EXISTS 9609

#define DNS_ERROR_ZONE_BASE 9600

#define DNS_ERROR_ZONE_CONFIGURATION_ERROR 9604

#define DNS_ERROR_ZONE_CREATION_FAILED 9608

#define DNS_ERROR_ZONE_DOES_NOT_EXIST 9601

#define DNS_ERROR_ZONE_HAS_NO_NS_RECORDS 9606

#define DNS_ERROR_ZONE_HAS_NO_SOA_RECORD 9605

#define DNS_ERROR_ZONE_IS_SHUTDOWN 9621

#define DNS_ERROR_ZONE_LOCKED 9607

#define DNS_ERROR_ZONE_NOT_SECONDARY 9613

#define DNS_ERROR_ZONE_REQUIRES_MASTER_IP 9620

#define DNS_INFO_ADDED_LOCAL_WINS 9753

#define DNS_INFO_AXFR_COMPLETE 9751

#define DNS_INFO_NO_RECORDS 9501

#define DNS_STATUS_CONTINUE_NEEDED 9801

#define DNS_STATUS_DOTTED_NAME 9558

#define DNS_STATUS_FQDN 9557

#define DNS_STATUS_PACKET_UNSECURE 9505

#define DNS_STATUS_SINGLE_PART_NAME 9559

#define DNS_WARNING_DOMAIN_UNDELETED 9716

#define DNS_WARNING_PTR_CREATE_FAILED 9715

#define DRAGDROP_E_ALREADYREGISTERED 2147746049

#define DRAGDROP_E_FIRST 2147746048

#define DRAGDROP_E_INVALIDHWND 2147746050

#define DRAGDROP_E_LAST 2147746063

#define DRAGDROP_E_NOTREGISTERED 2147746048

#define DRAGDROP_S_CANCEL 262401

#define DRAGDROP_S_DROP 262400

#define DRAGDROP_S_FIRST 262400

#define DRAGDROP_S_LAST 262415

#define DRAGDROP_S_USEDEFAULTCURSORS 262402

#define DS_S_SUCCESS 0

#define DV_E_CLIPFORMAT 2147745898

#define DV_E_DVASPECT 2147745899

#define DV_E_DVTARGETDEVICE 2147745893

#define DV_E_DVTARGETDEVICE_SIZE 2147745900

#define DV_E_FORMATETC 2147745892

#define DV_E_LINDEX 2147745896

#define DV_E_NOIVIEWOBJECT 2147745901

#define DV_E_STATDATA 2147745895

#define DV_E_STGMEDIUM 2147745894

#define DV_E_TYMED 2147745897

#define DWM_E_ADAPTER_NOT_FOUND 2149986309

#define DWM_E_COMPOSITIONDISABLED 2149986305

#define DWM_E_NO_REDIRECTION_SURFACE_AVAILABLE 2149986307

#define DWM_E_NOT_QUEUING_PRESENTS 2149986308

#define DWM_E_REMOTING_NOT_SUPPORTED 2149986306

#define DWM_S_GDI_REDIRECTION_SURFACE 2502661

#define E_ABORT 2147500036

#define E_ACCESSDENIED 2147942405

#define E_FAIL 2147500037

#define E_HANDLE 2147942406

#define E_INVALIDARG 2147942487

#define E_MBN_BAD_SIM 2153021954

#define E_MBN_CONTEXT_NOT_ACTIVATED 2153021953

#define E_MBN_DATA_CLASS_NOT_AVAILABLE 2153021955

#define E_MBN_DEFAULT_PROFILE_EXIST 2153021977

#define E_MBN_FAILURE 2153021970

#define E_MBN_INVALID_ACCESS_STRING 2153021956

#define E_MBN_INVALID_CACHE 2153021964

#define E_MBN_INVALID_PROFILE 2153021976

#define E_MBN_MAX_ACTIVATED_CONTEXTS 2153021957

#define E_MBN_NOT_REGISTERED 2153021965

#define E_MBN_PACKET_SVC_DETACHED 2153021958

#define E_MBN_PIN_DISABLED 2153021969

#define E_MBN_PIN_NOT_SUPPORTED 2153021967

#define E_MBN_PIN_REQUIRED 2153021968

#define E_MBN_PROVIDER_NOT_VISIBLE 2153021959

#define E_MBN_PROVIDERS_NOT_FOUND 2153021966

#define E_MBN_RADIO_POWER_OFF 2153021960

#define E_MBN_SERVICE_NOT_ACTIVATED 2153021961

#define E_MBN_SIM_NOT_INSERTED 2153021962

#define E_MBN_SMS_ENCODING_NOT_SUPPORTED 2153021984

#define E_MBN_SMS_FILTER_NOT_SUPPORTED 2153021985

#define E_MBN_SMS_FORMAT_NOT_SUPPORTED 2153021991

#define E_MBN_SMS_INVALID_MEMORY_INDEX 2153021986

#define E_MBN_SMS_LANG_NOT_SUPPORTED 2153021987

#define E_MBN_SMS_MEMORY_FAILURE 2153021988

#define E_MBN_SMS_MEMORY_FULL 2153021993

#define E_MBN_SMS_NETWORK_TIMEOUT 2153021989

#define E_MBN_SMS_OPERATION_NOT_ALLOWED 2153021992

#define E_MBN_SMS_UNKNOWN_SMSC_ADDRESS 2153021990

#define E_MBN_VOICE_CALL_IN_PROGRESS 2153021963

#define E_NOINTERFACE 2147500034

#define E_NOTIMPL 2147500033

#define E_OUTOFMEMORY 2147942414

#define E_PENDING 2147483658

#define E_POINTER 2147500035

#define E_UNEXPECTED 2147549183

#define ENUM_E_FIRST 2147746224

#define ENUM_E_LAST 2147746239

#define ENUM_S_FIRST 262576

#define ENUM_S_LAST 262591

#define EPT_S_CANT_CREATE 1899

#define EPT_S_CANT_PERFORM_OP 1752

#define EPT_S_INVALID_ENTRY 1751

#define EPT_S_NOT_REGISTERED 1753

#define ERROR_ABANDON_HIBERFILE 787

#define ERROR_ABANDONED_WAIT_0 735

#define ERROR_ABANDONED_WAIT_63 736

#define ERROR_ABIOS_ERROR 538

#define ERROR_ACCESS_AUDIT_BY_POLICY 785

#define ERROR_ACCESS_DENIED 5

#define ERROR_ACCESS_DISABLED_BY_POLICY 1260

#define ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY 786

#define ERROR_ACCESS_DISABLED_WEBBLADE 1277

#define ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER 1278

#define ERROR_ACCOUNT_DISABLED 1331

#define ERROR_ACCOUNT_EXPIRED 1793

#define ERROR_ACCOUNT_LOCKED_OUT 1909

#define ERROR_ACCOUNT_RESTRICTION 1327

#define ERROR_ACPI_ERROR 669

#define ERROR_ACTIVATION_COUNT_EXCEEDED 7059

#define ERROR_ACTIVE_CONNECTIONS 2402

#define ERROR_ADAP_HDW_ERR 57

#define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227

#define ERROR_ADDRESS_NOT_ASSOCIATED 1228

#define ERROR_ADVANCED_INSTALLER_FAILED 14099

#define ERROR_ALERTED 739

#define ERROR_ALIAS_EXISTS 1379

#define ERROR_ALL_NODES_NOT_AVAILABLE 5037

#define ERROR_ALL_SIDS_FILTERED 3221815298

#define ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED 1933

#define ERROR_ALLOCATE_BUCKET 602

#define ERROR_ALLOTTED_SPACE_EXCEEDED 1344

#define ERROR_ALREADY_ASSIGNED 85

#define ERROR_ALREADY_EXISTS 183

#define ERROR_ALREADY_FIBER 1280

#define ERROR_ALREADY_INITIALIZED 1247

#define ERROR_ALREADY_REGISTERED 1242

#define ERROR_ALREADY_RUNNING_LKG 1074

#define ERROR_ALREADY_THREAD 1281

#define ERROR_ALREADY_WAITING 1904

#define ERROR_ALREADY_WIN32 719

#define ERROR_AMBIGUOUS_SYSTEM_DEVICE 15250

#define ERROR_APP_HANG 1298

#define ERROR_APP_INIT_FAILURE 575

#define ERROR_APP_WRONG_OS 1151

#define ERROR_APPHELP_BLOCK 1259

#define ERROR_ARBITRATION_UNHANDLED 723

#define ERROR_ARENA_TRASHED 7

#define ERROR_ARITHMETIC_OVERFLOW 534

#define ERROR_ASSERTION_FAILURE 668

#define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174

#define ERROR_AUDIT_FAILED 606

#define ERROR_AUDITING_DISABLED 3221815297

#define ERROR_AUTHENTICATION_FIREWALL_FAILED 1935

#define ERROR_AUTHIP_FAILURE 1469

#define ERROR_AUTODATASEG_EXCEEDS_64k 199

#define ERROR_BACKUP_CONTROLLER 586

#define ERROR_BAD_ACCESSOR_FLAGS 773

#define ERROR_BAD_ARGUMENTS 160

#define ERROR_BAD_CLUSTERS 6849

#define ERROR_BAD_COMMAND 22

#define ERROR_BAD_COMPRESSION_BUFFER 605

#define ERROR_BAD_CONFIGURATION 1610

#define ERROR_BAD_CURRENT_DIRECTORY 703

#define ERROR_BAD_DESCRIPTOR_FORMAT 1361

#define ERROR_BAD_DEV_TYPE 66

#define ERROR_BAD_DEVICE 1200

#define ERROR_BAD_DLL_ENTRYPOINT 609

#define ERROR_BAD_DRIVER 2001

#define ERROR_BAD_DRIVER_LEVEL 119

#define ERROR_BAD_ENVIRONMENT 10

#define ERROR_BAD_EXE_FORMAT 193

#define ERROR_BAD_FILE_TYPE 222

#define ERROR_BAD_FORMAT 11

#define ERROR_BAD_FUNCTION_TABLE 559

#define ERROR_BAD_IMPERSONATION_LEVEL 1346

#define ERROR_BAD_INHERITANCE_ACL 1340

#define ERROR_BAD_LENGTH 24

#define ERROR_BAD_LOGON_SESSION_STATE 1365

#define ERROR_BAD_MCFG_TABLE 791

#define ERROR_BAD_NET_NAME 67

#define ERROR_BAD_NET_RESP 58

#define ERROR_BAD_NETPATH 53

#define ERROR_BAD_PATHNAME 161

#define ERROR_BAD_PIPE 230

#define ERROR_BAD_PROFILE 1206

#define ERROR_BAD_PROVIDER 1204

#define ERROR_BAD_QUERY_SYNTAX 1615

#define ERROR_BAD_RECOVERY_POLICY 6012

#define ERROR_BAD_REM_ADAP 60

#define ERROR_BAD_SERVICE_ENTRYPOINT 610

#define ERROR_BAD_STACK 543

#define ERROR_BAD_THREADID_ADDR 159

#define ERROR_BAD_TOKEN_TYPE 1349

#define ERROR_BAD_UNIT 20

#define ERROR_BAD_USER_PROFILE 1253

#define ERROR_BAD_USERNAME 2202

#define ERROR_BAD_VALIDATION_CLASS 1348

#define ERROR_BADDB 1009

#define ERROR_BADKEY 1010

#define ERROR_BADSTARTPOSITION 778

#define ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED 2151219201

#define ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED 2151219203

#define ERROR_BCD_TOO_MANY_ELEMENTS 3224961026

#define ERROR_BEGINNING_OF_MEDIA 1102

#define ERROR_BEYOND_VDL 1289

#define ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT 585

#define ERROR_BIZRULES_NOT_ENABLED 3221815299

#define ERROR_BOOT_ALREADY_ACCEPTED 1076

#define ERROR_BROKEN_PIPE 109

#define ERROR_BUFFER_ALL_ZEROS 754

#define ERROR_BUFFER_OVERFLOW 111

#define ERROR_BUS_RESET 1111

#define ERROR_BUSY 170

#define ERROR_BUSY_DRIVE 142

#define ERROR_CACHE_PAGE_LOCKED 752

#define ERROR_CALL_NOT_IMPLEMENTED 120

#define ERROR_CALLBACK_POP_STACK 768

#define ERROR_CALLBACK_SUPPLIED_INVALID_DATA 1273

#define ERROR_CAN_NOT_COMPLETE 1003

#define ERROR_CAN_NOT_DEL_LOCAL_WINS 4001

#define ERROR_CANCEL_VIOLATION 173

#define ERROR_CANCELLED 1223

#define ERROR_CANNOT_ABORT_TRANSACTIONS 6848

#define ERROR_CANNOT_ACCEPT_TRANSACTED_WORK 6847

#define ERROR_CANNOT_BREAK_OPLOCK 802

#define ERROR_CANNOT_COPY 266

#define ERROR_CANNOT_DETECT_DRIVER_FAILURE 1080

#define ERROR_CANNOT_DETECT_PROCESS_ABORT 1081

#define ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION 6838

#define ERROR_CANNOT_FIND_WND_CLASS 1407

#define ERROR_CANNOT_GRANT_REQUESTED_OPLOCK 801

#define ERROR_CANNOT_IMPERSONATE 1368

#define ERROR_CANNOT_LOAD_REGISTRY_FILE 589

#define ERROR_CANNOT_MAKE 82

#define ERROR_CANNOT_OPEN_PROFILE 1205

#define ERROR_CANT_ACCESS_DOMAIN_INFO 1351

#define ERROR_CANT_ACCESS_FILE 1920

#define ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY 6824

#define ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS 6812

#define ERROR_CANT_CROSS_RM_BOUNDARY 6825

#define ERROR_CANT_DELETE_LAST_ITEM 4335

#define ERROR_CANT_DISABLE_MANDATORY 1310

#define ERROR_CANT_ENABLE_DENY_ONLY 629

#define ERROR_CANT_EVICT_ACTIVE_NODE 5009

#define ERROR_CANT_OPEN_ANONYMOUS 1347

#define ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT 6811

#define ERROR_CANT_RECOVER_WITH_HANDLE_OPEN 6818

#define ERROR_CANT_RESOLVE_FILENAME 1921

#define ERROR_CANT_TERMINATE_SELF 555

#define ERROR_CANT_WAIT 554

#define ERROR_CANTFETCHBACKWARDS 770

#define ERROR_CANTOPEN 1011

#define ERROR_CANTREAD 1012

#define ERROR_CANTSCROLLBACKWARDS 771

#define ERROR_CANTWRITE 1013

#define ERROR_CARDBUS_NOT_SUPPORTED 724

#define ERROR_CHECKING_FILE_SYSTEM 712

#define ERROR_CHECKOUT_REQUIRED 221

#define ERROR_CHILD_MUST_BE_VOLATILE 1021

#define ERROR_CHILD_NOT_COMPLETE 129

#define ERROR_CHILD_WINDOW_MENU 1436

#define ERROR_CIRCULAR_DEPENDENCY 1059

#define ERROR_CLASS_ALREADY_EXISTS 1410

#define ERROR_CLASS_DOES_NOT_EXIST 1411

#define ERROR_CLASS_HAS_WINDOWS 1412

#define ERROR_CLEANER_CARTRIDGE_INSTALLED 4340

#define ERROR_CLEANER_CARTRIDGE_SPENT 4333

#define ERROR_CLEANER_SLOT_NOT_SET 4332

#define ERROR_CLEANER_SLOT_SET 4331

#define ERROR_CLIENT_SERVER_PARAMETERS_INVALID 597

#define ERROR_CLIPBOARD_NOT_OPEN 1418

#define ERROR_CLIPPING_NOT_SUPPORTED 2005

#define ERROR_CLUSCFG_ALREADY_COMMITTED 5901

#define ERROR_CLUSCFG_ROLLBACK_FAILED 5902

#define ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT 5903

#define ERROR_CLUSTER_BACKUP_IN_PROGRESS 5949

#define ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME 5900

#define ERROR_CLUSTER_CANT_DESERIALIZE_DATA 5923

#define ERROR_CLUSTER_DATABASE_SEQMISMATCH 5083

#define ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS 5918

#define ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS 5919

#define ERROR_CLUSTER_EVICT_INVALID_REQUEST 5939

#define ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP 5896

#define ERROR_CLUSTER_GROUP_BUSY 5944

#define ERROR_CLUSTER_GROUP_MOVING 5908

#define ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE 5941

#define ERROR_CLUSTER_GUM_NOT_LOCKER 5085

#define ERROR_CLUSTER_INCOMPATIBLE_VERSIONS 5075

#define ERROR_CLUSTER_INSTANCE_ID_MISMATCH 5893

#define ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION 5912

#define ERROR_CLUSTER_INVALID_IPV6_NETWORK 5926

#define ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK 5927

#define ERROR_CLUSTER_INVALID_NETWORK 5054

#define ERROR_CLUSTER_INVALID_NETWORK_PROVIDER 5049

#define ERROR_CLUSTER_INVALID_NODE 5039

#define ERROR_CLUSTER_INVALID_REQUEST 5048

#define ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR 5946

#define ERROR_CLUSTER_INVALID_STRING_FORMAT 5917

#define ERROR_CLUSTER_INVALID_STRING_TERMINATION 5916

#define ERROR_CLUSTER_IPADDR_IN_USE 5057

#define ERROR_CLUSTER_JOIN_ABORTED 5074

#define ERROR_CLUSTER_JOIN_IN_PROGRESS 5041

#define ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS 5053

#define ERROR_CLUSTER_LAST_INTERNAL_NETWORK 5066

#define ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND 5043

#define ERROR_CLUSTER_MAX_NODES_IN_CLUSTER 5934

#define ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED 5076

#define ERROR_CLUSTER_MEMBERSHIP_HALT 5892

#define ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE 5890

#define ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME 5905

#define ERROR_CLUSTER_NETINTERFACE_EXISTS 5046

#define ERROR_CLUSTER_NETINTERFACE_NOT_FOUND 5047

#define ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE 5064

#define ERROR_CLUSTER_NETWORK_ALREADY_ONLINE 5063

#define ERROR_CLUSTER_NETWORK_EXISTS 5044

#define ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS 5067

#define ERROR_CLUSTER_NETWORK_NOT_FOUND 5045

#define ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP 5894

#define ERROR_CLUSTER_NETWORK_NOT_INTERNAL 5060

#define ERROR_CLUSTER_NO_NET_ADAPTERS 5906

#define ERROR_CLUSTER_NO_QUORUM 5925

#define ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED 5081

#define ERROR_CLUSTER_NO_SECURITY_CONTEXT 5059

#define ERROR_CLUSTER_NODE_ALREADY_DOWN 5062

#define ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT 5088

#define ERROR_CLUSTER_NODE_ALREADY_MEMBER 5065

#define ERROR_CLUSTER_NODE_ALREADY_UP 5061

#define ERROR_CLUSTER_NODE_DOWN 5050

#define ERROR_CLUSTER_NODE_EXISTS 5040

#define ERROR_CLUSTER_NODE_NOT_FOUND 5042

#define ERROR_CLUSTER_NODE_NOT_MEMBER 5052

#define ERROR_CLUSTER_NODE_NOT_PAUSED 5058

#define ERROR_CLUSTER_NODE_NOT_READY 5072

#define ERROR_CLUSTER_NODE_PAUSED 5070

#define ERROR_CLUSTER_NODE_SHUTTING_DOWN 5073

#define ERROR_CLUSTER_NODE_UNREACHABLE 5051

#define ERROR_CLUSTER_NODE_UP 5056

#define ERROR_CLUSTER_NOT_INSTALLED 5932

#define ERROR_CLUSTER_NOT_SHARED_VOLUME 5945

#define ERROR_CLUSTER_NULL_DATA 5920

#define ERROR_CLUSTER_OBJECT_ALREADY_USED 5936

#define ERROR_CLUSTER_OLD_VERSION 5904

#define ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST 5082

#define ERROR_CLUSTER_PARAMETER_MISMATCH 5897

#define ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS 5913

#define ERROR_CLUSTER_PARTIAL_READ 5921

#define ERROR_CLUSTER_PARTIAL_SEND 5914

#define ERROR_CLUSTER_PARTIAL_WRITE 5922

#define ERROR_CLUSTER_POISONED 5907

#define ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH 5895

#define ERROR_CLUSTER_QUORUMLOG_NOT_FOUND 5891

#define ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION 5915

#define ERROR_CLUSTER_RESNAME_NOT_FOUND 5080

#define ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR 5943

#define ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED 5942

#define ERROR_CLUSTER_RESOURCE_TYPE_BUSY 5909

#define ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND 5078

#define ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE 5933

#define ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED 5079

#define ERROR_CLUSTER_RHS_FAILED_INITIALIZATION 5931

#define ERROR_CLUSTER_SHARED_VOLUMES_IN_USE 5947

#define ERROR_CLUSTER_SHUTTING_DOWN 5022

#define ERROR_CLUSTER_SINGLETON_RESOURCE 5940

#define ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED 5077

#define ERROR_CLUSTER_TOO_MANY_NODES 5935

#define ERROR_CLUSTER_USE_SHARED_VOLUMES_API 5948

#define ERROR_CLUSTER_WATCHDOG_TERMINATING 5952

#define ERROR_CLUSTER_WRONG_OS_VERSION 5899

#define ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND 5032

#define ERROR_CLUSTERLOG_CORRUPT 5029

#define ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE 5031

#define ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE 5033

#define ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE 5030

#define ERROR_COLORSPACE_MISMATCH 2021

#define ERROR_COMMITMENT_LIMIT 1455

#define ERROR_COMMITMENT_MINIMUM 635

#define ERROR_COMPRESSION_DISABLED 769

#define ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION 6850

#define ERROR_CONNECTED_OTHER_PASSWORD 2108

#define ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT 2109

#define ERROR_CONNECTION_ABORTED 1236

#define ERROR_CONNECTION_ACTIVE 1230

#define ERROR_CONNECTION_COUNT_LIMIT 1238

#define ERROR_CONNECTION_INVALID 1229

#define ERROR_CONNECTION_REFUSED 1225

#define ERROR_CONNECTION_UNAVAIL 1201

#define ERROR_CONTENT_BLOCKED 1296

#define ERROR_CONTEXT_EXPIRED 1931

#define ERROR_CONTINUE 1246

#define ERROR_CONTROL_C_EXIT 572

#define ERROR_CONTROL_ID_NOT_FOUND 1421

#define ERROR_CONTROLLING_IEPORT 4329

#define ERROR_CONVERT_TO_LARGE 600

#define ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND 3016

#define ERROR_CORE_RESOURCE 5026

#define ERROR_CORRUPT_SYSTEM_FILE 634

#define ERROR_COULD_NOT_INTERPRET 552

#define ERROR_COULD_NOT_RESIZE_LOG 6629

#define ERROR_COUNTER_TIMEOUT 1121

#define ERROR_CRASH_DUMP 753

#define ERROR_CRC 23

#define ERROR_CREATE_FAILED 1631

#define ERROR_CRED_REQUIRES_CONFIRMATION 2148102169

#define ERROR_CRM_PROTOCOL_ALREADY_EXISTS 6710

#define ERROR_CRM_PROTOCOL_NOT_FOUND 6712

#define ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE 6019

#define ERROR_CS_ENCRYPTION_FILE_NOT_CSE 6021

#define ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE 6017

#define ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE 6020

#define ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER 6018

#define ERROR_CSCSHARE_OFFLINE 1262

#define ERROR_CSV_VOLUME_NOT_LOCAL 5951

#define ERROR_CTX_ACCOUNT_RESTRICTION 7064

#define ERROR_CTX_BAD_VIDEO_MODE 7025

#define ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY 7005

#define ERROR_CTX_CDM_CONNECT 7066

#define ERROR_CTX_CDM_DISCONNECT 7067

#define ERROR_CTX_CLIENT_LICENSE_IN_USE 7052

#define ERROR_CTX_CLIENT_LICENSE_NOT_SET 7053

#define ERROR_CTX_CLIENT_QUERY_TIMEOUT 7040

#define ERROR_CTX_CLOSE_PENDING 7007

#define ERROR_CTX_CONSOLE_CONNECT 7042

#define ERROR_CTX_CONSOLE_DISCONNECT 7041

#define ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED 7061

#define ERROR_CTX_GRAPHICS_INVALID 7035

#define ERROR_CTX_INVALID_MODEMNAME 7010

#define ERROR_CTX_INVALID_PD 7002

#define ERROR_CTX_INVALID_WD 7049

#define ERROR_CTX_LICENSE_CLIENT_INVALID 7055

#define ERROR_CTX_LICENSE_EXPIRED 7056

#define ERROR_CTX_LICENSE_NOT_AVAILABLE 7054

#define ERROR_CTX_LOGON_DISABLED 7037

#define ERROR_CTX_MODEM_INF_NOT_FOUND 7009

#define ERROR_CTX_MODEM_RESPONSE_BUSY 7015

#define ERROR_CTX_MODEM_RESPONSE_ERROR 7011

#define ERROR_CTX_MODEM_RESPONSE_NO_CARRIER 7013

#define ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE 7014

#define ERROR_CTX_MODEM_RESPONSE_TIMEOUT 7012

#define ERROR_CTX_MODEM_RESPONSE_VOICE 7016

#define ERROR_CTX_NO_FORCE_LOGOFF 7063

#define ERROR_CTX_NO_OUTBUF 7008

#define ERROR_CTX_NOT_CONSOLE 7038

#define ERROR_CTX_PD_NOT_FOUND 7003

#define ERROR_CTX_SECURITY_LAYER_ERROR 7068

#define ERROR_CTX_SERVICE_NAME_COLLISION 7006

#define ERROR_CTX_SESSION_IN_USE 7062

#define ERROR_CTX_SHADOW_DENIED 7044

#define ERROR_CTX_SHADOW_DISABLED 7051

#define ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE 7058

#define ERROR_CTX_SHADOW_INVALID 7050

#define ERROR_CTX_SHADOW_NOT_RUNNING 7057

#define ERROR_CTX_TD_ERROR 7017

#define ERROR_CTX_WD_NOT_FOUND 7004

#define ERROR_CTX_WINSTATION_ACCESS_DENIED 7045

#define ERROR_CTX_WINSTATION_ALREADY_EXISTS 7023

#define ERROR_CTX_WINSTATION_BUSY 7024

#define ERROR_CTX_WINSTATION_NAME_INVALID 7001

#define ERROR_CTX_WINSTATION_NOT_FOUND 7022

#define ERROR_CTX_WINSTATIONS_DISABLED 7060

#define ERROR_CURRENT_DIRECTORY 16

#define ERROR_CURRENT_DOMAIN_NOT_ALLOWED 1399

#define ERROR_CURRENT_TRANSACTION_NOT_VALID 6714

#define ERROR_DATA_LOST_REPAIR 6843

#define ERROR_DATA_NOT_ACCEPTED 592

#define ERROR_DATABASE_BACKUP_CORRUPT 5087

#define ERROR_DATABASE_DOES_NOT_EXIST 1065

#define ERROR_DATABASE_FAILURE 4313

#define ERROR_DATABASE_FULL 4314

#define ERROR_DATATYPE_MISMATCH 1629

#define ERROR_DBG_COMMAND_EXCEPTION 697

#define ERROR_DBG_CONTINUE 767

#define ERROR_DBG_CONTROL_BREAK 696

#define ERROR_DBG_CONTROL_C 693

#define ERROR_DBG_EXCEPTION_HANDLED 766

#define ERROR_DBG_EXCEPTION_NOT_HANDLED 688

#define ERROR_DBG_PRINTEXCEPTION_C 694

#define ERROR_DBG_REPLY_LATER 689

#define ERROR_DBG_RIPEXCEPTION 695

#define ERROR_DBG_TERMINATE_PROCESS 692

#define ERROR_DBG_TERMINATE_THREAD 691

#define ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE 690

#define ERROR_DC_NOT_FOUND 1425

#define ERROR_DDE_FAIL 1156

#define ERROR_DEBUG_ATTACH_FAILED 590

#define ERROR_DEBUGGER_INACTIVE 1284

#define ERROR_DECRYPTION_FAILED 6001

#define ERROR_DELAY_LOAD_FAILED 1285

#define ERROR_DELETE_PENDING 303

#define ERROR_DELETING_ICM_XFORM 2019

#define ERROR_DEPENDENCY_ALREADY_EXISTS 5003

#define ERROR_DEPENDENCY_NOT_ALLOWED 5069

#define ERROR_DEPENDENCY_NOT_FOUND 5002

#define ERROR_DEPENDENCY_TREE_TOO_COMPLEX 5929

#define ERROR_DEPENDENT_RESOURCE_EXISTS 5001

#define ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT 5924

#define ERROR_DEPENDENT_SERVICES_RUNNING 1051

#define ERROR_DESTINATION_ELEMENT_FULL 1161

#define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435

#define ERROR_DEV_NOT_EXIST 55

#define ERROR_DEVICE_ALREADY_ATTACHED 548

#define ERROR_DEVICE_ALREADY_REMEMBERED 1202

#define ERROR_DEVICE_DOOR_OPEN 1166

#define ERROR_DEVICE_ENUMERATION_ERROR 648

#define ERROR_DEVICE_IN_USE 2404

#define ERROR_DEVICE_NOT_AVAILABLE 4319

#define ERROR_DEVICE_NOT_CONNECTED 1167

#define ERROR_DEVICE_NOT_PARTITIONED 1107

#define ERROR_DEVICE_REINITIALIZATION_NEEDED 1164

#define ERROR_DEVICE_REMOVED 1617

#define ERROR_DEVICE_REQUIRES_CLEANING 1165

#define ERROR_DHCP_ADDRESS_CONFLICT 4100

#define ERROR_DIFFERENT_SERVICE_ACCOUNT 1079

#define ERROR_DIR_EFS_DISALLOWED 6010

#define ERROR_DIR_NOT_EMPTY 145

#define ERROR_DIR_NOT_ROOT 144

#define ERROR_DIRECT_ACCESS_HANDLE 130

#define ERROR_DIRECTORY 267

#define ERROR_DIRECTORY_NOT_RM 6803

#define ERROR_DISCARDED 157

#define ERROR_DISK_CHANGE 107

#define ERROR_DISK_CORRUPT 1393

#define ERROR_DISK_FULL 112

#define ERROR_DISK_OPERATION_FAILED 1127

#define ERROR_DISK_QUOTA_EXCEEDED 1295

#define ERROR_DISK_RECALIBRATE_FAILED 1126

#define ERROR_DISK_REPAIR_DISABLED 780

#define ERROR_DISK_RESET_FAILED 1128

#define ERROR_DISK_TOO_FRAGMENTED 302

#define ERROR_DLL_INIT_FAILED 1114

#define ERROR_DLL_INIT_FAILED_LOGOFF 624

#define ERROR_DLL_MIGHT_BE_INCOMPATIBLE 687

#define ERROR_DLL_MIGHT_BE_INSECURE 686

#define ERROR_DLL_NOT_FOUND 1157

#define ERROR_DOMAIN_CONTROLLER_EXISTS 1250

#define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908

#define ERROR_DOMAIN_CTRLR_CONFIG_ERROR 581

#define ERROR_DOMAIN_EXISTS 1356

#define ERROR_DOMAIN_LIMIT_EXCEEDED 1357

#define ERROR_DOMAIN_TRUST_INCONSISTENT 1810

#define ERROR_DOWNGRADE_DETECTED 1265

#define ERROR_DRIVE_LOCKED 108

#define ERROR_DRIVE_MEDIA_MISMATCH 4303

#define ERROR_DRIVER_BLOCKED 1275

#define ERROR_DRIVER_CANCEL_TIMEOUT 594

#define ERROR_DRIVER_DATABASE_ERROR 652

#define ERROR_DRIVER_FAILED_PRIOR_UNLOAD 654

#define ERROR_DRIVER_FAILED_SLEEP 633

#define ERROR_DRIVER_PROCESS_TERMINATED 1291

#define ERROR_DRIVERS_LEAKING_LOCKED_PAGES 729

#define ERROR_DS_ADD_REPLICA_INHIBITED 8302

#define ERROR_DS_ADMIN_LIMIT_EXCEEDED 8228

#define ERROR_DS_AFFECTS_MULTIPLE_DSAS 8249

#define ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER 8578

#define ERROR_DS_ALIAS_DEREF_PROBLEM 8244

#define ERROR_DS_ALIAS_POINTS_TO_ALIAS 8336

#define ERROR_DS_ALIAS_PROBLEM 8241

#define ERROR_DS_ALIASED_OBJ_MISSING 8334

#define ERROR_DS_ATT_ALREADY_EXISTS 8318

#define ERROR_DS_ATT_IS_NOT_ON_OBJ 8310

#define ERROR_DS_ATT_NOT_DEF_FOR_CLASS 8317

#define ERROR_DS_ATT_NOT_DEF_IN_SCHEMA 8303

#define ERROR_DS_ATT_SCHEMA_REQ_ID 8399

#define ERROR_DS_ATT_SCHEMA_REQ_SYNTAX 8416

#define ERROR_DS_ATT_VAL_ALREADY_EXISTS 8323

#define ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS 8205

#define ERROR_DS_ATTRIBUTE_OWNED_BY_SAM 8346

#define ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED 8204

#define ERROR_DS_AUDIT_FAILURE 8625

#define ERROR_DS_AUTH_METHOD_NOT_SUPPORTED 8231

#define ERROR_DS_AUTH_UNKNOWN 8234

#define ERROR_DS_AUTHORIZATION_FAILED 8599

#define ERROR_DS_AUX_CLS_TEST_FAIL 8389

#define ERROR_DS_BACKLINK_WITHOUT_LINK 8482

#define ERROR_DS_BAD_ATT_SCHEMA_SYNTAX 8400

#define ERROR_DS_BAD_HIERARCHY_FILE 8425

#define ERROR_DS_BAD_INSTANCE_TYPE 8313

#define ERROR_DS_BAD_NAME_SYNTAX 8335

#define ERROR_DS_BAD_RDN_ATT_ID_SYNTAX 8392

#define ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED 8426

#define ERROR_DS_BUSY 8206

#define ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD 8585

#define ERROR_DS_CANT_ADD_ATT_VALUES 8320

#define ERROR_DS_CANT_ADD_SYSTEM_ONLY 8358

#define ERROR_DS_CANT_ADD_TO_GC 8550

#define ERROR_DS_CANT_CACHE_ATT 8401

#define ERROR_DS_CANT_CACHE_CLASS 8402

#define ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC 8553

#define ERROR_DS_CANT_CREATE_UNDER_SCHEMA 8510

#define ERROR_DS_CANT_DEL_MASTER_CROSSREF 8375

#define ERROR_DS_CANT_DELETE 8398

#define ERROR_DS_CANT_DELETE_DSA_OBJ 8340

#define ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC 8604

#define ERROR_DS_CANT_DEREF_ALIAS 8337

#define ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN 8603

#define ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF 8589

#define ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN 8537

#define ERROR_DS_CANT_FIND_DSA_OBJ 8419

#define ERROR_DS_CANT_FIND_EXPECTED_NC 8420

#define ERROR_DS_CANT_FIND_NC_IN_CACHE 8421

#define ERROR_DS_CANT_MIX_MASTER_AND_REPS 8331

#define ERROR_DS_CANT_MOD_OBJ_CLASS 8215

#define ERROR_DS_CANT_MOD_PRIMARYGROUPID 8506

#define ERROR_DS_CANT_MOD_SYSTEM_ONLY 8369

#define ERROR_DS_CANT_MOVE_ACCOUNT_GROUP 8498

#define ERROR_DS_CANT_MOVE_APP_BASIC_GROUP 8608

#define ERROR_DS_CANT_MOVE_APP_QUERY_GROUP 8609

#define ERROR_DS_CANT_MOVE_DELETED_OBJECT 8489

#define ERROR_DS_CANT_MOVE_RESOURCE_GROUP 8499

#define ERROR_DS_CANT_ON_NON_LEAF 8213

#define ERROR_DS_CANT_ON_RDN 8214

#define ERROR_DS_CANT_REM_MISSING_ATT 8324

#define ERROR_DS_CANT_REM_MISSING_ATT_VAL 8325

#define ERROR_DS_CANT_REMOVE_ATT_CACHE 8403

#define ERROR_DS_CANT_REMOVE_CLASS_CACHE 8404

#define ERROR_DS_CANT_REPLACE_HIDDEN_REC 8424

#define ERROR_DS_CANT_RETRIEVE_ATTS 8481

#define ERROR_DS_CANT_RETRIEVE_CHILD 8422

#define ERROR_DS_CANT_RETRIEVE_DN 8405

#define ERROR_DS_CANT_RETRIEVE_INSTANCE 8407

#define ERROR_DS_CANT_RETRIEVE_SD 8526

#define ERROR_DS_CANT_START 8531

#define ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ 8560

#define ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS 8493

#define ERROR_DS_CHILDREN_EXIST 8332

#define ERROR_DS_CLASS_MUST_BE_CONCRETE 8359

#define ERROR_DS_CLASS_NOT_DSA 8343

#define ERROR_DS_CLIENT_LOOP 8259

#define ERROR_DS_CODE_INCONSISTENCY 8408

#define ERROR_DS_COMPARE_FALSE 8229

#define ERROR_DS_COMPARE_TRUE 8230

#define ERROR_DS_CONFIDENTIALITY_REQUIRED 8237

#define ERROR_DS_CONFIG_PARAM_MISSING 8427

#define ERROR_DS_CONSTRAINT_VIOLATION 8239

#define ERROR_DS_CONSTRUCTED_ATT_MOD 8475

#define ERROR_DS_CONTROL_NOT_FOUND 8258

#define ERROR_DS_COULDNT_CONTACT_FSMO 8367

#define ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE 8503

#define ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE 8502

#define ERROR_DS_COULDNT_UPDATE_SPNS 8525

#define ERROR_DS_COUNTING_AB_INDICES_FAILED 8428

#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE 8495

#define ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 8586

#define ERROR_DS_CROSS_DOM_MOVE_ERROR 8216

#define ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD 8491

#define ERROR_DS_CROSS_NC_DN_RENAME 8368

#define ERROR_DS_CROSS_REF_BUSY 8602

#define ERROR_DS_CROSS_REF_EXISTS 8374

#define ERROR_DS_DATABASE_ERROR 8409

#define ERROR_DS_DECODING_ERROR 8253

#define ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED 8536

#define ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST 8535

#define ERROR_DS_DIFFERENT_REPL_EPOCHS 8593

#define ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER 8615

#define ERROR_DS_DNS_LOOKUP_FAILURE 8524

#define ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST 8634

#define ERROR_DS_DOMAIN_RENAME_IN_PROGRESS 8612

#define ERROR_DS_DOMAIN_VERSION_TOO_HIGH 8564

#define ERROR_DS_DOMAIN_VERSION_TOO_LOW 8566

#define ERROR_DS_DRA_ABANDON_SYNC 8462

#define ERROR_DS_DRA_ACCESS_DENIED 8453

#define ERROR_DS_DRA_BAD_DN 8439

#define ERROR_DS_DRA_BAD_INSTANCE_TYPE 8445

#define ERROR_DS_DRA_BAD_NC 8440

#define ERROR_DS_DRA_BUSY 8438

#define ERROR_DS_DRA_CONNECTION_FAILED 8444

#define ERROR_DS_DRA_CORRUPT_UTD_VECTOR 8629

#define ERROR_DS_DRA_DB_ERROR 8451

#define ERROR_DS_DRA_DN_EXISTS 8441

#define ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT 8544

#define ERROR_DS_DRA_EXTN_CONNECTION_FAILED 8466

#define ERROR_DS_DRA_GENERIC 8436

#define ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET 8464

#define ERROR_DS_DRA_INCONSISTENT_DIT 8443

#define ERROR_DS_DRA_INTERNAL_ERROR 8442

#define ERROR_DS_DRA_INVALID_PARAMETER 8437

#define ERROR_DS_DRA_MAIL_PROBLEM 8447

#define ERROR_DS_DRA_MISSING_KRBTGT_SECRET 8633

#define ERROR_DS_DRA_MISSING_PARENT 8460

#define ERROR_DS_DRA_NAME_COLLISION 8458

#define ERROR_DS_DRA_NO_REPLICA 8452

#define ERROR_DS_DRA_NOT_SUPPORTED 8454

#define ERROR_DS_DRA_OBJ_IS_REP_SOURCE 8450

#define ERROR_DS_DRA_OBJ_NC_MISMATCH 8545

#define ERROR_DS_DRA_OUT_OF_MEM 8446

#define ERROR_DS_DRA_OUT_SCHEDULE_WINDOW 8617

#define ERROR_DS_DRA_PREEMPTED 8461

#define ERROR_DS_DRA_RECYCLED_TARGET 8639

#define ERROR_DS_DRA_REF_ALREADY_EXISTS 8448

#define ERROR_DS_DRA_REF_NOT_FOUND 8449

#define ERROR_DS_DRA_REPL_PENDING 8477

#define ERROR_DS_DRA_RPC_CANCELLED 8455

#define ERROR_DS_DRA_SCHEMA_CONFLICT 8543

#define ERROR_DS_DRA_SCHEMA_INFO_SHIP 8542

#define ERROR_DS_DRA_SCHEMA_MISMATCH 8418

#define ERROR_DS_DRA_SECRETS_DENIED 8630

#define ERROR_DS_DRA_SHUTDOWN 8463

#define ERROR_DS_DRA_SINK_DISABLED 8457

#define ERROR_DS_DRA_SOURCE_DISABLED 8456

#define ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA 8465

#define ERROR_DS_DRA_SOURCE_REINSTALLED 8459

#define ERROR_DS_DRS_EXTENSIONS_CHANGED 8594

#define ERROR_DS_DS_REQUIRED 8478

#define ERROR_DS_DSA_MUST_BE_INT_MASTER 8342

#define ERROR_DS_DST_DOMAIN_NOT_NATIVE 8496

#define ERROR_DS_DST_NC_MISMATCH 8486

#define ERROR_DS_DUP_LDAP_DISPLAY_NAME 8382

#define ERROR_DS_DUP_LINK_ID 8468

#define ERROR_DS_DUP_MAPI_ID 8380

#define ERROR_DS_DUP_MSDS_INTID 8597

#define ERROR_DS_DUP_OID 8379

#define ERROR_DS_DUP_RDN 8378

#define ERROR_DS_DUP_SCHEMA_ID_GUID 8381

#define ERROR_DS_DUPLICATE_ID_FOUND 8605

#define ERROR_DS_ENCODING_ERROR 8252

#define ERROR_DS_EPOCH_MISMATCH 8483

#define ERROR_DS_EXISTING_AD_CHILD_NC 8613

#define ERROR_DS_EXISTS_IN_AUX_CLS 8393

#define ERROR_DS_EXISTS_IN_MAY_HAVE 8386

#define ERROR_DS_EXISTS_IN_MUST_HAVE 8385

#define ERROR_DS_EXISTS_IN_POSS_SUP 8395

#define ERROR_DS_EXISTS_IN_RDNATTID 8598

#define ERROR_DS_EXISTS_IN_SUB_CLS 8394

#define ERROR_DS_FILTER_UNKNOWN 8254

#define ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS 8555

#define ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST 8635

#define ERROR_DS_FOREST_VERSION_TOO_HIGH 8563

#define ERROR_DS_FOREST_VERSION_TOO_LOW 8565

#define ERROR_DS_GC_NOT_AVAILABLE 8217

#define ERROR_DS_GC_REQUIRED 8547

#define ERROR_DS_GCVERIFY_ERROR 8417

#define ERROR_DS_GENERIC_ERROR 8341

#define ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER 8519

#define ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER 8516

#define ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER 8517

#define ERROR_DS_GOVERNSID_MISSING 8410

#define ERROR_DS_GROUP_CONVERSION_ERROR 8607

#define ERROR_DS_HAVE_PRIMARY_MEMBERS 8521

#define ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED 8429

#define ERROR_DS_HIERARCHY_TABLE_TOO_DEEP 8628

#define ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD 8507

#define ERROR_DS_ILLEGAL_MOD_OPERATION 8311

#define ERROR_DS_ILLEGAL_SUPERIOR 8345

#define ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION 8492

#define ERROR_DS_INAPPROPRIATE_AUTH 8233

#define ERROR_DS_INAPPROPRIATE_MATCHING 8238

#define ERROR_DS_INCOMPATIBLE_CONTROLS_USED 8574

#define ERROR_DS_INCOMPATIBLE_VERSION 8567

#define ERROR_DS_INCORRECT_ROLE_OWNER 8210

#define ERROR_DS_INIT_FAILURE 8532

#define ERROR_DS_INIT_FAILURE_CONSOLE 8561

#define ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE 8512

#define ERROR_DS_INSTALL_NO_SRC_SCH_VERSION 8511

#define ERROR_DS_INSTALL_SCHEMA_MISMATCH 8467

#define ERROR_DS_INSUFF_ACCESS_RIGHTS 8344

#define ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT 8606

#define ERROR_DS_INTERNAL_FAILURE 8430

#define ERROR_DS_INVALID_ATTRIBUTE_SYNTAX 8203

#define ERROR_DS_INVALID_DMD 8360

#define ERROR_DS_INVALID_DN_SYNTAX 8242

#define ERROR_DS_INVALID_GROUP_TYPE 8513

#define ERROR_DS_INVALID_LDAP_DISPLAY_NAME 8479

#define ERROR_DS_INVALID_NAME_FOR_SPN 8554

#define ERROR_DS_INVALID_ROLE_OWNER 8366

#define ERROR_DS_INVALID_SCRIPT 8600

#define ERROR_DS_INVALID_SEARCH_FLAG 8500

#define ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE 8626

#define ERROR_DS_INVALID_SEARCH_FLAG_TUPLE 8627

#define ERROR_DS_IS_LEAF 8243

#define ERROR_DS_KEY_NOT_UNIQUE 8527

#define ERROR_DS_LDAP_SEND_QUEUE_FULL 8616

#define ERROR_DS_LINK_ID_NOT_AVAILABLE 8577

#define ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER 8520

#define ERROR_DS_LOCAL_ERROR 8251

#define ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY 8548

#define ERROR_DS_LOOP_DETECT 8246

#define ERROR_DS_LOW_DSA_VERSION 8568

#define ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 8572

#define ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED 8557

#define ERROR_DS_MAPI_ID_NOT_AVAILABLE 8632

#define ERROR_DS_MASTERDSA_REQUIRED 8314

#define ERROR_DS_MAX_OBJ_SIZE_EXCEEDED 8304

#define ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY 8201

#define ERROR_DS_MISSING_EXPECTED_ATT 8411

#define ERROR_DS_MISSING_FSMO_SETTINGS 8434

#define ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER 8497

#define ERROR_DS_MISSING_REQUIRED_ATT 8316

#define ERROR_DS_MISSING_SUPREF 8406

#define ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG 8581

#define ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE 8579

#define ERROR_DS_MODIFYDN_WRONG_GRANDPARENT 8582

#define ERROR_DS_MUST_BE_RUN_ON_DST_DC 8558

#define ERROR_DS_NAME_ERROR_DOMAIN_ONLY 8473

#define ERROR_DS_NAME_ERROR_NO_MAPPING 8472

#define ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING 8474

#define ERROR_DS_NAME_ERROR_NOT_FOUND 8470

#define ERROR_DS_NAME_ERROR_NOT_UNIQUE 8471

#define ERROR_DS_NAME_ERROR_RESOLVING 8469

#define ERROR_DS_NAME_ERROR_TRUST_REFERRAL 8583

#define ERROR_DS_NAME_NOT_UNIQUE 8571

#define ERROR_DS_NAME_REFERENCE_INVALID 8373

#define ERROR_DS_NAME_TOO_LONG 8348

#define ERROR_DS_NAME_TOO_MANY_PARTS 8347

#define ERROR_DS_NAME_TYPE_UNKNOWN 8351

#define ERROR_DS_NAME_UNPARSEABLE 8350

#define ERROR_DS_NAME_VALUE_TOO_LONG 8349

#define ERROR_DS_NAMING_MASTER_GC 8523

#define ERROR_DS_NAMING_VIOLATION 8247

#define ERROR_DS_NC_MUST_HAVE_NC_PARENT 8494

#define ERROR_DS_NC_STILL_HAS_DSAS 8546

#define ERROR_DS_NCNAME_MISSING_CR_REF 8412

#define ERROR_DS_NCNAME_MUST_BE_NC 8357

#define ERROR_DS_NO_ATTRIBUTE_OR_VALUE 8202

#define ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN 8569

#define ERROR_DS_NO_CHAINED_EVAL 8328

#define ERROR_DS_NO_CHAINING 8327

#define ERROR_DS_NO_CHECKPOINT_WITH_PDC 8551

#define ERROR_DS_NO_CROSSREF_FOR_NC 8363

#define ERROR_DS_NO_DELETED_NAME 8355

#define ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS 8549

#define ERROR_DS_NO_MORE_RIDS 8209

#define ERROR_DS_NO_MSDS_INTID 8596

#define ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN 8514

#define ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN 8515

#define ERROR_DS_NO_NTDSA_OBJECT 8623

#define ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC 8580

#define ERROR_DS_NO_PARENT_OBJECT 8329

#define ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION 8533

#define ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA 8306

#define ERROR_DS_NO_REF_DOMAIN 8575

#define ERROR_DS_NO_REQUESTED_ATTS_FOUND 8308

#define ERROR_DS_NO_RESULTS_RETURNED 8257

#define ERROR_DS_NO_RIDS_ALLOCATED 8208

#define ERROR_DS_NO_SERVER_OBJECT 8622

#define ERROR_DS_NO_SUCH_OBJECT 8240

#define ERROR_DS_NO_TREE_DELETE_ABOVE_NC 8501

#define ERROR_DS_NON_ASQ_SEARCH 8624

#define ERROR_DS_NON_BASE_SEARCH 8480

#define ERROR_DS_NONEXISTENT_MAY_HAVE 8387

#define ERROR_DS_NONEXISTENT_MUST_HAVE 8388

#define ERROR_DS_NONEXISTENT_POSS_SUP 8390

#define ERROR_DS_NONSAFE_SCHEMA_CHANGE 8508

#define ERROR_DS_NOT_AN_OBJECT 8352

#define ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC 8487

#define ERROR_DS_NOT_CLOSEST 8588

#define ERROR_DS_NOT_INSTALLED 8200

#define ERROR_DS_NOT_ON_BACKLINK 8362

#define ERROR_DS_NOT_SUPPORTED 8256

#define ERROR_DS_NOT_SUPPORTED_SORT_ORDER 8570

#define ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX 8377

#define ERROR_DS_NTDSCRIPT_PROCESS_ERROR 8592

#define ERROR_DS_NTDSCRIPT_SYNTAX_ERROR 8591

#define ERROR_DS_OBJ_CLASS_NOT_DEFINED 8371

#define ERROR_DS_OBJ_CLASS_NOT_SUBCLASS 8372

#define ERROR_DS_OBJ_CLASS_VIOLATION 8212

#define ERROR_DS_OBJ_GUID_EXISTS 8361

#define ERROR_DS_OBJ_NOT_FOUND 8333

#define ERROR_DS_OBJ_STRING_NAME_EXISTS 8305

#define ERROR_DS_OBJ_TOO_LARGE 8312

#define ERROR_DS_OBJECT_BEING_REMOVED 8339

#define ERROR_DS_OBJECT_CLASS_REQUIRED 8315

#define ERROR_DS_OBJECT_RESULTS_TOO_LARGE 8248

#define ERROR_DS_OFFSET_RANGE_ERROR 8262

#define ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS 8637

#define ERROR_DS_OID_NOT_FOUND 8638

#define ERROR_DS_OPERATIONS_ERROR 8224

#define ERROR_DS_OUT_OF_SCOPE 8338

#define ERROR_DS_OUT_OF_VERSION_STORE 8573

#define ERROR_DS_PARAM_ERROR 8255

#define ERROR_DS_PARENT_IS_AN_ALIAS 8330

#define ERROR_DS_PDC_OPERATION_IN_PROGRESS 8490

#define ERROR_DS_POLICY_NOT_KNOWN 8618

#define ERROR_DS_PROTOCOL_ERROR 8225

#define ERROR_DS_RANGE_CONSTRAINT 8322

#define ERROR_DS_RDN_DOESNT_MATCH_SCHEMA 8307

#define ERROR_DS_RECALCSCHEMA_FAILED 8396

#define ERROR_DS_REFERRAL 8235

#define ERROR_DS_REFERRAL_LIMIT_EXCEEDED 8260

#define ERROR_DS_REFUSING_FSMO_ROLES 8433

#define ERROR_DS_REMOTE_CROSSREF_OP_FAILED 8601

#define ERROR_DS_REPL_LIFETIME_EXCEEDED 8614

#define ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR 8595

#define ERROR_DS_REPLICATOR_ONLY 8370

#define ERROR_DS_RESERVED_LINK_ID 8576

#define ERROR_DS_RESERVED_MAPI_ID 8631

#define ERROR_DS_RIDMGR_INIT_ERROR 8211

#define ERROR_DS_ROLE_NOT_VERIFIED 8610

#define ERROR_DS_ROOT_CANT_BE_SUBREF 8326

#define ERROR_DS_ROOT_MUST_BE_NC 8301

#define ERROR_DS_ROOT_REQUIRES_CLASS_TOP 8432

#define ERROR_DS_SAM_INIT_FAILURE 8504

#define ERROR_DS_SAM_INIT_FAILURE_CONSOLE 8562

#define ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY 8530

#define ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD 8529

#define ERROR_DS_SCHEMA_ALLOC_FAILED 8415

#define ERROR_DS_SCHEMA_NOT_LOADED 8414

#define ERROR_DS_SCHEMA_UPDATE_DISALLOWED 8509

#define ERROR_DS_SEC_DESC_INVALID 8354

#define ERROR_DS_SEC_DESC_TOO_SHORT 8353

#define ERROR_DS_SECURITY_CHECKING_ERROR 8413

#define ERROR_DS_SECURITY_ILLEGAL_MODIFY 8423

#define ERROR_DS_SEMANTIC_ATT_TEST 8383

#define ERROR_DS_SENSITIVE_GROUP_VIOLATION 8505

#define ERROR_DS_SERVER_DOWN 8250

#define ERROR_DS_SHUTTING_DOWN 8364

#define ERROR_DS_SINGLE_USER_MODE_FAILED 8590

#define ERROR_DS_SINGLE_VALUE_CONSTRAINT 8321

#define ERROR_DS_SIZELIMIT_EXCEEDED 8227

#define ERROR_DS_SORT_CONTROL_MISSING 8261

#define ERROR_DS_SOURCE_AUDITING_NOT_ENABLED 8552

#define ERROR_DS_SOURCE_DOMAIN_IN_FOREST 8534

#define ERROR_DS_SRC_AND_DST_NC_IDENTICAL 8485

#define ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH 8540

#define ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER 8559

#define ERROR_DS_SRC_GUID_MISMATCH 8488

#define ERROR_DS_SRC_NAME_MISMATCH 8484

#define ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER 8538

#define ERROR_DS_SRC_SID_EXISTS_IN_FOREST 8539

#define ERROR_DS_STRING_SD_CONVERSION_FAILED 8522

#define ERROR_DS_STRONG_AUTH_REQUIRED 8232

#define ERROR_DS_SUB_CLS_TEST_FAIL 8391

#define ERROR_DS_SUBREF_MUST_HAVE_PARENT 8356

#define ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD 8376

#define ERROR_DS_SYNTAX_MISMATCH 8384

#define ERROR_DS_THREAD_LIMIT_EXCEEDED 8587

#define ERROR_DS_TIMELIMIT_EXCEEDED 8226

#define ERROR_DS_TREE_DELETE_NOT_FINISHED 8397

#define ERROR_DS_UNABLE_TO_SURRENDER_ROLES 8435

#define ERROR_DS_UNAVAILABLE 8207

#define ERROR_DS_UNAVAILABLE_CRIT_EXTENSION 8236

#define ERROR_DS_UNICODEPWD_NOT_IN_QUOTES 8556

#define ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER 8518

#define ERROR_DS_UNKNOWN_ERROR 8431

#define ERROR_DS_UNKNOWN_OPERATION 8365

#define ERROR_DS_UNWILLING_TO_PERFORM 8245

#define ERROR_DS_USER_BUFFER_TO_SMALL 8309

#define ERROR_DS_VERSION_CHECK_FAILURE 643

#define ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL 8611

#define ERROR_DS_WRONG_LINKED_ATT_SYNTAX 8528

#define ERROR_DS_WRONG_OM_OBJ_CLASS 8476

#define ERROR_DUP_DOMAINNAME 1221

#define ERROR_DUP_NAME 52

#define ERROR_DUPLICATE_SERVICE_NAME 1078

#define ERROR_DUPLICATE_TAG 2014

#define ERROR_DYNLINK_FROM_INVALID_RING 196

#define ERROR_EA_ACCESS_DENIED 994

#define ERROR_EA_FILE_CORRUPT 276

#define ERROR_EA_LIST_INCONSISTENT 255

#define ERROR_EA_TABLE_FULL 277

#define ERROR_EAS_DIDNT_FIT 275

#define ERROR_EAS_NOT_SUPPORTED 282

#define ERROR_EC_CIRCULAR_FORWARDING 15082

#define ERROR_EC_CRED_NOT_FOUND 15084

#define ERROR_EC_CREDSTORE_FULL 15083

#define ERROR_EC_LOG_DISABLED 15081

#define ERROR_EC_NO_ACTIVE_CHANNEL 15085

#define ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE 15080

#define ERROR_EFS_ALG_BLOB_TOO_BIG 6013

#define ERROR_EFS_DISABLED 6015

#define ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION 6831

#define ERROR_EFS_SERVER_NOT_TRUSTED 6011

#define ERROR_EFS_VERSION_NOT_SUPPORT 6016

#define ERROR_ELEVATION_REQUIRED 740

#define ERROR_EMPTY 4306

#define ERROR_ENCRYPTION_FAILED 6000

#define ERROR_ENCRYPTION_POLICY_DENIES_OPERATION 6022

#define ERROR_END_OF_MEDIA 1100

#define ERROR_ENLISTMENT_NOT_FOUND 6717

#define ERROR_ENLISTMENT_NOT_SUPERIOR 6820

#define ERROR_ENVVAR_NOT_FOUND 203

#define ERROR_EOM_OVERFLOW 1129

#define ERROR_ERRORS_ENCOUNTERED 774

#define ERROR_EVALUATION_EXPIRATION 622

#define ERROR_EVENT_DONE 710

#define ERROR_EVENT_PENDING 711

#define ERROR_EVENTLOG_CANT_START 1501

#define ERROR_EVENTLOG_FILE_CHANGED 1503

#define ERROR_EVENTLOG_FILE_CORRUPT 1500

#define ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY 15036

#define ERROR_EVT_CHANNEL_CANNOT_ACTIVATE 15025

#define ERROR_EVT_CHANNEL_NOT_FOUND 15007

#define ERROR_EVT_CONFIGURATION_ERROR 15010

#define ERROR_EVT_EVENT_DEFINITION_NOT_FOUND 15032

#define ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND 15003

#define ERROR_EVT_FILTER_ALREADYSCOPED 15014

#define ERROR_EVT_FILTER_INVARG 15016

#define ERROR_EVT_FILTER_INVTEST 15017

#define ERROR_EVT_FILTER_INVTYPE 15018

#define ERROR_EVT_FILTER_NOTELTSET 15015

#define ERROR_EVT_FILTER_OUT_OF_RANGE 15038

#define ERROR_EVT_FILTER_PARSEERR 15019

#define ERROR_EVT_FILTER_TOO_COMPLEX 15026

#define ERROR_EVT_FILTER_UNEXPECTEDTOKEN 15021

#define ERROR_EVT_FILTER_UNSUPPORTEDOP 15020

#define ERROR_EVT_INVALID_CHANNEL_PATH 15000

#define ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE 15023

#define ERROR_EVT_INVALID_EVENT_DATA 15005

#define ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL 15022

#define ERROR_EVT_INVALID_PUBLISHER_NAME 15004

#define ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE 15024

#define ERROR_EVT_INVALID_QUERY 15001

#define ERROR_EVT_MALFORMED_XML_TEXT 15008

#define ERROR_EVT_MAX_INSERTS_REACHED 15031

#define ERROR_EVT_MESSAGE_ID_NOT_FOUND 15028

#define ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND 15033

#define ERROR_EVT_MESSAGE_NOT_FOUND 15027

#define ERROR_EVT_NON_VALIDATING_MSXML 15013

#define ERROR_EVT_PUBLISHER_DISABLED 15037

#define ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND 15002

#define ERROR_EVT_QUERY_RESULT_INVALID_POSITION 15012

#define ERROR_EVT_QUERY_RESULT_STALE 15011

#define ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL 15009

#define ERROR_EVT_UNRESOLVED_PARAMETER_INSERT 15030

#define ERROR_EVT_UNRESOLVED_VALUE_INSERT 15029

#define ERROR_EVT_VERSION_TOO_NEW 15035

#define ERROR_EVT_VERSION_TOO_OLD 15034

#define ERROR_EXCEPTION_IN_RESOURCE_CALL 5930

#define ERROR_EXCEPTION_IN_SERVICE 1064

#define ERROR_EXCL_SEM_ALREADY_OWNED 101

#define ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY 217

#define ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY 218

#define ERROR_EXE_MACHINE_TYPE_MISMATCH 216

#define ERROR_EXE_MARKED_INVALID 192

#define ERROR_EXPIRED_HANDLE 6854

#define ERROR_EXTENDED_ERROR 1208

#define ERROR_EXTRANEOUS_INFORMATION 677

#define ERROR_FAIL_FAST_EXCEPTION 1653

#define ERROR_FAIL_I24 83

#define ERROR_FAIL_NOACTION_REBOOT 350

#define ERROR_FAIL_REBOOT_INITIATED 3018

#define ERROR_FAIL_REBOOT_REQUIRED 3017

#define ERROR_FAIL_RESTART 352

#define ERROR_FAIL_SHUTDOWN 351

#define ERROR_FAILED_DRIVER_ENTRY 647

#define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063

#define ERROR_FATAL_APP_EXIT 713

#define ERROR_FILE_CHECKED_OUT 220

#define ERROR_FILE_CORRUPT 1392

#define ERROR_FILE_ENCRYPTED 6002

#define ERROR_FILE_EXISTS 80

#define ERROR_FILE_IDENTITY_NOT_PERSISTENT 6823

#define ERROR_FILE_INVALID 1006

#define ERROR_FILE_NOT_ENCRYPTED 6007

#define ERROR_FILE_NOT_FOUND 2

#define ERROR_FILE_OFFLINE 4350

#define ERROR_FILE_READ_ONLY 6009

#define ERROR_FILE_SHARE_RESOURCE_CONFLICT 5938

#define ERROR_FILE_SYSTEM_LIMITATION 665

#define ERROR_FILE_TOO_LARGE 223

#define ERROR_FILEMARK_DETECTED 1101

#define ERROR_FILENAME_EXCED_RANGE 206

#define ERROR_FIRMWARE_UPDATED 728

#define ERROR_FLOAT_MULTIPLE_FAULTS 630

#define ERROR_FLOAT_MULTIPLE_TRAPS 631

#define ERROR_FLOATED_SECTION 6846

#define ERROR_FLOPPY_BAD_REGISTERS 1125

#define ERROR_FLOPPY_ID_MARK_NOT_FOUND 1122

#define ERROR_FLOPPY_UNKNOWN_ERROR 1124

#define ERROR_FLOPPY_VOLUME 584

#define ERROR_FLOPPY_WRONG_CYLINDER 1123

#define ERROR_FLT_ALREADY_ENLISTED 2149515291

#define ERROR_FLT_CBDQ_DISABLED 2149515278

#define ERROR_FLT_CONTEXT_ALLOCATION_NOT_FOUND 2149515286

#define ERROR_FLT_CONTEXT_ALREADY_DEFINED 2149515266

#define ERROR_FLT_CONTEXT_ALREADY_LINKED 2149515292

#define ERROR_FLT_DELETING_OBJECT 2149515275

#define ERROR_FLT_DISALLOW_FAST_IO 2149515268

#define ERROR_FLT_DO_NOT_ATTACH 2149515279

#define ERROR_FLT_DO_NOT_DETACH 2149515280

#define ERROR_FLT_DUPLICATE_ENTRY 2149515277

#define ERROR_FLT_FILTER_NOT_FOUND 2149515283

#define ERROR_FLT_FILTER_NOT_READY 2149515272

#define ERROR_FLT_INSTANCE_ALTITUDE_COLLISION 2149515281

#define ERROR_FLT_INSTANCE_NAME_COLLISION 2149515282

#define ERROR_FLT_INSTANCE_NOT_FOUND 2149515285

#define ERROR_FLT_INTERNAL_ERROR 2149515274

#define ERROR_FLT_INVALID_ASYNCHRONOUS_REQUEST 2149515267

#define ERROR_FLT_INVALID_CONTEXT_REGISTRATION 2149515287

#define ERROR_FLT_INVALID_NAME_REQUEST 2149515269

#define ERROR_FLT_IO_COMPLETE 2031617

#define ERROR_FLT_MUST_BE_NONPAGED_POOL 2149515276

#define ERROR_FLT_NAME_CACHE_MISS 2149515288

#define ERROR_FLT_NO_DEVICE_OBJECT 2149515289

#define ERROR_FLT_NO_HANDLER_DEFINED 2149515265

#define ERROR_FLT_NO_WAITER_FOR_REPLY 2149515296

#define ERROR_FLT_NOT_INITIALIZED 2149515271

#define ERROR_FLT_NOT_SAFE_TO_POST_OPERATION 2149515270

#define ERROR_FLT_POST_OPERATION_CLEANUP 2149515273

#define ERROR_FLT_VOLUME_ALREADY_MOUNTED 2149515290

#define ERROR_FLT_VOLUME_NOT_FOUND 2149515284

#define ERROR_FORMS_AUTH_REQUIRED 224

#define ERROR_FOUND_OUT_OF_SCOPE 601

#define ERROR_FS_DRIVER_REQUIRED 588

#define ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY 762

#define ERROR_FT_READ_RECOVERY_FROM_BACKUP 704

#define ERROR_FT_WRITE_RECOVERY 705

#define ERROR_FULL_BACKUP 4004

#define ERROR_FULLSCREEN_MODE 1007

#define ERROR_FUNCTION_FAILED 1627

#define ERROR_FUNCTION_NOT_CALLED 1626

#define ERROR_GEN_FAILURE 31

#define ERROR_GENERIC_COMMAND_FAILED 14109

#define ERROR_GENERIC_NOT_MAPPED 1360

#define ERROR_GLOBAL_ONLY_HOOK 1429

#define ERROR_GRACEFUL_DISCONNECT 1226

#define ERROR_GRAPHICS_ADAPTER_ACCESS_NOT_EXCLUDED 3223725115

#define ERROR_GRAPHICS_ADAPTER_CHAIN_NOT_READY 3223725107

#define ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_SOURCE 3223724840

#define ERROR_GRAPHICS_ADAPTER_MUST_HAVE_AT_LEAST_ONE_TARGET 3223724841

#define ERROR_GRAPHICS_ADAPTER_WAS_RESET 3223724035

#define ERROR_GRAPHICS_ALLOCATION_BUSY 3223724290

#define ERROR_GRAPHICS_ALLOCATION_CLOSED 3223724306

#define ERROR_GRAPHICS_ALLOCATION_CONTENT_LOST 3223724310

#define ERROR_GRAPHICS_ALLOCATION_INVALID 3223724294

#define ERROR_GRAPHICS_CANCEL_VIDPN_TOPOLOGY_AUGMENTATION 3223724890

#define ERROR_GRAPHICS_CANNOTCOLORCONVERT 3223724040

#define ERROR_GRAPHICS_CANT_ACCESS_ACTIVE_VIDPN 3223724867

#define ERROR_GRAPHICS_CANT_EVICT_PINNED_ALLOCATION 3223724297

#define ERROR_GRAPHICS_CANT_LOCK_MEMORY 3223724289

#define ERROR_GRAPHICS_CANT_RENDER_LOCKED_ALLOCATION 3223724305

#define ERROR_GRAPHICS_CHAINLINKS_NOT_ENUMERATED 3223725106

#define ERROR_GRAPHICS_CHAINLINKS_NOT_POWERED_ON 3223725109

#define ERROR_GRAPHICS_CHAINLINKS_NOT_STARTED 3223725108

#define ERROR_GRAPHICS_CHILD_DESCRIPTOR_NOT_SUPPORTED 3223725057

#define ERROR_GRAPHICS_CLIENTVIDPN_NOT_SET 3223724892

#define ERROR_GRAPHICS_COPP_NOT_SUPPORTED 3223725313

#define ERROR_GRAPHICS_DATASET_IS_EMPTY 2499403

#define ERROR_GRAPHICS_DDCCI_CURRENT_CURRENT_VALUE_GREATER_THAN_MAXIMUM_VALUE 3223725528

#define ERROR_GRAPHICS_DDCCI_INVALID_DATA 3223725445

#define ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_CHECKSUM 3223725451

#define ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_COMMAND 3223725449

#define ERROR_GRAPHICS_DDCCI_INVALID_MESSAGE_LENGTH 3223725450

#define ERROR_GRAPHICS_DDCCI_MONITOR_RETURNED_INVALID_TIMING_STATUS_BYTE 3223725446

#define ERROR_GRAPHICS_DDCCI_VCP_NOT_SUPPORTED 3223725444

#define ERROR_GRAPHICS_DISPLAY_DEVICE_NOT_ATTACHED_TO_DESKTOP 3223725538

#define ERROR_GRAPHICS_DRIVER_MISMATCH 3223724041

#define ERROR_GRAPHICS_EMPTY_ADAPTER_MONITOR_MODE_SUPPORT_INTERSECTION 3223724837

#define ERROR_GRAPHICS_FREQUENCYRANGE_ALREADY_IN_SET 3223724831

#define ERROR_GRAPHICS_FREQUENCYRANGE_NOT_IN_SET 3223724829

#define ERROR_GRAPHICS_GAMMA_RAMP_NOT_SUPPORTED 3223724872

#define ERROR_GRAPHICS_GPU_EXCEPTION_ON_DEVICE 3223724544

#define ERROR_GRAPHICS_I2C_DEVICE_DOES_NOT_EXIST 3223725441

#define ERROR_GRAPHICS_I2C_ERROR_RECEIVING_DATA 3223725443

#define ERROR_GRAPHICS_I2C_ERROR_TRANSMITTING_DATA 3223725442

#define ERROR_GRAPHICS_I2C_NOT_SUPPORTED 3223725440

#define ERROR_GRAPHICS_INCOMPATIBLE_PRIVATE_FORMAT 3223724885

#define ERROR_GRAPHICS_INCONSISTENT_DEVICE_LINK_STATE 3223725110

#define ERROR_GRAPHICS_INSUFFICIENT_DMA_BUFFER 3223724033

#define ERROR_GRAPHICS_INTERNAL_ERROR 3223725543

#define ERROR_GRAPHICS_INVALID_ACTIVE_REGION 3223724811

#define ERROR_GRAPHICS_INVALID_ALLOCATION_HANDLE 3223724308

#define ERROR_GRAPHICS_INVALID_ALLOCATION_INSTANCE 3223724307

#define ERROR_GRAPHICS_INVALID_ALLOCATION_USAGE 3223724304

#define ERROR_GRAPHICS_INVALID_CLIENT_TYPE 3223724891

#define ERROR_GRAPHICS_INVALID_COLORBASIS 3223724862

#define ERROR_GRAPHICS_INVALID_COPYPROTECTION_TYPE 3223724879

#define ERROR_GRAPHICS_INVALID_DISPLAY_ADAPTER 3223724034

#define ERROR_GRAPHICS_INVALID_DRIVER_MODEL 3223724036

#define ERROR_GRAPHICS_INVALID_FREQUENCY 3223724810

#define ERROR_GRAPHICS_INVALID_GAMMA_RAMP 3223724871

#define ERROR_GRAPHICS_INVALID_MODE_PRUNING_ALGORITHM 3223724886

#define ERROR_GRAPHICS_INVALID_MONITOR_CAPABILITY_ORIGIN 3223724887

#define ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE 3223724828

#define ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGE_CONSTRAINT 3223724888

#define ERROR_GRAPHICS_INVALID_MONITOR_FREQUENCYRANGESET 3223724827

#define ERROR_GRAPHICS_INVALID_MONITOR_SOURCE_MODE 3223724834

#define ERROR_GRAPHICS_INVALID_MONITOR_SOURCEMODESET 3223724833

#define ERROR_GRAPHICS_INVALID_MONITORDESCRIPTOR 3223724843

#define ERROR_GRAPHICS_INVALID_MONITORDESCRIPTORSET 3223724842

#define ERROR_GRAPHICS_INVALID_PATH_CONTENT_GEOMETRY_TRANSFORMATION 3223724869

#define ERROR_GRAPHICS_INVALID_PATH_CONTENT_TYPE 3223724878

#define ERROR_GRAPHICS_INVALID_PATH_IMPORTANCE_ORDINAL 3223724868

#define ERROR_GRAPHICS_INVALID_PHYSICAL_MONITOR_HANDLE 3223725452

#define ERROR_GRAPHICS_INVALID_PIXELFORMAT 3223724861

#define ERROR_GRAPHICS_INVALID_PIXELVALUEACCESSMODE 3223724863

#define ERROR_GRAPHICS_INVALID_POINTER 3223725540

#define ERROR_GRAPHICS_INVALID_PRIMARYSURFACE_SIZE 3223724858

#define ERROR_GRAPHICS_INVALID_SCANLINE_ORDERING 3223724882

#define ERROR_GRAPHICS_INVALID_STRIDE 3223724860

#define ERROR_GRAPHICS_INVALID_TOTAL_REGION 3223724812

#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE 3223724804

#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_SOURCE_MODE 3223724816

#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET 3223724805

#define ERROR_GRAPHICS_INVALID_VIDEO_PRESENT_TARGET_MODE 3223724817

#define ERROR_GRAPHICS_INVALID_VIDEOPRESENTSOURCESET 3223724821

#define ERROR_GRAPHICS_INVALID_VIDEOPRESENTTARGETSET 3223724822

#define ERROR_GRAPHICS_INVALID_VIDPN 3223724803

#define ERROR_GRAPHICS_INVALID_VIDPN_PRESENT_PATH 3223724825

#define ERROR_GRAPHICS_INVALID_VIDPN_SOURCEMODESET 3223724808

#define ERROR_GRAPHICS_INVALID_VIDPN_TARGET_SUBSET_TYPE 3223724847

#define ERROR_GRAPHICS_INVALID_VIDPN_TARGETMODESET 3223724809

#define ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY 3223724800

#define ERROR_GRAPHICS_INVALID_VIDPN_TOPOLOGY_RECOMMENDATION_REASON 3223724877

#define ERROR_GRAPHICS_INVALID_VISIBLEREGION_SIZE 3223724859

#define ERROR_GRAPHICS_LEADLINK_NOT_ENUMERATED 3223725105

#define ERROR_GRAPHICS_LEADLINK_START_DEFERRED 1076241463

#define ERROR_GRAPHICS_MAX_NUM_PATHS_REACHED 3223724889

#define ERROR_GRAPHICS_MCA_INTERNAL_ERROR 3223725448

#define ERROR_GRAPHICS_MCA_INVALID_CAPABILITIES_STRING 3223725447

#define ERROR_GRAPHICS_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED 3223725534

#define ERROR_GRAPHICS_MCA_INVALID_VCP_VERSION 3223725529

#define ERROR_GRAPHICS_MCA_MCCS_VERSION_MISMATCH 3223725531

#define ERROR_GRAPHICS_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION 3223725530

#define ERROR_GRAPHICS_MCA_UNSUPPORTED_COLOR_TEMPERATURE 3223725535

#define ERROR_GRAPHICS_MCA_UNSUPPORTED_MCCS_VERSION 3223725532

#define ERROR_GRAPHICS_MIRRORING_DEVICES_NOT_SUPPORTED 3223725539

#define ERROR_GRAPHICS_MODE_ALREADY_IN_MODESET 3223724820

#define ERROR_GRAPHICS_MODE_ID_MUST_BE_UNIQUE 3223724836

#define ERROR_GRAPHICS_MODE_NOT_IN_MODESET 3223724874

#define ERROR_GRAPHICS_MODE_NOT_PINNED 2499335

#define ERROR_GRAPHICS_MONITOR_COULD_NOT_BE_ASSOCIATED_WITH_ADAPTER 3223724852

#define ERROR_GRAPHICS_MONITOR_NO_LONGER_EXISTS 3223725453

#define ERROR_GRAPHICS_MONITOR_NOT_CONNECTED 3223724856

#define ERROR_GRAPHICS_MONITORDESCRIPTOR_ALREADY_IN_SET 3223724845

#define ERROR_GRAPHICS_MONITORDESCRIPTOR_ID_MUST_BE_UNIQUE 3223724846

#define ERROR_GRAPHICS_MONITORDESCRIPTOR_NOT_IN_SET 3223724844

#define ERROR_GRAPHICS_MULTISAMPLING_NOT_SUPPORTED 3223724873

#define ERROR_GRAPHICS_NO_ACTIVE_VIDPN 3223724854

#define ERROR_GRAPHICS_NO_AVAILABLE_IMPORTANCE_ORDINALS 3223724884

#define ERROR_GRAPHICS_NO_AVAILABLE_VIDPN_TARGET 3223724851

#define ERROR_GRAPHICS_NO_DISPLAY_DEVICE_CORRESPONDS_TO_NAME 3223725537

#define ERROR_GRAPHICS_NO_DISPLAY_MODE_MANAGEMENT_SUPPORT 3223724865

#define ERROR_GRAPHICS_NO_MONITORS_CORRESPOND_TO_DISPLAY_DEVICE 3223725541

#define ERROR_GRAPHICS_NO_MORE_ELEMENTS_IN_DATASET 2499404

#define ERROR_GRAPHICS_NO_PREFERRED_MODE 2499358

#define ERROR_GRAPHICS_NO_RECOMMENDED_FUNCTIONAL_VIDPN 3223724835

#define ERROR_GRAPHICS_NO_RECOMMENDED_VIDPN_TOPOLOGY 3223724826

#define ERROR_GRAPHICS_NO_VIDEO_MEMORY 3223724288

#define ERROR_GRAPHICS_NO_VIDPNMGR 3223724853

#define ERROR_GRAPHICS_NOT_A_LINKED_ADAPTER 3223725104

#define ERROR_GRAPHICS_NOT_EXCLUSIVE_MODE_OWNER 3223724032

#define ERROR_GRAPHICS_NOT_POST_DEVICE_DRIVER 3223725112

#define ERROR_GRAPHICS_ONLY_CONSOLE_SESSION_SUPPORTED 3223725536

#define ERROR_GRAPHICS_OPM_ALL_HDCP_HARDWARE_ALREADY_IN_USE 3223725336

#define ERROR_GRAPHICS_OPM_DRIVER_INTERNAL_ERROR 3223725342

#define ERROR_GRAPHICS_OPM_HDCP_SRM_NEVER_SET 3223725334

#define ERROR_GRAPHICS_OPM_INTERNAL_ERROR 3223725323

#define ERROR_GRAPHICS_OPM_INVALID_CONFIGURATION_REQUEST 3223725345

#define ERROR_GRAPHICS_OPM_INVALID_ENCRYPTED_PARAMETERS 3223725315

#define ERROR_GRAPHICS_OPM_INVALID_HANDLE 3223725324

#define ERROR_GRAPHICS_OPM_INVALID_INFORMATION_REQUEST 3223725341

#define ERROR_GRAPHICS_OPM_INVALID_SRM 3223725330

#define ERROR_GRAPHICS_OPM_NO_VIDEO_OUTPUTS_EXIST 3223725317

#define ERROR_GRAPHICS_OPM_NOT_SUPPORTED 3223725312

#define ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_ACP 3223725332

#define ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_CGMSA 3223725333

#define ERROR_GRAPHICS_OPM_OUTPUT_DOES_NOT_SUPPORT_HDCP 3223725331

#define ERROR_GRAPHICS_OPM_RESOLUTION_TOO_HIGH 3223725335

#define ERROR_GRAPHICS_OPM_SESSION_TYPE_CHANGE_IN_PROGRESS 3223725339

#define ERROR_GRAPHICS_OPM_SIGNALING_NOT_SUPPORTED 3223725344

#define ERROR_GRAPHICS_OPM_SPANNING_MODE_ENABLED 3223725327

#define ERROR_GRAPHICS_OPM_THEATER_MODE_ENABLED 3223725328

#define ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_COPP_SEMANTICS 3223725340

#define ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_DOES_NOT_HAVE_OPM_SEMANTICS 3223725343

#define ERROR_GRAPHICS_OPM_VIDEO_OUTPUT_NO_LONGER_EXISTS 3223725338

#define ERROR_GRAPHICS_PARAMETER_ARRAY_TOO_SMALL 3223725542

#define ERROR_GRAPHICS_PARTIAL_DATA_POPULATED 1076240394

#define ERROR_GRAPHICS_PATH_ALREADY_IN_TOPOLOGY 3223724819

#define ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_PINNED 2499409

#define ERROR_GRAPHICS_PATH_CONTENT_GEOMETRY_TRANSFORMATION_NOT_SUPPORTED 3223724870

#define ERROR_GRAPHICS_PATH_NOT_IN_TOPOLOGY 3223724839

#define ERROR_GRAPHICS_PINNED_MODE_MUST_REMAIN_IN_SET 3223724818

#define ERROR_GRAPHICS_POLLING_TOO_FREQUENTLY 1076241465

#define ERROR_GRAPHICS_PRESENT_DENIED 3223724039

#define ERROR_GRAPHICS_PRESENT_MODE_CHANGED 3223724037

#define ERROR_GRAPHICS_PRESENT_OCCLUDED 3223724038

#define ERROR_GRAPHICS_PRESENT_REDIRECTION_DISABLED 3223724043

#define ERROR_GRAPHICS_PRESENT_UNOCCLUDED 3223724044

#define ERROR_GRAPHICS_PVP_HFS_FAILED 3223725329

#define ERROR_GRAPHICS_PVP_INVALID_CERTIFICATE_LENGTH 3223725326

#define ERROR_GRAPHICS_RESOURCES_NOT_RELATED 3223724848

#define ERROR_GRAPHICS_SESSION_TYPE_CHANGE_IN_PROGRESS 3223717352

#define ERROR_GRAPHICS_SOURCE_ALREADY_IN_SET 3223724823

#define ERROR_GRAPHICS_SOURCE_ID_MUST_BE_UNIQUE 3223724849

#define ERROR_GRAPHICS_SOURCE_NOT_IN_TOPOLOGY 3223724857

#define ERROR_GRAPHICS_SPECIFIED_CHILD_ALREADY_CONNECTED 3223725056

#define ERROR_GRAPHICS_STALE_MODESET 3223724832

#define ERROR_GRAPHICS_STALE_VIDPN_TOPOLOGY 3223724855

#define ERROR_GRAPHICS_START_DEFERRED 1076241466

#define ERROR_GRAPHICS_TARGET_ALREADY_IN_SET 3223724824

#define ERROR_GRAPHICS_TARGET_ID_MUST_BE_UNIQUE 3223724850

#define ERROR_GRAPHICS_TARGET_NOT_IN_TOPOLOGY 3223724864

#define ERROR_GRAPHICS_TOO_MANY_REFERENCES 3223724291

#define ERROR_GRAPHICS_TOPOLOGY_CHANGES_NOT_ALLOWED 3223724883

#define ERROR_GRAPHICS_TRY_AGAIN_LATER 3223724292

#define ERROR_GRAPHICS_TRY_AGAIN_NOW 3223724293

#define ERROR_GRAPHICS_UAB_NOT_SUPPORTED 3223725314

#define ERROR_GRAPHICS_UNASSIGNED_MODESET_ALREADY_EXISTS 3223724880

#define ERROR_GRAPHICS_UNKNOWN_CHILD_STATUS 1076241455

#define ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNAVAILABLE 3223724295

#define ERROR_GRAPHICS_UNSWIZZLING_APERTURE_UNSUPPORTED 3223724296

#define ERROR_GRAPHICS_VIDEO_PRESENT_TARGETS_LESS_THAN_SOURCES 3223724838

#define ERROR_GRAPHICS_VIDPN_MODALITY_NOT_SUPPORTED 3223724806

#define ERROR_GRAPHICS_VIDPN_SOURCE_IN_USE 3223724866

#define ERROR_GRAPHICS_VIDPN_TOPOLOGY_CURRENTLY_NOT_SUPPORTED 3223724802

#define ERROR_GRAPHICS_VIDPN_TOPOLOGY_NOT_SUPPORTED 3223724801

#define ERROR_GRAPHICS_WRONG_ALLOCATION_DEVICE 3223724309

#define ERROR_GROUP_EXISTS 1318

#define ERROR_GROUP_NOT_AVAILABLE 5012

#define ERROR_GROUP_NOT_FOUND 5013

#define ERROR_GROUP_NOT_ONLINE 5014

#define ERROR_GUID_SUBSTITUTION_MADE 680

#define ERROR_HANDLE_DISK_FULL 39

#define ERROR_HANDLE_EOF 38

#define ERROR_HANDLE_NO_LONGER_VALID 6815

#define ERROR_HANDLES_CLOSED 676

#define ERROR_HASH_NOT_PRESENT 15301

#define ERROR_HASH_NOT_SUPPORTED 15300

#define ERROR_HEURISTIC_DAMAGE_POSSIBLE 6731

#define ERROR_HIBERNATED 726

#define ERROR_HIBERNATION_FAILURE 656

#define ERROR_HOOK_NEEDS_HMOD 1428

#define ERROR_HOOK_NOT_INSTALLED 1431

#define ERROR_HOOK_TYPE_NOT_ALLOWED 1458

#define ERROR_HOST_DOWN 1256

#define ERROR_HOST_NODE_NOT_AVAILABLE 5005

#define ERROR_HOST_NODE_NOT_GROUP_OWNER 5016

#define ERROR_HOST_NODE_NOT_RESOURCE_OWNER 5015

#define ERROR_HOST_UNREACHABLE 1232

#define ERROR_HOTKEY_ALREADY_REGISTERED 1409

#define ERROR_HOTKEY_NOT_REGISTERED 1419

#define ERROR_HUNG_DISPLAY_DRIVER_THREAD 2149974017

#define ERROR_HV_ACCESS_DENIED 3224698886

#define ERROR_HV_ACKNOWLEDGED 3224698902

#define ERROR_HV_FEATURE_UNAVAILABLE 3224698910

#define ERROR_HV_INACTIVE 3224698908

#define ERROR_HV_INSUFFICIENT_BUFFERS 3224698899

#define ERROR_HV_INSUFFICIENT_MEMORY 3224698891

#define ERROR_HV_INVALID_ALIGNMENT 3224698884

#define ERROR_HV_INVALID_CONNECTION_ID 3224698898

#define ERROR_HV_INVALID_HYPERCALL_CODE 3224698882

#define ERROR_HV_INVALID_HYPERCALL_INPUT 3224698883

#define ERROR_HV_INVALID_PARAMETER 3224698885

#define ERROR_HV_INVALID_PARTITION_ID 3224698893

#define ERROR_HV_INVALID_PARTITION_STATE 3224698887

#define ERROR_HV_INVALID_PORT_ID 3224698897

#define ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO 3224698906

#define ERROR_HV_INVALID_SAVE_RESTORE_STATE 3224698903

#define ERROR_HV_INVALID_SYNIC_STATE 3224698904

#define ERROR_HV_INVALID_VP_INDEX 3224698894

#define ERROR_HV_NO_DATA 3224698907

#define ERROR_HV_NO_RESOURCES 3224698909

#define ERROR_HV_NOT_ACKNOWLEDGED 3224698900

#define ERROR_HV_NOT_PRESENT 3224702976

#define ERROR_HV_OBJECT_IN_USE 3224698905

#define ERROR_HV_OPERATION_DENIED 3224698888

#define ERROR_HV_PARTITION_TOO_DEEP 3224698892

#define ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE 3224698890

#define ERROR_HV_UNKNOWN_PROPERTY 3224698889

#define ERROR_HWNDS_HAVE_DIFF_PARENT 1441

#define ERROR_ICM_NOT_ENABLED 2018

#define ERROR_IEPORT_FULL 4341

#define ERROR_ILL_FORMED_PASSWORD 1324

#define ERROR_ILLEGAL_CHARACTER 582

#define ERROR_ILLEGAL_DLL_RELOCATION 623

#define ERROR_ILLEGAL_ELEMENT_ADDRESS 1162

#define ERROR_ILLEGAL_FLOAT_CONTEXT 579

#define ERROR_IMAGE_MACHINE_TYPE_MISMATCH 706

#define ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE 720

#define ERROR_IMAGE_NOT_AT_BASE 700

#define ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT 308

#define ERROR_IMPLEMENTATION_LIMIT 1292

#define ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED 6725

#define ERROR_INC_BACKUP 4003

#define ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE 1297

#define ERROR_INCOMPATIBLE_SERVICE_SID_TYPE 1290

#define ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING 304

#define ERROR_INCORRECT_ADDRESS 1241

#define ERROR_INCORRECT_SIZE 1462

#define ERROR_INDEX_ABSENT 1611

#define ERROR_INDIGENOUS_TYPE 4338

#define ERROR_INDOUBT_TRANSACTIONS_EXIST 6827

#define ERROR_INFLOOP_IN_RELOC_CHAIN 202

#define ERROR_INSTALL_ALREADY_RUNNING 1618

#define ERROR_INSTALL_FAILURE 1603

#define ERROR_INSTALL_LANGUAGE_UNSUPPORTED 1623

#define ERROR_INSTALL_LOG_FAILURE 1622

#define ERROR_INSTALL_NOTUSED 1634

#define ERROR_INSTALL_PACKAGE_INVALID 1620

#define ERROR_INSTALL_PACKAGE_OPEN_FAILED 1619

#define ERROR_INSTALL_PACKAGE_REJECTED 1625

#define ERROR_INSTALL_PACKAGE_VERSION 1613

#define ERROR_INSTALL_PLATFORM_UNSUPPORTED 1633

#define ERROR_INSTALL_REMOTE_DISALLOWED 1640

#define ERROR_INSTALL_REMOTE_PROHIBITED 1645

#define ERROR_INSTALL_SERVICE_FAILURE 1601

#define ERROR_INSTALL_SERVICE_SAFEBOOT 1652

#define ERROR_INSTALL_SOURCE_ABSENT 1612

#define ERROR_INSTALL_SUSPEND 1604

#define ERROR_INSTALL_TEMP_UNWRITABLE 1632

#define ERROR_INSTALL_TRANSFORM_FAILURE 1624

#define ERROR_INSTALL_TRANSFORM_REJECTED 1644

#define ERROR_INSTALL_UI_FAILURE 1621

#define ERROR_INSTALL_USEREXIT 1602

#define ERROR_INSTRUCTION_MISALIGNMENT 549

#define ERROR_INSUFFICIENT_BUFFER 122

#define ERROR_INSUFFICIENT_LOGON_INFO 608

#define ERROR_INSUFFICIENT_POWER 639

#define ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE 781

#define ERROR_INTERNAL_DB_CORRUPTION 1358

#define ERROR_INTERNAL_DB_ERROR 1383

#define ERROR_INTERNAL_ERROR 1359

#define ERROR_INTERRUPT_STILL_CONNECTED 764

#define ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED 763

#define ERROR_INVALID_ACCEL_HANDLE 1403

#define ERROR_INVALID_ACCESS 12

#define ERROR_INVALID_ACCOUNT_NAME 1315

#define ERROR_INVALID_ACE_CONDITION 805

#define ERROR_INVALID_ACL 1336

#define ERROR_INVALID_ADDRESS 487

#define ERROR_INVALID_AT_INTERRUPT_TIME 104

#define ERROR_INVALID_BLOCK 9

#define ERROR_INVALID_BLOCK_LENGTH 1106

#define ERROR_INVALID_CATEGORY 117

#define ERROR_INVALID_CLEANER 4310

#define ERROR_INVALID_CLUSTER_IPV6_ADDRESS 5911

#define ERROR_INVALID_CMM 2010

#define ERROR_INVALID_COLORINDEX 2022

#define ERROR_INVALID_COLORSPACE 2017

#define ERROR_INVALID_COMBOBOX_MESSAGE 1422

#define ERROR_INVALID_COMMAND_LINE 1639

#define ERROR_INVALID_COMPUTERNAME 1210

#define ERROR_INVALID_CRUNTIME_PARAMETER 1288

#define ERROR_INVALID_CURSOR_HANDLE 1402

#define ERROR_INVALID_DATA 13

#define ERROR_INVALID_DATATYPE 1804

#define ERROR_INVALID_DEVICE_OBJECT_PARAMETER 650

#define ERROR_INVALID_DLL 1154

#define ERROR_INVALID_DOMAIN_ROLE 1354

#define ERROR_INVALID_DOMAIN_STATE 1353

#define ERROR_INVALID_DOMAINNAME 1212

#define ERROR_INVALID_DRIVE 15

#define ERROR_INVALID_DRIVE_OBJECT 4321

#define ERROR_INVALID_DWP_HANDLE 1405

#define ERROR_INVALID_EA_HANDLE 278

#define ERROR_INVALID_EA_NAME 254

#define ERROR_INVALID_EDIT_HEIGHT 1424

#define ERROR_INVALID_ENVIRONMENT 1805

#define ERROR_INVALID_EVENT_COUNT 151

#define ERROR_INVALID_EVENTNAME 1211

#define ERROR_INVALID_EXE_SIGNATURE 191

#define ERROR_INVALID_FIELD 1616

#define ERROR_INVALID_FILTER_PROC 1427

#define ERROR_INVALID_FLAG_NUMBER 186

#define ERROR_INVALID_FLAGS 1004

#define ERROR_INVALID_FORM_NAME 1902

#define ERROR_INVALID_FORM_SIZE 1903

#define ERROR_INVALID_FUNCTION 1

#define ERROR_INVALID_GROUP_ATTRIBUTES 1345

#define ERROR_INVALID_GROUPNAME 1209

#define ERROR_INVALID_GW_COMMAND 1443

#define ERROR_INVALID_HANDLE 6

#define ERROR_INVALID_HANDLE_STATE 1609

#define ERROR_INVALID_HOOK_FILTER 1426

#define ERROR_INVALID_HOOK_HANDLE 1404

#define ERROR_INVALID_HW_PROFILE 619

#define ERROR_INVALID_ICON_HANDLE 1414

#define ERROR_INVALID_ID_AUTHORITY 1343

#define ERROR_INVALID_IMAGE_HASH 577

#define ERROR_INVALID_IMPORT_OF_NON_DLL 1276

#define ERROR_INVALID_INDEX 1413

#define ERROR_INVALID_KEYBOARD_HANDLE 1457

#define ERROR_INVALID_LABEL 1299

#define ERROR_INVALID_LB_MESSAGE 1432

#define ERROR_INVALID_LDT_DESCRIPTOR 564

#define ERROR_INVALID_LDT_OFFSET 563

#define ERROR_INVALID_LDT_SIZE 561

#define ERROR_INVALID_LEVEL 124

#define ERROR_INVALID_LIBRARY 4301

#define ERROR_INVALID_LIST_FORMAT 153

#define ERROR_INVALID_LOCK_RANGE 307

#define ERROR_INVALID_LOGON_HOURS 1328

#define ERROR_INVALID_LOGON_TYPE 1367

#define ERROR_INVALID_MEDIA 4300

#define ERROR_INVALID_MEDIA_POOL 4302

#define ERROR_INVALID_MEMBER 1388

#define ERROR_INVALID_MENU_HANDLE 1401

#define ERROR_INVALID_MESSAGE 1002

#define ERROR_INVALID_MESSAGEDEST 1218

#define ERROR_INVALID_MESSAGENAME 1217

#define ERROR_INVALID_MINALLOCSIZE 195

#define ERROR_INVALID_MODULETYPE 190

#define ERROR_INVALID_MONITOR_HANDLE 1461

#define ERROR_INVALID_MSGBOX_STYLE 1438

#define ERROR_INVALID_NAME 123

#define ERROR_INVALID_NETNAME 1214

#define ERROR_INVALID_OPERATION 4317

#define ERROR_INVALID_OPERATION_ON_QUORUM 5068

#define ERROR_INVALID_OPLOCK_PROTOCOL 301

#define ERROR_INVALID_ORDINAL 182

#define ERROR_INVALID_OWNER 1307

#define ERROR_INVALID_PARAMETER 87

#define ERROR_INVALID_PASSWORD 86

#define ERROR_INVALID_PASSWORDNAME 1216

#define ERROR_INVALID_PATCH_XML 1650

#define ERROR_INVALID_PIXEL_FORMAT 2000

#define ERROR_INVALID_PLUGPLAY_DEVICE_PATH 620

#define ERROR_INVALID_PORT_ATTRIBUTES 545

#define ERROR_INVALID_PRIMARY_GROUP 1308

#define ERROR_INVALID_PRINT_MONITOR 3007

#define ERROR_INVALID_PRINTER_COMMAND 1803

#define ERROR_INVALID_PRINTER_NAME 1801

#define ERROR_INVALID_PRINTER_STATE 1906

#define ERROR_INVALID_PRIORITY 1800

#define ERROR_INVALID_PROFILE 2011

#define ERROR_INVALID_QUOTA_LOWER 547

#define ERROR_INVALID_REPARSE_DATA 4392

#define ERROR_INVALID_SCROLLBAR_RANGE 1448

#define ERROR_INVALID_SECURITY_DESCR 1338

#define ERROR_INVALID_SEGDPL 198

#define ERROR_INVALID_SEGMENT_NUMBER 180

#define ERROR_INVALID_SEPARATOR_FILE 1799

#define ERROR_INVALID_SERVER_STATE 1352

#define ERROR_INVALID_SERVICE_ACCOUNT 1057

#define ERROR_INVALID_SERVICE_CONTROL 1052

#define ERROR_INVALID_SERVICE_LOCK 1071

#define ERROR_INVALID_SERVICENAME 1213

#define ERROR_INVALID_SHARENAME 1215

#define ERROR_INVALID_SHOWWIN_COMMAND 1449

#define ERROR_INVALID_SID 1337

#define ERROR_INVALID_SIGNAL_NUMBER 209

#define ERROR_INVALID_SPI_VALUE 1439

#define ERROR_INVALID_STACKSEG 189

#define ERROR_INVALID_STARTING_CODESEG 188

#define ERROR_INVALID_STATE 5023

#define ERROR_INVALID_SUB_AUTHORITY 1335

#define ERROR_INVALID_TABLE 1628

#define ERROR_INVALID_TARGET_HANDLE 114

#define ERROR_INVALID_TASK_INDEX 1551

#define ERROR_INVALID_TASK_NAME 1550

#define ERROR_INVALID_THREAD_ID 1444

#define ERROR_INVALID_TIME 1901

#define ERROR_INVALID_TRANSACTION 6700

#define ERROR_INVALID_TRANSFORM 2020

#define ERROR_INVALID_UNWIND_TARGET 544

#define ERROR_INVALID_USER_BUFFER 1784

#define ERROR_INVALID_USER_PRINCIPAL_NAME 8636

#define ERROR_INVALID_VARIANT 604

#define ERROR_INVALID_VERIFY_SWITCH 118

#define ERROR_INVALID_WINDOW_HANDLE 1400

#define ERROR_INVALID_WINDOW_STYLE 2002

#define ERROR_INVALID_WORKSTATION 1329

#define ERROR_IO_DEVICE 1117

#define ERROR_IO_INCOMPLETE 996

#define ERROR_IO_PENDING 997

#define ERROR_IO_PRIVILEGE_FAILED 571

#define ERROR_IO_REISSUE_AS_CACHED 3950

#define ERROR_IOPL_NOT_ENABLED 197

#define ERROR_IP_ADDRESS_CONFLICT1 611

#define ERROR_IP_ADDRESS_CONFLICT2 612

#define ERROR_IPSEC_AUTH_FIREWALL_DROP 13917

#define ERROR_IPSEC_BAD_SPI 13910

#define ERROR_IPSEC_CLEAR_TEXT_DROP 13916

#define ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND 13014

#define ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND 13013

#define ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND 13015

#define ERROR_IPSEC_DOSP_BLOCK 13925

#define ERROR_IPSEC_DOSP_INVALID_PACKET 13927

#define ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED 13930

#define ERROR_IPSEC_DOSP_MAX_ENTRIES 13929

#define ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES 13932

#define ERROR_IPSEC_DOSP_NOT_INSTALLED 13931

#define ERROR_IPSEC_DOSP_RECEIVED_MULTICAST 13926

#define ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED 13928

#define ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED 13860

#define ERROR_IPSEC_IKE_ATTRIB_FAIL 13802

#define ERROR_IPSEC_IKE_AUTH_FAIL 13801

#define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE 13905

#define ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY 13907

#define ERROR_IPSEC_IKE_BENIGN_REINIT 13878

#define ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH 13887

#define ERROR_IPSEC_IKE_CGA_AUTH_FAILED 13892

#define ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS 13902

#define ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED 13823

#define ERROR_IPSEC_IKE_CRL_FAILED 13817

#define ERROR_IPSEC_IKE_DECRYPT 13867

#define ERROR_IPSEC_IKE_DH_FAIL 13822

#define ERROR_IPSEC_IKE_DH_FAILURE 13864

#define ERROR_IPSEC_IKE_DOS_COOKIE_SENT 13890

#define ERROR_IPSEC_IKE_DROP_NO_RESPONSE 13813

#define ERROR_IPSEC_IKE_ENCRYPT 13866

#define ERROR_IPSEC_IKE_ERROR 13816

#define ERROR_IPSEC_IKE_FAILQUERYSSP 13854

#define ERROR_IPSEC_IKE_FAILSSPINIT 13853

#define ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR 13804

#define ERROR_IPSEC_IKE_GETSPIFAIL 13857

#define ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE 13899

#define ERROR_IPSEC_IKE_INVALID_AUTH_ALG 13874

#define ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD 13889

#define ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN 13881

#define ERROR_IPSEC_IKE_INVALID_CERT_TYPE 13819

#define ERROR_IPSEC_IKE_INVALID_COOKIE 13846

#define ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG 13873

#define ERROR_IPSEC_IKE_INVALID_FILTER 13858

#define ERROR_IPSEC_IKE_INVALID_GROUP 13865

#define ERROR_IPSEC_IKE_INVALID_HASH 13870

#define ERROR_IPSEC_IKE_INVALID_HASH_ALG 13871

#define ERROR_IPSEC_IKE_INVALID_HASH_SIZE 13872

#define ERROR_IPSEC_IKE_INVALID_HEADER 13824

#define ERROR_IPSEC_IKE_INVALID_KEY_USAGE 13818

#define ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION 13880

#define ERROR_IPSEC_IKE_INVALID_MM_FOR_QM 13894

#define ERROR_IPSEC_IKE_INVALID_PAYLOAD 13843

#define ERROR_IPSEC_IKE_INVALID_POLICY 13861

#define ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY 13879

#define ERROR_IPSEC_IKE_INVALID_SIG 13875

#define ERROR_IPSEC_IKE_INVALID_SIGNATURE 13826

#define ERROR_IPSEC_IKE_INVALID_SITUATION 13863

#define ERROR_IPSEC_IKE_KERBEROS_ERROR 13827

#define ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL 13898

#define ERROR_IPSEC_IKE_LOAD_FAILED 13876

#define ERROR_IPSEC_IKE_LOAD_SOFT_SA 13844

#define ERROR_IPSEC_IKE_MM_ACQUIRE_DROP 13809

#define ERROR_IPSEC_IKE_MM_DELAY_DROP 13814

#define ERROR_IPSEC_IKE_MM_EXPIRED 13885

#define ERROR_IPSEC_IKE_MM_LIMIT 13882

#define ERROR_IPSEC_IKE_NEG_STATUS_BEGIN 13800

#define ERROR_IPSEC_IKE_NEG_STATUS_END 13897

#define ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END 13909

#define ERROR_IPSEC_IKE_NEGOTIATION_DISABLED 13883

#define ERROR_IPSEC_IKE_NEGOTIATION_PENDING 13803

#define ERROR_IPSEC_IKE_NO_CERT 13806

#define ERROR_IPSEC_IKE_NO_MM_POLICY 13850

#define ERROR_IPSEC_IKE_NO_PEER_CERT 13847

#define ERROR_IPSEC_IKE_NO_POLICY 13825

#define ERROR_IPSEC_IKE_NO_PRIVATE_KEY 13820

#define ERROR_IPSEC_IKE_NO_PUBLIC_KEY 13828

#define ERROR_IPSEC_IKE_NOTCBPRIV 13851

#define ERROR_IPSEC_IKE_OUT_OF_MEMORY 13859

#define ERROR_IPSEC_IKE_PEER_CRL_FAILED 13848

#define ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE 13904

#define ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID 13886

#define ERROR_IPSEC_IKE_POLICY_CHANGE 13849

#define ERROR_IPSEC_IKE_POLICY_MATCH 13868

#define ERROR_IPSEC_IKE_PROCESS_ERR 13829

#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT 13835

#define ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ 13836

#define ERROR_IPSEC_IKE_PROCESS_ERR_DELETE 13841

#define ERROR_IPSEC_IKE_PROCESS_ERR_HASH 13837

#define ERROR_IPSEC_IKE_PROCESS_ERR_ID 13834

#define ERROR_IPSEC_IKE_PROCESS_ERR_KE 13833

#define ERROR_IPSEC_IKE_PROCESS_ERR_NATOA 13893

#define ERROR_IPSEC_IKE_PROCESS_ERR_NONCE 13839

#define ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY 13840

#define ERROR_IPSEC_IKE_PROCESS_ERR_PROP 13831

#define ERROR_IPSEC_IKE_PROCESS_ERR_SA 13830

#define ERROR_IPSEC_IKE_PROCESS_ERR_SIG 13838

#define ERROR_IPSEC_IKE_PROCESS_ERR_TRANS 13832

#define ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR 13842

#define ERROR_IPSEC_IKE_QM_ACQUIRE_DROP 13810

#define ERROR_IPSEC_IKE_QM_DELAY_DROP 13815

#define ERROR_IPSEC_IKE_QM_EXPIRED 13895

#define ERROR_IPSEC_IKE_QM_LIMIT 13884

#define ERROR_IPSEC_IKE_QUEUE_DROP_MM 13811

#define ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM 13812

#define ERROR_IPSEC_IKE_RATELIMIT_DROP 13903

#define ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING 13900

#define ERROR_IPSEC_IKE_RPC_DELETE 13877

#define ERROR_IPSEC_IKE_SA_DELETED 13807

#define ERROR_IPSEC_IKE_SA_REAPED 13808

#define ERROR_IPSEC_IKE_SECLOADFAIL 13852

#define ERROR_IPSEC_IKE_SHUTTING_DOWN 13891

#define ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY 13821

#define ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN 13845

#define ERROR_IPSEC_IKE_SRVACQFAIL 13855

#define ERROR_IPSEC_IKE_SRVQUERYCRED 13856

#define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE 13908

#define ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE 13906

#define ERROR_IPSEC_IKE_TIMED_OUT 13805

#define ERROR_IPSEC_IKE_TOO_MANY_FILTERS 13896

#define ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID 13888

#define ERROR_IPSEC_IKE_UNKNOWN_DOI 13862

#define ERROR_IPSEC_IKE_UNSUPPORTED_ID 13869

#define ERROR_IPSEC_INTEGRITY_CHECK_FAILED 13915

#define ERROR_IPSEC_INVALID_PACKET 13914

#define ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING 13901

#define ERROR_IPSEC_MM_AUTH_EXISTS 13010

#define ERROR_IPSEC_MM_AUTH_IN_USE 13012

#define ERROR_IPSEC_MM_AUTH_NOT_FOUND 13011

#define ERROR_IPSEC_MM_AUTH_PENDING_DELETION 13022

#define ERROR_IPSEC_MM_FILTER_EXISTS 13006

#define ERROR_IPSEC_MM_FILTER_NOT_FOUND 13007

#define ERROR_IPSEC_MM_FILTER_PENDING_DELETION 13018

#define ERROR_IPSEC_MM_POLICY_EXISTS 13003

#define ERROR_IPSEC_MM_POLICY_IN_USE 13005

#define ERROR_IPSEC_MM_POLICY_NOT_FOUND 13004

#define ERROR_IPSEC_MM_POLICY_PENDING_DELETION 13021

#define ERROR_IPSEC_QM_POLICY_EXISTS 13000

#define ERROR_IPSEC_QM_POLICY_IN_USE 13002

#define ERROR_IPSEC_QM_POLICY_NOT_FOUND 13001

#define ERROR_IPSEC_QM_POLICY_PENDING_DELETION 13023

#define ERROR_IPSEC_REPLAY_CHECK_FAILED 13913

#define ERROR_IPSEC_SA_LIFETIME_EXPIRED 13911

#define ERROR_IPSEC_THROTTLE_DROP 13918

#define ERROR_IPSEC_TRANSPORT_FILTER_EXISTS 13008

#define ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND 13009

#define ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION 13019

#define ERROR_IPSEC_TUNNEL_FILTER_EXISTS 13016

#define ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND 13017

#define ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION 13020

#define ERROR_IPSEC_WRONG_SA 13912

#define ERROR_IRQ_BUSY 1119

#define ERROR_IS_JOIN_PATH 147

#define ERROR_IS_JOIN_TARGET 133

#define ERROR_IS_JOINED 134

#define ERROR_IS_SUBST_PATH 146

#define ERROR_IS_SUBST_TARGET 149

#define ERROR_IS_SUBSTED 135

#define ERROR_ITERATED_DATA_EXCEEDS_64k 194

#define ERROR_JOIN_TO_JOIN 138

#define ERROR_JOIN_TO_SUBST 140

#define ERROR_JOURNAL_DELETE_IN_PROGRESS 1178

#define ERROR_JOURNAL_ENTRY_DELETED 1181

#define ERROR_JOURNAL_HOOK_SET 1430

#define ERROR_JOURNAL_NOT_ACTIVE 1179

#define ERROR_KERNEL_APC 738

#define ERROR_KEY_DELETED 1018

#define ERROR_KEY_HAS_CHILDREN 1020

#define ERROR_KM_DRIVER_BLOCKED 1930

#define ERROR_LABEL_TOO_LONG 154

#define ERROR_LAST_ADMIN 1322

#define ERROR_LB_WITHOUT_TABSTOPS 1434

#define ERROR_LIBRARY_FULL 4322

#define ERROR_LIBRARY_OFFLINE 4305

#define ERROR_LICENSE_QUOTA_EXCEEDED 1395

#define ERROR_LISTBOX_ID_NOT_FOUND 1416

#define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390

#define ERROR_LOCAL_USER_SESSION_KEY 1303

#define ERROR_LOCK_FAILED 167

#define ERROR_LOCK_VIOLATION 33

#define ERROR_LOCKED 212

#define ERROR_LOG_APPENDED_FLUSH_FAILED 6647

#define ERROR_LOG_ARCHIVE_IN_PROGRESS 6633

#define ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS 6632

#define ERROR_LOG_BLOCK_INCOMPLETE 6603

#define ERROR_LOG_BLOCK_INVALID 6609

#define ERROR_LOG_BLOCK_VERSION 6608

#define ERROR_LOG_BLOCKS_EXHAUSTED 6605

#define ERROR_LOG_CANT_DELETE 6616

#define ERROR_LOG_CLIENT_ALREADY_REGISTERED 6636

#define ERROR_LOG_CLIENT_NOT_REGISTERED 6637

#define ERROR_LOG_CONTAINER_LIMIT_EXCEEDED 6617

#define ERROR_LOG_CONTAINER_OPEN_FAILED 6641

#define ERROR_LOG_CONTAINER_READ_FAILED 6639

#define ERROR_LOG_CONTAINER_STATE_INVALID 6642

#define ERROR_LOG_CONTAINER_WRITE_FAILED 6640

#define ERROR_LOG_CORRUPTION_DETECTED 6817

#define ERROR_LOG_DEDICATED 6631

#define ERROR_LOG_EPHEMERAL 6634

#define ERROR_LOG_FILE_FULL 1502

#define ERROR_LOG_FULL 6628

#define ERROR_LOG_FULL_HANDLER_IN_PROGRESS 6638

#define ERROR_LOG_GROWTH_FAILED 6833

#define ERROR_LOG_HARD_ERROR 718

#define ERROR_LOG_INCONSISTENT_SECURITY 6646

#define ERROR_LOG_INVALID_RANGE 6604

#define ERROR_LOG_METADATA_CORRUPT 6612

#define ERROR_LOG_METADATA_FLUSH_FAILED 6645

#define ERROR_LOG_METADATA_INCONSISTENT 6614

#define ERROR_LOG_METADATA_INVALID 6613

#define ERROR_LOG_MULTIPLEXED 6630

#define ERROR_LOG_NO_RESTART 6611

#define ERROR_LOG_NOT_ENOUGH_CONTAINERS 6635

#define ERROR_LOG_PINNED 6644

#define ERROR_LOG_PINNED_ARCHIVE_TAIL 6623

#define ERROR_LOG_PINNED_RESERVATION 6648

#define ERROR_LOG_POLICY_ALREADY_INSTALLED 6619

#define ERROR_LOG_POLICY_CONFLICT 6622

#define ERROR_LOG_POLICY_INVALID 6621

#define ERROR_LOG_POLICY_NOT_INSTALLED 6620

#define ERROR_LOG_READ_CONTEXT_INVALID 6606

#define ERROR_LOG_READ_MODE_INVALID 6610

#define ERROR_LOG_RECORD_NONEXISTENT 6624

#define ERROR_LOG_RECORDS_RESERVED_INVALID 6625

#define ERROR_LOG_RESERVATION_INVALID 6615

#define ERROR_LOG_RESIZE_INVALID_SIZE 6806

#define ERROR_LOG_RESTART_INVALID 6607

#define ERROR_LOG_SECTOR_INVALID 6600

#define ERROR_LOG_SECTOR_PARITY_INVALID 6601

#define ERROR_LOG_SECTOR_REMAPPED 6602

#define ERROR_LOG_SPACE_RESERVED_INVALID 6626

#define ERROR_LOG_START_OF_LOG 6618

#define ERROR_LOG_STATE_INVALID 6643

#define ERROR_LOG_TAIL_INVALID 6627

#define ERROR_LOGIN_TIME_RESTRICTION 1239

#define ERROR_LOGIN_WKSTA_RESTRICTION 1240

#define ERROR_LOGON_FAILURE 1326

#define ERROR_LOGON_NOT_GRANTED 1380

#define ERROR_LOGON_SERVER_CONFLICT 568

#define ERROR_LOGON_SESSION_COLLISION 1366

#define ERROR_LOGON_SESSION_EXISTS 1363

#define ERROR_LOGON_TYPE_NOT_GRANTED 1385

#define ERROR_LONGJUMP 682

#define ERROR_LOST_WRITEBEHIND_DATA 596

#define ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR 790

#define ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED 788

#define ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR 789

#define ERROR_LUIDS_EXHAUSTED 1334

#define ERROR_MACHINE_LOCKED 1271

#define ERROR_MAGAZINE_NOT_PRESENT 1163

#define ERROR_MALFORMED_SUBSTITUTION_STRING 14094

#define ERROR_MAPPED_ALIGNMENT 1132

#define ERROR_MARSHALL_OVERFLOW 603

#define ERROR_MAX_SESSIONS_REACHED 353

#define ERROR_MAX_THRDS_REACHED 164

#define ERROR_MCA_EXCEPTION 784

#define ERROR_MCA_INTERNAL_ERROR 15205

#define ERROR_MCA_INVALID_CAPABILITIES_STRING 15200

#define ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED 15206

#define ERROR_MCA_INVALID_VCP_VERSION 15201

#define ERROR_MCA_MCCS_VERSION_MISMATCH 15203

#define ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION 15202

#define ERROR_MCA_OCCURED 651

#define ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE 15207

#define ERROR_MCA_UNSUPPORTED_MCCS_VERSION 15204

#define ERROR_MEDIA_CHANGED 1110

#define ERROR_MEDIA_CHECK 679

#define ERROR_MEDIA_INCOMPATIBLE 4315

#define ERROR_MEDIA_NOT_AVAILABLE 4318

#define ERROR_MEDIA_OFFLINE 4304

#define ERROR_MEDIA_UNAVAILABLE 4308

#define ERROR_MEDIUM_NOT_ACCESSIBLE 4323

#define ERROR_MEMBER_IN_ALIAS 1378

#define ERROR_MEMBER_IN_GROUP 1320

#define ERROR_MEMBER_NOT_IN_ALIAS 1377

#define ERROR_MEMBER_NOT_IN_GROUP 1321

#define ERROR_MEMBERS_PRIMARY_GROUP 1374

#define ERROR_MEMORY_HARDWARE 779

#define ERROR_MENU_ITEM_NOT_FOUND 1456

#define ERROR_MESSAGE_EXCEEDS_MAX_SIZE 4336

#define ERROR_MESSAGE_SYNC_ONLY 1159

#define ERROR_META_EXPANSION_TOO_LONG 208

#define ERROR_METAFILE_NOT_SUPPORTED 2003

#define ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION 6810

#define ERROR_MISSING_SYSTEMFILE 573

#define ERROR_MOD_NOT_FOUND 126

#define ERROR_MONITOR_INVALID_DESCRIPTOR_CHECKSUM 3223719939

#define ERROR_MONITOR_INVALID_DETAILED_TIMING_BLOCK 3223719945

#define ERROR_MONITOR_INVALID_MANUFACTURE_DATE 3223719946

#define ERROR_MONITOR_INVALID_SERIAL_NUMBER_MONDSC_BLOCK 3223719942

#define ERROR_MONITOR_INVALID_STANDARD_TIMING_BLOCK 3223719940

#define ERROR_MONITOR_INVALID_USER_FRIENDLY_MONDSC_BLOCK 3223719943

#define ERROR_MONITOR_NO_DESCRIPTOR 2494465

#define ERROR_MONITOR_NO_MORE_DESCRIPTOR_DATA 3223719944

#define ERROR_MONITOR_UNKNOWN_DESCRIPTOR_FORMAT 2494466

#define ERROR_MONITOR_WMI_DATABLOCK_REGISTRATION_FAILED 3223719941

#define ERROR_MORE_DATA 234

#define ERROR_MORE_WRITES 1120

#define ERROR_MOUNT_POINT_NOT_RESOLVED 649

#define ERROR_MP_PROCESSOR_MISMATCH 725

#define ERROR_MR_MID_NOT_FOUND 317

#define ERROR_MUI_FILE_NOT_FOUND 15100

#define ERROR_MUI_FILE_NOT_LOADED 15105

#define ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME 15108

#define ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED 15107

#define ERROR_MUI_INVALID_FILE 15101

#define ERROR_MUI_INVALID_LOCALE_NAME 15103

#define ERROR_MUI_INVALID_RC_CONFIG 15102

#define ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME 15104

#define ERROR_MULTIPLE_FAULT_VIOLATION 640

#define ERROR_MUTANT_LIMIT_EXCEEDED 587

#define ERROR_MUTUAL_AUTH_FAILED 1397

#define ERROR_NDIS_ADAPTER_NOT_FOUND 2150891526

#define ERROR_NDIS_ADAPTER_NOT_READY 2150891537

#define ERROR_NDIS_ADAPTER_REMOVED 2150891544

#define ERROR_NDIS_ALREADY_MAPPED 2150891549

#define ERROR_NDIS_BAD_CHARACTERISTICS 2150891525

#define ERROR_NDIS_BAD_VERSION 2150891524

#define ERROR_NDIS_BUFFER_TOO_SHORT 2150891542

#define ERROR_NDIS_DEVICE_FAILED 2150891528

#define ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED 2150899712

#define ERROR_NDIS_DOT11_MEDIA_IN_USE 2150899713

#define ERROR_NDIS_DOT11_POWER_STATE_INVALID 2150899714

#define ERROR_NDIS_ERROR_READING_FILE 2150891548

#define ERROR_NDIS_FILE_NOT_FOUND 2150891547

#define ERROR_NDIS_GROUP_ADDRESS_IN_USE 2150891546

#define ERROR_NDIS_INDICATION_REQUIRED 3407873

#define ERROR_NDIS_INTERFACE_CLOSING 2150891522

#define ERROR_NDIS_INTERFACE_NOT_FOUND 2150891563

#define ERROR_NDIS_INVALID_ADDRESS 2150891554

#define ERROR_NDIS_INVALID_DATA 2150891541

#define ERROR_NDIS_INVALID_DEVICE_REQUEST 2150891536

#define ERROR_NDIS_INVALID_LENGTH 2150891540

#define ERROR_NDIS_INVALID_OID 2150891543

#define ERROR_NDIS_INVALID_PACKET 2150891535

#define ERROR_NDIS_INVALID_PORT 2150891565

#define ERROR_NDIS_INVALID_PORT_STATE 2150891566

#define ERROR_NDIS_LOW_POWER_STATE 2150891567

#define ERROR_NDIS_MEDIA_DISCONNECTED 2150891551

#define ERROR_NDIS_MULTICAST_EXISTS 2150891530

#define ERROR_NDIS_MULTICAST_FULL 2150891529

#define ERROR_NDIS_MULTICAST_NOT_FOUND 2150891531

#define ERROR_NDIS_NOT_SUPPORTED 2150891707

#define ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED 3224637458

#define ERROR_NDIS_OFFLOAD_PATH_REJECTED 3224637459

#define ERROR_NDIS_OFFLOAD_POLICY 3224637455

#define ERROR_NDIS_OPEN_FAILED 2150891527

#define ERROR_NDIS_PAUSED 2150891562

#define ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL 2150899716

#define ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL 2150899715

#define ERROR_NDIS_REQUEST_ABORTED 2150891532

#define ERROR_NDIS_RESET_IN_PROGRESS 2150891533

#define ERROR_NDIS_RESOURCE_CONFLICT 2150891550

#define ERROR_NDIS_UNSUPPORTED_MEDIA 2150891545

#define ERROR_NDIS_UNSUPPORTED_REVISION 2150891564

#define ERROR_NEGATIVE_SEEK 131

#define ERROR_NESTING_NOT_ALLOWED 215

#define ERROR_NET_OPEN_FAILED 570

#define ERROR_NET_WRITE_FAULT 88

#define ERROR_NETLOGON_NOT_STARTED 1792

#define ERROR_NETNAME_DELETED 64

#define ERROR_NETWORK_ACCESS_DENIED 65

#define ERROR_NETWORK_BUSY 54

#define ERROR_NETWORK_NOT_AVAILABLE 5035

#define ERROR_NETWORK_UNREACHABLE 1231

#define ERROR_NO_ACE_CONDITION 804

#define ERROR_NO_ASSOCIATION 1155

#define ERROR_NO_BROWSER_SERVERS_FOUND 6118

#define ERROR_NO_CALLBACK_ACTIVE 614

#define ERROR_NO_DATA 232

#define ERROR_NO_DATA_DETECTED 1104

#define ERROR_NO_EFS 6004

#define ERROR_NO_EVENT_PAIR 580

#define ERROR_NO_GUID_TRANSLATION 560

#define ERROR_NO_IMPERSONATION_TOKEN 1309

#define ERROR_NO_INHERITANCE 1391

#define ERROR_NO_LINK_TRACKING_IN_TRANSACTION 6852

#define ERROR_NO_LOG_SPACE 1019

#define ERROR_NO_LOGON_SERVERS 1311

#define ERROR_NO_MATCH 1169

#define ERROR_NO_MEDIA_IN_DRIVE 1112

#define ERROR_NO_MORE_DEVICES 1248

#define ERROR_NO_MORE_FILES 18

#define ERROR_NO_MORE_ITEMS 259

#define ERROR_NO_MORE_MATCHES 626

#define ERROR_NO_MORE_SEARCH_HANDLES 113

#define ERROR_NO_MORE_USER_HANDLES 1158

#define ERROR_NO_NET_OR_BAD_PATH 1203

#define ERROR_NO_NETWORK 1222

#define ERROR_NO_NVRAM_RESOURCES 1470

#define ERROR_NO_PAGEFILE 578

#define ERROR_NO_PROC_SLOTS 89

#define ERROR_NO_PROMOTION_ACTIVE 8222

#define ERROR_NO_QUOTAS_FOR_ACCOUNT 1302

#define ERROR_NO_RECOVERY_POLICY 6003

#define ERROR_NO_RECOVERY_PROGRAM 1082

#define ERROR_NO_SAVEPOINT_WITH_OPEN_FILES 6842

#define ERROR_NO_SCROLLBARS 1447

#define ERROR_NO_SECRETS 8620

#define ERROR_NO_SECURITY_ON_OBJECT 1350

#define ERROR_NO_SHUTDOWN_IN_PROGRESS 1116

#define ERROR_NO_SIGNAL_SENT 205

#define ERROR_NO_SITE_SETTINGS_OBJECT 8619

#define ERROR_NO_SITENAME 1919

#define ERROR_NO_SPOOL_SPACE 62

#define ERROR_NO_SUCH_ALIAS 1376

#define ERROR_NO_SUCH_DOMAIN 1355

#define ERROR_NO_SUCH_GROUP 1319

#define ERROR_NO_SUCH_LOGON_SESSION 1312

#define ERROR_NO_SUCH_MEMBER 1387

#define ERROR_NO_SUCH_PACKAGE 1364

#define ERROR_NO_SUCH_PRIVILEGE 1313

#define ERROR_NO_SUCH_SITE 1249

#define ERROR_NO_SUCH_USER 1317

#define ERROR_NO_SUPPORTING_DRIVES 4339

#define ERROR_NO_SYSTEM_MENU 1437

#define ERROR_NO_SYSTEM_RESOURCES 1450

#define ERROR_NO_TOKEN 1008

#define ERROR_NO_TRACKING_SERVICE 1172

#define ERROR_NO_TRUST_LSA_SECRET 1786

#define ERROR_NO_TRUST_SAM_ACCOUNT 1787

#define ERROR_NO_TXF_METADATA 6816

#define ERROR_NO_UNICODE_TRANSLATION 1113

#define ERROR_NO_USER_KEYS 6006

#define ERROR_NO_USER_SESSION_KEY 1394

#define ERROR_NO_VOLUME_ID 1173

#define ERROR_NO_VOLUME_LABEL 125

#define ERROR_NO_WILDCARD_CHARACTERS 1417

#define ERROR_NO_WRITABLE_DC_FOUND 8621

#define ERROR_NO_YIELD_PERFORMED 721

#define ERROR_NOACCESS 998

#define ERROR_NODE_CANNOT_BE_CLUSTERED 5898

#define ERROR_NODE_CANT_HOST_RESOURCE 5071

#define ERROR_NODE_NOT_AVAILABLE 5036

#define ERROR_NOINTERFACE 632

#define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807

#define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809

#define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808

#define ERROR_NON_ACCOUNT_SID 1257

#define ERROR_NON_CSV_PATH 5950

#define ERROR_NON_DOMAIN_SID 1258

#define ERROR_NON_MDICHILD_WINDOW 1445

#define ERROR_NONCORE_GROUPS_FOUND 5937

#define ERROR_NONE_MAPPED 1332

#define ERROR_NONPAGED_SYSTEM_RESOURCES 1451

#define ERROR_NOT_A_REPARSE_POINT 4390

#define ERROR_NOT_ALL_ASSIGNED 1300

#define ERROR_NOT_AUTHENTICATED 1244

#define ERROR_NOT_CAPABLE 775

#define ERROR_NOT_CHILD_WINDOW 1442

#define ERROR_NOT_CONNECTED 2250

#define ERROR_NOT_CONTAINER 1207

#define ERROR_NOT_DOS_DISK 26

#define ERROR_NOT_EMPTY 4307

#define ERROR_NOT_ENOUGH_MEMORY 8

#define ERROR_NOT_ENOUGH_QUOTA 1816

#define ERROR_NOT_ENOUGH_SERVER_MEMORY 1130

#define ERROR_NOT_EXPORT_FORMAT 6008

#define ERROR_NOT_FOUND 1168

#define ERROR_NOT_JOINED 136

#define ERROR_NOT_LOCKED 158

#define ERROR_NOT_LOGGED_ON 1245

#define ERROR_NOT_LOGON_PROCESS 1362

#define ERROR_NOT_OWNER 288

#define ERROR_NOT_QUORUM_CAPABLE 5021

#define ERROR_NOT_QUORUM_CLASS 5025

#define ERROR_NOT_READY 21

#define ERROR_NOT_REGISTRY_FILE 1017

#define ERROR_NOT_SAFE_MODE_DRIVER 646

#define ERROR_NOT_SAFEBOOT_SERVICE 1084

#define ERROR_NOT_SAME_DEVICE 17

#define ERROR_NOT_SNAPSHOT_VOLUME 6841

#define ERROR_NOT_SUBSTED 137

#define ERROR_NOT_SUPPORTED 50

#define ERROR_NOT_SUPPORTED_ON_SBS 1254

#define ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER 8584

#define ERROR_NOT_TINY_STREAM 598

#define ERROR_NOTHING_TO_TERMINATE 758

#define ERROR_NOTIFICATION_GUID_ALREADY_DEFINED 309

#define ERROR_NOTIFY_CLEANUP 745

#define ERROR_NOTIFY_ENUM_DIR 1022

#define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386

#define ERROR_NTLM_BLOCKED 1937

#define ERROR_NULL_LM_PASSWORD 1304

#define ERROR_OBJECT_ALREADY_EXISTS 5010

#define ERROR_OBJECT_IN_LIST 5011

#define ERROR_OBJECT_NAME_EXISTS 698

#define ERROR_OBJECT_NO_LONGER_EXISTS 6807

#define ERROR_OBJECT_NOT_FOUND 4312

#define ERROR_OLD_WIN_VERSION 1150

#define ERROR_ONLY_IF_CONNECTED 1251

#define ERROR_OPEN_FAILED 110

#define ERROR_OPEN_FILES 2401

#define ERROR_OPERATION_ABORTED 995

#define ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION 6853

#define ERROR_OPLOCK_BREAK_IN_PROGRESS 742

#define ERROR_OPLOCK_HANDLE_CLOSED 803

#define ERROR_OPLOCK_NOT_GRANTED 300

#define ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE 800

#define ERROR_OUT_OF_PAPER 28

#define ERROR_OUT_OF_STRUCTURES 84

#define ERROR_OUTOFMEMORY 14

#define ERROR_OVERRIDE_NOCHANGES 1252

#define ERROR_PAGE_FAULT_COPY_ON_WRITE 749

#define ERROR_PAGE_FAULT_DEMAND_ZERO 748

#define ERROR_PAGE_FAULT_GUARD_PAGE 750

#define ERROR_PAGE_FAULT_PAGING_FILE 751

#define ERROR_PAGE_FAULT_TRANSITION 747

#define ERROR_PAGED_SYSTEM_RESOURCES 1452

#define ERROR_PAGEFILE_CREATE_FAILED 576

#define ERROR_PAGEFILE_QUOTA 1454

#define ERROR_PAGEFILE_QUOTA_EXCEEDED 567

#define ERROR_PARAMETER_QUOTA_EXCEEDED 1283

#define ERROR_PARTIAL_COPY 299

#define ERROR_PARTITION_FAILURE 1105

#define ERROR_PASSWORD_EXPIRED 1330

#define ERROR_PASSWORD_MUST_CHANGE 1907

#define ERROR_PASSWORD_RESTRICTION 1325

#define ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT 1651

#define ERROR_PATCH_NO_SEQUENCE 1648

#define ERROR_PATCH_PACKAGE_INVALID 1636

#define ERROR_PATCH_PACKAGE_OPEN_FAILED 1635

#define ERROR_PATCH_PACKAGE_REJECTED 1643

#define ERROR_PATCH_PACKAGE_UNSUPPORTED 1637

#define ERROR_PATCH_REMOVAL_DISALLOWED 1649

#define ERROR_PATCH_REMOVAL_UNSUPPORTED 1646

#define ERROR_PATCH_TARGET_NOT_FOUND 1642

#define ERROR_PATH_BUSY 148

#define ERROR_PATH_NOT_FOUND 3

#define ERROR_PER_USER_TRUST_QUOTA_EXCEEDED 1932

#define ERROR_PIPE_BUSY 231

#define ERROR_PIPE_CONNECTED 535

#define ERROR_PIPE_LISTENING 536

#define ERROR_PIPE_LOCAL 229

#define ERROR_PIPE_NOT_CONNECTED 233

#define ERROR_PKINIT_FAILURE 1263

#define ERROR_PLUGPLAY_QUERY_VETOED 683

#define ERROR_PNP_BAD_MPS_TABLE 671

#define ERROR_PNP_INVALID_ID 674

#define ERROR_PNP_IRQ_TRANSLATION_FAILED 673

#define ERROR_PNP_REBOOT_REQUIRED 638

#define ERROR_PNP_RESTART_ENUMERATION 636

#define ERROR_PNP_TRANSLATION_FAILED 672

#define ERROR_POINT_NOT_FOUND 1171

#define ERROR_POLICY_OBJECT_NOT_FOUND 8219

#define ERROR_POLICY_ONLY_IN_DS 8220

#define ERROR_POPUP_ALREADY_ACTIVE 1446

#define ERROR_PORT_MESSAGE_TOO_LONG 546

#define ERROR_PORT_NOT_SET 642

#define ERROR_PORT_UNREACHABLE 1234

#define ERROR_POSSIBLE_DEADLOCK 1131

#define ERROR_POTENTIAL_FILE_FOUND 1180

#define ERROR_PREDEFINED_HANDLE 714

#define ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED 746

#define ERROR_PRINT_CANCELLED 63

#define ERROR_PRINT_JOB_RESTART_REQUIRED 3020

#define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006

#define ERROR_PRINT_MONITOR_IN_USE 3008

#define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005

#define ERROR_PRINTER_ALREADY_EXISTS 1802

#define ERROR_PRINTER_DELETED 1905

#define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795

#define ERROR_PRINTER_DRIVER_BLOCKED 3014

#define ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED 3019

#define ERROR_PRINTER_DRIVER_IN_USE 3001

#define ERROR_PRINTER_DRIVER_PACKAGE_IN_USE 3015

#define ERROR_PRINTER_DRIVER_WARNED 3013

#define ERROR_PRINTER_HAS_JOBS_QUEUED 3009

#define ERROR_PRINTER_NOT_FOUND 3012

#define ERROR_PRINTQ_FULL 61

#define ERROR_PRIVATE_DIALOG_INDEX 1415

#define ERROR_PRIVILEGE_NOT_HELD 1314

#define ERROR_PROC_NOT_FOUND 127

#define ERROR_PROCESS_ABORTED 1067

#define ERROR_PROCESS_IN_JOB 760

#define ERROR_PROCESS_IS_PROTECTED 1293

#define ERROR_PROCESS_MODE_ALREADY_BACKGROUND 402

#define ERROR_PROCESS_MODE_NOT_BACKGROUND 403

#define ERROR_PROCESS_NOT_IN_JOB 759

#define ERROR_PRODUCT_UNINSTALLED 1614

#define ERROR_PRODUCT_VERSION 1638

#define ERROR_PROFILE_DOES_NOT_MATCH_DEVICE 2023

#define ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE 2015

#define ERROR_PROFILE_NOT_FOUND 2016

#define ERROR_PROFILING_AT_LIMIT 553

#define ERROR_PROFILING_NOT_STARTED 550

#define ERROR_PROFILING_NOT_STOPPED 551

#define ERROR_PROMOTION_ACTIVE 8221

#define ERROR_PROTOCOL_UNREACHABLE 1233

#define ERROR_PWD_HISTORY_CONFLICT 617

#define ERROR_PWD_TOO_RECENT 616

#define ERROR_PWD_TOO_SHORT 615

#define ERROR_QUERY_STORAGE_ERROR 2151284737

#define ERROR_QUORUM_DISK_NOT_FOUND 5086

#define ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP 5928

#define ERROR_QUORUM_OWNER_ALIVE 5034

#define ERROR_QUORUM_RESOURCE 5020

#define ERROR_QUORUM_RESOURCE_ONLINE_FAILED 5027

#define ERROR_QUORUMLOG_OPEN_FAILED 5028

#define ERROR_QUOTA_LIST_INCONSISTENT 621

#define ERROR_RANGE_LIST_CONFLICT 627

#define ERROR_RANGE_NOT_FOUND 644

#define ERROR_RDP_PROTOCOL_ERROR 7065

#define ERROR_READ_FAULT 30

#define ERROR_REC_NON_EXISTENT 4005

#define ERROR_RECEIVE_EXPEDITED 708

#define ERROR_RECEIVE_PARTIAL 707

#define ERROR_RECEIVE_PARTIAL_EXPEDITED 709

#define ERROR_RECOVERY_FAILURE 1279

#define ERROR_RECOVERY_NOT_NEEDED 6821

#define ERROR_REDIR_PAUSED 72

#define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794

#define ERROR_REG_NAT_CONSUMPTION 1261

#define ERROR_REGISTRY_CORRUPT 1015

#define ERROR_REGISTRY_HIVE_RECOVERED 685

#define ERROR_REGISTRY_IO_FAILED 1016

#define ERROR_REGISTRY_QUOTA_LIMIT 613

#define ERROR_REGISTRY_RECOVERED 1014

#define ERROR_RELOC_CHAIN_XEEDS_SEGLIM 201

#define ERROR_REM_NOT_LIST 51

#define ERROR_REMOTE_FILE_VERSION_MISMATCH 6814

#define ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED 1936

#define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220

#define ERROR_REMOTE_STORAGE_MEDIA_ERROR 4352

#define ERROR_REMOTE_STORAGE_NOT_ACTIVE 4351

#define ERROR_REPARSE 741

#define ERROR_REPARSE_ATTRIBUTE_CONFLICT 4391

#define ERROR_REPARSE_OBJECT 755

#define ERROR_REPARSE_TAG_INVALID 4393

#define ERROR_REPARSE_TAG_MISMATCH 4394

#define ERROR_REPLY_MESSAGE_MISMATCH 595

#define ERROR_REQ_NOT_ACCEP 71

#define ERROR_REQUEST_ABORTED 1235

#define ERROR_REQUEST_OUT_OF_SEQUENCE 776

#define ERROR_REQUEST_REFUSED 4320

#define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459

#define ERROR_RESMON_CREATE_FAILED 5017

#define ERROR_RESMON_INVALID_STATE 5084

#define ERROR_RESMON_ONLINE_FAILED 5018

#define ERROR_RESOURCE_CALL_TIMED_OUT 5910

#define ERROR_RESOURCE_DATA_NOT_FOUND 1812

#define ERROR_RESOURCE_DISABLED 4309

#define ERROR_RESOURCE_ENUM_USER_STOP 15106

#define ERROR_RESOURCE_FAILED 5038

#define ERROR_RESOURCE_LANG_NOT_FOUND 1815

#define ERROR_RESOURCE_NAME_NOT_FOUND 1814

#define ERROR_RESOURCE_NOT_AVAILABLE 5006

#define ERROR_RESOURCE_NOT_FOUND 5007

#define ERROR_RESOURCE_NOT_ONLINE 5004

#define ERROR_RESOURCE_NOT_PRESENT 4316

#define ERROR_RESOURCE_ONLINE 5019

#define ERROR_RESOURCE_PROPERTIES_STORED 5024

#define ERROR_RESOURCE_PROPERTY_UNCHANGEABLE 5089

#define ERROR_RESOURCE_REQUIREMENTS_CHANGED 756

#define ERROR_RESOURCE_TYPE_NOT_FOUND 1813

#define ERROR_RESOURCEMANAGER_NOT_FOUND 6716

#define ERROR_RESOURCEMANAGER_READ_ONLY 6707

#define ERROR_RESTART_APPLICATION 1467

#define ERROR_RESUME_HIBERNATION 727

#define ERROR_RETRY 1237

#define ERROR_REVISION_MISMATCH 1306

#define ERROR_RING2_STACK_IN_USE 207

#define ERROR_RING2SEG_MUST_BE_MOVABLE 200

#define ERROR_RM_ALREADY_STARTED 6822

#define ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT 6728

#define ERROR_RM_DISCONNECTED 6819

#define ERROR_RM_METADATA_CORRUPT 6802

#define ERROR_RM_NOT_ACTIVE 6801

#define ERROR_RMODE_APP 1153

#define ERROR_ROLLBACK_TIMER_EXPIRED 6829

#define ERROR_ROWSNOTRELEASED 772

#define ERROR_RPL_NOT_ALLOWED 4006

#define ERROR_RXACT_COMMIT_FAILURE 1370

#define ERROR_RXACT_COMMIT_NECESSARY 678

#define ERROR_RXACT_COMMITTED 744

#define ERROR_RXACT_INVALID_STATE 1369

#define ERROR_RXACT_STATE_CREATED 701

#define ERROR_SAM_INIT_FAILURE 8541

#define ERROR_SAME_DRIVE 143

#define ERROR_SCOPE_NOT_FOUND 318

#define ERROR_SCREEN_ALREADY_LOCKED 1440

#define ERROR_SECRET_TOO_LONG 1382

#define ERROR_SECTOR_NOT_FOUND 27

#define ERROR_SECURITY_STREAM_IS_INCONSISTENT 306

#define ERROR_SEEK 25

#define ERROR_SEEK_ON_DEVICE 132

#define ERROR_SEGMENT_NOTIFICATION 702

#define ERROR_SEM_IS_SET 102

#define ERROR_SEM_NOT_FOUND 187

#define ERROR_SEM_OWNER_DIED 105

#define ERROR_SEM_TIMEOUT 121

#define ERROR_SEM_USER_LIMIT 106

#define ERROR_SERIAL_NO_DEVICE 1118

#define ERROR_SERVER_DISABLED 1341

#define ERROR_SERVER_HAS_OPEN_HANDLES 1811

#define ERROR_SERVER_NOT_DISABLED 1342

#define ERROR_SERVER_SHUTDOWN_IN_PROGRESS 1255

#define ERROR_SERVER_SID_MISMATCH 628

#define ERROR_SERVICE_ALREADY_RUNNING 1056

#define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061

#define ERROR_SERVICE_DATABASE_LOCKED 1055

#define ERROR_SERVICE_DEPENDENCY_DELETED 1075

#define ERROR_SERVICE_DEPENDENCY_FAIL 1068

#define ERROR_SERVICE_DISABLED 1058

#define ERROR_SERVICE_DOES_NOT_EXIST 1060

#define ERROR_SERVICE_EXISTS 1073

#define ERROR_SERVICE_LOGON_FAILED 1069

#define ERROR_SERVICE_MARKED_FOR_DELETE 1072

#define ERROR_SERVICE_NEVER_STARTED 1077

#define ERROR_SERVICE_NO_THREAD 1054

#define ERROR_SERVICE_NOT_ACTIVE 1062

#define ERROR_SERVICE_NOT_FOUND 1243

#define ERROR_SERVICE_NOT_IN_EXE 1083

#define ERROR_SERVICE_NOTIFICATION 716

#define ERROR_SERVICE_NOTIFY_CLIENT_LAGGING 1294

#define ERROR_SERVICE_REQUEST_TIMEOUT 1053

#define ERROR_SERVICE_SPECIFIC_ERROR 1066

#define ERROR_SERVICE_START_HANG 1070

#define ERROR_SESSION_CREDENTIAL_CONFLICT 1219

#define ERROR_SET_NOT_FOUND 1170

#define ERROR_SET_POWER_STATE_FAILED 1141

#define ERROR_SET_POWER_STATE_VETOED 1140

#define ERROR_SETCOUNT_ON_BAD_LB 1433

#define ERROR_SETMARK_DETECTED 1103

#define ERROR_SHARED_POLICY 8218

#define ERROR_SHARING_BUFFER_EXCEEDED 36

#define ERROR_SHARING_PAUSED 70

#define ERROR_SHARING_VIOLATION 32

#define ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME 305

#define ERROR_SHUTDOWN_CLUSTER 5008

#define ERROR_SHUTDOWN_IN_PROGRESS 1115

#define ERROR_SHUTDOWN_IS_SCHEDULED 1190

#define ERROR_SHUTDOWN_USERS_LOGGED_ON 1191

#define ERROR_SIGNAL_PENDING 162

#define ERROR_SIGNAL_REFUSED 156

#define ERROR_SINGLE_INSTANCE_APP 1152

#define ERROR_SMARTCARD_SUBSYSTEM_FAILURE 1264

#define ERROR_SMI_PRIMITIVE_INSTALLER_FAILED 14108

#define ERROR_SOME_NOT_MAPPED 1301

#define ERROR_SOURCE_ELEMENT_EMPTY 1160

#define ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION 6844

#define ERROR_SPECIAL_ACCOUNT 1371

#define ERROR_SPECIAL_GROUP 1372

#define ERROR_SPECIAL_USER 1373

#define ERROR_SPL_NO_ADDJOB 3004

#define ERROR_SPL_NO_STARTDOC 3003

#define ERROR_SPOOL_FILE_NOT_FOUND 3002

#define ERROR_STACK_BUFFER_OVERRUN 1282

#define ERROR_STACK_OVERFLOW 1001

#define ERROR_STACK_OVERFLOW_READ 599

#define ERROR_STATIC_INIT 4002

#define ERROR_STOPPED_ON_SYMLINK 681

#define ERROR_STREAM_MINIVERSION_NOT_FOUND 6808

#define ERROR_STREAM_MINIVERSION_NOT_VALID 6809

#define ERROR_SUBST_TO_JOIN 141

#define ERROR_SUBST_TO_SUBST 139

#define ERROR_SUCCESS 0

#define ERROR_SUCCESS_REBOOT_INITIATED 1641

#define ERROR_SUCCESS_REBOOT_REQUIRED 3010

#define ERROR_SUCCESS_RESTART_REQUIRED 3011

#define ERROR_SWAPERROR 999

#define ERROR_SXS_ACTIVATION_CONTEXT_DISABLED 14006

#define ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT 14103

#define ERROR_SXS_ASSEMBLY_MISSING 14081

#define ERROR_SXS_ASSEMBLY_NOT_FOUND 14003

#define ERROR_SXS_ASSEMBLY_NOT_LOCKED 14097

#define ERROR_SXS_CANT_GEN_ACTCTX 14001

#define ERROR_SXS_COMPONENT_STORE_CORRUPT 14098

#define ERROR_SXS_CORRUPT_ACTIVATION_STACK 14082

#define ERROR_SXS_CORRUPTION 14083

#define ERROR_SXS_DUPLICATE_ASSEMBLY_NAME 14027

#define ERROR_SXS_DUPLICATE_CLSID 14023

#define ERROR_SXS_DUPLICATE_DLL_NAME 14021

#define ERROR_SXS_DUPLICATE_IID 14024

#define ERROR_SXS_DUPLICATE_PROGID 14026

#define ERROR_SXS_DUPLICATE_TLBID 14025

#define ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME 14022

#define ERROR_SXS_EARLY_DEACTIVATION 14084

#define ERROR_SXS_FILE_HASH_MISMATCH 14028

#define ERROR_SXS_FILE_HASH_MISSING 14110

#define ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY 14104

#define ERROR_SXS_IDENTITIES_DIFFERENT 14102

#define ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE 14092

#define ERROR_SXS_IDENTITY_PARSE_ERROR 14093

#define ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN 14095

#define ERROR_SXS_INVALID_ACTCTXDATA_FORMAT 14002

#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE 14017

#define ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME 14080

#define ERROR_SXS_INVALID_DEACTIVATION 14085

#define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME 14091

#define ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE 14090

#define ERROR_SXS_INVALID_XML_NAMESPACE_URI 14014

#define ERROR_SXS_KEY_NOT_FOUND 14007

#define ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED 14016

#define ERROR_SXS_MANIFEST_FORMAT_ERROR 14004

#define ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT 14101

#define ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE 14019

#define ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE 14018

#define ERROR_SXS_MANIFEST_PARSE_ERROR 14005

#define ERROR_SXS_MANIFEST_TOO_BIG 14105

#define ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE 14079

#define ERROR_SXS_MULTIPLE_DEACTIVATION 14086

#define ERROR_SXS_POLICY_PARSE_ERROR 14029

#define ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT 14020

#define ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET 14011

#define ERROR_SXS_PROCESS_TERMINATION_REQUESTED 14087

#define ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING 14078

#define ERROR_SXS_PROTECTION_CATALOG_NOT_VALID 14076

#define ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT 14075

#define ERROR_SXS_PROTECTION_RECOVERY_FAILED 14074

#define ERROR_SXS_RELEASE_ACTIVATION_CONTEXT 14088

#define ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED 14015

#define ERROR_SXS_SECTION_NOT_FOUND 14000

#define ERROR_SXS_SETTING_NOT_REGISTERED 14106

#define ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY 14089

#define ERROR_SXS_THREAD_QUERIES_DISABLED 14010

#define ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE 14107

#define ERROR_SXS_UNKNOWN_ENCODING 14013

#define ERROR_SXS_UNKNOWN_ENCODING_GROUP 14012

#define ERROR_SXS_UNTRANSLATABLE_HRESULT 14077

#define ERROR_SXS_VERSION_CONFLICT 14008

#define ERROR_SXS_WRONG_SECTION_TYPE 14009

#define ERROR_SXS_XML_E_BADCHARDATA 14036

#define ERROR_SXS_XML_E_BADCHARINSTRING 14034

#define ERROR_SXS_XML_E_BADNAMECHAR 14033

#define ERROR_SXS_XML_E_BADPEREFINSUBSET 14059

#define ERROR_SXS_XML_E_BADSTARTNAMECHAR 14032

#define ERROR_SXS_XML_E_BADXMLCASE 14069

#define ERROR_SXS_XML_E_BADXMLDECL 14056

#define ERROR_SXS_XML_E_COMMENTSYNTAX 14031

#define ERROR_SXS_XML_E_DUPLICATEATTRIBUTE 14053

#define ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE 14045

#define ERROR_SXS_XML_E_EXPECTINGTAGEND 14038

#define ERROR_SXS_XML_E_INCOMPLETE_ENCODING 14043

#define ERROR_SXS_XML_E_INTERNALERROR 14041

#define ERROR_SXS_XML_E_INVALID_DECIMAL 14047

#define ERROR_SXS_XML_E_INVALID_HEXIDECIMAL 14048

#define ERROR_SXS_XML_E_INVALID_STANDALONE 14070

#define ERROR_SXS_XML_E_INVALID_UNICODE 14049

#define ERROR_SXS_XML_E_INVALID_VERSION 14072

#define ERROR_SXS_XML_E_INVALIDATROOTLEVEL 14055

#define ERROR_SXS_XML_E_INVALIDENCODING 14067

#define ERROR_SXS_XML_E_INVALIDSWITCH 14068

#define ERROR_SXS_XML_E_MISSING_PAREN 14044

#define ERROR_SXS_XML_E_MISSINGEQUALS 14073

#define ERROR_SXS_XML_E_MISSINGQUOTE 14030

#define ERROR_SXS_XML_E_MISSINGROOT 14057

#define ERROR_SXS_XML_E_MISSINGSEMICOLON 14039

#define ERROR_SXS_XML_E_MISSINGWHITESPACE 14037

#define ERROR_SXS_XML_E_MULTIPLE_COLONS 14046

#define ERROR_SXS_XML_E_MULTIPLEROOTS 14054

#define ERROR_SXS_XML_E_RESERVEDNAMESPACE 14066

#define ERROR_SXS_XML_E_UNBALANCEDPAREN 14040

#define ERROR_SXS_XML_E_UNCLOSEDCDATA 14065

#define ERROR_SXS_XML_E_UNCLOSEDCOMMENT 14063

#define ERROR_SXS_XML_E_UNCLOSEDDECL 14064

#define ERROR_SXS_XML_E_UNCLOSEDENDTAG 14061

#define ERROR_SXS_XML_E_UNCLOSEDSTARTTAG 14060

#define ERROR_SXS_XML_E_UNCLOSEDSTRING 14062

#define ERROR_SXS_XML_E_UNCLOSEDTAG 14052

#define ERROR_SXS_XML_E_UNEXPECTED_STANDALONE 14071

#define ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE 14042

#define ERROR_SXS_XML_E_UNEXPECTEDENDTAG 14051

#define ERROR_SXS_XML_E_UNEXPECTEDEOF 14058

#define ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK 14050

#define ERROR_SXS_XML_E_XMLDECLSYNTAX 14035

#define ERROR_SYMLINK_CLASS_DISABLED 1463

#define ERROR_SYMLINK_NOT_SUPPORTED 1464

#define ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED 1274

#define ERROR_SYNCHRONIZATION_REQUIRED 569

#define ERROR_SYSTEM_DEVICE_NOT_FOUND 15299

#define ERROR_SYSTEM_HIVE_TOO_LARGE 653

#define ERROR_SYSTEM_IMAGE_BAD_SIGNATURE 637

#define ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION 783

#define ERROR_SYSTEM_POWERSTATE_TRANSITION 782

#define ERROR_SYSTEM_PROCESS_TERMINATED 591

#define ERROR_SYSTEM_SHUTDOWN 641

#define ERROR_SYSTEM_TRACE 150

#define ERROR_TAG_NOT_FOUND 2012

#define ERROR_TAG_NOT_PRESENT 2013

#define ERROR_THREAD_1_INACTIVE 210

#define ERROR_THREAD_ALREADY_IN_TASK 1552

#define ERROR_THREAD_MODE_ALREADY_BACKGROUND 400

#define ERROR_THREAD_MODE_NOT_BACKGROUND 401

#define ERROR_THREAD_NOT_IN_PROCESS 566

#define ERROR_THREAD_WAS_SUSPENDED 699

#define ERROR_TIME_SKEW 1398

#define ERROR_TIMEOUT 1460

#define ERROR_TIMER_NOT_CANCELED 541

#define ERROR_TIMER_RESOLUTION_NOT_SET 607

#define ERROR_TIMER_RESUME_IGNORED 722

#define ERROR_TLW_WITH_WSCHILD 1406

#define ERROR_TM_IDENTITY_MISMATCH 6845

#define ERROR_TM_INITIALIZATION_FAILED 6706

#define ERROR_TM_VOLATILE 6828

#define ERROR_TOKEN_ALREADY_IN_USE 1375

#define ERROR_TOO_MANY_CMDS 56

#define ERROR_TOO_MANY_CONTEXT_IDS 1384

#define ERROR_TOO_MANY_LINKS 1142

#define ERROR_TOO_MANY_LUIDS_REQUESTED 1333

#define ERROR_TOO_MANY_MODULES 214

#define ERROR_TOO_MANY_MUXWAITERS 152

#define ERROR_TOO_MANY_NAMES 68

#define ERROR_TOO_MANY_OPEN_FILES 4

#define ERROR_TOO_MANY_POSTS 298

#define ERROR_TOO_MANY_SECRETS 1381

#define ERROR_TOO_MANY_SEM_REQUESTS 103

#define ERROR_TOO_MANY_SEMAPHORES 100

#define ERROR_TOO_MANY_SESS 69

#define ERROR_TOO_MANY_SIDS 1389

#define ERROR_TOO_MANY_TCBS 155

#define ERROR_TOO_MANY_THREADS 565

#define ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE 6834

#define ERROR_TRANSACTION_ALREADY_ABORTED 6704

#define ERROR_TRANSACTION_ALREADY_COMMITTED 6705

#define ERROR_TRANSACTION_FREEZE_IN_PROGRESS 6840

#define ERROR_TRANSACTION_INTEGRITY_VIOLATED 6726

#define ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER 6713

#define ERROR_TRANSACTION_MUST_WRITETHROUGH 6729

#define ERROR_TRANSACTION_NO_SUPERIOR 6730

#define ERROR_TRANSACTION_NOT_ACTIVE 6701

#define ERROR_TRANSACTION_NOT_ENLISTED 6855

#define ERROR_TRANSACTION_NOT_FOUND 6715

#define ERROR_TRANSACTION_NOT_JOINED 6708

#define ERROR_TRANSACTION_NOT_REQUESTED 6703

#define ERROR_TRANSACTION_NOT_ROOT 6721

#define ERROR_TRANSACTION_OBJECT_EXPIRED 6722

#define ERROR_TRANSACTION_PROPAGATION_FAILED 6711

#define ERROR_TRANSACTION_RECORD_TOO_LONG 6724

#define ERROR_TRANSACTION_REQUEST_NOT_VALID 6702

#define ERROR_TRANSACTION_REQUIRED_PROMOTION 6837

#define ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED 6723

#define ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET 6836

#define ERROR_TRANSACTION_SUPERIOR_EXISTS 6709

#define ERROR_TRANSACTIONAL_CONFLICT 6800

#define ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED 6832

#define ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH 6727

#define ERROR_TRANSACTIONMANAGER_NOT_FOUND 6718

#define ERROR_TRANSACTIONMANAGER_NOT_ONLINE 6719

#define ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION 6720

#define ERROR_TRANSACTIONS_NOT_FROZEN 6839

#define ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE 6805

#define ERROR_TRANSFORM_NOT_SUPPORTED 2004

#define ERROR_TRANSLATION_COMPLETE 757

#define ERROR_TRANSPORT_FULL 4328

#define ERROR_TRUST_FAILURE 1790

#define ERROR_TRUSTED_DOMAIN_FAILURE 1788

#define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789

#define ERROR_TS_INCOMPATIBLE_SESSIONS 7069

#define ERROR_TS_VIDEO_SUBSYSTEM_ERROR 7070

#define ERROR_TXF_ATTRIBUTE_CORRUPT 6830

#define ERROR_TXF_DIR_NOT_EMPTY 6826

#define ERROR_TXF_METADATA_ALREADY_PRESENT 6835

#define ERROR_UNABLE_TO_CLEAN 4311

#define ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA 4330

#define ERROR_UNABLE_TO_INVENTORY_DRIVE 4325

#define ERROR_UNABLE_TO_INVENTORY_SLOT 4326

#define ERROR_UNABLE_TO_INVENTORY_TRANSPORT 4327

#define ERROR_UNABLE_TO_LOAD_MEDIUM 4324

#define ERROR_UNABLE_TO_LOCK_MEDIA 1108

#define ERROR_UNABLE_TO_MOVE_REPLACEMENT 1176

#define ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 1177

#define ERROR_UNABLE_TO_REMOVE_REPLACED 1175

#define ERROR_UNABLE_TO_UNLOAD_MEDIA 1109

#define ERROR_UNDEFINED_CHARACTER 583

#define ERROR_UNEXP_NET_ERR 59

#define ERROR_UNEXPECTED_MM_CREATE_ERR 556

#define ERROR_UNEXPECTED_MM_EXTEND_ERR 558

#define ERROR_UNEXPECTED_MM_MAP_ERROR 557

#define ERROR_UNEXPECTED_OMID 4334

#define ERROR_UNHANDLED_EXCEPTION 574

#define ERROR_UNIDENTIFIED_ERROR 1287

#define ERROR_UNKNOWN_COMPONENT 1607

#define ERROR_UNKNOWN_FEATURE 1606

#define ERROR_UNKNOWN_PATCH 1647

#define ERROR_UNKNOWN_PORT 1796

#define ERROR_UNKNOWN_PRINT_MONITOR 3000

#define ERROR_UNKNOWN_PRINTER_DRIVER 1797

#define ERROR_UNKNOWN_PRINTPROCESSOR 1798

#define ERROR_UNKNOWN_PRODUCT 1605

#define ERROR_UNKNOWN_PROPERTY 1608

#define ERROR_UNKNOWN_REVISION 1305

#define ERROR_UNMAPPED_SUBSTITUTION_STRING 14096

#define ERROR_UNRECOGNIZED_MEDIA 1785

#define ERROR_UNRECOGNIZED_VOLUME 1005

#define ERROR_UNSUPPORTED_COMPRESSION 618

#define ERROR_UNSUPPORTED_TYPE 1630

#define ERROR_UNWIND 542

#define ERROR_UNWIND_CONSOLIDATE 684

#define ERROR_USER_APC 737

#define ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED 1934

#define ERROR_USER_EXISTS 1316

#define ERROR_USER_MAPPED_FILE 1224

#define ERROR_USER_PROFILE_LOAD 500

#define ERROR_VALIDATE_CONTINUE 625

#define ERROR_VC_DISCONNECTED 240

#define ERROR_VDM_DISALLOWED 1286

#define ERROR_VDM_HARD_ERROR 593

#define ERROR_VERIFIER_STOP 537

#define ERROR_VERSION_PARSE_ERROR 777

#define ERROR_VHD_BITMAP_MISMATCH 3225026572

#define ERROR_VHD_BLOCK_ALLOCATION_FAILURE 3225026569

#define ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT 3225026570

#define ERROR_VHD_CHILD_PARENT_ID_MISMATCH 3225026574

#define ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH 3225026583

#define ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH 3225026575

#define ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED 3225026584

#define ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT 3225026585

#define ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH 3225026562

#define ERROR_VHD_DRIVE_FOOTER_CORRUPT 3225026563

#define ERROR_VHD_DRIVE_FOOTER_MISSING 3225026561

#define ERROR_VHD_FORMAT_UNKNOWN 3225026564

#define ERROR_VHD_FORMAT_UNSUPPORTED_VERSION 3225026565

#define ERROR_VHD_INVALID_BLOCK_SIZE 3225026571

#define ERROR_VHD_INVALID_FILE_SIZE 3225026579

#define ERROR_VHD_INVALID_SIZE 3225026578

#define ERROR_VHD_INVALID_STATE 3225026588

#define ERROR_VHD_INVALID_TYPE 3225026587

#define ERROR_VHD_METADATA_READ_FAILURE 3225026576

#define ERROR_VHD_METADATA_WRITE_FAILURE 3225026577

#define ERROR_VHD_PARENT_VHD_ACCESS_DENIED 3225026582

#define ERROR_VHD_PARENT_VHD_NOT_FOUND 3225026573

#define ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH 3225026566

#define ERROR_VHD_SPARSE_HEADER_CORRUPT 3225026568

#define ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION 3225026567

#define ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED 3224829966

#define ERROR_VID_DUPLICATE_HANDLER 3224829953

#define ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT 3224829982

#define ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT 3224829964

#define ERROR_VID_HANDLER_NOT_PRESENT 3224829956

#define ERROR_VID_INVALID_CHILD_GPA_PAGE_SET 3224829986

#define ERROR_VID_INVALID_GPA_RANGE_HANDLE 3224829973

#define ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE 3224829970

#define ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE 3224829972

#define ERROR_VID_INVALID_NUMA_NODE_INDEX 3224829968

#define ERROR_VID_INVALID_NUMA_SETTINGS 3224829967

#define ERROR_VID_INVALID_OBJECT_NAME 3224829957

#define ERROR_VID_INVALID_PPM_HANDLE 3224829976

#define ERROR_VID_INVALID_PROCESSOR_STATE 3224829981

#define ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED 3224829983

#define ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET 3224829984

#define ERROR_VID_MB_STILL_REFERENCED 3224829965

#define ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE 3224829989

#define ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT 3224829990

#define ERROR_VID_MBPS_ARE_LOCKED 3224829977

#define ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED 3224829975

#define ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS 3224829963

#define ERROR_VID_MESSAGE_QUEUE_CLOSED 3224829978

#define ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG 3224829959

#define ERROR_VID_MMIO_RANGE_DESTROYED 3224829985

#define ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE 3224829974

#define ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED 3224829969

#define ERROR_VID_PAGE_RANGE_OVERFLOW 3224829971

#define ERROR_VID_PARTITION_ALREADY_EXISTS 3224829960

#define ERROR_VID_PARTITION_DOES_NOT_EXIST 3224829961

#define ERROR_VID_PARTITION_NAME_NOT_FOUND 3224829962

#define ERROR_VID_PARTITION_NAME_TOO_LONG 3224829958

#define ERROR_VID_QUEUE_FULL 3224829955

#define ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED 2151088129

#define ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED 3224829987

#define ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL 3224829988

#define ERROR_VID_SAVED_STATE_CORRUPT 3224829991

#define ERROR_VID_SAVED_STATE_INCOMPATIBLE 3224829993

#define ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM 3224829992

#define ERROR_VID_STOP_PENDING 3224829980

#define ERROR_VID_TOO_MANY_HANDLERS 3224829954

#define ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED 3224829979

#define ERROR_VIRTDISK_NOT_VIRTUAL_DISK 3225026581

#define ERROR_VIRTDISK_PROVIDER_NOT_FOUND 3225026580

#define ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE 3225026589

#define ERROR_VIRTUAL_DISK_LIMITATION 3225026586

#define ERROR_VIRUS_DELETED 226

#define ERROR_VIRUS_INFECTED 225

#define ERROR_VOLMGR_ALL_DISKS_FAILED 3224895529

#define ERROR_VOLMGR_BAD_BOOT_DISK 3224895567

#define ERROR_VOLMGR_DATABASE_FULL 3224895489

#define ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE 3224895566

#define ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED 3224895490

#define ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC 3224895491

#define ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME 3224895493

#define ERROR_VOLMGR_DISK_DUPLICATE 3224895494

#define ERROR_VOLMGR_DISK_DYNAMIC 3224895495

#define ERROR_VOLMGR_DISK_ID_INVALID 3224895496

#define ERROR_VOLMGR_DISK_INVALID 3224895497

#define ERROR_VOLMGR_DISK_LAST_VOTER 3224895498

#define ERROR_VOLMGR_DISK_LAYOUT_INVALID 3224895499

#define ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS 3224895500

#define ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED 3224895501

#define ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL 3224895502

#define ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS 3224895503

#define ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS 3224895504

#define ERROR_VOLMGR_DISK_MISSING 3224895505

#define ERROR_VOLMGR_DISK_NOT_EMPTY 3224895506

#define ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE 3224895507

#define ERROR_VOLMGR_DISK_REVECTORING_FAILED 3224895508

#define ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID 3224895509

#define ERROR_VOLMGR_DISK_SET_NOT_CONTAINED 3224895510

#define ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS 3224895511

#define ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES 3224895512

#define ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED 3224895513

#define ERROR_VOLMGR_EXTENT_ALREADY_USED 3224895514

#define ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS 3224895515

#define ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION 3224895516

#define ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED 3224895517

#define ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION 3224895518

#define ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH 3224895519

#define ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED 3224895520

#define ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION 2151153666

#define ERROR_VOLMGR_INCOMPLETE_REGENERATION 2151153665

#define ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID 3224895521

#define ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS 3224895522

#define ERROR_VOLMGR_MEMBER_IN_SYNC 3224895523

#define ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE 3224895524

#define ERROR_VOLMGR_MEMBER_INDEX_INVALID 3224895525

#define ERROR_VOLMGR_MEMBER_MISSING 3224895526

#define ERROR_VOLMGR_MEMBER_NOT_DETACHED 3224895527

#define ERROR_VOLMGR_MEMBER_REGENERATING 3224895528

#define ERROR_VOLMGR_MIRROR_NOT_SUPPORTED 3224895579

#define ERROR_VOLMGR_NO_REGISTERED_USERS 3224895530

#define ERROR_VOLMGR_NO_SUCH_USER 3224895531

#define ERROR_VOLMGR_NO_VALID_LOG_COPIES 3224895576

#define ERROR_VOLMGR_NOT_PRIMARY_PACK 3224895570

#define ERROR_VOLMGR_NOTIFICATION_RESET 3224895532

#define ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID 3224895573

#define ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID 3224895572

#define ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID 3224895578

#define ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID 3224895565

#define ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID 3224895533

#define ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID 3224895534

#define ERROR_VOLMGR_PACK_CONFIG_OFFLINE 3224895568

#define ERROR_VOLMGR_PACK_CONFIG_ONLINE 3224895569

#define ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED 3224895492

#define ERROR_VOLMGR_PACK_DUPLICATE 3224895535

#define ERROR_VOLMGR_PACK_HAS_QUORUM 3224895540

#define ERROR_VOLMGR_PACK_ID_INVALID 3224895536

#define ERROR_VOLMGR_PACK_INVALID 3224895537

#define ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED 3224895571

#define ERROR_VOLMGR_PACK_NAME_INVALID 3224895538

#define ERROR_VOLMGR_PACK_OFFLINE 3224895539

#define ERROR_VOLMGR_PACK_WITHOUT_QUORUM 3224895541

#define ERROR_VOLMGR_PARTITION_STYLE_INVALID 3224895542

#define ERROR_VOLMGR_PARTITION_UPDATE_FAILED 3224895543

#define ERROR_VOLMGR_PLEX_IN_SYNC 3224895544

#define ERROR_VOLMGR_PLEX_INDEX_DUPLICATE 3224895545

#define ERROR_VOLMGR_PLEX_INDEX_INVALID 3224895546

#define ERROR_VOLMGR_PLEX_LAST_ACTIVE 3224895547

#define ERROR_VOLMGR_PLEX_MISSING 3224895548

#define ERROR_VOLMGR_PLEX_NOT_RAID5 3224895551

#define ERROR_VOLMGR_PLEX_NOT_SIMPLE 3224895552

#define ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED 3224895575

#define ERROR_VOLMGR_PLEX_REGENERATING 3224895549

#define ERROR_VOLMGR_PLEX_TYPE_INVALID 3224895550

#define ERROR_VOLMGR_PRIMARY_PACK_PRESENT 3224895577

#define ERROR_VOLMGR_RAID5_NOT_SUPPORTED 3224895580

#define ERROR_VOLMGR_STRUCTURE_SIZE_INVALID 3224895553

#define ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS 3224895554

#define ERROR_VOLMGR_TRANSACTION_IN_PROGRESS 3224895555

#define ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE 3224895556

#define ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK 3224895557

#define ERROR_VOLMGR_VOLUME_ID_INVALID 3224895558

#define ERROR_VOLMGR_VOLUME_LENGTH_INVALID 3224895559

#define ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE 3224895560

#define ERROR_VOLMGR_VOLUME_MIRRORED 3224895574

#define ERROR_VOLMGR_VOLUME_NOT_MIRRORED 3224895561

#define ERROR_VOLMGR_VOLUME_NOT_RETAINED 3224895562

#define ERROR_VOLMGR_VOLUME_OFFLINE 3224895563

#define ERROR_VOLMGR_VOLUME_RETAINED 3224895564

#define ERROR_VOLSNAP_HIBERNATE_READY 761

#define ERROR_VOLSNAP_PREPARE_HIBERNATE 655

#define ERROR_VOLUME_CONTAINS_SYS_FILES 4337

#define ERROR_VOLUME_DIRTY 6851

#define ERROR_VOLUME_MOUNTED 743

#define ERROR_VOLUME_NOT_SIS_ENABLED 4500

#define ERROR_VOLUME_NOT_SUPPORT_EFS 6014

#define ERROR_WAIT_1 731

#define ERROR_WAIT_2 732

#define ERROR_WAIT_3 733

#define ERROR_WAIT_63 734

#define ERROR_WAIT_FOR_OPLOCK 765

#define ERROR_WAIT_NO_CHILDREN 128

#define ERROR_WAKE_SYSTEM 730

#define ERROR_WAKE_SYSTEM_DEBUGGER 675

#define ERROR_WAS_LOCKED 717

#define ERROR_WAS_UNLOCKED 715

#define ERROR_WINDOW_NOT_COMBOBOX 1423

#define ERROR_WINDOW_NOT_DIALOG 1420

#define ERROR_WINDOW_OF_OTHER_THREAD 1408

#define ERROR_WINS_INTERNAL 4000

#define ERROR_WMI_ALREADY_DISABLED 4212

#define ERROR_WMI_ALREADY_ENABLED 4206

#define ERROR_WMI_DP_FAILED 4209

#define ERROR_WMI_DP_NOT_FOUND 4204

#define ERROR_WMI_GUID_DISCONNECTED 4207

#define ERROR_WMI_GUID_NOT_FOUND 4200

#define ERROR_WMI_INSTANCE_NOT_FOUND 4201

#define ERROR_WMI_INVALID_MOF 4210

#define ERROR_WMI_INVALID_REGINFO 4211

#define ERROR_WMI_ITEMID_NOT_FOUND 4202

#define ERROR_WMI_READ_ONLY 4213

#define ERROR_WMI_SERVER_UNAVAILABLE 4208

#define ERROR_WMI_SET_FAILURE 4214

#define ERROR_WMI_TRY_AGAIN 4203

#define ERROR_WMI_UNRESOLVED_INSTANCE_REF 4205

#define ERROR_WORKING_SET_QUOTA 1453

#define ERROR_WOW_ASSERTION 670

#define ERROR_WRITE_FAULT 29

#define ERROR_WRITE_PROTECT 19

#define ERROR_WRONG_COMPARTMENT 1468

#define ERROR_WRONG_DISK 34

#define ERROR_WRONG_EFS 6005

#define ERROR_WRONG_PASSWORD 1323

#define ERROR_WRONG_TARGET_NAME 1396

#define ERROR_WX86_ERROR 540

#define ERROR_WX86_WARNING 539

#define ERROR_XML_ENCODING_MISMATCH 14100

#define ERROR_XML_PARSE_ERROR 1465

#define ERROR_XMLDSIG_ERROR 1466

#define EVENT_E_ALL_SUBSCRIBERS_FAILED 2147746305

#define EVENT_E_CANT_MODIFY_OR_DELETE_CONFIGURED_OBJECT 2147746318

#define EVENT_E_CANT_MODIFY_OR_DELETE_UNCONFIGURED_OBJECT 2147746317

#define EVENT_E_COMPLUS_NOT_INSTALLED 2147746316

#define EVENT_E_FIRST 2147746304

#define EVENT_E_INTERNALERROR 2147746310

#define EVENT_E_INTERNALEXCEPTION 2147746309

#define EVENT_E_INVALID_EVENT_CLASS_PARTITION 2147746319

#define EVENT_E_INVALID_PER_USER_SID 2147746311

#define EVENT_E_LAST 2147746335

#define EVENT_E_MISSING_EVENTCLASS 2147746314

#define EVENT_E_NOT_ALL_REMOVED 2147746315

#define EVENT_E_PER_USER_SID_NOT_LOGGED_ON 2147746320

#define EVENT_E_QUERYFIELD 2147746308

#define EVENT_E_QUERYSYNTAX 2147746307

#define EVENT_E_TOO_MANY_METHODS 2147746313

#define EVENT_E_USER_EXCEPTION 2147746312

#define EVENT_S_FIRST 262656

#define EVENT_S_LAST 262687

#define EVENT_S_NOSUBSCRIBERS 262658

#define EVENT_S_SOME_SUBSCRIBERS_FAILED 262656

#define FACILITY_AAF 18

#define FACILITY_ACS 20

#define FACILITY_BACKGROUNDCOPY 32

#define FACILITY_BCD 57

#define FACILITY_CERT 11

#define FACILITY_CMI 54

#define FACILITY_COMPLUS 17

#define FACILITY_CONFIGURATION 33

#define FACILITY_CONTROL 10

#define FACILITY_DIRECTORYSERVICE 37

#define FACILITY_DISPATCH 2

#define FACILITY_DPLAY 21

#define FACILITY_FVE 49

#define FACILITY_FWP 50

#define FACILITY_GRAPHICS 38

#define FACILITY_HTTP 25

#define FACILITY_INTERNET 12

#define FACILITY_ITF 4

#define FACILITY_MBN 84

#define FACILITY_MEDIASERVER 13

#define FACILITY_METADIRECTORY 35

#define FACILITY_MSMQ 14

#define FACILITY_NDIS 52

#define FACILITY_NT_BIT 268435456

#define FACILITY_NULL 0

#define FACILITY_OPC 81

#define FACILITY_PLA 48

#define FACILITY_RAS 83

#define FACILITY_RPC 1

#define FACILITY_SCARD 16

#define FACILITY_SDIAG 60

#define FACILITY_SECURITY 9

#define FACILITY_SETUPAPI 15

#define FACILITY_SHELL 39

#define FACILITY_SSPI 9

#define FACILITY_STATE_MANAGEMENT 34

#define FACILITY_STORAGE 3

#define FACILITY_SXS 23

#define FACILITY_TPM_SERVICES 40

#define FACILITY_TPM_SOFTWARE 41

#define FACILITY_UI 42

#define FACILITY_UMI 22

#define FACILITY_URT 19

#define FACILITY_USERMODE_COMMONLOG 26

#define FACILITY_USERMODE_FILTER_MANAGER 31

#define FACILITY_USERMODE_HYPERVISOR 53

#define FACILITY_USERMODE_VHD 58

#define FACILITY_USERMODE_VIRTUALIZATION 55

#define FACILITY_USERMODE_VOLMGR 56

#define FACILITY_WEBSERVICES 61

#define FACILITY_WIN32 7

#define FACILITY_WINDOWS 8

#define FACILITY_WINDOWS_CE 24

#define FACILITY_WINDOWS_DEFENDER 80

#define FACILITY_WINDOWSUPDATE 36

#define FACILITY_WINRM 51

#define FACILITY_XPS 82

#define FRS_ERR_AUTHENTICATION 8008

#define FRS_ERR_CHILD_TO_PARENT_COMM 8011

#define FRS_ERR_INSUFFICIENT_PRIV 8007

#define FRS_ERR_INTERNAL 8005

#define FRS_ERR_INTERNAL_API 8004

#define FRS_ERR_INVALID_API_SEQUENCE 8001

#define FRS_ERR_INVALID_SERVICE_PARAMETER 8017

#define FRS_ERR_PARENT_AUTHENTICATION 8010

#define FRS_ERR_PARENT_INSUFFICIENT_PRIV 8009

#define FRS_ERR_PARENT_TO_CHILD_COMM 8012

#define FRS_ERR_SERVICE_COMM 8006

#define FRS_ERR_STARTING_SERVICE 8002

#define FRS_ERR_STOPPING_SERVICE 8003

#define FRS_ERR_SYSVOL_DEMOTE 8016

#define FRS_ERR_SYSVOL_IS_BUSY 8015

#define FRS_ERR_SYSVOL_POPULATE 8013

#define FRS_ERR_SYSVOL_POPULATE_TIMEOUT 8014

#define FVE_E_ACTION_NOT_ALLOWED 2150694921

#define FVE_E_AD_ATTR_NOT_SET 2150694926

#define FVE_E_AD_GUID_NOT_FOUND 2150694927

#define FVE_E_AD_INSUFFICIENT_BUFFER 2150694938

#define FVE_E_AD_INVALID_DATASIZE 2150694924

#define FVE_E_AD_INVALID_DATATYPE 2150694923

#define FVE_E_AD_NO_VALUES 2150694925

#define FVE_E_AD_SCHEMA_NOT_INSTALLED 2150694922

#define FVE_E_AUTH_INVALID_APPLICATION 2150694980

#define FVE_E_AUTH_INVALID_CONFIG 2150694981

#define FVE_E_AUTOUNLOCK_ENABLED 2150694953

#define FVE_E_BAD_DATA 2150694934

#define FVE_E_BAD_INFORMATION 2150694928

#define FVE_E_BAD_PARTITION_SIZE 2150694932

#define FVE_E_BCD_APPLICATIONS_PATH_INCORRECT 2150694994

#define FVE_E_BOOTABLE_CDDVD 2150694960

#define FVE_E_CANNOT_ENCRYPT_NO_KEY 2150694958

#define FVE_E_CANNOT_SET_FVEK_ENCRYPTED 2150694957

#define FVE_E_CANT_LOCK_AUTOUNLOCK_ENABLED_VOLUME 2150695063

#define FVE_E_CLUSTERING_NOT_SUPPORTED 2150694942

#define FVE_E_CONV_READ 2150694939

#define FVE_E_CONV_RECOVERY_FAILED 2150695048

#define FVE_E_CONV_WRITE 2150694940

#define FVE_E_DEBUGGER_ENABLED 2150694991

#define FVE_E_DRY_RUN_FAILED 2150694989

#define FVE_E_DV_NOT_ALLOWED_BY_GP 2150695025

#define FVE_E_DV_NOT_SUPPORTED_ON_FS 2150695024

#define FVE_E_ENH_PIN_INVALID 2150695065

#define FVE_E_FAILED_AUTHENTICATION 2150694951

#define FVE_E_FAILED_SECTOR_SIZE 2150694950

#define FVE_E_FAILED_WRONG_FS 2150694931

#define FVE_E_FIPS_DISABLE_PROTECTION_NOT_ALLOWED 2150694982

#define FVE_E_FIPS_HASH_KDF_NOT_ALLOWED 2150695064

#define FVE_E_FIPS_PREVENTS_EXTERNAL_KEY_EXPORT 2150694968

#define FVE_E_FIPS_PREVENTS_PASSPHRASE 2150695020

#define FVE_E_FIPS_PREVENTS_RECOVERY_PASSWORD 2150694967

#define FVE_E_FIPS_RNG_CHECK_FAILED 2150694966

#define FVE_E_FIRMWARE_TYPE_NOT_SUPPORTED 2150694984

#define FVE_E_FOREIGN_VOLUME 2150694947

#define FVE_E_FS_MOUNTED 2150694987

#define FVE_E_FS_NOT_EXTENDED 2150694983

#define FVE_E_HIDDEN_VOLUME 2150694998

#define FVE_E_INVALID_BITLOCKER_OID 2150695022

#define FVE_E_INVALID_DATUM_TYPE 2150695067

#define FVE_E_INVALID_KEY_FORMAT 2150694964

#define FVE_E_INVALID_PASSWORD_FORMAT 2150694965

#define FVE_E_INVALID_PIN_CHARS 2150695066

#define FVE_E_INVALID_PROTECTOR_TYPE 2150694970

#define FVE_E_INVALID_STARTUP_OPTIONS 2150695003

#define FVE_E_KEY_PROTECTOR_NOT_SUPPORTED 2150695017

#define FVE_E_KEY_REQUIRED 2150694941

#define FVE_E_KEYFILE_INVALID 2150694973

#define FVE_E_KEYFILE_NO_VMK 2150694974

#define FVE_E_KEYFILE_NOT_FOUND 2150694972

#define FVE_E_LOCKED_VOLUME 2150694912

#define FVE_E_MOR_FAILED 2150694997

#define FVE_E_NO_AUTOUNLOCK_MASTER_KEY 2150694996

#define FVE_E_NO_BOOTMGR_METRIC 2150694917

#define FVE_E_NO_BOOTSECTOR_METRIC 2150694916

#define FVE_E_NO_FEATURE_LICENSE 2150695002

#define FVE_E_NO_LICENSE 2150694985

#define FVE_E_NO_MBR_METRIC 2150694915

#define FVE_E_NO_PROTECTORS_TO_TEST 2150694971

#define FVE_E_NO_TPM_BIOS 2150694914

#define FVE_E_NON_BITLOCKER_KU 2150695059

#define FVE_E_NON_BITLOCKER_OID 2150695045

#define FVE_E_NOT_ACTIVATED 2150694920

#define FVE_E_NOT_ALLOWED_IN_SAFE_MODE 2150694976

#define FVE_E_NOT_ALLOWED_IN_VERSION 2150694995

#define FVE_E_NOT_DATA_VOLUME 2150694937

#define FVE_E_NOT_DECRYPTED 2150694969

#define FVE_E_NOT_ENCRYPTED 2150694913

#define FVE_E_NOT_ON_STACK 2150694986

#define FVE_E_NOT_OS_VOLUME 2150694952

#define FVE_E_NOT_SUPPORTED 2150694933

#define FVE_E_OPERATION_NOT_SUPPORTED_ON_VISTA_VOLUME 2150695062

#define FVE_E_OS_NOT_PROTECTED 2150694944

#define FVE_E_OS_VOLUME_PASSPHRASE_NOT_ALLOWED 2150695021

#define FVE_E_OVERLAPPED_UPDATE 2150694948

#define FVE_E_PIN_INVALID 2150694979

#define FVE_E_POLICY_CONFLICT_FDV_RK_OFF_AUK_ON 2150695043

#define FVE_E_POLICY_CONFLICT_FDV_RP_OFF_ADB_ON 2150695057

#define FVE_E_POLICY_CONFLICT_OSV_RP_OFF_ADB_ON 2150695056

#define FVE_E_POLICY_CONFLICT_RDV_RK_OFF_AUK_ON 2150695044

#define FVE_E_POLICY_CONFLICT_RDV_RP_OFF_ADB_ON 2150695058

#define FVE_E_POLICY_CONFLICT_RO_AND_STARTUP_KEY_REQUIRED 2150695047

#define FVE_E_POLICY_INVALID_PASSPHRASE_LENGTH 2150695040

#define FVE_E_POLICY_INVALID_PIN_LENGTH 2150695016

#define FVE_E_POLICY_PASSPHRASE_NOT_ALLOWED 2150695018

#define FVE_E_POLICY_PASSPHRASE_REQUIRED 2150695019

#define FVE_E_POLICY_PASSPHRASE_TOO_SIMPLE 2150695041

#define FVE_E_POLICY_PASSWORD_REQUIRED 2150694956

#define FVE_E_POLICY_PROHIBITS_SELFSIGNED 2150695046

#define FVE_E_POLICY_RECOVERY_KEY_NOT_ALLOWED 2150695006

#define FVE_E_POLICY_RECOVERY_KEY_REQUIRED 2150695007

#define FVE_E_POLICY_RECOVERY_PASSWORD_NOT_ALLOWED 2150695004

#define FVE_E_POLICY_RECOVERY_PASSWORD_REQUIRED 2150695005

#define FVE_E_POLICY_STARTUP_KEY_NOT_ALLOWED 2150695010

#define FVE_E_POLICY_STARTUP_KEY_REQUIRED 2150695011

#define FVE_E_POLICY_STARTUP_PIN_KEY_NOT_ALLOWED 2150695012

#define FVE_E_POLICY_STARTUP_PIN_KEY_REQUIRED 2150695013

#define FVE_E_POLICY_STARTUP_PIN_NOT_ALLOWED 2150695008

#define FVE_E_POLICY_STARTUP_PIN_REQUIRED 2150695009

#define FVE_E_POLICY_STARTUP_TPM_NOT_ALLOWED 2150695014

#define FVE_E_POLICY_STARTUP_TPM_REQUIRED 2150695015

#define FVE_E_POLICY_USER_CERT_MUST_BE_HW 2150695028

#define FVE_E_POLICY_USER_CERTIFICATE_NOT_ALLOWED 2150695026

#define FVE_E_POLICY_USER_CERTIFICATE_REQUIRED 2150695027

#define FVE_E_POLICY_USER_CONFIGURE_FDV_AUTOUNLOCK_NOT_ALLOWED 2150695029

#define FVE_E_POLICY_USER_CONFIGURE_RDV_AUTOUNLOCK_NOT_ALLOWED 2150695030

#define FVE_E_POLICY_USER_CONFIGURE_RDV_NOT_ALLOWED 2150695031

#define FVE_E_POLICY_USER_DISABLE_RDV_NOT_ALLOWED 2150695033

#define FVE_E_POLICY_USER_ENABLE_RDV_NOT_ALLOWED 2150695032

#define FVE_E_PRIVATEKEY_AUTH_FAILED 2150695060

#define FVE_E_PROTECTION_DISABLED 2150694945

#define FVE_E_PROTECTOR_EXISTS 2150694961

#define FVE_E_PROTECTOR_NOT_FOUND 2150694963

#define FVE_E_PUBKEY_NOT_ALLOWED 2150695000

#define FVE_E_RAW_ACCESS 2150694992

#define FVE_E_RAW_BLOCKED 2150694993

#define FVE_E_REBOOT_REQUIRED 2150694990

#define FVE_E_RECOVERY_KEY_REQUIRED 2150694946

#define FVE_E_RECOVERY_PARTITION 2150695042

#define FVE_E_RELATIVE_PATH 2150694962

#define FVE_E_REMOVAL_OF_DRA_FAILED 2150695061

#define FVE_E_SECURE_KEY_REQUIRED 2150694919

#define FVE_E_SYSTEM_VOLUME 2150694930

#define FVE_E_TOKEN_NOT_IMPERSONATED 2150694988

#define FVE_E_TOO_SMALL 2150694929

#define FVE_E_TPM_DISABLED 2150694975

#define FVE_E_TPM_INVALID_PCR 2150694977

#define FVE_E_TPM_NO_VMK 2150694978

#define FVE_E_TPM_NOT_OWNED 2150694936

#define FVE_E_TPM_SRK_AUTH_NOT_ZERO 2150694949

#define FVE_E_TRANSIENT_STATE 2150694999

#define FVE_E_VIRTUALIZED_SPACE_TOO_BIG 2150695049

#define FVE_E_VOLUME_BOUND_ALREADY 2150694943

#define FVE_E_VOLUME_HANDLE_OPEN 2150695001

#define FVE_E_VOLUME_NOT_BOUND 2150694935

#define FVE_E_VOLUME_TOO_SMALL 2150695023

#define FVE_E_WRONG_BOOTMGR 2150694918

#define FVE_E_WRONG_BOOTSECTOR 2150694954

#define FVE_E_WRONG_SYSTEM_FS 2150694955

#define FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER 2150760492

#define FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER 2150760493

#define FWP_E_ALREADY_EXISTS 2150760457

#define FWP_E_BUILTIN_OBJECT 2150760471

#define FWP_E_CALLOUT_NOT_FOUND 2150760449

#define FWP_E_CALLOUT_NOTIFICATION_FAILED 2150760503

#define FWP_E_CONDITION_NOT_FOUND 2150760450

#define FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT 2150760495

#define FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER 2150760494

#define FWP_E_DROP_NOICMP 2150760708

#define FWP_E_DUPLICATE_AUTH_METHOD 2150760508

#define FWP_E_DUPLICATE_CONDITION 2150760490

#define FWP_E_DUPLICATE_KEYMOD 2150760491

#define FWP_E_DYNAMIC_SESSION_IN_PROGRESS 2150760459

#define FWP_E_EM_NOT_SUPPORTED 2150760498

#define FWP_E_FILTER_NOT_FOUND 2150760451

#define FWP_E_IN_USE 2150760458

#define FWP_E_INCOMPATIBLE_AUTH_METHOD 2150760496

#define FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM 2150760506

#define FWP_E_INCOMPATIBLE_DH_GROUP 2150760497

#define FWP_E_INCOMPATIBLE_LAYER 2150760468

#define FWP_E_INCOMPATIBLE_SA_STATE 2150760475

#define FWP_E_INCOMPATIBLE_TXN 2150760465

#define FWP_E_INVALID_ACTION_TYPE 2150760484

#define FWP_E_INVALID_AUTH_TRANSFORM 2150760504

#define FWP_E_INVALID_CIPHER_TRANSFORM 2150760505

#define FWP_E_INVALID_ENUMERATOR 2150760477

#define FWP_E_INVALID_FLAGS 2150760478

#define FWP_E_INVALID_INTERVAL 2150760481

#define FWP_E_INVALID_NET_MASK 2150760479

#define FWP_E_INVALID_PARAMETER 2150760501

#define FWP_E_INVALID_RANGE 2150760480

#define FWP_E_INVALID_TRANSFORM_COMBINATION 2150760507

#define FWP_E_INVALID_WEIGHT 2150760485

#define FWP_E_KM_CLIENTS_ONLY 2150760469

#define FWP_E_LAYER_NOT_FOUND 2150760452

#define FWP_E_LIFETIME_MISMATCH 2150760470

#define FWP_E_MATCH_TYPE_MISMATCH 2150760486

#define FWP_E_NET_EVENTS_DISABLED 2150760467

#define FWP_E_NEVER_MATCH 2150760499

#define FWP_E_NO_TXN_IN_PROGRESS 2150760461

#define FWP_E_NOT_FOUND 2150760456

#define FWP_E_NOTIFICATION_DROPPED 2150760473

#define FWP_E_NULL_DISPLAY_NAME 2150760483

#define FWP_E_NULL_POINTER 2150760476

#define FWP_E_OUT_OF_BOUNDS 2150760488

#define FWP_E_PROVIDER_CONTEXT_MISMATCH 2150760500

#define FWP_E_PROVIDER_CONTEXT_NOT_FOUND 2150760454

#define FWP_E_PROVIDER_NOT_FOUND 2150760453

#define FWP_E_RESERVED 2150760489

#define FWP_E_SESSION_ABORTED 2150760464

#define FWP_E_SUBLAYER_NOT_FOUND 2150760455

#define FWP_E_TIMEOUT 2150760466

#define FWP_E_TOO_MANY_CALLOUTS 2150760472

#define FWP_E_TOO_MANY_SUBLAYERS 2150760502

#define FWP_E_TRAFFIC_MISMATCH 2150760474

#define FWP_E_TXN_ABORTED 2150760463

#define FWP_E_TXN_IN_PROGRESS 2150760462

#define FWP_E_TYPE_MISMATCH 2150760487

#define FWP_E_WRONG_SESSION 2150760460

#define FWP_E_ZERO_LENGTH_ARRAY 2150760482

#define INPLACE_E_FIRST 2147746208

#define INPLACE_E_LAST 2147746223

#define INPLACE_E_NOTOOLSPACE 2147746209

#define INPLACE_E_NOTUNDOABLE 2147746208

#define INPLACE_S_FIRST 262560

#define INPLACE_S_LAST 262575

#define INPLACE_S_TRUNCATED 262560

#define MARSHAL_E_FIRST 2147746080

#define MARSHAL_E_LAST 2147746095

#define MARSHAL_S_FIRST 262432

#define MARSHAL_S_LAST 262447

#define MEM_E_INVALID_LINK 2148007952

#define MEM_E_INVALID_ROOT 2148007945

#define MEM_E_INVALID_SIZE 2148007953

#define MK_E_CANTOPENFILE 2147746282

#define MK_E_CONNECTMANUALLY 2147746272

#define MK_E_ENUMERATION_FAILED 2147746287

#define MK_E_EXCEEDEDDEADLINE 2147746273

#define MK_E_FIRST 2147746272

#define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED 2147746279

#define MK_E_INVALIDEXTENSION 2147746278

#define MK_E_LAST 2147746287

#define MK_E_MUSTBOTHERUSER 2147746283

#define MK_E_NEEDGENERIC 2147746274

#define MK_E_NO_NORMALIZED 2148007943

#define MK_E_NOINVERSE 2147746284

#define MK_E_NOOBJECT 2147746277

#define MK_E_NOPREFIX 2147746286

#define MK_E_NOSTORAGE 2147746285

#define MK_E_NOTBINDABLE 2147746280

#define MK_E_NOTBOUND 2147746281

#define MK_E_SYNTAX 2147746276

#define MK_E_UNAVAILABLE 2147746275

#define MK_S_FIRST 262624

#define MK_S_HIM 262629

#define MK_S_LAST 262639

#define MK_S_ME 262628

#define MK_S_MONIKERALREADYREGISTERED 262631

#define MK_S_REDUCED_TO_SELF 262626

#define MK_S_US 262630

#define MSDTC_E_DUPLICATE_RESOURCE 2148599553

#define MSSIPOTF_E_BAD_FIRST_TABLE_PLACEMENT 2148102152

#define MSSIPOTF_E_BAD_MAGICNUMBER 2148102148

#define MSSIPOTF_E_BAD_OFFSET_TABLE 2148102149

#define MSSIPOTF_E_BADVERSION 2148102165

#define MSSIPOTF_E_CANTGETOBJECT 2148102146

#define MSSIPOTF_E_CRYPT 2148102164

#define MSSIPOTF_E_DSIG_STRUCTURE 2148102166

#define MSSIPOTF_E_FAILED_HINTS_CHECK 2148102161

#define MSSIPOTF_E_FAILED_POLICY 2148102160

#define MSSIPOTF_E_FILE 2148102163

#define MSSIPOTF_E_FILE_CHECKSUM 2148102157

#define MSSIPOTF_E_FILETOOSMALL 2148102155

#define MSSIPOTF_E_NOHEADTABLE 2148102147

#define MSSIPOTF_E_NOT_OPENTYPE 2148102162

#define MSSIPOTF_E_OUTOFMEMRANGE 2148102145

#define MSSIPOTF_E_PCONST_CHECK 2148102167

#define MSSIPOTF_E_STRUCTURE 2148102168

#define MSSIPOTF_E_TABLE_CHECKSUM 2148102156

#define MSSIPOTF_E_TABLE_LONGWORD 2148102151

#define MSSIPOTF_E_TABLE_PADBYTES 2148102154

#define MSSIPOTF_E_TABLE_TAGORDER 2148102150

#define MSSIPOTF_E_TABLES_OVERLAP 2148102153

#define NO_ERROR 0

#define NOERROR 0

#define NTE_BAD_ALGID 2148073480

#define NTE_BAD_DATA 2148073477

#define NTE_BAD_FLAGS 2148073481

#define NTE_BAD_HASH 2148073474

#define NTE_BAD_HASH_STATE 2148073484

#define NTE_BAD_KEY 2148073475

#define NTE_BAD_KEY_STATE 2148073483

#define NTE_BAD_KEYSET 2148073494

#define NTE_BAD_KEYSET_PARAM 2148073503

#define NTE_BAD_LEN 2148073476

#define NTE_BAD_PROV_TYPE 2148073492

#define NTE_BAD_PROVIDER 2148073491

#define NTE_BAD_PUBLIC_KEY 2148073493

#define NTE_BAD_SIGNATURE 2148073478

#define NTE_BAD_TYPE 2148073482

#define NTE_BAD_UID 2148073473

#define NTE_BAD_VER 2148073479

#define NTE_BUFFER_TOO_SMALL 2148073512

#define NTE_BUFFERS_OVERLAP 2148073515

#define NTE_DECRYPTION_FAILURE 2148073516

#define NTE_DOUBLE_ENCRYPT 2148073490

#define NTE_EXISTS 2148073487

#define NTE_FAIL 2148073504

#define NTE_FIXEDPARAMETER 2148073509

#define NTE_HMAC_NOT_SUPPORTED 2148073519

#define NTE_INTERNAL_ERROR 2148073517

#define NTE_INVALID_HANDLE 2148073510

#define NTE_INVALID_PARAMETER 2148073511

#define NTE_KEYSET_ENTRY_BAD 2148073498

#define NTE_KEYSET_NOT_DEF 2148073497

#define NTE_NO_KEY 2148073485

#define NTE_NO_MEMORY 2148073486

#define NTE_NO_MORE_ITEMS 2148073514

#define NTE_NOT_FOUND 2148073489

#define NTE_NOT_SUPPORTED 2148073513

#define NTE_OP_OK 0

#define NTE_PERM 2148073488

#define NTE_PROV_DLL_NOT_FOUND 2148073502

#define NTE_PROV_TYPE_ENTRY_BAD 2148073496

#define NTE_PROV_TYPE_NO_MATCH 2148073499

#define NTE_PROV_TYPE_NOT_DEF 2148073495

#define NTE_PROVIDER_DLL_FAIL 2148073501

#define NTE_SIGNATURE_FILE_BAD 2148073500

#define NTE_SILENT_CONTEXT 2148073506

#define NTE_SYS_ERR 2148073505

#define NTE_TEMPORARY_PROFILE 2148073508

#define NTE_TOKEN_KEYSET_STORAGE_FULL 2148073507

#define NTE_UI_REQUIRED 2148073518

#define OLE_E_ADVF 2147745793

#define OLE_E_ADVISENOTSUPPORTED 2147745795

#define OLE_E_BLANK 2147745799

#define OLE_E_CANT_BINDTOSOURCE 2147745802

#define OLE_E_CANT_GETMONIKER 2147745801

#define OLE_E_CANTCONVERT 2147745809

#define OLE_E_CLASSDIFF 2147745800

#define OLE_E_ENUM_NOMORE 2147745794

#define OLE_E_FIRST 2147745792

#define OLE_E_INVALIDHWND 2147745807

#define OLE_E_INVALIDRECT 2147745805

#define OLE_E_LAST 2147746047

#define OLE_E_NOCACHE 2147745798

#define OLE_E_NOCONNECTION 2147745796

#define OLE_E_NOSTORAGE 2147745810

#define OLE_E_NOT_INPLACEACTIVE 2147745808

#define OLE_E_NOTRUNNING 2147745797

#define OLE_E_OLEVERB 2147745792

#define OLE_E_PROMPTSAVECANCELLED 2147745804

#define OLE_E_STATIC 2147745803

#define OLE_E_WRONGCOMPOBJ 2147745806

#define OLE_S_FIRST 262144

#define OLE_S_LAST 262399

#define OLE_S_MAC_CLIPFORMAT 262146

#define OLE_S_STATIC 262145

#define OLE_S_USEREG 262144

#define OLEOBJ_E_FIRST 2147746176

#define OLEOBJ_E_INVALIDVERB 2147746177

#define OLEOBJ_E_LAST 2147746191

#define OLEOBJ_E_NOVERBS 2147746176

#define OLEOBJ_S_CANNOT_DOVERB_NOW 262529

#define OLEOBJ_S_FIRST 262528

#define OLEOBJ_S_INVALIDHWND 262530

#define OLEOBJ_S_INVALIDVERB 262528

#define OLEOBJ_S_LAST 262543

#define OR_INVALID_OID 1911

#define OR_INVALID_OXID 1910

#define OR_INVALID_SET 1912

#define OSS_ACCESS_SERIALIZATION_ERROR 2148085779

#define OSS_API_DLL_NOT_LINKED 2148085801

#define OSS_BAD_ARG 2148085766

#define OSS_BAD_ENCRULES 2148085782

#define OSS_BAD_PTR 2148085771

#define OSS_BAD_TABLE 2148085775

#define OSS_BAD_TIME 2148085772

#define OSS_BAD_VERSION 2148085767

#define OSS_BERDER_DLL_NOT_LINKED 2148085802

#define OSS_CANT_CLOSE_TRACE_FILE 2148085806

#define OSS_CANT_OPEN_TRACE_FILE 2148085787

#define OSS_CANT_OPEN_TRACE_WINDOW 2148085784

#define OSS_COMPARATOR_CODE_NOT_LINKED 2148085797

#define OSS_COMPARATOR_DLL_NOT_LINKED 2148085796

#define OSS_CONSTRAINT_DLL_NOT_LINKED 2148085795

#define OSS_CONSTRAINT_VIOLATED 2148085777

#define OSS_COPIER_DLL_NOT_LINKED 2148085794

#define OSS_DATA_ERROR 2148085765

#define OSS_FATAL_ERROR 2148085778

#define OSS_INDEFINITE_NOT_SUPPORTED 2148085773

#define OSS_LIMITED 2148085770

#define OSS_MEM_ERROR 2148085774

#define OSS_MEM_MGR_DLL_NOT_LINKED 2148085798

#define OSS_MORE_BUF 2148085761

#define OSS_MORE_INPUT 2148085764

#define OSS_MUTEX_NOT_CREATED 2148085805

#define OSS_NEGATIVE_UINTEGER 2148085762

#define OSS_NULL_FCN 2148085781

#define OSS_NULL_TBL 2148085780

#define OSS_OID_DLL_NOT_LINKED 2148085786

#define OSS_OPEN_TYPE_ERROR 2148085804

#define OSS_OUT_MEMORY 2148085768

#define OSS_OUT_OF_RANGE 2148085793

#define OSS_PDU_MISMATCH 2148085769

#define OSS_PDU_RANGE 2148085763

#define OSS_PDV_CODE_NOT_LINKED 2148085800

#define OSS_PDV_DLL_NOT_LINKED 2148085799

#define OSS_PER_DLL_NOT_LINKED 2148085803

#define OSS_REAL_CODE_NOT_LINKED 2148085792

#define OSS_REAL_DLL_NOT_LINKED 2148085791

#define OSS_TABLE_MISMATCH 2148085789

#define OSS_TOO_LONG 2148085776

#define OSS_TRACE_FILE_ALREADY_OPEN 2148085788

#define OSS_TYPE_NOT_SUPPORTED 2148085790

#define OSS_UNAVAIL_ENCRULES 2148085783

#define OSS_UNIMPLEMENTED 2148085785

#define PEERDIST_ERROR_ALREADY_COMPLETED 4060

#define PEERDIST_ERROR_ALREADY_EXISTS 4058

#define PEERDIST_ERROR_ALREADY_INITIALIZED 4055

#define PEERDIST_ERROR_CANNOT_PARSE_CONTENTINFO 4051

#define PEERDIST_ERROR_CONTENTINFO_VERSION_UNSUPPORTED 4050

#define PEERDIST_ERROR_INVALID_CONFIGURATION 4063

#define PEERDIST_ERROR_INVALIDATED 4057

#define PEERDIST_ERROR_MISSING_DATA 4052

#define PEERDIST_ERROR_NO_MORE 4053

#define PEERDIST_ERROR_NOT_INITIALIZED 4054

#define PEERDIST_ERROR_NOT_LICENSED 4064

#define PEERDIST_ERROR_OPERATION_NOTFOUND 4059

#define PEERDIST_ERROR_OUT_OF_BOUNDS 4061

#define PEERDIST_ERROR_SERVICE_UNAVAILABLE 4065

#define PEERDIST_ERROR_SHUTDOWN_IN_PROGRESS 4056

#define PEERDIST_ERROR_VERSION_UNSUPPORTED 4062

#define PERSIST_E_NOTSELFSIZING 2148204555

#define PERSIST_E_SIZEDEFINITE 2148204553

#define PERSIST_E_SIZEINDEFINITE 2148204554

#define PLA_E_CABAPI_FAILURE 2150629651

#define PLA_E_CONFLICT_INCL_EXCL_API 2150629637

#define PLA_E_CREDENTIALS_REQUIRED 2150629635

#define PLA_E_DC_ALREADY_EXISTS 2150629641

#define PLA_E_DC_START_WAIT_TIMEOUT 2150629643

#define PLA_E_DCS_ALREADY_EXISTS 2150629559

#define PLA_E_DCS_IN_USE 2150629546

#define PLA_E_DCS_NOT_FOUND 2150629378

#define PLA_E_DCS_NOT_RUNNING 2150629636

#define PLA_E_DCS_SINGLETON_REQUIRED 2150629634

#define PLA_E_DCS_START_WAIT_TIMEOUT 2150629642

#define PLA_E_EXE_ALREADY_CONFIGURED 2150629639

#define PLA_E_EXE_FULL_PATH_REQUIRED 2150629646

#define PLA_E_EXE_PATH_NOT_VALID 2150629640

#define PLA_E_INVALID_SESSION_NAME 2150629647

#define PLA_E_NETWORK_EXE_NOT_VALID 2150629638

#define PLA_E_NO_DUPLICATES 2150629645

#define PLA_E_NO_MIN_DISK 2150629488

#define PLA_E_PLA_CHANNEL_NOT_ENABLED 2150629648

#define PLA_E_PROPERTY_CONFLICT 2150629633

#define PLA_E_REPORT_WAIT_TIMEOUT 2150629644

#define PLA_E_RULES_MANAGER_FAILED 2150629650

#define PLA_E_TASKSCHED_CHANNEL_NOT_ENABLED 2150629649

#define PLA_E_TOO_MANY_FOLDERS 2150629445

#define PLA_S_PROPERTY_IGNORED 3145984

#define REGDB_E_BADTHREADINGMODEL 2147746134

#define REGDB_E_CLASSNOTREG 2147746132

#define REGDB_E_FIRST 2147746128

#define REGDB_E_IIDNOTREG 2147746133

#define REGDB_E_INVALIDVALUE 2147746131

#define REGDB_E_KEYMISSING 2147746130

#define REGDB_E_LAST 2147746143

#define REGDB_E_READREGDB 2147746128

#define REGDB_E_WRITEREGDB 2147746129

#define REGDB_S_FIRST 262480

#define REGDB_S_LAST 262495

#define RPC_E_ACCESS_DENIED 2147549467

#define RPC_E_ATTEMPTED_MULTITHREAD 2147549442

#define RPC_E_CALL_CANCELED 2147549186

#define RPC_E_CALL_COMPLETE 2147549463

#define RPC_E_CALL_REJECTED 2147549185

#define RPC_E_CANTCALLOUT_AGAIN 2147549201

#define RPC_E_CANTCALLOUT_INASYNCCALL 2147549188

#define RPC_E_CANTCALLOUT_INEXTERNALCALL 2147549189

#define RPC_E_CANTCALLOUT_ININPUTSYNCCALL 2147549453

#define RPC_E_CANTPOST_INSENDCALL 2147549187

#define RPC_E_CANTTRANSMIT_CALL 2147549194

#define RPC_E_CHANGED_MODE 2147549446

#define RPC_E_CLIENT_CANTMARSHAL_DATA 2147549195

#define RPC_E_CLIENT_CANTUNMARSHAL_DATA 2147549196

#define RPC_E_CLIENT_DIED 2147549192

#define RPC_E_CONNECTION_TERMINATED 2147549190

#define RPC_E_DISCONNECTED 2147549448

#define RPC_E_FAULT 2147549444

#define RPC_E_FULLSIC_REQUIRED 2147549473

#define RPC_E_INVALID_CALLDATA 2147549452

#define RPC_E_INVALID_DATA 2147549199

#define RPC_E_INVALID_DATAPACKET 2147549193

#define RPC_E_INVALID_EXTENSION 2147549458

#define RPC_E_INVALID_HEADER 2147549457

#define RPC_E_INVALID_IPID 2147549459

#define RPC_E_INVALID_OBJECT 2147549460

#define RPC_E_INVALID_OBJREF 2147549469

#define RPC_E_INVALID_PARAMETER 2147549200

#define RPC_E_INVALID_STD_NAME 2147549474

#define RPC_E_INVALIDMETHOD 2147549447

#define RPC_E_NO_CONTEXT 2147549470

#define RPC_E_NO_GOOD_SECURITY_PACKAGES 2147549466

#define RPC_E_NO_SYNC 2147549472

#define RPC_E_NOT_REGISTERED 2147549443

#define RPC_E_OUT_OF_RESOURCES 2147549441

#define RPC_E_REMOTE_DISABLED 2147549468

#define RPC_E_RETRY 2147549449

#define RPC_E_SERVER_CANTMARSHAL_DATA 2147549197

#define RPC_E_SERVER_CANTUNMARSHAL_DATA 2147549198

#define RPC_E_SERVER_DIED 2147549191

#define RPC_E_SERVER_DIED_DNE 2147549202

#define RPC_E_SERVERCALL_REJECTED 2147549451

#define RPC_E_SERVERCALL_RETRYLATER 2147549450

#define RPC_E_SERVERFAULT 2147549445

#define RPC_E_SYS_CALL_FAILED 2147549440

#define RPC_E_THREAD_NOT_INIT 2147549455

#define RPC_E_TIMEOUT 2147549471

#define RPC_E_TOO_LATE 2147549465

#define RPC_E_UNEXPECTED 2147614719

#define RPC_E_UNSECURE_CALL 2147549464

#define RPC_E_VERSION_MISMATCH 2147549456

#define RPC_E_WRONG_THREAD 2147549454

#define RPC_S_ADDRESS_ERROR 1768

#define RPC_S_ALREADY_LISTENING 1713

#define RPC_S_ALREADY_REGISTERED 1711

#define RPC_S_BINDING_HAS_NO_AUTH 1746

#define RPC_S_BINDING_INCOMPLETE 1819

#define RPC_S_CALL_CANCELLED 1818

#define RPC_S_CALL_FAILED 1726

#define RPC_S_CALL_FAILED_DNE 1727

#define RPC_S_CALL_IN_PROGRESS 1791

#define RPC_S_CALLPENDING 2147549461

#define RPC_S_CANNOT_SUPPORT 1764

#define RPC_S_CANT_CREATE_ENDPOINT 1720

#define RPC_S_COMM_FAILURE 1820

#define RPC_S_COOKIE_AUTH_FAILED 1833

#define RPC_S_DUPLICATE_ENDPOINT 1740

#define RPC_S_ENTRY_ALREADY_EXISTS 1760

#define RPC_S_ENTRY_NOT_FOUND 1761

#define RPC_S_ENTRY_TYPE_MISMATCH 1922

#define RPC_S_FP_DIV_ZERO 1769

#define RPC_S_FP_OVERFLOW 1771

#define RPC_S_FP_UNDERFLOW 1770

#define RPC_S_GROUP_MEMBER_NOT_FOUND 1898

#define RPC_S_GRP_ELT_NOT_ADDED 1928

#define RPC_S_GRP_ELT_NOT_REMOVED 1929

#define RPC_S_INCOMPLETE_NAME 1755

#define RPC_S_INTERFACE_NOT_EXPORTED 1924

#define RPC_S_INTERFACE_NOT_FOUND 1759

#define RPC_S_INTERNAL_ERROR 1766

#define RPC_S_INVALID_ASYNC_CALL 1915

#define RPC_S_INVALID_ASYNC_HANDLE 1914

#define RPC_S_INVALID_AUTH_IDENTITY 1749

#define RPC_S_INVALID_BINDING 1702

#define RPC_S_INVALID_BOUND 1734

#define RPC_S_INVALID_ENDPOINT_FORMAT 1706

#define RPC_S_INVALID_NAF_ID 1763

#define RPC_S_INVALID_NAME_SYNTAX 1736

#define RPC_S_INVALID_NET_ADDR 1707

#define RPC_S_INVALID_NETWORK_OPTIONS 1724

#define RPC_S_INVALID_OBJECT 1900

#define RPC_S_INVALID_RPC_PROTSEQ 1704

#define RPC_S_INVALID_STRING_BINDING 1700

#define RPC_S_INVALID_STRING_UUID 1705

#define RPC_S_INVALID_TAG 1733

#define RPC_S_INVALID_TIMEOUT 1709

#define RPC_S_INVALID_VERS_OPTION 1756

#define RPC_S_MAX_CALLS_TOO_SMALL 1742

#define RPC_S_NAME_SERVICE_UNAVAILABLE 1762

#define RPC_S_NO_BINDINGS 1718

#define RPC_S_NO_CALL_ACTIVE 1725

#define RPC_S_NO_CONTEXT_AVAILABLE 1765

#define RPC_S_NO_ENDPOINT_FOUND 1708

#define RPC_S_NO_ENTRY_NAME 1735

#define RPC_S_NO_INTERFACES 1817

#define RPC_S_NO_MORE_BINDINGS 1806

#define RPC_S_NO_MORE_MEMBERS 1757

#define RPC_S_NO_PRINC_NAME 1822

#define RPC_S_NO_PROTSEQS 1719

#define RPC_S_NO_PROTSEQS_REGISTERED 1714

#define RPC_S_NOT_ALL_OBJS_EXPORTED 1923

#define RPC_S_NOT_ALL_OBJS_UNEXPORTED 1758

#define RPC_S_NOT_CANCELLED 1826

#define RPC_S_NOT_LISTENING 1715

#define RPC_S_NOT_RPC_ERROR 1823

#define RPC_S_NOTHING_TO_EXPORT 1754

#define RPC_S_OBJECT_NOT_FOUND 1710

#define RPC_S_OUT_OF_RESOURCES 1721

#define RPC_S_PRF_ELT_NOT_ADDED 1926

#define RPC_S_PRF_ELT_NOT_REMOVED 1927

#define RPC_S_PROCNUM_OUT_OF_RANGE 1745

#define RPC_S_PROFILE_NOT_ADDED 1925

#define RPC_S_PROTOCOL_ERROR 1728

#define RPC_S_PROTSEQ_NOT_FOUND 1744

#define RPC_S_PROTSEQ_NOT_SUPPORTED 1703

#define RPC_S_PROXY_ACCESS_DENIED 1729

#define RPC_S_SEC_PKG_ERROR 1825

#define RPC_S_SEND_INCOMPLETE 1913

#define RPC_S_SERVER_TOO_BUSY 1723

#define RPC_S_SERVER_UNAVAILABLE 1722

#define RPC_S_STRING_TOO_LONG 1743

#define RPC_S_TYPE_ALREADY_REGISTERED 1712

#define RPC_S_UNKNOWN_AUTHN_LEVEL 1748

#define RPC_S_UNKNOWN_AUTHN_SERVICE 1747

#define RPC_S_UNKNOWN_AUTHN_TYPE 1741

#define RPC_S_UNKNOWN_AUTHZ_SERVICE 1750

#define RPC_S_UNKNOWN_IF 1717

#define RPC_S_UNKNOWN_MGR_TYPE 1716

#define RPC_S_UNSUPPORTED_AUTHN_LEVEL 1821

#define RPC_S_UNSUPPORTED_NAME_SYNTAX 1737

#define RPC_S_UNSUPPORTED_TRANS_SYN 1730

#define RPC_S_UNSUPPORTED_TYPE 1732

#define RPC_S_UUID_LOCAL_ONLY 1824

#define RPC_S_UUID_NO_ADDRESS 1739

#define RPC_S_WAITONTIMER 2147549462

#define RPC_S_WRONG_KIND_OF_BINDING 1701

#define RPC_S_ZERO_DIVIDE 1767

#define RPC_X_BAD_STUB_DATA 1783

#define RPC_X_BYTE_COUNT_TOO_SMALL 1782

#define RPC_X_ENUM_VALUE_OUT_OF_RANGE 1781

#define RPC_X_INVALID_ES_ACTION 1827

#define RPC_X_INVALID_PIPE_OBJECT 1830

#define RPC_X_NO_MORE_ENTRIES 1772

#define RPC_X_NULL_REF_POINTER 1780

#define RPC_X_PIPE_CLOSED 1916

#define RPC_X_PIPE_DISCIPLINE_ERROR 1917

#define RPC_X_PIPE_EMPTY 1918

#define RPC_X_SS_CANNOT_GET_CALL_HANDLE 1779

#define RPC_X_SS_CHAR_TRANS_OPEN_FAIL 1773

#define RPC_X_SS_CHAR_TRANS_SHORT_FILE 1774

#define RPC_X_SS_CONTEXT_DAMAGED 1777

#define RPC_X_SS_HANDLES_MISMATCH 1778

#define RPC_X_SS_IN_NULL_CONTEXT 1775

#define RPC_X_WRONG_ES_VERSION 1828

#define RPC_X_WRONG_PIPE_ORDER 1831

#define RPC_X_WRONG_PIPE_VERSION 1832

#define RPC_X_WRONG_STUB_VERSION 1829

#define S_FALSE 1

#define S_OK 0

#define SCARD_E_BAD_SEEK 2148532265

#define SCARD_E_CANCELLED 2148532226

#define SCARD_E_CANT_DISPOSE 2148532238

#define SCARD_E_CARD_UNSUPPORTED 2148532252

#define SCARD_E_CERTIFICATE_UNAVAILABLE 2148532269

#define SCARD_E_COMM_DATA_LOST 2148532271

#define SCARD_E_DIR_NOT_FOUND 2148532259

#define SCARD_E_DUPLICATE_READER 2148532251

#define SCARD_E_FILE_NOT_FOUND 2148532260

#define SCARD_E_ICC_CREATEORDER 2148532257

#define SCARD_E_ICC_INSTALLATION 2148532256

#define SCARD_E_INSUFFICIENT_BUFFER 2148532232

#define SCARD_E_INVALID_ATR 2148532245

#define SCARD_E_INVALID_CHV 2148532266

#define SCARD_E_INVALID_HANDLE 2148532227

#define SCARD_E_INVALID_PARAMETER 2148532228

#define SCARD_E_INVALID_TARGET 2148532229

#define SCARD_E_INVALID_VALUE 2148532241

#define SCARD_E_NO_ACCESS 2148532263

#define SCARD_E_NO_DIR 2148532261

#define SCARD_E_NO_FILE 2148532262

#define SCARD_E_NO_KEY_CONTAINER 2148532272

#define SCARD_E_NO_MEMORY 2148532230

#define SCARD_E_NO_PIN_CACHE 2148532275

#define SCARD_E_NO_READERS_AVAILABLE 2148532270

#define SCARD_E_NO_SERVICE 2148532253

#define SCARD_E_NO_SMARTCARD 2148532236

#define SCARD_E_NO_SUCH_CERTIFICATE 2148532268

#define SCARD_E_NOT_READY 2148532240

#define SCARD_E_NOT_TRANSACTED 2148532246

#define SCARD_E_PCI_TOO_SMALL 2148532249

#define SCARD_E_PIN_CACHE_EXPIRED 2148532274

#define SCARD_E_PROTO_MISMATCH 2148532239

#define SCARD_E_READ_ONLY_CARD 2148532276

#define SCARD_E_READER_UNAVAILABLE 2148532247

#define SCARD_E_READER_UNSUPPORTED 2148532250

#define SCARD_E_SERVER_TOO_BUSY 2148532273

#define SCARD_E_SERVICE_STOPPED 2148532254

#define SCARD_E_SHARING_VIOLATION 2148532235

#define SCARD_E_SYSTEM_CANCELLED 2148532242

#define SCARD_E_TIMEOUT 2148532234

#define SCARD_E_UNEXPECTED 2148532255

#define SCARD_E_UNKNOWN_CARD 2148532237

#define SCARD_E_UNKNOWN_READER 2148532233

#define SCARD_E_UNKNOWN_RES_MNG 2148532267

#define SCARD_E_UNSUPPORTED_FEATURE 2148532258

#define SCARD_E_WRITE_TOO_MANY 2148532264

#define SCARD_F_COMM_ERROR 2148532243

#define SCARD_F_INTERNAL_ERROR 2148532225

#define SCARD_F_UNKNOWN_ERROR 2148532244

#define SCARD_F_WAITED_TOO_LONG 2148532231

#define SCARD_P_SHUTDOWN 2148532248

#define SCARD_S_SUCCESS 0

#define SCARD_W_CACHE_ITEM_NOT_FOUND 2148532336

#define SCARD_W_CACHE_ITEM_STALE 2148532337

#define SCARD_W_CACHE_ITEM_TOO_BIG 2148532338

#define SCARD_W_CANCELLED_BY_USER 2148532334

#define SCARD_W_CARD_NOT_AUTHENTICATED 2148532335

#define SCARD_W_CHV_BLOCKED 2148532332

#define SCARD_W_EOF 2148532333

#define SCARD_W_REMOVED_CARD 2148532329

#define SCARD_W_RESET_CARD 2148532328

#define SCARD_W_SECURITY_VIOLATION 2148532330

#define SCARD_W_UNPOWERED_CARD 2148532327

#define SCARD_W_UNRESPONSIVE_CARD 2148532326

#define SCARD_W_UNSUPPORTED_CARD 2148532325

#define SCARD_W_WRONG_CHV 2148532331

#define SCHED_E_ACCOUNT_DBASE_CORRUPT 2147750673

#define SCHED_E_ACCOUNT_INFORMATION_NOT_SET 2147750671

#define SCHED_E_ACCOUNT_NAME_NOT_FOUND 2147750672

#define SCHED_E_ALREADY_RUNNING 2147750687

#define SCHED_E_CANNOT_OPEN_TASK 2147750669

#define SCHED_E_INVALID_TASK 2147750670

#define SCHED_E_INVALID_TASK_HASH 2147750689

#define SCHED_E_INVALIDVALUE 2147750680

#define SCHED_E_MALFORMEDXML 2147750682

#define SCHED_E_MISSINGNODE 2147750681

#define SCHED_E_NAMESPACE 2147750679

#define SCHED_E_NO_SECURITY_SERVICES 2147750674

#define SCHED_E_PAST_END_BOUNDARY 2147750686

#define SCHED_E_SERVICE_NOT_AVAILABLE 2147750690

#define SCHED_E_SERVICE_NOT_INSTALLED 2147750668

#define SCHED_E_SERVICE_NOT_LOCALSYSTEM 6200

#define SCHED_E_SERVICE_NOT_RUNNING 2147750677

#define SCHED_E_SERVICE_TOO_BUSY 2147750691

#define SCHED_E_START_ON_DEMAND 2147750696

#define SCHED_E_TASK_ATTEMPTED 2147750692

#define SCHED_E_TASK_DISABLED 2147750694

#define SCHED_E_TASK_NOT_READY 2147750666

#define SCHED_E_TASK_NOT_RUNNING 2147750667

#define SCHED_E_TASK_NOT_V1_COMPAT 2147750695

#define SCHED_E_TOO_MANY_NODES 2147750685

#define SCHED_E_TRIGGER_NOT_FOUND 2147750665

#define SCHED_E_UNEXPECTEDNODE 2147750678

#define SCHED_E_UNKNOWN_OBJECT_VERSION 2147750675

#define SCHED_E_UNSUPPORTED_ACCOUNT_OPTION 2147750676

#define SCHED_E_USER_NOT_LOGGED_ON 2147750688

#define SCHED_S_BATCH_LOGON_PROBLEM 267036

#define SCHED_S_EVENT_TRIGGER 267016

#define SCHED_S_SOME_TRIGGERS_FAILED 267035

#define SCHED_S_TASK_DISABLED 267010

#define SCHED_S_TASK_HAS_NOT_RUN 267011

#define SCHED_S_TASK_NO_MORE_RUNS 267012

#define SCHED_S_TASK_NO_VALID_TRIGGERS 267015

#define SCHED_S_TASK_NOT_SCHEDULED 267013

#define SCHED_S_TASK_QUEUED 267045

#define SCHED_S_TASK_READY 267008

#define SCHED_S_TASK_RUNNING 267009

#define SCHED_S_TASK_TERMINATED 267014

#define SDIAG_E_CANCELLED 2151416064

#define SDIAG_E_CANNOTRUN 2151416072

#define SDIAG_E_DISABLED 2151416070

#define SDIAG_E_MANAGEDHOST 2151416067

#define SDIAG_E_NOVERIFIER 2151416068

#define SDIAG_E_POWERSHELL 2151416066

#define SDIAG_E_RESOURCE 2151416074

#define SDIAG_E_ROOTCAUSE 2151416075

#define SDIAG_E_SCRIPT 2151416065

#define SDIAG_E_TRUST 2151416071

#define SDIAG_E_VERSION 2151416073

#define SDIAG_S_CANNOTRUN 3932421

#define SEC_E_ALGORITHM_MISMATCH 2148074289

#define SEC_E_BAD_BINDINGS 2148074310

#define SEC_E_BAD_PKGID 2148074262

#define SEC_E_BUFFER_TOO_SMALL 2148074273

#define SEC_E_CANNOT_INSTALL 2148074247

#define SEC_E_CANNOT_PACK 2148074249

#define SEC_E_CERT_EXPIRED 2148074280

#define SEC_E_CERT_UNKNOWN 2148074279

#define SEC_E_CERT_WRONG_USAGE 2148074313

#define SEC_E_CONTEXT_EXPIRED 2148074263

#define SEC_E_CROSSREALM_DELEGATION_FAILURE 2148074327

#define SEC_E_CRYPTO_SYSTEM_INVALID 2148074295

#define SEC_E_DECRYPT_FAILURE 2148074288

#define SEC_E_DELEGATION_POLICY 2148074334

#define SEC_E_DELEGATION_REQUIRED 2148074309

#define SEC_E_DOWNGRADE_DETECTED 2148074320

#define SEC_E_ENCRYPT_FAILURE 2148074281

#define SEC_E_ILLEGAL_MESSAGE 2148074278

#define SEC_E_INCOMPLETE_CREDENTIALS 2148074272

#define SEC_E_INCOMPLETE_MESSAGE 2148074264

#define SEC_E_INSUFFICIENT_MEMORY 2148074240

#define SEC_E_INTERNAL_ERROR 2148074244

#define SEC_E_INVALID_HANDLE 2148074241

#define SEC_E_INVALID_PARAMETER 2148074333

#define SEC_E_INVALID_TOKEN 2148074248

#define SEC_E_ISSUING_CA_UNTRUSTED 2148074322

#define SEC_E_ISSUING_CA_UNTRUSTED_KDC 2148074329

#define SEC_E_KDC_CERT_EXPIRED 2148074330

#define SEC_E_KDC_CERT_REVOKED 2148074331

#define SEC_E_KDC_INVALID_REQUEST 2148074304

#define SEC_E_KDC_UNABLE_TO_REFER 2148074305

#define SEC_E_KDC_UNKNOWN_ETYPE 2148074306

#define SEC_E_LOGON_DENIED 2148074252

#define SEC_E_MAX_REFERRALS_EXCEEDED 2148074296

#define SEC_E_MESSAGE_ALTERED 2148074255

#define SEC_E_MULTIPLE_ACCOUNTS 2148074311

#define SEC_E_MUST_BE_KDC 2148074297

#define SEC_E_MUTUAL_AUTH_FAILED 2148074339

#define SEC_E_NO_AUTHENTICATING_AUTHORITY 2148074257

#define SEC_E_NO_CONTEXT 2148074337

#define SEC_E_NO_CREDENTIALS 2148074254

#define SEC_E_NO_IMPERSONATION 2148074251

#define SEC_E_NO_IP_ADDRESSES 2148074293

#define SEC_E_NO_KERB_KEY 2148074312

#define SEC_E_NO_PA_DATA 2148074300

#define SEC_E_NO_S4U_PROT_SUPPORT 2148074326

#define SEC_E_NO_SPM 2148074244

#define SEC_E_NO_TGT_REPLY 2148074292

#define SEC_E_NOT_OWNER 2148074246

#define SEC_E_NOT_SUPPORTED 2148074242

#define SEC_E_OK 0

#define SEC_E_OUT_OF_SEQUENCE 2148074256

#define SEC_E_PKINIT_CLIENT_FAILURE 2148074324

#define SEC_E_PKINIT_NAME_MISMATCH 2148074301

#define SEC_E_PKU2U_CERT_FAILURE 2148074338

#define SEC_E_POLICY_NLTM_ONLY 2148074335

#define SEC_E_QOP_NOT_SUPPORTED 2148074250

#define SEC_E_REVOCATION_OFFLINE_C 2148074323

#define SEC_E_REVOCATION_OFFLINE_KDC 2148074328

#define SEC_E_SECPKG_NOT_FOUND 2148074245

#define SEC_E_SECURITY_QOS_FAILED 2148074290

#define SEC_E_SHUTDOWN_IN_PROGRESS 2148074303

#define SEC_E_SMARTCARD_CERT_EXPIRED 2148074325

#define SEC_E_SMARTCARD_CERT_REVOKED 2148074321

#define SEC_E_SMARTCARD_LOGON_REQUIRED 2148074302

#define SEC_E_STRONG_CRYPTO_NOT_SUPPORTED 2148074298

#define SEC_E_TARGET_UNKNOWN 2148074243

#define SEC_E_TIME_SKEW 2148074276

#define SEC_E_TOO_MANY_PRINCIPALS 2148074299

#define SEC_E_UNFINISHED_CONTEXT_DELETED 2148074291

#define SEC_E_UNKNOWN_CREDENTIALS 2148074253

#define SEC_E_UNSUPPORTED_FUNCTION 2148074242

#define SEC_E_UNSUPPORTED_PREAUTH 2148074307

#define SEC_E_UNTRUSTED_ROOT 2148074277

#define SEC_E_WRONG_CREDENTIAL_HANDLE 2148074294

#define SEC_E_WRONG_PRINCIPAL 2148074274

#define SEC_I_COMPLETE_AND_CONTINUE 590612

#define SEC_I_COMPLETE_NEEDED 590611

#define SEC_I_CONTEXT_EXPIRED 590615

#define SEC_I_CONTINUE_NEEDED 590610

#define SEC_I_INCOMPLETE_CREDENTIALS 590624

#define SEC_I_LOCAL_LOGON 590613

#define SEC_I_NO_LSA_CONTEXT 590627

#define SEC_I_NO_RENEGOTIATION 590688

#define SEC_I_RENEGOTIATE 590625

#define SEC_I_SIGNATURE_NEEDED 590684

#define SEVERITY_ERROR 1

#define SEVERITY_SUCCESS 0

#define SPAPI_E_AUTHENTICODE_DISALLOWED 2148467264

#define SPAPI_E_AUTHENTICODE_PUBLISHER_NOT_TRUSTED 2148467267

#define SPAPI_E_AUTHENTICODE_TRUST_NOT_ESTABLISHED 2148467266

#define SPAPI_E_AUTHENTICODE_TRUSTED_PUBLISHER 2148467265

#define SPAPI_E_BAD_INTERFACE_INSTALLSECT 2148467229

#define SPAPI_E_BAD_SECTION_NAME_LINE 2148466689

#define SPAPI_E_BAD_SERVICE_INSTALLSECT 2148467223

#define SPAPI_E_CANT_LOAD_CLASS_ICON 2148467212

#define SPAPI_E_CANT_REMOVE_DEVINST 2148467250

#define SPAPI_E_CLASS_MISMATCH 2148467201

#define SPAPI_E_DEVICE_INSTALL_BLOCKED 2148467272

#define SPAPI_E_DEVICE_INSTALLER_NOT_READY 2148467270

#define SPAPI_E_DEVICE_INTERFACE_ACTIVE 2148467227

#define SPAPI_E_DEVICE_INTERFACE_REMOVED 2148467228

#define SPAPI_E_DEVINFO_DATA_LOCKED 2148467219

#define SPAPI_E_DEVINFO_LIST_LOCKED 2148467218

#define SPAPI_E_DEVINFO_NOT_REGISTERED 2148467208

#define SPAPI_E_DEVINST_ALREADY_EXISTS 2148467207

#define SPAPI_E_DEVINSTALL_QUEUE_NONNATIVE 2148467248

#define SPAPI_E_DI_BAD_PATH 2148467220

#define SPAPI_E_DI_DO_DEFAULT 2148467214

#define SPAPI_E_DI_DONT_INSTALL 2148467243

#define SPAPI_E_DI_FUNCTION_OBSOLETE 2148467262

#define SPAPI_E_DI_NOFILECOPY 2148467215

#define SPAPI_E_DI_POSTPROCESSING_REQUIRED 2148467238

#define SPAPI_E_DRIVER_INSTALL_BLOCKED 2148467273

#define SPAPI_E_DRIVER_NONNATIVE 2148467252

#define SPAPI_E_DRIVER_STORE_ADD_FAILED 2148467271

#define SPAPI_E_DRIVER_STORE_DELETE_FAILED 2148467276

#define SPAPI_E_DUPLICATE_FOUND 2148467202

#define SPAPI_E_ERROR_NOT_INSTALLED 2148470784

#define SPAPI_E_EXPECTED_SECTION_NAME 2148466688

#define SPAPI_E_FILE_HASH_NOT_IN_CATALOG 2148467275

#define SPAPI_E_FILEQUEUE_LOCKED 2148467222

#define SPAPI_E_GENERAL_SYNTAX 2148466691

#define SPAPI_E_IN_WOW64 2148467253

#define SPAPI_E_INCORRECTLY_COPIED_INF 2148467255

#define SPAPI_E_INF_IN_USE_BY_DEVICES 2148467261

#define SPAPI_E_INVALID_CLASS 2148467206

#define SPAPI_E_INVALID_CLASS_INSTALLER 2148467213

#define SPAPI_E_INVALID_COINSTALLER 2148467239

#define SPAPI_E_INVALID_DEVINST_NAME 2148467205

#define SPAPI_E_INVALID_FILTER_DRIVER 2148467244

#define SPAPI_E_INVALID_HWPROFILE 2148467216

#define SPAPI_E_INVALID_INF_LOGCONFIG 2148467242

#define SPAPI_E_INVALID_MACHINENAME 2148467232

#define SPAPI_E_INVALID_PROPPAGE_PROVIDER 2148467236

#define SPAPI_E_INVALID_REFERENCE_STRING 2148467231

#define SPAPI_E_INVALID_REG_PROPERTY 2148467209

#define SPAPI_E_INVALID_TARGET 2148467251

#define SPAPI_E_KEY_DOES_NOT_EXIST 2148467204

#define SPAPI_E_LINE_NOT_FOUND 2148466946

#define SPAPI_E_MACHINE_UNAVAILABLE 2148467234

#define SPAPI_E_NO_ASSOCIATED_CLASS 2148467200

#define SPAPI_E_NO_ASSOCIATED_SERVICE 2148467225

#define SPAPI_E_NO_AUTHENTICODE_CATALOG 2148467263

#define SPAPI_E_NO_BACKUP 2148466947

#define SPAPI_E_NO_CATALOG_FOR_OEM_INF 2148467247

#define SPAPI_E_NO_CLASS_DRIVER_LIST 2148467224

#define SPAPI_E_NO_CLASSINSTALL_PARAMS 2148467221

#define SPAPI_E_NO_COMPAT_DRIVERS 2148467240

#define SPAPI_E_NO_CONFIGMGR_SERVICES 2148467235

#define SPAPI_E_NO_DEFAULT_DEVICE_INTERFACE 2148467226

#define SPAPI_E_NO_DEVICE_ICON 2148467241

#define SPAPI_E_NO_DEVICE_SELECTED 2148467217

#define SPAPI_E_NO_DRIVER_SELECTED 2148467203

#define SPAPI_E_NO_INF 2148467210

#define SPAPI_E_NO_SUCH_DEVICE_INTERFACE 2148467237

#define SPAPI_E_NO_SUCH_DEVINST 2148467211

#define SPAPI_E_NO_SUCH_INTERFACE_CLASS 2148467230

#define SPAPI_E_NON_WINDOWS_DRIVER 2148467246

#define SPAPI_E_NON_WINDOWS_NT_DRIVER 2148467245

#define SPAPI_E_NOT_AN_INSTALLED_OEM_INF 2148467260

#define SPAPI_E_NOT_DISABLEABLE 2148467249

#define SPAPI_E_ONLY_VALIDATE_VIA_AUTHENTICODE 2148467269

#define SPAPI_E_PNP_REGISTRY_ERROR 2148467258

#define SPAPI_E_REMOTE_COMM_FAILURE 2148467233

#define SPAPI_E_REMOTE_REQUEST_UNSUPPORTED 2148467259

#define SPAPI_E_SCE_DISABLED 2148467256

#define SPAPI_E_SECTION_NAME_TOO_LONG 2148466690

#define SPAPI_E_SECTION_NOT_FOUND 2148466945

#define SPAPI_E_SET_SYSTEM_RESTORE_POINT 2148467254

#define SPAPI_E_SIGNATURE_OSATTRIBUTE_MISMATCH 2148467268

#define SPAPI_E_UNKNOWN_EXCEPTION 2148467257

#define SPAPI_E_UNRECOVERABLE_STACK_OVERFLOW 2148467456

#define SPAPI_E_WRONG_INF_STYLE 2148466944

#define SPAPI_E_WRONG_INF_TYPE 2148467274

#define STG_E_ABNORMALAPIEXIT 2147680506

#define STG_E_ACCESSDENIED 2147680261

#define STG_E_BADBASEADDRESS 2147680528

#define STG_E_CANTSAVE 2147680515

#define STG_E_CSS_AUTHENTICATION_FAILURE 2147681030

#define STG_E_CSS_KEY_NOT_ESTABLISHED 2147681032

#define STG_E_CSS_KEY_NOT_PRESENT 2147681031

#define STG_E_CSS_REGION_MISMATCH 2147681034

#define STG_E_CSS_SCRAMBLED_SECTOR 2147681033

#define STG_E_DISKISWRITEPROTECTED 2147680275

#define STG_E_DOCFILECORRUPT 2147680521

#define STG_E_DOCFILETOOLARGE 2147680529

#define STG_E_EXTANTMARSHALLINGS 2147680520

#define STG_E_FILEALREADYEXISTS 2147680336

#define STG_E_FILENOTFOUND 2147680258

#define STG_E_INCOMPLETE 2147680769

#define STG_E_INSUFFICIENTMEMORY 2147680264

#define STG_E_INUSE 2147680512

#define STG_E_INVALIDFLAG 2147680511

#define STG_E_INVALIDFUNCTION 2147680257

#define STG_E_INVALIDHANDLE 2147680262

#define STG_E_INVALIDHEADER 2147680507

#define STG_E_INVALIDNAME 2147680508

#define STG_E_INVALIDPARAMETER 2147680343

#define STG_E_INVALIDPOINTER 2147680265

#define STG_E_LOCKVIOLATION 2147680289

#define STG_E_MEDIUMFULL 2147680368

#define STG_E_NOMOREFILES 2147680274

#define STG_E_NOTCURRENT 2147680513

#define STG_E_NOTFILEBASEDSTORAGE 2147680519

#define STG_E_NOTSIMPLEFORMAT 2147680530

#define STG_E_OLDDLL 2147680517

#define STG_E_OLDFORMAT 2147680516

#define STG_E_PATHNOTFOUND 2147680259

#define STG_E_PROPSETMISMATCHED 2147680496

#define STG_E_READFAULT 2147680286

#define STG_E_RESETS_EXHAUSTED 2147681035

#define STG_E_REVERTED 2147680514

#define STG_E_SEEKERROR 2147680281

#define STG_E_SHAREREQUIRED 2147680518

#define STG_E_SHAREVIOLATION 2147680288

#define STG_E_STATUS_COPY_PROTECTION_FAILURE 2147681029

#define STG_E_TERMINATED 2147680770

#define STG_E_TOOMANYOPENFILES 2147680260

#define STG_E_UNIMPLEMENTEDFUNCTION 2147680510

#define STG_E_UNKNOWN 2147680509

#define STG_E_WRITEFAULT 2147680285

#define STG_S_BLOCK 197121

#define STG_S_CANNOTCONSOLIDATE 197126

#define STG_S_CONSOLIDATIONFAILED 197125

#define STG_S_CONVERTED 197120

#define STG_S_MONITORING 197123

#define STG_S_MULTIPLEOPENS 197124

#define STG_S_RETRYNOW 197122

#define TBS_E_BAD_PARAMETER 2150121474

#define TBS_E_BUFFER_TOO_LARGE 2150121486

#define TBS_E_COMMAND_CANCELED 2150121485

#define TBS_E_INSUFFICIENT_BUFFER 2150121477

#define TBS_E_INTERNAL_ERROR 2150121473

#define TBS_E_INVALID_CONTEXT 2150121476

#define TBS_E_INVALID_CONTEXT_PARAM 2150121479

#define TBS_E_INVALID_OUTPUT_POINTER 2150121475

#define TBS_E_IOERROR 2150121478

#define TBS_E_NO_EVENT_LOG 2150121489

#define TBS_E_PPI_NOT_SUPPORTED 2150121484

#define TBS_E_SERVICE_DISABLED 2150121488

#define TBS_E_SERVICE_NOT_RUNNING 2150121480

#define TBS_E_SERVICE_START_PENDING 2150121483

#define TBS_E_TOO_MANY_RESOURCES 2150121482

#define TBS_E_TOO_MANY_TBS_CONTEXTS 2150121481

#define TBS_E_TPM_NOT_FOUND 2150121487

#define TBSIMP_E_BUFFER_TOO_SMALL 2150171136

#define TBSIMP_E_CLEANUP_FAILED 2150171137

#define TBSIMP_E_COMMAND_CANCELED 2150171147

#define TBSIMP_E_COMMAND_FAILED 2150171153

#define TBSIMP_E_DUPLICATE_VHANDLE 2150171142

#define TBSIMP_E_HASH_BAD_KEY 2150171141

#define TBSIMP_E_HASH_TABLE_FULL 2150171158

#define TBSIMP_E_INVALID_CONTEXT_HANDLE 2150171138

#define TBSIMP_E_INVALID_CONTEXT_PARAM 2150171139

#define TBSIMP_E_INVALID_OUTPUT_POINTER 2150171143

#define TBSIMP_E_INVALID_PARAMETER 2150171144

#define TBSIMP_E_INVALID_RESOURCE 2150171156

#define TBSIMP_E_LIST_NO_MORE_ITEMS 2150171149

#define TBSIMP_E_LIST_NOT_FOUND 2150171150

#define TBSIMP_E_NO_EVENT_LOG 2150171163

#define TBSIMP_E_NOT_ENOUGH_SPACE 2150171151

#define TBSIMP_E_NOT_ENOUGH_TPM_CONTEXTS 2150171152

#define TBSIMP_E_NOTHING_TO_UNLOAD 2150171157

#define TBSIMP_E_OUT_OF_MEMORY 2150171148

#define TBSIMP_E_PPI_NOT_SUPPORTED 2150171161

#define TBSIMP_E_RESOURCE_EXPIRED 2150171155

#define TBSIMP_E_RPC_INIT_FAILED 2150171145

#define TBSIMP_E_SCHEDULER_NOT_RUNNING 2150171146

#define TBSIMP_E_TOO_MANY_RESOURCES 2150171160

#define TBSIMP_E_TOO_MANY_TBS_CONTEXTS 2150171159

#define TBSIMP_E_TPM_ERROR 2150171140

#define TBSIMP_E_TPM_INCOMPATIBLE 2150171162

#define TBSIMP_E_UNKNOWN_ORDINAL 2150171154

#define TPM_E_AREA_LOCKED 2150105148

#define TPM_E_AUDITFAIL_SUCCESSFUL 2150105137

#define TPM_E_AUDITFAIL_UNSUCCESSFUL 2150105136

#define TPM_E_AUDITFAILURE 2150105092

#define TPM_E_AUTH2FAIL 2150105117

#define TPM_E_AUTH_CONFLICT 2150105147

#define TPM_E_AUTHFAIL 2150105089

#define TPM_E_BAD_ATTRIBUTES 2150105154

#define TPM_E_BAD_COUNTER 2150105157

#define TPM_E_BAD_DATASIZE 2150105131

#define TPM_E_BAD_DELEGATE 2150105177

#define TPM_E_BAD_HANDLE 2150105176

#define TPM_E_BAD_KEY_PROPERTY 2150105128

#define TPM_E_BAD_LOCALITY 2150105149

#define TPM_E_BAD_MIGRATION 2150105129

#define TPM_E_BAD_MODE 2150105132

#define TPM_E_BAD_ORDINAL 2150105098

#define TPM_E_BAD_PARAM_SIZE 2150105113

#define TPM_E_BAD_PARAMETER 2150105091

#define TPM_E_BAD_PRESENCE 2150105133

#define TPM_E_BAD_SCHEME 2150105130

#define TPM_E_BAD_SIGNATURE 2150105186

#define TPM_E_BAD_TYPE 2150105140

#define TPM_E_BAD_VERSION 2150105134

#define TPM_E_BADCONTEXT 2150105178

#define TPM_E_BADINDEX 2150105090

#define TPM_E_BADTAG 2150105118

#define TPM_E_CLEAR_DISABLED 2150105093

#define TPM_E_COMMAND_BLOCKED 2150106112

#define TPM_E_CONTEXT_GAP 2150105159

#define TPM_E_DAA_INPUT_DATA0 2150105169

#define TPM_E_DAA_INPUT_DATA1 2150105170

#define TPM_E_DAA_ISSUER_SETTINGS 2150105171

#define TPM_E_DAA_ISSUER_VALIDITY 2150105174

#define TPM_E_DAA_RESOURCES 2150105168

#define TPM_E_DAA_STAGE 2150105173

#define TPM_E_DAA_TPM_SETTINGS 2150105172

#define TPM_E_DAA_WRONG_W 2150105175

#define TPM_E_DEACTIVATED 2150105094

#define TPM_E_DECRYPT_ERROR 2150105121

#define TPM_E_DEFEND_LOCK_RUNNING 2150107139

#define TPM_E_DELEGATE_ADMIN 2150105165

#define TPM_E_DELEGATE_FAMILY 2150105164

#define TPM_E_DELEGATE_LOCK 2150105163

#define TPM_E_DISABLED 2150105095

#define TPM_E_DISABLED_CMD 2150105096

#define TPM_E_DOING_SELFTEST 2150107138

#define TPM_E_DUPLICATE_VHANDLE 2150106114

#define TPM_E_EMBEDDED_COMMAND_BLOCKED 2150106115

#define TPM_E_EMBEDDED_COMMAND_UNSUPPORTED 2150106116

#define TPM_E_ENCRYPT_ERROR 2150105120

#define TPM_E_ERROR_MASK 2150105088

#define TPM_E_FAIL 2150105097

#define TPM_E_FAILEDSELFTEST 2150105116

#define TPM_E_FAMILYCOUNT 2150105152

#define TPM_E_INAPPROPRIATE_ENC 2150105102

#define TPM_E_INAPPROPRIATE_SIG 2150105127

#define TPM_E_INSTALL_DISABLED 2150105099

#define TPM_E_INVALID_AUTHHANDLE 2150105122

#define TPM_E_INVALID_FAMILY 2150105143

#define TPM_E_INVALID_HANDLE 2150106113

#define TPM_E_INVALID_KEYHANDLE 2150105100

#define TPM_E_INVALID_KEYUSAGE 2150105124

#define TPM_E_INVALID_PCR_INFO 2150105104

#define TPM_E_INVALID_POSTINIT 2150105126

#define TPM_E_INVALID_RESOURCE 2150105141

#define TPM_E_INVALID_STRUCTURE 2150105155

#define TPM_E_IOERROR 2150105119

#define TPM_E_KEY_NOTSUPPORTED 2150105146

#define TPM_E_KEY_OWNER_CONTROL 2150105156

#define TPM_E_KEYNOTFOUND 2150105101

#define TPM_E_MA_AUTHORITY 2150105183

#define TPM_E_MA_DESTINATION 2150105181

#define TPM_E_MA_SOURCE 2150105182

#define TPM_E_MA_TICKET_SIGNATURE 2150105180

#define TPM_E_MAXNVWRITES 2150105160

#define TPM_E_MIGRATEFAIL 2150105103

#define TPM_E_NEEDS_SELFTEST 2150107137

#define TPM_E_NO_ENDORSEMENT 2150105123

#define TPM_E_NO_NV_PERMISSION 2150105144

#define TPM_E_NO_WRAP_TRANSPORT 2150105135

#define TPM_E_NOCONTEXTSPACE 2150105187

#define TPM_E_NOOPERATOR 2150105161

#define TPM_E_NOSPACE 2150105105

#define TPM_E_NOSRK 2150105106

#define TPM_E_NOT_FULLWRITE 2150105158

#define TPM_E_NOTFIPS 2150105142

#define TPM_E_NOTLOCAL 2150105139

#define TPM_E_NOTRESETABLE 2150105138

#define TPM_E_NOTSEALED_BLOB 2150105107

#define TPM_E_OWNER_CONTROL 2150105167

#define TPM_E_OWNER_SET 2150105108

#define TPM_E_PER_NOWRITE 2150105151

#define TPM_E_PERMANENTEK 2150105185

#define TPM_E_PPI_ACPI_FAILURE 2150171392

#define TPM_E_PPI_BIOS_FAILURE 2150171394

#define TPM_E_PPI_NOT_SUPPORTED 2150171395

#define TPM_E_PPI_USER_ABORT 2150171393

#define TPM_E_READ_ONLY 2150105150

#define TPM_E_REQUIRES_SIGN 2150105145

#define TPM_E_RESOURCEMISSING 2150105162

#define TPM_E_RESOURCES 2150105109

#define TPM_E_RETRY 2150107136

#define TPM_E_SHA_ERROR 2150105115

#define TPM_E_SHA_THREAD 2150105114

#define TPM_E_SHORTRANDOM 2150105110

#define TPM_E_SIZE 2150105111

#define TPM_E_TOOMANYCONTEXTS 2150105179

#define TPM_E_TRANSPORT_NOTEXCLUSIVE 2150105166

#define TPM_E_WRITE_LOCKED 2150105153

#define TPM_E_WRONG_ENTITYTYPE 2150105125

#define TPM_E_WRONGPCRVAL 2150105112

#define TPMAPI_E_ACCESS_DENIED 2150170888

#define TPMAPI_E_AUTHORIZATION_FAILED 2150170889

#define TPMAPI_E_BUFFER_TOO_SMALL 2150170886

#define TPMAPI_E_EMPTY_TCG_LOG 2150170906

#define TPMAPI_E_ENCRYPTION_FAILED 2150170896

#define TPMAPI_E_FIPS_RNG_CHECK_FAILED 2150170905

#define TPMAPI_E_INTERNAL_ERROR 2150170887

#define TPMAPI_E_INVALID_CONTEXT_HANDLE 2150170890

#define TPMAPI_E_INVALID_CONTEXT_PARAMS 2150170901

#define TPMAPI_E_INVALID_DELEGATE_BLOB 2150170900

#define TPMAPI_E_INVALID_ENCODING 2150170894

#define TPMAPI_E_INVALID_KEY_BLOB 2150170902

#define TPMAPI_E_INVALID_KEY_PARAMS 2150170897

#define TPMAPI_E_INVALID_KEY_SIZE 2150170895

#define TPMAPI_E_INVALID_MIGRATION_AUTHORIZATION_BLOB 2150170898

#define TPMAPI_E_INVALID_OUTPUT_POINTER 2150170883

#define TPMAPI_E_INVALID_OWNER_AUTH 2150170904

#define TPMAPI_E_INVALID_PARAMETER 2150170884

#define TPMAPI_E_INVALID_PCR_DATA 2150170903

#define TPMAPI_E_INVALID_PCR_INDEX 2150170899

#define TPMAPI_E_INVALID_STATE 2150170880

#define TPMAPI_E_INVALID_TCG_LOG_ENTRY 2150170907

#define TPMAPI_E_MESSAGE_TOO_LARGE 2150170893

#define TPMAPI_E_NOT_ENOUGH_DATA 2150170881

#define TPMAPI_E_OUT_OF_MEMORY 2150170885

#define TPMAPI_E_TBS_COMMUNICATION_ERROR 2150170891

#define TPMAPI_E_TCG_INVALID_DIGEST_ENTRY 2150170909

#define TPMAPI_E_TCG_SEPARATOR_ABSENT 2150170908

#define TPMAPI_E_TOO_MUCH_DATA 2150170882

#define TPMAPI_E_TPM_COMMAND_ERROR 2150170892

#define TRUST_E_ACTION_UNKNOWN 2148204546

#define TRUST_E_BAD_DIGEST 2148098064

#define TRUST_E_BASIC_CONSTRAINTS 2148098073

#define TRUST_E_CERT_SIGNATURE 2148098052

#define TRUST_E_COUNTER_SIGNER 2148098051

#define TRUST_E_EXPLICIT_DISTRUST 2148204817

#define TRUST_E_FAIL 2148204811

#define TRUST_E_FINANCIAL_CRITERIA 2148098078

#define TRUST_E_NO_SIGNER_CERT 2148098050

#define TRUST_E_NOSIGNATURE 2148204800

#define TRUST_E_PROVIDER_UNKNOWN 2148204545

#define TRUST_E_SUBJECT_FORM_UNKNOWN 2148204547

#define TRUST_E_SUBJECT_NOT_TRUSTED 2148204548

#define TRUST_E_SYSTEM_ERROR 2148098049

#define TRUST_E_TIME_STAMP 2148098053

#define TYPE_E_AMBIGUOUSNAME 2147647532

#define TYPE_E_BADMODULEKIND 2147649725

#define TYPE_E_BUFFERTOOSMALL 2147647510

#define TYPE_E_CANTCREATETMPFILE 2147650723

#define TYPE_E_CANTLOADLIBRARY 2147654730

#define TYPE_E_CIRCULARTYPE 2147654788

#define TYPE_E_DLLFUNCTIONNOTFOUND 2147647535

#define TYPE_E_DUPLICATEID 2147649734

#define TYPE_E_ELEMENTNOTFOUND 2147647531

#define TYPE_E_FIELDNOTFOUND 2147647511

#define TYPE_E_INCONSISTENTPROPFUNCS 2147654787

#define TYPE_E_INVALIDID 2147649743

#define TYPE_E_INVALIDSTATE 2147647529

#define TYPE_E_INVDATAREAD 2147647512

#define TYPE_E_IOERROR 2147650722

#define TYPE_E_LIBNOTREGISTERED 2147647517

#define TYPE_E_NAMECONFLICT 2147647533

#define TYPE_E_OUTOFBOUNDS 2147650721

#define TYPE_E_QUALIFIEDNAMEDISALLOWED 2147647528

#define TYPE_E_REGISTRYACCESS 2147647516

#define TYPE_E_SIZETOOBIG 2147649733

#define TYPE_E_TYPEMISMATCH 2147650720

#define TYPE_E_UNDEFINEDTYPE 2147647527

#define TYPE_E_UNKNOWNLCID 2147647534

#define TYPE_E_UNSUPFORMAT 2147647513

#define TYPE_E_WRONGTYPEKIND 2147647530

#define UI_E_AMBIGUOUS_MATCH 2150236170

#define UI_E_BOOLEAN_EXPECTED 2150236168

#define UI_E_CREATE_FAILED 2150236161

#define UI_E_DIFFERENT_OWNER 2150236169

#define UI_E_END_KEYFRAME_NOT_DETERMINED 2150236420

#define UI_E_FP_OVERFLOW 2150236171

#define UI_E_ILLEGAL_REENTRANCY 2150236163

#define UI_E_INVALID_OUTPUT 2150236167

#define UI_E_LOOPS_OVERLAP 2150236421

#define UI_E_OBJECT_SEALED 2150236164

#define UI_E_SHUTDOWN_CALLED 2150236162

#define UI_E_START_KEYFRAME_AFTER_END 2150236419

#define UI_E_STORYBOARD_ACTIVE 2150236417

#define UI_E_STORYBOARD_NOT_PLAYING 2150236418

#define UI_E_TIME_BEFORE_LAST_UPDATE 2150236425

#define UI_E_TIMER_CLIENT_ALREADY_CONNECTED 2150236426

#define UI_E_TRANSITION_ALREADY_USED 2150236422

#define UI_E_TRANSITION_ECLIPSED 2150236424

#define UI_E_TRANSITION_NOT_IN_STORYBOARD 2150236423

#define UI_E_VALUE_NOT_DETERMINED 2150236166

#define UI_E_VALUE_NOT_SET 2150236165

#define UI_E_WRONG_THREAD 2150236172

#define VIEW_E_DRAW 2147746112

#define VIEW_E_FIRST 2147746112

#define VIEW_E_LAST 2147746127

#define VIEW_S_ALREADY_FROZEN 262464

#define VIEW_S_FIRST 262464

#define VIEW_S_LAST 262479

#define WAIT_TIMEOUT 258

#define WARNING_IPSEC_MM_POLICY_PRUNED 13024

#define WARNING_IPSEC_QM_POLICY_PRUNED 13025

#define WS_E_ADDRESS_IN_USE 2151481355

#define WS_E_ADDRESS_NOT_AVAILABLE 2151481356

#define WS_E_ENDPOINT_ACCESS_DENIED 2151481349

#define WS_E_ENDPOINT_ACTION_NOT_SUPPORTED 2151481361

#define WS_E_ENDPOINT_DISCONNECTED 2151481364

#define WS_E_ENDPOINT_FAILURE 2151481359

#define WS_E_ENDPOINT_FAULT_RECEIVED 2151481363

#define WS_E_ENDPOINT_NOT_AVAILABLE 2151481358

#define WS_E_ENDPOINT_NOT_FOUND 2151481357

#define WS_E_ENDPOINT_TOO_BUSY 2151481362

#define WS_E_ENDPOINT_UNREACHABLE 2151481360

#define WS_E_INVALID_ENDPOINT_URL 2151481376

#define WS_E_INVALID_FORMAT 2151481344

#define WS_E_INVALID_OPERATION 2151481347

#define WS_E_NO_TRANSLATION_AVAILABLE 2151481353

#define WS_E_NOT_SUPPORTED 2151481367

#define WS_E_NUMERIC_OVERFLOW 2151481346

#define WS_E_OBJECT_FAULTED 2151481345

#define WS_E_OPERATION_ABANDONED 2151481351

#define WS_E_OPERATION_ABORTED 2151481348

#define WS_E_OPERATION_TIMED_OUT 2151481350

#define WS_E_OTHER 2151481377

#define WS_E_PROXY_ACCESS_DENIED 2151481366

#define WS_E_PROXY_FAILURE 2151481365

#define WS_E_PROXY_REQUIRES_BASIC_AUTH 2151481368

#define WS_E_PROXY_REQUIRES_DIGEST_AUTH 2151481369

#define WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH 2151481371

#define WS_E_PROXY_REQUIRES_NTLM_AUTH 2151481370

#define WS_E_QUOTA_EXCEEDED 2151481352

#define WS_E_SECURITY_SYSTEM_FAILURE 2151481379

#define WS_E_SECURITY_TOKEN_EXPIRED 2151481378

#define WS_E_SECURITY_VERIFICATION_FAILURE 2151481354

#define WS_E_SERVER_REQUIRES_BASIC_AUTH 2151481372

#define WS_E_SERVER_REQUIRES_DIGEST_AUTH 2151481373

#define WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH 2151481375

#define WS_E_SERVER_REQUIRES_NTLM_AUTH 2151481374

#define WS_S_ASYNC 3997696

#define WS_S_END 3997697

#define WSA_E_CANCELLED 10111

#define WSA_E_NO_MORE 10110

#define WSA_IPSEC_NAME_POLICY_ERROR 11033

#define WSA_QOS_ADMISSION_FAILURE 11010

#define WSA_QOS_BAD_OBJECT 11013

#define WSA_QOS_BAD_STYLE 11012

#define WSA_QOS_EFILTERCOUNT 11021

#define WSA_QOS_EFILTERSTYLE 11019

#define WSA_QOS_EFILTERTYPE 11020

#define WSA_QOS_EFLOWCOUNT 11023

#define WSA_QOS_EFLOWDESC 11026

#define WSA_QOS_EFLOWSPEC 11017

#define WSA_QOS_EOBJLENGTH 11022

#define WSA_QOS_EPOLICYOBJ 11025

#define WSA_QOS_EPROVSPECBUF 11018

#define WSA_QOS_EPSFILTERSPEC 11028

#define WSA_QOS_EPSFLOWSPEC 11027

#define WSA_QOS_ESDMODEOBJ 11029

#define WSA_QOS_ESERVICETYPE 11016

#define WSA_QOS_ESHAPERATEOBJ 11030

#define WSA_QOS_EUNKOWNPSOBJ 11024

#define WSA_QOS_GENERIC_ERROR 11015

#define WSA_QOS_NO_RECEIVERS 11008

#define WSA_QOS_NO_SENDERS 11007

#define WSA_QOS_POLICY_FAILURE 11011

#define WSA_QOS_RECEIVERS 11005

#define WSA_QOS_REQUEST_CONFIRMED 11009

#define WSA_QOS_RESERVED_PETYPE 11031

#define WSA_QOS_SENDERS 11006

#define WSA_QOS_TRAFFIC_CTRL_ERROR 11014

#define WSA_SECURE_HOST_NOT_FOUND 11032

#define WSABASEERR 10000

#define WSAEACCES 10013

#define WSAEADDRINUSE 10048

#define WSAEADDRNOTAVAIL 10049

#define WSAEAFNOSUPPORT 10047

#define WSAEALREADY 10037

#define WSAEBADF 10009

#define WSAECANCELLED 10103

#define WSAECONNABORTED 10053

#define WSAECONNREFUSED 10061

#define WSAECONNRESET 10054

#define WSAEDESTADDRREQ 10039

#define WSAEDISCON 10101

#define WSAEDQUOT 10069

#define WSAEFAULT 10014

#define WSAEHOSTDOWN 10064

#define WSAEHOSTUNREACH 10065

#define WSAEINPROGRESS 10036

#define WSAEINTR 10004

#define WSAEINVAL 10022

#define WSAEINVALIDPROCTABLE 10104

#define WSAEINVALIDPROVIDER 10105

#define WSAEISCONN 10056

#define WSAELOOP 10062

#define WSAEMFILE 10024

#define WSAEMSGSIZE 10040

#define WSAENAMETOOLONG 10063

#define WSAENETDOWN 10050

#define WSAENETRESET 10052

#define WSAENETUNREACH 10051

#define WSAENOBUFS 10055

#define WSAENOMORE 10102

#define WSAENOPROTOOPT 10042

#define WSAENOTCONN 10057

#define WSAENOTEMPTY 10066

#define WSAENOTSOCK 10038

#define WSAEOPNOTSUPP 10045

#define WSAEPFNOSUPPORT 10046

#define WSAEPROCLIM 10067

#define WSAEPROTONOSUPPORT 10043

#define WSAEPROTOTYPE 10041

#define WSAEPROVIDERFAILEDINIT 10106

#define WSAEREFUSED 10112

#define WSAEREMOTE 10071

#define WSAESHUTDOWN 10058

#define WSAESOCKTNOSUPPORT 10044

#define WSAESTALE 10070

#define WSAETIMEDOUT 10060

#define WSAETOOMANYREFS 10059

#define WSAEUSERS 10068

#define WSAEWOULDBLOCK 10035

#define WSAHOST_NOT_FOUND 11001

#define WSANO_DATA 11004

#define WSANO_RECOVERY 11003

#define WSANOTINITIALISED 10093

#define WSASERVICE_NOT_FOUND 10108

#define WSASYSCALLFAILURE 10107

#define WSASYSNOTREADY 10091

#define WSATRY_AGAIN 11002

#define WSATYPE_NOT_FOUND 10109

#define WSAVERNOTSUPPORTED 10092

#define XACT_E_ABORTED 2147799065

#define XACT_E_ABORTING 2147799081

#define XACT_E_ALREADYINPROGRESS 2147799064

#define XACT_E_ALREADYOTHERSINGLEPHASE 2147799040

#define XACT_E_CANTRETAIN 2147799041

#define XACT_E_CLERKEXISTS 2147799169

#define XACT_E_CLERKNOTFOUND 2147799168

#define XACT_E_COMMITFAILED 2147799042

#define XACT_E_COMMITPREVENTED 2147799043

#define XACT_E_CONNECTION_DENIED 2147799069

#define XACT_E_CONNECTION_DOWN 2147799068

#define XACT_E_DEST_TMNOTAVAILABLE 2147799074

#define XACT_E_FIRST 2147799040

#define XACT_E_HEURISTICABORT 2147799044

#define XACT_E_HEURISTICCOMMIT 2147799045

#define XACT_E_HEURISTICDAMAGE 2147799046

#define XACT_E_HEURISTICDANGER 2147799047

#define XACT_E_INDOUBT 2147799062

#define XACT_E_INVALIDCOOKIE 2147799061

#define XACT_E_INVALIDLSN 2147799172

#define XACT_E_ISOLATIONLEVEL 2147799048

#define XACT_E_LAST 2147799083

#define XACT_E_LOGFULL 2147799066

#define XACT_E_LU_TX_DISABLED 2147799084

#define XACT_E_NETWORK_TX_DISABLED 2147799076

#define XACT_E_NOASYNC 2147799049

#define XACT_E_NOENLIST 2147799050

#define XACT_E_NOIMPORTOBJECT 2147799060

#define XACT_E_NOISORETAIN 2147799051

#define XACT_E_NORESOURCE 2147799052

#define XACT_E_NOTCURRENT 2147799053

#define XACT_E_NOTIMEOUT 2147799063

#define XACT_E_NOTRANSACTION 2147799054

#define XACT_E_NOTSUPPORTED 2147799055

#define XACT_E_PARTNER_NETWORK_TX_DISABLED 2147799077

#define XACT_E_PULL_COMM_FAILURE 2147799083

#define XACT_E_PUSH_COMM_FAILURE 2147799082

#define XACT_E_RECOVERYINPROGRESS 2147799170

#define XACT_E_REENLISTTIMEOUT 2147799070

#define XACT_E_REPLAYREQUEST 2147799173

#define XACT_E_TIP_CONNECT_FAILED 2147799071

#define XACT_E_TIP_DISABLED 2147799075

#define XACT_E_TIP_PROTOCOL_ERROR 2147799072

#define XACT_E_TIP_PULL_FAILED 2147799073

#define XACT_E_TMNOTAVAILABLE 2147799067

#define XACT_E_TRANSACTIONCLOSED 2147799171

#define XACT_E_UNABLE_TO_LOAD_DTC_PROXY 2147799080

#define XACT_E_UNABLE_TO_READ_DTC_CONFIG 2147799079

#define XACT_E_UNKNOWNRMGRID 2147799056

#define XACT_E_WRONGSTATE 2147799057

#define XACT_E_WRONGUOW 2147799058

#define XACT_E_XA_TX_DISABLED 2147799078

#define XACT_E_XTIONEXISTS 2147799059

#define XACT_S_ABORTING 315400

#define XACT_S_ALLNORETAIN 315399

#define XACT_S_ASYNC 315392

#define XACT_S_DEFECT 315393

#define XACT_S_FIRST 315392

#define XACT_S_LAST 315408

#define XACT_S_LASTRESOURCEMANAGER 315408

#define XACT_S_LOCALLY_OK 315402

#define XACT_S_MADECHANGESCONTENT 315397

#define XACT_S_MADECHANGESINFORM 315398

#define XACT_S_OKINFORM 315396

#define XACT_S_READONLY 315394

#define XACT_S_SINGLEPHASE 315401

#define XACT_S_SOMENORETAIN 315395

#define XENROLL_E_CANNOT_ADD_ROOT_CERT 2148093953

#define XENROLL_E_KEY_NOT_EXPORTABLE 2148093952

#define XENROLL_E_KEYSPEC_SMIME_MISMATCH 2148093957

#define XENROLL_E_RESPONSE_KA_HASH_MISMATCH 2148093956

#define XENROLL_E_RESPONSE_KA_HASH_NOT_FOUND 2148093954

#define XENROLL_E_RESPONSE_UNEXPECTED_KA_HASH 2148093955

#define ABORTDOC 2

#define ABSOLUTE 1

#define AC_SRC_ALPHA 1

#define AC_SRC_OVER 0

#define AD_CLOCKWISE 2

#define AD_COUNTERCLOCKWISE 1

#define ALTERNATE 1

#define ANSI_CHARSET 0

#define ANSI_FIXED_FONT 11

#define ANSI_VAR_FONT 12

#define ANTIALIASED_QUALITY 4

#define ARABIC_CHARSET 178

#define ASPECT_FILTERING 1

#define ASPECTX 40

#define ASPECTXY 44

#define ASPECTY 42

#define BALTIC_CHARSET 186

#define BANDINFO 24

#define BEGIN_PATH 4096

#define BI_BITFIELDS 3

#define BI_JPEG 4

#define BI_PNG 5

#define BI_RGB 0

#define BI_RLE4 2

#define BI_RLE8 1

#define BITSPIXEL 12

#define BKMODE_LAST 2

#define BLACK_BRUSH 4

#define BLACK_PEN 7

#define BLACKNESS 66

#define BLACKONWHITE 1

#define BLTALIGNMENT 119

#define BS_DIBPATTERN 5

#define BS_DIBPATTERN8X8 8

#define BS_DIBPATTERNPT 6

#define BS_HATCHED 2

#define BS_HOLLOW 1

#define BS_INDEXED 4

#define BS_MONOPATTERN 9

#define BS_NULL 1

#define BS_PATTERN 3

#define BS_PATTERN8X8 7

#define BS_SOLID 0

#define CA_LOG_FILTER 2

#define CA_NEGATIVE 1

#define CAPTUREBLT 1073741824

#define CBM_INIT 4

#define CC_CHORD 4

#define CC_CIRCLES 1

#define CC_ELLIPSES 8

#define CC_INTERIORS 128

#define CC_NONE 0

#define CC_PIE 2

#define CC_ROUNDRECT 256

#define CC_STYLED 32

#define CC_WIDE 16

#define CC_WIDESTYLED 64

#define CCHDEVICENAME 32

#define CCHFORMNAME 32

#define CHECKJPEGFORMAT 4119

#define CHECKPNGFORMAT 4120

#define CHINESEBIG5_CHARSET 136

#define CLEARTYPE_NATURAL_QUALITY 6

#define CLEARTYPE_QUALITY 5

#define CLIP_CHARACTER_PRECIS 1

#define CLIP_DEFAULT_PRECIS 0

#define CLIP_DFA_DISABLE 64

#define CLIP_EMBEDDED 128

#define CLIP_LH_ANGLES 16

#define CLIP_MASK 15

#define CLIP_STROKE_PRECIS 2

#define CLIP_TO_PATH 4097

#define CLIP_TT_ALWAYS 32

#define CLIPCAPS 36

#define CLOSECHANNEL 4112

#define CLR_INVALID 4294967295

#define CM_CMYK_COLOR 4

#define CM_DEVICE_ICM 1

#define CM_GAMMA_RAMP 2

#define CM_IN_GAMUT 0

#define CM_NONE 0

#define CM_OUT_OF_GAMUT 255

#define COLOR_ADJ_MAX 100

#define COLOR_ADJ_MIN -100

#define COLORMATCHTOTARGET_EMBEDED 1

#define COLORMGMTCAPS 121

#define COLORONCOLOR 3

#define COLORRES 108

#define COMPLEXREGION 3

#define CP_NONE 0

#define CP_RECTANGLE 1

#define CP_REGION 2

#define CREATECOLORSPACE_EMBEDED 1

#define CS_DELETE_TRANSFORM 3

#define CS_DISABLE 2

#define CS_ENABLE 1

#define CURVECAPS 28

#define DC_BINADJUST 19

#define DC_BRUSH 18

#define DC_COLLATE 22

#define DC_COLORDEVICE 32

#define DC_DATATYPE_PRODUCED 21

#define DC_EMF_COMPLIANT 20

#define DC_MANUFACTURER 23

#define DC_MEDIAREADY 29

#define DC_MEDIATYPENAMES 34

#define DC_MEDIATYPES 35

#define DC_MODEL 24

#define DC_NUP 33

#define DC_PEN 19

#define DC_PERSONALITY 25

#define DC_PRINTERMEM 28

#define DC_PRINTRATE 26

#define DC_PRINTRATEPPM 31

#define DC_PRINTRATEUNIT 27

#define DC_STAPLE 30

#define DCB_ACCUMULATE 2

#define DCB_DIRTY 2

#define DCB_DISABLE 8

#define DCB_ENABLE 4

#define DCB_RESET 1

#define DCB_SET 3

#define DCBA_FACEDOWNCENTER 257

#define DCBA_FACEDOWNLEFT 258

#define DCBA_FACEDOWNNONE 256

#define DCBA_FACEDOWNRIGHT 259

#define DCBA_FACEUPCENTER 1

#define DCBA_FACEUPLEFT 2

#define DCBA_FACEUPNONE 0

#define DCBA_FACEUPRIGHT 3

#define DCTT_BITMAP 1

#define DCTT_DOWNLOAD 2

#define DCTT_DOWNLOAD_OUTLINE 8

#define DCTT_SUBDEV 4

#define DEFAULT_CHARSET 1

#define DEFAULT_GUI_FONT 17

#define DEFAULT_PALETTE 15

#define DEFAULT_PITCH 0

#define DEFAULT_QUALITY 0

#define DESKTOPHORZRES 118

#define DESKTOPVERTRES 117

#define DEVICE_DEFAULT_FONT 14

#define DEVICE_FONTTYPE 2

#define DEVICEDATA 19

#define DI_APPBANDING 1

#define DI_ROPS_READ_DESTINATION 2

#define DIB_PAL_COLORS 1

#define DIB_RGB_COLORS 0

#define DISPLAY_DEVICE_ACTIVE 1

#define DISPLAY_DEVICE_ATTACHED 2

#define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 1

#define DISPLAY_DEVICE_DISCONNECT 33554432

#define DISPLAY_DEVICE_MIRRORING_DRIVER 8

#define DISPLAY_DEVICE_MODESPRUNED 134217728

#define DISPLAY_DEVICE_MULTI_DRIVER 2

#define DISPLAY_DEVICE_PRIMARY_DEVICE 4

#define DISPLAY_DEVICE_REMOTE 67108864

#define DISPLAY_DEVICE_REMOVABLE 32

#define DISPLAY_DEVICE_TS_COMPATIBLE 2097152

#define DISPLAY_DEVICE_UNSAFE_MODES_ON 524288

#define DISPLAY_DEVICE_VGA_COMPATIBLE 16

#define DISPLAYCONFIG_MAXPATH 1024

#define DISPLAYCONFIG_PATH_ACTIVE 1

#define DISPLAYCONFIG_PATH_MODE_IDX_INVALID 4294967295

#define DISPLAYCONFIG_SOURCE_IN_USE 1

#define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT 4

#define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH 8

#define DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM 16

#define DISPLAYCONFIG_TARGET_FORCIBLE 2

#define DISPLAYCONFIG_TARGET_IN_USE 1

#define DKGRAY_BRUSH 3

#define DM_BITSPERPEL 262144

#define DM_COLLATE 32768

#define DM_COLOR 2048

#define DM_COPIES 256

#define DM_DEFAULTSOURCE 512

#define DM_DISPLAYFIXEDOUTPUT 536870912

#define DM_DISPLAYFLAGS 2097152

#define DM_DISPLAYFREQUENCY 4194304

#define DM_DISPLAYORIENTATION 128

#define DM_DITHERTYPE 67108864

#define DM_DUPLEX 4096

#define DM_FORMNAME 65536

#define DM_ICMINTENT 16777216

#define DM_ICMMETHOD 8388608

#define DM_INTERLACED 2

#define DM_LOGPIXELS 131072

#define DM_MEDIATYPE 33554432

#define DM_NUP 64

#define DM_ORIENTATION 1

#define DM_PANNINGHEIGHT 268435456

#define DM_PANNINGWIDTH 134217728

#define DM_PAPERLENGTH 4

#define DM_PAPERSIZE 2

#define DM_PAPERWIDTH 8

#define DM_PELSHEIGHT 1048576

#define DM_PELSWIDTH 524288

#define DM_POSITION 32

#define DM_PRINTQUALITY 1024

#define DM_SCALE 16

#define DM_SPECVERSION 1025

#define DM_TTOPTION 16384

#define DM_YRESOLUTION 8192

#define DMBIN_AUTO 7

#define DMBIN_CASSETTE 14

#define DMBIN_ENVELOPE 5

#define DMBIN_ENVMANUAL 6

#define DMBIN_FIRST 1

#define DMBIN_FORMSOURCE 15

#define DMBIN_LARGECAPACITY 11

#define DMBIN_LARGEFMT 10

#define DMBIN_LAST 15

#define DMBIN_LOWER 2

#define DMBIN_MANUAL 4

#define DMBIN_MIDDLE 3

#define DMBIN_ONLYONE 1

#define DMBIN_SMALLFMT 9

#define DMBIN_TRACTOR 8

#define DMBIN_UPPER 1

#define DMBIN_USER 256

#define DMCOLLATE_FALSE 0

#define DMCOLLATE_TRUE 1

#define DMCOLOR_COLOR 2

#define DMCOLOR_MONOCHROME 1

#define DMDFO_CENTER 2

#define DMDFO_DEFAULT 0

#define DMDFO_STRETCH 1

#define DMDISPLAYFLAGS_TEXTMODE 4

#define DMDITHER_COARSE 2

#define DMDITHER_ERRORDIFFUSION 5

#define DMDITHER_FINE 3

#define DMDITHER_GRAYSCALE 10

#define DMDITHER_LINEART 4

#define DMDITHER_NONE 1

#define DMDITHER_RESERVED6 6

#define DMDITHER_RESERVED7 7

#define DMDITHER_RESERVED8 8

#define DMDITHER_RESERVED9 9

#define DMDITHER_USER 256

#define DMDO_180 2

#define DMDO_270 3

#define DMDO_90 1

#define DMDO_DEFAULT 0

#define DMDUP_HORIZONTAL 3

#define DMDUP_SIMPLEX 1

#define DMDUP_VERTICAL 2

#define DMICM_ABS_COLORIMETRIC 4

#define DMICM_COLORIMETRIC 3

#define DMICM_CONTRAST 2

#define DMICM_SATURATE 1

#define DMICM_USER 256

#define DMICMMETHOD_DEVICE 4

#define DMICMMETHOD_DRIVER 3

#define DMICMMETHOD_NONE 1

#define DMICMMETHOD_SYSTEM 2

#define DMICMMETHOD_USER 256

#define DMMEDIA_GLOSSY 3

#define DMMEDIA_STANDARD 1

#define DMMEDIA_TRANSPARENCY 2

#define DMMEDIA_USER 256

#define DMNUP_ONEUP 2

#define DMNUP_SYSTEM 1

#define DMORIENT_LANDSCAPE 2

#define DMORIENT_PORTRAIT 1

#define DMPAPER_10X11 45

#define DMPAPER_10X14 16

#define DMPAPER_11X17 17

#define DMPAPER_12X11 90

#define DMPAPER_15X11 46

#define DMPAPER_9X11 44

#define DMPAPER_A2 66

#define DMPAPER_A3 8

#define DMPAPER_A3_EXTRA 63

#define DMPAPER_A3_EXTRA_TRANSVERSE 68

#define DMPAPER_A3_ROTATED 76

#define DMPAPER_A3_TRANSVERSE 67

#define DMPAPER_A4 9

#define DMPAPER_A4_EXTRA 53

#define DMPAPER_A4_PLUS 60

#define DMPAPER_A4_ROTATED 77

#define DMPAPER_A4_TRANSVERSE 55

#define DMPAPER_A4SMALL 10

#define DMPAPER_A5 11

#define DMPAPER_A5_EXTRA 64

#define DMPAPER_A5_ROTATED 78

#define DMPAPER_A5_TRANSVERSE 61

#define DMPAPER_A6 70

#define DMPAPER_A6_ROTATED 83

#define DMPAPER_A_PLUS 57

#define DMPAPER_B4 12

#define DMPAPER_B4_JIS_ROTATED 79

#define DMPAPER_B5 13

#define DMPAPER_B5_EXTRA 65

#define DMPAPER_B5_JIS_ROTATED 80

#define DMPAPER_B5_TRANSVERSE 62

#define DMPAPER_B6_JIS 88

#define DMPAPER_B6_JIS_ROTATED 89

#define DMPAPER_B_PLUS 58

#define DMPAPER_CSHEET 24

#define DMPAPER_DBL_JAPANESE_POSTCARD 69

#define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED 82

#define DMPAPER_DSHEET 25

#define DMPAPER_ENV_10 20

#define DMPAPER_ENV_11 21

#define DMPAPER_ENV_12 22

#define DMPAPER_ENV_14 23

#define DMPAPER_ENV_9 19

#define DMPAPER_ENV_B4 33

#define DMPAPER_ENV_B5 34

#define DMPAPER_ENV_B6 35

#define DMPAPER_ENV_C3 29

#define DMPAPER_ENV_C4 30

#define DMPAPER_ENV_C5 28

#define DMPAPER_ENV_C6 31

#define DMPAPER_ENV_C65 32

#define DMPAPER_ENV_DL 27

#define DMPAPER_ENV_INVITE 47

#define DMPAPER_ENV_ITALY 36

#define DMPAPER_ENV_MONARCH 37

#define DMPAPER_ENV_PERSONAL 38

#define DMPAPER_ESHEET 26

#define DMPAPER_EXECUTIVE 7

#define DMPAPER_FANFOLD_LGL_GERMAN 41

#define DMPAPER_FANFOLD_STD_GERMAN 40

#define DMPAPER_FANFOLD_US 39

#define DMPAPER_FIRST 1

#define DMPAPER_FOLIO 14

#define DMPAPER_ISO_B4 42

#define DMPAPER_JAPANESE_POSTCARD 43

#define DMPAPER_JAPANESE_POSTCARD_ROTATED 81

#define DMPAPER_JENV_CHOU3 73

#define DMPAPER_JENV_CHOU3_ROTATED 86

#define DMPAPER_JENV_CHOU4 74

#define DMPAPER_JENV_CHOU4_ROTATED 87

#define DMPAPER_JENV_KAKU2 71

#define DMPAPER_JENV_KAKU2_ROTATED 84

#define DMPAPER_JENV_KAKU3 72

#define DMPAPER_JENV_KAKU3_ROTATED 85

#define DMPAPER_JENV_YOU4 91

#define DMPAPER_JENV_YOU4_ROTATED 92

#define DMPAPER_LAST 118

#define DMPAPER_LEDGER 4

#define DMPAPER_LEGAL 5

#define DMPAPER_LEGAL_EXTRA 51

#define DMPAPER_LETTER 1

#define DMPAPER_LETTER_EXTRA 50

#define DMPAPER_LETTER_EXTRA_TRANSVERSE 56

#define DMPAPER_LETTER_PLUS 59

#define DMPAPER_LETTER_ROTATED 75

#define DMPAPER_LETTER_TRANSVERSE 54

#define DMPAPER_LETTERSMALL 2

#define DMPAPER_NOTE 18

#define DMPAPER_P16K 93

#define DMPAPER_P16K_ROTATED 106

#define DMPAPER_P32K 94

#define DMPAPER_P32K_ROTATED 107

#define DMPAPER_P32KBIG 95

#define DMPAPER_P32KBIG_ROTATED 108

#define DMPAPER_PENV_1 96

#define DMPAPER_PENV_10 105

#define DMPAPER_PENV_10_ROTATED 118

#define DMPAPER_PENV_1_ROTATED 109

#define DMPAPER_PENV_2 97

#define DMPAPER_PENV_2_ROTATED 110

#define DMPAPER_PENV_3 98

#define DMPAPER_PENV_3_ROTATED 111

#define DMPAPER_PENV_4 99

#define DMPAPER_PENV_4_ROTATED 112

#define DMPAPER_PENV_5 100

#define DMPAPER_PENV_5_ROTATED 113

#define DMPAPER_PENV_6 101

#define DMPAPER_PENV_6_ROTATED 114

#define DMPAPER_PENV_7 102

#define DMPAPER_PENV_7_ROTATED 115

#define DMPAPER_PENV_8 103

#define DMPAPER_PENV_8_ROTATED 116

#define DMPAPER_PENV_9 104

#define DMPAPER_PENV_9_ROTATED 117

#define DMPAPER_QUARTO 15

#define DMPAPER_RESERVED_48 48

#define DMPAPER_RESERVED_49 49

#define DMPAPER_STATEMENT 6

#define DMPAPER_TABLOID 3

#define DMPAPER_TABLOID_EXTRA 52

#define DMPAPER_USER 256

#define DMRES_DRAFT -1

#define DMRES_HIGH -4

#define DMRES_LOW -2

#define DMRES_MEDIUM -3

#define DMTT_BITMAP 1

#define DMTT_DOWNLOAD 2

#define DMTT_DOWNLOAD_OUTLINE 4

#define DMTT_SUBDEV 3

#define DOWNLOADFACE 514

#define DOWNLOADHEADER 4111

#define DRAFT_QUALITY 1

#define DRAFTMODE 7

#define DRAWPATTERNRECT 25

#define DRIVERVERSION 0

#define DSTINVERT 5570569

#define DT_CHARSTREAM 4

#define DT_DISPFILE 6

#define DT_METAFILE 5

#define DT_PLOTTER 0

#define DT_RASCAMERA 3

#define DT_RASDISPLAY 1

#define DT_RASPRINTER 2

#define EASTEUROPE_CHARSET 238

#define ELF_CULTURE_LATIN 0

#define ELF_VENDOR_SIZE 4

#define ELF_VERSION 0

#define EMR_ABORTPATH 68

#define EMR_ALPHABLEND 114

#define EMR_ANGLEARC 41

#define EMR_ARC 45

#define EMR_ARCTO 55

#define EMR_BEGINPATH 59

#define EMR_BITBLT 76

#define EMR_CHORD 46

#define EMR_CLOSEFIGURE 61

#define EMR_COLORCORRECTPALETTE 111

#define EMR_COLORMATCHTOTARGETW 121

#define EMR_CREATEBRUSHINDIRECT 39

#define EMR_CREATECOLORSPACE 99

#define EMR_CREATECOLORSPACEW 122

#define EMR_CREATEDIBPATTERNBRUSHPT 94

#define EMR_CREATEMONOBRUSH 93

#define EMR_CREATEPALETTE 49

#define EMR_CREATEPEN 38

#define EMR_DELETECOLORSPACE 101

#define EMR_DELETEOBJECT 40

#define EMR_ELLIPSE 42

#define EMR_ENDPATH 60

#define EMR_EOF 14

#define EMR_EXCLUDECLIPRECT 29

#define EMR_EXTCREATEFONTINDIRECTW 82

#define EMR_EXTCREATEPEN 95

#define EMR_EXTFLOODFILL 53

#define EMR_EXTSELECTCLIPRGN 75

#define EMR_EXTTEXTOUTA 83

#define EMR_EXTTEXTOUTW 84

#define EMR_FILLPATH 62

#define EMR_FILLRGN 71

#define EMR_FLATTENPATH 65

#define EMR_FRAMERGN 72

#define EMR_GDICOMMENT 70

#define EMR_GLSBOUNDEDRECORD 103

#define EMR_GLSRECORD 102

#define EMR_GRADIENTFILL 118

#define EMR_HEADER 1

#define EMR_INTERSECTCLIPRECT 30

#define EMR_INVERTRGN 73

#define EMR_LINETO 54

#define EMR_MASKBLT 78

#define EMR_MAX 122

#define EMR_MIN 1

#define EMR_MODIFYWORLDTRANSFORM 36

#define EMR_MOVETOEX 27

#define EMR_OFFSETCLIPRGN 26

#define EMR_PAINTRGN 74

#define EMR_PIE 47

#define EMR_PIXELFORMAT 104

#define EMR_PLGBLT 79

#define EMR_POLYBEZIER 2

#define EMR_POLYBEZIER16 85

#define EMR_POLYBEZIERTO 5

#define EMR_POLYBEZIERTO16 88

#define EMR_POLYDRAW 56

#define EMR_POLYDRAW16 92

#define EMR_POLYGON 3

#define EMR_POLYGON16 86

#define EMR_POLYLINE 4

#define EMR_POLYLINE16 87

#define EMR_POLYLINETO 6

#define EMR_POLYLINETO16 89

#define EMR_POLYPOLYGON 8

#define EMR_POLYPOLYGON16 91

#define EMR_POLYPOLYLINE 7

#define EMR_POLYPOLYLINE16 90

#define EMR_POLYTEXTOUTA 96

#define EMR_POLYTEXTOUTW 97

#define EMR_REALIZEPALETTE 52

#define EMR_RECTANGLE 43

#define EMR_RESERVED_105 105

#define EMR_RESERVED_106 106

#define EMR_RESERVED_107 107

#define EMR_RESERVED_108 108

#define EMR_RESERVED_109 109

#define EMR_RESERVED_110 110

#define EMR_RESERVED_117 117

#define EMR_RESERVED_119 119

#define EMR_RESERVED_120 120

#define EMR_RESIZEPALETTE 51

#define EMR_RESTOREDC 34

#define EMR_ROUNDRECT 44

#define EMR_SAVEDC 33

#define EMR_SCALEVIEWPORTEXTEX 31

#define EMR_SCALEWINDOWEXTEX 32

#define EMR_SELECTCLIPPATH 67

#define EMR_SELECTOBJECT 37

#define EMR_SELECTPALETTE 48

#define EMR_SETARCDIRECTION 57

#define EMR_SETBKCOLOR 25

#define EMR_SETBKMODE 18

#define EMR_SETBRUSHORGEX 13

#define EMR_SETCOLORADJUSTMENT 23

#define EMR_SETCOLORSPACE 100

#define EMR_SETDIBITSTODEVICE 80

#define EMR_SETICMMODE 98

#define EMR_SETICMPROFILEA 112

#define EMR_SETICMPROFILEW 113

#define EMR_SETLAYOUT 115

#define EMR_SETMAPMODE 17

#define EMR_SETMAPPERFLAGS 16

#define EMR_SETMETARGN 28

#define EMR_SETMITERLIMIT 58

#define EMR_SETPALETTEENTRIES 50

#define EMR_SETPIXELV 15

#define EMR_SETPOLYFILLMODE 19

#define EMR_SETROP2 20

#define EMR_SETSTRETCHBLTMODE 21

#define EMR_SETTEXTALIGN 22

#define EMR_SETTEXTCOLOR 24

#define EMR_SETVIEWPORTEXTEX 11

#define EMR_SETVIEWPORTORGEX 12

#define EMR_SETWINDOWEXTEX 9

#define EMR_SETWINDOWORGEX 10

#define EMR_SETWORLDTRANSFORM 35

#define EMR_STRETCHBLT 77

#define EMR_STRETCHDIBITS 81

#define EMR_STROKEANDFILLPATH 63

#define EMR_STROKEPATH 64

#define EMR_TRANSPARENTBLT 116

#define EMR_WIDENPATH 66

#define ENABLEDUPLEX 28

#define ENABLEPAIRKERNING 769

#define ENABLERELATIVEWIDTHS 768

#define ENCAPSULATED_POSTSCRIPT 4116

#define END_PATH 4098

#define ENDDOC 11

#define ENHMETA_SIGNATURE 1179469088

#define ENHMETA_STOCK_OBJECT 2147483648

#define ENUMPAPERBINS 31

#define ENUMPAPERMETRICS 34

#define EPS_SIGNATURE 1179865157

#define EPSPRINTING 33

#define ERROR 0

#define ETO_CLIPPED 4

#define ETO_GLYPH_INDEX 16

#define ETO_IGNORELANGUAGE 4096

#define ETO_NUMERICSLATIN 2048

#define ETO_NUMERICSLOCAL 1024

#define ETO_OPAQUE 2

#define ETO_PDY 8192

#define ETO_REVERSE_INDEX_MAP 65536

#define ETO_RTLREADING 128

#define EXT_DEVICE_CAPS 4099

#define EXTTEXTOUT 512

#define FEATURESETTING_CUSTPAPER 3

#define FEATURESETTING_MIRROR 4

#define FEATURESETTING_NEGATIVE 5

#define FEATURESETTING_NUP 0

#define FEATURESETTING_OUTPUT 1

#define FEATURESETTING_PRIVATE_BEGIN 4096

#define FEATURESETTING_PRIVATE_END 8191

#define FEATURESETTING_PROTOCOL 6

#define FEATURESETTING_PSLEVEL 2

#define FF_DECORATIVE 80

#define FF_DONTCARE 0

#define FF_MODERN 48

#define FF_ROMAN 16

#define FF_SCRIPT 64

#define FF_SWISS 32

#define FIXED_PITCH 1

#define FLI_GLYPHS 262144

#define FLI_MASK 4155

#define FLOODFILLBORDER 0

#define FLOODFILLSURFACE 1

#define FLUSHOUTPUT 6

#define FONTMAPPER_MAX 10

#define FR_NOT_ENUM 32

#define FR_PRIVATE 16

#define FS_ARABIC 64

#define FS_BALTIC 128

#define FS_CHINESESIMP 262144

#define FS_CHINESETRAD 1048576

#define FS_CYRILLIC 4

#define FS_GREEK 8

#define FS_HEBREW 32

#define FS_JISJAPAN 131072

#define FS_JOHAB 2097152

#define FS_LATIN1 1

#define FS_LATIN2 2

#define FS_SYMBOL 2147483648

#define FS_THAI 65536

#define FS_TURKISH 16

#define FS_VIETNAMESE 256

#define FS_WANSUNG 524288

#define FW_BLACK 900

#define FW_BOLD 700

#define FW_DEMIBOLD 600

#define FW_DONTCARE 0

#define FW_EXTRABOLD 800

#define FW_EXTRALIGHT 200

#define FW_HEAVY 900

#define FW_LIGHT 300

#define FW_MEDIUM 500

#define FW_NORMAL 400

#define FW_REGULAR 400

#define FW_SEMIBOLD 600

#define FW_THIN 100

#define FW_ULTRABOLD 800

#define FW_ULTRALIGHT 200

#define GB2312_CHARSET 134

#define GCP_CLASSIN 524288

#define GCP_DBCS 1

#define GCP_DIACRITIC 256

#define GCP_DISPLAYZWG 4194304

#define GCP_ERROR 32768

#define GCP_GLYPHSHAPE 16

#define GCP_JUSTIFY 65536

#define GCP_JUSTIFYIN 2097152

#define GCP_KASHIDA 1024

#define GCP_LIGATE 32

#define GCP_MAXEXTENT 1048576

#define GCP_NEUTRALOVERRIDE 33554432

#define GCP_NUMERICOVERRIDE 16777216

#define GCP_NUMERICSLATIN 67108864

#define GCP_NUMERICSLOCAL 134217728

#define GCP_REORDER 2

#define GCP_SYMSWAPOFF 8388608

#define GCP_USEKERNING 8

#define GCPCLASS_ARABIC 2

#define GCPCLASS_HEBREW 2

#define GCPCLASS_LATIN 1

#define GCPCLASS_LATINNUMBER 5

#define GCPCLASS_LATINNUMERICSEPARATOR 7

#define GCPCLASS_LATINNUMERICTERMINATOR 6

#define GCPCLASS_LOCALNUMBER 4

#define GCPCLASS_NEUTRAL 3

#define GCPCLASS_NUMERICSEPARATOR 8

#define GCPCLASS_POSTBOUNDLTR 32

#define GCPCLASS_POSTBOUNDRTL 16

#define GCPCLASS_PREBOUNDLTR 128

#define GCPCLASS_PREBOUNDRTL 64

#define GCPGLYPH_LINKAFTER 16384

#define GCPGLYPH_LINKBEFORE 32768

#define GDI_ERROR 4294967295

#define GDI_OBJ_LAST 14

#define GDICOMMENT_BEGINGROUP 2

#define GDICOMMENT_ENDGROUP 3

#define GDICOMMENT_IDENTIFIER 1128875079

#define GDICOMMENT_MULTIFORMATS 1073741828

#define GDICOMMENT_UNICODE_END 128

#define GDICOMMENT_UNICODE_STRING 64

#define GDICOMMENT_WINDOWS_METAFILE 2147483649

#define GDIPLUS_TS_QUERYVER 4122

#define GDIPLUS_TS_RECORD 4123

#define GET_PS_FEATURESETTING 4121

#define GETCOLORTABLE 5

#define GETDEVICEUNITS 42

#define GETEXTENDEDTEXTMETRICS 256

#define GETEXTENTTABLE 257

#define GETFACENAME 513

#define GETPAIRKERNTABLE 258

#define GETPENWIDTH 16

#define GETPHYSPAGESIZE 12

#define GETPRINTINGOFFSET 13

#define GETSCALINGFACTOR 14

#define GETSETPAPERBINS 29

#define GETSETPAPERMETRICS 35

#define GETSETPRINTORIENT 30

#define GETSETSCREENPARAMS 3072

#define GETTECHNOLGY 20

#define GETTECHNOLOGY 20

#define GETTRACKKERNTABLE 259

#define GETVECTORBRUSHSIZE 27

#define GETVECTORPENSIZE 26

#define GGI_MARK_NONEXISTING_GLYPHS 1

#define GGO_BEZIER 3

#define GGO_BITMAP 1

#define GGO_GLYPH_INDEX 128

#define GGO_GRAY2_BITMAP 4

#define GGO_GRAY4_BITMAP 5

#define GGO_GRAY8_BITMAP 6

#define GGO_METRICS 0

#define GGO_NATIVE 2

#define GGO_UNHINTED 256

#define GM_ADVANCED 2

#define GM_COMPATIBLE 1

#define GM_LAST 2

#define GRADIENT_FILL_OP_FLAG 255

#define GRADIENT_FILL_RECT_H 0

#define GRADIENT_FILL_RECT_V 1

#define GRADIENT_FILL_TRIANGLE 2

#define GRAY_BRUSH 2

#define GREEK_CHARSET 161

#define GS_8BIT_INDICES 1

#define HALFTONE 4

#define HANGEUL_CHARSET 129

#define HANGUL_CHARSET 129

#define HEBREW_CHARSET 177

#define HGDI_ERROR 4294967295

#define HOLLOW_BRUSH 5

#define HORZRES 8

#define HORZSIZE 4

#define HS_API_MAX 12

#define HS_BDIAGONAL 3

#define HS_CROSS 4

#define HS_DIAGCROSS 5

#define HS_FDIAGONAL 2

#define HS_HORIZONTAL 0

#define HS_VERTICAL 1

#define ICM_ADDPROFILE 1

#define ICM_DELETEPROFILE 2

#define ICM_DONE_OUTSIDEDC 4

#define ICM_OFF 1

#define ICM_ON 2

#define ICM_QUERY 3

#define ICM_QUERYMATCH 7

#define ICM_QUERYPROFILE 3

#define ICM_REGISTERICMATCHER 5

#define ICM_SETDEFAULTPROFILE 4

#define ICM_UNREGISTERICMATCHER 6

#define ILLUMINANT_A 1

#define ILLUMINANT_B 2

#define ILLUMINANT_C 3

#define ILLUMINANT_D50 4

#define ILLUMINANT_D55 5

#define ILLUMINANT_D65 6

#define ILLUMINANT_D75 7

#define ILLUMINANT_DAYLIGHT 3

#define ILLUMINANT_DEVICE_DEFAULT 0

#define ILLUMINANT_F2 8

#define ILLUMINANT_FLUORESCENT 8

#define ILLUMINANT_MAX_INDEX 8

#define ILLUMINANT_NTSC 3

#define ILLUMINANT_TUNGSTEN 1

#define JOHAB_CHARSET 130

#define LAYOUT_BITMAPORIENTATIONPRESERVED 8

#define LAYOUT_BTT 2

#define LAYOUT_ORIENTATIONMASK 7

#define LAYOUT_RTL 1

#define LAYOUT_VBH 4

#define LC_INTERIORS 128

#define LC_MARKER 4

#define LC_NONE 0

#define LC_POLYLINE 2

#define LC_POLYMARKER 8

#define LC_STYLED 32

#define LC_WIDE 16

#define LC_WIDESTYLED 64

#define LCS_CALIBRATED_RGB 0

#define LCS_GM_ABS_COLORIMETRIC 8

#define LCS_GM_BUSINESS 1

#define LCS_GM_GRAPHICS 2

#define LCS_GM_IMAGES 4

#define LF_FACESIZE 32

#define LF_FULLFACESIZE 64

#define LINECAPS 30

#define LOGPIXELSX 88

#define LOGPIXELSY 90

#define LPD_DOUBLEBUFFER 1

#define LPD_SHARE_ACCUM 256

#define LPD_SHARE_DEPTH 64

#define LPD_SHARE_STENCIL 128

#define LPD_STEREO 2

#define LPD_SUPPORT_GDI 16

#define LPD_SUPPORT_OPENGL 32

#define LPD_SWAP_COPY 1024

#define LPD_SWAP_EXCHANGE 512

#define LPD_TRANSPARENT 4096

#define LPD_TYPE_COLORINDEX 1

#define LPD_TYPE_RGBA 0

#define LTGRAY_BRUSH 1

#define MAC_CHARSET 77

#define MAXSTRETCHBLTMODE 4

#define MERGECOPY 12583114

#define MERGEPAINT 12255782

#define META_ANIMATEPALETTE 1078

#define META_ARC 2071

#define META_BITBLT 2338

#define META_CHORD 2096

#define META_CREATEBRUSHINDIRECT 764

#define META_CREATEFONTINDIRECT 763

#define META_CREATEPALETTE 247

#define META_CREATEPATTERNBRUSH 505

#define META_CREATEPENINDIRECT 762

#define META_CREATEREGION 1791

#define META_DELETEOBJECT 496

#define META_DIBBITBLT 2368

#define META_DIBCREATEPATTERNBRUSH 322

#define META_DIBSTRETCHBLT 2881

#define META_ELLIPSE 1048

#define META_ESCAPE 1574

#define META_EXCLUDECLIPRECT 1045

#define META_EXTFLOODFILL 1352

#define META_EXTTEXTOUT 2610

#define META_FILLREGION 552

#define META_FLOODFILL 1049

#define META_FRAMEREGION 1065

#define META_INTERSECTCLIPRECT 1046

#define META_INVERTREGION 298

#define META_LINETO 531

#define META_MOVETO 532

#define META_OFFSETCLIPRGN 544

#define META_OFFSETVIEWPORTORG 529

#define META_OFFSETWINDOWORG 527

#define META_PAINTREGION 299

#define META_PATBLT 1565

#define META_PIE 2074

#define META_POLYGON 804

#define META_POLYLINE 805

#define META_POLYPOLYGON 1336

#define META_REALIZEPALETTE 53

#define META_RECTANGLE 1051

#define META_RESIZEPALETTE 313

#define META_RESTOREDC 295

#define META_ROUNDRECT 1564

#define META_SAVEDC 30

#define META_SCALEVIEWPORTEXT 1042

#define META_SCALEWINDOWEXT 1040

#define META_SELECTCLIPREGION 300

#define META_SELECTOBJECT 301

#define META_SELECTPALETTE 564

#define META_SETBKCOLOR 513

#define META_SETBKMODE 258

#define META_SETDIBTODEV 3379

#define META_SETLAYOUT 329

#define META_SETMAPMODE 259

#define META_SETMAPPERFLAGS 561

#define META_SETPALENTRIES 55

#define META_SETPIXEL 1055

#define META_SETPOLYFILLMODE 262

#define META_SETRELABS 261

#define META_SETROP2 260

#define META_SETSTRETCHBLTMODE 263

#define META_SETTEXTALIGN 302

#define META_SETTEXTCHAREXTRA 264

#define META_SETTEXTCOLOR 521

#define META_SETTEXTJUSTIFICATION 522

#define META_SETVIEWPORTEXT 526

#define META_SETVIEWPORTORG 525

#define META_SETWINDOWEXT 524

#define META_SETWINDOWORG 523

#define META_STRETCHBLT 2851

#define META_STRETCHDIB 3907

#define META_TEXTOUT 1313

#define METAFILE_DRIVER 2049

#define MFCOMMENT 15

#define MILCORE_TS_QUERYVER_RESULT_FALSE 0

#define MILCORE_TS_QUERYVER_RESULT_TRUE 2147483647

#define MM_ANISOTROPIC 8

#define MM_HIENGLISH 5

#define MM_HIMETRIC 3

#define MM_ISOTROPIC 7

#define MM_LOENGLISH 4

#define MM_LOMETRIC 2

#define MM_MAX 8

#define MM_MAX_AXES_NAMELEN 16

#define MM_MAX_FIXEDSCALE 6

#define MM_MAX_NUMAXES 16

#define MM_MIN 1

#define MM_TEXT 1

#define MM_TWIPS 6

#define MONO_FONT 8

#define MOUSETRAILS 39

#define MWT_IDENTITY 1

#define MWT_LEFTMULTIPLY 2

#define MWT_MAX 3

#define MWT_MIN 1

#define MWT_RIGHTMULTIPLY 3

#define NEWFRAME 1

#define NEXTBAND 3

#define NOMIRRORBITMAP 2147483648

#define NONANTIALIASED_QUALITY 3

#define NOTSRCCOPY 3342344

#define NOTSRCERASE 1114278

#define NTM_BOLD 32

#define NTM_DSIG 2097152

#define NTM_ITALIC 1

#define NTM_MULTIPLEMASTER 524288

#define NTM_NONNEGATIVE_AC 65536

#define NTM_PS_OPENTYPE 131072

#define NTM_REGULAR 64

#define NTM_TT_OPENTYPE 262144

#define NTM_TYPE1 1048576

#define NULL_BRUSH 5

#define NULL_PEN 8

#define NULLREGION 1

#define NUMBRUSHES 16

#define NUMCOLORS 24

#define NUMFONTS 22

#define NUMMARKERS 20

#define NUMPENS 18

#define NUMRESERVED 106

#define OBJ_BITMAP 7

#define OBJ_BRUSH 2

#define OBJ_COLORSPACE 14

#define OBJ_DC 3

#define OBJ_ENHMETADC 12

#define OBJ_ENHMETAFILE 13

#define OBJ_EXTPEN 11

#define OBJ_FONT 6

#define OBJ_MEMDC 10

#define OBJ_METADC 4

#define OBJ_METAFILE 9

#define OBJ_PAL 5

#define OBJ_PEN 1

#define OBJ_REGION 8

#define OEM_CHARSET 255

#define OEM_FIXED_FONT 10

#define OPAQUE 2

#define OPENCHANNEL 4110

#define OUT_CHARACTER_PRECIS 2

#define OUT_DEFAULT_PRECIS 0

#define OUT_DEVICE_PRECIS 5

#define OUT_OUTLINE_PRECIS 8

#define OUT_PS_ONLY_PRECIS 10

#define OUT_RASTER_PRECIS 6

#define OUT_SCREEN_OUTLINE_PRECIS 9

#define OUT_STRING_PRECIS 1

#define OUT_STROKE_PRECIS 3

#define OUT_TT_ONLY_PRECIS 7

#define OUT_TT_PRECIS 4

#define PAN_ANY 0

#define PAN_ARMSTYLE_INDEX 6

#define PAN_BENT_ARMS_DOUBLE_SERIF 11

#define PAN_BENT_ARMS_HORZ 7

#define PAN_BENT_ARMS_SINGLE_SERIF 10

#define PAN_BENT_ARMS_VERT 9

#define PAN_BENT_ARMS_WEDGE 8

#define PAN_CONTRAST_HIGH 8

#define PAN_CONTRAST_INDEX 4

#define PAN_CONTRAST_LOW 4

#define PAN_CONTRAST_MEDIUM 6

#define PAN_CONTRAST_MEDIUM_HIGH 7

#define PAN_CONTRAST_MEDIUM_LOW 5

#define PAN_CONTRAST_NONE 2

#define PAN_CONTRAST_VERY_HIGH 9

#define PAN_CONTRAST_VERY_LOW 3

#define PAN_CULTURE_LATIN 0

#define PAN_FAMILY_DECORATIVE 4

#define PAN_FAMILY_PICTORIAL 5

#define PAN_FAMILY_SCRIPT 3

#define PAN_FAMILY_TEXT_DISPLAY 2

#define PAN_FAMILYTYPE_INDEX 0

#define PAN_LETT_NORMAL_BOXED 4

#define PAN_LETT_NORMAL_CONTACT 2

#define PAN_LETT_NORMAL_FLATTENED 5

#define PAN_LETT_NORMAL_OFF_CENTER 7

#define PAN_LETT_NORMAL_ROUNDED 6

#define PAN_LETT_NORMAL_SQUARE 8

#define PAN_LETT_NORMAL_WEIGHTED 3

#define PAN_LETT_OBLIQUE_BOXED 11

#define PAN_LETT_OBLIQUE_CONTACT 9

#define PAN_LETT_OBLIQUE_FLATTENED 12

#define PAN_LETT_OBLIQUE_OFF_CENTER 14

#define PAN_LETT_OBLIQUE_ROUNDED 13

#define PAN_LETT_OBLIQUE_SQUARE 15

#define PAN_LETT_OBLIQUE_WEIGHTED 10

#define PAN_LETTERFORM_INDEX 7

#define PAN_MIDLINE_CONSTANT_POINTED 9

#define PAN_MIDLINE_CONSTANT_SERIFED 10

#define PAN_MIDLINE_CONSTANT_TRIMMED 8

#define PAN_MIDLINE_HIGH_POINTED 6

#define PAN_MIDLINE_HIGH_SERIFED 7

#define PAN_MIDLINE_HIGH_TRIMMED 5

#define PAN_MIDLINE_INDEX 8

#define PAN_MIDLINE_LOW_POINTED 12

#define PAN_MIDLINE_LOW_SERIFED 13

#define PAN_MIDLINE_LOW_TRIMMED 11

#define PAN_MIDLINE_STANDARD_POINTED 3

#define PAN_MIDLINE_STANDARD_SERIFED 4

#define PAN_MIDLINE_STANDARD_TRIMMED 2

#define PAN_NO_FIT 1

#define PAN_PROP_CONDENSED 6

#define PAN_PROP_EVEN_WIDTH 4

#define PAN_PROP_EXPANDED 5

#define PAN_PROP_MODERN 3

#define PAN_PROP_MONOSPACED 9

#define PAN_PROP_OLD_STYLE 2

#define PAN_PROP_VERY_CONDENSED 8

#define PAN_PROP_VERY_EXPANDED 7

#define PAN_PROPORTION_INDEX 3

#define PAN_SERIF_BONE 8

#define PAN_SERIF_COVE 2

#define PAN_SERIF_EXAGGERATED 9

#define PAN_SERIF_FLARED 14

#define PAN_SERIF_NORMAL_SANS 11

#define PAN_SERIF_OBTUSE_COVE 3

#define PAN_SERIF_OBTUSE_SANS 12

#define PAN_SERIF_OBTUSE_SQUARE_COVE 5

#define PAN_SERIF_PERP_SANS 13

#define PAN_SERIF_ROUNDED 15

#define PAN_SERIF_SQUARE 6

#define PAN_SERIF_SQUARE_COVE 4

#define PAN_SERIF_THIN 7

#define PAN_SERIF_TRIANGLE 10

#define PAN_SERIFSTYLE_INDEX 1

#define PAN_STRAIGHT_ARMS_DOUBLE_SERIF 6

#define PAN_STRAIGHT_ARMS_HORZ 2

#define PAN_STRAIGHT_ARMS_SINGLE_SERIF 5

#define PAN_STRAIGHT_ARMS_VERT 4

#define PAN_STRAIGHT_ARMS_WEDGE 3

#define PAN_STROKE_GRADUAL_DIAG 2

#define PAN_STROKE_GRADUAL_HORZ 5

#define PAN_STROKE_GRADUAL_TRAN 3

#define PAN_STROKE_GRADUAL_VERT 4

#define PAN_STROKE_INSTANT_VERT 8

#define PAN_STROKE_RAPID_HORZ 7

#define PAN_STROKE_RAPID_VERT 6

#define PAN_STROKEVARIATION_INDEX 5

#define PAN_WEIGHT_BLACK 10

#define PAN_WEIGHT_BOLD 8

#define PAN_WEIGHT_BOOK 5

#define PAN_WEIGHT_DEMI 7

#define PAN_WEIGHT_HEAVY 9

#define PAN_WEIGHT_INDEX 2

#define PAN_WEIGHT_LIGHT 3

#define PAN_WEIGHT_MEDIUM 6

#define PAN_WEIGHT_NORD 11

#define PAN_WEIGHT_THIN 4

#define PAN_WEIGHT_VERY_LIGHT 2

#define PAN_XHEIGHT_CONSTANT_LARGE 4

#define PAN_XHEIGHT_CONSTANT_SMALL 2

#define PAN_XHEIGHT_CONSTANT_STD 3

#define PAN_XHEIGHT_DUCKING_LARGE 7

#define PAN_XHEIGHT_DUCKING_SMALL 5

#define PAN_XHEIGHT_DUCKING_STD 6

#define PAN_XHEIGHT_INDEX 9

#define PANOSE_COUNT 10

#define PASSTHROUGH 19

#define PATCOPY 15728673

#define PATINVERT 5898313

#define PATPAINT 16452105

#define PC_EXPLICIT 2

#define PC_INTERIORS 128

#define PC_NOCOLLAPSE 4

#define PC_NONE 0

#define PC_PATHS 512

#define PC_POLYGON 1

#define PC_POLYPOLYGON 256

#define PC_RECTANGLE 2

#define PC_RESERVED 1

#define PC_SCANLINE 8

#define PC_STYLED 32

#define PC_TRAPEZOID 4

#define PC_WIDE 16

#define PC_WIDESTYLED 64

#define PC_WINDPOLYGON 4

#define PDEVICESIZE 26

#define PFD_DEPTH_DONTCARE 536870912

#define PFD_DIRECT3D_ACCELERATED 16384

#define PFD_DOUBLEBUFFER 1

#define PFD_DOUBLEBUFFER_DONTCARE 1073741824

#define PFD_DRAW_TO_BITMAP 8

#define PFD_DRAW_TO_WINDOW 4

#define PFD_GENERIC_ACCELERATED 4096

#define PFD_GENERIC_FORMAT 64

#define PFD_MAIN_PLANE 0

#define PFD_NEED_PALETTE 128

#define PFD_NEED_SYSTEM_PALETTE 256

#define PFD_OVERLAY_PLANE 1

#define PFD_STEREO 2

#define PFD_STEREO_DONTCARE 2147483648

#define PFD_SUPPORT_COMPOSITION 32768

#define PFD_SUPPORT_DIRECTDRAW 8192

#define PFD_SUPPORT_GDI 16

#define PFD_SUPPORT_OPENGL 32

#define PFD_SWAP_COPY 1024

#define PFD_SWAP_EXCHANGE 512

#define PFD_SWAP_LAYER_BUFFERS 2048

#define PFD_TYPE_COLORINDEX 1

#define PFD_TYPE_RGBA 0

#define PFD_UNDERLAY_PLANE -1

#define PHYSICALHEIGHT 111

#define PHYSICALOFFSETX 112

#define PHYSICALOFFSETY 113

#define PHYSICALWIDTH 110

#define PLANES 14

#define POLYFILL_LAST 2

#define POLYGONALCAPS 32

#define POSTSCRIPT_DATA 37

#define POSTSCRIPT_IDENTIFY 4117

#define POSTSCRIPT_IGNORE 38

#define POSTSCRIPT_INJECTION 4118

#define POSTSCRIPT_PASSTHROUGH 4115

#define PR_JOBSTATUS 0

#define PRINTRATEUNIT_CPS 2

#define PRINTRATEUNIT_IPM 4

#define PRINTRATEUNIT_LPM 3

#define PRINTRATEUNIT_PPM 1

#define PROOF_QUALITY 2

#define PS_ALTERNATE 8

#define PS_COSMETIC 0

#define PS_DASH 1

#define PS_DASHDOT 3

#define PS_DASHDOTDOT 4

#define PS_DOT 2

#define PS_ENDCAP_FLAT 512

#define PS_ENDCAP_MASK 3840

#define PS_ENDCAP_ROUND 0

#define PS_ENDCAP_SQUARE 256

#define PS_GEOMETRIC 65536

#define PS_INSIDEFRAME 6

#define PS_JOIN_BEVEL 4096

#define PS_JOIN_MASK 61440

#define PS_JOIN_MITER 8192

#define PS_JOIN_ROUND 0

#define PS_NULL 5

#define PS_SOLID 0

#define PS_STYLE_MASK 15

#define PS_TYPE_MASK 983040

#define PS_USERSTYLE 7

#define PSIDENT_GDICENTRIC 0

#define PSIDENT_PSCENTRIC 1

#define PSINJECT_BEGINDEFAULTS 12

#define PSINJECT_BEGINPAGESETUP 101

#define PSINJECT_BEGINPROLOG 14

#define PSINJECT_BEGINSETUP 16

#define PSINJECT_BEGINSTREAM 1

#define PSINJECT_BOUNDINGBOX 9

#define PSINJECT_COMMENTS 11

#define PSINJECT_DLFONT 3722304989

#define PSINJECT_DOCNEEDEDRES 5

#define PSINJECT_DOCSUPPLIEDRES 6

#define PSINJECT_DOCUMENTPROCESSCOLORS 10

#define PSINJECT_DOCUMENTPROCESSCOLORSATEND 21

#define PSINJECT_ENDDEFAULTS 13

#define PSINJECT_ENDPAGECOMMENTS 107

#define PSINJECT_ENDPAGESETUP 102

#define PSINJECT_ENDPROLOG 15

#define PSINJECT_ENDSETUP 17

#define PSINJECT_ENDSTREAM 20

#define PSINJECT_EOF 19

#define PSINJECT_ORIENTATION 8

#define PSINJECT_PAGEBBOX 106

#define PSINJECT_PAGENUMBER 100

#define PSINJECT_PAGEORDER 7

#define PSINJECT_PAGES 4

#define PSINJECT_PAGESATEND 3

#define PSINJECT_PAGETRAILER 103

#define PSINJECT_PLATECOLOR 104

#define PSINJECT_PSADOBE 2

#define PSINJECT_SHOWPAGE 105

#define PSINJECT_TRAILER 18

#define PSINJECT_VMRESTORE 201

#define PSINJECT_VMSAVE 200

#define PSPROTOCOL_ASCII 0

#define PSPROTOCOL_BCP 1

#define PSPROTOCOL_BINARY 3

#define PSPROTOCOL_TBCP 2

#define PT_BEZIERTO 4

#define PT_CLOSEFIGURE 1

#define PT_LINETO 2

#define PT_MOVETO 6

#define QDC_ALL_PATHS 1

#define QDC_DATABASE_CURRENT 4

#define QDC_ONLY_ACTIVE_PATHS 2

#define QDI_DIBTOSCREEN 4

#define QDI_GETDIBITS 2

#define QDI_SETDIBITS 1

#define QDI_STRETCHDIB 8

#define QUERYDIBSUPPORT 3073

#define QUERYESCSUPPORT 8

#define R2_BLACK 1

#define R2_COPYPEN 13

#define R2_LAST 16

#define R2_MASKNOTPEN 3

#define R2_MASKPEN 9

#define R2_MASKPENNOT 5

#define R2_MERGENOTPEN 12

#define R2_MERGEPEN 15

#define R2_MERGEPENNOT 14

#define R2_NOP 11

#define R2_NOT 6

#define R2_NOTCOPYPEN 4

#define R2_NOTMASKPEN 8

#define R2_NOTMERGEPEN 2

#define R2_NOTXORPEN 10

#define R2_WHITE 16

#define R2_XORPEN 7

#define RASTER_FONTTYPE 1

#define RASTERCAPS 38

#define RC_BANDING 2

#define RC_BIGFONT 1024

#define RC_BITBLT 1

#define RC_BITMAP64 8

#define RC_DEVBITS 32768

#define RC_DI_BITMAP 128

#define RC_DIBTODEV 512

#define RC_FLOODFILL 4096

#define RC_GDI20_OUTPUT 16

#define RC_GDI20_STATE 32

#define RC_OP_DX_OUTPUT 16384

#define RC_PALETTE 256

#define RC_SAVEBITMAP 64

#define RC_SCALING 4

#define RC_STRETCHBLT 2048

#define RC_STRETCHDIB 8192

#define RDH_RECTANGLES 1

#define REFERENCE_BLACK_MAX 4000

#define REFERENCE_BLACK_MIN 0

#define REFERENCE_WHITE_MAX 10000

#define REFERENCE_WHITE_MIN 6000

#define RELATIVE 2

#define RESTORE_CTM 4100

#define RGB_GAMMA_MAX 65000

#define RGB_GAMMA_MIN 1344

#define RGN_AND 1

#define RGN_COPY 5

#define RGN_DIFF 4

#define RGN_ERROR 0

#define RGN_MAX 5

#define RGN_MIN 1

#define RGN_OR 2

#define RGN_XOR 3

#define RUSSIAN_CHARSET 204

#define SAVE_CTM 4101

#define SB_CONST_ALPHA 1

#define SB_GRAD_RECT 16

#define SB_GRAD_TRI 32

#define SB_NONE 0

#define SB_PIXEL_ALPHA 2

#define SB_PREMULT_ALPHA 4

#define SCALINGFACTORX 114

#define SCALINGFACTORY 115

#define SDC_ALLOW_CHANGES 1024

#define SDC_ALLOW_PATH_ORDER_CHANGES 8192

#define SDC_APPLY 128

#define SDC_FORCE_MODE_ENUMERATION 4096

#define SDC_NO_OPTIMIZATION 256

#define SDC_PATH_PERSIST_IF_REQUIRED 2048

#define SDC_SAVE_TO_DATABASE 512

#define SDC_TOPOLOGY_CLONE 2

#define SDC_TOPOLOGY_EXTEND 4

#define SDC_TOPOLOGY_EXTERNAL 8

#define SDC_TOPOLOGY_INTERNAL 1

#define SDC_TOPOLOGY_SUPPLIED 16

#define SDC_USE_DATABASE_CURRENT 15

#define SDC_USE_SUPPLIED_DISPLAY_CONFIG 32

#define SDC_VALIDATE 64

#define SELECTPAPERSOURCE 18

#define SET_ARC_DIRECTION 4102

#define SET_BACKGROUND_COLOR 4103

#define SET_BOUNDS 4109

#define SET_CLIP_BOX 4108

#define SET_MIRROR_MODE 4110

#define SET_POLY_MODE 4104

#define SET_SCREEN_ANGLE 4105

#define SET_SPREAD 4106

#define SETABORTPROC 9

#define SETALLJUSTVALUES 771

#define SETCHARSET 772

#define SETCOLORTABLE 4

#define SETCOPYCOUNT 17

#define SETDIBSCALING 32

#define SETICMPROFILE_EMBEDED 1

#define SETKERNTRACK 770

#define SETLINECAP 21

#define SETLINEJOIN 22

#define SETMITERLIMIT 23

#define SHADEBLENDCAPS 120

#define SHIFTJIS_CHARSET 128

#define SIMPLEREGION 2

#define SIZEPALETTE 104

#define SP_APPABORT -2

#define SP_ERROR -1

#define SP_NOTREPORTED 16384

#define SP_OUTOFDISK -4

#define SP_OUTOFMEMORY -5

#define SP_USERABORT -3

#define SPCLPASSTHROUGH2 4568

#define SRCAND 8913094

#define SRCCOPY 13369376

#define SRCERASE 4457256

#define SRCINVERT 6684742

#define SRCPAINT 15597702

#define STARTDOC 10

#define STOCK_LAST 19

#define STRETCH_ANDSCANS 1

#define STRETCH_DELETESCANS 3

#define STRETCH_HALFTONE 4

#define STRETCH_ORSCANS 2

#define STRETCHBLT 2048

#define SYMBOL_CHARSET 2

#define SYSPAL_ERROR 0

#define SYSPAL_NOSTATIC 2

#define SYSPAL_NOSTATIC256 3

#define SYSPAL_STATIC 1

#define SYSRGN 4

#define SYSTEM_FIXED_FONT 16

#define SYSTEM_FONT 13

#define TA_BASELINE 24

#define TA_BOTTOM 8

#define TA_CENTER 6

#define TA_LEFT 0

#define TA_MASK 287

#define TA_NOUPDATECP 0

#define TA_RIGHT 2

#define TA_RTLREADING 256

#define TA_TOP 0

#define TA_UPDATECP 1

#define TC_CP_STROKE 4

#define TC_CR_90 8

#define TC_CR_ANY 16

#define TC_EA_DOUBLE 512

#define TC_IA_ABLE 1024

#define TC_OP_CHARACTER 1

#define TC_OP_STROKE 2

#define TC_RA_ABLE 8192

#define TC_RESERVED 32768

#define TC_SA_CONTIN 256

#define TC_SA_DOUBLE 64

#define TC_SA_INTEGER 128

#define TC_SCROLLBLT 65536

#define TC_SF_X_YINDEP 32

#define TC_SO_ABLE 4096

#define TC_UA_ABLE 2048

#define TC_VA_ABLE 16384

#define TCI_SRCCHARSET 1

#define TCI_SRCCODEPAGE 2

#define TCI_SRCFONTSIG 3

#define TCI_SRCLOCALE 4096

#define TECHNOLOGY 2

#define TEXTCAPS 34

#define THAI_CHARSET 222

#define TMPF_DEVICE 8

#define TMPF_FIXED_PITCH 1

#define TMPF_TRUETYPE 4

#define TMPF_VECTOR 2

#define TRANSFORM_CTM 4107

#define TRANSPARENT 1

#define TRUETYPE_FONTTYPE 4

#define TT_AVAILABLE 1

#define TT_ENABLED 2

#define TT_POLYGON_TYPE 24

#define TT_PRIM_CSPLINE 3

#define TT_PRIM_LINE 1

#define TT_PRIM_QSPLINE 2

#define TURKISH_CHARSET 162

#define VARIABLE_PITCH 2

#define VERTRES 10

#define VERTSIZE 6

#define VIETNAMESE_CHARSET 163

#define VREFRESH 116

#define VTA_BASELINE 24

#define VTA_BOTTOM 2

#define VTA_CENTER 6

#define VTA_LEFT 8

#define VTA_RIGHT 0

#define VTA_TOP 0

#define WGL_FONT_LINES 0

#define WGL_FONT_POLYGONS 1

#define WGL_SWAP_MAIN_PLANE 1

#define WGL_SWAP_OVERLAY1 2

#define WGL_SWAP_OVERLAY10 1024

#define WGL_SWAP_OVERLAY11 2048

#define WGL_SWAP_OVERLAY12 4096

#define WGL_SWAP_OVERLAY13 8192

#define WGL_SWAP_OVERLAY14 16384

#define WGL_SWAP_OVERLAY15 32768

#define WGL_SWAP_OVERLAY2 4

#define WGL_SWAP_OVERLAY3 8

#define WGL_SWAP_OVERLAY4 16

#define WGL_SWAP_OVERLAY5 32

#define WGL_SWAP_OVERLAY6 64

#define WGL_SWAP_OVERLAY7 128

#define WGL_SWAP_OVERLAY8 256

#define WGL_SWAP_OVERLAY9 512

#define WGL_SWAP_UNDERLAY1 65536

#define WGL_SWAP_UNDERLAY10 33554432

#define WGL_SWAP_UNDERLAY11 67108864

#define WGL_SWAP_UNDERLAY12 134217728

#define WGL_SWAP_UNDERLAY13 268435456

#define WGL_SWAP_UNDERLAY14 536870912

#define WGL_SWAP_UNDERLAY15 1073741824

#define WGL_SWAP_UNDERLAY2 131072

#define WGL_SWAP_UNDERLAY3 262144

#define WGL_SWAP_UNDERLAY4 524288

#define WGL_SWAP_UNDERLAY5 1048576

#define WGL_SWAP_UNDERLAY6 2097152

#define WGL_SWAP_UNDERLAY7 4194304

#define WGL_SWAP_UNDERLAY8 8388608

#define WGL_SWAP_UNDERLAY9 16777216

#define WGL_SWAPMULTIPLE_MAX 16

#define WHITE_BRUSH 0

#define WHITE_PEN 6

#define WHITENESS 16711778

#define WHITEONBLACK 2

#define WINDING 2

typedef struct _ABC _ABC, *P_ABC;

struct _ABC {
    int abcA;
    UINT abcB;
    int abcC;
};

typedef struct _ABCFLOAT _ABCFLOAT, *P_ABCFLOAT;

struct _ABCFLOAT {
    FLOAT abcfA;
    FLOAT abcfB;
    FLOAT abcfC;
};

typedef struct _devicemodeW _devicemodeW, *P_devicemodeW;

typedef union _union_660 _union_660, *P_union_660;

typedef union _union_663 _union_663, *P_union_663;

typedef struct _struct_661 _struct_661, *P_struct_661;

typedef struct _struct_662 _struct_662, *P_struct_662;

union _union_663 {
    DWORD dmDisplayFlags;
    DWORD dmNup;
};

struct _struct_661 {
    short dmOrientation;
    short dmPaperSize;
    short dmPaperLength;
    short dmPaperWidth;
    short dmScale;
    short dmCopies;
    short dmDefaultSource;
    short dmPrintQuality;
};

struct _struct_662 {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
};

union _union_660 {
    struct _struct_661 field0;
    struct _struct_662 field1;
};

struct _devicemodeW {
    WCHAR dmDeviceName[32];
    WORD dmSpecVersion;
    WORD dmDriverVersion;
    WORD dmSize;
    WORD dmDriverExtra;
    DWORD dmFields;
    union _union_660 field_0x4c;
    short dmColor;
    short dmDuplex;
    short dmYResolution;
    short dmTTOption;
    short dmCollate;
    WCHAR dmFormName[32];
    WORD dmLogPixels;
    DWORD dmBitsPerPel;
    DWORD dmPelsWidth;
    DWORD dmPelsHeight;
    union _union_663 field_0xb4;
    DWORD dmDisplayFrequency;
    DWORD dmICMMethod;
    DWORD dmICMIntent;
    DWORD dmMediaType;
    DWORD dmDitherType;
    DWORD dmReserved1;
    DWORD dmReserved2;
    DWORD dmPanningWidth;
    DWORD dmPanningHeight;
};

typedef struct _DISPLAY_DEVICEA _DISPLAY_DEVICEA, *P_DISPLAY_DEVICEA;

struct _DISPLAY_DEVICEA {
    DWORD cb;
    CHAR DeviceName[32];
    CHAR DeviceString[128];
    DWORD StateFlags;
    CHAR DeviceID[128];
    CHAR DeviceKey[128];
};

typedef struct _DISPLAY_DEVICEW _DISPLAY_DEVICEW, *P_DISPLAY_DEVICEW;

struct _DISPLAY_DEVICEW {
    DWORD cb;
    WCHAR DeviceName[32];
    WCHAR DeviceString[128];
    DWORD StateFlags;
    WCHAR DeviceID[128];
    WCHAR DeviceKey[128];
};

typedef struct _DOCINFOA _DOCINFOA, *P_DOCINFOA;

struct _DOCINFOA {
    int cbSize;
    LPCSTR lpszDocName;
    LPCSTR lpszOutput;
    LPCSTR lpszDatatype;
    DWORD fwType;
};

typedef struct _DOCINFOW _DOCINFOW, *P_DOCINFOW;

struct _DOCINFOW {
    int cbSize;
    LPCWSTR lpszDocName;
    LPCWSTR lpszOutput;
    LPCWSTR lpszDatatype;
    DWORD fwType;
};

typedef struct _DRAWPATRECT _DRAWPATRECT, *P_DRAWPATRECT;

struct _DRAWPATRECT {
    POINT ptPosition;
    POINT ptSize;
    WORD wStyle;
    WORD wPattern;
};

typedef struct _FIXED _FIXED, *P_FIXED;

struct _FIXED {
    WORD fract;
    short value;
};

typedef struct _GLYPHMETRICS _GLYPHMETRICS, *P_GLYPHMETRICS;

struct _GLYPHMETRICS {
    UINT gmBlackBoxX;
    UINT gmBlackBoxY;
    POINT gmptGlyphOrigin;
    short gmCellIncX;
    short gmCellIncY;
};

typedef struct _GLYPHMETRICSFLOAT _GLYPHMETRICSFLOAT, *P_GLYPHMETRICSFLOAT;

typedef struct _POINTFLOAT _POINTFLOAT, *P_POINTFLOAT;

typedef struct _POINTFLOAT POINTFLOAT;

struct _POINTFLOAT {
    FLOAT x;
    FLOAT y;
};

struct _GLYPHMETRICSFLOAT {
    FLOAT gmfBlackBoxX;
    FLOAT gmfBlackBoxY;
    POINTFLOAT gmfptGlyphOrigin;
    FLOAT gmfCellIncX;
    FLOAT gmfCellIncY;
};

typedef struct _GRADIENT_RECT _GRADIENT_RECT, *P_GRADIENT_RECT;

struct _GRADIENT_RECT {
    ULONG UpperLeft;
    ULONG LowerRight;
};

typedef struct _GRADIENT_TRIANGLE _GRADIENT_TRIANGLE, *P_GRADIENT_TRIANGLE;

struct _GRADIENT_TRIANGLE {
    ULONG Vertex1;
    ULONG Vertex2;
    ULONG Vertex3;
};

typedef struct _MAT2 _MAT2, *P_MAT2;

typedef struct _FIXED FIXED;

struct _MAT2 {
    FIXED eM11;
    FIXED eM12;
    FIXED eM21;
    FIXED eM22;
};

typedef struct _OUTLINETEXTMETRICA _OUTLINETEXTMETRICA, *P_OUTLINETEXTMETRICA;

typedef struct tagTEXTMETRICA tagTEXTMETRICA, *PtagTEXTMETRICA;

typedef struct tagTEXTMETRICA TEXTMETRICA;

typedef struct tagPANOSE tagPANOSE, *PtagPANOSE;

typedef struct tagPANOSE PANOSE;

typedef CHAR * PSTR;

struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

struct tagPANOSE {
    BYTE bFamilyType;
    BYTE bSerifStyle;
    BYTE bWeight;
    BYTE bProportion;
    BYTE bContrast;
    BYTE bStrokeVariation;
    BYTE bArmStyle;
    BYTE bLetterform;
    BYTE bMidline;
    BYTE bXHeight;
};

struct _OUTLINETEXTMETRICA {
    UINT otmSize;
    TEXTMETRICA otmTextMetrics;
    BYTE otmFiller;
    PANOSE otmPanoseNumber;
    UINT otmfsSelection;
    UINT otmfsType;
    int otmsCharSlopeRise;
    int otmsCharSlopeRun;
    int otmItalicAngle;
    UINT otmEMSquare;
    int otmAscent;
    int otmDescent;
    UINT otmLineGap;
    UINT otmsCapEmHeight;
    UINT otmsXHeight;
    RECT otmrcFontBox;
    int otmMacAscent;
    int otmMacDescent;
    UINT otmMacLineGap;
    UINT otmusMinimumPPEM;
    POINT otmptSubscriptSize;
    POINT otmptSubscriptOffset;
    POINT otmptSuperscriptSize;
    POINT otmptSuperscriptOffset;
    UINT otmsStrikeoutSize;
    int otmsStrikeoutPosition;
    int otmsUnderscoreSize;
    int otmsUnderscorePosition;
    PSTR otmpFamilyName;
    PSTR otmpFaceName;
    PSTR otmpStyleName;
    PSTR otmpFullName;
};

typedef struct _OUTLINETEXTMETRICW _OUTLINETEXTMETRICW, *P_OUTLINETEXTMETRICW;

struct _OUTLINETEXTMETRICW {
    UINT otmSize;
    TEXTMETRICW otmTextMetrics;
    BYTE otmFiller;
    PANOSE otmPanoseNumber;
    UINT otmfsSelection;
    UINT otmfsType;
    int otmsCharSlopeRise;
    int otmsCharSlopeRun;
    int otmItalicAngle;
    UINT otmEMSquare;
    int otmAscent;
    int otmDescent;
    UINT otmLineGap;
    UINT otmsCapEmHeight;
    UINT otmsXHeight;
    RECT otmrcFontBox;
    int otmMacAscent;
    int otmMacDescent;
    UINT otmMacLineGap;
    UINT otmusMinimumPPEM;
    POINT otmptSubscriptSize;
    POINT otmptSubscriptOffset;
    POINT otmptSuperscriptSize;
    POINT otmptSuperscriptOffset;
    UINT otmsStrikeoutSize;
    int otmsStrikeoutPosition;
    int otmsUnderscoreSize;
    int otmsUnderscorePosition;
    PSTR otmpFamilyName;
    PSTR otmpFaceName;
    PSTR otmpStyleName;
    PSTR otmpFullName;
};

typedef struct _PSFEATURE_CUSTPAPER _PSFEATURE_CUSTPAPER, *P_PSFEATURE_CUSTPAPER;

struct _PSFEATURE_CUSTPAPER {
    LONG lOrientation;
    LONG lWidth;
    LONG lHeight;
    LONG lWidthOffset;
    LONG lHeightOffset;
};

typedef struct _PSFEATURE_OUTPUT _PSFEATURE_OUTPUT, *P_PSFEATURE_OUTPUT;

struct _PSFEATURE_OUTPUT {
    BOOL bPageIndependent;
    BOOL bSetPageDevice;
};

typedef struct _PSINJECTDATA _PSINJECTDATA, *P_PSINJECTDATA;

struct _PSINJECTDATA {
    DWORD DataBytes;
    WORD InjectionPoint;
    WORD PageNumber;
};

typedef struct _RASTERIZER_STATUS _RASTERIZER_STATUS, *P_RASTERIZER_STATUS;

struct _RASTERIZER_STATUS {
    short nSize;
    short wFlags;
    short nLanguageID;
};

typedef struct _RGNDATA _RGNDATA, *P_RGNDATA;

typedef struct _RGNDATAHEADER _RGNDATAHEADER, *P_RGNDATAHEADER;

typedef struct _RGNDATAHEADER RGNDATAHEADER;

struct _RGNDATAHEADER {
    DWORD dwSize;
    DWORD iType;
    DWORD nCount;
    DWORD nRgnSize;
    RECT rcBound;
};

struct _RGNDATA {
    RGNDATAHEADER rdh;
    char Buffer[1];
};

typedef struct _struct_688 _struct_688, *P_struct_688;

typedef union anon__struct_688_bitfield_1 anon__struct_688_bitfield_1, *Panon__struct_688_bitfield_1;

union anon__struct_688_bitfield_1 {
    UINT32 friendlyNameFromEdid:1; /* : bits 0 */
    UINT32 friendlyNameForced:1; /* : bits 1 */
    UINT32 edidIdsValid:1; /* : bits 2 */
    UINT32 reserved:29; /* : bits 3-31 */
};

struct _struct_688 {
    union anon__struct_688_bitfield_1 field_0x0;
};

typedef struct _struct_694 _struct_694, *P_struct_694;

typedef union anon__struct_694_bitfield_1 anon__struct_694_bitfield_1, *Panon__struct_694_bitfield_1;

union anon__struct_694_bitfield_1 {
    UINT32 bootPersistenceOn:1; /* : bits 0 */
    UINT32 reserved:31; /* : bits 1-31 */
};

struct _struct_694 {
    union anon__struct_694_bitfield_1 field_0x0;
};

typedef struct _TRIVERTEX _TRIVERTEX, *P_TRIVERTEX;

typedef USHORT COLOR16;

struct _TRIVERTEX {
    LONG x;
    LONG y;
    COLOR16 Red;
    COLOR16 Green;
    COLOR16 Blue;
    COLOR16 Alpha;
};

typedef union _union_678 _union_678, *P_union_678;

typedef struct DISPLAYCONFIG_TARGET_MODE DISPLAYCONFIG_TARGET_MODE, *PDISPLAYCONFIG_TARGET_MODE;

typedef struct DISPLAYCONFIG_SOURCE_MODE DISPLAYCONFIG_SOURCE_MODE, *PDISPLAYCONFIG_SOURCE_MODE;

typedef struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO DISPLAYCONFIG_VIDEO_SIGNAL_INFO, *PDISPLAYCONFIG_VIDEO_SIGNAL_INFO;

typedef enum enum_674 {
    DISPLAYCONFIG_PIXELFORMAT_16BPP=2,
    DISPLAYCONFIG_PIXELFORMAT_24BPP=3,
    DISPLAYCONFIG_PIXELFORMAT_32BPP=4,
    DISPLAYCONFIG_PIXELFORMAT_8BPP=1,
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32=-1,
    DISPLAYCONFIG_PIXELFORMAT_NONGDI=5
} enum_674;

typedef enum enum_674 DISPLAYCONFIG_PIXELFORMAT;

typedef struct DISPLAYCONFIG_RATIONAL DISPLAYCONFIG_RATIONAL, *PDISPLAYCONFIG_RATIONAL;

typedef struct DISPLAYCONFIG_2DREGION DISPLAYCONFIG_2DREGION, *PDISPLAYCONFIG_2DREGION;

typedef enum enum_668 {
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32=-1,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED=2,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST=3,
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST=3,
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE=1,
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED=0
} enum_668;

typedef enum enum_668 DISPLAYCONFIG_SCANLINE_ORDERING;

struct DISPLAYCONFIG_RATIONAL {
    UINT32 Numerator;
    UINT32 Denominator;
};

struct DISPLAYCONFIG_2DREGION {
    UINT32 cx;
    UINT32 cy;
};

struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO {
    UINT64 pixelRate;
    struct DISPLAYCONFIG_RATIONAL hSyncFreq;
    struct DISPLAYCONFIG_RATIONAL vSyncFreq;
    struct DISPLAYCONFIG_2DREGION activeSize;
    struct DISPLAYCONFIG_2DREGION totalSize;
    UINT32 videoStandard;
    DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
};

struct DISPLAYCONFIG_SOURCE_MODE {
    UINT32 width;
    UINT32 height;
    DISPLAYCONFIG_PIXELFORMAT pixelFormat;
    POINTL position;
};

struct DISPLAYCONFIG_TARGET_MODE {
    struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO targetVideoSignalInfo;
};

union _union_678 {
    struct DISPLAYCONFIG_TARGET_MODE targetMode;
    struct DISPLAYCONFIG_SOURCE_MODE sourceMode;
};

typedef union _union_687 _union_687, *P_union_687;

union _union_687 {
    struct _struct_688 field0;
    UINT32 value;
};

typedef union _union_693 _union_693, *P_union_693;

union _union_693 {
    struct _struct_694 field0;
    UINT32 value;
};

typedef struct _WGLSWAP _WGLSWAP, *P_WGLSWAP;

struct _WGLSWAP {
    HDC hdc;
    UINT uiFlags;
};

typedef struct _ABC ABC;

typedef struct _ABCFLOAT ABCFLOAT;

typedef BOOL (* ABORTPROC)(HDC, int);

typedef struct tagAXESLISTA tagAXESLISTA, *PtagAXESLISTA;

typedef struct tagAXESLISTA AXESLISTA;

typedef AXESLISTA AXESLIST;

typedef struct tagAXISINFOA tagAXISINFOA, *PtagAXISINFOA;

typedef struct tagAXISINFOA AXISINFOA;

struct tagAXISINFOA {
    LONG axMinValue;
    LONG axMaxValue;
    BYTE axAxisName[16];
};

struct tagAXESLISTA {
    DWORD axlReserved;
    DWORD axlNumAxes;
    AXISINFOA axlAxisInfo[16];
};

typedef struct tagAXESLISTW tagAXESLISTW, *PtagAXESLISTW;

typedef struct tagAXESLISTW AXESLISTW;

typedef struct tagAXISINFOW tagAXISINFOW, *PtagAXISINFOW;

typedef struct tagAXISINFOW AXISINFOW;

struct tagAXISINFOW {
    LONG axMinValue;
    LONG axMaxValue;
    WCHAR axAxisName[16];
};

struct tagAXESLISTW {
    DWORD axlReserved;
    DWORD axlNumAxes;
    AXISINFOW axlAxisInfo[16];
};

typedef AXISINFOA AXISINFO;

typedef BYTE BCHAR;

typedef struct tagBITMAP tagBITMAP, *PtagBITMAP;

typedef struct tagBITMAP BITMAP;

struct tagBITMAP {
    LONG bmType;
    LONG bmWidth;
    LONG bmHeight;
    LONG bmWidthBytes;
    WORD bmPlanes;
    WORD bmBitsPixel;
    LPVOID bmBits;
};

typedef struct tagBITMAPCOREHEADER tagBITMAPCOREHEADER, *PtagBITMAPCOREHEADER;

typedef struct tagBITMAPCOREHEADER BITMAPCOREHEADER;

struct tagBITMAPCOREHEADER {
    DWORD bcSize;
    WORD bcWidth;
    WORD bcHeight;
    WORD bcPlanes;
    WORD bcBitCount;
};

typedef struct tagBITMAPCOREINFO tagBITMAPCOREINFO, *PtagBITMAPCOREINFO;

typedef struct tagBITMAPCOREINFO BITMAPCOREINFO;

typedef struct tagRGBTRIPLE tagRGBTRIPLE, *PtagRGBTRIPLE;

typedef struct tagRGBTRIPLE RGBTRIPLE;

struct tagRGBTRIPLE {
    BYTE rgbtBlue;
    BYTE rgbtGreen;
    BYTE rgbtRed;
};

struct tagBITMAPCOREINFO {
    BITMAPCOREHEADER bmciHeader;
    RGBTRIPLE bmciColors[1];
};

typedef struct tagBITMAPFILEHEADER tagBITMAPFILEHEADER, *PtagBITMAPFILEHEADER;

typedef struct tagBITMAPFILEHEADER BITMAPFILEHEADER;

struct tagBITMAPFILEHEADER {
    WORD bfType;
    DWORD bfSize;
    WORD bfReserved1;
    WORD bfReserved2;
    DWORD bfOffBits;
};

typedef struct tagBITMAPINFO tagBITMAPINFO, *PtagBITMAPINFO;

typedef struct tagBITMAPINFO BITMAPINFO;

typedef struct tagRGBQUAD tagRGBQUAD, *PtagRGBQUAD;

typedef struct tagRGBQUAD RGBQUAD;

struct tagRGBQUAD {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbReserved;
};

struct tagBITMAPINFO {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[1];
};

typedef struct BITMAPV4HEADER BITMAPV4HEADER, *PBITMAPV4HEADER;

typedef struct tagICEXYZTRIPLE tagICEXYZTRIPLE, *PtagICEXYZTRIPLE;

typedef struct tagICEXYZTRIPLE CIEXYZTRIPLE;

typedef struct tagCIEXYZ tagCIEXYZ, *PtagCIEXYZ;

typedef struct tagCIEXYZ CIEXYZ;

typedef long FXPT2DOT30;

struct tagCIEXYZ {
    FXPT2DOT30 ciexyzX;
    FXPT2DOT30 ciexyzY;
    FXPT2DOT30 ciexyzZ;
};

struct tagICEXYZTRIPLE {
    CIEXYZ ciexyzRed;
    CIEXYZ ciexyzGreen;
    CIEXYZ ciexyzBlue;
};

struct BITMAPV4HEADER {
    DWORD bV4Size;
    LONG bV4Width;
    LONG bV4Height;
    WORD bV4Planes;
    WORD bV4BitCount;
    DWORD bV4V4Compression;
    DWORD bV4SizeImage;
    LONG bV4XPelsPerMeter;
    LONG bV4YPelsPerMeter;
    DWORD bV4ClrUsed;
    DWORD bV4ClrImportant;
    DWORD bV4RedMask;
    DWORD bV4GreenMask;
    DWORD bV4BlueMask;
    DWORD bV4AlphaMask;
    DWORD bV4CSType;
    CIEXYZTRIPLE bV4Endpoints;
    DWORD bV4GammaRed;
    DWORD bV4GammaGreen;
    DWORD bV4GammaBlue;
};

typedef struct BITMAPV5HEADER BITMAPV5HEADER, *PBITMAPV5HEADER;

struct BITMAPV5HEADER {
    DWORD bV5Size;
    LONG bV5Width;
    LONG bV5Height;
    WORD bV5Planes;
    WORD bV5BitCount;
    DWORD bV5Compression;
    DWORD bV5SizeImage;
    LONG bV5XPelsPerMeter;
    LONG bV5YPelsPerMeter;
    DWORD bV5ClrUsed;
    DWORD bV5ClrImportant;
    DWORD bV5RedMask;
    DWORD bV5GreenMask;
    DWORD bV5BlueMask;
    DWORD bV5AlphaMask;
    DWORD bV5CSType;
    CIEXYZTRIPLE bV5Endpoints;
    DWORD bV5GammaRed;
    DWORD bV5GammaGreen;
    DWORD bV5GammaBlue;
    DWORD bV5Intent;
    DWORD bV5ProfileData;
    DWORD bV5ProfileSize;
    DWORD bV5Reserved;
};

typedef struct tagCHARSETINFO tagCHARSETINFO, *PtagCHARSETINFO;

typedef struct tagCHARSETINFO CHARSETINFO;

typedef struct tagFONTSIGNATURE tagFONTSIGNATURE, *PtagFONTSIGNATURE;

typedef struct tagFONTSIGNATURE FONTSIGNATURE;

struct tagFONTSIGNATURE {
    DWORD fsUsb[4];
    DWORD fsCsb[2];
};

struct tagCHARSETINFO {
    UINT ciCharset;
    UINT ciACP;
    FONTSIGNATURE fs;
};

typedef struct tagCOLORADJUSTMENT tagCOLORADJUSTMENT, *PtagCOLORADJUSTMENT;

typedef struct tagCOLORADJUSTMENT COLORADJUSTMENT;

struct tagCOLORADJUSTMENT {
    WORD caSize;
    WORD caFlags;
    WORD caIlluminantIndex;
    WORD caRedGamma;
    WORD caGreenGamma;
    WORD caBlueGamma;
    WORD caReferenceBlack;
    WORD caReferenceWhite;
    SHORT caContrast;
    SHORT caBrightness;
    SHORT caColorfulness;
    SHORT caRedGreenTint;
};

typedef struct tagDESIGNVECTOR tagDESIGNVECTOR, *PtagDESIGNVECTOR;

typedef struct tagDESIGNVECTOR DESIGNVECTOR;

struct tagDESIGNVECTOR {
    DWORD dvReserved;
    DWORD dvNumAxes;
    LONG dvValues[16];
};

typedef struct _devicemodeA DEVMODEA;

typedef DEVMODEA DEVMODE;

typedef struct _devicemodeW DEVMODEW;

typedef struct tagDIBSECTION tagDIBSECTION, *PtagDIBSECTION;

typedef struct tagDIBSECTION DIBSECTION;

struct tagDIBSECTION {
    BITMAP dsBm;
    BITMAPINFOHEADER dsBmih;
    DWORD dsBitfields[3];
    HANDLE dshSection;
    DWORD dsOffset;
};

typedef struct _DISPLAY_DEVICEA DISPLAY_DEVICEA;

typedef DISPLAY_DEVICEA DISPLAY_DEVICE;

typedef struct _DISPLAY_DEVICEW DISPLAY_DEVICEW;

typedef struct DISPLAYCONFIG_ADAPTER_NAME DISPLAYCONFIG_ADAPTER_NAME, *PDISPLAYCONFIG_ADAPTER_NAME;

typedef struct DISPLAYCONFIG_DEVICE_INFO_HEADER DISPLAYCONFIG_DEVICE_INFO_HEADER, *PDISPLAYCONFIG_DEVICE_INFO_HEADER;

typedef enum enum_683 {
    DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32=-1,
    DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME=4,
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME=1,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME=2,
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE=3,
    DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE=5
} enum_683;

typedef enum enum_683 DISPLAYCONFIG_DEVICE_INFO_TYPE;

struct DISPLAYCONFIG_DEVICE_INFO_HEADER {
    DISPLAYCONFIG_DEVICE_INFO_TYPE type;
    UINT32 size;
    LUID adapterId;
    UINT32 id;
};

struct DISPLAYCONFIG_ADAPTER_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR adapterDevicePath[128];
};

typedef struct DISPLAYCONFIG_MODE_INFO DISPLAYCONFIG_MODE_INFO, *PDISPLAYCONFIG_MODE_INFO;

typedef enum enum_673 {
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32=-1,
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE=1,
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET=2
} enum_673;

typedef enum enum_673 DISPLAYCONFIG_MODE_INFO_TYPE;

struct DISPLAYCONFIG_MODE_INFO {
    DISPLAYCONFIG_MODE_INFO_TYPE infoType;
    UINT32 id;
    LUID adapterId;
    union _union_678 field_0x10;
};

typedef struct DISPLAYCONFIG_PATH_INFO DISPLAYCONFIG_PATH_INFO, *PDISPLAYCONFIG_PATH_INFO;

typedef struct DISPLAYCONFIG_PATH_SOURCE_INFO DISPLAYCONFIG_PATH_SOURCE_INFO, *PDISPLAYCONFIG_PATH_SOURCE_INFO;

typedef struct DISPLAYCONFIG_PATH_TARGET_INFO DISPLAYCONFIG_PATH_TARGET_INFO, *PDISPLAYCONFIG_PATH_TARGET_INFO;

typedef enum enum_667 {
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO=3,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO=2,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED=11,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL=10,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI=4,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN=8,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32=-1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15=0,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI=5,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL=-2147483648,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS=6,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER=0,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI=9,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE=14,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO=1,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED=13,
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL=12
} enum_667;

typedef enum enum_667 DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;

typedef enum enum_672 {
    DISPLAYCONFIG_ROTATION_FORCE_UINT32=-1,
    DISPLAYCONFIG_ROTATION_IDENTITY=1,
    DISPLAYCONFIG_ROTATION_ROTATE180=3,
    DISPLAYCONFIG_ROTATION_ROTATE270=4,
    DISPLAYCONFIG_ROTATION_ROTATE90=2
} enum_672;

typedef enum enum_672 DISPLAYCONFIG_ROTATION;

typedef enum enum_671 {
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX=4,
    DISPLAYCONFIG_SCALING_CENTERED=2,
    DISPLAYCONFIG_SCALING_CUSTOM=5,
    DISPLAYCONFIG_SCALING_FORCE_UINT32=-1,
    DISPLAYCONFIG_SCALING_IDENTITY=1,
    DISPLAYCONFIG_SCALING_PREFERRED=128,
    DISPLAYCONFIG_SCALING_STRETCHED=3
} enum_671;

typedef enum enum_671 DISPLAYCONFIG_SCALING;

struct DISPLAYCONFIG_PATH_TARGET_INFO {
    LUID adapterId;
    UINT32 id;
    UINT32 modeInfoIdx;
    DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    DISPLAYCONFIG_ROTATION rotation;
    DISPLAYCONFIG_SCALING scaling;
    struct DISPLAYCONFIG_RATIONAL refreshRate;
    DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
    BOOL targetAvailable;
    UINT32 statusFlags;
};

struct DISPLAYCONFIG_PATH_SOURCE_INFO {
    LUID adapterId;
    UINT32 id;
    UINT32 modeInfoIdx;
    UINT32 statusFlags;
};

struct DISPLAYCONFIG_PATH_INFO {
    struct DISPLAYCONFIG_PATH_SOURCE_INFO sourceInfo;
    struct DISPLAYCONFIG_PATH_TARGET_INFO targetInfo;
    UINT32 flags;
};

typedef struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE DISPLAYCONFIG_SET_TARGET_PERSISTENCE, *PDISPLAYCONFIG_SET_TARGET_PERSISTENCE;

struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    union _union_693 field_0x14;
};

typedef struct DISPLAYCONFIG_SOURCE_DEVICE_NAME DISPLAYCONFIG_SOURCE_DEVICE_NAME, *PDISPLAYCONFIG_SOURCE_DEVICE_NAME;

struct DISPLAYCONFIG_SOURCE_DEVICE_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    WCHAR viewGdiDeviceName[32];
};

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME DISPLAYCONFIG_TARGET_DEVICE_NAME, *PDISPLAYCONFIG_TARGET_DEVICE_NAME;

typedef struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS, *PDISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;

struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS {
    union _union_687 field_0x0;
};

struct DISPLAYCONFIG_TARGET_DEVICE_NAME {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
    DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
    UINT16 edidManufactureId;
    UINT16 edidProductCodeId;
    UINT32 connectorInstance;
    WCHAR monitorFriendlyDeviceName[64];
    WCHAR monitorDevicePath[128];
};

typedef struct DISPLAYCONFIG_TARGET_PREFERRED_MODE DISPLAYCONFIG_TARGET_PREFERRED_MODE, *PDISPLAYCONFIG_TARGET_PREFERRED_MODE;

struct DISPLAYCONFIG_TARGET_PREFERRED_MODE {
    struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
    UINT32 width;
    UINT32 height;
    struct DISPLAYCONFIG_TARGET_MODE targetMode;
};

typedef enum enum_682 {
    DISPLAYCONFIG_TOPOLOGY_CLONE=2,
    DISPLAYCONFIG_TOPOLOGY_EXTEND=4,
    DISPLAYCONFIG_TOPOLOGY_EXTERNAL=8,
    DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32=-1,
    DISPLAYCONFIG_TOPOLOGY_INTERNAL=1
} enum_682;

typedef enum enum_682 DISPLAYCONFIG_TOPOLOGY_ID;

typedef struct _DOCINFOA DOCINFOA;

typedef DOCINFOA DOCINFO;

typedef struct _DOCINFOW DOCINFOW;

typedef struct _DRAWPATRECT DRAWPATRECT;

typedef struct tagEMR tagEMR, *PtagEMR;

typedef struct tagEMR EMR;

struct tagEMR {
    DWORD iType;
    DWORD nSize;
};

typedef struct tagABORTPATH tagABORTPATH, *PtagABORTPATH;

typedef struct tagABORTPATH EMRABORTPATH;

struct tagABORTPATH {
    EMR emr;
};

typedef struct tagEMRALPHABLEND tagEMRALPHABLEND, *PtagEMRALPHABLEND;

typedef struct tagEMRALPHABLEND EMRALPHABLEND;

typedef struct tagXFORM tagXFORM, *PtagXFORM;

typedef struct tagXFORM XFORM;

struct tagXFORM {
    FLOAT eM11;
    FLOAT eM12;
    FLOAT eM21;
    FLOAT eM22;
    FLOAT eDx;
    FLOAT eDy;
};

struct tagEMRALPHABLEND {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRANGLEARC tagEMRANGLEARC, *PtagEMRANGLEARC;

typedef struct tagEMRANGLEARC EMRANGLEARC;

struct tagEMRANGLEARC {
    EMR emr;
    POINTL ptlCenter;
    DWORD nRadius;
    FLOAT eStartAngle;
    FLOAT eSweepAngle;
};

typedef struct tagEMRARC tagEMRARC, *PtagEMRARC;

typedef struct tagEMRARC EMRARC;

struct tagEMRARC {
    EMR emr;
    RECTL rclBox;
    POINTL ptlStart;
    POINTL ptlEnd;
};

typedef struct tagEMRARC EMRARCTO;

typedef struct tagABORTPATH EMRBEGINPATH;

typedef struct tagEMRBITBLT tagEMRBITBLT, *PtagEMRBITBLT;

typedef struct tagEMRBITBLT EMRBITBLT;

struct tagEMRBITBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
};

typedef struct tagEMRARC EMRCHORD;

typedef struct tagABORTPATH EMRCLOSEFIGURE;

typedef struct tagCOLORCORRECTPALETTE tagCOLORCORRECTPALETTE, *PtagCOLORCORRECTPALETTE;

typedef struct tagCOLORCORRECTPALETTE EMRCOLORCORRECTPALETTE;

struct tagCOLORCORRECTPALETTE {
    EMR emr;
    DWORD ihPalette;
    DWORD nFirstEntry;
    DWORD nPalEntries;
    DWORD nReserved;
};

typedef struct tagCOLORMATCHTOTARGET tagCOLORMATCHTOTARGET, *PtagCOLORMATCHTOTARGET;

typedef struct tagCOLORMATCHTOTARGET EMRCOLORMATCHTOTARGET;

struct tagCOLORMATCHTOTARGET {
    EMR emr;
    DWORD dwAction;
    DWORD dwFlags;
    DWORD cbName;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRCREATEBRUSHINDIRECT tagEMRCREATEBRUSHINDIRECT, *PtagEMRCREATEBRUSHINDIRECT;

typedef struct tagEMRCREATEBRUSHINDIRECT EMRCREATEBRUSHINDIRECT;

typedef struct tagLOGBRUSH32 tagLOGBRUSH32, *PtagLOGBRUSH32;

typedef struct tagLOGBRUSH32 LOGBRUSH32;

struct tagLOGBRUSH32 {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG lbHatch;
};

struct tagEMRCREATEBRUSHINDIRECT {
    EMR emr;
    DWORD ihBrush;
    LOGBRUSH32 lb;
};

typedef struct tagEMRCREATECOLORSPACE tagEMRCREATECOLORSPACE, *PtagEMRCREATECOLORSPACE;

typedef struct tagEMRCREATECOLORSPACE EMRCREATECOLORSPACE;

typedef struct tagLOGCOLORSPACEA tagLOGCOLORSPACEA, *PtagLOGCOLORSPACEA;

typedef struct tagLOGCOLORSPACEA LOGCOLORSPACEA;

typedef LONG LCSCSTYPE;

typedef LONG LCSGAMUTMATCH;

struct tagLOGCOLORSPACEA {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    CHAR lcsFilename[260];
};

struct tagEMRCREATECOLORSPACE {
    EMR emr;
    DWORD ihCS;
    LOGCOLORSPACEA lcs;
};

typedef struct tagEMRCREATECOLORSPACEW tagEMRCREATECOLORSPACEW, *PtagEMRCREATECOLORSPACEW;

typedef struct tagEMRCREATECOLORSPACEW EMRCREATECOLORSPACEW;

typedef struct tagLOGCOLORSPACEW tagLOGCOLORSPACEW, *PtagLOGCOLORSPACEW;

typedef struct tagLOGCOLORSPACEW LOGCOLORSPACEW;

struct tagLOGCOLORSPACEW {
    DWORD lcsSignature;
    DWORD lcsVersion;
    DWORD lcsSize;
    LCSCSTYPE lcsCSType;
    LCSGAMUTMATCH lcsIntent;
    CIEXYZTRIPLE lcsEndpoints;
    DWORD lcsGammaRed;
    DWORD lcsGammaGreen;
    DWORD lcsGammaBlue;
    WCHAR lcsFilename[260];
};

struct tagEMRCREATECOLORSPACEW {
    EMR emr;
    DWORD ihCS;
    LOGCOLORSPACEW lcs;
    DWORD dwFlags;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT tagEMRCREATEDIBPATTERNBRUSHPT, *PtagEMRCREATEDIBPATTERNBRUSHPT;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT EMRCREATEDIBPATTERNBRUSHPT;

struct tagEMRCREATEDIBPATTERNBRUSHPT {
    EMR emr;
    DWORD ihBrush;
    DWORD iUsage;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
};

typedef struct tagEMRCREATEMONOBRUSH tagEMRCREATEMONOBRUSH, *PtagEMRCREATEMONOBRUSH;

typedef struct tagEMRCREATEMONOBRUSH EMRCREATEMONOBRUSH;

struct tagEMRCREATEMONOBRUSH {
    EMR emr;
    DWORD ihBrush;
    DWORD iUsage;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
};

typedef struct tagEMRCREATEPALETTE tagEMRCREATEPALETTE, *PtagEMRCREATEPALETTE;

typedef struct tagEMRCREATEPALETTE EMRCREATEPALETTE;

struct tagEMRCREATEPALETTE {
    EMR emr;
    DWORD ihPal;
    LOGPALETTE lgpl;
};

typedef struct tagEMRCREATEPEN tagEMRCREATEPEN, *PtagEMRCREATEPEN;

typedef struct tagEMRCREATEPEN EMRCREATEPEN;

typedef struct tagLOGPEN tagLOGPEN, *PtagLOGPEN;

typedef struct tagLOGPEN LOGPEN;

struct tagLOGPEN {
    UINT lopnStyle;
    POINT lopnWidth;
    COLORREF lopnColor;
};

struct tagEMRCREATEPEN {
    EMR emr;
    DWORD ihPen;
    LOGPEN lopn;
};

typedef struct tagEMRSETCOLORSPACE tagEMRSETCOLORSPACE, *PtagEMRSETCOLORSPACE;

typedef struct tagEMRSETCOLORSPACE EMRDELETECOLORSPACE;

struct tagEMRSETCOLORSPACE {
    EMR emr;
    DWORD ihCS;
};

typedef struct tagEMRSELECTOBJECT tagEMRSELECTOBJECT, *PtagEMRSELECTOBJECT;

typedef struct tagEMRSELECTOBJECT EMRDELETEOBJECT;

struct tagEMRSELECTOBJECT {
    EMR emr;
    DWORD ihObject;
};

typedef struct tagEMREXTESCAPE tagEMREXTESCAPE, *PtagEMREXTESCAPE;

typedef struct tagEMREXTESCAPE EMRDRAWESCAPE;

struct tagEMREXTESCAPE {
    EMR emr;
    INT iEscape;
    INT cbEscData;
    BYTE EscData[1];
};

typedef struct tagEMRELLIPSE tagEMRELLIPSE, *PtagEMRELLIPSE;

typedef struct tagEMRELLIPSE EMRELLIPSE;

struct tagEMRELLIPSE {
    EMR emr;
    RECTL rclBox;
};

typedef struct tagABORTPATH EMRENDPATH;

typedef struct tagEMREOF tagEMREOF, *PtagEMREOF;

typedef struct tagEMREOF EMREOF;

struct tagEMREOF {
    EMR emr;
    DWORD nPalEntries;
    DWORD offPalEntries;
    DWORD nSizeLast;
};

typedef struct tagEMREXCLUDECLIPRECT tagEMREXCLUDECLIPRECT, *PtagEMREXCLUDECLIPRECT;

typedef struct tagEMREXCLUDECLIPRECT EMREXCLUDECLIPRECT;

struct tagEMREXCLUDECLIPRECT {
    EMR emr;
    RECTL rclClip;
};

typedef struct tagEMREXTCREATEFONTINDIRECTW tagEMREXTCREATEFONTINDIRECTW, *PtagEMREXTCREATEFONTINDIRECTW;

typedef struct tagEMREXTCREATEFONTINDIRECTW EMREXTCREATEFONTINDIRECTW;

typedef struct tagEXTLOGFONTW tagEXTLOGFONTW, *PtagEXTLOGFONTW;

typedef struct tagEXTLOGFONTW EXTLOGFONTW;

struct tagEXTLOGFONTW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    DWORD elfVersion;
    DWORD elfStyleSize;
    DWORD elfMatch;
    DWORD elfReserved;
    BYTE elfVendorId[4];
    DWORD elfCulture;
    PANOSE elfPanose;
};

struct tagEMREXTCREATEFONTINDIRECTW {
    EMR emr;
    DWORD ihFont;
    EXTLOGFONTW elfw;
};

typedef struct tagEMREXTCREATEPEN tagEMREXTCREATEPEN, *PtagEMREXTCREATEPEN;

typedef struct tagEMREXTCREATEPEN EMREXTCREATEPEN;

typedef struct tagEXTLOGPEN32 tagEXTLOGPEN32, *PtagEXTLOGPEN32;

typedef struct tagEXTLOGPEN32 EXTLOGPEN32;

struct tagEXTLOGPEN32 {
    DWORD elpPenStyle;
    DWORD elpWidth;
    UINT elpBrushStyle;
    COLORREF elpColor;
    ULONG elpHatch;
    DWORD elpNumEntries;
    DWORD elpStyleEntry[1];
};

struct tagEMREXTCREATEPEN {
    EMR emr;
    DWORD ihPen;
    DWORD offBmi;
    DWORD cbBmi;
    DWORD offBits;
    DWORD cbBits;
    EXTLOGPEN32 elp;
};

typedef struct tagEMREXTESCAPE EMREXTESCAPE;

typedef struct tagEMREXTFLOODFILL tagEMREXTFLOODFILL, *PtagEMREXTFLOODFILL;

typedef struct tagEMREXTFLOODFILL EMREXTFLOODFILL;

struct tagEMREXTFLOODFILL {
    EMR emr;
    POINTL ptlStart;
    COLORREF crColor;
    DWORD iMode;
};

typedef struct tagEMREXTSELECTCLIPRGN tagEMREXTSELECTCLIPRGN, *PtagEMREXTSELECTCLIPRGN;

typedef struct tagEMREXTSELECTCLIPRGN EMREXTSELECTCLIPRGN;

struct tagEMREXTSELECTCLIPRGN {
    EMR emr;
    DWORD cbRgnData;
    DWORD iMode;
    BYTE RgnData[1];
};

typedef struct tagEMREXTTEXTOUTA tagEMREXTTEXTOUTA, *PtagEMREXTTEXTOUTA;

typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTA;

typedef struct tagEMRTEXT tagEMRTEXT, *PtagEMRTEXT;

typedef struct tagEMRTEXT EMRTEXT;

struct tagEMRTEXT {
    POINTL ptlReference;
    DWORD nChars;
    DWORD offString;
    DWORD fOptions;
    RECTL rcl;
    DWORD offDx;
};

struct tagEMREXTTEXTOUTA {
    EMR emr;
    RECTL rclBounds;
    DWORD iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    EMRTEXT emrtext;
};

typedef struct tagEMREXTTEXTOUTA EMREXTTEXTOUTW;

typedef struct tagEMRFILLPATH tagEMRFILLPATH, *PtagEMRFILLPATH;

typedef struct tagEMRFILLPATH EMRFILLPATH;

struct tagEMRFILLPATH {
    EMR emr;
    RECTL rclBounds;
};

typedef struct tagEMRFILLRGN tagEMRFILLRGN, *PtagEMRFILLRGN;

typedef struct tagEMRFILLRGN EMRFILLRGN;

struct tagEMRFILLRGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    DWORD ihBrush;
    BYTE RgnData[1];
};

typedef struct tagABORTPATH EMRFLATTENPATH;

typedef struct tagEMRFORMAT tagEMRFORMAT, *PtagEMRFORMAT;

typedef struct tagEMRFORMAT EMRFORMAT;

struct tagEMRFORMAT {
    DWORD dSignature;
    DWORD nVersion;
    DWORD cbData;
    DWORD offData;
};

typedef struct tagEMRFRAMERGN tagEMRFRAMERGN, *PtagEMRFRAMERGN;

typedef struct tagEMRFRAMERGN EMRFRAMERGN;

struct tagEMRFRAMERGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    DWORD ihBrush;
    SIZEL szlStroke;
    BYTE RgnData[1];
};

typedef struct tagEMRGDICOMMENT tagEMRGDICOMMENT, *PtagEMRGDICOMMENT;

typedef struct tagEMRGDICOMMENT EMRGDICOMMENT;

struct tagEMRGDICOMMENT {
    EMR emr;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRGLSBOUNDEDRECORD tagEMRGLSBOUNDEDRECORD, *PtagEMRGLSBOUNDEDRECORD;

typedef struct tagEMRGLSBOUNDEDRECORD EMRGLSBOUNDEDRECORD;

struct tagEMRGLSBOUNDEDRECORD {
    EMR emr;
    RECTL rclBounds;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRGLSRECORD tagEMRGLSRECORD, *PtagEMRGLSRECORD;

typedef struct tagEMRGLSRECORD EMRGLSRECORD;

struct tagEMRGLSRECORD {
    EMR emr;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRGRADIENTFILL tagEMRGRADIENTFILL, *PtagEMRGRADIENTFILL;

typedef struct tagEMRGRADIENTFILL EMRGRADIENTFILL;

typedef struct _TRIVERTEX TRIVERTEX;

struct tagEMRGRADIENTFILL {
    EMR emr;
    RECTL rclBounds;
    DWORD nVer;
    DWORD nTri;
    ULONG ulMode;
    TRIVERTEX Ver[1];
};

typedef struct tagEMREXCLUDECLIPRECT EMRINTERSECTCLIPRECT;

typedef struct tagEMRINVERTRGN tagEMRINVERTRGN, *PtagEMRINVERTRGN;

typedef struct tagEMRINVERTRGN EMRINVERTRGN;

struct tagEMRINVERTRGN {
    EMR emr;
    RECTL rclBounds;
    DWORD cbRgnData;
    BYTE RgnData[1];
};

typedef struct tagEMRLINETO tagEMRLINETO, *PtagEMRLINETO;

typedef struct tagEMRLINETO EMRLINETO;

struct tagEMRLINETO {
    EMR emr;
    POINTL ptl;
};

typedef struct tagEMRMASKBLT tagEMRMASKBLT, *PtagEMRMASKBLT;

typedef struct tagEMRMASKBLT EMRMASKBLT;

struct tagEMRMASKBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG xMask;
    LONG yMask;
    DWORD iUsageMask;
    DWORD offBmiMask;
    DWORD cbBmiMask;
    DWORD offBitsMask;
    DWORD cbBitsMask;
};

typedef struct tagEMRMODIFYWORLDTRANSFORM tagEMRMODIFYWORLDTRANSFORM, *PtagEMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRMODIFYWORLDTRANSFORM EMRMODIFYWORLDTRANSFORM;

struct tagEMRMODIFYWORLDTRANSFORM {
    EMR emr;
    XFORM xform;
    DWORD iMode;
};

typedef struct tagEMRLINETO EMRMOVETOEX;

typedef struct tagEMRNAMEDESCAPE tagEMRNAMEDESCAPE, *PtagEMRNAMEDESCAPE;

typedef struct tagEMRNAMEDESCAPE EMRNAMEDESCAPE;

struct tagEMRNAMEDESCAPE {
    EMR emr;
    INT iEscape;
    INT cbDriver;
    INT cbEscData;
    BYTE EscData[1];
};

typedef struct tagEMROFFSETCLIPRGN tagEMROFFSETCLIPRGN, *PtagEMROFFSETCLIPRGN;

typedef struct tagEMROFFSETCLIPRGN EMROFFSETCLIPRGN;

struct tagEMROFFSETCLIPRGN {
    EMR emr;
    POINTL ptlOffset;
};

typedef struct tagEMRINVERTRGN EMRPAINTRGN;

typedef struct tagEMRARC EMRPIE;

typedef struct tagEMRPIXELFORMAT tagEMRPIXELFORMAT, *PtagEMRPIXELFORMAT;

typedef struct tagEMRPIXELFORMAT EMRPIXELFORMAT;

typedef struct tagPIXELFORMATDESCRIPTOR tagPIXELFORMATDESCRIPTOR, *PtagPIXELFORMATDESCRIPTOR;

typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;

struct tagPIXELFORMATDESCRIPTOR {
    WORD nSize;
    WORD nVersion;
    DWORD dwFlags;
    BYTE iPixelType;
    BYTE cColorBits;
    BYTE cRedBits;
    BYTE cRedShift;
    BYTE cGreenBits;
    BYTE cGreenShift;
    BYTE cBlueBits;
    BYTE cBlueShift;
    BYTE cAlphaBits;
    BYTE cAlphaShift;
    BYTE cAccumBits;
    BYTE cAccumRedBits;
    BYTE cAccumGreenBits;
    BYTE cAccumBlueBits;
    BYTE cAccumAlphaBits;
    BYTE cDepthBits;
    BYTE cStencilBits;
    BYTE cAuxBuffers;
    BYTE iLayerType;
    BYTE bReserved;
    DWORD dwLayerMask;
    DWORD dwVisibleMask;
    DWORD dwDamageMask;
};

struct tagEMRPIXELFORMAT {
    EMR emr;
    PIXELFORMATDESCRIPTOR pfd;
};

typedef struct tagEMRPLGBLT tagEMRPLGBLT, *PtagEMRPLGBLT;

typedef struct tagEMRPLGBLT EMRPLGBLT;

struct tagEMRPLGBLT {
    EMR emr;
    RECTL rclBounds;
    POINTL aptlDest[3];
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG xMask;
    LONG yMask;
    DWORD iUsageMask;
    DWORD offBmiMask;
    DWORD cbBmiMask;
    DWORD offBitsMask;
    DWORD cbBitsMask;
};

typedef struct tagEMRPOLYLINE tagEMRPOLYLINE, *PtagEMRPOLYLINE;

typedef struct tagEMRPOLYLINE EMRPOLYBEZIER;

struct tagEMRPOLYLINE {
    EMR emr;
    RECTL rclBounds;
    DWORD cptl;
    POINTL aptl[1];
};

typedef struct tagEMRPOLYLINE16 tagEMRPOLYLINE16, *PtagEMRPOLYLINE16;

typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIER16;

struct tagEMRPOLYLINE16 {
    EMR emr;
    RECTL rclBounds;
    DWORD cpts;
    POINTS apts[1];
};

typedef struct tagEMRPOLYLINE EMRPOLYBEZIERTO;

typedef struct tagEMRPOLYLINE16 EMRPOLYBEZIERTO16;

typedef struct tagEMRPOLYDRAW tagEMRPOLYDRAW, *PtagEMRPOLYDRAW;

typedef struct tagEMRPOLYDRAW EMRPOLYDRAW;

struct tagEMRPOLYDRAW {
    EMR emr;
    RECTL rclBounds;
    DWORD cptl;
    POINTL aptl[1];
    BYTE abTypes[1];
};

typedef struct tagEMRPOLYDRAW16 tagEMRPOLYDRAW16, *PtagEMRPOLYDRAW16;

typedef struct tagEMRPOLYDRAW16 EMRPOLYDRAW16;

struct tagEMRPOLYDRAW16 {
    EMR emr;
    RECTL rclBounds;
    DWORD cpts;
    POINTS apts[1];
    BYTE abTypes[1];
};

typedef struct tagEMRPOLYLINE EMRPOLYGON;

typedef struct tagEMRPOLYLINE16 EMRPOLYGON16;

typedef struct tagEMRPOLYLINE EMRPOLYLINE;

typedef struct tagEMRPOLYLINE16 EMRPOLYLINE16;

typedef struct tagEMRPOLYLINE EMRPOLYLINETO;

typedef struct tagEMRPOLYLINE16 EMRPOLYLINETO16;

typedef struct tagEMRPOLYPOLYLINE tagEMRPOLYPOLYLINE, *PtagEMRPOLYPOLYLINE;

typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYGON;

struct tagEMRPOLYPOLYLINE {
    EMR emr;
    RECTL rclBounds;
    DWORD nPolys;
    DWORD cptl;
    DWORD aPolyCounts[1];
    POINTL aptl[1];
};

typedef struct tagEMRPOLYPOLYLINE16 tagEMRPOLYPOLYLINE16, *PtagEMRPOLYPOLYLINE16;

typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYGON16;

struct tagEMRPOLYPOLYLINE16 {
    EMR emr;
    RECTL rclBounds;
    DWORD nPolys;
    DWORD cpts;
    DWORD aPolyCounts[1];
    POINTS apts[1];
};

typedef struct tagEMRPOLYPOLYLINE EMRPOLYPOLYLINE;

typedef struct tagEMRPOLYPOLYLINE16 EMRPOLYPOLYLINE16;

typedef struct tagEMRPOLYTEXTOUTA tagEMRPOLYTEXTOUTA, *PtagEMRPOLYTEXTOUTA;

typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTA;

struct tagEMRPOLYTEXTOUTA {
    EMR emr;
    RECTL rclBounds;
    DWORD iGraphicsMode;
    FLOAT exScale;
    FLOAT eyScale;
    LONG cStrings;
    EMRTEXT aemrtext[1];
};

typedef struct tagEMRPOLYTEXTOUTA EMRPOLYTEXTOUTW;

typedef struct tagABORTPATH EMRREALIZEPALETTE;

typedef struct tagEMRELLIPSE EMRRECTANGLE;

typedef struct tagEMRRESIZEPALETTE tagEMRRESIZEPALETTE, *PtagEMRRESIZEPALETTE;

typedef struct tagEMRRESIZEPALETTE EMRRESIZEPALETTE;

struct tagEMRRESIZEPALETTE {
    EMR emr;
    DWORD ihPal;
    DWORD cEntries;
};

typedef struct tagEMRRESTOREDC tagEMRRESTOREDC, *PtagEMRRESTOREDC;

typedef struct tagEMRRESTOREDC EMRRESTOREDC;

struct tagEMRRESTOREDC {
    EMR emr;
    LONG iRelative;
};

typedef struct tagEMRROUNDRECT tagEMRROUNDRECT, *PtagEMRROUNDRECT;

typedef struct tagEMRROUNDRECT EMRROUNDRECT;

struct tagEMRROUNDRECT {
    EMR emr;
    RECTL rclBox;
    SIZEL szlCorner;
};

typedef struct tagABORTPATH EMRSAVEDC;

typedef struct tagEMRSCALEVIEWPORTEXTEX tagEMRSCALEVIEWPORTEXTEX, *PtagEMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEVIEWPORTEXTEX;

struct tagEMRSCALEVIEWPORTEXTEX {
    EMR emr;
    LONG xNum;
    LONG xDenom;
    LONG yNum;
    LONG yDenom;
};

typedef struct tagEMRSCALEVIEWPORTEXTEX EMRSCALEWINDOWEXTEX;

typedef struct tagEMRSELECTCLIPPATH tagEMRSELECTCLIPPATH, *PtagEMRSELECTCLIPPATH;

typedef struct tagEMRSELECTCLIPPATH EMRSELECTCLIPPATH;

struct tagEMRSELECTCLIPPATH {
    EMR emr;
    DWORD iMode;
};

typedef struct tagEMRSETCOLORSPACE EMRSELECTCOLORSPACE;

typedef struct tagEMRSELECTOBJECT EMRSELECTOBJECT;

typedef struct tagEMRSELECTPALETTE tagEMRSELECTPALETTE, *PtagEMRSELECTPALETTE;

typedef struct tagEMRSELECTPALETTE EMRSELECTPALETTE;

struct tagEMRSELECTPALETTE {
    EMR emr;
    DWORD ihPal;
};

typedef struct tagEMRSETARCDIRECTION tagEMRSETARCDIRECTION, *PtagEMRSETARCDIRECTION;

typedef struct tagEMRSETARCDIRECTION EMRSETARCDIRECTION;

struct tagEMRSETARCDIRECTION {
    EMR emr;
    DWORD iArcDirection;
};

typedef struct tagEMRSETTEXTCOLOR tagEMRSETTEXTCOLOR, *PtagEMRSETTEXTCOLOR;

typedef struct tagEMRSETTEXTCOLOR EMRSETBKCOLOR;

struct tagEMRSETTEXTCOLOR {
    EMR emr;
    COLORREF crColor;
};

typedef struct tagEMRSELECTCLIPPATH EMRSETBKMODE;

typedef struct tagEMRSETVIEWPORTORGEX tagEMRSETVIEWPORTORGEX, *PtagEMRSETVIEWPORTORGEX;

typedef struct tagEMRSETVIEWPORTORGEX EMRSETBRUSHORGEX;

struct tagEMRSETVIEWPORTORGEX {
    EMR emr;
    POINTL ptlOrigin;
};

typedef struct tagEMRSETCOLORADJUSTMENT tagEMRSETCOLORADJUSTMENT, *PtagEMRSETCOLORADJUSTMENT;

typedef struct tagEMRSETCOLORADJUSTMENT EMRSETCOLORADJUSTMENT;

struct tagEMRSETCOLORADJUSTMENT {
    EMR emr;
    COLORADJUSTMENT ColorAdjustment;
};

typedef struct tagEMRSETCOLORSPACE EMRSETCOLORSPACE;

typedef struct tagEMRSETDIBITSTODEVICE tagEMRSETDIBITSTODEVICE, *PtagEMRSETDIBITSTODEVICE;

typedef struct tagEMRSETDIBITSTODEVICE EMRSETDIBITSTODEVICE;

struct tagEMRSETDIBITSTODEVICE {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    DWORD iUsageSrc;
    DWORD iStartScan;
    DWORD cScans;
};

typedef struct tagEMRSELECTCLIPPATH EMRSETICMMODE;

typedef struct tagEMRSETICMPROFILE tagEMRSETICMPROFILE, *PtagEMRSETICMPROFILE;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILE;

struct tagEMRSETICMPROFILE {
    EMR emr;
    DWORD dwFlags;
    DWORD cbName;
    DWORD cbData;
    BYTE Data[1];
};

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEA;

typedef struct tagEMRSETICMPROFILE EMRSETICMPROFILEW;

typedef struct tagEMRSELECTCLIPPATH EMRSETLAYOUT;

typedef struct tagEMRSELECTCLIPPATH EMRSETMAPMODE;

typedef struct tagEMRSETMAPPERFLAGS tagEMRSETMAPPERFLAGS, *PtagEMRSETMAPPERFLAGS;

typedef struct tagEMRSETMAPPERFLAGS EMRSETMAPPERFLAGS;

struct tagEMRSETMAPPERFLAGS {
    EMR emr;
    DWORD dwFlags;
};

typedef struct tagABORTPATH EMRSETMETARGN;

typedef struct tagEMRSETMITERLIMIT tagEMRSETMITERLIMIT, *PtagEMRSETMITERLIMIT;

typedef struct tagEMRSETMITERLIMIT EMRSETMITERLIMIT;

struct tagEMRSETMITERLIMIT {
    EMR emr;
    FLOAT eMiterLimit;
};

typedef struct tagEMRSETPALETTEENTRIES tagEMRSETPALETTEENTRIES, *PtagEMRSETPALETTEENTRIES;

typedef struct tagEMRSETPALETTEENTRIES EMRSETPALETTEENTRIES;

struct tagEMRSETPALETTEENTRIES {
    EMR emr;
    DWORD ihPal;
    DWORD iStart;
    DWORD cEntries;
    PALETTEENTRY aPalEntries[1];
};

typedef struct tagEMRSETPIXELV tagEMRSETPIXELV, *PtagEMRSETPIXELV;

typedef struct tagEMRSETPIXELV EMRSETPIXELV;

struct tagEMRSETPIXELV {
    EMR emr;
    POINTL ptlPixel;
    COLORREF crColor;
};

typedef struct tagEMRSELECTCLIPPATH EMRSETPOLYFILLMODE;

typedef struct tagEMRSELECTCLIPPATH EMRSETROP2;

typedef struct tagEMRSELECTCLIPPATH EMRSETSTRETCHBLTMODE;

typedef struct tagEMRSELECTCLIPPATH EMRSETTEXTALIGN;

typedef struct tagEMRSETTEXTCOLOR EMRSETTEXTCOLOR;

typedef struct tagEMRSETVIEWPORTEXTEX tagEMRSETVIEWPORTEXTEX, *PtagEMRSETVIEWPORTEXTEX;

typedef struct tagEMRSETVIEWPORTEXTEX EMRSETVIEWPORTEXTEX;

struct tagEMRSETVIEWPORTEXTEX {
    EMR emr;
    SIZEL szlExtent;
};

typedef struct tagEMRSETVIEWPORTORGEX EMRSETVIEWPORTORGEX;

typedef struct tagEMRSETVIEWPORTEXTEX EMRSETWINDOWEXTEX;

typedef struct tagEMRSETVIEWPORTORGEX EMRSETWINDOWORGEX;

typedef struct tagEMRSETWORLDTRANSFORM tagEMRSETWORLDTRANSFORM, *PtagEMRSETWORLDTRANSFORM;

typedef struct tagEMRSETWORLDTRANSFORM EMRSETWORLDTRANSFORM;

struct tagEMRSETWORLDTRANSFORM {
    EMR emr;
    XFORM xform;
};

typedef struct tagEMRSTRETCHBLT tagEMRSTRETCHBLT, *PtagEMRSTRETCHBLT;

typedef struct tagEMRSTRETCHBLT EMRSTRETCHBLT;

struct tagEMRSTRETCHBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagEMRSTRETCHDIBITS tagEMRSTRETCHDIBITS, *PtagEMRSTRETCHDIBITS;

typedef struct tagEMRSTRETCHDIBITS EMRSTRETCHDIBITS;

struct tagEMRSTRETCHDIBITS {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG xSrc;
    LONG ySrc;
    LONG cxSrc;
    LONG cySrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    DWORD iUsageSrc;
    DWORD dwRop;
    LONG cxDest;
    LONG cyDest;
};

typedef struct tagEMRFILLPATH EMRSTROKEANDFILLPATH;

typedef struct tagEMRFILLPATH EMRSTROKEPATH;

typedef struct tagEMRTRANSPARENTBLT tagEMRTRANSPARENTBLT, *PtagEMRTRANSPARENTBLT;

typedef struct tagEMRTRANSPARENTBLT EMRTRANSPARENTBLT;

struct tagEMRTRANSPARENTBLT {
    EMR emr;
    RECTL rclBounds;
    LONG xDest;
    LONG yDest;
    LONG cxDest;
    LONG cyDest;
    DWORD dwRop;
    LONG xSrc;
    LONG ySrc;
    XFORM xformSrc;
    COLORREF crBkColorSrc;
    DWORD iUsageSrc;
    DWORD offBmiSrc;
    DWORD cbBmiSrc;
    DWORD offBitsSrc;
    DWORD cbBitsSrc;
    LONG cxSrc;
    LONG cySrc;
};

typedef struct tagABORTPATH EMRWIDENPATH;

typedef struct tagENHMETAHEADER tagENHMETAHEADER, *PtagENHMETAHEADER;

typedef struct tagENHMETAHEADER ENHMETAHEADER;

struct tagENHMETAHEADER {
    DWORD iType;
    DWORD nSize;
    RECTL rclBounds;
    RECTL rclFrame;
    DWORD dSignature;
    DWORD nVersion;
    DWORD nBytes;
    DWORD nRecords;
    WORD nHandles;
    WORD sReserved;
    DWORD nDescription;
    DWORD offDescription;
    DWORD nPalEntries;
    SIZEL szlDevice;
    SIZEL szlMillimeters;
    DWORD cbPixelFormat;
    DWORD offPixelFormat;
    DWORD bOpenGL;
    SIZEL szlMicrometers;
};

typedef struct tagENHMETARECORD tagENHMETARECORD, *PtagENHMETARECORD;

typedef struct tagENHMETARECORD ENHMETARECORD;

struct tagENHMETARECORD {
    DWORD iType;
    DWORD nSize;
    DWORD dParm[1];
};

typedef struct tagHANDLETABLE tagHANDLETABLE, *PtagHANDLETABLE;

typedef struct tagHANDLETABLE HANDLETABLE;

typedef int (* ENHMFENUMPROC)(HDC, HANDLETABLE *, ENHMETARECORD *, int, LPARAM);

struct tagHANDLETABLE {
    HGDIOBJ objectHandle[1];
};

typedef struct tagENUMLOGFONTA tagENUMLOGFONTA, *PtagENUMLOGFONTA;

typedef struct tagENUMLOGFONTA ENUMLOGFONTA;

typedef ENUMLOGFONTA ENUMLOGFONT;

typedef struct tagLOGFONTA LOGFONTA;

struct tagENUMLOGFONTA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
};

typedef struct tagENUMLOGFONTEXA tagENUMLOGFONTEXA, *PtagENUMLOGFONTEXA;

typedef struct tagENUMLOGFONTEXA ENUMLOGFONTEXA;

typedef ENUMLOGFONTEXA ENUMLOGFONTEX;

struct tagENUMLOGFONTEXA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
    BYTE elfScript[32];
};

typedef struct tagENUMLOGFONTEXDVA tagENUMLOGFONTEXDVA, *PtagENUMLOGFONTEXDVA;

typedef struct tagENUMLOGFONTEXDVA ENUMLOGFONTEXDVA;

typedef ENUMLOGFONTEXDVA ENUMLOGFONTEXDV;

struct tagENUMLOGFONTEXDVA {
    ENUMLOGFONTEXA elfEnumLogfontEx;
    DESIGNVECTOR elfDesignVector;
};

typedef struct tagENUMLOGFONTEXDVW tagENUMLOGFONTEXDVW, *PtagENUMLOGFONTEXDVW;

typedef struct tagENUMLOGFONTEXDVW ENUMLOGFONTEXDVW;

typedef struct tagENUMLOGFONTEXW tagENUMLOGFONTEXW, *PtagENUMLOGFONTEXW;

typedef struct tagENUMLOGFONTEXW ENUMLOGFONTEXW;

struct tagENUMLOGFONTEXW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
    WCHAR elfScript[32];
};

struct tagENUMLOGFONTEXDVW {
    ENUMLOGFONTEXW elfEnumLogfontEx;
    DESIGNVECTOR elfDesignVector;
};

typedef struct tagENUMLOGFONTW tagENUMLOGFONTW, *PtagENUMLOGFONTW;

typedef struct tagENUMLOGFONTW ENUMLOGFONTW;

struct tagENUMLOGFONTW {
    LOGFONTW elfLogFont;
    WCHAR elfFullName[64];
    WCHAR elfStyle[32];
};

typedef struct tagENUMTEXTMETRICA tagENUMTEXTMETRICA, *PtagENUMTEXTMETRICA;

typedef struct tagENUMTEXTMETRICA ENUMTEXTMETRICA;

typedef ENUMTEXTMETRICA ENUMTEXTMETRIC;

typedef struct tagNEWTEXTMETRICEXA tagNEWTEXTMETRICEXA, *PtagNEWTEXTMETRICEXA;

typedef struct tagNEWTEXTMETRICEXA NEWTEXTMETRICEXA;

typedef struct tagNEWTEXTMETRICA tagNEWTEXTMETRICA, *PtagNEWTEXTMETRICA;

typedef struct tagNEWTEXTMETRICA NEWTEXTMETRICA;

struct tagNEWTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
    DWORD ntmFlags;
    UINT ntmSizeEM;
    UINT ntmCellHeight;
    UINT ntmAvgWidth;
};

struct tagNEWTEXTMETRICEXA {
    NEWTEXTMETRICA ntmTm;
    FONTSIGNATURE ntmFontSig;
};

struct tagENUMTEXTMETRICA {
    NEWTEXTMETRICEXA etmNewTextMetricEx;
    AXESLISTA etmAxesList;
};

typedef struct tagENUMTEXTMETRICW tagENUMTEXTMETRICW, *PtagENUMTEXTMETRICW;

typedef struct tagENUMTEXTMETRICW ENUMTEXTMETRICW;

typedef struct tagNEWTEXTMETRICEXW tagNEWTEXTMETRICEXW, *PtagNEWTEXTMETRICEXW;

typedef struct tagNEWTEXTMETRICEXW NEWTEXTMETRICEXW;

typedef struct tagNEWTEXTMETRICW tagNEWTEXTMETRICW, *PtagNEWTEXTMETRICW;

typedef struct tagNEWTEXTMETRICW NEWTEXTMETRICW;

struct tagNEWTEXTMETRICW {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    WCHAR tmFirstChar;
    WCHAR tmLastChar;
    WCHAR tmDefaultChar;
    WCHAR tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
    DWORD ntmFlags;
    UINT ntmSizeEM;
    UINT ntmCellHeight;
    UINT ntmAvgWidth;
};

struct tagNEWTEXTMETRICEXW {
    NEWTEXTMETRICW ntmTm;
    FONTSIGNATURE ntmFontSig;
};

struct tagENUMTEXTMETRICW {
    NEWTEXTMETRICEXW etmNewTextMetricEx;
    AXESLISTW etmAxesList;
};

typedef struct tagEXTLOGFONTA tagEXTLOGFONTA, *PtagEXTLOGFONTA;

typedef struct tagEXTLOGFONTA EXTLOGFONTA;

typedef EXTLOGFONTA EXTLOGFONT;

struct tagEXTLOGFONTA {
    LOGFONTA elfLogFont;
    BYTE elfFullName[64];
    BYTE elfStyle[32];
    DWORD elfVersion;
    DWORD elfStyleSize;
    DWORD elfMatch;
    DWORD elfReserved;
    BYTE elfVendorId[4];
    DWORD elfCulture;
    PANOSE elfPanose;
};

typedef struct tagEXTLOGPEN tagEXTLOGPEN, *PtagEXTLOGPEN;

typedef struct tagEXTLOGPEN EXTLOGPEN;

struct tagEXTLOGPEN {
    DWORD elpPenStyle;
    DWORD elpWidth;
    UINT elpBrushStyle;
    COLORREF elpColor;
    ULONG_PTR elpHatch;
    DWORD elpNumEntries;
    DWORD elpStyleEntry[1];
};

typedef int (* OLDFONTENUMPROCA)(LOGFONTA *, TEXTMETRICA *, DWORD, LPARAM);

typedef OLDFONTENUMPROCA FONTENUMPROCA;

typedef FONTENUMPROCA FONTENUMPROC;

typedef int (* OLDFONTENUMPROCW)(LOGFONTW *, TEXTMETRICW *, DWORD, LPARAM);

typedef OLDFONTENUMPROCW FONTENUMPROCW;

typedef long FXPT16DOT16;

typedef struct tagGCP_RESULTSA tagGCP_RESULTSA, *PtagGCP_RESULTSA;

typedef struct tagGCP_RESULTSA GCP_RESULTSA;

typedef GCP_RESULTSA GCP_RESULTS;

struct tagGCP_RESULTSA {
    DWORD lStructSize;
    LPSTR lpOutString;
    UINT * lpOrder;
    int * lpDx;
    int * lpCaretPos;
    LPSTR lpClass;
    LPWSTR lpGlyphs;
    UINT nGlyphs;
    int nMaxFit;
};

typedef struct tagGCP_RESULTSW tagGCP_RESULTSW, *PtagGCP_RESULTSW;

typedef struct tagGCP_RESULTSW GCP_RESULTSW;

struct tagGCP_RESULTSW {
    DWORD lStructSize;
    LPWSTR lpOutString;
    UINT * lpOrder;
    int * lpDx;
    int * lpCaretPos;
    LPSTR lpClass;
    LPWSTR lpGlyphs;
    UINT nGlyphs;
    int nMaxFit;
};

typedef struct _GLYPHMETRICS GLYPHMETRICS;

typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;

typedef struct tagGLYPHSET tagGLYPHSET, *PtagGLYPHSET;

typedef struct tagGLYPHSET GLYPHSET;

typedef struct tagWCRANGE tagWCRANGE, *PtagWCRANGE;

typedef struct tagWCRANGE WCRANGE;

struct tagWCRANGE {
    WCHAR wcLow;
    USHORT cGlyphs;
};

struct tagGLYPHSET {
    DWORD cbThis;
    DWORD flAccel;
    DWORD cGlyphsSupported;
    DWORD cRanges;
    WCRANGE ranges[1];
};

typedef int (* GOBJENUMPROC)(LPVOID, LPARAM);

typedef struct _GRADIENT_RECT GRADIENT_RECT;

typedef struct _GRADIENT_TRIANGLE GRADIENT_TRIANGLE;

typedef int (* ICMENUMPROCA)(LPSTR, LPARAM);

typedef int (* ICMENUMPROCW)(LPWSTR, LPARAM);

typedef struct tagKERNINGPAIR tagKERNINGPAIR, *PtagKERNINGPAIR;

typedef struct tagKERNINGPAIR KERNINGPAIR;

struct tagKERNINGPAIR {
    WORD wFirst;
    WORD wSecond;
    int iKernAmount;
};

typedef struct tagLAYERPLANEDESCRIPTOR tagLAYERPLANEDESCRIPTOR, *PtagLAYERPLANEDESCRIPTOR;

typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;

struct tagLAYERPLANEDESCRIPTOR {
    WORD nSize;
    WORD nVersion;
    DWORD dwFlags;
    BYTE iPixelType;
    BYTE cColorBits;
    BYTE cRedBits;
    BYTE cRedShift;
    BYTE cGreenBits;
    BYTE cGreenShift;
    BYTE cBlueBits;
    BYTE cBlueShift;
    BYTE cAlphaBits;
    BYTE cAlphaShift;
    BYTE cAccumBits;
    BYTE cAccumRedBits;
    BYTE cAccumGreenBits;
    BYTE cAccumBlueBits;
    BYTE cAccumAlphaBits;
    BYTE cDepthBits;
    BYTE cStencilBits;
    BYTE cAuxBuffers;
    BYTE iLayerPlane;
    BYTE bReserved;
    COLORREF crTransparent;
};

typedef void (* LINEDDAPROC)(int, int, LPARAM);

typedef struct tagLOCALESIGNATURE tagLOCALESIGNATURE, *PtagLOCALESIGNATURE;

typedef struct tagLOCALESIGNATURE LOCALESIGNATURE;

struct tagLOCALESIGNATURE {
    DWORD lsUsb[4];
    DWORD lsCsbDefault[2];
    DWORD lsCsbSupported[2];
};

typedef struct tagLOGBRUSH tagLOGBRUSH, *PtagLOGBRUSH;

typedef struct tagLOGBRUSH LOGBRUSH;

struct tagLOGBRUSH {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG_PTR lbHatch;
};

typedef LOGCOLORSPACEA LOGCOLORSPACE;

typedef LOGFONTA LOGFONT;

typedef struct _ABC * LPABC;

typedef struct _ABCFLOAT * LPABCFLOAT;

typedef struct tagAXESLISTA * LPAXESLISTA;

typedef LPAXESLISTA LPAXESLIST;

typedef struct tagAXESLISTW * LPAXESLISTW;

typedef struct tagAXISINFOA * LPAXISINFOA;

typedef LPAXISINFOA LPAXISINFO;

typedef struct tagAXISINFOW * LPAXISINFOW;

typedef struct tagBITMAP * LPBITMAP;

typedef struct tagBITMAPCOREHEADER * LPBITMAPCOREHEADER;

typedef struct tagBITMAPCOREINFO * LPBITMAPCOREINFO;

typedef struct tagBITMAPFILEHEADER * LPBITMAPFILEHEADER;

typedef struct tagBITMAPINFO * LPBITMAPINFO;

typedef struct tagBITMAPINFOHEADER * LPBITMAPINFOHEADER;

typedef struct BITMAPV4HEADER * LPBITMAPV4HEADER;

typedef struct BITMAPV5HEADER * LPBITMAPV5HEADER;

typedef struct tagCHARSETINFO * LPCHARSETINFO;

typedef CIEXYZ * LPCIEXYZ;

typedef CIEXYZTRIPLE * LPCIEXYZTRIPLE;

typedef struct tagCOLORADJUSTMENT * LPCOLORADJUSTMENT;

typedef struct tagDESIGNVECTOR * LPDESIGNVECTOR;

typedef struct _devicemodeW * LPDEVMODEW;

typedef struct tagDIBSECTION * LPDIBSECTION;

typedef struct _DISPLAY_DEVICEA * LPDISPLAY_DEVICEA;

typedef LPDISPLAY_DEVICEA LPDISPLAY_DEVICE;

typedef struct _DISPLAY_DEVICEW * LPDISPLAY_DEVICEW;

typedef struct _DOCINFOA * LPDOCINFOA;

typedef LPDOCINFOA LPDOCINFO;

typedef struct _DOCINFOW * LPDOCINFOW;

typedef struct tagENHMETAHEADER * LPENHMETAHEADER;

typedef struct tagENHMETARECORD * LPENHMETARECORD;

typedef struct tagENUMLOGFONTA * LPENUMLOGFONTA;

typedef LPENUMLOGFONTA LPENUMLOGFONT;

typedef struct tagENUMLOGFONTEXA * LPENUMLOGFONTEXA;

typedef LPENUMLOGFONTEXA LPENUMLOGFONTEX;

typedef struct tagENUMLOGFONTEXDVA * LPENUMLOGFONTEXDVA;

typedef LPENUMLOGFONTEXDVA LPENUMLOGFONTEXDV;

typedef struct tagENUMLOGFONTEXDVW * LPENUMLOGFONTEXDVW;

typedef struct tagENUMLOGFONTEXW * LPENUMLOGFONTEXW;

typedef struct tagENUMLOGFONTW * LPENUMLOGFONTW;

typedef struct tagENUMTEXTMETRICA * LPENUMTEXTMETRICA;

typedef LPENUMTEXTMETRICA LPENUMTEXTMETRIC;

typedef struct tagENUMTEXTMETRICW * LPENUMTEXTMETRICW;

typedef struct tagEXTLOGFONTA * LPEXTLOGFONTA;

typedef LPEXTLOGFONTA LPEXTLOGFONT;

typedef struct tagEXTLOGFONTW * LPEXTLOGFONTW;

typedef struct tagEXTLOGPEN * LPEXTLOGPEN;

typedef struct tagEXTLOGPEN32 * LPEXTLOGPEN32;

typedef DWORD (* LPFNDEVCAPS)(LPSTR, LPSTR, UINT, LPSTR, LPDEVMODE);

typedef UINT (* LPFNDEVMODE)(HWND, HMODULE, LPDEVMODE, LPSTR, LPSTR, LPDEVMODE, LPSTR, UINT);

typedef struct tagFONTSIGNATURE * LPFONTSIGNATURE;

typedef long * LPFXPT16DOT16;

typedef long * LPFXPT2DOT30;

typedef struct tagGCP_RESULTSA * LPGCP_RESULTSA;

typedef LPGCP_RESULTSA LPGCP_RESULTS;

typedef struct tagGCP_RESULTSW * LPGCP_RESULTSW;

typedef struct _GLYPHMETRICS * LPGLYPHMETRICS;

typedef struct _GLYPHMETRICSFLOAT * LPGLYPHMETRICSFLOAT;

typedef struct tagGLYPHSET * LPGLYPHSET;

typedef struct _GRADIENT_RECT * LPGRADIENT_RECT;

typedef struct _GRADIENT_TRIANGLE * LPGRADIENT_TRIANGLE;

typedef struct tagHANDLETABLE * LPHANDLETABLE;

typedef struct tagKERNINGPAIR * LPKERNINGPAIR;

typedef struct tagLAYERPLANEDESCRIPTOR * LPLAYERPLANEDESCRIPTOR;

typedef struct tagLOCALESIGNATURE * LPLOCALESIGNATURE;

typedef struct tagLOGBRUSH * LPLOGBRUSH;

typedef struct tagLOGBRUSH32 * LPLOGBRUSH32;

typedef struct tagLOGCOLORSPACEA * LPLOGCOLORSPACEA;

typedef LPLOGCOLORSPACEA LPLOGCOLORSPACE;

typedef struct tagLOGCOLORSPACEW * LPLOGCOLORSPACEW;

typedef LPLOGFONTA LPLOGFONT;

typedef struct tagLOGPALETTE * LPLOGPALETTE;

typedef struct tagLOGPEN * LPLOGPEN;

typedef struct _MAT2 * LPMAT2;

typedef struct tagMETAFILEPICT tagMETAFILEPICT, *PtagMETAFILEPICT;

typedef struct tagMETAFILEPICT * LPMETAFILEPICT;

struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    HMETAFILE hMF;
};

typedef struct tagMETAHEADER tagMETAHEADER, *PtagMETAHEADER;

typedef struct tagMETAHEADER * LPMETAHEADER;

struct tagMETAHEADER {
    WORD mtType;
    WORD mtHeaderSize;
    WORD mtVersion;
    DWORD mtSize;
    WORD mtNoObjects;
    DWORD mtMaxRecord;
    WORD mtNoParameters;
};

typedef struct tagMETARECORD tagMETARECORD, *PtagMETARECORD;

typedef struct tagMETARECORD * LPMETARECORD;

struct tagMETARECORD {
    DWORD rdSize;
    WORD rdFunction;
    WORD rdParm[1];
};

typedef struct tagNEWTEXTMETRICA * LPNEWTEXTMETRICA;

typedef LPNEWTEXTMETRICA LPNEWTEXTMETRIC;

typedef struct tagNEWTEXTMETRICW * LPNEWTEXTMETRICW;

typedef struct _OUTLINETEXTMETRICA * LPOUTLINETEXTMETRICA;

typedef LPOUTLINETEXTMETRICA LPOUTLINETEXTMETRIC;

typedef struct _OUTLINETEXTMETRICW * LPOUTLINETEXTMETRICW;

typedef struct tagPALETTEENTRY * LPPALETTEENTRY;

typedef struct tagPANOSE * LPPANOSE;

typedef LOGBRUSH PATTERN;

typedef PATTERN * LPPATTERN;

typedef struct tagPELARRAY tagPELARRAY, *PtagPELARRAY;

typedef struct tagPELARRAY * LPPELARRAY;

struct tagPELARRAY {
    LONG paXCount;
    LONG paYCount;
    LONG paXExt;
    LONG paYExt;
    BYTE paRGBs;
};

typedef struct tagPIXELFORMATDESCRIPTOR * LPPIXELFORMATDESCRIPTOR;

typedef struct tagPOINTFX tagPOINTFX, *PtagPOINTFX;

typedef struct tagPOINTFX * LPPOINTFX;

struct tagPOINTFX {
    FIXED x;
    FIXED y;
};

typedef struct tagPOLYTEXTA tagPOLYTEXTA, *PtagPOLYTEXTA;

typedef struct tagPOLYTEXTA * LPPOLYTEXTA;

typedef LPPOLYTEXTA LPPOLYTEXT;

struct tagPOLYTEXTA {
    int x;
    int y;
    UINT n;
    LPCSTR lpstr;
    UINT uiFlags;
    RECT rcl;
    int * pdx;
};

typedef struct tagPOLYTEXTW tagPOLYTEXTW, *PtagPOLYTEXTW;

typedef struct tagPOLYTEXTW * LPPOLYTEXTW;

struct tagPOLYTEXTW {
    int x;
    int y;
    UINT n;
    LPCWSTR lpstr;
    UINT uiFlags;
    RECT rcl;
    int * pdx;
};

typedef struct _RASTERIZER_STATUS * LPRASTERIZER_STATUS;

typedef RGBQUAD * LPRGBQUAD;

typedef struct tagRGBTRIPLE * LPRGBTRIPLE;

typedef struct _RGNDATA * LPRGNDATA;

typedef struct tagTEXTMETRICA * LPTEXTMETRICA;

typedef LPTEXTMETRICA LPTEXTMETRIC;

typedef struct tagTEXTMETRICW * LPTEXTMETRICW;

typedef struct _TRIVERTEX * LPTRIVERTEX;

typedef struct tagTTPOLYCURVE tagTTPOLYCURVE, *PtagTTPOLYCURVE;

typedef struct tagTTPOLYCURVE * LPTTPOLYCURVE;

typedef struct tagPOINTFX POINTFX;

struct tagTTPOLYCURVE {
    WORD wType;
    WORD cpfx;
    POINTFX apfx[1];
};

typedef struct tagTTPOLYGONHEADER tagTTPOLYGONHEADER, *PtagTTPOLYGONHEADER;

typedef struct tagTTPOLYGONHEADER * LPTTPOLYGONHEADER;

struct tagTTPOLYGONHEADER {
    DWORD cb;
    DWORD dwType;
    POINTFX pfxStart;
};

typedef struct tagWCRANGE * LPWCRANGE;

typedef struct _WGLSWAP * LPWGLSWAP;

typedef struct tagXFORM * LPXFORM;

typedef struct _MAT2 MAT2;

typedef struct tagMETAFILEPICT METAFILEPICT;

typedef struct tagMETAHEADER METAHEADER;

typedef struct tagMETARECORD METARECORD;

typedef int (* MFENUMPROC)(HDC, HANDLETABLE *, METARECORD *, int, LPARAM);

typedef NEWTEXTMETRICA NEWTEXTMETRIC;

typedef NEWTEXTMETRICEXA NEWTEXTMETRICEX;

typedef struct _ABC * NPABC;

typedef struct _ABCFLOAT * NPABCFLOAT;

typedef struct tagBITMAP * NPBITMAP;

typedef struct tagCHARSETINFO * NPCHARSETINFO;

typedef struct _devicemodeA * NPDEVMODEA;

typedef NPDEVMODEA NPDEVMODE;

typedef struct _devicemodeW * NPDEVMODEW;

typedef struct tagEXTLOGFONTA * NPEXTLOGFONTA;

typedef NPEXTLOGFONTA NPEXTLOGFONT;

typedef struct tagEXTLOGFONTW * NPEXTLOGFONTW;

typedef struct tagEXTLOGPEN * NPEXTLOGPEN;

typedef struct tagEXTLOGPEN32 * NPEXTLOGPEN32;

typedef struct tagLOGBRUSH * NPLOGBRUSH;

typedef struct tagLOGBRUSH32 * NPLOGBRUSH32;

typedef struct tagLOGFONTA * NPLOGFONTA;

typedef NPLOGFONTA NPLOGFONT;

typedef struct tagLOGFONTW * NPLOGFONTW;

typedef struct tagLOGPALETTE * NPLOGPALETTE;

typedef struct tagLOGPEN * NPLOGPEN;

typedef struct tagNEWTEXTMETRICA * NPNEWTEXTMETRICA;

typedef NPNEWTEXTMETRICA NPNEWTEXTMETRIC;

typedef struct tagNEWTEXTMETRICW * NPNEWTEXTMETRICW;

typedef struct _OUTLINETEXTMETRICA * NPOUTLINETEXTMETRICA;

typedef NPOUTLINETEXTMETRICA NPOUTLINETEXTMETRIC;

typedef struct _OUTLINETEXTMETRICW * NPOUTLINETEXTMETRICW;

typedef PATTERN * NPPATTERN;

typedef struct tagPELARRAY * NPPELARRAY;

typedef struct tagPOLYTEXTA * NPPOLYTEXTA;

typedef NPPOLYTEXTA NPPOLYTEXT;

typedef struct tagPOLYTEXTW * NPPOLYTEXTW;

typedef struct tagRGBTRIPLE * NPRGBTRIPLE;

typedef struct _RGNDATA * NPRGNDATA;

typedef struct tagTEXTMETRICA * NPTEXTMETRICA;

typedef NPTEXTMETRICA NPTEXTMETRIC;

typedef struct tagTEXTMETRICW * NPTEXTMETRICW;

typedef struct _OUTLINETEXTMETRICA OUTLINETEXTMETRICA;

typedef OUTLINETEXTMETRICA OUTLINETEXTMETRIC;

typedef struct _OUTLINETEXTMETRICW OUTLINETEXTMETRICW;

typedef struct _ABC * PABC;

typedef struct _ABCFLOAT * PABCFLOAT;

typedef struct tagAXESLISTA * PAXESLISTA;

typedef PAXESLISTA PAXESLIST;

typedef struct tagAXESLISTW * PAXESLISTW;

typedef struct tagAXISINFOA * PAXISINFOA;

typedef PAXISINFOA PAXISINFO;

typedef struct tagAXISINFOW * PAXISINFOW;

typedef struct tagBITMAP * PBITMAP;

typedef struct tagBITMAPCOREHEADER * PBITMAPCOREHEADER;

typedef struct tagBITMAPCOREINFO * PBITMAPCOREINFO;

typedef struct tagBITMAPFILEHEADER * PBITMAPFILEHEADER;

typedef struct tagBITMAPINFO * PBITMAPINFO;

typedef struct tagBITMAPINFOHEADER * PBITMAPINFOHEADER;

typedef struct _BLENDFUNCTION * PBLENDFUNCTION;

typedef struct tagCHARSETINFO * PCHARSETINFO;

typedef struct tagCOLORADJUSTMENT * PCOLORADJUSTMENT;

typedef struct tagDESIGNVECTOR * PDESIGNVECTOR;

typedef struct _devicemodeA * PDEVMODEA;

typedef PDEVMODEA PDEVMODE;

typedef struct _devicemodeW * PDEVMODEW;

typedef struct tagDIBSECTION * PDIBSECTION;

typedef struct _DISPLAY_DEVICEA * PDISPLAY_DEVICEA;

typedef PDISPLAY_DEVICEA PDISPLAY_DEVICE;

typedef struct _DISPLAY_DEVICEW * PDISPLAY_DEVICEW;

typedef struct _DRAWPATRECT * PDRAWPATRECT;

typedef struct tagPELARRAY PELARRAY;

typedef struct tagEMR * PEMR;

typedef struct tagABORTPATH * PEMRABORTPATH;

typedef struct tagEMRALPHABLEND * PEMRALPHABLEND;

typedef struct tagEMRANGLEARC * PEMRANGLEARC;

typedef struct tagEMRARC * PEMRARC;

typedef struct tagEMRARC * PEMRARCTO;

typedef struct tagABORTPATH * PEMRBEGINPATH;

typedef struct tagEMRBITBLT * PEMRBITBLT;

typedef struct tagEMRARC * PEMRCHORD;

typedef struct tagABORTPATH * PEMRCLOSEFIGURE;

typedef struct tagCOLORCORRECTPALETTE * PEMRCOLORCORRECTPALETTE;

typedef struct tagCOLORMATCHTOTARGET * PEMRCOLORMATCHTOTARGET;

typedef struct tagEMRCREATEBRUSHINDIRECT * PEMRCREATEBRUSHINDIRECT;

typedef struct tagEMRCREATECOLORSPACE * PEMRCREATECOLORSPACE;

typedef struct tagEMRCREATECOLORSPACEW * PEMRCREATECOLORSPACEW;

typedef struct tagEMRCREATEDIBPATTERNBRUSHPT * PEMRCREATEDIBPATTERNBRUSHPT;

typedef struct tagEMRCREATEMONOBRUSH * PEMRCREATEMONOBRUSH;

typedef struct tagEMRCREATEPALETTE * PEMRCREATEPALETTE;

typedef struct tagEMRCREATEPEN * PEMRCREATEPEN;

typedef struct tagEMRSETCOLORSPACE * PEMRDELETECOLORSPACE;

typedef struct tagEMRSELECTOBJECT * PEMRDELETEOBJECT;

typedef struct tagEMREXTESCAPE * PEMRDRAWESCAPE;

typedef struct tagEMRELLIPSE * PEMRELLIPSE;

typedef struct tagABORTPATH * PEMRENDPATH;

typedef struct tagEMREOF * PEMREOF;

typedef struct tagEMREXCLUDECLIPRECT * PEMREXCLUDECLIPRECT;

typedef struct tagEMREXTCREATEFONTINDIRECTW * PEMREXTCREATEFONTINDIRECTW;

typedef struct tagEMREXTCREATEPEN * PEMREXTCREATEPEN;

typedef struct tagEMREXTESCAPE * PEMREXTESCAPE;

typedef struct tagEMREXTFLOODFILL * PEMREXTFLOODFILL;

typedef struct tagEMREXTSELECTCLIPRGN * PEMREXTSELECTCLIPRGN;

typedef struct tagEMREXTTEXTOUTA * PEMREXTTEXTOUTA;

typedef struct tagEMREXTTEXTOUTA * PEMREXTTEXTOUTW;

typedef struct tagEMRFILLPATH * PEMRFILLPATH;

typedef struct tagEMRFILLRGN * PEMRFILLRGN;

typedef struct tagABORTPATH * PEMRFLATTENPATH;

typedef struct tagEMRFORMAT * PEMRFORMAT;

typedef struct tagEMRFRAMERGN * PEMRFRAMERGN;

typedef struct tagEMRGDICOMMENT * PEMRGDICOMMENT;

typedef struct tagEMRGLSBOUNDEDRECORD * PEMRGLSBOUNDEDRECORD;

typedef struct tagEMRGLSRECORD * PEMRGLSRECORD;

typedef struct tagEMRGRADIENTFILL * PEMRGRADIENTFILL;

typedef struct tagEMREXCLUDECLIPRECT * PEMRINTERSECTCLIPRECT;

typedef struct tagEMRINVERTRGN * PEMRINVERTRGN;

typedef struct tagEMRLINETO * PEMRLINETO;

typedef struct tagEMRMASKBLT * PEMRMASKBLT;

typedef struct tagEMRMODIFYWORLDTRANSFORM * PEMRMODIFYWORLDTRANSFORM;

typedef struct tagEMRLINETO * PEMRMOVETOEX;

typedef struct tagEMRNAMEDESCAPE * PEMRNAMEDESCAPE;

typedef struct tagEMROFFSETCLIPRGN * PEMROFFSETCLIPRGN;

typedef struct tagEMRINVERTRGN * PEMRPAINTRGN;

typedef struct tagEMRARC * PEMRPIE;

typedef struct tagEMRPIXELFORMAT * PEMRPIXELFORMAT;

typedef struct tagEMRPLGBLT * PEMRPLGBLT;

typedef struct tagEMRPOLYLINE * PEMRPOLYBEZIER;

typedef struct tagEMRPOLYLINE16 * PEMRPOLYBEZIER16;

typedef struct tagEMRPOLYLINE * PEMRPOLYBEZIERTO;

typedef struct tagEMRPOLYLINE16 * PEMRPOLYBEZIERTO16;

typedef struct tagEMRPOLYDRAW * PEMRPOLYDRAW;

typedef struct tagEMRPOLYDRAW16 * PEMRPOLYDRAW16;

typedef struct tagEMRPOLYLINE * PEMRPOLYGON;

typedef struct tagEMRPOLYLINE16 * PEMRPOLYGON16;

typedef struct tagEMRPOLYLINE * PEMRPOLYLINE;

typedef struct tagEMRPOLYLINE16 * PEMRPOLYLINE16;

typedef struct tagEMRPOLYLINE * PEMRPOLYLINETO;

typedef struct tagEMRPOLYLINE16 * PEMRPOLYLINETO16;

typedef struct tagEMRPOLYPOLYLINE * PEMRPOLYPOLYGON;

typedef struct tagEMRPOLYPOLYLINE16 * PEMRPOLYPOLYGON16;

typedef struct tagEMRPOLYPOLYLINE * PEMRPOLYPOLYLINE;

typedef struct tagEMRPOLYPOLYLINE16 * PEMRPOLYPOLYLINE16;

typedef struct tagEMRPOLYTEXTOUTA * PEMRPOLYTEXTOUTA;

typedef struct tagEMRPOLYTEXTOUTA * PEMRPOLYTEXTOUTW;

typedef struct tagABORTPATH * PEMRREALIZEPALETTE;

typedef struct tagEMRELLIPSE * PEMRRECTANGLE;

typedef struct tagEMRRESIZEPALETTE * PEMRRESIZEPALETTE;

typedef struct tagEMRRESTOREDC * PEMRRESTOREDC;

typedef struct tagEMRROUNDRECT * PEMRROUNDRECT;

typedef struct tagABORTPATH * PEMRSAVEDC;

typedef struct tagEMRSCALEVIEWPORTEXTEX * PEMRSCALEVIEWPORTEXTEX;

typedef struct tagEMRSCALEVIEWPORTEXTEX * PEMRSCALEWINDOWEXTEX;

typedef struct tagEMRSELECTCLIPPATH * PEMRSELECTCLIPPATH;

typedef struct tagEMRSETCOLORSPACE * PEMRSELECTCOLORSPACE;

typedef struct tagEMRSELECTOBJECT * PEMRSELECTOBJECT;

typedef struct tagEMRSELECTPALETTE * PEMRSELECTPALETTE;

typedef struct tagEMRSETARCDIRECTION * PEMRSETARCDIRECTION;

typedef struct tagEMRSETTEXTCOLOR * PEMRSETBKCOLOR;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETBKMODE;

typedef struct tagEMRSETVIEWPORTORGEX * PEMRSETBRUSHORGEX;

typedef struct tagEMRSETCOLORADJUSTMENT * PEMRSETCOLORADJUSTMENT;

typedef struct tagEMRSETCOLORSPACE * PEMRSETCOLORSPACE;

typedef struct tagEMRSETDIBITSTODEVICE * PEMRSETDIBITSTODEVICE;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETICMMODE;

typedef struct tagEMRSETICMPROFILE * PEMRSETICMPROFILE;

typedef struct tagEMRSETICMPROFILE * PEMRSETICMPROFILEA;

typedef struct tagEMRSETICMPROFILE * PEMRSETICMPROFILEW;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETLAYOUT;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETMAPMODE;

typedef struct tagEMRSETMAPPERFLAGS * PEMRSETMAPPERFLAGS;

typedef struct tagABORTPATH * PEMRSETMETARGN;

typedef struct tagEMRSETMITERLIMIT * PEMRSETMITERLIMIT;

typedef struct tagEMRSETPALETTEENTRIES * PEMRSETPALETTEENTRIES;

typedef struct tagEMRSETPIXELV * PEMRSETPIXELV;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETPOLYFILLMODE;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETROP2;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETSTRETCHBLTMODE;

typedef struct tagEMRSELECTCLIPPATH * PEMRSETTEXTALIGN;

typedef struct tagEMRSETTEXTCOLOR * PEMRSETTEXTCOLOR;

typedef struct tagEMRSETVIEWPORTEXTEX * PEMRSETVIEWPORTEXTEX;

typedef struct tagEMRSETVIEWPORTORGEX * PEMRSETVIEWPORTORGEX;

typedef struct tagEMRSETVIEWPORTEXTEX * PEMRSETWINDOWEXTEX;

typedef struct tagEMRSETVIEWPORTORGEX * PEMRSETWINDOWORGEX;

typedef struct tagEMRSETWORLDTRANSFORM * PEMRSETWORLDTRANSFORM;

typedef struct tagEMRSTRETCHBLT * PEMRSTRETCHBLT;

typedef struct tagEMRSTRETCHDIBITS * PEMRSTRETCHDIBITS;

typedef struct tagEMRFILLPATH * PEMRSTROKEANDFILLPATH;

typedef struct tagEMRFILLPATH * PEMRSTROKEPATH;

typedef struct tagEMRTEXT * PEMRTEXT;

typedef struct tagEMRTRANSPARENTBLT * PEMRTRANSPARENTBLT;

typedef struct tagABORTPATH * PEMRWIDENPATH;

typedef struct tagENHMETAHEADER * PENHMETAHEADER;

typedef struct tagENHMETARECORD * PENHMETARECORD;

typedef struct tagENUMLOGFONTEXDVA * PENUMLOGFONTEXDVA;

typedef PENUMLOGFONTEXDVA PENUMLOGFONTEXDV;

typedef struct tagENUMLOGFONTEXDVW * PENUMLOGFONTEXDVW;

typedef struct tagENUMTEXTMETRICA * PENUMTEXTMETRICA;

typedef PENUMTEXTMETRICA PENUMTEXTMETRIC;

typedef struct tagENUMTEXTMETRICW * PENUMTEXTMETRICW;

typedef struct tagEXTLOGFONTA * PEXTLOGFONTA;

typedef PEXTLOGFONTA PEXTLOGFONT;

typedef struct tagEXTLOGFONTW * PEXTLOGFONTW;

typedef struct tagEXTLOGPEN * PEXTLOGPEN;

typedef struct tagEXTLOGPEN32 * PEXTLOGPEN32;

typedef struct tagFONTSIGNATURE * PFONTSIGNATURE;

typedef struct _GLYPHMETRICSFLOAT * PGLYPHMETRICSFLOAT;

typedef struct tagGLYPHSET * PGLYPHSET;

typedef struct _GRADIENT_RECT * PGRADIENT_RECT;

typedef struct _GRADIENT_TRIANGLE * PGRADIENT_TRIANGLE;

typedef struct tagHANDLETABLE * PHANDLETABLE;

typedef struct tagLAYERPLANEDESCRIPTOR * PLAYERPLANEDESCRIPTOR;

typedef struct tagLOCALESIGNATURE * PLOCALESIGNATURE;

typedef struct tagLOGBRUSH * PLOGBRUSH;

typedef struct tagLOGBRUSH32 * PLOGBRUSH32;

typedef struct tagLOGFONTA * PLOGFONTA;

typedef PLOGFONTA PLOGFONT;

typedef struct tagLOGFONTW * PLOGFONTW;

typedef struct tagLOGPALETTE * PLOGPALETTE;

typedef struct tagLOGPEN * PLOGPEN;

typedef struct tagMETAHEADER * PMETAHEADER;

typedef struct tagMETARECORD * PMETARECORD;

typedef struct tagNEWTEXTMETRICA * PNEWTEXTMETRICA;

typedef PNEWTEXTMETRICA PNEWTEXTMETRIC;

typedef struct tagNEWTEXTMETRICW * PNEWTEXTMETRICW;

typedef struct tagPOLYTEXTA POLYTEXTA;

typedef POLYTEXTA POLYTEXT;

typedef struct tagPOLYTEXTW POLYTEXTW;

typedef struct _OUTLINETEXTMETRICA * POUTLINETEXTMETRICA;

typedef POUTLINETEXTMETRICA POUTLINETEXTMETRIC;

typedef struct _OUTLINETEXTMETRICW * POUTLINETEXTMETRICW;

typedef struct tagPALETTEENTRY * PPALETTEENTRY;

typedef PATTERN * PPATTERN;

typedef struct tagPELARRAY * PPELARRAY;

typedef struct tagPIXELFORMATDESCRIPTOR * PPIXELFORMATDESCRIPTOR;

typedef struct _POINTFLOAT * PPOINTFLOAT;

typedef struct tagPOLYTEXTA * PPOLYTEXTA;

typedef PPOLYTEXTA PPOLYTEXT;

typedef struct tagPOLYTEXTW * PPOLYTEXTW;

typedef struct _PSFEATURE_CUSTPAPER * PPSFEATURE_CUSTPAPER;

typedef struct _PSFEATURE_OUTPUT * PPSFEATURE_OUTPUT;

typedef struct _PSINJECTDATA * PPSINJECTDATA;

typedef struct tagRGBTRIPLE * PRGBTRIPLE;

typedef struct _RGNDATA * PRGNDATA;

typedef struct _RGNDATAHEADER * PRGNDATAHEADER;

typedef struct _PSFEATURE_CUSTPAPER PSFEATURE_CUSTPAPER;

typedef struct _PSFEATURE_OUTPUT PSFEATURE_OUTPUT;

typedef struct _PSINJECTDATA PSINJECTDATA;

typedef struct tagTEXTMETRICA * PTEXTMETRICA;

typedef PTEXTMETRICA PTEXTMETRIC;

typedef struct tagTEXTMETRICW * PTEXTMETRICW;

typedef struct _TRIVERTEX * PTRIVERTEX;

typedef struct tagWCRANGE * PWCRANGE;

typedef struct _WGLSWAP * PWGLSWAP;

typedef struct tagXFORM * PXFORM;

typedef struct _RASTERIZER_STATUS RASTERIZER_STATUS;

typedef struct _RGNDATA RGNDATA;

typedef TEXTMETRICA TEXTMETRIC;

typedef struct tagTTPOLYCURVE TTPOLYCURVE;

typedef struct tagTTPOLYGONHEADER TTPOLYGONHEADER;

typedef struct _WGLSWAP WGLSWAP;

#define BYTES_PER_PAGE 4096

#define BYTES_PER_PARA 16

#define PARAS_PER_PAGE 256

#define ASSERT_ALTERNATE 9

#define ASSERT_PRIMARY 8

#define ATAPI_ID_CMD 161

#define CAP_ATA_ID_CMD 1

#define CAP_ATAPI_ID_CMD 2

#define CAP_SMART_CMD 4

#define CHANGER_BAR_CODE_SCANNER_INSTALLED 1

#define CHANGER_CARTRIDGE_MAGAZINE 256

#define CHANGER_CLEANER_ACCESS_NOT_VALID 262144

#define CHANGER_CLEANER_AUTODISMOUNT 2147483652

#define CHANGER_CLEANER_OPS_NOT_SUPPORTED 2147483712

#define CHANGER_CLEANER_SLOT 64

#define CHANGER_CLOSE_IEPORT 4

#define CHANGER_DEVICE_REINITIALIZE_CAPABLE 134217728

#define CHANGER_DRIVE_CLEANING_REQUIRED 65536

#define CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS 536870912

#define CHANGER_EXCHANGE_MEDIA 32

#define CHANGER_IEPORT_USER_CONTROL_CLOSE 2147483904

#define CHANGER_IEPORT_USER_CONTROL_OPEN 2147483776

#define CHANGER_INIT_ELEM_STAT_WITH_RANGE 2

#define CHANGER_KEYPAD_ENABLE_DISABLE 268435456

#define CHANGER_LOCK_UNLOCK 128

#define CHANGER_MEDIUM_FLIP 512

#define CHANGER_MOVE_EXTENDS_IEPORT 2147484160

#define CHANGER_MOVE_RETRACTS_IEPORT 2147484672

#define CHANGER_OPEN_IEPORT 8

#define CHANGER_POSITION_TO_ELEMENT 1024

#define CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE 2147483650

#define CHANGER_PREDISMOUNT_ALIGN_TO_SLOT 2147483649

#define CHANGER_PREDISMOUNT_EJECT_REQUIRED 131072

#define CHANGER_PREMOUNT_EJECT_REQUIRED 524288

#define CHANGER_REPORT_IEPORT_STATE 2048

#define CHANGER_RESERVED_BIT 2147483648

#define CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR 2147483680

#define CHANGER_SERIAL_NUMBER_VALID 67108864

#define CHANGER_SLOTS_USE_TRAYS 2147483664

#define CHANGER_STATUS_NON_VOLATILE 16

#define CHANGER_STORAGE_DRIVE 4096

#define CHANGER_STORAGE_IEPORT 8192

#define CHANGER_STORAGE_SLOT 16384

#define CHANGER_STORAGE_TRANSPORT 32768

#define CHANGER_TO_DRIVE 8

#define CHANGER_TO_IEPORT 4

#define CHANGER_TO_SLOT 2

#define CHANGER_TO_TRANSPORT 1

#define CHANGER_TRUE_EXCHANGE_CAPABLE 2147483656

#define CHANGER_VOLUME_ASSERT 4194304

#define CHANGER_VOLUME_IDENTIFICATION 1048576

#define CHANGER_VOLUME_REPLACE 8388608

#define CHANGER_VOLUME_SEARCH 2097152

#define CHANGER_VOLUME_UNDEFINE 16777216

#define COMPRESSION_FORMAT_SPARSE 16384

#define COPYFILE_SIS_FLAGS 3

#define COPYFILE_SIS_LINK 1

#define COPYFILE_SIS_REPLACE 2

#define CSV_INVALID_DEVICE_NUMBER 4294967295

#define DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE 1

#define DEVICE_DSM_NOTIFY_FLAG_BEGIN 1

#define DEVICE_DSM_NOTIFY_FLAG_END 2

#define DeviceDsmAction_None 0

#define DeviceDsmAction_Notification 2147483650

#define DeviceDsmAction_Trim 1

#define DeviceDsmActionFlag_NonDestructive 2147483648

#define DISABLE_SMART 217

#define DISK_BINNING 3

#define DISK_LOGGING_DUMP 2

#define DISK_LOGGING_START 0

#define DISK_LOGGING_STOP 1

#define ELEMENT_STATUS_ACCESS 8

#define ELEMENT_STATUS_AVOLTAG 536870912

#define ELEMENT_STATUS_EXCEPT 4

#define ELEMENT_STATUS_EXENAB 16

#define ELEMENT_STATUS_FULL 1

#define ELEMENT_STATUS_ID_VALID 8192

#define ELEMENT_STATUS_IMPEXP 2

#define ELEMENT_STATUS_INENAB 32

#define ELEMENT_STATUS_INVERT 4194304

#define ELEMENT_STATUS_LUN_VALID 4096

#define ELEMENT_STATUS_NOT_BUS 32768

#define ELEMENT_STATUS_PRODUCT_DATA 64

#define ELEMENT_STATUS_PVOLTAG 268435456

#define ELEMENT_STATUS_SVALID 8388608

#define ENABLE_DISABLE_AUTO_OFFLINE 219

#define ENABLE_DISABLE_AUTOSAVE 210

#define ENABLE_SMART 216

#define ENCRYPTED_DATA_INFO_SPARSE_FILE 1

#define ENCRYPTION_FORMAT_DEFAULT 1

#define ERROR_DRIVE_NOT_INSTALLED 8

#define ERROR_INIT_STATUS_NEEDED 17

#define ERROR_LABEL_QUESTIONABLE 2

#define ERROR_LABEL_UNREADABLE 1

#define ERROR_SLOT_NOT_PRESENT 4

#define ERROR_TRAY_MALFUNCTION 16

#define ERROR_UNHANDLED_ERROR 4294967295

#define EXECUTE_OFFLINE_DIAGS 212

#define EXTEND_IEPORT 2

#define FILE_ANY_ACCESS 0

#define FILE_CLEAR_ENCRYPTION 2

#define FILE_DEVICE_8042_PORT 39

#define FILE_DEVICE_ACPI 50

#define FILE_DEVICE_BATTERY 41

#define FILE_DEVICE_BEEP 1

#define FILE_DEVICE_BIOMETRIC 68

#define FILE_DEVICE_BLUETOOTH 65

#define FILE_DEVICE_BUS_EXTENDER 42

#define FILE_DEVICE_CD_ROM 2

#define FILE_DEVICE_CD_ROM_FILE_SYSTEM 3

#define FILE_DEVICE_CHANGER 48

#define FILE_DEVICE_CONTROLLER 4

#define FILE_DEVICE_CRYPT_PROVIDER 63

#define FILE_DEVICE_DATALINK 5

#define FILE_DEVICE_DFS 6

#define FILE_DEVICE_DFS_FILE_SYSTEM 53

#define FILE_DEVICE_DFS_VOLUME 54

#define FILE_DEVICE_DISK 7

#define FILE_DEVICE_DISK_FILE_SYSTEM 8

#define FILE_DEVICE_DVD 51

#define FILE_DEVICE_FILE_SYSTEM 9

#define FILE_DEVICE_FIPS 58

#define FILE_DEVICE_FULLSCREEN_VIDEO 52

#define FILE_DEVICE_INFINIBAND 59

#define FILE_DEVICE_INPORT_PORT 10

#define FILE_DEVICE_KEYBOARD 11

#define FILE_DEVICE_KS 47

#define FILE_DEVICE_KSEC 57

#define FILE_DEVICE_MAILSLOT 12

#define FILE_DEVICE_MASS_STORAGE 45

#define FILE_DEVICE_MIDI_IN 13

#define FILE_DEVICE_MIDI_OUT 14

#define FILE_DEVICE_MODEM 43

#define FILE_DEVICE_MOUSE 15

#define FILE_DEVICE_MT_COMPOSITE 66

#define FILE_DEVICE_MT_TRANSPORT 67

#define FILE_DEVICE_MULTI_UNC_PROVIDER 16

#define FILE_DEVICE_NAMED_PIPE 17

#define FILE_DEVICE_NETWORK 18

#define FILE_DEVICE_NETWORK_BROWSER 19

#define FILE_DEVICE_NETWORK_FILE_SYSTEM 20

#define FILE_DEVICE_NETWORK_REDIRECTOR 40

#define FILE_DEVICE_NULL 21

#define FILE_DEVICE_PARALLEL_PORT 22

#define FILE_DEVICE_PHYSICAL_NETCARD 23

#define FILE_DEVICE_PMI 69

#define FILE_DEVICE_PRINTER 24

#define FILE_DEVICE_SCANNER 25

#define FILE_DEVICE_SCREEN 28

#define FILE_DEVICE_SERENUM 55

#define FILE_DEVICE_SERIAL_MOUSE_PORT 26

#define FILE_DEVICE_SERIAL_PORT 27

#define FILE_DEVICE_SMARTCARD 49

#define FILE_DEVICE_SMB 46

#define FILE_DEVICE_SOUND 29

#define FILE_DEVICE_STREAMS 30

#define FILE_DEVICE_TAPE 31

#define FILE_DEVICE_TAPE_FILE_SYSTEM 32

#define FILE_DEVICE_TERMSRV 56

#define FILE_DEVICE_TRANSPORT 33

#define FILE_DEVICE_UNKNOWN 34

#define FILE_DEVICE_VDM 44

#define FILE_DEVICE_VIDEO 35

#define FILE_DEVICE_VIRTUAL_DISK 36

#define FILE_DEVICE_VMBUS 62

#define FILE_DEVICE_WAVE_IN 37

#define FILE_DEVICE_WAVE_OUT 38

#define FILE_DEVICE_WPD 64

#define FILE_PREFETCH_TYPE_FOR_CREATE 1

#define FILE_PREFETCH_TYPE_FOR_CREATE_EX 3

#define FILE_PREFETCH_TYPE_FOR_DIRENUM 2

#define FILE_PREFETCH_TYPE_FOR_DIRENUM_EX 4

#define FILE_PREFETCH_TYPE_MAX 4

#define FILE_READ_ACCESS 1

#define FILE_SET_ENCRYPTION 1

#define FILE_SPECIAL_ACCESS 0

#define FILE_TYPE_NOTIFICATION_FLAG_USAGE_BEGIN 1

#define FILE_TYPE_NOTIFICATION_FLAG_USAGE_END 2

#define FILE_WRITE_ACCESS 2

#define FILESYSTEM_STATISTICS_TYPE_EXFAT 3

#define FILESYSTEM_STATISTICS_TYPE_FAT 2

#define FILESYSTEM_STATISTICS_TYPE_NTFS 1

#define FSCTL_ALLOW_EXTENDED_DASD_IO 589955

#define FSCTL_CREATE_OR_GET_OBJECT_ID 590016

#define FSCTL_CREATE_USN_JOURNAL 590055

#define FSCTL_CSC_INTERNAL 590255

#define FSCTL_CSV_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT 590420

#define FSCTL_CSV_GET_VOLUME_PATH_NAME 590416

#define FSCTL_CSV_GET_VOLUME_PATH_NAMES_FOR_VOLUME_NAME 590424

#define FSCTL_CSV_TUNNEL_REQUEST 590404

#define FSCTL_DELETE_OBJECT_ID 589984

#define FSCTL_DELETE_REPARSE_POINT 589996

#define FSCTL_DELETE_USN_JOURNAL 590072

#define FSCTL_DFSR_SET_GHOST_HANDLE_STATE 590264

#define FSCTL_DISMOUNT_VOLUME 589856

#define FSCTL_ENABLE_UPGRADE 622800

#define FSCTL_ENCRYPTION_FSCTL_IO 590043

#define FSCTL_ENUM_USN_DATA 590003

#define FSCTL_EXTEND_VOLUME 590064

#define FSCTL_FILE_PREFETCH 590112

#define FSCTL_FILE_TYPE_NOTIFICATION 590340

#define FSCTL_FILESYSTEM_GET_STATISTICS 589920

#define FSCTL_FIND_FILES_BY_SID 589967

#define FSCTL_GET_BOOT_AREA_INFO 590384

#define FSCTL_GET_COMPRESSION 589884

#define FSCTL_GET_NTFS_FILE_RECORD 589928

#define FSCTL_GET_NTFS_VOLUME_DATA 589924

#define FSCTL_GET_OBJECT_ID 589980

#define FSCTL_GET_REPAIR 590236

#define FSCTL_GET_REPARSE_POINT 589992

#define FSCTL_GET_RETRIEVAL_POINTER_BASE 590388

#define FSCTL_GET_RETRIEVAL_POINTERS 589939

#define FSCTL_GET_VOLUME_BITMAP 589935

#define FSCTL_INITIATE_REPAIR 590248

#define FSCTL_INVALIDATE_VOLUMES 589908

#define FSCTL_IS_CSV_FILE 590408

#define FSCTL_IS_FILE_ON_CSV_VOLUME 590428

#define FSCTL_IS_PATHNAME_VALID 589868

#define FSCTL_IS_VOLUME_DIRTY 589944

#define FSCTL_IS_VOLUME_MOUNTED 589864

#define FSCTL_LOCK_VOLUME 589848

#define FSCTL_LOOKUP_STREAM_FROM_CLUSTER 590332

#define FSCTL_MAKE_MEDIA_COMPATIBLE 622896

#define FSCTL_MARK_AS_SYSTEM_HIVE 589903

#define FSCTL_MARK_HANDLE 590076

#define FSCTL_MARK_VOLUME_DIRTY 589872

#define FSCTL_MOVE_FILE 589940

#define FSCTL_OPBATCH_ACK_CLOSE_PENDING 589840

#define FSCTL_OPLOCK_BREAK_ACK_NO_2 589904

#define FSCTL_OPLOCK_BREAK_ACKNOWLEDGE 589836

#define FSCTL_OPLOCK_BREAK_NOTIFY 589844

#define FSCTL_QUERY_ALLOCATED_RANGES 606415

#define FSCTL_QUERY_DEPENDENT_VOLUME 590320

#define FSCTL_QUERY_FAT_BPB 589912

#define FSCTL_QUERY_FILE_SYSTEM_RECOGNITION 590412

#define FSCTL_QUERY_ON_DISK_VOLUME_INFO 590140

#define FSCTL_QUERY_PAGEFILE_ENCRYPTION 590312

#define FSCTL_QUERY_PERSISTENT_VOLUME_STATE 590396

#define FSCTL_QUERY_RETRIEVAL_POINTERS 589883

#define FSCTL_QUERY_SPARING_INFO 590136

#define FSCTL_QUERY_USN_JOURNAL 590068

#define FSCTL_READ_FILE_USN_DATA 590059

#define FSCTL_READ_FROM_PLEX 606494

#define FSCTL_READ_RAW_ENCRYPTED 590051

#define FSCTL_READ_USN_JOURNAL 590011

#define FSCTL_RECALL_FILE 590103

#define FSCTL_REQUEST_BATCH_OPLOCK 589832

#define FSCTL_REQUEST_FILTER_OPLOCK 589916

#define FSCTL_REQUEST_OPLOCK 590400

#define FSCTL_REQUEST_OPLOCK_LEVEL_1 589824

#define FSCTL_REQUEST_OPLOCK_LEVEL_2 589828

#define FSCTL_RESET_VOLUME_ALLOCATION_HINTS 590316

#define FSCTL_SD_GLOBAL_CHANGE 590324

#define FSCTL_SECURITY_ID_CHECK 606391

#define FSCTL_SET_BOOTLOADER_ACCESSED 589903

#define FSCTL_SET_COMPRESSION 639040

#define FSCTL_SET_DEFECT_MANAGEMENT 622900

#define FSCTL_SET_ENCRYPTION 590039

#define FSCTL_SET_OBJECT_ID 589976

#define FSCTL_SET_OBJECT_ID_EXTENDED 590012

#define FSCTL_SET_PERSISTENT_VOLUME_STATE 590392

#define FSCTL_SET_REPAIR 590232

#define FSCTL_SET_REPARSE_POINT 589988

#define FSCTL_SET_SHORT_NAME_BEHAVIOR 590260

#define FSCTL_SET_SPARSE 590020

#define FSCTL_SET_VOLUME_COMPRESSION_STATE 590144

#define FSCTL_SET_ZERO_DATA 622792

#define FSCTL_SET_ZERO_ON_DEALLOCATION 590228

#define FSCTL_SHRINK_VOLUME 590256

#define FSCTL_SIS_COPYFILE 590080

#define FSCTL_SIS_LINK_FILES 639236

#define FSCTL_TXFS_CREATE_MINIVERSION 622972

#define FSCTL_TXFS_CREATE_SECONDARY_RM 622952

#define FSCTL_TXFS_GET_METADATA_INFO 606572

#define FSCTL_TXFS_GET_TRANSACTED_VERSION 606576

#define FSCTL_TXFS_LIST_TRANSACTION_LOCKED_FILES 606688

#define FSCTL_TXFS_LIST_TRANSACTIONS 606692

#define FSCTL_TXFS_MODIFY_RM 622916

#define FSCTL_TXFS_QUERY_RM_INFORMATION 606536

#define FSCTL_TXFS_READ_BACKUP_INFORMATION 606560

#define FSCTL_TXFS_READ_BACKUP_INFORMATION2 590328

#define FSCTL_TXFS_ROLLFORWARD_REDO 622928

#define FSCTL_TXFS_ROLLFORWARD_UNDO 622932

#define FSCTL_TXFS_SAVEPOINT_INFORMATION 622968

#define FSCTL_TXFS_SHUTDOWN_RM 622940

#define FSCTL_TXFS_START_RM 622936

#define FSCTL_TXFS_TRANSACTION_ACTIVE 606604

#define FSCTL_TXFS_WRITE_BACKUP_INFORMATION 622948

#define FSCTL_TXFS_WRITE_BACKUP_INFORMATION2 590336

#define FSCTL_UNLOCK_VOLUME 589852

#define FSCTL_WAIT_FOR_REPAIR 590240

#define FSCTL_WRITE_RAW_ENCRYPTED 590047

#define FSCTL_WRITE_USN_CLOSE_RECORD 590063

#define GPT_ATTRIBUTE_PLATFORM_REQUIRED 1

#define GPT_BASIC_DATA_ATTRIBUTE_HIDDEN 4611686018427387904

#define GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER -9223372036854775808

#define GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY 1152921504606846976

#define GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY 2305843009213693952

#define HIST_NO_OF_BUCKETS 24

#define ID_CMD 236

#define IDENTIFY_BUFFER_SIZE 512

#define IOCTL_CHANGER_BASE 48

#define IOCTL_CHANGER_EXCHANGE_MEDIUM 3162144

#define IOCTL_CHANGER_GET_ELEMENT_STATUS 3194900

#define IOCTL_CHANGER_GET_PARAMETERS 3162112

#define IOCTL_CHANGER_GET_PRODUCT_DATA 3162120

#define IOCTL_CHANGER_GET_STATUS 3162116

#define IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS 3162136

#define IOCTL_CHANGER_MOVE_MEDIUM 3162148

#define IOCTL_CHANGER_QUERY_VOLUME_TAGS 3194924

#define IOCTL_CHANGER_REINITIALIZE_TRANSPORT 3162152

#define IOCTL_CHANGER_SET_ACCESS 3194896

#define IOCTL_CHANGER_SET_POSITION 3162140

#define IOCTL_DISK_BASE 7

#define IOCTL_DISK_CHECK_VERIFY 477184

#define IOCTL_DISK_CONTROLLER_NUMBER 458820

#define IOCTL_DISK_CREATE_DISK 507992

#define IOCTL_DISK_DELETE_DRIVE_LAYOUT 508160

#define IOCTL_DISK_EJECT_MEDIA 477192

#define IOCTL_DISK_FIND_NEW_DEVICES 477208

#define IOCTL_DISK_FORMAT_DRIVE 508876

#define IOCTL_DISK_FORMAT_TRACKS 507928

#define IOCTL_DISK_FORMAT_TRACKS_EX 507948

#define IOCTL_DISK_GET_CACHE_INFORMATION 475348

#define IOCTL_DISK_GET_DRIVE_GEOMETRY 458752

#define IOCTL_DISK_GET_DRIVE_GEOMETRY_EX 458912

#define IOCTL_DISK_GET_DRIVE_LAYOUT 475148

#define IOCTL_DISK_GET_DRIVE_LAYOUT_EX 458832

#define IOCTL_DISK_GET_LENGTH_INFO 475228

#define IOCTL_DISK_GET_MEDIA_TYPES 461824

#define IOCTL_DISK_GET_PARTITION_INFO 475140

#define IOCTL_DISK_GET_PARTITION_INFO_EX 458824

#define IOCTL_DISK_GROW_PARTITION 508112

#define IOCTL_DISK_HISTOGRAM_DATA 458804

#define IOCTL_DISK_HISTOGRAM_RESET 458808

#define IOCTL_DISK_HISTOGRAM_STRUCTURE 458800

#define IOCTL_DISK_IS_WRITABLE 458788

#define IOCTL_DISK_LOAD_MEDIA 477196

#define IOCTL_DISK_LOGGING 458792

#define IOCTL_DISK_MEDIA_REMOVAL 477188

#define IOCTL_DISK_PERFORMANCE 458784

#define IOCTL_DISK_PERFORMANCE_OFF 458848

#define IOCTL_DISK_REASSIGN_BLOCKS 507932

#define IOCTL_DISK_REASSIGN_BLOCKS_EX 508068

#define IOCTL_DISK_RELEASE 477204

#define IOCTL_DISK_REQUEST_DATA 458816

#define IOCTL_DISK_REQUEST_STRUCTURE 458812

#define IOCTL_DISK_RESERVE 477200

#define IOCTL_DISK_RESET_SNAPSHOT_INFO 508432

#define IOCTL_DISK_SENSE_DEVICE 459744

#define IOCTL_DISK_SET_CACHE_INFORMATION 508120

#define IOCTL_DISK_SET_DRIVE_LAYOUT 507920

#define IOCTL_DISK_SET_DRIVE_LAYOUT_EX 507988

#define IOCTL_DISK_SET_PARTITION_INFO 507912

#define IOCTL_DISK_SET_PARTITION_INFO_EX 507980

#define IOCTL_DISK_UPDATE_DRIVE_SIZE 508104

#define IOCTL_DISK_UPDATE_PROPERTIES 459072

#define IOCTL_DISK_VERIFY 458772

#define IOCTL_SERENUM_EXPOSE_HARDWARE 3604992

#define IOCTL_SERENUM_GET_PORT_NAME 3605004

#define IOCTL_SERENUM_PORT_DESC 3605000

#define IOCTL_SERENUM_REMOVE_HARDWARE 3604996

#define IOCTL_SERIAL_LSRMST_INSERT 1769596

#define IOCTL_STORAGE_ALLOCATE_BC_STREAM 3004420

#define IOCTL_STORAGE_BASE 45

#define IOCTL_STORAGE_BC_VERSION 1

#define IOCTL_STORAGE_BREAK_RESERVATION 2969620

#define IOCTL_STORAGE_CHECK_PRIORITY_HINT_SUPPORT 2955392

#define IOCTL_STORAGE_CHECK_VERIFY 2967552

#define IOCTL_STORAGE_CHECK_VERIFY2 2951168

#define IOCTL_STORAGE_EJECT_MEDIA 2967560

#define IOCTL_STORAGE_EJECTION_CONTROL 2951488

#define IOCTL_STORAGE_FIND_NEW_DEVICES 2967576

#define IOCTL_STORAGE_FREE_BC_STREAM 3004424

#define IOCTL_STORAGE_GET_BC_PROPERTIES 2971648

#define IOCTL_STORAGE_GET_DEVICE_NUMBER 2953344

#define IOCTL_STORAGE_GET_HOTPLUG_INFO 2952212

#define IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER 2952208

#define IOCTL_STORAGE_GET_MEDIA_TYPES 2952192

#define IOCTL_STORAGE_GET_MEDIA_TYPES_EX 2952196

#define IOCTL_STORAGE_LOAD_MEDIA 2967564

#define IOCTL_STORAGE_LOAD_MEDIA2 2951180

#define IOCTL_STORAGE_MANAGE_DATA_SET_ATTRIBUTES 2987012

#define IOCTL_STORAGE_MCN_CONTROL 2951492

#define IOCTL_STORAGE_MEDIA_REMOVAL 2967556

#define IOCTL_STORAGE_PERSISTENT_RESERVE_IN 2969624

#define IOCTL_STORAGE_PERSISTENT_RESERVE_OUT 3002396

#define IOCTL_STORAGE_PREDICT_FAILURE 2953472

#define IOCTL_STORAGE_QUERY_PROPERTY 2954240

#define IOCTL_STORAGE_READ_CAPACITY 2969920

#define IOCTL_STORAGE_RELEASE 2967572

#define IOCTL_STORAGE_RESERVE 2967568

#define IOCTL_STORAGE_RESET_BUS 2969600

#define IOCTL_STORAGE_RESET_DEVICE 2969604

#define IOCTL_STORAGE_SET_HOTPLUG_INFO 3001368

#define IOCTL_VOLUME_BASE 86

#define LOCK_ELEMENT 0

#define LOCK_UNLOCK_DOOR 2

#define LOCK_UNLOCK_IEPORT 1

#define LOCK_UNLOCK_KEYPAD 4

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_DATA 16777216

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_INDEX 33554432

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_MASK 4278190080

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_SYSTEM 50331648

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET 2

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE 4

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE 1

#define LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_TXF_SYSTEM_FILE 8

#define MARK_HANDLE_NOT_REALTIME 64

#define MARK_HANDLE_NOT_TXF_SYSTEM_LOG 8

#define MARK_HANDLE_PROTECT_CLUSTERS 1

#define MARK_HANDLE_REALTIME 32

#define MARK_HANDLE_TXF_SYSTEM_LOG 4

#define MAX_VOLUME_ID_SIZE 36

#define MAX_VOLUME_TEMPLATE_SIZE 40

#define MAXIMUM_ENCRYPTION_VALUE 4

#define MEDIA_CURRENTLY_MOUNTED 2147483648

#define MEDIA_ERASEABLE 1

#define MEDIA_READ_ONLY 4

#define MEDIA_READ_WRITE 8

#define MEDIA_WRITE_ONCE 2

#define MEDIA_WRITE_PROTECTED 256

#define METHOD_BUFFERED 0

#define METHOD_DIRECT_FROM_HARDWARE 2

#define METHOD_DIRECT_TO_HARDWARE 1

#define METHOD_IN_DIRECT 1

#define METHOD_NEITHER 3

#define METHOD_OUT_DIRECT 2

#define NO_8DOT3_NAME_PRESENT 1

#define OBSOLETE_DISK_GET_WRITE_CACHE_STATE 475356

#define OBSOLETE_IOCTL_STORAGE_RESET_BUS 3002368

#define OBSOLETE_IOCTL_STORAGE_RESET_DEVICE 3002372

#define OPLOCK_LEVEL_CACHE_HANDLE 2

#define OPLOCK_LEVEL_CACHE_READ 1

#define OPLOCK_LEVEL_CACHE_WRITE 4

#define PARTITION_ENTRY_UNUSED 0

#define PARTITION_EXTENDED 5

#define PARTITION_FAT32 11

#define PARTITION_FAT32_XINT13 12

#define PARTITION_FAT_12 1

#define PARTITION_FAT_16 4

#define PARTITION_HUGE 6

#define PARTITION_IFS 7

#define PARTITION_LDM 66

#define PARTITION_NTFT 128

#define PARTITION_OS2BOOTMGR 10

#define PARTITION_PREP 65

#define PARTITION_UNIX 99

#define PARTITION_XENIX_1 2

#define PARTITION_XENIX_2 3

#define PARTITION_XINT13 14

#define PARTITION_XINT13_EXTENDED 15

#define PERSISTENT_VOLUME_STATE_SHORT_NAME_CREATION_DISABLED 1

#define PRODUCT_ID_LENGTH 16

#define READ_ATTRIBUTE_BUFFER_SIZE 512

#define READ_ATTRIBUTES 208

#define READ_COMPRESSION_INFO_VALID 32

#define READ_THRESHOLD_BUFFER_SIZE 512

#define READ_THRESHOLDS 209

#define RECOVERED_READS_VALID 4

#define RECOVERED_WRITES_VALID 1

#define REMOVED_8DOT3_NAME 2

#define REPLACE_ALTERNATE 11

#define REPLACE_PRIMARY 10

#define REQUEST_OPLOCK_CURRENT_VERSION 1

#define REQUEST_OPLOCK_INPUT_FLAG_ACK 2

#define REQUEST_OPLOCK_INPUT_FLAG_COMPLETE_ACK_ON_CLOSE 4

#define REQUEST_OPLOCK_INPUT_FLAG_REQUEST 1

#define REQUEST_OPLOCK_OUTPUT_FLAG_ACK_REQUIRED 1

#define REQUEST_OPLOCK_OUTPUT_FLAG_MODES_PROVIDED 2

#define RETRACT_IEPORT 3

#define RETURN_SMART_STATUS 218

#define REVISION_LENGTH 4

#define SAVE_ATTRIBUTE_VALUES 211

#define SD_GLOBAL_CHANGE_TYPE_MACHINE_SID 1

#define SEARCH_ALL 0

#define SEARCH_ALL_NO_SEQ 4

#define SEARCH_ALT_NO_SEQ 6

#define SEARCH_ALTERNATE 2

#define SEARCH_PRI_NO_SEQ 5

#define SEARCH_PRIMARY 1

#define SERIAL_IOC_FCR_DMA_MODE 8

#define SERIAL_IOC_FCR_FIFO_ENABLE 1

#define SERIAL_IOC_FCR_RCVR_RESET 2

#define SERIAL_IOC_FCR_RCVR_TRIGGER_LSB 64

#define SERIAL_IOC_FCR_RCVR_TRIGGER_MSB 128

#define SERIAL_IOC_FCR_RES1 16

#define SERIAL_IOC_FCR_RES2 32

#define SERIAL_IOC_FCR_XMIT_RESET 4

#define SERIAL_IOC_MCR_DTR 1

#define SERIAL_IOC_MCR_LOOP 16

#define SERIAL_IOC_MCR_OUT1 4

#define SERIAL_IOC_MCR_OUT2 8

#define SERIAL_IOC_MCR_RTS 2

#define SERIAL_LSRMST_ESCAPE 0

#define SERIAL_LSRMST_LSR_DATA 1

#define SERIAL_LSRMST_LSR_NODATA 2

#define SERIAL_LSRMST_MST 3

#define SERIAL_NUMBER_LENGTH 32

#define SET_REPAIR_DELETE_CROSSLINK 4

#define SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT 16

#define SET_REPAIR_ENABLED 1

#define SET_REPAIR_VALID_MASK 31

#define SET_REPAIR_VOLUME_BITMAP_SCAN 2

#define SET_REPAIR_WARN_ABOUT_DATA_LOSS 8

#define SMART_ABORT_OFFLINE_SELFTEST 127

#define SMART_CMD 176

#define SMART_CYL_HI 194

#define SMART_CYL_LOW 79

#define SMART_ERROR_NO_MEM 7

#define SMART_EXTENDED_SELFTEST_CAPTIVE 130

#define SMART_EXTENDED_SELFTEST_OFFLINE 2

#define SMART_GET_VERSION 475264

#define SMART_IDE_ERROR 1

#define SMART_INVALID_BUFFER 4

#define SMART_INVALID_COMMAND 3

#define SMART_INVALID_DRIVE 5

#define SMART_INVALID_FLAG 2

#define SMART_INVALID_IOCTL 6

#define SMART_INVALID_REGISTER 8

#define SMART_LOG_SECTOR_SIZE 512

#define SMART_NO_ERROR 0

#define SMART_NO_IDE_DEVICE 10

#define SMART_NOT_SUPPORTED 9

#define SMART_OFFLINE_ROUTINE_OFFLINE 0

#define SMART_RCV_DRIVE_DATA 508040

#define SMART_READ_LOG 213

#define SMART_SEND_DRIVE_COMMAND 508036

#define SMART_SHORT_SELFTEST_CAPTIVE 129

#define SMART_SHORT_SELFTEST_OFFLINE 1

#define SMART_WRITE_LOG 214

#define STORAGE_PRIORITY_HINT_SUPPORTED 1

#define STREAM_CLEAR_ENCRYPTION 4

#define STREAM_SET_ENCRYPTION 3

#define TAPE_RESET_STATISTICS 2

#define TAPE_RETURN_ENV_INFO 1

#define TAPE_RETURN_STATISTICS 0

#define TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED 1

#define TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED 2

#define TXFS_LOGGING_MODE_FULL 2

#define TXFS_LOGGING_MODE_SIMPLE 1

#define TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START 32768

#define TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE 4096

#define TXFS_RM_FLAG_GROW_LOG 1024

#define TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE 64

#define TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX 4

#define TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN 8

#define TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS 16

#define TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT 32

#define TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX 128

#define TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN 256

#define TXFS_RM_FLAG_LOGGING_MODE 1

#define TXFS_RM_FLAG_PREFER_AVAILABILITY 131072

#define TXFS_RM_FLAG_PREFER_CONSISTENCY 65536

#define TXFS_RM_FLAG_PRESERVE_CHANGES 8192

#define TXFS_RM_FLAG_RENAME_RM 2

#define TXFS_RM_FLAG_RESET_RM_AT_NEXT_START 16384

#define TXFS_RM_FLAG_SHRINK_LOG 2048

#define TXFS_RM_STATE_ACTIVE 2

#define TXFS_RM_STATE_NOT_STARTED 0

#define TXFS_RM_STATE_SHUTTING_DOWN 3

#define TXFS_RM_STATE_STARTING 1

#define TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN 1

#define TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK 2

#define TXFS_SAVEPOINT_CLEAR 4

#define TXFS_SAVEPOINT_CLEAR_ALL 16

#define TXFS_SAVEPOINT_ROLLBACK 2

#define TXFS_SAVEPOINT_SET 1

#define TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE 32

#define TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX 1

#define TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN 2

#define TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE 4

#define TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS 8

#define TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT 16

#define TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX 64

#define TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN 128

#define TXFS_START_RM_FLAG_LOGGING_MODE 1024

#define TXFS_START_RM_FLAG_PREFER_AVAILABILITY 8192

#define TXFS_START_RM_FLAG_PREFER_CONSISTENCY 4096

#define TXFS_START_RM_FLAG_PRESERVE_CHANGES 2048

#define TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT 512

#define TXFS_TRANSACTED_VERSION_NONTRANSACTED 4294967294

#define TXFS_TRANSACTED_VERSION_UNCOMMITTED 4294967295

#define TXFS_TRANSACTION_STATE_ACTIVE 1

#define TXFS_TRANSACTION_STATE_NONE 0

#define TXFS_TRANSACTION_STATE_NOTACTIVE 3

#define TXFS_TRANSACTION_STATE_PREPARED 2

#define UNDEFINE_ALTERNATE 13

#define UNDEFINE_PRIMARY 12

#define UNLOCK_ELEMENT 1

#define UNRECOVERED_READS_VALID 8

#define UNRECOVERED_WRITES_VALID 2

#define USN_DELETE_FLAG_DELETE 1

#define USN_DELETE_FLAG_NOTIFY 2

#define USN_DELETE_VALID_FLAGS 3

#define USN_PAGE_SIZE 4096

#define USN_REASON_BASIC_INFO_CHANGE 32768

#define USN_REASON_CLOSE 2147483648

#define USN_REASON_COMPRESSION_CHANGE 131072

#define USN_REASON_DATA_EXTEND 2

#define USN_REASON_DATA_OVERWRITE 1

#define USN_REASON_DATA_TRUNCATION 4

#define USN_REASON_EA_CHANGE 1024

#define USN_REASON_ENCRYPTION_CHANGE 262144

#define USN_REASON_FILE_CREATE 256

#define USN_REASON_FILE_DELETE 512

#define USN_REASON_HARD_LINK_CHANGE 65536

#define USN_REASON_INDEXABLE_CHANGE 16384

#define USN_REASON_NAMED_DATA_EXTEND 32

#define USN_REASON_NAMED_DATA_OVERWRITE 16

#define USN_REASON_NAMED_DATA_TRUNCATION 64

#define USN_REASON_OBJECT_ID_CHANGE 524288

#define USN_REASON_RENAME_NEW_NAME 8192

#define USN_REASON_RENAME_OLD_NAME 4096

#define USN_REASON_REPARSE_POINT_CHANGE 1048576

#define USN_REASON_SECURITY_CHANGE 2048

#define USN_REASON_STREAM_CHANGE 2097152

#define USN_REASON_TRANSACTED_CHANGE 4194304

#define USN_SOURCE_AUXILIARY_DATA 2

#define USN_SOURCE_DATA_MANAGEMENT 1

#define USN_SOURCE_REPLICATION_MANAGEMENT 4

#define VALID_NTFT 192

#define VENDOR_ID_LENGTH 8

#define VOLUME_IS_DIRTY 1

#define VOLUME_SESSION_OPEN 4

#define VOLUME_UPGRADE_SCHEDULED 2

#define WRITE_COMPRESSION_INFO_VALID 16

typedef struct _BIN_COUNT _BIN_COUNT, *P_BIN_COUNT;

typedef struct _BIN_RANGE _BIN_RANGE, *P_BIN_RANGE;

typedef struct _BIN_RANGE BIN_RANGE;

struct _BIN_RANGE {
    LARGE_INTEGER StartValue;
    LARGE_INTEGER Length;
};

struct _BIN_COUNT {
    BIN_RANGE BinRange;
    DWORD BinCount;
};

typedef struct _BIN_RESULTS _BIN_RESULTS, *P_BIN_RESULTS;

typedef struct _BIN_COUNT BIN_COUNT;

struct _BIN_RESULTS {
    DWORD NumberOfBins;
    BIN_COUNT BinCounts[1];
};

typedef enum _BIN_TYPES {
    RequestLocation=1,
    RequestSize=0
} _BIN_TYPES;

typedef struct _BOOT_AREA_INFO _BOOT_AREA_INFO, *P_BOOT_AREA_INFO;

typedef struct _struct_1887 _struct_1887, *P_struct_1887;

struct _struct_1887 {
    LARGE_INTEGER Offset;
};

struct _BOOT_AREA_INFO {
    DWORD BootSectorCount;
    struct _struct_1887 BootSectors[2];
};

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE {
    DeviceProblemCHMError=2,
    DeviceProblemCHMMoveError=6,
    DeviceProblemCHMZeroError=7,
    DeviceProblemCalibrationError=4,
    DeviceProblemCartridgeEjectError=11,
    DeviceProblemCartridgeInsertError=8,
    DeviceProblemDoorOpen=3,
    DeviceProblemDriveError=13,
    DeviceProblemGripperError=12,
    DeviceProblemHardware=1,
    DeviceProblemNone=0,
    DeviceProblemPositionError=9,
    DeviceProblemSensorError=10,
    DeviceProblemTargetFailure=5
} _CHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _CHANGER_ELEMENT _CHANGER_ELEMENT, *P_CHANGER_ELEMENT;

typedef enum _ELEMENT_TYPE {
    AllElements=0,
    ChangerDoor=5,
    ChangerDrive=4,
    ChangerIEPort=3,
    ChangerKeypad=6,
    ChangerMaxElement=7,
    ChangerSlot=2,
    ChangerTransport=1
} _ELEMENT_TYPE;

typedef enum _ELEMENT_TYPE ELEMENT_TYPE;

struct _CHANGER_ELEMENT {
    ELEMENT_TYPE ElementType;
    DWORD ElementAddress;
};

typedef struct _CHANGER_ELEMENT_LIST _CHANGER_ELEMENT_LIST, *P_CHANGER_ELEMENT_LIST;

typedef struct _CHANGER_ELEMENT CHANGER_ELEMENT;

struct _CHANGER_ELEMENT_LIST {
    CHANGER_ELEMENT Element;
    DWORD NumberOfElements;
};

typedef struct _CHANGER_ELEMENT_STATUS _CHANGER_ELEMENT_STATUS, *P_CHANGER_ELEMENT_STATUS;

struct _CHANGER_ELEMENT_STATUS {
    CHANGER_ELEMENT Element;
    CHANGER_ELEMENT SrcElementAddress;
    DWORD Flags;
    DWORD ExceptionCode;
    BYTE TargetId;
    BYTE Lun;
    WORD Reserved;
    BYTE PrimaryVolumeID[36];
    BYTE AlternateVolumeID[36];
};

typedef struct _CHANGER_ELEMENT_STATUS_EX _CHANGER_ELEMENT_STATUS_EX, *P_CHANGER_ELEMENT_STATUS_EX;

struct _CHANGER_ELEMENT_STATUS_EX {
    CHANGER_ELEMENT Element;
    CHANGER_ELEMENT SrcElementAddress;
    DWORD Flags;
    DWORD ExceptionCode;
    BYTE TargetId;
    BYTE Lun;
    WORD Reserved;
    BYTE PrimaryVolumeID[36];
    BYTE AlternateVolumeID[36];
    BYTE VendorIdentification[8];
    BYTE ProductIdentification[16];
    BYTE SerialNumber[32];
};

typedef struct _CHANGER_EXCHANGE_MEDIUM _CHANGER_EXCHANGE_MEDIUM, *P_CHANGER_EXCHANGE_MEDIUM;

struct _CHANGER_EXCHANGE_MEDIUM {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Source;
    CHANGER_ELEMENT Destination1;
    CHANGER_ELEMENT Destination2;
    BOOLEAN Flip1;
    BOOLEAN Flip2;
};

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS _CHANGER_INITIALIZE_ELEMENT_STATUS, *P_CHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT_LIST CHANGER_ELEMENT_LIST;

struct _CHANGER_INITIALIZE_ELEMENT_STATUS {
    CHANGER_ELEMENT_LIST ElementList;
    BOOLEAN BarCodeScan;
};

typedef struct _CHANGER_MOVE_MEDIUM _CHANGER_MOVE_MEDIUM, *P_CHANGER_MOVE_MEDIUM;

struct _CHANGER_MOVE_MEDIUM {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Source;
    CHANGER_ELEMENT Destination;
    BOOLEAN Flip;
};

typedef struct _CHANGER_PRODUCT_DATA _CHANGER_PRODUCT_DATA, *P_CHANGER_PRODUCT_DATA;

struct _CHANGER_PRODUCT_DATA {
    BYTE VendorId[8];
    BYTE ProductId[16];
    BYTE Revision[4];
    BYTE SerialNumber[32];
    BYTE DeviceType;
};

typedef struct _CHANGER_READ_ELEMENT_STATUS _CHANGER_READ_ELEMENT_STATUS, *P_CHANGER_READ_ELEMENT_STATUS;

struct _CHANGER_READ_ELEMENT_STATUS {
    CHANGER_ELEMENT_LIST ElementList;
    BOOLEAN VolumeTagInfo;
};

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION _CHANGER_SEND_VOLUME_TAG_INFORMATION, *P_CHANGER_SEND_VOLUME_TAG_INFORMATION;

struct _CHANGER_SEND_VOLUME_TAG_INFORMATION {
    CHANGER_ELEMENT StartingElement;
    DWORD ActionCode;
    BYTE VolumeIDTemplate[40];
};

typedef struct _CHANGER_SET_ACCESS _CHANGER_SET_ACCESS, *P_CHANGER_SET_ACCESS;

struct _CHANGER_SET_ACCESS {
    CHANGER_ELEMENT Element;
    DWORD Control;
};

typedef struct _CHANGER_SET_POSITION _CHANGER_SET_POSITION, *P_CHANGER_SET_POSITION;

struct _CHANGER_SET_POSITION {
    CHANGER_ELEMENT Transport;
    CHANGER_ELEMENT Destination;
    BOOLEAN Flip;
};

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT _CLASS_MEDIA_CHANGE_CONTEXT, *P_CLASS_MEDIA_CHANGE_CONTEXT;

struct _CLASS_MEDIA_CHANGE_CONTEXT {
    DWORD MediaChangeCount;
    DWORD NewState;
};

typedef struct _CREATE_DISK _CREATE_DISK, *P_CREATE_DISK;

typedef enum _PARTITION_STYLE {
    PARTITION_STYLE_GPT=1,
    PARTITION_STYLE_MBR=0,
    PARTITION_STYLE_RAW=2
} _PARTITION_STYLE;

typedef enum _PARTITION_STYLE PARTITION_STYLE;

typedef union _union_1764 _union_1764, *P_union_1764;

typedef struct _CREATE_DISK_MBR _CREATE_DISK_MBR, *P_CREATE_DISK_MBR;

typedef struct _CREATE_DISK_MBR CREATE_DISK_MBR;

typedef struct _CREATE_DISK_GPT _CREATE_DISK_GPT, *P_CREATE_DISK_GPT;

typedef struct _CREATE_DISK_GPT CREATE_DISK_GPT;

struct _CREATE_DISK_GPT {
    GUID DiskId;
    DWORD MaxPartitionCount;
};

struct _CREATE_DISK_MBR {
    DWORD Signature;
};

union _union_1764 {
    CREATE_DISK_MBR Mbr;
    CREATE_DISK_GPT Gpt;
};

struct _CREATE_DISK {
    PARTITION_STYLE PartitionStyle;
    union _union_1764 u;
};

typedef struct _CSV_NAMESPACE_INFO _CSV_NAMESPACE_INFO, *P_CSV_NAMESPACE_INFO;

struct _CSV_NAMESPACE_INFO {
    DWORD Version;
    DWORD DeviceNumber;
    LARGE_INTEGER StartingOffset;
    DWORD SectorSize;
};

typedef struct _DECRYPTION_STATUS_BUFFER _DECRYPTION_STATUS_BUFFER, *P_DECRYPTION_STATUS_BUFFER;

struct _DECRYPTION_STATUS_BUFFER {
    BOOLEAN NoEncryptedStreams;
};

typedef enum _DETECTION_TYPE {
    DetectExInt13=2,
    DetectInt13=1,
    DetectNone=0
} _DETECTION_TYPE;

typedef struct _DEVICE_DATA_SET_RANGE _DEVICE_DATA_SET_RANGE, *P_DEVICE_DATA_SET_RANGE;

struct _DEVICE_DATA_SET_RANGE {
    LONGLONG StartingOffset;
    DWORDLONG LengthInBytes;
};

typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS _DEVICE_DSM_NOTIFICATION_PARAMETERS, *P_DEVICE_DSM_NOTIFICATION_PARAMETERS;

struct _DEVICE_DSM_NOTIFICATION_PARAMETERS {
    DWORD Size;
    DWORD Flags;
    DWORD NumFileTypeIDs;
    GUID FileTypeID[1];
};

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES _DEVICE_MANAGE_DATA_SET_ATTRIBUTES, *P_DEVICE_MANAGE_DATA_SET_ATTRIBUTES;

typedef DWORD DEVICE_DATA_MANAGEMENT_SET_ACTION;

struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES {
    DWORD Size;
    DEVICE_DATA_MANAGEMENT_SET_ACTION Action;
    DWORD Flags;
    DWORD ParameterBlockOffset;
    DWORD ParameterBlockLength;
    DWORD DataSetRangesOffset;
    DWORD DataSetRangesLength;
};

typedef struct _DEVICE_MEDIA_INFO _DEVICE_MEDIA_INFO, *P_DEVICE_MEDIA_INFO;

typedef union _union_1720 _union_1720, *P_union_1720;

typedef struct _struct_1721 _struct_1721, *P_struct_1721;

typedef struct _struct_1722 _struct_1722, *P_struct_1722;

typedef struct _struct_1723 _struct_1723, *P_struct_1723;

typedef enum _STORAGE_MEDIA_TYPE {
    ABL_5_WO=64,
    ADR_1=90,
    ADR_2=91,
    AIT1_8mm=38,
    AIT_8mm=89,
    AME_8mm=37,
    AVATAR_F2=78,
    CD_R=52,
    CD_ROM=51,
    CD_RW=53,
    CLEANER_CARTRIDGE=50,
    CYGNET_12_WO=69,
    DDS_4mm=32,
    DLT=39,
    DMI=48,
    DST_L=82,
    DST_M=81,
    DST_S=80,
    DVD_R=55,
    DVD_RAM=88,
    DVD_ROM=54,
    DVD_RW=56,
    DV_6mm=47,
    HITACHI_12_WO=68,
    IBM_3480=41,
    IBM_3490E=42,
    IBM_Magstar_3590=43,
    IBM_Magstar_MP=44,
    IOMEGA_JAZ=74,
    IOMEGA_ZIP=73,
    KODAK_14_WO=70,
    LTO_Accelis=87,
    LTO_Ultrium=86,
    MO_3_RW=57,
    MO_5_LIMDOW=60,
    MO_5_RW=59,
    MO_5_WO=58,
    MO_NFR_525=71,
    MP2_8mm=79,
    MP_8mm=36,
    MiniQic=33,
    NCTP=40,
    NIKON_12_RW=72,
    PC_5_RW=62,
    PC_5_WO=61,
    PD_5_RW=63,
    PHILIPS_12_WO=67,
    PINNACLE_APEX_5_RW=65,
    QIC=35,
    SAIT=93,
    SONY_12_WO=66,
    SONY_D2=49,
    SONY_DTF=46,
    STK_9940=92,
    STK_DATA_D3=45,
    STK_EAGLE=85,
    SYQUEST_EZ135=75,
    SYQUEST_EZFLYER=76,
    SYQUEST_SYJET=77,
    Travan=34,
    VXATape=94,
    VXATape_1=83,
    VXATape_2=84
} _STORAGE_MEDIA_TYPE;

typedef enum _STORAGE_MEDIA_TYPE STORAGE_MEDIA_TYPE;

typedef enum _STORAGE_BUS_TYPE {
    BusType1394=4,
    BusTypeAta=3,
    BusTypeAtapi=2,
    BusTypeFibre=6,
    BusTypeFileBackedVirtual=15,
    BusTypeMax=16,
    BusTypeMaxReserved=127,
    BusTypeMmc=13,
    BusTypeRAID=8,
    BusTypeSas=10,
    BusTypeSata=11,
    BusTypeScsi=1,
    BusTypeSd=12,
    BusTypeSsa=5,
    BusTypeUnknown=0,
    BusTypeUsb=7,
    BusTypeVirtual=14,
    BusTypeiScsi=9
} _STORAGE_BUS_TYPE;

typedef enum _STORAGE_BUS_TYPE STORAGE_BUS_TYPE;

typedef union _union_1724 _union_1724, *P_union_1724;

typedef struct _struct_1725 _struct_1725, *P_struct_1725;

struct _struct_1721 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

struct _struct_1725 {
    BYTE MediumType;
    BYTE DensityCode;
};

union _union_1724 {
    struct _struct_1725 ScsiInformation;
};

struct _struct_1723 {
    STORAGE_MEDIA_TYPE MediaType;
    DWORD MediaCharacteristics;
    DWORD CurrentBlockSize;
    STORAGE_BUS_TYPE BusType;
    union _union_1724 BusSpecificData;
};

struct _struct_1722 {
    LARGE_INTEGER Cylinders;
    STORAGE_MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
    DWORD NumberMediaSides;
    DWORD MediaCharacteristics;
};

union _union_1720 {
    struct _struct_1721 DiskInfo;
    struct _struct_1722 RemovableDiskInfo;
    struct _struct_1723 TapeInfo;
};

struct _DEVICE_MEDIA_INFO {
    union _union_1720 DeviceSpecific;
};

typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR _DEVICE_SEEK_PENALTY_DESCRIPTOR, *P_DEVICE_SEEK_PENALTY_DESCRIPTOR;

struct _DEVICE_SEEK_PENALTY_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    BOOLEAN IncursSeekPenalty;
};

typedef struct _DEVICE_TRIM_DESCRIPTOR _DEVICE_TRIM_DESCRIPTOR, *P_DEVICE_TRIM_DESCRIPTOR;

struct _DEVICE_TRIM_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    BOOLEAN TrimEnabled;
};

typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR _DEVICE_WRITE_AGGREGATION_DESCRIPTOR, *P_DEVICE_WRITE_AGGREGATION_DESCRIPTOR;

struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    BOOLEAN BenefitsFromWriteAggregation;
};

typedef struct _DISK_CACHE_INFORMATION _DISK_CACHE_INFORMATION, *P_DISK_CACHE_INFORMATION;

typedef enum enum_1783 {
    EqualPriority=0,
    KeepPrefetchedData=1,
    KeepReadData=2
} enum_1783;

typedef enum enum_1783 DISK_CACHE_RETENTION_PRIORITY;

typedef union _union_1785 _union_1785, *P_union_1785;

typedef struct _struct_1786 _struct_1786, *P_struct_1786;

typedef struct _struct_1787 _struct_1787, *P_struct_1787;

struct _struct_1787 {
    WORD Minimum;
    WORD Maximum;
};

struct _struct_1786 {
    WORD Minimum;
    WORD Maximum;
    WORD MaximumBlocks;
};

union _union_1785 {
    struct _struct_1786 ScalarPrefetch;
    struct _struct_1787 BlockPrefetch;
};

struct _DISK_CACHE_INFORMATION {
    BOOLEAN ParametersSavable;
    BOOLEAN ReadCacheEnabled;
    BOOLEAN WriteCacheEnabled;
    DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;
    DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;
    WORD DisablePrefetchTransferLength;
    BOOLEAN PrefetchScalar;
    union _union_1785 u;
};

typedef struct _DISK_CONTROLLER_NUMBER _DISK_CONTROLLER_NUMBER, *P_DISK_CONTROLLER_NUMBER;

struct _DISK_CONTROLLER_NUMBER {
    DWORD ControllerNumber;
    DWORD DiskNumber;
};

typedef struct _DISK_DETECTION_INFO _DISK_DETECTION_INFO, *P_DISK_DETECTION_INFO;

typedef enum _DETECTION_TYPE DETECTION_TYPE;

typedef union _union_1775 _union_1775, *P_union_1775;

typedef struct _struct_1776 _struct_1776, *P_struct_1776;

typedef struct _DISK_INT13_INFO _DISK_INT13_INFO, *P_DISK_INT13_INFO;

typedef struct _DISK_INT13_INFO DISK_INT13_INFO;

typedef struct _DISK_EX_INT13_INFO _DISK_EX_INT13_INFO, *P_DISK_EX_INT13_INFO;

typedef struct _DISK_EX_INT13_INFO DISK_EX_INT13_INFO;

struct _DISK_EX_INT13_INFO {
    WORD ExBufferSize;
    WORD ExFlags;
    DWORD ExCylinders;
    DWORD ExHeads;
    DWORD ExSectorsPerTrack;
    DWORD64 ExSectorsPerDrive;
    WORD ExSectorSize;
    WORD ExReserved;
};

struct _DISK_INT13_INFO {
    WORD DriveSelect;
    DWORD MaxCylinders;
    WORD SectorsPerTrack;
    WORD MaxHeads;
    WORD NumberDrives;
};

struct _struct_1776 {
    DISK_INT13_INFO Int13;
    DISK_EX_INT13_INFO ExInt13;
};

union _union_1775 {
    struct _struct_1776 s;
};

struct _DISK_DETECTION_INFO {
    DWORD SizeOfDetectInfo;
    DETECTION_TYPE DetectionType;
    union _union_1775 u;
};

typedef struct _DISK_GEOMETRY _DISK_GEOMETRY, *P_DISK_GEOMETRY;

typedef enum _MEDIA_TYPE {
    F3_120M_512=13,
    F3_128Mb_512=20,
    F3_1Pt23_1024=18,
    F3_1Pt2_512=17,
    F3_1Pt44_512=2,
    F3_200Mb_512=23,
    F3_20Pt8_512=4,
    F3_230Mb_512=21,
    F3_240M_512=24,
    F3_2Pt88_512=3,
    F3_32M_512=25,
    F3_640_512=14,
    F3_720_512=5,
    F5_160_512=10,
    F5_180_512=9,
    F5_1Pt23_1024=19,
    F5_1Pt2_512=1,
    F5_320_1024=8,
    F5_320_512=7,
    F5_360_512=6,
    F5_640_512=15,
    F5_720_512=16,
    F8_256_128=22,
    FixedMedia=12,
    RemovableMedia=11,
    Unknown=0
} _MEDIA_TYPE;

typedef enum _MEDIA_TYPE MEDIA_TYPE;

struct _DISK_GEOMETRY {
    LARGE_INTEGER Cylinders;
    MEDIA_TYPE MediaType;
    DWORD TracksPerCylinder;
    DWORD SectorsPerTrack;
    DWORD BytesPerSector;
};

typedef struct _DISK_GEOMETRY_EX _DISK_GEOMETRY_EX, *P_DISK_GEOMETRY_EX;

typedef struct _DISK_GEOMETRY DISK_GEOMETRY;

struct _DISK_GEOMETRY_EX {
    DISK_GEOMETRY Geometry;
    LARGE_INTEGER DiskSize;
    BYTE Data[1];
};

typedef struct _DISK_GROW_PARTITION _DISK_GROW_PARTITION, *P_DISK_GROW_PARTITION;

struct _DISK_GROW_PARTITION {
    DWORD PartitionNumber;
    LARGE_INTEGER BytesToGrow;
};

typedef struct _DISK_HISTOGRAM _DISK_HISTOGRAM, *P_DISK_HISTOGRAM;

typedef struct _HISTOGRAM_BUCKET _HISTOGRAM_BUCKET, *P_HISTOGRAM_BUCKET;

typedef struct _HISTOGRAM_BUCKET * PHISTOGRAM_BUCKET;

struct _HISTOGRAM_BUCKET {
    DWORD Reads;
    DWORD Writes;
};

struct _DISK_HISTOGRAM {
    LARGE_INTEGER DiskSize;
    LARGE_INTEGER Start;
    LARGE_INTEGER End;
    LARGE_INTEGER Average;
    LARGE_INTEGER AverageRead;
    LARGE_INTEGER AverageWrite;
    DWORD Granularity;
    DWORD Size;
    DWORD ReadCount;
    DWORD WriteCount;
    PHISTOGRAM_BUCKET Histogram;
};

typedef struct _DISK_LOGGING _DISK_LOGGING, *P_DISK_LOGGING;

struct _DISK_LOGGING {
    BYTE Function;
    PVOID BufferAddress;
    DWORD BufferSize;
};

typedef struct _DISK_PARTITION_INFO _DISK_PARTITION_INFO, *P_DISK_PARTITION_INFO;

typedef union _union_1778 _union_1778, *P_union_1778;

typedef struct _struct_1779 _struct_1779, *P_struct_1779;

typedef struct _struct_1780 _struct_1780, *P_struct_1780;

struct _struct_1780 {
    GUID DiskId;
};

struct _struct_1779 {
    DWORD Signature;
    DWORD CheckSum;
};

union _union_1778 {
    struct _struct_1779 Mbr;
    struct _struct_1780 Gpt;
};

struct _DISK_PARTITION_INFO {
    DWORD SizeOfPartitionInfo;
    PARTITION_STYLE PartitionStyle;
    union _union_1778 u;
};

typedef struct _DISK_PERFORMANCE _DISK_PERFORMANCE, *P_DISK_PERFORMANCE;

struct _DISK_PERFORMANCE {
    LARGE_INTEGER BytesRead;
    LARGE_INTEGER BytesWritten;
    LARGE_INTEGER ReadTime;
    LARGE_INTEGER WriteTime;
    LARGE_INTEGER IdleTime;
    DWORD ReadCount;
    DWORD WriteCount;
    DWORD QueueDepth;
    DWORD SplitCount;
    LARGE_INTEGER QueryTime;
    DWORD StorageDeviceNumber;
    WCHAR StorageManagerName[8];
};

typedef struct _DISK_RECORD _DISK_RECORD, *P_DISK_RECORD;

struct _DISK_RECORD {
    LARGE_INTEGER ByteOffset;
    LARGE_INTEGER StartTime;
    LARGE_INTEGER EndTime;
    PVOID VirtualAddress;
    DWORD NumberOfBytes;
    BYTE DeviceNumber;
    BOOLEAN ReadRequest;
};

typedef struct _DRIVE_LAYOUT_INFORMATION _DRIVE_LAYOUT_INFORMATION, *P_DRIVE_LAYOUT_INFORMATION;

typedef struct _PARTITION_INFORMATION _PARTITION_INFORMATION, *P_PARTITION_INFORMATION;

typedef struct _PARTITION_INFORMATION PARTITION_INFORMATION;

struct _PARTITION_INFORMATION {
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER PartitionLength;
    DWORD HiddenSectors;
    DWORD PartitionNumber;
    BYTE PartitionType;
    BOOLEAN BootIndicator;
    BOOLEAN RecognizedPartition;
    BOOLEAN RewritePartition;
};

struct _DRIVE_LAYOUT_INFORMATION {
    DWORD PartitionCount;
    DWORD Signature;
    PARTITION_INFORMATION PartitionEntry[1];
};

typedef struct _DRIVE_LAYOUT_INFORMATION_EX _DRIVE_LAYOUT_INFORMATION_EX, *P_DRIVE_LAYOUT_INFORMATION_EX;

typedef union _union_1771 _union_1771, *P_union_1771;

typedef struct _PARTITION_INFORMATION_EX _PARTITION_INFORMATION_EX, *P_PARTITION_INFORMATION_EX;

typedef struct _PARTITION_INFORMATION_EX PARTITION_INFORMATION_EX;

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR _DRIVE_LAYOUT_INFORMATION_MBR, *P_DRIVE_LAYOUT_INFORMATION_MBR;

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR DRIVE_LAYOUT_INFORMATION_MBR;

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT _DRIVE_LAYOUT_INFORMATION_GPT, *P_DRIVE_LAYOUT_INFORMATION_GPT;

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT DRIVE_LAYOUT_INFORMATION_GPT;

typedef union _union_1767 _union_1767, *P_union_1767;

typedef struct _PARTITION_INFORMATION_MBR _PARTITION_INFORMATION_MBR, *P_PARTITION_INFORMATION_MBR;

typedef struct _PARTITION_INFORMATION_MBR PARTITION_INFORMATION_MBR;

typedef struct _PARTITION_INFORMATION_GPT _PARTITION_INFORMATION_GPT, *P_PARTITION_INFORMATION_GPT;

typedef struct _PARTITION_INFORMATION_GPT PARTITION_INFORMATION_GPT;

struct _PARTITION_INFORMATION_MBR {
    BYTE PartitionType;
    BOOLEAN BootIndicator;
    BOOLEAN RecognizedPartition;
    DWORD HiddenSectors;
};

struct _PARTITION_INFORMATION_GPT {
    GUID PartitionType;
    GUID PartitionId;
    DWORD64 Attributes;
    WCHAR Name[36];
};

union _union_1767 {
    PARTITION_INFORMATION_MBR Mbr;
    PARTITION_INFORMATION_GPT Gpt;
};

struct _PARTITION_INFORMATION_EX {
    PARTITION_STYLE PartitionStyle;
    LARGE_INTEGER StartingOffset;
    LARGE_INTEGER PartitionLength;
    DWORD PartitionNumber;
    BOOLEAN RewritePartition;
    union _union_1767 u;
};

struct _DRIVE_LAYOUT_INFORMATION_MBR {
    DWORD Signature;
};

struct _DRIVE_LAYOUT_INFORMATION_GPT {
    GUID DiskId;
    LARGE_INTEGER StartingUsableOffset;
    LARGE_INTEGER UsableLength;
    DWORD MaxPartitionCount;
};

union _union_1771 {
    DRIVE_LAYOUT_INFORMATION_MBR Mbr;
    DRIVE_LAYOUT_INFORMATION_GPT Gpt;
};

struct _DRIVE_LAYOUT_INFORMATION_EX {
    DWORD PartitionStyle;
    DWORD PartitionCount;
    union _union_1771 u;
    PARTITION_INFORMATION_EX PartitionEntry[1];
};

typedef struct _DRIVERSTATUS _DRIVERSTATUS, *P_DRIVERSTATUS;

struct _DRIVERSTATUS {
    BYTE bDriverError;
    BYTE bIDEError;
    BYTE bReserved[2];
    DWORD dwReserved[2];
};

typedef struct _ENCRYPTED_DATA_INFO _ENCRYPTED_DATA_INFO, *P_ENCRYPTED_DATA_INFO;

struct _ENCRYPTED_DATA_INFO {
    DWORDLONG StartingFileOffset;
    DWORD OutputBufferOffset;
    DWORD BytesWithinFileSize;
    DWORD BytesWithinValidDataLength;
    WORD CompressionFormat;
    BYTE DataUnitShift;
    BYTE ChunkShift;
    BYTE ClusterShift;
    BYTE EncryptionFormat;
    WORD NumberOfDataBlocks;
    DWORD DataBlockSize[1];
};

typedef struct _ENCRYPTION_BUFFER _ENCRYPTION_BUFFER, *P_ENCRYPTION_BUFFER;

struct _ENCRYPTION_BUFFER {
    DWORD EncryptionOperation;
    BYTE Private[1];
};

typedef struct _EXFAT_STATISTICS _EXFAT_STATISTICS, *P_EXFAT_STATISTICS;

struct _EXFAT_STATISTICS {
    DWORD CreateHits;
    DWORD SuccessfulCreates;
    DWORD FailedCreates;
    DWORD NonCachedReads;
    DWORD NonCachedReadBytes;
    DWORD NonCachedWrites;
    DWORD NonCachedWriteBytes;
    DWORD NonCachedDiskReads;
    DWORD NonCachedDiskWrites;
};

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO _EXTENDED_ENCRYPTED_DATA_INFO, *P_EXTENDED_ENCRYPTED_DATA_INFO;

struct _EXTENDED_ENCRYPTED_DATA_INFO {
    DWORD ExtendedCode;
    DWORD Length;
    DWORD Flags;
    DWORD Reserved;
};

typedef struct _FAT_STATISTICS _FAT_STATISTICS, *P_FAT_STATISTICS;

struct _FAT_STATISTICS {
    DWORD CreateHits;
    DWORD SuccessfulCreates;
    DWORD FailedCreates;
    DWORD NonCachedReads;
    DWORD NonCachedReadBytes;
    DWORD NonCachedWrites;
    DWORD NonCachedWriteBytes;
    DWORD NonCachedDiskReads;
    DWORD NonCachedDiskWrites;
};

typedef struct _FILE_ALLOCATED_RANGE_BUFFER _FILE_ALLOCATED_RANGE_BUFFER, *P_FILE_ALLOCATED_RANGE_BUFFER;

struct _FILE_ALLOCATED_RANGE_BUFFER {
    LARGE_INTEGER FileOffset;
    LARGE_INTEGER Length;
};

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION _FILE_FS_PERSISTENT_VOLUME_INFORMATION, *P_FILE_FS_PERSISTENT_VOLUME_INFORMATION;

struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION {
    DWORD VolumeFlags;
    DWORD FlagMask;
    DWORD Version;
    DWORD Reserved;
};

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER _FILE_MAKE_COMPATIBLE_BUFFER, *P_FILE_MAKE_COMPATIBLE_BUFFER;

struct _FILE_MAKE_COMPATIBLE_BUFFER {
    BOOLEAN CloseDisc;
};

typedef struct _FILE_OBJECTID_BUFFER _FILE_OBJECTID_BUFFER, *P_FILE_OBJECTID_BUFFER;

typedef union _union_1853 _union_1853, *P_union_1853;

typedef struct _struct_1854 _struct_1854, *P_struct_1854;

struct _struct_1854 {
    BYTE BirthVolumeId[16];
    BYTE BirthObjectId[16];
    BYTE DomainId[16];
};

union _union_1853 {
    struct _struct_1854 s;
    BYTE ExtendedInfo[48];
};

struct _FILE_OBJECTID_BUFFER {
    BYTE ObjectId[16];
    union _union_1853 u;
};

typedef struct _FILE_PREFETCH _FILE_PREFETCH, *P_FILE_PREFETCH;

struct _FILE_PREFETCH {
    DWORD Type;
    DWORD Count;
    DWORDLONG Prefetch[1];
};

typedef struct _FILE_PREFETCH_EX _FILE_PREFETCH_EX, *P_FILE_PREFETCH_EX;

struct _FILE_PREFETCH_EX {
    DWORD Type;
    DWORD Count;
    PVOID Context;
    DWORDLONG Prefetch[1];
};

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER, *P_FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;

struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER {
    LARGE_INTEGER DirectoryCount;
    LARGE_INTEGER FileCount;
    WORD FsFormatMajVersion;
    WORD FsFormatMinVersion;
    WCHAR FsFormatName[12];
    LARGE_INTEGER FormatTime;
    LARGE_INTEGER LastUpdateTime;
    WCHAR CopyrightInfo[34];
    WCHAR AbstractInfo[34];
    WCHAR FormattingImplementationInfo[34];
    WCHAR LastModifyingImplementationInfo[34];
};

typedef struct _FILE_QUERY_SPARING_BUFFER _FILE_QUERY_SPARING_BUFFER, *P_FILE_QUERY_SPARING_BUFFER;

struct _FILE_QUERY_SPARING_BUFFER {
    DWORD SparingUnitBytes;
    BOOLEAN SoftwareSparing;
    DWORD TotalSpareBlocks;
    DWORD FreeSpareBlocks;
};

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER _FILE_SET_DEFECT_MGMT_BUFFER, *P_FILE_SET_DEFECT_MGMT_BUFFER;

struct _FILE_SET_DEFECT_MGMT_BUFFER {
    BOOLEAN Disable;
};

typedef struct _FILE_SET_SPARSE_BUFFER _FILE_SET_SPARSE_BUFFER, *P_FILE_SET_SPARSE_BUFFER;

struct _FILE_SET_SPARSE_BUFFER {
    BOOLEAN SetSparse;
};

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION _FILE_SYSTEM_RECOGNITION_INFORMATION, *P_FILE_SYSTEM_RECOGNITION_INFORMATION;

struct _FILE_SYSTEM_RECOGNITION_INFORMATION {
    CHAR FileSystem[9];
};

typedef struct _FILE_TYPE_NOTIFICATION_INPUT _FILE_TYPE_NOTIFICATION_INPUT, *P_FILE_TYPE_NOTIFICATION_INPUT;

struct _FILE_TYPE_NOTIFICATION_INPUT {
    DWORD Flags;
    DWORD NumFileTypeIDs;
    GUID FileTypeID[1];
};

typedef struct _FILE_ZERO_DATA_INFORMATION _FILE_ZERO_DATA_INFORMATION, *P_FILE_ZERO_DATA_INFORMATION;

struct _FILE_ZERO_DATA_INFORMATION {
    LARGE_INTEGER FileOffset;
    LARGE_INTEGER BeyondFinalZero;
};

typedef struct _FILESYSTEM_STATISTICS _FILESYSTEM_STATISTICS, *P_FILESYSTEM_STATISTICS;

struct _FILESYSTEM_STATISTICS {
    WORD FileSystemType;
    WORD Version;
    DWORD SizeOfCompleteStructure;
    DWORD UserFileReads;
    DWORD UserFileReadBytes;
    DWORD UserDiskReads;
    DWORD UserFileWrites;
    DWORD UserFileWriteBytes;
    DWORD UserDiskWrites;
    DWORD MetaDataReads;
    DWORD MetaDataReadBytes;
    DWORD MetaDataDiskReads;
    DWORD MetaDataWrites;
    DWORD MetaDataWriteBytes;
    DWORD MetaDataDiskWrites;
};

typedef struct _FORMAT_EX_PARAMETERS _FORMAT_EX_PARAMETERS, *P_FORMAT_EX_PARAMETERS;

struct _FORMAT_EX_PARAMETERS {
    MEDIA_TYPE MediaType;
    DWORD StartCylinderNumber;
    DWORD EndCylinderNumber;
    DWORD StartHeadNumber;
    DWORD EndHeadNumber;
    WORD FormatGapLength;
    WORD SectorsPerTrack;
    WORD SectorNumber[1];
};

typedef struct _FORMAT_PARAMETERS _FORMAT_PARAMETERS, *P_FORMAT_PARAMETERS;

struct _FORMAT_PARAMETERS {
    MEDIA_TYPE MediaType;
    DWORD StartCylinderNumber;
    DWORD EndCylinderNumber;
    DWORD StartHeadNumber;
    DWORD EndHeadNumber;
};

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER _FSCTL_QUERY_FAT_BPB_BUFFER, *P_FSCTL_QUERY_FAT_BPB_BUFFER;

struct _FSCTL_QUERY_FAT_BPB_BUFFER {
    BYTE First0x24BytesOfBootSector[36];
};

typedef struct _GET_CHANGER_PARAMETERS _GET_CHANGER_PARAMETERS, *P_GET_CHANGER_PARAMETERS;

struct _GET_CHANGER_PARAMETERS {
    DWORD Size;
    WORD NumberTransportElements;
    WORD NumberStorageElements;
    WORD NumberCleanerSlots;
    WORD NumberIEElements;
    WORD NumberDataTransferElements;
    WORD NumberOfDoors;
    WORD FirstSlotNumber;
    WORD FirstDriveNumber;
    WORD FirstTransportNumber;
    WORD FirstIEPortNumber;
    WORD FirstCleanerSlotAddress;
    WORD MagazineSize;
    DWORD DriveCleanTimeout;
    DWORD Features0;
    DWORD Features1;
    BYTE MoveFromTransport;
    BYTE MoveFromSlot;
    BYTE MoveFromIePort;
    BYTE MoveFromDrive;
    BYTE ExchangeFromTransport;
    BYTE ExchangeFromSlot;
    BYTE ExchangeFromIePort;
    BYTE ExchangeFromDrive;
    BYTE LockUnlockCapabilities;
    BYTE PositionCapabilities;
    BYTE Reserved1[2];
    DWORD Reserved2[2];
};

typedef struct _GET_LENGTH_INFORMATION _GET_LENGTH_INFORMATION, *P_GET_LENGTH_INFORMATION;

struct _GET_LENGTH_INFORMATION {
    LARGE_INTEGER Length;
};

typedef struct _GET_MEDIA_TYPES _GET_MEDIA_TYPES, *P_GET_MEDIA_TYPES;

typedef struct _DEVICE_MEDIA_INFO DEVICE_MEDIA_INFO;

struct _GET_MEDIA_TYPES {
    DWORD DeviceType;
    DWORD MediaInfoCount;
    DEVICE_MEDIA_INFO MediaInfo[1];
};

typedef struct _GETVERSIONINPARAMS _GETVERSIONINPARAMS, *P_GETVERSIONINPARAMS;

struct _GETVERSIONINPARAMS {
    BYTE bVersion;
    BYTE bRevision;
    BYTE bReserved;
    BYTE bIDEDeviceMap;
    DWORD fCapabilities;
    DWORD dwReserved[4];
};

typedef struct _IDEREGS _IDEREGS, *P_IDEREGS;

struct _IDEREGS {
    BYTE bFeaturesReg;
    BYTE bSectorCountReg;
    BYTE bSectorNumberReg;
    BYTE bCylLowReg;
    BYTE bCylHighReg;
    BYTE bDriveHeadReg;
    BYTE bCommandReg;
    BYTE bReserved;
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY _LOOKUP_STREAM_FROM_CLUSTER_ENTRY, *P_LOOKUP_STREAM_FROM_CLUSTER_ENTRY;

struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY {
    DWORD OffsetToNext;
    DWORD Flags;
    LARGE_INTEGER Reserved;
    LARGE_INTEGER Cluster;
    WCHAR FileName[1];
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT _LOOKUP_STREAM_FROM_CLUSTER_INPUT, *P_LOOKUP_STREAM_FROM_CLUSTER_INPUT;

struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT {
    DWORD Flags;
    DWORD NumberOfClusters;
    LARGE_INTEGER Cluster[1];
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT, *P_LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;

struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT {
    DWORD Offset;
    DWORD NumberOfMatches;
    DWORD BufferSizeRequired;
};

typedef struct _NTFS_STATISTICS _NTFS_STATISTICS, *P_NTFS_STATISTICS;

typedef struct _struct_1847 _struct_1847, *P_struct_1847;

typedef struct _struct_1848 _struct_1848, *P_struct_1848;

typedef struct _struct_1849 _struct_1849, *P_struct_1849;

typedef struct _struct_1850 _struct_1850, *P_struct_1850;

typedef struct _struct_1851 _struct_1851, *P_struct_1851;

struct _struct_1850 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _struct_1847 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _struct_1849 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
};

struct _struct_1851 {
    DWORD Calls;
    DWORD Clusters;
    DWORD Hints;
    DWORD RunsReturned;
    DWORD HintsHonored;
    DWORD HintsClusters;
    DWORD Cache;
    DWORD CacheClusters;
    DWORD CacheMiss;
    DWORD CacheMissClusters;
};

struct _struct_1848 {
    WORD Write;
    WORD Create;
    WORD SetInfo;
    WORD Flush;
};

struct _NTFS_STATISTICS {
    DWORD LogFileFullExceptions;
    DWORD OtherExceptions;
    DWORD MftReads;
    DWORD MftReadBytes;
    DWORD MftWrites;
    DWORD MftWriteBytes;
    struct _struct_1847 MftWritesUserLevel;
    WORD MftWritesFlushForLogFileFull;
    WORD MftWritesLazyWriter;
    WORD MftWritesUserRequest;
    DWORD Mft2Writes;
    DWORD Mft2WriteBytes;
    struct _struct_1848 Mft2WritesUserLevel;
    WORD Mft2WritesFlushForLogFileFull;
    WORD Mft2WritesLazyWriter;
    WORD Mft2WritesUserRequest;
    DWORD RootIndexReads;
    DWORD RootIndexReadBytes;
    DWORD RootIndexWrites;
    DWORD RootIndexWriteBytes;
    DWORD BitmapReads;
    DWORD BitmapReadBytes;
    DWORD BitmapWrites;
    DWORD BitmapWriteBytes;
    WORD BitmapWritesFlushForLogFileFull;
    WORD BitmapWritesLazyWriter;
    WORD BitmapWritesUserRequest;
    struct _struct_1849 BitmapWritesUserLevel;
    DWORD MftBitmapReads;
    DWORD MftBitmapReadBytes;
    DWORD MftBitmapWrites;
    DWORD MftBitmapWriteBytes;
    WORD MftBitmapWritesFlushForLogFileFull;
    WORD MftBitmapWritesLazyWriter;
    WORD MftBitmapWritesUserRequest;
    struct _struct_1850 MftBitmapWritesUserLevel;
    DWORD UserIndexReads;
    DWORD UserIndexReadBytes;
    DWORD UserIndexWrites;
    DWORD UserIndexWriteBytes;
    DWORD LogFileReads;
    DWORD LogFileReadBytes;
    DWORD LogFileWrites;
    DWORD LogFileWriteBytes;
    struct _struct_1851 Allocate;
};

typedef struct _PATHNAME_BUFFER _PATHNAME_BUFFER, *P_PATHNAME_BUFFER;

struct _PATHNAME_BUFFER {
    DWORD PathNameLength;
    WCHAR Name[1];
};

typedef struct _PERF_BIN _PERF_BIN, *P_PERF_BIN;

struct _PERF_BIN {
    DWORD NumberOfBins;
    DWORD TypeOfBin;
    BIN_RANGE BinsRanges[1];
};

typedef struct _PLEX_READ_DATA_REQUEST _PLEX_READ_DATA_REQUEST, *P_PLEX_READ_DATA_REQUEST;

struct _PLEX_READ_DATA_REQUEST {
    LARGE_INTEGER ByteOffset;
    DWORD ByteLength;
    DWORD PlexNumber;
};

typedef struct _PREVENT_MEDIA_REMOVAL _PREVENT_MEDIA_REMOVAL, *P_PREVENT_MEDIA_REMOVAL;

struct _PREVENT_MEDIA_REMOVAL {
    BOOLEAN PreventMediaRemoval;
};

typedef struct _READ_ELEMENT_ADDRESS_INFO _READ_ELEMENT_ADDRESS_INFO, *P_READ_ELEMENT_ADDRESS_INFO;

typedef struct _CHANGER_ELEMENT_STATUS CHANGER_ELEMENT_STATUS;

struct _READ_ELEMENT_ADDRESS_INFO {
    DWORD NumberOfElements;
    CHANGER_ELEMENT_STATUS ElementStatus[1];
};

typedef struct _REASSIGN_BLOCKS _REASSIGN_BLOCKS, *P_REASSIGN_BLOCKS;

struct _REASSIGN_BLOCKS {
    WORD Reserved;
    WORD Count;
    DWORD BlockNumber[1];
};

typedef struct _REASSIGN_BLOCKS_EX _REASSIGN_BLOCKS_EX, *P_REASSIGN_BLOCKS_EX;

struct _REASSIGN_BLOCKS_EX {
    WORD Reserved;
    WORD Count;
    LARGE_INTEGER BlockNumber[1];
};

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER _REQUEST_OPLOCK_INPUT_BUFFER, *P_REQUEST_OPLOCK_INPUT_BUFFER;

struct _REQUEST_OPLOCK_INPUT_BUFFER {
    WORD StructureVersion;
    WORD StructureLength;
    DWORD RequestedOplockLevel;
    DWORD Flags;
};

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER _REQUEST_OPLOCK_OUTPUT_BUFFER, *P_REQUEST_OPLOCK_OUTPUT_BUFFER;

struct _REQUEST_OPLOCK_OUTPUT_BUFFER {
    WORD StructureVersion;
    WORD StructureLength;
    DWORD OriginalOplockLevel;
    DWORD NewOplockLevel;
    DWORD Flags;
    ACCESS_MASK AccessMode;
    WORD ShareMode;
};

typedef struct _REQUEST_RAW_ENCRYPTED_DATA _REQUEST_RAW_ENCRYPTED_DATA, *P_REQUEST_RAW_ENCRYPTED_DATA;

struct _REQUEST_RAW_ENCRYPTED_DATA {
    LONGLONG FileOffset;
    DWORD Length;
};

typedef struct _RETRIEVAL_POINTER_BASE _RETRIEVAL_POINTER_BASE, *P_RETRIEVAL_POINTER_BASE;

struct _RETRIEVAL_POINTER_BASE {
    LARGE_INTEGER FileAreaOffset;
};

typedef struct _SD_CHANGE_MACHINE_SID_INPUT _SD_CHANGE_MACHINE_SID_INPUT, *P_SD_CHANGE_MACHINE_SID_INPUT;

struct _SD_CHANGE_MACHINE_SID_INPUT {
    WORD CurrentMachineSIDOffset;
    WORD CurrentMachineSIDLength;
    WORD NewMachineSIDOffset;
    WORD NewMachineSIDLength;
};

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT _SD_CHANGE_MACHINE_SID_OUTPUT, *P_SD_CHANGE_MACHINE_SID_OUTPUT;

struct _SD_CHANGE_MACHINE_SID_OUTPUT {
    DWORDLONG NumSDChangedSuccess;
    DWORDLONG NumSDChangedFail;
    DWORDLONG NumSDUnused;
    DWORDLONG NumSDTotal;
    DWORDLONG NumMftSDChangedSuccess;
    DWORDLONG NumMftSDChangedFail;
    DWORDLONG NumMftSDTotal;
};

typedef struct _SD_GLOBAL_CHANGE_INPUT _SD_GLOBAL_CHANGE_INPUT, *P_SD_GLOBAL_CHANGE_INPUT;

typedef union _union_1896 _union_1896, *P_union_1896;

typedef struct _SD_CHANGE_MACHINE_SID_INPUT SD_CHANGE_MACHINE_SID_INPUT;

union _union_1896 {
    SD_CHANGE_MACHINE_SID_INPUT SdChange;
};

struct _SD_GLOBAL_CHANGE_INPUT {
    DWORD Flags;
    DWORD ChangeType;
    union _union_1896 field_0x8;
};

typedef struct _SD_GLOBAL_CHANGE_OUTPUT _SD_GLOBAL_CHANGE_OUTPUT, *P_SD_GLOBAL_CHANGE_OUTPUT;

typedef union _union_1898 _union_1898, *P_union_1898;

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT SD_CHANGE_MACHINE_SID_OUTPUT;

union _union_1898 {
    SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
};

struct _SD_GLOBAL_CHANGE_OUTPUT {
    DWORD Flags;
    DWORD ChangeType;
    union _union_1898 field_0x8;
};

typedef struct _SENDCMDINPARAMS _SENDCMDINPARAMS, *P_SENDCMDINPARAMS;

typedef struct _IDEREGS IDEREGS;

struct _SENDCMDINPARAMS {
    DWORD cBufferSize;
    IDEREGS irDriveRegs;
    BYTE bDriveNumber;
    BYTE bReserved[3];
    DWORD dwReserved[4];
    BYTE bBuffer[1];
};

typedef struct _SENDCMDOUTPARAMS _SENDCMDOUTPARAMS, *P_SENDCMDOUTPARAMS;

typedef struct _DRIVERSTATUS DRIVERSTATUS;

struct _SENDCMDOUTPARAMS {
    DWORD cBufferSize;
    DRIVERSTATUS DriverStatus;
    BYTE bBuffer[1];
};

typedef struct _SET_PARTITION_INFORMATION _SET_PARTITION_INFORMATION, *P_SET_PARTITION_INFORMATION;

struct _SET_PARTITION_INFORMATION {
    BYTE PartitionType;
};

typedef struct _SET_PARTITION_INFORMATION_EX _SET_PARTITION_INFORMATION_EX, *P_SET_PARTITION_INFORMATION_EX;

typedef union _union_1760 _union_1760, *P_union_1760;

typedef struct _SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION;

typedef SET_PARTITION_INFORMATION SET_PARTITION_INFORMATION_MBR;

typedef PARTITION_INFORMATION_GPT SET_PARTITION_INFORMATION_GPT;

union _union_1760 {
    SET_PARTITION_INFORMATION_MBR Mbr;
    SET_PARTITION_INFORMATION_GPT Gpt;
};

struct _SET_PARTITION_INFORMATION_EX {
    PARTITION_STYLE PartitionStyle;
    union _union_1760 u;
};

typedef struct _SHRINK_VOLUME_INFORMATION _SHRINK_VOLUME_INFORMATION, *P_SHRINK_VOLUME_INFORMATION;

typedef enum _SHRINK_VOLUME_REQUEST_TYPES {
    ShrinkAbort=3,
    ShrinkCommit=2,
    ShrinkPrepare=1
} _SHRINK_VOLUME_REQUEST_TYPES;

typedef enum _SHRINK_VOLUME_REQUEST_TYPES SHRINK_VOLUME_REQUEST_TYPES;

struct _SHRINK_VOLUME_INFORMATION {
    SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
    DWORDLONG Flags;
    LONGLONG NewNumberOfSectors;
};

typedef struct _SI_COPYFILE _SI_COPYFILE, *P_SI_COPYFILE;

struct _SI_COPYFILE {
    DWORD SourceFileNameLength;
    DWORD DestinationFileNameLength;
    DWORD Flags;
    WCHAR FileNameBuffer[1];
};

typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR, *P_STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;

struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    DWORD BytesPerCacheLine;
    DWORD BytesOffsetForCacheAlignment;
    DWORD BytesPerLogicalSector;
    DWORD BytesPerPhysicalSector;
    DWORD BytesOffsetForSectorAlignment;
};

typedef struct _STORAGE_ADAPTER_DESCRIPTOR _STORAGE_ADAPTER_DESCRIPTOR, *P_STORAGE_ADAPTER_DESCRIPTOR;

struct _STORAGE_ADAPTER_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    DWORD MaximumTransferLength;
    DWORD MaximumPhysicalPages;
    DWORD AlignmentMask;
    BOOLEAN AdapterUsesPio;
    BOOLEAN AdapterScansDown;
    BOOLEAN CommandQueueing;
    BOOLEAN AcceleratedTransfer;
    BOOLEAN BusType;
    WORD BusMajorVersion;
    WORD BusMinorVersion;
};

typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT _STORAGE_ALLOCATE_BC_STREAM_INPUT, *P_STORAGE_ALLOCATE_BC_STREAM_INPUT;

struct _STORAGE_ALLOCATE_BC_STREAM_INPUT {
    DWORD Version;
    DWORD RequestsPerPeriod;
    DWORD Period;
    BOOLEAN RetryFailures;
    BOOLEAN Discardable;
    BOOLEAN Reserved1[2];
    DWORD AccessType;
    DWORD AccessMode;
};

typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT _STORAGE_ALLOCATE_BC_STREAM_OUTPUT, *P_STORAGE_ALLOCATE_BC_STREAM_OUTPUT;

struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT {
    DWORDLONG RequestSize;
    DWORD NumOutStandingRequests;
};

typedef enum _STORAGE_ASSOCIATION_TYPE {
    StorageIdAssocDevice=0,
    StorageIdAssocPort=1,
    StorageIdAssocTarget=2
} _STORAGE_ASSOCIATION_TYPE;

typedef struct _STORAGE_BUS_RESET_REQUEST _STORAGE_BUS_RESET_REQUEST, *P_STORAGE_BUS_RESET_REQUEST;

struct _STORAGE_BUS_RESET_REQUEST {
    BYTE PathId;
};

typedef struct _STORAGE_DESCRIPTOR_HEADER _STORAGE_DESCRIPTOR_HEADER, *P_STORAGE_DESCRIPTOR_HEADER;

struct _STORAGE_DESCRIPTOR_HEADER {
    DWORD Version;
    DWORD Size;
};

typedef struct _STORAGE_DEVICE_DESCRIPTOR _STORAGE_DEVICE_DESCRIPTOR, *P_STORAGE_DEVICE_DESCRIPTOR;

struct _STORAGE_DEVICE_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    BYTE DeviceType;
    BYTE DeviceTypeModifier;
    BOOLEAN RemovableMedia;
    BOOLEAN CommandQueueing;
    DWORD VendorIdOffset;
    DWORD ProductIdOffset;
    DWORD ProductRevisionOffset;
    DWORD SerialNumberOffset;
    STORAGE_BUS_TYPE BusType;
    DWORD RawPropertiesLength;
    BYTE RawDeviceProperties[1];
};

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR _STORAGE_DEVICE_ID_DESCRIPTOR, *P_STORAGE_DEVICE_ID_DESCRIPTOR;

struct _STORAGE_DEVICE_ID_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    DWORD NumberOfIdentifiers;
    BYTE Identifiers[1];
};

typedef struct _STORAGE_DEVICE_NUMBER _STORAGE_DEVICE_NUMBER, *P_STORAGE_DEVICE_NUMBER;

struct _STORAGE_DEVICE_NUMBER {
    DWORD DeviceType;
    DWORD DeviceNumber;
    DWORD PartitionNumber;
};

typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT _STORAGE_GET_BC_PROPERTIES_OUTPUT, *P_STORAGE_GET_BC_PROPERTIES_OUTPUT;

struct _STORAGE_GET_BC_PROPERTIES_OUTPUT {
    DWORD MaximumRequestsPerPeriod;
    DWORD MinimumPeriod;
    DWORDLONG MaximumRequestSize;
    DWORD EstimatedTimePerRequest;
    DWORD NumOutStandingRequests;
    DWORDLONG RequestSize;
};

typedef struct _STORAGE_HOTPLUG_INFO _STORAGE_HOTPLUG_INFO, *P_STORAGE_HOTPLUG_INFO;

struct _STORAGE_HOTPLUG_INFO {
    DWORD Size;
    BOOLEAN MediaRemovable;
    BOOLEAN MediaHotplug;
    BOOLEAN DeviceHotplug;
    BOOLEAN WriteCacheEnableOverride;
};

typedef enum _STORAGE_ID_NAA_FORMAT {
    StorageIdNAAFormatIEEEERegisteredExtended=5,
    StorageIdNAAFormatIEEEExtended=2,
    StorageIdNAAFormatIEEERegistered=3
} _STORAGE_ID_NAA_FORMAT;

typedef struct _STORAGE_IDENTIFIER _STORAGE_IDENTIFIER, *P_STORAGE_IDENTIFIER;

typedef enum _STORAGE_IDENTIFIER_CODE_SET {
    StorageIdCodeSetAscii=2,
    StorageIdCodeSetBinary=1,
    StorageIdCodeSetReserved=0,
    StorageIdCodeSetUtf8=3
} _STORAGE_IDENTIFIER_CODE_SET;

typedef enum _STORAGE_IDENTIFIER_CODE_SET STORAGE_IDENTIFIER_CODE_SET;

typedef enum _STORAGE_IDENTIFIER_TYPE {
    StorageIdTypeEUI64=2,
    StorageIdTypeFCPHName=3,
    StorageIdTypeLogicalUnitGroup=6,
    StorageIdTypeMD5LogicalUnitIdentifier=7,
    StorageIdTypePortRelative=4,
    StorageIdTypeScsiNameString=8,
    StorageIdTypeTargetPortGroup=5,
    StorageIdTypeVendorId=1,
    StorageIdTypeVendorSpecific=0
} _STORAGE_IDENTIFIER_TYPE;

typedef enum _STORAGE_IDENTIFIER_TYPE STORAGE_IDENTIFIER_TYPE;

typedef enum _STORAGE_ASSOCIATION_TYPE STORAGE_ASSOCIATION_TYPE;

struct _STORAGE_IDENTIFIER {
    STORAGE_IDENTIFIER_CODE_SET CodeSet;
    STORAGE_IDENTIFIER_TYPE Type;
    WORD IdentifierSize;
    WORD NextOffset;
    STORAGE_ASSOCIATION_TYPE Association;
    BYTE Identifier[1];
};

typedef struct _STORAGE_MINIPORT_DESCRIPTOR _STORAGE_MINIPORT_DESCRIPTOR, *P_STORAGE_MINIPORT_DESCRIPTOR;

typedef enum _STORAGE_PORT_CODE_SET {
    StoragePortCodeSetReserved=0,
    StoragePortCodeSetSCSIport=2,
    StoragePortCodeSetStorport=1
} _STORAGE_PORT_CODE_SET;

typedef enum _STORAGE_PORT_CODE_SET STORAGE_PORT_CODE_SET;

struct _STORAGE_MINIPORT_DESCRIPTOR {
    DWORD Version;
    DWORD Size;
    STORAGE_PORT_CODE_SET Portdriver;
    BOOLEAN LUNResetSupported;
    BOOLEAN TargetResetSupported;
};

typedef struct _STORAGE_PREDICT_FAILURE _STORAGE_PREDICT_FAILURE, *P_STORAGE_PREDICT_FAILURE;

struct _STORAGE_PREDICT_FAILURE {
    DWORD PredictFailure;
    BYTE VendorSpecific[512];
};

typedef struct _STORAGE_PRIORITY_HINT_SUPPORT _STORAGE_PRIORITY_HINT_SUPPORT, *P_STORAGE_PRIORITY_HINT_SUPPORT;

struct _STORAGE_PRIORITY_HINT_SUPPORT {
    DWORD SupportFlags;
};

typedef enum _STORAGE_PROPERTY_ID {
    StorageAccessAlignmentProperty=6,
    StorageAdapterProperty=1,
    StorageDeviceIdProperty=2,
    StorageDeviceProperty=0,
    StorageDeviceSeekPenaltyProperty=7,
    StorageDeviceTrimProperty=8,
    StorageDeviceUniqueIdProperty=3,
    StorageDeviceWriteAggregationProperty=9,
    StorageDeviceWriteCacheProperty=4,
    StorageMiniportProperty=5
} _STORAGE_PROPERTY_ID;

typedef struct _STORAGE_PROPERTY_QUERY _STORAGE_PROPERTY_QUERY, *P_STORAGE_PROPERTY_QUERY;

typedef enum _STORAGE_PROPERTY_ID STORAGE_PROPERTY_ID;

typedef enum _STORAGE_QUERY_TYPE {
    PropertyExistsQuery=1,
    PropertyMaskQuery=2,
    PropertyQueryMaxDefined=3,
    PropertyStandardQuery=0
} _STORAGE_QUERY_TYPE;

typedef enum _STORAGE_QUERY_TYPE STORAGE_QUERY_TYPE;

struct _STORAGE_PROPERTY_QUERY {
    STORAGE_PROPERTY_ID PropertyId;
    STORAGE_QUERY_TYPE QueryType;
    BYTE AdditionalParameters[1];
};

typedef struct _STORAGE_READ_CAPACITY _STORAGE_READ_CAPACITY, *P_STORAGE_READ_CAPACITY;

struct _STORAGE_READ_CAPACITY {
    DWORD Version;
    DWORD Size;
    DWORD BlockLength;
    LARGE_INTEGER NumberOfBlocks;
    LARGE_INTEGER DiskLength;
};

typedef struct _STORAGE_WRITE_CACHE_PROPERTY _STORAGE_WRITE_CACHE_PROPERTY, *P_STORAGE_WRITE_CACHE_PROPERTY;

typedef enum _WRITE_CACHE_TYPE {
    WriteCacheTypeNone=1,
    WriteCacheTypeUnknown=0,
    WriteCacheTypeWriteBack=2,
    WriteCacheTypeWriteThrough=3
} _WRITE_CACHE_TYPE;

typedef enum _WRITE_CACHE_TYPE WRITE_CACHE_TYPE;

typedef enum _WRITE_CACHE_ENABLE {
    WriteCacheDisabled=1,
    WriteCacheEnableUnknown=0,
    WriteCacheEnabled=2
} _WRITE_CACHE_ENABLE;

typedef enum _WRITE_CACHE_ENABLE WRITE_CACHE_ENABLE;

typedef enum _WRITE_CACHE_CHANGE {
    WriteCacheChangeUnknown=0,
    WriteCacheChangeable=2,
    WriteCacheNotChangeable=1
} _WRITE_CACHE_CHANGE;

typedef enum _WRITE_CACHE_CHANGE WRITE_CACHE_CHANGE;

typedef enum _WRITE_THROUGH {
    WriteThroughNotSupported=1,
    WriteThroughSupported=2,
    WriteThroughUnknown=0
} _WRITE_THROUGH;

typedef enum _WRITE_THROUGH WRITE_THROUGH;

struct _STORAGE_WRITE_CACHE_PROPERTY {
    DWORD Version;
    DWORD Size;
    WRITE_CACHE_TYPE WriteCacheType;
    WRITE_CACHE_ENABLE WriteCacheEnabled;
    WRITE_CACHE_CHANGE WriteCacheChangeable;
    WRITE_THROUGH WriteThroughSupported;
    BOOLEAN FlushCacheSupported;
    BOOLEAN UserDefinedPowerProtection;
    BOOLEAN NVCacheEnabled;
};

typedef struct _struct_1826 _struct_1826, *P_struct_1826;

struct _struct_1826 {
    LARGE_INTEGER NextVcn;
    LARGE_INTEGER Lcn;
};

typedef struct _struct_1874 _struct_1874, *P_struct_1874;

struct _struct_1874 {
    LONGLONG LowPart;
    LONGLONG HighPart;
};

typedef struct _TAPE_GET_STATISTICS _TAPE_GET_STATISTICS, *P_TAPE_GET_STATISTICS;

struct _TAPE_GET_STATISTICS {
    DWORD Operation;
};

typedef struct _TAPE_STATISTICS _TAPE_STATISTICS, *P_TAPE_STATISTICS;

struct _TAPE_STATISTICS {
    DWORD Version;
    DWORD Flags;
    LARGE_INTEGER RecoveredWrites;
    LARGE_INTEGER UnrecoveredWrites;
    LARGE_INTEGER RecoveredReads;
    LARGE_INTEGER UnrecoveredReads;
    BYTE CompressionRatioReads;
    BYTE CompressionRatioWrites;
};

typedef struct _TXFS_CREATE_MINIVERSION_INFO _TXFS_CREATE_MINIVERSION_INFO, *P_TXFS_CREATE_MINIVERSION_INFO;

struct _TXFS_CREATE_MINIVERSION_INFO {
    WORD StructureVersion;
    WORD StructureLength;
    DWORD BaseVersion;
    WORD MiniVersion;
};

typedef struct _TXFS_GET_METADATA_INFO_OUT _TXFS_GET_METADATA_INFO_OUT, *P_TXFS_GET_METADATA_INFO_OUT;

struct _TXFS_GET_METADATA_INFO_OUT {
    struct _struct_1874 TxfFileId;
    GUID LockingTransaction;
    DWORDLONG LastLsn;
    DWORD TransactionState;
};

typedef struct _TXFS_GET_TRANSACTED_VERSION _TXFS_GET_TRANSACTED_VERSION, *P_TXFS_GET_TRANSACTED_VERSION;

struct _TXFS_GET_TRANSACTED_VERSION {
    DWORD ThisBaseVersion;
    DWORD LatestVersion;
    WORD ThisMiniVersion;
    WORD FirstMiniVersion;
    WORD LatestMiniVersion;
};

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES _TXFS_LIST_TRANSACTION_LOCKED_FILES, *P_TXFS_LIST_TRANSACTION_LOCKED_FILES;

struct _TXFS_LIST_TRANSACTION_LOCKED_FILES {
    GUID KtmTransaction;
    DWORDLONG NumberOfFiles;
    DWORDLONG BufferSizeRequired;
    DWORDLONG Offset;
};

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY, *P_TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;

struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY {
    DWORDLONG Offset;
    DWORD NameFlags;
    LONGLONG FileId;
    DWORD Reserved1;
    DWORD Reserved2;
    LONGLONG Reserved3;
    WCHAR FileName[1];
};

typedef struct _TXFS_LIST_TRANSACTIONS _TXFS_LIST_TRANSACTIONS, *P_TXFS_LIST_TRANSACTIONS;

struct _TXFS_LIST_TRANSACTIONS {
    DWORDLONG NumberOfTransactions;
    DWORDLONG BufferSizeRequired;
};

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY _TXFS_LIST_TRANSACTIONS_ENTRY, *P_TXFS_LIST_TRANSACTIONS_ENTRY;

struct _TXFS_LIST_TRANSACTIONS_ENTRY {
    GUID TransactionId;
    DWORD TransactionState;
    DWORD Reserved1;
    DWORD Reserved2;
    LONGLONG Reserved3;
};

typedef struct _TXFS_MODIFY_RM _TXFS_MODIFY_RM, *P_TXFS_MODIFY_RM;

struct _TXFS_MODIFY_RM {
    DWORD Flags;
    DWORD LogContainerCountMax;
    DWORD LogContainerCountMin;
    DWORD LogContainerCount;
    DWORD LogGrowthIncrement;
    DWORD LogAutoShrinkPercentage;
    DWORDLONG Reserved;
    WORD LoggingMode;
};

typedef struct _TXFS_QUERY_RM_INFORMATION _TXFS_QUERY_RM_INFORMATION, *P_TXFS_QUERY_RM_INFORMATION;

struct _TXFS_QUERY_RM_INFORMATION {
    DWORD BytesRequired;
    DWORDLONG TailLsn;
    DWORDLONG CurrentLsn;
    DWORDLONG ArchiveTailLsn;
    DWORDLONG LogContainerSize;
    LARGE_INTEGER HighestVirtualClock;
    DWORD LogContainerCount;
    DWORD LogContainerCountMax;
    DWORD LogContainerCountMin;
    DWORD LogGrowthIncrement;
    DWORD LogAutoShrinkPercentage;
    DWORD Flags;
    WORD LoggingMode;
    WORD Reserved;
    DWORD RmState;
    DWORDLONG LogCapacity;
    DWORDLONG LogFree;
    DWORDLONG TopsSize;
    DWORDLONG TopsUsed;
    DWORDLONG TransactionCount;
    DWORDLONG OnePCCount;
    DWORDLONG TwoPCCount;
    DWORDLONG NumberLogFileFull;
    DWORDLONG OldestTransactionAge;
    GUID RMName;
    DWORD TmLogPathOffset;
};

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT _TXFS_READ_BACKUP_INFORMATION_OUT, *P_TXFS_READ_BACKUP_INFORMATION_OUT;

typedef union _union_1880 _union_1880, *P_union_1880;

union _union_1880 {
    DWORD BufferLength;
    BYTE Buffer[1];
};

struct _TXFS_READ_BACKUP_INFORMATION_OUT {
    union _union_1880 u;
};

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION _TXFS_ROLLFORWARD_REDO_INFORMATION, *P_TXFS_ROLLFORWARD_REDO_INFORMATION;

struct _TXFS_ROLLFORWARD_REDO_INFORMATION {
    LARGE_INTEGER LastVirtualClock;
    DWORDLONG LastRedoLsn;
    DWORDLONG HighestRecoveryLsn;
    DWORD Flags;
};

typedef struct _TXFS_SAVEPOINT_INFORMATION _TXFS_SAVEPOINT_INFORMATION, *P_TXFS_SAVEPOINT_INFORMATION;

struct _TXFS_SAVEPOINT_INFORMATION {
    HANDLE KtmTransaction;
    DWORD ActionCode;
    DWORD SavepointId;
};

typedef struct _TXFS_START_RM_INFORMATION _TXFS_START_RM_INFORMATION, *P_TXFS_START_RM_INFORMATION;

struct _TXFS_START_RM_INFORMATION {
    DWORD Flags;
    DWORDLONG LogContainerSize;
    DWORD LogContainerCountMin;
    DWORD LogContainerCountMax;
    DWORD LogGrowthIncrement;
    DWORD LogAutoShrinkPercentage;
    DWORD TmLogPathOffset;
    WORD TmLogPathLength;
    WORD LoggingMode;
    WORD LogPathLength;
    WORD Reserved;
    WCHAR LogPath[1];
};

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO _TXFS_TRANSACTION_ACTIVE_INFO, *P_TXFS_TRANSACTION_ACTIVE_INFO;

struct _TXFS_TRANSACTION_ACTIVE_INFO {
    BOOLEAN TransactionsActiveAtSnapshot;
};

typedef struct _TXFS_WRITE_BACKUP_INFORMATION _TXFS_WRITE_BACKUP_INFORMATION, *P_TXFS_WRITE_BACKUP_INFORMATION;

struct _TXFS_WRITE_BACKUP_INFORMATION {
    BYTE Buffer[1];
};

typedef struct _VERIFY_INFORMATION _VERIFY_INFORMATION, *P_VERIFY_INFORMATION;

struct _VERIFY_INFORMATION {
    LARGE_INTEGER StartingOffset;
    DWORD Length;
};

typedef WORD BAD_TRACK_NUMBER;

typedef struct _BIN_RESULTS BIN_RESULTS;

typedef enum _BIN_TYPES BIN_TYPES;

typedef struct _BOOT_AREA_INFO BOOT_AREA_INFO;

typedef struct BULK_SECURITY_TEST_DATA BULK_SECURITY_TEST_DATA, *PBULK_SECURITY_TEST_DATA;

struct BULK_SECURITY_TEST_DATA {
    ACCESS_MASK DesiredAccess;
    DWORD SecurityIds[1];
};

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE CHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _CHANGER_ELEMENT_STATUS_EX CHANGER_ELEMENT_STATUS_EX;

typedef struct _CHANGER_EXCHANGE_MEDIUM CHANGER_EXCHANGE_MEDIUM;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS CHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct _CHANGER_MOVE_MEDIUM CHANGER_MOVE_MEDIUM;

typedef struct _CHANGER_PRODUCT_DATA CHANGER_PRODUCT_DATA;

typedef struct _CHANGER_READ_ELEMENT_STATUS CHANGER_READ_ELEMENT_STATUS;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION CHANGER_SEND_VOLUME_TAG_INFORMATION;

typedef struct _CHANGER_SET_ACCESS CHANGER_SET_ACCESS;

typedef struct _CHANGER_SET_POSITION CHANGER_SET_POSITION;

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT CLASS_MEDIA_CHANGE_CONTEXT;

typedef struct _CREATE_DISK CREATE_DISK;

typedef struct CREATE_USN_JOURNAL_DATA CREATE_USN_JOURNAL_DATA, *PCREATE_USN_JOURNAL_DATA;

struct CREATE_USN_JOURNAL_DATA {
    DWORDLONG MaximumSize;
    DWORDLONG AllocationDelta;
};

typedef struct _CSV_NAMESPACE_INFO CSV_NAMESPACE_INFO;

typedef struct _DECRYPTION_STATUS_BUFFER DECRYPTION_STATUS_BUFFER;

typedef struct DELETE_USN_JOURNAL_DATA DELETE_USN_JOURNAL_DATA, *PDELETE_USN_JOURNAL_DATA;

struct DELETE_USN_JOURNAL_DATA {
    DWORDLONG UsnJournalID;
    DWORD DeleteFlags;
};

typedef struct _DEVICE_DATA_SET_RANGE DEVICE_DATA_SET_RANGE;

typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS DEVICE_DSM_NOTIFICATION_PARAMETERS;

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES DEVICE_MANAGE_DATA_SET_ATTRIBUTES;

typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR DEVICE_SEEK_PENALTY_DESCRIPTOR;

typedef struct _DEVICE_TRIM_DESCRIPTOR DEVICE_TRIM_DESCRIPTOR;

typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR DEVICE_WRITE_AGGREGATION_DESCRIPTOR;

typedef struct _DISK_CACHE_INFORMATION DISK_CACHE_INFORMATION;

typedef struct _DISK_CONTROLLER_NUMBER DISK_CONTROLLER_NUMBER;

typedef struct _DISK_DETECTION_INFO DISK_DETECTION_INFO;

typedef struct _DISK_GEOMETRY_EX DISK_GEOMETRY_EX;

typedef struct _DISK_GROW_PARTITION DISK_GROW_PARTITION;

typedef struct _DISK_HISTOGRAM DISK_HISTOGRAM;

typedef struct _DISK_LOGGING DISK_LOGGING;

typedef struct _DISK_PARTITION_INFO DISK_PARTITION_INFO;

typedef struct _DISK_PERFORMANCE DISK_PERFORMANCE;

typedef struct _DISK_RECORD DISK_RECORD;

typedef struct _DRIVE_LAYOUT_INFORMATION DRIVE_LAYOUT_INFORMATION;

typedef struct _DRIVE_LAYOUT_INFORMATION_EX DRIVE_LAYOUT_INFORMATION_EX;

typedef struct _ENCRYPTED_DATA_INFO ENCRYPTED_DATA_INFO;

typedef struct _ENCRYPTION_BUFFER ENCRYPTION_BUFFER;

typedef struct _EXFAT_STATISTICS EXFAT_STATISTICS;

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO EXTENDED_ENCRYPTED_DATA_INFO;

typedef struct _FAT_STATISTICS FAT_STATISTICS;

typedef struct _FILE_ALLOCATED_RANGE_BUFFER FILE_ALLOCATED_RANGE_BUFFER;

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION FILE_FS_PERSISTENT_VOLUME_INFORMATION;

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER FILE_MAKE_COMPATIBLE_BUFFER;

typedef struct _FILE_OBJECTID_BUFFER FILE_OBJECTID_BUFFER;

typedef struct _FILE_PREFETCH FILE_PREFETCH;

typedef struct _FILE_PREFETCH_EX FILE_PREFETCH_EX;

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;

typedef struct _FILE_QUERY_SPARING_BUFFER FILE_QUERY_SPARING_BUFFER;

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER FILE_SET_DEFECT_MGMT_BUFFER;

typedef struct _FILE_SET_SPARSE_BUFFER FILE_SET_SPARSE_BUFFER;

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION FILE_SYSTEM_RECOGNITION_INFORMATION;

typedef struct _FILE_TYPE_NOTIFICATION_INPUT FILE_TYPE_NOTIFICATION_INPUT;

typedef struct _FILE_ZERO_DATA_INFORMATION FILE_ZERO_DATA_INFORMATION;

typedef struct _FILESYSTEM_STATISTICS FILESYSTEM_STATISTICS;

typedef struct FIND_BY_SID_DATA FIND_BY_SID_DATA, *PFIND_BY_SID_DATA;

struct FIND_BY_SID_DATA {
    DWORD Restart;
    SID Sid;
};

typedef struct FIND_BY_SID_OUTPUT FIND_BY_SID_OUTPUT, *PFIND_BY_SID_OUTPUT;

struct FIND_BY_SID_OUTPUT {
    DWORD NextEntryOffset;
    DWORD FileIndex;
    DWORD FileNameLength;
    WCHAR FileName[1];
};

typedef struct _FORMAT_EX_PARAMETERS FORMAT_EX_PARAMETERS;

typedef struct _FORMAT_PARAMETERS FORMAT_PARAMETERS;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER FSCTL_QUERY_FAT_BPB_BUFFER;

typedef struct _GET_CHANGER_PARAMETERS GET_CHANGER_PARAMETERS;

typedef struct _GET_LENGTH_INFORMATION GET_LENGTH_INFORMATION;

typedef struct _GET_MEDIA_TYPES GET_MEDIA_TYPES;

typedef struct _GETVERSIONINPARAMS GETVERSIONINPARAMS;

typedef struct _HISTOGRAM_BUCKET HISTOGRAM_BUCKET;

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY LOOKUP_STREAM_FROM_CLUSTER_ENTRY;

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT LOOKUP_STREAM_FROM_CLUSTER_INPUT;

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;

typedef struct _DRIVERSTATUS * LPDRIVERSTATUS;

typedef struct _GETVERSIONINPARAMS * LPGETVERSIONINPARAMS;

typedef struct _IDEREGS * LPIDEREGS;

typedef struct _SENDCMDINPARAMS * LPSENDCMDINPARAMS;

typedef struct _SENDCMDOUTPARAMS * LPSENDCMDOUTPARAMS;

typedef struct MARK_HANDLE_INFO MARK_HANDLE_INFO, *PMARK_HANDLE_INFO;

struct MARK_HANDLE_INFO {
    DWORD UsnSourceInfo;
    HANDLE VolumeHandle;
    DWORD HandleInfo;
};

typedef struct MFT_ENUM_DATA MFT_ENUM_DATA, *PMFT_ENUM_DATA;

struct MFT_ENUM_DATA {
    DWORDLONG StartFileReferenceNumber;
    USN LowUsn;
    USN HighUsn;
};

typedef struct MOVE_FILE_DATA MOVE_FILE_DATA, *PMOVE_FILE_DATA;

struct MOVE_FILE_DATA {
    HANDLE FileHandle;
    LARGE_INTEGER StartingVcn;
    LARGE_INTEGER StartingLcn;
    DWORD ClusterCount;
};

typedef struct MOVE_FILE_RECORD_DATA MOVE_FILE_RECORD_DATA, *PMOVE_FILE_RECORD_DATA;

struct MOVE_FILE_RECORD_DATA {
    HANDLE FileHandle;
    LARGE_INTEGER SourceFileRecord;
    LARGE_INTEGER TargetFileRecord;
};

typedef struct NTFS_EXTENDED_VOLUME_DATA NTFS_EXTENDED_VOLUME_DATA, *PNTFS_EXTENDED_VOLUME_DATA;

struct NTFS_EXTENDED_VOLUME_DATA {
    DWORD ByteCount;
    WORD MajorVersion;
    WORD MinorVersion;
};

typedef struct NTFS_FILE_RECORD_INPUT_BUFFER NTFS_FILE_RECORD_INPUT_BUFFER, *PNTFS_FILE_RECORD_INPUT_BUFFER;

struct NTFS_FILE_RECORD_INPUT_BUFFER {
    LARGE_INTEGER FileReferenceNumber;
};

typedef struct NTFS_FILE_RECORD_OUTPUT_BUFFER NTFS_FILE_RECORD_OUTPUT_BUFFER, *PNTFS_FILE_RECORD_OUTPUT_BUFFER;

struct NTFS_FILE_RECORD_OUTPUT_BUFFER {
    LARGE_INTEGER FileReferenceNumber;
    DWORD FileRecordLength;
    BYTE FileRecordBuffer[1];
};

typedef struct _NTFS_STATISTICS NTFS_STATISTICS;

typedef struct NTFS_VOLUME_DATA_BUFFER NTFS_VOLUME_DATA_BUFFER, *PNTFS_VOLUME_DATA_BUFFER;

struct NTFS_VOLUME_DATA_BUFFER {
    LARGE_INTEGER VolumeSerialNumber;
    LARGE_INTEGER NumberSectors;
    LARGE_INTEGER TotalClusters;
    LARGE_INTEGER FreeClusters;
    LARGE_INTEGER TotalReserved;
    DWORD BytesPerSector;
    DWORD BytesPerCluster;
    DWORD BytesPerFileRecordSegment;
    DWORD ClustersPerFileRecordSegment;
    LARGE_INTEGER MftValidDataLength;
    LARGE_INTEGER MftStartLcn;
    LARGE_INTEGER Mft2StartLcn;
    LARGE_INTEGER MftZoneStart;
    LARGE_INTEGER MftZoneEnd;
};

typedef struct _PATHNAME_BUFFER PATHNAME_BUFFER;

typedef WORD * PBAD_TRACK_NUMBER;

typedef struct _BIN_COUNT * PBIN_COUNT;

typedef struct _BIN_RANGE * PBIN_RANGE;

typedef struct _BIN_RESULTS * PBIN_RESULTS;

typedef struct _BOOT_AREA_INFO * PBOOT_AREA_INFO;

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE * PCHANGER_DEVICE_PROBLEM_TYPE;

typedef struct _CHANGER_ELEMENT * PCHANGER_ELEMENT;

typedef struct _CHANGER_ELEMENT_LIST * PCHANGER_ELEMENT_LIST;

typedef struct _CHANGER_ELEMENT_STATUS * PCHANGER_ELEMENT_STATUS;

typedef struct _CHANGER_ELEMENT_STATUS_EX * PCHANGER_ELEMENT_STATUS_EX;

typedef struct _CHANGER_EXCHANGE_MEDIUM * PCHANGER_EXCHANGE_MEDIUM;

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS * PCHANGER_INITIALIZE_ELEMENT_STATUS;

typedef struct _CHANGER_MOVE_MEDIUM * PCHANGER_MOVE_MEDIUM;

typedef struct _CHANGER_PRODUCT_DATA * PCHANGER_PRODUCT_DATA;

typedef struct _CHANGER_READ_ELEMENT_STATUS * PCHANGER_READ_ELEMENT_STATUS;

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION * PCHANGER_SEND_VOLUME_TAG_INFORMATION;

typedef struct _CHANGER_SET_ACCESS * PCHANGER_SET_ACCESS;

typedef struct _CHANGER_SET_POSITION * PCHANGER_SET_POSITION;

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT * PCLASS_MEDIA_CHANGE_CONTEXT;

typedef struct _CREATE_DISK * PCREATE_DISK;

typedef struct _CREATE_DISK_GPT * PCREATE_DISK_GPT;

typedef struct _CREATE_DISK_MBR * PCREATE_DISK_MBR;

typedef struct _CSV_NAMESPACE_INFO * PCSV_NAMESPACE_INFO;

typedef struct _DECRYPTION_STATUS_BUFFER * PDECRYPTION_STATUS_BUFFER;

typedef struct _DEVICE_DATA_SET_RANGE * PDEVICE_DATA_SET_RANGE;

typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS * PDEVICE_DSM_NOTIFICATION_PARAMETERS;

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES * PDEVICE_MANAGE_DATA_SET_ATTRIBUTES;

typedef struct _DEVICE_MEDIA_INFO * PDEVICE_MEDIA_INFO;

typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR * PDEVICE_SEEK_PENALTY_DESCRIPTOR;

typedef struct _DEVICE_TRIM_DESCRIPTOR * PDEVICE_TRIM_DESCRIPTOR;

typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR * PDEVICE_WRITE_AGGREGATION_DESCRIPTOR;

typedef struct _DISK_CACHE_INFORMATION * PDISK_CACHE_INFORMATION;

typedef struct _DISK_CONTROLLER_NUMBER * PDISK_CONTROLLER_NUMBER;

typedef struct _DISK_DETECTION_INFO * PDISK_DETECTION_INFO;

typedef struct _DISK_EX_INT13_INFO * PDISK_EX_INT13_INFO;

typedef struct _DISK_GEOMETRY * PDISK_GEOMETRY;

typedef struct _DISK_GEOMETRY_EX * PDISK_GEOMETRY_EX;

typedef struct _DISK_GROW_PARTITION * PDISK_GROW_PARTITION;

typedef struct _DISK_HISTOGRAM * PDISK_HISTOGRAM;

typedef struct _DISK_INT13_INFO * PDISK_INT13_INFO;

typedef struct _DISK_LOGGING * PDISK_LOGGING;

typedef struct _DISK_PARTITION_INFO * PDISK_PARTITION_INFO;

typedef struct _DISK_PERFORMANCE * PDISK_PERFORMANCE;

typedef struct _DISK_RECORD * PDISK_RECORD;

typedef struct _DRIVE_LAYOUT_INFORMATION * PDRIVE_LAYOUT_INFORMATION;

typedef struct _DRIVE_LAYOUT_INFORMATION_EX * PDRIVE_LAYOUT_INFORMATION_EX;

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT * PDRIVE_LAYOUT_INFORMATION_GPT;

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR * PDRIVE_LAYOUT_INFORMATION_MBR;

typedef struct _DRIVERSTATUS * PDRIVERSTATUS;

typedef enum _ELEMENT_TYPE * PELEMENT_TYPE;

typedef ENCRYPTED_DATA_INFO * PENCRYPTED_DATA_INFO;

typedef struct _ENCRYPTION_BUFFER * PENCRYPTION_BUFFER;

typedef struct _PERF_BIN PERF_BIN;

typedef struct _EXFAT_STATISTICS * PEXFAT_STATISTICS;

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO * PEXTENDED_ENCRYPTED_DATA_INFO;

typedef struct _FAT_STATISTICS * PFAT_STATISTICS;

typedef struct _FILE_ALLOCATED_RANGE_BUFFER * PFILE_ALLOCATED_RANGE_BUFFER;

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION * PFILE_FS_PERSISTENT_VOLUME_INFORMATION;

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER * PFILE_MAKE_COMPATIBLE_BUFFER;

typedef struct _FILE_OBJECTID_BUFFER * PFILE_OBJECTID_BUFFER;

typedef struct _FILE_PREFETCH * PFILE_PREFETCH;

typedef struct _FILE_PREFETCH_EX * PFILE_PREFETCH_EX;

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER * PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER;

typedef struct _FILE_QUERY_SPARING_BUFFER * PFILE_QUERY_SPARING_BUFFER;

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER * PFILE_SET_DEFECT_MGMT_BUFFER;

typedef struct _FILE_SET_SPARSE_BUFFER * PFILE_SET_SPARSE_BUFFER;

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION * PFILE_SYSTEM_RECOGNITION_INFORMATION;

typedef struct _FILE_TYPE_NOTIFICATION_INPUT * PFILE_TYPE_NOTIFICATION_INPUT;

typedef struct _FILE_ZERO_DATA_INFORMATION * PFILE_ZERO_DATA_INFORMATION;

typedef struct _FILESYSTEM_STATISTICS * PFILESYSTEM_STATISTICS;

typedef struct _FORMAT_EX_PARAMETERS * PFORMAT_EX_PARAMETERS;

typedef struct _FORMAT_PARAMETERS * PFORMAT_PARAMETERS;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER * PFSCTL_QUERY_FAT_BPB_BUFFER;

typedef struct _GET_CHANGER_PARAMETERS * PGET_CHANGER_PARAMETERS;

typedef struct _GET_LENGTH_INFORMATION * PGET_LENGTH_INFORMATION;

typedef struct _GET_MEDIA_TYPES * PGET_MEDIA_TYPES;

typedef struct _GETVERSIONINPARAMS * PGETVERSIONINPARAMS;

typedef struct _IDEREGS * PIDEREGS;

typedef struct _PLEX_READ_DATA_REQUEST PLEX_READ_DATA_REQUEST;

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY * PLOOKUP_STREAM_FROM_CLUSTER_ENTRY;

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT * PLOOKUP_STREAM_FROM_CLUSTER_INPUT;

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT * PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT;

typedef enum _MEDIA_TYPE * PMEDIA_TYPE;

typedef struct _NTFS_STATISTICS * PNTFS_STATISTICS;

typedef struct _PARTITION_INFORMATION * PPARTITION_INFORMATION;

typedef struct _PARTITION_INFORMATION_EX * PPARTITION_INFORMATION_EX;

typedef struct _PARTITION_INFORMATION_GPT * PPARTITION_INFORMATION_GPT;

typedef struct _PARTITION_INFORMATION_MBR * PPARTITION_INFORMATION_MBR;

typedef struct _PATHNAME_BUFFER * PPATHNAME_BUFFER;

typedef struct _PERF_BIN * PPERF_BIN;

typedef struct _PLEX_READ_DATA_REQUEST * PPLEX_READ_DATA_REQUEST;

typedef struct _PREVENT_MEDIA_REMOVAL * PPREVENT_MEDIA_REMOVAL;

typedef struct _READ_ELEMENT_ADDRESS_INFO * PREAD_ELEMENT_ADDRESS_INFO;

typedef struct READ_USN_JOURNAL_DATA READ_USN_JOURNAL_DATA, *PREAD_USN_JOURNAL_DATA;

struct READ_USN_JOURNAL_DATA {
    USN StartUsn;
    DWORD ReasonMask;
    DWORD ReturnOnlyOnClose;
    DWORDLONG Timeout;
    DWORDLONG BytesToWaitFor;
    DWORDLONG UsnJournalID;
};

typedef struct _REASSIGN_BLOCKS * PREASSIGN_BLOCKS;

typedef struct _REASSIGN_BLOCKS_EX * PREASSIGN_BLOCKS_EX;

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER * PREQUEST_OPLOCK_INPUT_BUFFER;

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER * PREQUEST_OPLOCK_OUTPUT_BUFFER;

typedef struct _REQUEST_RAW_ENCRYPTED_DATA * PREQUEST_RAW_ENCRYPTED_DATA;

typedef struct _RETRIEVAL_POINTER_BASE * PRETRIEVAL_POINTER_BASE;

typedef struct RETRIEVAL_POINTERS_BUFFER RETRIEVAL_POINTERS_BUFFER, *PRETRIEVAL_POINTERS_BUFFER;

struct RETRIEVAL_POINTERS_BUFFER {
    DWORD ExtentCount;
    LARGE_INTEGER StartingVcn;
    struct _struct_1826 Extents[1];
};

typedef struct _PREVENT_MEDIA_REMOVAL PREVENT_MEDIA_REMOVAL;

typedef struct _SD_CHANGE_MACHINE_SID_INPUT * PSD_CHANGE_MACHINE_SID_INPUT;

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT * PSD_CHANGE_MACHINE_SID_OUTPUT;

typedef struct _SD_GLOBAL_CHANGE_INPUT * PSD_GLOBAL_CHANGE_INPUT;

typedef struct _SD_GLOBAL_CHANGE_OUTPUT * PSD_GLOBAL_CHANGE_OUTPUT;

typedef struct _SENDCMDINPARAMS * PSENDCMDINPARAMS;

typedef struct _SENDCMDOUTPARAMS * PSENDCMDOUTPARAMS;

typedef struct _SET_PARTITION_INFORMATION * PSET_PARTITION_INFORMATION;

typedef struct _SET_PARTITION_INFORMATION_EX * PSET_PARTITION_INFORMATION_EX;

typedef struct _SHRINK_VOLUME_INFORMATION * PSHRINK_VOLUME_INFORMATION;

typedef enum _SHRINK_VOLUME_REQUEST_TYPES * PSHRINK_VOLUME_REQUEST_TYPES;

typedef struct _SI_COPYFILE * PSI_COPYFILE;

typedef struct STARTING_LCN_INPUT_BUFFER STARTING_LCN_INPUT_BUFFER, *PSTARTING_LCN_INPUT_BUFFER;

struct STARTING_LCN_INPUT_BUFFER {
    LARGE_INTEGER StartingLcn;
};

typedef struct STARTING_VCN_INPUT_BUFFER STARTING_VCN_INPUT_BUFFER, *PSTARTING_VCN_INPUT_BUFFER;

struct STARTING_VCN_INPUT_BUFFER {
    LARGE_INTEGER StartingVcn;
};

typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR * PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;

typedef struct _STORAGE_ADAPTER_DESCRIPTOR * PSTORAGE_ADAPTER_DESCRIPTOR;

typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT * PSTORAGE_ALLOCATE_BC_STREAM_INPUT;

typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT * PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT;

typedef enum _STORAGE_ASSOCIATION_TYPE * PSTORAGE_ASSOCIATION_TYPE;

typedef struct STORAGE_BREAK_RESERVATION_REQUEST STORAGE_BREAK_RESERVATION_REQUEST, *PSTORAGE_BREAK_RESERVATION_REQUEST;

struct STORAGE_BREAK_RESERVATION_REQUEST {
    DWORD Length;
    BYTE _unused;
    BYTE PathId;
    BYTE TargetId;
    BYTE Lun;
};

typedef struct _STORAGE_BUS_RESET_REQUEST * PSTORAGE_BUS_RESET_REQUEST;

typedef enum _STORAGE_BUS_TYPE * PSTORAGE_BUS_TYPE;

typedef struct _STORAGE_DESCRIPTOR_HEADER * PSTORAGE_DESCRIPTOR_HEADER;

typedef struct _STORAGE_DEVICE_DESCRIPTOR * PSTORAGE_DEVICE_DESCRIPTOR;

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR * PSTORAGE_DEVICE_ID_DESCRIPTOR;

typedef struct _STORAGE_DEVICE_NUMBER * PSTORAGE_DEVICE_NUMBER;

typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT * PSTORAGE_GET_BC_PROPERTIES_OUTPUT;

typedef struct _STORAGE_HOTPLUG_INFO * PSTORAGE_HOTPLUG_INFO;

typedef enum _STORAGE_ID_NAA_FORMAT * PSTORAGE_ID_NAA_FORMAT;

typedef struct _STORAGE_IDENTIFIER * PSTORAGE_IDENTIFIER;

typedef enum _STORAGE_IDENTIFIER_CODE_SET * PSTORAGE_IDENTIFIER_CODE_SET;

typedef enum _STORAGE_IDENTIFIER_TYPE * PSTORAGE_IDENTIFIER_TYPE;

typedef enum _STORAGE_MEDIA_TYPE * PSTORAGE_MEDIA_TYPE;

typedef struct _STORAGE_MINIPORT_DESCRIPTOR * PSTORAGE_MINIPORT_DESCRIPTOR;

typedef enum _STORAGE_PORT_CODE_SET * PSTORAGE_PORT_CODE_SET;

typedef struct _STORAGE_PREDICT_FAILURE * PSTORAGE_PREDICT_FAILURE;

typedef struct _STORAGE_PRIORITY_HINT_SUPPORT * PSTORAGE_PRIORITY_HINT_SUPPORT;

typedef enum _STORAGE_PROPERTY_ID * PSTORAGE_PROPERTY_ID;

typedef struct _STORAGE_PROPERTY_QUERY * PSTORAGE_PROPERTY_QUERY;

typedef enum _STORAGE_QUERY_TYPE * PSTORAGE_QUERY_TYPE;

typedef struct _STORAGE_READ_CAPACITY * PSTORAGE_READ_CAPACITY;

typedef struct _STORAGE_WRITE_CACHE_PROPERTY * PSTORAGE_WRITE_CACHE_PROPERTY;

typedef struct _TAPE_GET_STATISTICS * PTAPE_GET_STATISTICS;

typedef struct _TAPE_STATISTICS * PTAPE_STATISTICS;

typedef struct _TXFS_CREATE_MINIVERSION_INFO * PTXFS_CREATE_MINIVERSION_INFO;

typedef struct _TXFS_GET_METADATA_INFO_OUT * PTXFS_GET_METADATA_INFO_OUT;

typedef struct _TXFS_GET_TRANSACTED_VERSION * PTXFS_GET_TRANSACTED_VERSION;

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES * PTXFS_LIST_TRANSACTION_LOCKED_FILES;

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY * PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;

typedef struct _TXFS_LIST_TRANSACTIONS * PTXFS_LIST_TRANSACTIONS;

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY * PTXFS_LIST_TRANSACTIONS_ENTRY;

typedef struct _TXFS_MODIFY_RM * PTXFS_MODIFY_RM;

typedef struct _TXFS_QUERY_RM_INFORMATION * PTXFS_QUERY_RM_INFORMATION;

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT * PTXFS_READ_BACKUP_INFORMATION_OUT;

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION * PTXFS_ROLLFORWARD_REDO_INFORMATION;

typedef struct _TXFS_SAVEPOINT_INFORMATION * PTXFS_SAVEPOINT_INFORMATION;

typedef struct _TXFS_START_RM_INFORMATION * PTXFS_START_RM_INFORMATION;

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO * PTXFS_TRANSACTION_ACTIVE_INFO;

typedef struct _TXFS_WRITE_BACKUP_INFORMATION * PTXFS_WRITE_BACKUP_INFORMATION;

typedef struct USN_JOURNAL_DATA USN_JOURNAL_DATA, *PUSN_JOURNAL_DATA;

struct USN_JOURNAL_DATA {
    DWORDLONG UsnJournalID;
    USN FirstUsn;
    USN NextUsn;
    USN LowestValidUsn;
    USN MaxUsn;
    DWORDLONG MaximumSize;
    DWORDLONG AllocationDelta;
};

typedef struct USN_RECORD USN_RECORD, *PUSN_RECORD;

struct USN_RECORD {
    DWORD RecordLength;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORDLONG FileReferenceNumber;
    DWORDLONG ParentFileReferenceNumber;
    USN Usn;
    LARGE_INTEGER TimeStamp;
    DWORD Reason;
    DWORD SourceInfo;
    DWORD SecurityId;
    DWORD FileAttributes;
    WORD FileNameLength;
    WORD FileNameOffset;
    WCHAR FileName[1];
};

typedef struct _VERIFY_INFORMATION * PVERIFY_INFORMATION;

typedef struct VOLUME_BITMAP_BUFFER VOLUME_BITMAP_BUFFER, *PVOLUME_BITMAP_BUFFER;

struct VOLUME_BITMAP_BUFFER {
    LARGE_INTEGER StartingLcn;
    LARGE_INTEGER BitmapSize;
    BYTE Buffer[1];
};

typedef struct _READ_ELEMENT_ADDRESS_INFO READ_ELEMENT_ADDRESS_INFO;

typedef struct _REASSIGN_BLOCKS REASSIGN_BLOCKS;

typedef struct _REASSIGN_BLOCKS_EX REASSIGN_BLOCKS_EX;

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER REQUEST_OPLOCK_INPUT_BUFFER;

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER REQUEST_OPLOCK_OUTPUT_BUFFER;

typedef struct _REQUEST_RAW_ENCRYPTED_DATA REQUEST_RAW_ENCRYPTED_DATA;

typedef struct _RETRIEVAL_POINTER_BASE RETRIEVAL_POINTER_BASE;

typedef struct _SD_GLOBAL_CHANGE_INPUT SD_GLOBAL_CHANGE_INPUT;

typedef struct _SD_GLOBAL_CHANGE_OUTPUT SD_GLOBAL_CHANGE_OUTPUT;

typedef struct _SENDCMDINPARAMS SENDCMDINPARAMS;

typedef struct _SENDCMDOUTPARAMS SENDCMDOUTPARAMS;

typedef struct _SET_PARTITION_INFORMATION_EX SET_PARTITION_INFORMATION_EX;

typedef struct _SHRINK_VOLUME_INFORMATION SHRINK_VOLUME_INFORMATION;

typedef struct _SI_COPYFILE SI_COPYFILE;

typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;

typedef struct _STORAGE_ADAPTER_DESCRIPTOR STORAGE_ADAPTER_DESCRIPTOR;

typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT STORAGE_ALLOCATE_BC_STREAM_INPUT;

typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT STORAGE_ALLOCATE_BC_STREAM_OUTPUT;

typedef struct _STORAGE_BUS_RESET_REQUEST STORAGE_BUS_RESET_REQUEST;

typedef struct _STORAGE_DESCRIPTOR_HEADER STORAGE_DESCRIPTOR_HEADER;

typedef struct _STORAGE_DEVICE_DESCRIPTOR STORAGE_DEVICE_DESCRIPTOR;

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR STORAGE_DEVICE_ID_DESCRIPTOR;

typedef struct _STORAGE_DEVICE_NUMBER STORAGE_DEVICE_NUMBER;

typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT STORAGE_GET_BC_PROPERTIES_OUTPUT;

typedef struct _STORAGE_HOTPLUG_INFO STORAGE_HOTPLUG_INFO;

typedef enum _STORAGE_ID_NAA_FORMAT STORAGE_ID_NAA_FORMAT;

typedef struct _STORAGE_IDENTIFIER STORAGE_IDENTIFIER;

typedef struct _STORAGE_MINIPORT_DESCRIPTOR STORAGE_MINIPORT_DESCRIPTOR;

typedef struct _STORAGE_PREDICT_FAILURE STORAGE_PREDICT_FAILURE;

typedef struct _STORAGE_PRIORITY_HINT_SUPPORT STORAGE_PRIORITY_HINT_SUPPORT;

typedef struct _STORAGE_PROPERTY_QUERY STORAGE_PROPERTY_QUERY;

typedef struct _STORAGE_READ_CAPACITY STORAGE_READ_CAPACITY;

typedef struct _STORAGE_WRITE_CACHE_PROPERTY STORAGE_WRITE_CACHE_PROPERTY;

typedef struct _TAPE_GET_STATISTICS TAPE_GET_STATISTICS;

typedef struct _TAPE_STATISTICS TAPE_STATISTICS;

typedef struct _TXFS_CREATE_MINIVERSION_INFO TXFS_CREATE_MINIVERSION_INFO;

typedef struct _TXFS_GET_METADATA_INFO_OUT TXFS_GET_METADATA_INFO_OUT;

typedef struct _TXFS_GET_TRANSACTED_VERSION TXFS_GET_TRANSACTED_VERSION;

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES TXFS_LIST_TRANSACTION_LOCKED_FILES;

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;

typedef struct _TXFS_LIST_TRANSACTIONS TXFS_LIST_TRANSACTIONS;

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY TXFS_LIST_TRANSACTIONS_ENTRY;

typedef struct _TXFS_MODIFY_RM TXFS_MODIFY_RM;

typedef struct _TXFS_QUERY_RM_INFORMATION TXFS_QUERY_RM_INFORMATION;

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT TXFS_READ_BACKUP_INFORMATION_OUT;

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION TXFS_ROLLFORWARD_REDO_INFORMATION;

typedef struct _TXFS_SAVEPOINT_INFORMATION TXFS_SAVEPOINT_INFORMATION;

typedef struct _TXFS_START_RM_INFORMATION TXFS_START_RM_INFORMATION;

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO TXFS_TRANSACTION_ACTIVE_INFO;

typedef struct _TXFS_WRITE_BACKUP_INFORMATION TXFS_WRITE_BACKUP_INFORMATION;

typedef struct _VERIFY_INFORMATION VERIFY_INFORMATION;

#define CONNDLG_CONN_POINT 2

#define CONNDLG_HIDE_BOX 8

#define CONNDLG_NOT_PERSIST 32

#define CONNDLG_PERSIST 16

#define CONNDLG_RO_PATH 1

#define CONNDLG_USE_MRU 4

#define CONNECT_CMD_SAVECRED 4096

#define CONNECT_COMMANDLINE 2048

#define CONNECT_CRED_RESET 8192

#define CONNECT_CURRENT_MEDIA 512

#define CONNECT_DEFERRED 1024

#define CONNECT_INTERACTIVE 8

#define CONNECT_LOCALDRIVE 256

#define CONNECT_NEED_DRIVE 32

#define CONNECT_PROMPT 16

#define CONNECT_REDIRECT 128

#define CONNECT_REFCOUNT 64

#define CONNECT_RESERVED 4278190080

#define CONNECT_TEMPORARY 4

#define CONNECT_UPDATE_PROFILE 1

#define CONNECT_UPDATE_RECENT 2

#define DISC_NO_FORCE 64

#define DISC_UPDATE_PROFILE 1

#define NETINFO_DISKRED 4

#define NETINFO_DLL16 1

#define NETINFO_PRINTERRED 8

#define NETPROPERTY_PERSISTENT 1

#define REMOTE_NAME_INFO_LEVEL 2

#define RESOURCE_CONNECTED 1

#define RESOURCE_CONTEXT 5

#define RESOURCE_GLOBALNET 2

#define RESOURCE_RECENT 4

#define RESOURCE_REMEMBERED 3

#define RESOURCEDISPLAYTYPE_DIRECTORY 9

#define RESOURCEDISPLAYTYPE_DOMAIN 1

#define RESOURCEDISPLAYTYPE_FILE 4

#define RESOURCEDISPLAYTYPE_GENERIC 0

#define RESOURCEDISPLAYTYPE_GROUP 5

#define RESOURCEDISPLAYTYPE_NDSCONTAINER 11

#define RESOURCEDISPLAYTYPE_NETWORK 6

#define RESOURCEDISPLAYTYPE_ROOT 7

#define RESOURCEDISPLAYTYPE_SERVER 2

#define RESOURCEDISPLAYTYPE_SHARE 3

#define RESOURCEDISPLAYTYPE_SHAREADMIN 8

#define RESOURCEDISPLAYTYPE_TREE 10

#define RESOURCETYPE_ANY 0

#define RESOURCETYPE_DISK 1

#define RESOURCETYPE_PRINT 2

#define RESOURCETYPE_RESERVED 8

#define RESOURCETYPE_UNKNOWN 4294967295

#define RESOURCEUSAGE_ALL 19

#define RESOURCEUSAGE_ATTACHED 16

#define RESOURCEUSAGE_CONNECTABLE 1

#define RESOURCEUSAGE_CONTAINER 2

#define RESOURCEUSAGE_NOLOCALDEVICE 4

#define RESOURCEUSAGE_RESERVED 2147483648

#define RESOURCEUSAGE_SIBLING 8

#define UNIVERSAL_NAME_INFO_LEVEL 1

#define WN_ACCESS_DENIED 5

#define WN_ALREADY_CONNECTED 85

#define WN_BAD_DEV_TYPE 66

#define WN_BAD_HANDLE 6

#define WN_BAD_LEVEL 124

#define WN_BAD_LOCALNAME 1200

#define WN_BAD_NETNAME 67

#define WN_BAD_PASSWORD 86

#define WN_BAD_POINTER 487

#define WN_BAD_PROFILE 1206

#define WN_BAD_PROVIDER 1204

#define WN_BAD_USER 2202

#define WN_BAD_VALUE 87

#define WN_CANCEL 1223

#define WN_CANNOT_OPEN_PROFILE 1205

#define WN_CONNECTED_OTHER_PASSWORD 2108

#define WN_CONNECTED_OTHER_PASSWORD_DEFAULT 2109

#define WN_CONNECTION_CLOSED 1201

#define WN_DEVICE_ALREADY_REMEMBERED 1202

#define WN_DEVICE_ERROR 31

#define WN_DEVICE_IN_USE 2404

#define WN_EXTENDED_ERROR 1208

#define WN_FUNCTION_BUSY 170

#define WN_MORE_DATA 234

#define WN_NET_ERROR 59

#define WN_NO_ERROR 0

#define WN_NO_MORE_DEVICES 1248

#define WN_NO_MORE_ENTRIES 259

#define WN_NO_NET_OR_BAD_PATH 1203

#define WN_NO_NETWORK 1222

#define WN_NOT_AUTHENTICATED 1244

#define WN_NOT_CONNECTED 2250

#define WN_NOT_CONTAINER 1207

#define WN_NOT_INITIALIZING 1247

#define WN_NOT_LOGGED_ON 1245

#define WN_NOT_SUPPORTED 50

#define WN_NOT_VALIDATED 1311

#define WN_OPEN_FILES 2401

#define WN_OUT_OF_MEMORY 8

#define WN_RETRY 1237

#define WN_SUCCESS 0

#define WN_WINDOWS_ERROR 59

#define WNCON_DYNAMIC 8

#define WNCON_FORNETCARD 1

#define WNCON_NOTROUTED 2

#define WNCON_SLOWLINK 4

#define WNFMT_ABBREVIATED 2

#define WNFMT_CONNECTION 32

#define WNFMT_INENUM 16

#define WNFMT_MULTILINE 1

typedef struct _CONNECTDLGSTRUCTA _CONNECTDLGSTRUCTA, *P_CONNECTDLGSTRUCTA;

typedef struct _NETRESOURCEA * LPNETRESOURCEA;

struct _CONNECTDLGSTRUCTA {
    DWORD cbStructure;
    HWND hwndOwner;
    LPNETRESOURCEA lpConnRes;
    DWORD dwFlags;
    DWORD dwDevNum;
};

typedef struct _CONNECTDLGSTRUCTW _CONNECTDLGSTRUCTW, *P_CONNECTDLGSTRUCTW;

struct _CONNECTDLGSTRUCTW {
    DWORD cbStructure;
    HWND hwndOwner;
    LPNETRESOURCEW lpConnRes;
    DWORD dwFlags;
    DWORD dwDevNum;
};

typedef struct _DISCDLGSTRUCTA _DISCDLGSTRUCTA, *P_DISCDLGSTRUCTA;

struct _DISCDLGSTRUCTA {
    DWORD cbStructure;
    HWND hwndOwner;
    LPSTR lpLocalName;
    LPSTR lpRemoteName;
    DWORD dwFlags;
};

typedef struct _DISCDLGSTRUCTW _DISCDLGSTRUCTW, *P_DISCDLGSTRUCTW;

struct _DISCDLGSTRUCTW {
    DWORD cbStructure;
    HWND hwndOwner;
    LPWSTR lpLocalName;
    LPWSTR lpRemoteName;
    DWORD dwFlags;
};

typedef struct _NETINFOSTRUCT _NETINFOSTRUCT, *P_NETINFOSTRUCT;

struct _NETINFOSTRUCT {
    DWORD cbStructure;
    DWORD dwProviderVersion;
    DWORD dwStatus;
    DWORD dwCharacteristics;
    ULONG_PTR dwHandle;
    WORD wNetType;
    DWORD dwPrinters;
    DWORD dwDrives;
};

typedef struct _REMOTE_NAME_INFOA _REMOTE_NAME_INFOA, *P_REMOTE_NAME_INFOA;

struct _REMOTE_NAME_INFOA {
    LPSTR lpUniversalName;
    LPSTR lpConnectionName;
    LPSTR lpRemainingPath;
};

typedef struct _REMOTE_NAME_INFOW _REMOTE_NAME_INFOW, *P_REMOTE_NAME_INFOW;

struct _REMOTE_NAME_INFOW {
    LPWSTR lpUniversalName;
    LPWSTR lpConnectionName;
    LPWSTR lpRemainingPath;
};

typedef struct _UNIVERSAL_NAME_INFOA _UNIVERSAL_NAME_INFOA, *P_UNIVERSAL_NAME_INFOA;

struct _UNIVERSAL_NAME_INFOA {
    LPSTR lpUniversalName;
};

typedef struct _UNIVERSAL_NAME_INFOW _UNIVERSAL_NAME_INFOW, *P_UNIVERSAL_NAME_INFOW;

struct _UNIVERSAL_NAME_INFOW {
    LPWSTR lpUniversalName;
};

typedef struct _CONNECTDLGSTRUCTA CONNECTDLGSTRUCTA;

typedef CONNECTDLGSTRUCTA CONNECTDLGSTRUCT;

typedef struct _CONNECTDLGSTRUCTW CONNECTDLGSTRUCTW;

typedef struct _DISCDLGSTRUCTA DISCDLGSTRUCTA;

typedef DISCDLGSTRUCTA DISCDLGSTRUCT;

typedef struct _DISCDLGSTRUCTW DISCDLGSTRUCTW;

typedef struct _CONNECTDLGSTRUCTA * LPCONNECTDLGSTRUCTA;

typedef LPCONNECTDLGSTRUCTA LPCONNECTDLGSTRUCT;

typedef struct _CONNECTDLGSTRUCTW * LPCONNECTDLGSTRUCTW;

typedef struct _DISCDLGSTRUCTA * LPDISCDLGSTRUCTA;

typedef LPDISCDLGSTRUCTA LPDISCDLGSTRUCT;

typedef struct _DISCDLGSTRUCTW * LPDISCDLGSTRUCTW;

typedef struct _NETINFOSTRUCT * LPNETINFOSTRUCT;

typedef LPNETRESOURCEA LPNETRESOURCE;

typedef struct _REMOTE_NAME_INFOA * LPREMOTE_NAME_INFOA;

typedef LPREMOTE_NAME_INFOA LPREMOTE_NAME_INFO;

typedef struct _REMOTE_NAME_INFOW * LPREMOTE_NAME_INFOW;

typedef struct _UNIVERSAL_NAME_INFOA * LPUNIVERSAL_NAME_INFOA;

typedef LPUNIVERSAL_NAME_INFOA LPUNIVERSAL_NAME_INFO;

typedef struct _UNIVERSAL_NAME_INFOW * LPUNIVERSAL_NAME_INFOW;

typedef struct _NETCONNECTINFOSTRUCT NETCONNECTINFOSTRUCT;

typedef struct _NETINFOSTRUCT NETINFOSTRUCT;

typedef struct _NETRESOURCEW NETRESOURCEW;

typedef struct _REMOTE_NAME_INFOA REMOTE_NAME_INFOA;

typedef REMOTE_NAME_INFOA REMOTE_NAME_INFO;

typedef struct _REMOTE_NAME_INFOW REMOTE_NAME_INFOW;

typedef struct _UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFOA;

typedef UNIVERSAL_NAME_INFOA UNIVERSAL_NAME_INFO;

typedef struct _UNIVERSAL_NAME_INFOW UNIVERSAL_NAME_INFOW;

#define C1_ALPHA 256

#define C1_BLANK 64

#define C1_CNTRL 32

#define C1_DEFINED 512

#define C1_DIGIT 4

#define C1_LOWER 2

#define C1_PUNCT 16

#define C1_SPACE 8

#define C1_UPPER 1

#define C1_XDIGIT 128

#define C2_ARABICNUMBER 6

#define C2_BLOCKSEPARATOR 8

#define C2_COMMONSEPARATOR 7

#define C2_EUROPENUMBER 3

#define C2_EUROPESEPARATOR 4

#define C2_EUROPETERMINATOR 5

#define C2_LEFTTORIGHT 1

#define C2_NOTAPPLICABLE 0

#define C2_OTHERNEUTRAL 11

#define C2_RIGHTTOLEFT 2

#define C2_SEGMENTSEPARATOR 9

#define C2_WHITESPACE 10

#define C3_ALPHA 32768

#define C3_DIACRITIC 2

#define C3_FULLWIDTH 128

#define C3_HALFWIDTH 64

#define C3_HIGHSURROGATE 2048

#define C3_HIRAGANA 32

#define C3_IDEOGRAPH 256

#define C3_KASHIDA 512

#define C3_KATAKANA 16

#define C3_LEXICAL 1024

#define C3_LOWSURROGATE 4096

#define C3_NONSPACING 1

#define C3_NOTAPPLICABLE 0

#define C3_SYMBOL 8

#define C3_VOWELMARK 4

#define CAL_GREGORIAN 1

#define CAL_GREGORIAN_ARABIC 10

#define CAL_GREGORIAN_ME_FRENCH 9

#define CAL_GREGORIAN_US 2

#define CAL_GREGORIAN_XLIT_ENGLISH 11

#define CAL_GREGORIAN_XLIT_FRENCH 12

#define CAL_HEBREW 8

#define CAL_HIJRI 6

#define CAL_ICALINTVALUE 1

#define CAL_ITWODIGITYEARMAX 48

#define CAL_IYEAROFFSETRANGE 3

#define CAL_JAPAN 3

#define CAL_KOREA 5

#define CAL_NOUSEROVERRIDE 2147483648

#define CAL_RETURN_GENITIVE_NAMES 268435456

#define CAL_RETURN_NUMBER 536870912

#define CAL_SABBREVDAYNAME1 14

#define CAL_SABBREVDAYNAME2 15

#define CAL_SABBREVDAYNAME3 16

#define CAL_SABBREVDAYNAME4 17

#define CAL_SABBREVDAYNAME5 18

#define CAL_SABBREVDAYNAME6 19

#define CAL_SABBREVDAYNAME7 20

#define CAL_SABBREVERASTRING 57

#define CAL_SABBREVMONTHNAME1 34

#define CAL_SABBREVMONTHNAME10 43

#define CAL_SABBREVMONTHNAME11 44

#define CAL_SABBREVMONTHNAME12 45

#define CAL_SABBREVMONTHNAME13 46

#define CAL_SABBREVMONTHNAME2 35

#define CAL_SABBREVMONTHNAME3 36

#define CAL_SABBREVMONTHNAME4 37

#define CAL_SABBREVMONTHNAME5 38

#define CAL_SABBREVMONTHNAME6 39

#define CAL_SABBREVMONTHNAME7 40

#define CAL_SABBREVMONTHNAME8 41

#define CAL_SABBREVMONTHNAME9 42

#define CAL_SCALNAME 2

#define CAL_SDAYNAME1 7

#define CAL_SDAYNAME2 8

#define CAL_SDAYNAME3 9

#define CAL_SDAYNAME4 10

#define CAL_SDAYNAME5 11

#define CAL_SDAYNAME6 12

#define CAL_SDAYNAME7 13

#define CAL_SERASTRING 4

#define CAL_SLONGDATE 6

#define CAL_SMONTHDAY 56

#define CAL_SMONTHNAME1 21

#define CAL_SMONTHNAME10 30

#define CAL_SMONTHNAME11 31

#define CAL_SMONTHNAME12 32

#define CAL_SMONTHNAME13 33

#define CAL_SMONTHNAME2 22

#define CAL_SMONTHNAME3 23

#define CAL_SMONTHNAME4 24

#define CAL_SMONTHNAME5 25

#define CAL_SMONTHNAME6 26

#define CAL_SMONTHNAME7 27

#define CAL_SMONTHNAME8 28

#define CAL_SMONTHNAME9 29

#define CAL_SSHORTDATE 5

#define CAL_SSHORTESTDAYNAME1 49

#define CAL_SSHORTESTDAYNAME2 50

#define CAL_SSHORTESTDAYNAME3 51

#define CAL_SSHORTESTDAYNAME4 52

#define CAL_SSHORTESTDAYNAME5 53

#define CAL_SSHORTESTDAYNAME6 54

#define CAL_SSHORTESTDAYNAME7 55

#define CAL_SYEARMONTH 47

#define CAL_TAIWAN 4

#define CAL_THAI 7

#define CAL_UMALQURA 23

#define CAL_USE_CP_ACP 1073741824

#define CP_ACP 0

#define CP_INSTALLED 1

#define CP_MACCP 2

#define CP_OEMCP 1

#define CP_SUPPORTED 2

#define CP_SYMBOL 42

#define CP_THREAD_ACP 3

#define CP_UTF7 65000

#define CP_UTF8 65001

#define CSTR_EQUAL 2

#define CSTR_GREATER_THAN 3

#define CSTR_LESS_THAN 1

#define CT_CTYPE1 1

#define CT_CTYPE2 2

#define CT_CTYPE3 4

#define CTRY_ALBANIA 355

#define CTRY_ALGERIA 213

#define CTRY_ARGENTINA 54

#define CTRY_ARMENIA 374

#define CTRY_AUSTRALIA 61

#define CTRY_AUSTRIA 43

#define CTRY_AZERBAIJAN 994

#define CTRY_BAHRAIN 973

#define CTRY_BELARUS 375

#define CTRY_BELGIUM 32

#define CTRY_BELIZE 501

#define CTRY_BOLIVIA 591

#define CTRY_BRAZIL 55

#define CTRY_BRUNEI_DARUSSALAM 673

#define CTRY_BULGARIA 359

#define CTRY_CANADA 2

#define CTRY_CARIBBEAN 1

#define CTRY_CHILE 56

#define CTRY_COLOMBIA 57

#define CTRY_COSTA_RICA 506

#define CTRY_CROATIA 385

#define CTRY_CZECH 420

#define CTRY_DEFAULT 0

#define CTRY_DENMARK 45

#define CTRY_DOMINICAN_REPUBLIC 1

#define CTRY_ECUADOR 593

#define CTRY_EGYPT 20

#define CTRY_EL_SALVADOR 503

#define CTRY_ESTONIA 372

#define CTRY_FAEROE_ISLANDS 298

#define CTRY_FINLAND 358

#define CTRY_FRANCE 33

#define CTRY_GEORGIA 995

#define CTRY_GERMANY 49

#define CTRY_GREECE 30

#define CTRY_GUATEMALA 502

#define CTRY_HONDURAS 504

#define CTRY_HONG_KONG 852

#define CTRY_HUNGARY 36

#define CTRY_ICELAND 354

#define CTRY_INDIA 91

#define CTRY_INDONESIA 62

#define CTRY_IRAN 981

#define CTRY_IRAQ 964

#define CTRY_IRELAND 353

#define CTRY_ISRAEL 972

#define CTRY_ITALY 39

#define CTRY_JAMAICA 1

#define CTRY_JAPAN 81

#define CTRY_JORDAN 962

#define CTRY_KAZAKSTAN 7

#define CTRY_KENYA 254

#define CTRY_KUWAIT 965

#define CTRY_KYRGYZSTAN 996

#define CTRY_LATVIA 371

#define CTRY_LEBANON 961

#define CTRY_LIBYA 218

#define CTRY_LIECHTENSTEIN 41

#define CTRY_LITHUANIA 370

#define CTRY_LUXEMBOURG 352

#define CTRY_MACAU 853

#define CTRY_MACEDONIA 389

#define CTRY_MALAYSIA 60

#define CTRY_MALDIVES 960

#define CTRY_MEXICO 52

#define CTRY_MONACO 33

#define CTRY_MONGOLIA 976

#define CTRY_MOROCCO 212

#define CTRY_NETHERLANDS 31

#define CTRY_NEW_ZEALAND 64

#define CTRY_NICARAGUA 505

#define CTRY_NORWAY 47

#define CTRY_OMAN 968

#define CTRY_PAKISTAN 92

#define CTRY_PANAMA 507

#define CTRY_PARAGUAY 595

#define CTRY_PERU 51

#define CTRY_PHILIPPINES 63

#define CTRY_POLAND 48

#define CTRY_PORTUGAL 351

#define CTRY_PRCHINA 86

#define CTRY_PUERTO_RICO 1

#define CTRY_QATAR 974

#define CTRY_ROMANIA 40

#define CTRY_RUSSIA 7

#define CTRY_SAUDI_ARABIA 966

#define CTRY_SERBIA 381

#define CTRY_SINGAPORE 65

#define CTRY_SLOVAK 421

#define CTRY_SLOVENIA 386

#define CTRY_SOUTH_AFRICA 27

#define CTRY_SOUTH_KOREA 82

#define CTRY_SPAIN 34

#define CTRY_SWEDEN 46

#define CTRY_SWITZERLAND 41

#define CTRY_SYRIA 963

#define CTRY_TAIWAN 886

#define CTRY_TATARSTAN 7

#define CTRY_THAILAND 66

#define CTRY_TRINIDAD_Y_TOBAGO 1

#define CTRY_TUNISIA 216

#define CTRY_TURKEY 90

#define CTRY_UAE 971

#define CTRY_UKRAINE 380

#define CTRY_UNITED_KINGDOM 44

#define CTRY_UNITED_STATES 1

#define CTRY_URUGUAY 598

#define CTRY_UZBEKISTAN 7

#define CTRY_VENEZUELA 58

#define CTRY_VIET_NAM 84

#define CTRY_YEMEN 967

#define CTRY_ZIMBABWE 263

#define DATE_AUTOLAYOUT 64

#define DATE_LONGDATE 2

#define DATE_LTRREADING 16

#define DATE_RTLREADING 32

#define DATE_SHORTDATE 1

#define DATE_USE_ALT_CALENDAR 4

#define DATE_YEARMONTH 8

#define ENUM_ALL_CALENDARS 4294967295

#define FIND_ENDSWITH 2097152

#define FIND_FROMEND 8388608

#define FIND_FROMSTART 4194304

#define FIND_STARTSWITH 1048576

#define GEOID_NOT_AVAILABLE -1

#define GSS_ALLOW_INHERITED_COMMON 1

#define HIGH_SURROGATE_END 56319

#define HIGH_SURROGATE_START 55296

#define IDN_ALLOW_UNASSIGNED 1

#define IDN_USE_STD3_ASCII_RULES 2

#define LCID_ALTERNATE_SORTS 4

#define LCID_INSTALLED 1

#define LCID_SUPPORTED 2

#define LCMAP_BYTEREV 2048

#define LCMAP_FULLWIDTH 8388608

#define LCMAP_HALFWIDTH 4194304

#define LCMAP_HIRAGANA 1048576

#define LCMAP_KATAKANA 2097152

#define LCMAP_LINGUISTIC_CASING 16777216

#define LCMAP_LOWERCASE 256

#define LCMAP_SIMPLIFIED_CHINESE 33554432

#define LCMAP_SORTKEY 1024

#define LCMAP_TITLECASE 768

#define LCMAP_TRADITIONAL_CHINESE 67108864

#define LCMAP_UPPERCASE 512

#define LGRPID_ARABIC 13

#define LGRPID_ARMENIAN 17

#define LGRPID_BALTIC 3

#define LGRPID_CENTRAL_EUROPE 2

#define LGRPID_CYRILLIC 5

#define LGRPID_GEORGIAN 16

#define LGRPID_GREEK 4

#define LGRPID_HEBREW 12

#define LGRPID_INDIC 15

#define LGRPID_INSTALLED 1

#define LGRPID_JAPANESE 7

#define LGRPID_KOREAN 8

#define LGRPID_SIMPLIFIED_CHINESE 10

#define LGRPID_SUPPORTED 2

#define LGRPID_THAI 11

#define LGRPID_TRADITIONAL_CHINESE 9

#define LGRPID_TURKIC 6

#define LGRPID_TURKISH 6

#define LGRPID_VIETNAMESE 14

#define LGRPID_WESTERN_EUROPE 1

#define LINGUISTIC_IGNORECASE 16

#define LINGUISTIC_IGNOREDIACRITIC 32

#define LOCALE_ALL 0

#define LOCALE_ALLOW_NEUTRAL_NAMES 134217728

#define LOCALE_ALTERNATE_SORTS 4

#define LOCALE_FONTSIGNATURE 88

#define LOCALE_ICALENDARTYPE 4105

#define LOCALE_ICENTURY 36

#define LOCALE_ICOUNTRY 5

#define LOCALE_ICURRDIGITS 25

#define LOCALE_ICURRENCY 27

#define LOCALE_IDATE 33

#define LOCALE_IDAYLZERO 38

#define LOCALE_IDEFAULTANSICODEPAGE 4100

#define LOCALE_IDEFAULTCODEPAGE 11

#define LOCALE_IDEFAULTCOUNTRY 10

#define LOCALE_IDEFAULTEBCDICCODEPAGE 4114

#define LOCALE_IDEFAULTLANGUAGE 9

#define LOCALE_IDEFAULTMACCODEPAGE 4113

#define LOCALE_IDIGITS 17

#define LOCALE_IDIGITSUBSTITUTION 4116

#define LOCALE_IFIRSTDAYOFWEEK 4108

#define LOCALE_IFIRSTWEEKOFYEAR 4109

#define LOCALE_IGEOID 91

#define LOCALE_IINTLCURRDIGITS 26

#define LOCALE_ILANGUAGE 1

#define LOCALE_ILDATE 34

#define LOCALE_ILZERO 18

#define LOCALE_IMEASURE 13

#define LOCALE_IMONLZERO 39

#define LOCALE_INEGATIVEPERCENT 116

#define LOCALE_INEGCURR 28

#define LOCALE_INEGNUMBER 4112

#define LOCALE_INEGSEPBYSPACE 87

#define LOCALE_INEGSIGNPOSN 83

#define LOCALE_INEGSYMPRECEDES 86

#define LOCALE_INEUTRAL 113

#define LOCALE_IOPTIONALCALENDAR 4107

#define LOCALE_IPAPERSIZE 4106

#define LOCALE_IPOSITIVEPERCENT 117

#define LOCALE_IPOSSEPBYSPACE 85

#define LOCALE_IPOSSIGNPOSN 82

#define LOCALE_IPOSSYMPRECEDES 84

#define LOCALE_IREADINGLAYOUT 112

#define LOCALE_ITIME 35

#define LOCALE_ITIMEMARKPOSN 4101

#define LOCALE_ITLZERO 37

#define LOCALE_NAME_INVARIANT 0

#define LOCALE_NAME_USER_DEFAULT 0

#define LOCALE_NEUTRALDATA 16

#define LOCALE_NOUSEROVERRIDE 2147483648

#define LOCALE_REPLACEMENT 8

#define LOCALE_RETURN_GENITIVE_NAMES 268435456

#define LOCALE_RETURN_NUMBER 536870912

#define LOCALE_S1159 40

#define LOCALE_S2359 41

#define LOCALE_SABBREVCTRYNAME 7

#define LOCALE_SABBREVDAYNAME1 49

#define LOCALE_SABBREVDAYNAME2 50

#define LOCALE_SABBREVDAYNAME3 51

#define LOCALE_SABBREVDAYNAME4 52

#define LOCALE_SABBREVDAYNAME5 53

#define LOCALE_SABBREVDAYNAME6 54

#define LOCALE_SABBREVDAYNAME7 55

#define LOCALE_SABBREVLANGNAME 3

#define LOCALE_SABBREVMONTHNAME1 68

#define LOCALE_SABBREVMONTHNAME10 77

#define LOCALE_SABBREVMONTHNAME11 78

#define LOCALE_SABBREVMONTHNAME12 79

#define LOCALE_SABBREVMONTHNAME13 4111

#define LOCALE_SABBREVMONTHNAME2 69

#define LOCALE_SABBREVMONTHNAME3 70

#define LOCALE_SABBREVMONTHNAME4 71

#define LOCALE_SABBREVMONTHNAME5 72

#define LOCALE_SABBREVMONTHNAME6 73

#define LOCALE_SABBREVMONTHNAME7 74

#define LOCALE_SABBREVMONTHNAME8 75

#define LOCALE_SABBREVMONTHNAME9 76

#define LOCALE_SCONSOLEFALLBACKNAME 110

#define LOCALE_SCOUNTRY 6

#define LOCALE_SCURRENCY 20

#define LOCALE_SDATE 29

#define LOCALE_SDAYNAME1 42

#define LOCALE_SDAYNAME2 43

#define LOCALE_SDAYNAME3 44

#define LOCALE_SDAYNAME4 45

#define LOCALE_SDAYNAME5 46

#define LOCALE_SDAYNAME6 47

#define LOCALE_SDAYNAME7 48

#define LOCALE_SDECIMAL 14

#define LOCALE_SDURATION 93

#define LOCALE_SENGCOUNTRY 4098

#define LOCALE_SENGCURRNAME 4103

#define LOCALE_SENGLANGUAGE 4097

#define LOCALE_SENGLISHCOUNTRYNAME 4098

#define LOCALE_SENGLISHDISPLAYNAME 114

#define LOCALE_SENGLISHLANGUAGENAME 4097

#define LOCALE_SGROUPING 16

#define LOCALE_SINTLSYMBOL 21

#define LOCALE_SISO3166CTRYNAME 90

#define LOCALE_SISO3166CTRYNAME2 104

#define LOCALE_SISO639LANGNAME 89

#define LOCALE_SISO639LANGNAME2 103

#define LOCALE_SKEYBOARDSTOINSTALL 94

#define LOCALE_SLANGDISPLAYNAME 111

#define LOCALE_SLANGUAGE 2

#define LOCALE_SLIST 12

#define LOCALE_SLOCALIZEDCOUNTRYNAME 6

#define LOCALE_SLOCALIZEDDISPLAYNAME 2

#define LOCALE_SLOCALIZEDLANGUAGENAME 111

#define LOCALE_SLONGDATE 32

#define LOCALE_SMONDECIMALSEP 22

#define LOCALE_SMONGROUPING 24

#define LOCALE_SMONTHDAY 120

#define LOCALE_SMONTHNAME1 56

#define LOCALE_SMONTHNAME10 65

#define LOCALE_SMONTHNAME11 66

#define LOCALE_SMONTHNAME12 67

#define LOCALE_SMONTHNAME13 4110

#define LOCALE_SMONTHNAME2 57

#define LOCALE_SMONTHNAME3 58

#define LOCALE_SMONTHNAME4 59

#define LOCALE_SMONTHNAME5 60

#define LOCALE_SMONTHNAME6 61

#define LOCALE_SMONTHNAME7 62

#define LOCALE_SMONTHNAME8 63

#define LOCALE_SMONTHNAME9 64

#define LOCALE_SMONTHOUSANDSEP 23

#define LOCALE_SNAME 92

#define LOCALE_SNAN 105

#define LOCALE_SNATIVECOUNTRYNAME 8

#define LOCALE_SNATIVECTRYNAME 8

#define LOCALE_SNATIVECURRNAME 4104

#define LOCALE_SNATIVEDIGITS 19

#define LOCALE_SNATIVEDISPLAYNAME 115

#define LOCALE_SNATIVELANGNAME 4

#define LOCALE_SNATIVELANGUAGENAME 4

#define LOCALE_SNEGATIVESIGN 81

#define LOCALE_SNEGINFINITY 107

#define LOCALE_SOPENTYPELANGUAGETAG 122

#define LOCALE_SPARENT 109

#define LOCALE_SPECIFICDATA 32

#define LOCALE_SPERCENT 118

#define LOCALE_SPERMILLE 119

#define LOCALE_SPOSINFINITY 106

#define LOCALE_SPOSITIVESIGN 80

#define LOCALE_SSCRIPTS 108

#define LOCALE_SSHORTDATE 31

#define LOCALE_SSHORTESTDAYNAME1 96

#define LOCALE_SSHORTESTDAYNAME2 97

#define LOCALE_SSHORTESTDAYNAME3 98

#define LOCALE_SSHORTESTDAYNAME4 99

#define LOCALE_SSHORTESTDAYNAME5 100

#define LOCALE_SSHORTESTDAYNAME6 101

#define LOCALE_SSHORTESTDAYNAME7 102

#define LOCALE_SSHORTTIME 121

#define LOCALE_SSORTLOCALE 123

#define LOCALE_SSORTNAME 4115

#define LOCALE_STHOUSAND 15

#define LOCALE_STIME 30

#define LOCALE_STIMEFORMAT 4099

#define LOCALE_SUPPLEMENTAL 2

#define LOCALE_SYEARMONTH 4102

#define LOCALE_USE_CP_ACP 1073741824

#define LOCALE_WINDOWS 1

#define LOW_SURROGATE_END 57343

#define LOW_SURROGATE_START 56320

#define MAP_COMPOSITE 64

#define MAP_EXPAND_LIGATURES 8192

#define MAP_FOLDCZONE 16

#define MAP_FOLDDIGITS 128

#define MAP_PRECOMPOSED 32

#define MAX_DEFAULTCHAR 2

#define MAX_LEADBYTES 12

#define MB_COMPOSITE 2

#define MB_ERR_INVALID_CHARS 8

#define MB_PRECOMPOSED 1

#define MB_USEGLYPHCHARS 4

#define MUI_COMPLEX_SCRIPT_FILTER 512

#define MUI_CONSOLE_FILTER 256

#define MUI_FILEINFO_VERSION 1

#define MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN 2

#define MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI 4

#define MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL 1

#define MUI_FULL_LANGUAGE 1

#define MUI_LANG_NEUTRAL_PE_FILE 256

#define MUI_LANGUAGE_ID 4

#define MUI_LANGUAGE_INSTALLED 32

#define MUI_LANGUAGE_LICENSED 64

#define MUI_LANGUAGE_NAME 8

#define MUI_LIP_LANGUAGE 4

#define MUI_MACHINE_LANGUAGE_SETTINGS 1024

#define MUI_MERGE_SYSTEM_FALLBACK 16

#define MUI_MERGE_USER_FALLBACK 32

#define MUI_NON_LANG_NEUTRAL_FILE 512

#define MUI_PARTIAL_LANGUAGE 2

#define MUI_QUERY_CHECKSUM 2

#define MUI_QUERY_LANGUAGE_NAME 4

#define MUI_QUERY_RESOURCE_TYPES 8

#define MUI_QUERY_TYPE 1

#define MUI_RESET_FILTERS 1

#define MUI_THREAD_LANGUAGES 64

#define MUI_UI_FALLBACK 48

#define MUI_USE_INSTALLED_LANGUAGES 32

#define MUI_USE_SEARCH_ALL_LANGUAGES 64

#define MUI_USER_PREFERRED_UI_LANGUAGES 16

#define NORM_IGNORECASE 1

#define NORM_IGNOREKANATYPE 65536

#define NORM_IGNORENONSPACE 2

#define NORM_IGNORESYMBOLS 4

#define NORM_IGNOREWIDTH 131072

#define NORM_LINGUISTIC_CASING 134217728

#define SORT_DIGITSASNUMBERS 8

#define SORT_STRINGSORT 4096

#define TIME_FORCE24HOURFORMAT 8

#define TIME_NOMINUTESORSECONDS 1

#define TIME_NOSECONDS 2

#define TIME_NOTIMEMARKER 4

#define VS_ALLOW_LATIN 1

#define WC_COMPOSITECHECK 512

#define WC_DEFAULTCHAR 64

#define WC_DISCARDNS 16

#define WC_ERR_INVALID_CHARS 128

#define WC_NO_BEST_FIT_CHARS 1024

#define WC_SEPCHARS 32

typedef struct _cpinfo _cpinfo, *P_cpinfo;

struct _cpinfo {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
};

typedef struct _cpinfoexA _cpinfoexA, *P_cpinfoexA;

struct _cpinfoexA {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
    WCHAR UnicodeDefaultChar;
    UINT CodePage;
    CHAR CodePageName[260];
};

typedef struct _cpinfoexW _cpinfoexW, *P_cpinfoexW;

struct _cpinfoexW {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
    WCHAR UnicodeDefaultChar;
    UINT CodePage;
    WCHAR CodePageName[260];
};

typedef struct _currencyfmtA _currencyfmtA, *P_currencyfmtA;

struct _currencyfmtA {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPSTR lpDecimalSep;
    LPSTR lpThousandSep;
    UINT NegativeOrder;
    UINT PositiveOrder;
    LPSTR lpCurrencySymbol;
};

typedef struct _currencyfmtW _currencyfmtW, *P_currencyfmtW;

struct _currencyfmtW {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPWSTR lpDecimalSep;
    LPWSTR lpThousandSep;
    UINT NegativeOrder;
    UINT PositiveOrder;
    LPWSTR lpCurrencySymbol;
};

typedef struct _FILEMUIINFO _FILEMUIINFO, *P_FILEMUIINFO;

struct _FILEMUIINFO {
    DWORD dwSize;
    DWORD dwVersion;
    DWORD dwFileType;
    BYTE pChecksum[16];
    BYTE pServiceChecksum[16];
    DWORD dwLanguageNameOffset;
    DWORD dwTypeIDMainSize;
    DWORD dwTypeIDMainOffset;
    DWORD dwTypeNameMainOffset;
    DWORD dwTypeIDMUISize;
    DWORD dwTypeIDMUIOffset;
    DWORD dwTypeNameMUIOffset;
    BYTE abBuffer[8];
};

typedef struct _nlsversioninfo _nlsversioninfo, *P_nlsversioninfo;

struct _nlsversioninfo {
    DWORD dwNLSVersionInfoSize;
    DWORD dwNLSVersion;
    DWORD dwDefinedVersion;
};

typedef struct _nlsversioninfoex _nlsversioninfoex, *P_nlsversioninfoex;

struct _nlsversioninfoex {
    DWORD dwNLSVersionInfoSize;
    DWORD dwNLSVersion;
    DWORD dwDefinedVersion;
    DWORD dwEffectiveId;
    GUID guidCustomVersion;
};

typedef enum _NORM_FORM {
    NormalizationC=1,
    NormalizationD=2,
    NormalizationKC=5,
    NormalizationKD=6,
    NormalizationOther=0
} _NORM_FORM;

typedef struct _numberfmtA _numberfmtA, *P_numberfmtA;

struct _numberfmtA {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPSTR lpDecimalSep;
    LPSTR lpThousandSep;
    UINT NegativeOrder;
};

typedef struct _numberfmtW _numberfmtW, *P_numberfmtW;

struct _numberfmtW {
    UINT NumDigits;
    UINT LeadingZero;
    UINT Grouping;
    LPWSTR lpDecimalSep;
    LPWSTR lpThousandSep;
    UINT NegativeOrder;
};

typedef DWORD CALID;

typedef BOOL (* CALINFO_ENUMPROCA)(LPSTR);

typedef BOOL (* CALINFO_ENUMPROCEXA)(LPSTR, CALID);

typedef BOOL (* CALINFO_ENUMPROCEXEX)(LPWSTR, CALID, LPWSTR, LPARAM);

typedef BOOL (* CALINFO_ENUMPROCEXW)(LPWSTR, CALID);

typedef BOOL (* CALINFO_ENUMPROCW)(LPWSTR);

typedef DWORD CALTYPE;

typedef BOOL (* CODEPAGE_ENUMPROCA)(LPSTR);

typedef BOOL (* CODEPAGE_ENUMPROCW)(LPWSTR);

typedef struct _cpinfo CPINFO;

typedef struct _cpinfoexA CPINFOEXA;

typedef CPINFOEXA CPINFOEX;

typedef struct _cpinfoexW CPINFOEXW;

typedef struct _currencyfmtA CURRENCYFMTA;

typedef CURRENCYFMTA CURRENCYFMT;

typedef struct _currencyfmtW CURRENCYFMTW;

typedef BOOL (* DATEFMT_ENUMPROCA)(LPSTR);

typedef BOOL (* DATEFMT_ENUMPROCEXA)(LPSTR, CALID);

typedef BOOL (* DATEFMT_ENUMPROCEXEX)(LPWSTR, CALID, LPARAM);

typedef BOOL (* DATEFMT_ENUMPROCEXW)(LPWSTR, CALID);

typedef BOOL (* DATEFMT_ENUMPROCW)(LPWSTR);

typedef struct _FILEMUIINFO FILEMUIINFO;

typedef LONG GEOID;

typedef BOOL (* GEO_ENUMPROC)(GEOID);

typedef DWORD GEOCLASS;

typedef DWORD GEOTYPE;

typedef DWORD LGRPID;

typedef BOOL (* LANGGROUPLOCALE_ENUMPROCA)(LGRPID, LCID, LPSTR, LONG_PTR);

typedef BOOL (* LANGGROUPLOCALE_ENUMPROCW)(LGRPID, LCID, LPWSTR, LONG_PTR);

typedef BOOL (* LANGUAGEGROUP_ENUMPROCA)(LGRPID, LPSTR, LPSTR, DWORD, LONG_PTR);

typedef BOOL (* LANGUAGEGROUP_ENUMPROCW)(LGRPID, LPWSTR, LPWSTR, DWORD, LONG_PTR);

typedef DWORD LCTYPE;

typedef BOOL (* LOCALE_ENUMPROCA)(LPSTR);

typedef BOOL (* LOCALE_ENUMPROCEX)(LPWSTR, DWORD, LPARAM);

typedef BOOL (* LOCALE_ENUMPROCW)(LPWSTR);

typedef struct _cpinfo * LPCPINFO;

typedef struct _cpinfoexA * LPCPINFOEXA;

typedef LPCPINFOEXA LPCPINFOEX;

typedef struct _cpinfoexW * LPCPINFOEXW;

typedef struct _currencyfmtA * LPCURRENCYFMTA;

typedef LPCURRENCYFMTA LPCURRENCYFMT;

typedef struct _currencyfmtW * LPCURRENCYFMTW;

typedef struct _nlsversioninfo * LPNLSVERSIONINFO;

typedef struct _nlsversioninfoex * LPNLSVERSIONINFOEX;

typedef struct _numberfmtA * LPNUMBERFMTA;

typedef LPNUMBERFMTA LPNUMBERFMT;

typedef struct _numberfmtW * LPNUMBERFMTW;

typedef DWORD NLS_FUNCTION;

typedef struct _nlsversioninfo NLSVERSIONINFO;

typedef struct _nlsversioninfoex NLSVERSIONINFOEX;

typedef enum _NORM_FORM NORM_FORM;

typedef struct _numberfmtA NUMBERFMTA;

typedef NUMBERFMTA NUMBERFMT;

typedef struct _numberfmtW NUMBERFMTW;

typedef struct _FILEMUIINFO * PFILEMUIINFO;

typedef enum SYSGEOCLASS {
    GEOCLASS_NATION=16,
    GEOCLASS_REGION=14
} SYSGEOCLASS;

typedef enum SYSGEOTYPE {
    GEO_FRIENDLYNAME=8,
    GEO_ISO2=4,
    GEO_ISO3=5,
    GEO_LATITUDE=2,
    GEO_LCID=7,
    GEO_LONGITUDE=3,
    GEO_NATION=1,
    GEO_OFFICIALLANGUAGES=11,
    GEO_OFFICIALNAME=9,
    GEO_RFC1766=6,
    GEO_TIMEZONES=10
} SYSGEOTYPE;

typedef enum SYSNLS_FUNCTION {
    COMPARE_STRING=1
} SYSNLS_FUNCTION;

typedef BOOL (* TIMEFMT_ENUMPROCA)(LPSTR);

typedef BOOL (* TIMEFMT_ENUMPROCEX)(LPWSTR, LPARAM);

typedef BOOL (* TIMEFMT_ENUMPROCW)(LPWSTR);

typedef BOOL (* UILANGUAGE_ENUMPROCA)(LPSTR, LONG_PTR);

typedef BOOL (* UILANGUAGE_ENUMPROCW)(LPWSTR, LONG_PTR);

#define ACCESS_ALLOWED_ACE_TYPE 0

#define ACCESS_ALLOWED_CALLBACK_ACE_TYPE 9

#define ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE 11

#define ACCESS_ALLOWED_COMPOUND_ACE_TYPE 4

#define ACCESS_ALLOWED_OBJECT_ACE_TYPE 5

#define ACCESS_DENIED_ACE_TYPE 1

#define ACCESS_DENIED_CALLBACK_ACE_TYPE 10

#define ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE 12

#define ACCESS_DENIED_OBJECT_ACE_TYPE 6

#define ACCESS_MAX_LEVEL 4

#define ACCESS_MAX_MS_ACE_TYPE 8

#define ACCESS_MAX_MS_OBJECT_ACE_TYPE 8

#define ACCESS_MAX_MS_V2_ACE_TYPE 3

#define ACCESS_MAX_MS_V3_ACE_TYPE 4

#define ACCESS_MAX_MS_V4_ACE_TYPE 8

#define ACCESS_MAX_MS_V5_ACE_TYPE 17

#define ACCESS_MIN_MS_ACE_TYPE 0

#define ACCESS_MIN_MS_OBJECT_ACE_TYPE 5

#define ACCESS_OBJECT_GUID 0

#define ACCESS_PROPERTY_GUID 2

#define ACCESS_PROPERTY_SET_GUID 1

#define ACCESS_REASON_DATA_MASK 65535

#define ACCESS_REASON_TYPE_MASK 4294901760

#define ACCESS_SYSTEM_SECURITY 16777216

#define ACE_INHERITED_OBJECT_TYPE_PRESENT 2

#define ACE_OBJECT_TYPE_PRESENT 1

#define ACL_REVISION 2

#define ACL_REVISION1 1

#define ACL_REVISION2 2

#define ACL_REVISION3 3

#define ACL_REVISION4 4

#define ACL_REVISION_DS 4

#define ACPI_PPM_HARDWARE_ALL 254

#define ACPI_PPM_SOFTWARE_ALL 252

#define ACPI_PPM_SOFTWARE_ANY 253

#define ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF 4

#define ACTIVATION_CONTEXT_PATH_TYPE_NONE 1

#define ACTIVATION_CONTEXT_PATH_TYPE_URL 3

#define ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE 2

#define ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS 10

#define ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION 1

#define ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES 9

#define ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION 5

#define ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION 7

#define ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION 4

#define ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION 6

#define ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO 11

#define ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION 2

#define ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE 8

#define ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION 3

#define ALL_PROCESSOR_GROUPS 65535

#define ANSI_NULL 0

#define ANYSIZE_ARRAY 1

#define APPLICATION_ERROR_MASK 536870912

#define AUDIT_ALLOW_NO_PRIVILEGE 1

#define BATTERY_DISCHARGE_FLAGS_ENABLE 2147483648

#define BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK 7

#define CACHE_FULLY_ASSOCIATIVE 255

#define CM_SERVICE_NETWORK_BOOT_LOAD 1

#define CM_SERVICE_USB_DISK_BOOT_LOAD 4

#define CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD 2

#define COMPRESSION_ENGINE_HIBER 512

#define COMPRESSION_ENGINE_MAXIMUM 256

#define COMPRESSION_ENGINE_STANDARD 0

#define COMPRESSION_FORMAT_DEFAULT 1

#define COMPRESSION_FORMAT_LZNT1 2

#define COMPRESSION_FORMAT_NONE 0

#define CONTAINER_INHERIT_ACE 2

#define CONTEXT_CONTROL 65537

#define CONTEXT_DEBUG_REGISTERS 65552

#define CONTEXT_EXTENDED_REGISTERS 65568

#define CONTEXT_FLOATING_POINT 65544

#define CONTEXT_i386 65536

#define CONTEXT_i486 65536

#define CONTEXT_INTEGER 65538

#define CONTEXT_SEGMENTS 65540

#define CONTEXT_XSTATE 65600

#define CORE_PARKING_POLICY_CHANGE_IDEAL 0

#define CORE_PARKING_POLICY_CHANGE_MAX 2

#define CORE_PARKING_POLICY_CHANGE_ROCKET 2

#define CORE_PARKING_POLICY_CHANGE_SINGLE 1

#define DACL_SECURITY_INFORMATION 4

#define DBG_COMMAND_EXCEPTION 1073807369

#define DBG_CONTINUE 65538

#define DBG_CONTROL_BREAK 1073807368

#define DBG_CONTROL_C 1073807365

#define DBG_EXCEPTION_HANDLED 65537

#define DBG_EXCEPTION_NOT_HANDLED 2147549185

#define DBG_PRINTEXCEPTION_C 1073807366

#define DBG_RIPEXCEPTION 1073807367

#define DBG_TERMINATE_PROCESS 1073807364

#define DBG_TERMINATE_THREAD 1073807363

#define DELETE 65536

#define DIAGNOSTIC_REASON_DETAILED_STRING 2

#define DIAGNOSTIC_REASON_INVALID_FLAGS -2147483652

#define DIAGNOSTIC_REASON_NOT_SPECIFIED 2147483648

#define DIAGNOSTIC_REASON_SIMPLE_STRING 1

#define DIAGNOSTIC_REASON_VERSION 0

#define DISABLE_MAX_PRIVILEGE 1

#define DISCHARGE_POLICY_CRITICAL 0

#define DISCHARGE_POLICY_LOW 1

#define DLL_PROCESS_ATTACH 1

#define DLL_PROCESS_DETACH 0

#define DLL_THREAD_ATTACH 2

#define DLL_THREAD_DETACH 3

#define DOMAIN_ALIAS_RID_ACCOUNT_OPS 548

#define DOMAIN_ALIAS_RID_ADMINS 544

#define DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS 560

#define DOMAIN_ALIAS_RID_BACKUP_OPS 551

#define DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP 571

#define DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP 574

#define DOMAIN_ALIAS_RID_CRYPTO_OPERATORS 569

#define DOMAIN_ALIAS_RID_DCOM_USERS 562

#define DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP 573

#define DOMAIN_ALIAS_RID_GUESTS 546

#define DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS 557

#define DOMAIN_ALIAS_RID_IUSERS 568

#define DOMAIN_ALIAS_RID_LOGGING_USERS 559

#define DOMAIN_ALIAS_RID_MONITORING_USERS 558

#define DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS 556

#define DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP 572

#define DOMAIN_ALIAS_RID_POWER_USERS 547

#define DOMAIN_ALIAS_RID_PREW2KCOMPACCESS 554

#define DOMAIN_ALIAS_RID_PRINT_OPS 550

#define DOMAIN_ALIAS_RID_RAS_SERVERS 553

#define DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS 555

#define DOMAIN_ALIAS_RID_REPLICATOR 552

#define DOMAIN_ALIAS_RID_SYSTEM_OPS 549

#define DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS 561

#define DOMAIN_ALIAS_RID_USERS 545

#define DOMAIN_GROUP_RID_ADMINS 512

#define DOMAIN_GROUP_RID_CERT_ADMINS 517

#define DOMAIN_GROUP_RID_COMPUTERS 515

#define DOMAIN_GROUP_RID_CONTROLLERS 516

#define DOMAIN_GROUP_RID_ENTERPRISE_ADMINS 519

#define DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS 498

#define DOMAIN_GROUP_RID_GUESTS 514

#define DOMAIN_GROUP_RID_POLICY_ADMINS 520

#define DOMAIN_GROUP_RID_READONLY_CONTROLLERS 521

#define DOMAIN_GROUP_RID_SCHEMA_ADMINS 518

#define DOMAIN_GROUP_RID_USERS 513

#define DOMAIN_USER_RID_ADMIN 500

#define DOMAIN_USER_RID_GUEST 501

#define DOMAIN_USER_RID_KRBTGT 502

#define DOMAIN_USER_RID_MAX 999

#define DUPLICATE_CLOSE_SOURCE 1

#define DUPLICATE_SAME_ACCESS 2

#define EMARCH_ENC_I17_IC_INST_WORD_POS_X 12

#define EMARCH_ENC_I17_IC_INST_WORD_X 3

#define EMARCH_ENC_I17_IC_SIZE_X 1

#define EMARCH_ENC_I17_IC_VAL_POS_X 21

#define EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X 14

#define EMARCH_ENC_I17_IMM41a_INST_WORD_X 1

#define EMARCH_ENC_I17_IMM41a_SIZE_X 10

#define EMARCH_ENC_I17_IMM41a_VAL_POS_X 22

#define EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X 24

#define EMARCH_ENC_I17_IMM41b_INST_WORD_X 1

#define EMARCH_ENC_I17_IMM41b_SIZE_X 8

#define EMARCH_ENC_I17_IMM41b_VAL_POS_X 32

#define EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X 0

#define EMARCH_ENC_I17_IMM41c_INST_WORD_X 2

#define EMARCH_ENC_I17_IMM41c_SIZE_X 23

#define EMARCH_ENC_I17_IMM41c_VAL_POS_X 40

#define EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X 13

#define EMARCH_ENC_I17_IMM5C_INST_WORD_X 3

#define EMARCH_ENC_I17_IMM5C_SIZE_X 5

#define EMARCH_ENC_I17_IMM5C_VAL_POS_X 16

#define EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X 4

#define EMARCH_ENC_I17_IMM7B_INST_WORD_X 3

#define EMARCH_ENC_I17_IMM7B_SIZE_X 7

#define EMARCH_ENC_I17_IMM7B_VAL_POS_X 0

#define EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X 18

#define EMARCH_ENC_I17_IMM9D_INST_WORD_X 3

#define EMARCH_ENC_I17_IMM9D_SIZE_X 9

#define EMARCH_ENC_I17_IMM9D_VAL_POS_X 7

#define EMARCH_ENC_I17_SIGN_INST_WORD_POS_X 27

#define EMARCH_ENC_I17_SIGN_INST_WORD_X 3

#define EMARCH_ENC_I17_SIGN_SIZE_X 1

#define EMARCH_ENC_I17_SIGN_VAL_POS_X 63

#define ENLISTMENT_QUERY_INFORMATION 1

#define ENLISTMENT_RECOVER 4

#define ENLISTMENT_SET_INFORMATION 2

#define ENLISTMENT_SUBORDINATE_RIGHTS 8

#define ENLISTMENT_SUPERIOR_RIGHTS 16

#define ERROR_SEVERITY_ERROR 3221225472

#define ERROR_SEVERITY_INFORMATIONAL 1073741824

#define ERROR_SEVERITY_SUCCESS 0

#define ERROR_SEVERITY_WARNING 2147483648

#define ES_AWAYMODE_REQUIRED 64

#define ES_CONTINUOUS 2147483648

#define ES_DISPLAY_REQUIRED 2

#define ES_SYSTEM_REQUIRED 1

#define ES_USER_PRESENT 4

#define EVENT_ALL_ACCESS 2031619

#define EVENT_MODIFY_STATE 2

#define EVENTLOG_AUDIT_FAILURE 16

#define EVENTLOG_AUDIT_SUCCESS 8

#define EVENTLOG_BACKWARDS_READ 8

#define EVENTLOG_END_ALL_PAIRED_EVENTS 4

#define EVENTLOG_END_PAIRED_EVENT 2

#define EVENTLOG_ERROR_TYPE 1

#define EVENTLOG_FORWARDS_READ 4

#define EVENTLOG_INFORMATION_TYPE 4

#define EVENTLOG_PAIRED_EVENT_ACTIVE 8

#define EVENTLOG_PAIRED_EVENT_INACTIVE 16

#define EVENTLOG_SEEK_READ 2

#define EVENTLOG_SEQUENTIAL_READ 1

#define EVENTLOG_START_PAIRED_EVENT 1

#define EVENTLOG_SUCCESS 0

#define EVENTLOG_WARNING_TYPE 2

#define EXCEPTION_EXECUTE_FAULT 8

#define EXCEPTION_MAXIMUM_PARAMETERS 15

#define EXCEPTION_NONCONTINUABLE 1

#define EXCEPTION_READ_FAULT 0

#define EXCEPTION_WRITE_FAULT 1

#define FAILED_ACCESS_ACE_FLAG 128

#define FILE_ACTION_ADDED 1

#define FILE_ACTION_MODIFIED 3

#define FILE_ACTION_REMOVED 2

#define FILE_ACTION_RENAMED_NEW_NAME 5

#define FILE_ACTION_RENAMED_OLD_NAME 4

#define FILE_ADD_FILE 2

#define FILE_ADD_SUBDIRECTORY 4

#define FILE_ALL_ACCESS 2032127

#define FILE_APPEND_DATA 4

#define FILE_ATTRIBUTE_ARCHIVE 32

#define FILE_ATTRIBUTE_COMPRESSED 2048

#define FILE_ATTRIBUTE_DEVICE 64

#define FILE_ATTRIBUTE_DIRECTORY 16

#define FILE_ATTRIBUTE_ENCRYPTED 16384

#define FILE_ATTRIBUTE_HIDDEN 2

#define FILE_ATTRIBUTE_NORMAL 128

#define FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 8192

#define FILE_ATTRIBUTE_OFFLINE 4096

#define FILE_ATTRIBUTE_READONLY 1

#define FILE_ATTRIBUTE_REPARSE_POINT 1024

#define FILE_ATTRIBUTE_SPARSE_FILE 512

#define FILE_ATTRIBUTE_SYSTEM 4

#define FILE_ATTRIBUTE_TEMPORARY 256

#define FILE_ATTRIBUTE_VIRTUAL 65536

#define FILE_CASE_PRESERVED_NAMES 2

#define FILE_CASE_SENSITIVE_SEARCH 1

#define FILE_CREATE_PIPE_INSTANCE 4

#define FILE_DELETE_CHILD 64

#define FILE_EXECUTE 32

#define FILE_FILE_COMPRESSION 16

#define FILE_LIST_DIRECTORY 1

#define FILE_NAMED_STREAMS 262144

#define FILE_NOTIFY_CHANGE_ATTRIBUTES 4

#define FILE_NOTIFY_CHANGE_CREATION 64

#define FILE_NOTIFY_CHANGE_DIR_NAME 2

#define FILE_NOTIFY_CHANGE_FILE_NAME 1

#define FILE_NOTIFY_CHANGE_LAST_ACCESS 32

#define FILE_NOTIFY_CHANGE_LAST_WRITE 16

#define FILE_NOTIFY_CHANGE_SECURITY 256

#define FILE_NOTIFY_CHANGE_SIZE 8

#define FILE_PERSISTENT_ACLS 8

#define FILE_READ_ATTRIBUTES 128

#define FILE_READ_DATA 1

#define FILE_READ_EA 8

#define FILE_READ_ONLY_VOLUME 524288

#define FILE_SEQUENTIAL_WRITE_ONCE 1048576

#define FILE_SHARE_DELETE 4

#define FILE_SHARE_READ 1

#define FILE_SHARE_WRITE 2

#define FILE_SUPPORTS_ENCRYPTION 131072

#define FILE_SUPPORTS_EXTENDED_ATTRIBUTES 8388608

#define FILE_SUPPORTS_HARD_LINKS 4194304

#define FILE_SUPPORTS_OBJECT_IDS 65536

#define FILE_SUPPORTS_OPEN_BY_FILE_ID 16777216

#define FILE_SUPPORTS_REMOTE_STORAGE 256

#define FILE_SUPPORTS_REPARSE_POINTS 128

#define FILE_SUPPORTS_SPARSE_FILES 64

#define FILE_SUPPORTS_TRANSACTIONS 2097152

#define FILE_SUPPORTS_USN_JOURNAL 33554432

#define FILE_TRAVERSE 32

#define FILE_UNICODE_ON_DISK 4

#define FILE_VOLUME_IS_COMPRESSED 32768

#define FILE_VOLUME_QUOTAS 32

#define FILE_WRITE_ATTRIBUTES 256

#define FILE_WRITE_DATA 2

#define FILE_WRITE_EA 16

#define FLS_MAXIMUM_AVAILABLE 128

#define FOREST_USER_RID_MAX 499

#define FRAME_FPO 0

#define FRAME_NONFPO 3

#define FRAME_TRAP 1

#define FRAME_TSS 2

#define GENERIC_ALL 268435456

#define GENERIC_EXECUTE 536870912

#define GENERIC_READ 2147483648

#define GENERIC_WRITE 1073741824

#define GROUP_SECURITY_INFORMATION 2

#define HEAP_CREATE_ALIGN_16 65536

#define HEAP_CREATE_ENABLE_EXECUTE 262144

#define HEAP_CREATE_ENABLE_TRACING 131072

#define HEAP_DISABLE_COALESCE_ON_FREE 128

#define HEAP_FREE_CHECKING_ENABLED 64

#define HEAP_GENERATE_EXCEPTIONS 4

#define HEAP_GROWABLE 2

#define HEAP_MAXIMUM_TAG 4095

#define HEAP_NO_SERIALIZE 1

#define HEAP_PSEUDO_TAG_FLAG 32768

#define HEAP_REALLOC_IN_PLACE_ONLY 16

#define HEAP_TAG_SHIFT 18

#define HEAP_TAIL_CHECKING_ENABLED 32

#define HEAP_ZERO_MEMORY 8

#define IMAGE_ARCHIVE_START_SIZE 8

#define IMAGE_COMDAT_SELECT_ANY 2

#define IMAGE_COMDAT_SELECT_ASSOCIATIVE 5

#define IMAGE_COMDAT_SELECT_EXACT_MATCH 4

#define IMAGE_COMDAT_SELECT_LARGEST 6

#define IMAGE_COMDAT_SELECT_NEWEST 7

#define IMAGE_COMDAT_SELECT_NODUPLICATES 1

#define IMAGE_COMDAT_SELECT_SAME_SIZE 3

#define IMAGE_DEBUG_MISC_EXENAME 1

#define IMAGE_DEBUG_TYPE_BORLAND 9

#define IMAGE_DEBUG_TYPE_CLSID 11

#define IMAGE_DEBUG_TYPE_CODEVIEW 2

#define IMAGE_DEBUG_TYPE_COFF 1

#define IMAGE_DEBUG_TYPE_EXCEPTION 5

#define IMAGE_DEBUG_TYPE_FIXUP 6

#define IMAGE_DEBUG_TYPE_FPO 3

#define IMAGE_DEBUG_TYPE_MISC 4

#define IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 8

#define IMAGE_DEBUG_TYPE_OMAP_TO_SRC 7

#define IMAGE_DEBUG_TYPE_RESERVED10 10

#define IMAGE_DEBUG_TYPE_UNKNOWN 0

#define IMAGE_DIRECTORY_ENTRY_ARCHITECTURE 7

#define IMAGE_DIRECTORY_ENTRY_BASERELOC 5

#define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT 11

#define IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14

#define IMAGE_DIRECTORY_ENTRY_DEBUG 6

#define IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT 13

#define IMAGE_DIRECTORY_ENTRY_EXCEPTION 3

#define IMAGE_DIRECTORY_ENTRY_EXPORT 0

#define IMAGE_DIRECTORY_ENTRY_GLOBALPTR 8

#define IMAGE_DIRECTORY_ENTRY_IAT 12

#define IMAGE_DIRECTORY_ENTRY_IMPORT 1

#define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG 10

#define IMAGE_DIRECTORY_ENTRY_RESOURCE 2

#define IMAGE_DIRECTORY_ENTRY_SECURITY 4

#define IMAGE_DIRECTORY_ENTRY_TLS 9

#define IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 64

#define IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY 128

#define IMAGE_DLLCHARACTERISTICS_NO_BIND 2048

#define IMAGE_DLLCHARACTERISTICS_NO_ISOLATION 512

#define IMAGE_DLLCHARACTERISTICS_NO_SEH 1024

#define IMAGE_DLLCHARACTERISTICS_NX_COMPAT 256

#define IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE 32768

#define IMAGE_DLLCHARACTERISTICS_WDM_DRIVER 8192

#define IMAGE_DOS_SIGNATURE 23117

#define IMAGE_FILE_32BIT_MACHINE 256

#define IMAGE_FILE_AGGRESIVE_WS_TRIM 16

#define IMAGE_FILE_BYTES_REVERSED_HI 32768

#define IMAGE_FILE_BYTES_REVERSED_LO 128

#define IMAGE_FILE_DEBUG_STRIPPED 512

#define IMAGE_FILE_DLL 8192

#define IMAGE_FILE_EXECUTABLE_IMAGE 2

#define IMAGE_FILE_LARGE_ADDRESS_AWARE 32

#define IMAGE_FILE_LINE_NUMS_STRIPPED 4

#define IMAGE_FILE_LOCAL_SYMS_STRIPPED 8

#define IMAGE_FILE_MACHINE_ALPHA 388

#define IMAGE_FILE_MACHINE_ALPHA64 644

#define IMAGE_FILE_MACHINE_AM33 467

#define IMAGE_FILE_MACHINE_AMD64 34404

#define IMAGE_FILE_MACHINE_ARM 448

#define IMAGE_FILE_MACHINE_AXP64 644

#define IMAGE_FILE_MACHINE_CEE 49390

#define IMAGE_FILE_MACHINE_CEF 3311

#define IMAGE_FILE_MACHINE_EBC 3772

#define IMAGE_FILE_MACHINE_I386 332

#define IMAGE_FILE_MACHINE_IA64 512

#define IMAGE_FILE_MACHINE_M32R 36929

#define IMAGE_FILE_MACHINE_MIPS16 614

#define IMAGE_FILE_MACHINE_MIPSFPU 870

#define IMAGE_FILE_MACHINE_MIPSFPU16 1126

#define IMAGE_FILE_MACHINE_POWERPC 496

#define IMAGE_FILE_MACHINE_POWERPCFP 497

#define IMAGE_FILE_MACHINE_R10000 360

#define IMAGE_FILE_MACHINE_R3000 354

#define IMAGE_FILE_MACHINE_R4000 358

#define IMAGE_FILE_MACHINE_SH3 418

#define IMAGE_FILE_MACHINE_SH3DSP 419

#define IMAGE_FILE_MACHINE_SH3E 420

#define IMAGE_FILE_MACHINE_SH4 422

#define IMAGE_FILE_MACHINE_SH5 424

#define IMAGE_FILE_MACHINE_THUMB 450

#define IMAGE_FILE_MACHINE_TRICORE 1312

#define IMAGE_FILE_MACHINE_UNKNOWN 0

#define IMAGE_FILE_MACHINE_WCEMIPSV2 361

#define IMAGE_FILE_NET_RUN_FROM_SWAP 2048

#define IMAGE_FILE_RELOCS_STRIPPED 1

#define IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 1024

#define IMAGE_FILE_SYSTEM 4096

#define IMAGE_FILE_UP_SYSTEM_ONLY 16384

#define IMAGE_NT_OPTIONAL_HDR32_MAGIC 267

#define IMAGE_NT_OPTIONAL_HDR64_MAGIC 523

#define IMAGE_NT_OPTIONAL_HDR_MAGIC 267

#define IMAGE_NT_SIGNATURE 17744

#define IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16

#define IMAGE_ORDINAL_FLAG 2147483648

#define IMAGE_ORDINAL_FLAG32 2147483648

#define IMAGE_ORDINAL_FLAG64 -9223372036854775808

#define IMAGE_OS2_SIGNATURE 17742

#define IMAGE_OS2_SIGNATURE_LE 17740

#define IMAGE_REL_ALPHA_ABSOLUTE 0

#define IMAGE_REL_ALPHA_BRADDR 7

#define IMAGE_REL_ALPHA_GPDISP 6

#define IMAGE_REL_ALPHA_GPREL32 3

#define IMAGE_REL_ALPHA_GPRELHI 23

#define IMAGE_REL_ALPHA_GPRELLO 22

#define IMAGE_REL_ALPHA_HINT 8

#define IMAGE_REL_ALPHA_INLINE_REFLONG 9

#define IMAGE_REL_ALPHA_LITERAL 4

#define IMAGE_REL_ALPHA_LITUSE 5

#define IMAGE_REL_ALPHA_MATCH 13

#define IMAGE_REL_ALPHA_PAIR 12

#define IMAGE_REL_ALPHA_REFHI 10

#define IMAGE_REL_ALPHA_REFLO 11

#define IMAGE_REL_ALPHA_REFLONG 1

#define IMAGE_REL_ALPHA_REFLONGNB 16

#define IMAGE_REL_ALPHA_REFQ1 21

#define IMAGE_REL_ALPHA_REFQ2 20

#define IMAGE_REL_ALPHA_REFQ3 19

#define IMAGE_REL_ALPHA_REFQUAD 2

#define IMAGE_REL_ALPHA_SECREL 15

#define IMAGE_REL_ALPHA_SECRELHI 18

#define IMAGE_REL_ALPHA_SECRELLO 17

#define IMAGE_REL_ALPHA_SECTION 14

#define IMAGE_REL_AM_ABSOLUTE 0

#define IMAGE_REL_AM_ADDR32 1

#define IMAGE_REL_AM_ADDR32NB 2

#define IMAGE_REL_AM_CALL32 3

#define IMAGE_REL_AM_FUNCINFO 4

#define IMAGE_REL_AM_REL32_1 5

#define IMAGE_REL_AM_REL32_2 6

#define IMAGE_REL_AM_SECREL 7

#define IMAGE_REL_AM_SECTION 8

#define IMAGE_REL_AM_TOKEN 9

#define IMAGE_REL_AMD64_ABSOLUTE 0

#define IMAGE_REL_AMD64_ADDR32 2

#define IMAGE_REL_AMD64_ADDR32NB 3

#define IMAGE_REL_AMD64_ADDR64 1

#define IMAGE_REL_AMD64_PAIR 15

#define IMAGE_REL_AMD64_REL32 4

#define IMAGE_REL_AMD64_REL32_1 5

#define IMAGE_REL_AMD64_REL32_2 6

#define IMAGE_REL_AMD64_REL32_3 7

#define IMAGE_REL_AMD64_REL32_4 8

#define IMAGE_REL_AMD64_REL32_5 9

#define IMAGE_REL_AMD64_SECREL 11

#define IMAGE_REL_AMD64_SECREL7 12

#define IMAGE_REL_AMD64_SECTION 10

#define IMAGE_REL_AMD64_SREL32 14

#define IMAGE_REL_AMD64_SSPAN32 16

#define IMAGE_REL_AMD64_TOKEN 13

#define IMAGE_REL_ARM_ABSOLUTE 0

#define IMAGE_REL_ARM_ADDR32 1

#define IMAGE_REL_ARM_ADDR32NB 2

#define IMAGE_REL_ARM_BLX11 9

#define IMAGE_REL_ARM_BLX24 8

#define IMAGE_REL_ARM_BRANCH11 4

#define IMAGE_REL_ARM_BRANCH24 3

#define IMAGE_REL_ARM_GPREL12 6

#define IMAGE_REL_ARM_GPREL7 7

#define IMAGE_REL_ARM_SECREL 15

#define IMAGE_REL_ARM_SECTION 14

#define IMAGE_REL_ARM_TOKEN 5

#define IMAGE_REL_BASED_ABSOLUTE 0

#define IMAGE_REL_BASED_DIR64 10

#define IMAGE_REL_BASED_HIGH 1

#define IMAGE_REL_BASED_HIGHADJ 4

#define IMAGE_REL_BASED_HIGHLOW 3

#define IMAGE_REL_BASED_IA64_IMM64 9

#define IMAGE_REL_BASED_LOW 2

#define IMAGE_REL_BASED_MIPS_JMPADDR 5

#define IMAGE_REL_BASED_MIPS_JMPADDR16 9

#define IMAGE_REL_CEE_ABSOLUTE 0

#define IMAGE_REL_CEE_ADDR32 1

#define IMAGE_REL_CEE_ADDR32NB 3

#define IMAGE_REL_CEE_ADDR64 2

#define IMAGE_REL_CEE_SECREL 5

#define IMAGE_REL_CEE_SECTION 4

#define IMAGE_REL_CEE_TOKEN 6

#define IMAGE_REL_CEF_ABSOLUTE 0

#define IMAGE_REL_CEF_ADDR32 1

#define IMAGE_REL_CEF_ADDR32NB 3

#define IMAGE_REL_CEF_ADDR64 2

#define IMAGE_REL_CEF_SECREL 5

#define IMAGE_REL_CEF_SECTION 4

#define IMAGE_REL_CEF_TOKEN 6

#define IMAGE_REL_EBC_ABSOLUTE 0

#define IMAGE_REL_EBC_ADDR32NB 1

#define IMAGE_REL_EBC_REL32 2

#define IMAGE_REL_EBC_SECREL 4

#define IMAGE_REL_EBC_SECTION 3

#define IMAGE_REL_I386_ABSOLUTE 0

#define IMAGE_REL_I386_DIR16 1

#define IMAGE_REL_I386_DIR32 6

#define IMAGE_REL_I386_DIR32NB 7

#define IMAGE_REL_I386_REL16 2

#define IMAGE_REL_I386_REL32 20

#define IMAGE_REL_I386_SECREL 11

#define IMAGE_REL_I386_SECREL7 13

#define IMAGE_REL_I386_SECTION 10

#define IMAGE_REL_I386_SEG12 9

#define IMAGE_REL_I386_TOKEN 12

#define IMAGE_REL_IA64_ABSOLUTE 0

#define IMAGE_REL_IA64_ADDEND 31

#define IMAGE_REL_IA64_DIR32 4

#define IMAGE_REL_IA64_DIR32NB 16

#define IMAGE_REL_IA64_DIR64 5

#define IMAGE_REL_IA64_GPREL22 9

#define IMAGE_REL_IA64_GPREL32 28

#define IMAGE_REL_IA64_IMM14 1

#define IMAGE_REL_IA64_IMM22 2

#define IMAGE_REL_IA64_IMM64 3

#define IMAGE_REL_IA64_IMMGPREL64 26

#define IMAGE_REL_IA64_LTOFF22 10

#define IMAGE_REL_IA64_PCREL21B 6

#define IMAGE_REL_IA64_PCREL21F 8

#define IMAGE_REL_IA64_PCREL21M 7

#define IMAGE_REL_IA64_PCREL60B 22

#define IMAGE_REL_IA64_PCREL60F 23

#define IMAGE_REL_IA64_PCREL60I 24

#define IMAGE_REL_IA64_PCREL60M 25

#define IMAGE_REL_IA64_PCREL60X 21

#define IMAGE_REL_IA64_SECREL22 12

#define IMAGE_REL_IA64_SECREL32 14

#define IMAGE_REL_IA64_SECREL64I 13

#define IMAGE_REL_IA64_SECTION 11

#define IMAGE_REL_IA64_SREL14 17

#define IMAGE_REL_IA64_SREL22 18

#define IMAGE_REL_IA64_SREL32 19

#define IMAGE_REL_IA64_TOKEN 27

#define IMAGE_REL_IA64_UREL32 20

#define IMAGE_REL_M32R_ABSOLUTE 0

#define IMAGE_REL_M32R_ADDR24 3

#define IMAGE_REL_M32R_ADDR32 1

#define IMAGE_REL_M32R_ADDR32NB 2

#define IMAGE_REL_M32R_GPREL16 4

#define IMAGE_REL_M32R_PAIR 11

#define IMAGE_REL_M32R_PCREL16 6

#define IMAGE_REL_M32R_PCREL24 5

#define IMAGE_REL_M32R_PCREL8 7

#define IMAGE_REL_M32R_REFHALF 8

#define IMAGE_REL_M32R_REFHI 9

#define IMAGE_REL_M32R_REFLO 10

#define IMAGE_REL_M32R_SECREL32 13

#define IMAGE_REL_M32R_SECTION 12

#define IMAGE_REL_M32R_TOKEN 14

#define IMAGE_REL_MIPS_ABSOLUTE 0

#define IMAGE_REL_MIPS_GPREL 6

#define IMAGE_REL_MIPS_JMPADDR 3

#define IMAGE_REL_MIPS_JMPADDR16 16

#define IMAGE_REL_MIPS_LITERAL 7

#define IMAGE_REL_MIPS_PAIR 37

#define IMAGE_REL_MIPS_REFHALF 1

#define IMAGE_REL_MIPS_REFHI 4

#define IMAGE_REL_MIPS_REFLO 5

#define IMAGE_REL_MIPS_REFWORD 2

#define IMAGE_REL_MIPS_REFWORDNB 34

#define IMAGE_REL_MIPS_SECREL 11

#define IMAGE_REL_MIPS_SECRELHI 13

#define IMAGE_REL_MIPS_SECRELLO 12

#define IMAGE_REL_MIPS_SECTION 10

#define IMAGE_REL_MIPS_TOKEN 14

#define IMAGE_REL_PPC_ABSOLUTE 0

#define IMAGE_REL_PPC_ADDR14 5

#define IMAGE_REL_PPC_ADDR16 4

#define IMAGE_REL_PPC_ADDR24 3

#define IMAGE_REL_PPC_ADDR32 2

#define IMAGE_REL_PPC_ADDR32NB 10

#define IMAGE_REL_PPC_ADDR64 1

#define IMAGE_REL_PPC_BRNTAKEN 1024

#define IMAGE_REL_PPC_BRTAKEN 512

#define IMAGE_REL_PPC_GPREL 21

#define IMAGE_REL_PPC_IFGLUE 13

#define IMAGE_REL_PPC_IMGLUE 14

#define IMAGE_REL_PPC_NEG 256

#define IMAGE_REL_PPC_PAIR 18

#define IMAGE_REL_PPC_REFHI 16

#define IMAGE_REL_PPC_REFLO 17

#define IMAGE_REL_PPC_REL14 7

#define IMAGE_REL_PPC_REL24 6

#define IMAGE_REL_PPC_SECREL 11

#define IMAGE_REL_PPC_SECREL16 15

#define IMAGE_REL_PPC_SECRELHI 20

#define IMAGE_REL_PPC_SECRELLO 19

#define IMAGE_REL_PPC_SECTION 12

#define IMAGE_REL_PPC_TOCDEFN 2048

#define IMAGE_REL_PPC_TOCREL14 9

#define IMAGE_REL_PPC_TOCREL16 8

#define IMAGE_REL_PPC_TOKEN 22

#define IMAGE_REL_PPC_TYPEMASK 255

#define IMAGE_REL_SH3_ABSOLUTE 0

#define IMAGE_REL_SH3_DIRECT16 1

#define IMAGE_REL_SH3_DIRECT32 2

#define IMAGE_REL_SH3_DIRECT32_NB 16

#define IMAGE_REL_SH3_DIRECT4 6

#define IMAGE_REL_SH3_DIRECT4_LONG 8

#define IMAGE_REL_SH3_DIRECT4_WORD 7

#define IMAGE_REL_SH3_DIRECT8 3

#define IMAGE_REL_SH3_DIRECT8_LONG 5

#define IMAGE_REL_SH3_DIRECT8_WORD 4

#define IMAGE_REL_SH3_GPREL4_LONG 17

#define IMAGE_REL_SH3_PCREL12_WORD 11

#define IMAGE_REL_SH3_PCREL8_LONG 10

#define IMAGE_REL_SH3_PCREL8_WORD 9

#define IMAGE_REL_SH3_SECREL 15

#define IMAGE_REL_SH3_SECTION 14

#define IMAGE_REL_SH3_SIZEOF_SECTION 13

#define IMAGE_REL_SH3_STARTOF_SECTION 12

#define IMAGE_REL_SH3_TOKEN 18

#define IMAGE_REL_SH_NOMODE 32768

#define IMAGE_REL_SHM_PAIR 24

#define IMAGE_REL_SHM_PCRELPT 19

#define IMAGE_REL_SHM_REFHALF 21

#define IMAGE_REL_SHM_REFLO 20

#define IMAGE_REL_SHM_RELHALF 23

#define IMAGE_REL_SHM_RELLO 22

#define IMAGE_RESOURCE_DATA_IS_DIRECTORY 2147483648

#define IMAGE_RESOURCE_NAME_IS_STRING 2147483648

#define IMAGE_ROM_OPTIONAL_HDR_MAGIC 263

#define IMAGE_SCN_ALIGN_1024BYTES 11534336

#define IMAGE_SCN_ALIGN_128BYTES 8388608

#define IMAGE_SCN_ALIGN_16BYTES 5242880

#define IMAGE_SCN_ALIGN_1BYTES 1048576

#define IMAGE_SCN_ALIGN_2048BYTES 12582912

#define IMAGE_SCN_ALIGN_256BYTES 9437184

#define IMAGE_SCN_ALIGN_2BYTES 2097152

#define IMAGE_SCN_ALIGN_32BYTES 6291456

#define IMAGE_SCN_ALIGN_4096BYTES 13631488

#define IMAGE_SCN_ALIGN_4BYTES 3145728

#define IMAGE_SCN_ALIGN_512BYTES 10485760

#define IMAGE_SCN_ALIGN_64BYTES 7340032

#define IMAGE_SCN_ALIGN_8192BYTES 14680064

#define IMAGE_SCN_ALIGN_8BYTES 4194304

#define IMAGE_SCN_ALIGN_MASK 15728640

#define IMAGE_SCN_CNT_CODE 32

#define IMAGE_SCN_CNT_INITIALIZED_DATA 64

#define IMAGE_SCN_CNT_UNINITIALIZED_DATA 128

#define IMAGE_SCN_GPREL 32768

#define IMAGE_SCN_LNK_COMDAT 4096

#define IMAGE_SCN_LNK_INFO 512

#define IMAGE_SCN_LNK_NRELOC_OVFL 16777216

#define IMAGE_SCN_LNK_OTHER 256

#define IMAGE_SCN_LNK_REMOVE 2048

#define IMAGE_SCN_MEM_16BIT 131072

#define IMAGE_SCN_MEM_DISCARDABLE 33554432

#define IMAGE_SCN_MEM_EXECUTE 536870912

#define IMAGE_SCN_MEM_FARDATA 32768

#define IMAGE_SCN_MEM_LOCKED 262144

#define IMAGE_SCN_MEM_NOT_CACHED 67108864

#define IMAGE_SCN_MEM_NOT_PAGED 134217728

#define IMAGE_SCN_MEM_PRELOAD 524288

#define IMAGE_SCN_MEM_PURGEABLE 131072

#define IMAGE_SCN_MEM_READ 1073741824

#define IMAGE_SCN_MEM_SHARED 268435456

#define IMAGE_SCN_MEM_WRITE 2147483648

#define IMAGE_SCN_NO_DEFER_SPEC_EXC 16384

#define IMAGE_SCN_SCALE_INDEX 1

#define IMAGE_SCN_TYPE_NO_PAD 8

#define IMAGE_SEPARATE_DEBUG_FLAGS_MASK 32768

#define IMAGE_SEPARATE_DEBUG_MISMATCH 32768

#define IMAGE_SEPARATE_DEBUG_SIGNATURE 18756

#define IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR 60

#define IMAGE_SIZEOF_FILE_HEADER 20

#define IMAGE_SIZEOF_SECTION_HEADER 40

#define IMAGE_SIZEOF_SHORT_NAME 8

#define IMAGE_SIZEOF_SYMBOL 18

#define IMAGE_SUBSYSTEM_EFI_APPLICATION 10

#define IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 11

#define IMAGE_SUBSYSTEM_EFI_ROM 13

#define IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 12

#define IMAGE_SUBSYSTEM_NATIVE 1

#define IMAGE_SUBSYSTEM_NATIVE_WINDOWS 8

#define IMAGE_SUBSYSTEM_OS2_CUI 5

#define IMAGE_SUBSYSTEM_POSIX_CUI 7

#define IMAGE_SUBSYSTEM_UNKNOWN 0

#define IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION 16

#define IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 9

#define IMAGE_SUBSYSTEM_WINDOWS_CUI 3

#define IMAGE_SUBSYSTEM_WINDOWS_GUI 2

#define IMAGE_SUBSYSTEM_XBOX 14

#define IMAGE_SYM_ABSOLUTE -1

#define IMAGE_SYM_CLASS_ARGUMENT 9

#define IMAGE_SYM_CLASS_AUTOMATIC 1

#define IMAGE_SYM_CLASS_BIT_FIELD 18

#define IMAGE_SYM_CLASS_BLOCK 100

#define IMAGE_SYM_CLASS_CLR_TOKEN 107

#define IMAGE_SYM_CLASS_END_OF_FUNCTION -1

#define IMAGE_SYM_CLASS_END_OF_STRUCT 102

#define IMAGE_SYM_CLASS_ENUM_TAG 15

#define IMAGE_SYM_CLASS_EXTERNAL 2

#define IMAGE_SYM_CLASS_EXTERNAL_DEF 5

#define IMAGE_SYM_CLASS_FAR_EXTERNAL 68

#define IMAGE_SYM_CLASS_FILE 103

#define IMAGE_SYM_CLASS_FUNCTION 101

#define IMAGE_SYM_CLASS_LABEL 6

#define IMAGE_SYM_CLASS_MEMBER_OF_ENUM 16

#define IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 8

#define IMAGE_SYM_CLASS_MEMBER_OF_UNION 11

#define IMAGE_SYM_CLASS_NULL 0

#define IMAGE_SYM_CLASS_REGISTER 4

#define IMAGE_SYM_CLASS_REGISTER_PARAM 17

#define IMAGE_SYM_CLASS_SECTION 104

#define IMAGE_SYM_CLASS_STATIC 3

#define IMAGE_SYM_CLASS_STRUCT_TAG 10

#define IMAGE_SYM_CLASS_TYPE_DEFINITION 13

#define IMAGE_SYM_CLASS_UNDEFINED_LABEL 7

#define IMAGE_SYM_CLASS_UNDEFINED_STATIC 14

#define IMAGE_SYM_CLASS_UNION_TAG 12

#define IMAGE_SYM_CLASS_WEAK_EXTERNAL 105

#define IMAGE_SYM_DEBUG -2

#define IMAGE_SYM_DTYPE_ARRAY 3

#define IMAGE_SYM_DTYPE_FUNCTION 2

#define IMAGE_SYM_DTYPE_NULL 0

#define IMAGE_SYM_DTYPE_POINTER 1

#define IMAGE_SYM_SECTION_MAX 65279

#define IMAGE_SYM_SECTION_MAX_EX 2147483647

#define IMAGE_SYM_TYPE_BYTE 12

#define IMAGE_SYM_TYPE_CHAR 2

#define IMAGE_SYM_TYPE_DOUBLE 7

#define IMAGE_SYM_TYPE_DWORD 15

#define IMAGE_SYM_TYPE_ENUM 10

#define IMAGE_SYM_TYPE_FLOAT 6

#define IMAGE_SYM_TYPE_INT 4

#define IMAGE_SYM_TYPE_LONG 5

#define IMAGE_SYM_TYPE_MOE 11

#define IMAGE_SYM_TYPE_NULL 0

#define IMAGE_SYM_TYPE_PCODE 32768

#define IMAGE_SYM_TYPE_SHORT 3

#define IMAGE_SYM_TYPE_STRUCT 8

#define IMAGE_SYM_TYPE_UINT 14

#define IMAGE_SYM_TYPE_UNION 9

#define IMAGE_SYM_TYPE_VOID 1

#define IMAGE_SYM_TYPE_WORD 13

#define IMAGE_SYM_UNDEFINED 0

#define IMAGE_VXD_SIGNATURE 17740

#define IMAGE_WEAK_EXTERN_SEARCH_ALIAS 3

#define IMAGE_WEAK_EXTERN_SEARCH_LIBRARY 2

#define IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY 1

#define IMPORT_OBJECT_HDR_SIG2 65535

#define INHERIT_ONLY_ACE 8

#define INHERITED_ACE 16

#define INVALID_OS_COUNT 65535

#define IO_COMPLETION_ALL_ACCESS 2031619

#define IO_COMPLETION_MODIFY_STATE 2

#define IO_REPARSE_TAG_CSV 2147483657

#define IO_REPARSE_TAG_DFS 2147483658

#define IO_REPARSE_TAG_DFSR 2147483666

#define IO_REPARSE_TAG_HSM 3221225476

#define IO_REPARSE_TAG_HSM2 2147483654

#define IO_REPARSE_TAG_MOUNT_POINT 2684354563

#define IO_REPARSE_TAG_RESERVED_ONE 1

#define IO_REPARSE_TAG_RESERVED_RANGE 1

#define IO_REPARSE_TAG_RESERVED_ZERO 0

#define IO_REPARSE_TAG_SIS 2147483655

#define IO_REPARSE_TAG_SYMLINK 2684354572

#define IO_REPARSE_TAG_WIM 2147483656

#define IS_TEXT_UNICODE_ASCII16 1

#define IS_TEXT_UNICODE_CONTROLS 4

#define IS_TEXT_UNICODE_DBCS_LEADBYTE 1024

#define IS_TEXT_UNICODE_ILLEGAL_CHARS 256

#define IS_TEXT_UNICODE_NOT_ASCII_MASK 61440

#define IS_TEXT_UNICODE_NOT_UNICODE_MASK 3840

#define IS_TEXT_UNICODE_NULL_BYTES 4096

#define IS_TEXT_UNICODE_ODD_LENGTH 512

#define IS_TEXT_UNICODE_REVERSE_ASCII16 16

#define IS_TEXT_UNICODE_REVERSE_CONTROLS 64

#define IS_TEXT_UNICODE_REVERSE_MASK 240

#define IS_TEXT_UNICODE_REVERSE_SIGNATURE 128

#define IS_TEXT_UNICODE_REVERSE_STATISTICS 32

#define IS_TEXT_UNICODE_SIGNATURE 8

#define IS_TEXT_UNICODE_STATISTICS 2

#define IS_TEXT_UNICODE_UNICODE_MASK 15

#define JOB_OBJECT_ASSIGN_PROCESS 1

#define JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS 255

#define JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS 32767

#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS 8

#define JOB_OBJECT_LIMIT_AFFINITY 16

#define JOB_OBJECT_LIMIT_BREAKAWAY_OK 2048

#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 1024

#define JOB_OBJECT_LIMIT_JOB_MEMORY 512

#define JOB_OBJECT_LIMIT_JOB_TIME 4

#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 8192

#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 64

#define JOB_OBJECT_LIMIT_PRIORITY_CLASS 32

#define JOB_OBJECT_LIMIT_PROCESS_MEMORY 256

#define JOB_OBJECT_LIMIT_PROCESS_TIME 2

#define JOB_OBJECT_LIMIT_RESERVED3 32768

#define JOB_OBJECT_LIMIT_RESERVED4 65536

#define JOB_OBJECT_LIMIT_RESERVED5 131072

#define JOB_OBJECT_LIMIT_RESERVED6 262144

#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS 128

#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 4096

#define JOB_OBJECT_LIMIT_SUBSET_AFFINITY 16384

#define JOB_OBJECT_LIMIT_VALID_FLAGS 524287

#define JOB_OBJECT_LIMIT_WORKINGSET 1

#define JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS 8

#define JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT 3

#define JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO 4

#define JOB_OBJECT_MSG_END_OF_JOB_TIME 1

#define JOB_OBJECT_MSG_END_OF_PROCESS_TIME 2

#define JOB_OBJECT_MSG_EXIT_PROCESS 7

#define JOB_OBJECT_MSG_JOB_MEMORY_LIMIT 10

#define JOB_OBJECT_MSG_NEW_PROCESS 6

#define JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT 9

#define JOB_OBJECT_POST_AT_END_OF_JOB 1

#define JOB_OBJECT_QUERY 4

#define JOB_OBJECT_RESERVED_LIMIT_VALID_FLAGS 524287

#define JOB_OBJECT_SECURITY_FILTER_TOKENS 8

#define JOB_OBJECT_SECURITY_NO_ADMIN 1

#define JOB_OBJECT_SECURITY_ONLY_TOKEN 4

#define JOB_OBJECT_SECURITY_RESTRICTED_TOKEN 2

#define JOB_OBJECT_SECURITY_VALID_FLAGS 15

#define JOB_OBJECT_SET_ATTRIBUTES 2

#define JOB_OBJECT_SET_SECURITY_ATTRIBUTES 16

#define JOB_OBJECT_TERMINATE 8

#define JOB_OBJECT_TERMINATE_AT_END_OF_JOB 0

#define JOB_OBJECT_UI_VALID_FLAGS 255

#define JOB_OBJECT_UILIMIT_ALL 255

#define JOB_OBJECT_UILIMIT_DESKTOP 64

#define JOB_OBJECT_UILIMIT_DISPLAYSETTINGS 16

#define JOB_OBJECT_UILIMIT_EXITWINDOWS 128

#define JOB_OBJECT_UILIMIT_GLOBALATOMS 32

#define JOB_OBJECT_UILIMIT_HANDLES 1

#define JOB_OBJECT_UILIMIT_NONE 0

#define JOB_OBJECT_UILIMIT_READCLIPBOARD 2

#define JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS 8

#define JOB_OBJECT_UILIMIT_WRITECLIPBOARD 4

#define KEY_CREATE_LINK 32

#define KEY_CREATE_SUB_KEY 4

#define KEY_ENUMERATE_SUB_KEYS 8

#define KEY_NOTIFY 16

#define KEY_QUERY_VALUE 1

#define KEY_SET_VALUE 2

#define KEY_WOW64_32KEY 512

#define KEY_WOW64_64KEY 256

#define KEY_WOW64_RES 768

#define LABEL_SECURITY_INFORMATION 16

#define LANG_AFRIKAANS 54

#define LANG_ALBANIAN 28

#define LANG_ALSATIAN 132

#define LANG_AMHARIC 94

#define LANG_ARABIC 1

#define LANG_ARMENIAN 43

#define LANG_ASSAMESE 77

#define LANG_AZERI 44

#define LANG_BASHKIR 109

#define LANG_BASQUE 45

#define LANG_BELARUSIAN 35

#define LANG_BENGALI 69

#define LANG_BOSNIAN 26

#define LANG_BOSNIAN_NEUTRAL 30746

#define LANG_BRETON 126

#define LANG_BULGARIAN 2

#define LANG_CATALAN 3

#define LANG_CHINESE 4

#define LANG_CHINESE_SIMPLIFIED 4

#define LANG_CHINESE_TRADITIONAL 31748

#define LANG_CORSICAN 131

#define LANG_CROATIAN 26

#define LANG_CZECH 5

#define LANG_DANISH 6

#define LANG_DARI 140

#define LANG_DIVEHI 101

#define LANG_DUTCH 19

#define LANG_ENGLISH 9

#define LANG_ESTONIAN 37

#define LANG_FAEROESE 56

#define LANG_FARSI 41

#define LANG_FILIPINO 100

#define LANG_FINNISH 11

#define LANG_FRENCH 12

#define LANG_FRISIAN 98

#define LANG_GALICIAN 86

#define LANG_GEORGIAN 55

#define LANG_GERMAN 7

#define LANG_GREEK 8

#define LANG_GREENLANDIC 111

#define LANG_GUJARATI 71

#define LANG_HAUSA 104

#define LANG_HEBREW 13

#define LANG_HINDI 57

#define LANG_HUNGARIAN 14

#define LANG_ICELANDIC 15

#define LANG_IGBO 112

#define LANG_INDONESIAN 33

#define LANG_INUKTITUT 93

#define LANG_INVARIANT 127

#define LANG_IRISH 60

#define LANG_ITALIAN 16

#define LANG_JAPANESE 17

#define LANG_KANNADA 75

#define LANG_KASHMIRI 96

#define LANG_KAZAK 63

#define LANG_KHMER 83

#define LANG_KICHE 134

#define LANG_KINYARWANDA 135

#define LANG_KONKANI 87

#define LANG_KOREAN 18

#define LANG_KYRGYZ 64

#define LANG_LAO 84

#define LANG_LATVIAN 38

#define LANG_LITHUANIAN 39

#define LANG_LOWER_SORBIAN 46

#define LANG_LUXEMBOURGISH 110

#define LANG_MACEDONIAN 47

#define LANG_MALAY 62

#define LANG_MALAYALAM 76

#define LANG_MALTESE 58

#define LANG_MANIPURI 88

#define LANG_MAORI 129

#define LANG_MAPUDUNGUN 122

#define LANG_MARATHI 78

#define LANG_MOHAWK 124

#define LANG_MONGOLIAN 80

#define LANG_NEPALI 97

#define LANG_NEUTRAL 0

#define LANG_NORWEGIAN 20

#define LANG_OCCITAN 130

#define LANG_ORIYA 72

#define LANG_PASHTO 99

#define LANG_PERSIAN 41

#define LANG_POLISH 21

#define LANG_PORTUGUESE 22

#define LANG_PUNJABI 70

#define LANG_QUECHUA 107

#define LANG_ROMANIAN 24

#define LANG_ROMANSH 23

#define LANG_RUSSIAN 25

#define LANG_SAMI 59

#define LANG_SANSKRIT 79

#define LANG_SCOTTISH_GAELIC 145

#define LANG_SERBIAN 26

#define LANG_SERBIAN_NEUTRAL 31770

#define LANG_SINDHI 89

#define LANG_SINHALESE 91

#define LANG_SLOVAK 27

#define LANG_SLOVENIAN 36

#define LANG_SOTHO 108

#define LANG_SPANISH 10

#define LANG_SWAHILI 65

#define LANG_SWEDISH 29

#define LANG_SYRIAC 90

#define LANG_SYSTEM_DEFAULT 2048

#define LANG_TAJIK 40

#define LANG_TAMAZIGHT 95

#define LANG_TAMIL 73

#define LANG_TATAR 68

#define LANG_TELUGU 74

#define LANG_THAI 30

#define LANG_TIBETAN 81

#define LANG_TIGRIGNA 115

#define LANG_TSWANA 50

#define LANG_TURKISH 31

#define LANG_TURKMEN 66

#define LANG_UIGHUR 128

#define LANG_UKRAINIAN 34

#define LANG_UPPER_SORBIAN 46

#define LANG_URDU 32

#define LANG_USER_DEFAULT 1024

#define LANG_UZBEK 67

#define LANG_VIETNAMESE 42

#define LANG_WELSH 82

#define LANG_WOLOF 136

#define LANG_XHOSA 52

#define LANG_YAKUT 133

#define LANG_YI 120

#define LANG_YORUBA 106

#define LANG_ZULU 53

#define LOCALE_CUSTOM_DEFAULT 3072

#define LOCALE_CUSTOM_UI_DEFAULT 5120

#define LOCALE_CUSTOM_UNSPECIFIED 4096

#define LOCALE_INVARIANT 127

#define LOCALE_NAME_MAX_LENGTH 85

#define LOCALE_NEUTRAL 0

#define LOCALE_SYSTEM_DEFAULT 2048

#define LOCALE_USER_DEFAULT 1024

#define LTP_PC_SMT 1

#define LUA_TOKEN 4

#define MAILSLOT_NO_MESSAGE -1

#define MAILSLOT_WAIT_FOREVER -1

#define MAX_ACL_REVISION 4

#define MAX_HW_COUNTERS 16

#define MAX_SUPPORTED_OS_NUM 4

#define MAX_UCSCHAR 1114111

#define MAXBYTE 255

#define MAXCHAR 127

#define MAXDWORD 4294967295

#define MAXIMUM_ALLOWED 33554432

#define MAXIMUM_PROC_PER_GROUP 32

#define MAXIMUM_PROCESSORS 32

#define MAXIMUM_REPARSE_DATA_BUFFER_SIZE 16384

#define MAXIMUM_SUPPORTED_EXTENSION 512

#define MAXIMUM_SUSPEND_COUNT 127

#define MAXIMUM_WAIT_OBJECTS 64

#define MAXIMUM_XSTATE_FEATURES 64

#define MAXLOGICALLOGNAMESIZE 256

#define MAXLONG 2147483647

#define MAXSHORT 32767

#define MAXWORD 65535

#define MEM_4MB_PAGES 2147483648

#define MEM_COMMIT 4096

#define MEM_DECOMMIT 16384

#define MEM_FREE 65536

#define MEM_IMAGE 16777216

#define MEM_LARGE_PAGES 536870912

#define MEM_MAPPED 262144

#define MEM_PHYSICAL 4194304

#define MEM_PRIVATE 131072

#define MEM_RELEASE 32768

#define MEM_RESERVE 8192

#define MEM_RESET 524288

#define MEM_ROTATE 8388608

#define MEM_TOP_DOWN 1048576

#define MEM_WRITE_WATCH 2097152

#define MEMORY_ALLOCATION_ALIGNMENT 8

#define MESSAGE_RESOURCE_UNICODE 1

#define MIN_ACL_REVISION 2

#define MIN_UCSCHAR 0

#define MINCHAR 128

#define MINLONG 2147483648

#define MINSHORT 32768

#define MS_PPM_SOFTWARE_ALL 1

#define MUTANT_QUERY_STATE 1

#define N_BTMASK 15

#define N_BTSHFT 4

#define N_TMASK 48

#define N_TMASK1 192

#define N_TMASK2 240

#define N_TSHIFT 2

#define NLS_VALID_LOCALE_MASK 1048575

#define NO_PROPAGATE_INHERIT_ACE 4

#define NON_PAGED_DEBUG_SIGNATURE 18766

#define NOP_FUNCTION 0

#define NUM_DISCHARGE_POLICIES 4

#define OBJECT_INHERIT_ACE 1

#define OWNER_SECURITY_INFORMATION 1

#define PAGE_EXECUTE 16

#define PAGE_EXECUTE_READ 32

#define PAGE_EXECUTE_READWRITE 64

#define PAGE_EXECUTE_WRITECOPY 128

#define PAGE_GUARD 256

#define PAGE_NOACCESS 1

#define PAGE_NOCACHE 512

#define PAGE_READONLY 2

#define PAGE_READWRITE 4

#define PAGE_WRITECOMBINE 1024

#define PAGE_WRITECOPY 8

#define PcTeb 24

#define PERFORMANCE_DATA_VERSION 1

#define PERFSTATE_POLICY_CHANGE_IDEAL 0

#define PERFSTATE_POLICY_CHANGE_MAX 2

#define PERFSTATE_POLICY_CHANGE_ROCKET 2

#define PERFSTATE_POLICY_CHANGE_SINGLE 1

#define PF_3DNOW_INSTRUCTIONS_AVAILABLE 7

#define PF_ALPHA_BYTE_INSTRUCTIONS 5

#define PF_CHANNELS_ENABLED 16

#define PF_COMPARE64_EXCHANGE128 15

#define PF_COMPARE_EXCHANGE128 14

#define PF_COMPARE_EXCHANGE_DOUBLE 2

#define PF_FLOATING_POINT_EMULATED 1

#define PF_FLOATING_POINT_PRECISION_ERRATA 0

#define PF_MMX_INSTRUCTIONS_AVAILABLE 3

#define PF_NX_ENABLED 12

#define PF_PAE_ENABLED 9

#define PF_PPC_MOVEMEM_64BIT_OK 4

#define PF_RDTSC_INSTRUCTION_AVAILABLE 8

#define PF_SSE3_INSTRUCTIONS_AVAILABLE 13

#define PF_SSE_DAZ_MODE_AVAILABLE 11

#define PF_XMMI64_INSTRUCTIONS_AVAILABLE 10

#define PF_XMMI_INSTRUCTIONS_AVAILABLE 6

#define PF_XSAVE_ENABLED 17

#define PO_THROTTLE_ADAPTIVE 3

#define PO_THROTTLE_CONSTANT 1

#define PO_THROTTLE_DEGRADE 2

#define PO_THROTTLE_MAXIMUM 4

#define PO_THROTTLE_NONE 0

#define POLICY_AUDIT_SUBCATEGORY_COUNT 53

#define POWER_ACTION_CRITICAL 2147483648

#define POWER_ACTION_DISABLE_WAKES 1073741824

#define POWER_ACTION_LIGHTEST_FIRST 268435456

#define POWER_ACTION_LOCK_CONSOLE 536870912

#define POWER_ACTION_OVERRIDE_APPS 4

#define POWER_ACTION_PSEUDO_TRANSITION 134217728

#define POWER_ACTION_QUERY_ALLOWED 1

#define POWER_ACTION_UI_ALLOWED 2

#define POWER_DEVICE_IDLE_POLICY_CONSERVATIVE 1

#define POWER_DEVICE_IDLE_POLICY_PERFORMANCE 0

#define POWER_FORCE_TRIGGER_RESET 2147483648

#define POWER_LEVEL_USER_NOTIFY_EXEC 4

#define POWER_LEVEL_USER_NOTIFY_SOUND 2

#define POWER_LEVEL_USER_NOTIFY_TEXT 1

#define POWER_REQUEST_CONTEXT_DETAILED_STRING 2

#define POWER_REQUEST_CONTEXT_SIMPLE_STRING 1

#define POWER_REQUEST_CONTEXT_VERSION 0

#define POWER_SETTING_VALUE_VERSION 1

#define POWER_SYSTEM_MAXIMUM 7

#define POWER_USER_NOTIFY_BUTTON 8

#define POWER_USER_NOTIFY_FORCED_SHUTDOWN 32

#define POWER_USER_NOTIFY_SHUTDOWN 16

#define PowerRequestMaximum 3

#define PPM_FIRMWARE_ACPI1C2 1

#define PPM_FIRMWARE_ACPI1C3 2

#define PPM_FIRMWARE_ACPI1TSTATES 4

#define PPM_FIRMWARE_CSD 16

#define PPM_FIRMWARE_CST 8

#define PPM_FIRMWARE_PCCH 16384

#define PPM_FIRMWARE_PCCP 32768

#define PPM_FIRMWARE_PCT 32

#define PPM_FIRMWARE_PPC 256

#define PPM_FIRMWARE_PSD 512

#define PPM_FIRMWARE_PSS 64

#define PPM_FIRMWARE_PTC 1024

#define PPM_FIRMWARE_TPC 4096

#define PPM_FIRMWARE_TSD 8192

#define PPM_FIRMWARE_TSS 2048

#define PPM_FIRMWARE_XPSS 128

#define PRAGMA_DEPRECATED_DDK 0

#define PRIVILEGE_SET_ALL_NECESSARY 1

#define PROC_IDLE_BUCKET_COUNT 6

#define PROC_IDLE_BUCKET_COUNT_EX 16

#define PROCESS_CREATE_PROCESS 128

#define PROCESS_CREATE_THREAD 2

#define PROCESS_DUP_HANDLE 64

#define PROCESS_QUERY_INFORMATION 1024

#define PROCESS_QUERY_LIMITED_INFORMATION 4096

#define PROCESS_SET_INFORMATION 512

#define PROCESS_SET_QUOTA 256

#define PROCESS_SET_SESSIONID 4

#define PROCESS_SUSPEND_RESUME 2048

#define PROCESS_TERMINATE 1

#define PROCESS_VM_OPERATION 8

#define PROCESS_VM_READ 16

#define PROCESS_VM_WRITE 32

#define PROCESSOR_ALPHA_21064 21064

#define PROCESSOR_AMD_X8664 8664

#define PROCESSOR_ARCHITECTURE_ALPHA 2

#define PROCESSOR_ARCHITECTURE_ALPHA64 7

#define PROCESSOR_ARCHITECTURE_AMD64 9

#define PROCESSOR_ARCHITECTURE_ARM 5

#define PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 10

#define PROCESSOR_ARCHITECTURE_IA64 6

#define PROCESSOR_ARCHITECTURE_INTEL 0

#define PROCESSOR_ARCHITECTURE_MIPS 1

#define PROCESSOR_ARCHITECTURE_MSIL 8

#define PROCESSOR_ARCHITECTURE_PPC 3

#define PROCESSOR_ARCHITECTURE_SHX 4

#define PROCESSOR_ARCHITECTURE_UNKNOWN 65535

#define PROCESSOR_ARM720 1824

#define PROCESSOR_ARM820 2080

#define PROCESSOR_ARM920 2336

#define PROCESSOR_ARM_7TDMI 70001

#define PROCESSOR_HITACHI_SH3 10003

#define PROCESSOR_HITACHI_SH3E 10004

#define PROCESSOR_HITACHI_SH4 10005

#define PROCESSOR_IDLESTATE_POLICY_COUNT 3

#define PROCESSOR_INTEL_386 386

#define PROCESSOR_INTEL_486 486

#define PROCESSOR_INTEL_IA64 2200

#define PROCESSOR_INTEL_PENTIUM 586

#define PROCESSOR_MIPS_R4000 4000

#define PROCESSOR_MOTOROLA_821 821

#define PROCESSOR_OPTIL 18767

#define PROCESSOR_PERF_BOOST_POLICY_DISABLED 0

#define PROCESSOR_PERF_BOOST_POLICY_MAX 100

#define PROCESSOR_PPC_601 601

#define PROCESSOR_PPC_603 603

#define PROCESSOR_PPC_604 604

#define PROCESSOR_PPC_620 620

#define PROCESSOR_SHx_SH3 103

#define PROCESSOR_SHx_SH4 104

#define PROCESSOR_STRONGARM 2577

#define PRODUCT_BUSINESS 6

#define PRODUCT_BUSINESS_N 16

#define PRODUCT_CLUSTER_SERVER 18

#define PRODUCT_CLUSTER_SERVER_V 64

#define PRODUCT_DATACENTER_SERVER 8

#define PRODUCT_DATACENTER_SERVER_CORE 12

#define PRODUCT_DATACENTER_SERVER_CORE_V 39

#define PRODUCT_DATACENTER_SERVER_V 37

#define PRODUCT_EMBEDDED 65

#define PRODUCT_ENTERPRISE 4

#define PRODUCT_ENTERPRISE_E 70

#define PRODUCT_ENTERPRISE_N 27

#define PRODUCT_ENTERPRISE_SERVER 10

#define PRODUCT_ENTERPRISE_SERVER_CORE 14

#define PRODUCT_ENTERPRISE_SERVER_CORE_V 41

#define PRODUCT_ENTERPRISE_SERVER_IA64 15

#define PRODUCT_ENTERPRISE_SERVER_V 38

#define PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL 60

#define PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC 62

#define PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT 59

#define PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC 61

#define PRODUCT_HOME_BASIC 2

#define PRODUCT_HOME_BASIC_E 67

#define PRODUCT_HOME_BASIC_N 5

#define PRODUCT_HOME_PREMIUM 3

#define PRODUCT_HOME_PREMIUM_E 68

#define PRODUCT_HOME_PREMIUM_N 26

#define PRODUCT_HOME_PREMIUM_SERVER 34

#define PRODUCT_HOME_SERVER 19

#define PRODUCT_HYPERV 42

#define PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT 30

#define PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING 32

#define PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY 31

#define PRODUCT_PROFESSIONAL 48

#define PRODUCT_PROFESSIONAL_E 69

#define PRODUCT_PROFESSIONAL_N 49

#define PRODUCT_SB_SOLUTION_SERVER 50

#define PRODUCT_SB_SOLUTION_SERVER_EM 54

#define PRODUCT_SERVER_FOR_SB_SOLUTIONS 51

#define PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM 55

#define PRODUCT_SERVER_FOR_SMALLBUSINESS 24

#define PRODUCT_SERVER_FOR_SMALLBUSINESS_V 35

#define PRODUCT_SERVER_FOUNDATION 33

#define PRODUCT_SMALLBUSINESS_SERVER 9

#define PRODUCT_SMALLBUSINESS_SERVER_PREMIUM 25

#define PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE 63

#define PRODUCT_SOLUTION_EMBEDDEDSERVER 56

#define PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE 57

#define PRODUCT_STANDARD_SERVER 7

#define PRODUCT_STANDARD_SERVER_CORE 13

#define PRODUCT_STANDARD_SERVER_CORE_V 40

#define PRODUCT_STANDARD_SERVER_SOLUTIONS 52

#define PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE 53

#define PRODUCT_STANDARD_SERVER_V 36

#define PRODUCT_STARTER 11

#define PRODUCT_STARTER_E 66

#define PRODUCT_STARTER_N 47

#define PRODUCT_STORAGE_ENTERPRISE_SERVER 23

#define PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE 46

#define PRODUCT_STORAGE_EXPRESS_SERVER 20

#define PRODUCT_STORAGE_EXPRESS_SERVER_CORE 43

#define PRODUCT_STORAGE_STANDARD_SERVER 21

#define PRODUCT_STORAGE_STANDARD_SERVER_CORE 44

#define PRODUCT_STORAGE_WORKGROUP_SERVER 22

#define PRODUCT_STORAGE_WORKGROUP_SERVER_CORE 45

#define PRODUCT_ULTIMATE 1

#define PRODUCT_ULTIMATE_E 71

#define PRODUCT_ULTIMATE_N 28

#define PRODUCT_UNDEFINED 0

#define PRODUCT_UNLICENSED 2882382797

#define PRODUCT_WEB_SERVER 17

#define PRODUCT_WEB_SERVER_CORE 29

#define PROTECTED_DACL_SECURITY_INFORMATION 2147483648

#define PROTECTED_SACL_SECURITY_INFORMATION 1073741824

#define QUOTA_LIMITS_HARDWS_MAX_DISABLE 8

#define QUOTA_LIMITS_HARDWS_MAX_ENABLE 4

#define QUOTA_LIMITS_HARDWS_MIN_DISABLE 2

#define QUOTA_LIMITS_HARDWS_MIN_ENABLE 1

#define QUOTA_LIMITS_USE_DEFAULT_LIMITS 16

#define READ_CONTROL 131072

#define READ_THREAD_PROFILING_FLAG_DISPATCHING 1

#define READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS 2

#define REG_APP_HIVE 16

#define REG_BINARY 3

#define REG_BOOT_HIVE 1024

#define REG_CREATED_NEW_KEY 1

#define REG_DWORD 4

#define REG_DWORD_BIG_ENDIAN 5

#define REG_DWORD_LITTLE_ENDIAN 4

#define REG_EXPAND_SZ 2

#define REG_FORCE_RESTORE 8

#define REG_FORCE_UNLOAD 1

#define REG_FULL_RESOURCE_DESCRIPTOR 9

#define REG_HIVE_EXACT_FILE_GROWTH 128

#define REG_HIVE_NO_RM 256

#define REG_HIVE_SINGLE_LOG 512

#define REG_LATEST_FORMAT 2

#define REG_LINK 6

#define REG_MULTI_SZ 7

#define REG_NO_COMPRESSION 4

#define REG_NO_LAZY_FLUSH 4

#define REG_NONE 0

#define REG_NOTIFY_CHANGE_ATTRIBUTES 2

#define REG_NOTIFY_CHANGE_LAST_SET 4

#define REG_NOTIFY_CHANGE_NAME 1

#define REG_NOTIFY_CHANGE_SECURITY 8

#define REG_OPENED_EXISTING_KEY 2

#define REG_OPTION_BACKUP_RESTORE 4

#define REG_OPTION_CREATE_LINK 2

#define REG_OPTION_NON_VOLATILE 0

#define REG_OPTION_OPEN_LINK 8

#define REG_OPTION_RESERVED 0

#define REG_OPTION_VOLATILE 1

#define REG_PROCESS_PRIVATE 32

#define REG_QWORD 11

#define REG_QWORD_LITTLE_ENDIAN 11

#define REG_REFRESH_HIVE 2

#define REG_RESOURCE_LIST 8

#define REG_RESOURCE_REQUIREMENTS_LIST 10

#define REG_STANDARD_FORMAT 1

#define REG_START_JOURNAL 64

#define REG_SZ 1

#define REG_WHOLE_HIVE_VOLATILE 1

#define RESOURCEMANAGER_COMPLETE_PROPAGATION 64

#define RESOURCEMANAGER_ENLIST 8

#define RESOURCEMANAGER_GET_NOTIFICATION 16

#define RESOURCEMANAGER_QUERY_INFORMATION 1

#define RESOURCEMANAGER_RECOVER 4

#define RESOURCEMANAGER_REGISTER_PROTOCOL 32

#define RESOURCEMANAGER_SET_INFORMATION 2

#define RTL_CONDITION_VARIABLE_LOCKMODE_SHARED 1

#define RTL_CRITICAL_SECTION_ALL_FLAG_BITS 4278190080

#define RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT 1

#define RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN 33554432

#define RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO 16777216

#define RTL_CRITICAL_SECTION_FLAG_RESERVED 4160749568

#define RTL_CRITICAL_SECTION_FLAG_STATIC_INIT 67108864

#define RTL_CRITSECT_TYPE 0

#define RTL_RESOURCE_TYPE 1

#define RTL_RUN_ONCE_ASYNC 2

#define RTL_RUN_ONCE_CHECK_ONLY 1

#define RTL_RUN_ONCE_CTX_RESERVED_BITS 2

#define RTL_RUN_ONCE_INIT_FAILED 4

#define RTL_UMS_VERSION 256

#define SACL_SECURITY_INFORMATION 8

#define SANDBOX_INERT 2

#define SE_DACL_AUTO_INHERIT_REQ 256

#define SE_DACL_AUTO_INHERITED 1024

#define SE_DACL_DEFAULTED 8

#define SE_DACL_PRESENT 4

#define SE_DACL_PROTECTED 4096

#define SE_GROUP_DEFAULTED 2

#define SE_GROUP_ENABLED 4

#define SE_GROUP_ENABLED_BY_DEFAULT 2

#define SE_GROUP_INTEGRITY 32

#define SE_GROUP_INTEGRITY_ENABLED 64

#define SE_GROUP_LOGON_ID 3221225472

#define SE_GROUP_MANDATORY 1

#define SE_GROUP_OWNER 8

#define SE_GROUP_RESOURCE 536870912

#define SE_GROUP_USE_FOR_DENY_ONLY 16

#define SE_OWNER_DEFAULTED 1

#define SE_PRIVILEGE_ENABLED 2

#define SE_PRIVILEGE_ENABLED_BY_DEFAULT 1

#define SE_PRIVILEGE_REMOVED 4

#define SE_PRIVILEGE_USED_FOR_ACCESS 2147483648

#define SE_RM_CONTROL_VALID 16384

#define SE_SACL_AUTO_INHERIT_REQ 512

#define SE_SACL_AUTO_INHERITED 2048

#define SE_SACL_DEFAULTED 32

#define SE_SACL_PRESENT 16

#define SE_SACL_PROTECTED 8192

#define SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE 2

#define SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE 1

#define SE_SECURITY_DESCRIPTOR_VALID_FLAGS 3

#define SE_SELF_RELATIVE 32768

#define SEC_COMMIT 134217728

#define SEC_FILE 8388608

#define SEC_IMAGE 16777216

#define SEC_LARGE_PAGES 2147483648

#define SEC_NOCACHE 268435456

#define SEC_PROTECTED_IMAGE 33554432

#define SEC_RESERVE 67108864

#define SEC_WRITECOMBINE 1073741824

#define SECTION_EXTEND_SIZE 16

#define SECTION_MAP_EXECUTE 8

#define SECTION_MAP_EXECUTE_EXPLICIT 32

#define SECTION_MAP_READ 4

#define SECTION_MAP_WRITE 2

#define SECTION_QUERY 1

#define SECURITY_ANONYMOUS_LOGON_RID 7

#define SECURITY_APPPOOL_ID_BASE_RID 82

#define SECURITY_APPPOOL_ID_RID_COUNT 6

#define SECURITY_AUTHENTICATED_USER_RID 11

#define SECURITY_BATCH_RID 3

#define SECURITY_BUILTIN_DOMAIN_RID 32

#define SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID 85

#define SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT 6

#define SECURITY_COM_ID_BASE_RID 89

#define SECURITY_CREATOR_GROUP_RID 1

#define SECURITY_CREATOR_GROUP_SERVER_RID 3

#define SECURITY_CREATOR_OWNER_RID 0

#define SECURITY_CREATOR_OWNER_RIGHTS_RID 4

#define SECURITY_CREATOR_OWNER_SERVER_RID 2

#define SECURITY_CRED_TYPE_BASE_RID 65

#define SECURITY_CRED_TYPE_RID_COUNT 2

#define SECURITY_CRED_TYPE_THIS_ORG_CERT_RID 1

#define SECURITY_DESCRIPTOR_REVISION 1

#define SECURITY_DESCRIPTOR_REVISION1 1

#define SECURITY_DIALUP_RID 1

#define SECURITY_DYNAMIC_TRACKING 1

#define SECURITY_ENTERPRISE_CONTROLLERS_RID 9

#define SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID 22

#define SECURITY_INTERACTIVE_RID 4

#define SECURITY_IUSER_RID 17

#define SECURITY_LOCAL_LOGON_RID 1

#define SECURITY_LOCAL_RID 0

#define SECURITY_LOCAL_SERVICE_RID 19

#define SECURITY_LOCAL_SYSTEM_RID 18

#define SECURITY_LOGON_IDS_RID 5

#define SECURITY_LOGON_IDS_RID_COUNT 3

#define SECURITY_MANDATORY_HIGH_RID 12288

#define SECURITY_MANDATORY_LOW_RID 4096

#define SECURITY_MANDATORY_MAXIMUM_USER_RID 16384

#define SECURITY_MANDATORY_MEDIUM_PLUS_RID 8448

#define SECURITY_MANDATORY_MEDIUM_RID 8192

#define SECURITY_MANDATORY_PROTECTED_PROCESS_RID 20480

#define SECURITY_MANDATORY_SYSTEM_RID 16384

#define SECURITY_MANDATORY_UNTRUSTED_RID 0

#define SECURITY_MAX_ALWAYS_FILTERED 999

#define SECURITY_MAX_BASE_RID 111

#define SECURITY_MIN_BASE_RID 80

#define SECURITY_MIN_NEVER_FILTERED 1000

#define SECURITY_NETWORK_RID 2

#define SECURITY_NETWORK_SERVICE_RID 20

#define SECURITY_NFS_ID_BASE_RID 88

#define SECURITY_NT_NON_UNIQUE 21

#define SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT 3

#define SECURITY_NULL_RID 0

#define SECURITY_OTHER_ORGANIZATION_RID 1000

#define SECURITY_PACKAGE_BASE_RID 64

#define SECURITY_PACKAGE_DIGEST_RID 21

#define SECURITY_PACKAGE_NTLM_RID 10

#define SECURITY_PACKAGE_RID_COUNT 2

#define SECURITY_PACKAGE_SCHANNEL_RID 14

#define SECURITY_PRINCIPAL_SELF_RID 10

#define SECURITY_PROXY_RID 8

#define SECURITY_REMOTE_LOGON_RID 14

#define SECURITY_RESERVED_ID_BASE_RID 81

#define SECURITY_RESTRICTED_CODE_RID 12

#define SECURITY_SERVER_LOGON_RID 9

#define SECURITY_SERVICE_ID_BASE_RID 80

#define SECURITY_SERVICE_ID_RID_COUNT 6

#define SECURITY_SERVICE_RID 6

#define SECURITY_STATIC_TRACKING 0

#define SECURITY_TASK_ID_BASE_RID 87

#define SECURITY_TERMINAL_SERVER_RID 13

#define SECURITY_THIS_ORGANIZATION_RID 15

#define SECURITY_USERMODEDRIVERHOST_ID_BASE_RID 84

#define SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT 6

#define SECURITY_VIRTUALACCOUNT_ID_RID_COUNT 6

#define SECURITY_VIRTUALSERVER_ID_BASE_RID 83

#define SECURITY_VIRTUALSERVER_ID_RID_COUNT 6

#define SECURITY_WINDOWSMOBILE_ID_BASE_RID 112

#define SECURITY_WMIHOST_ID_BASE_RID 86

#define SECURITY_WMIHOST_ID_RID_COUNT 6

#define SECURITY_WORLD_RID 0

#define SECURITY_WRITE_RESTRICTED_CODE_RID 33

#define SEF_AVOID_OWNER_CHECK 16

#define SEF_AVOID_OWNER_RESTRICTION 4096

#define SEF_AVOID_PRIVILEGE_CHECK 8

#define SEF_DACL_AUTO_INHERIT 1

#define SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT 4

#define SEF_DEFAULT_GROUP_FROM_PARENT 64

#define SEF_DEFAULT_OWNER_FROM_PARENT 32

#define SEF_MACL_NO_EXECUTE_UP 1024

#define SEF_MACL_NO_READ_UP 512

#define SEF_MACL_NO_WRITE_UP 256

#define SEF_SACL_AUTO_INHERIT 2

#define SEMAPHORE_ALL_ACCESS 2031619

#define SEMAPHORE_MODIFY_STATE 2

#define SERVICE_ADAPTER 4

#define SERVICE_AUTO_START 2

#define SERVICE_BOOT_START 0

#define SERVICE_DEMAND_START 3

#define SERVICE_DISABLED 4

#define SERVICE_ERROR_CRITICAL 3

#define SERVICE_ERROR_IGNORE 0

#define SERVICE_ERROR_NORMAL 1

#define SERVICE_ERROR_SEVERE 2

#define SERVICE_FILE_SYSTEM_DRIVER 2

#define SERVICE_INTERACTIVE_PROCESS 256

#define SERVICE_KERNEL_DRIVER 1

#define SERVICE_RECOGNIZER_DRIVER 8

#define SERVICE_SYSTEM_START 1

#define SERVICE_WIN32_OWN_PROCESS 16

#define SERVICE_WIN32_SHARE_PROCESS 32

#define SESSION_MODIFY_ACCESS 2

#define SESSION_QUERY_ACCESS 1

#define SID_HASH_SIZE 32

#define SID_MAX_SUB_AUTHORITIES 15

#define SID_RECOMMENDED_SUB_AUTHORITIES 1

#define SID_REVISION 1

#define SIZE_OF_80387_REGISTERS 80

#define SIZEOF_RFPO_DATA 16

#define SORT_CHINESE_BIG5 0

#define SORT_CHINESE_BOPOMOFO 3

#define SORT_CHINESE_PRC 2

#define SORT_CHINESE_PRCP 0

#define SORT_CHINESE_RADICALSTROKE 4

#define SORT_CHINESE_UNICODE 1

#define SORT_DEFAULT 0

#define SORT_GEORGIAN_MODERN 1

#define SORT_GEORGIAN_TRADITIONAL 0

#define SORT_GERMAN_PHONE_BOOK 1

#define SORT_HUNGARIAN_DEFAULT 0

#define SORT_HUNGARIAN_TECHNICAL 1

#define SORT_INVARIANT_MATH 1

#define SORT_JAPANESE_RADICALSTROKE 4

#define SORT_JAPANESE_UNICODE 1

#define SORT_JAPANESE_XJIS 0

#define SORT_KOREAN_KSC 0

#define SORT_KOREAN_UNICODE 1

#define SPECIFIC_RIGHTS_ALL 65535

#define STANDARD_RIGHTS_ALL 2031616

#define STANDARD_RIGHTS_EXECUTE 131072

#define STANDARD_RIGHTS_READ 131072

#define STANDARD_RIGHTS_REQUIRED 983040

#define STANDARD_RIGHTS_WRITE 131072

#define STATUS_ABANDONED_WAIT_0 128

#define STATUS_ACCESS_VIOLATION 3221225477

#define STATUS_ARRAY_BOUNDS_EXCEEDED 3221225612

#define STATUS_ASSERTION_FAILURE 3221226528

#define STATUS_BREAKPOINT 2147483651

#define STATUS_CONTROL_C_EXIT 3221225786

#define STATUS_DATATYPE_MISALIGNMENT 2147483650

#define STATUS_DLL_INIT_FAILED 3221225794

#define STATUS_DLL_NOT_FOUND 3221225781

#define STATUS_ENTRYPOINT_NOT_FOUND 3221225785

#define STATUS_FLOAT_DENORMAL_OPERAND 3221225613

#define STATUS_FLOAT_DIVIDE_BY_ZERO 3221225614

#define STATUS_FLOAT_INEXACT_RESULT 3221225615

#define STATUS_FLOAT_INVALID_OPERATION 3221225616

#define STATUS_FLOAT_MULTIPLE_FAULTS 3221226164

#define STATUS_FLOAT_MULTIPLE_TRAPS 3221226165

#define STATUS_FLOAT_OVERFLOW 3221225617

#define STATUS_FLOAT_STACK_CHECK 3221225618

#define STATUS_FLOAT_UNDERFLOW 3221225619

#define STATUS_GUARD_PAGE_VIOLATION 2147483649

#define STATUS_ILLEGAL_INSTRUCTION 3221225501

#define STATUS_IN_PAGE_ERROR 3221225478

#define STATUS_INTEGER_DIVIDE_BY_ZERO 3221225620

#define STATUS_INTEGER_OVERFLOW 3221225621

#define STATUS_INVALID_CRUNTIME_PARAMETER 3221226519

#define STATUS_INVALID_DISPOSITION 3221225510

#define STATUS_INVALID_HANDLE 3221225480

#define STATUS_INVALID_PARAMETER 3221225485

#define STATUS_LONGJUMP 2147483686

#define STATUS_NO_MEMORY 3221225495

#define STATUS_NONCONTINUABLE_EXCEPTION 3221225509

#define STATUS_ORDINAL_NOT_FOUND 3221225784

#define STATUS_PENDING 259

#define STATUS_PRIVILEGED_INSTRUCTION 3221225622

#define STATUS_REG_NAT_CONSUMPTION 3221226185

#define STATUS_SEGMENT_NOTIFICATION 1073741829

#define STATUS_SINGLE_STEP 2147483652

#define STATUS_STACK_BUFFER_OVERRUN 3221226505

#define STATUS_STACK_OVERFLOW 3221225725

#define STATUS_SXS_EARLY_DEACTIVATION 3222601743

#define STATUS_SXS_INVALID_DEACTIVATION 3222601744

#define STATUS_TIMEOUT 258

#define STATUS_UNWIND_CONSOLIDATE 2147483689

#define STATUS_USER_APC 192

#define STATUS_WAIT_0 0

#define SUBLANG_AFRIKAANS_SOUTH_AFRICA 1

#define SUBLANG_ALBANIAN_ALBANIA 1

#define SUBLANG_ALSATIAN_FRANCE 1

#define SUBLANG_AMHARIC_ETHIOPIA 1

#define SUBLANG_ARABIC_ALGERIA 5

#define SUBLANG_ARABIC_BAHRAIN 15

#define SUBLANG_ARABIC_EGYPT 3

#define SUBLANG_ARABIC_IRAQ 2

#define SUBLANG_ARABIC_JORDAN 11

#define SUBLANG_ARABIC_KUWAIT 13

#define SUBLANG_ARABIC_LEBANON 12

#define SUBLANG_ARABIC_LIBYA 4

#define SUBLANG_ARABIC_MOROCCO 6

#define SUBLANG_ARABIC_OMAN 8

#define SUBLANG_ARABIC_QATAR 16

#define SUBLANG_ARABIC_SAUDI_ARABIA 1

#define SUBLANG_ARABIC_SYRIA 10

#define SUBLANG_ARABIC_TUNISIA 7

#define SUBLANG_ARABIC_UAE 14

#define SUBLANG_ARABIC_YEMEN 9

#define SUBLANG_ARMENIAN_ARMENIA 1

#define SUBLANG_ASSAMESE_INDIA 1

#define SUBLANG_AZERI_CYRILLIC 2

#define SUBLANG_AZERI_LATIN 1

#define SUBLANG_BASHKIR_RUSSIA 1

#define SUBLANG_BASQUE_BASQUE 1

#define SUBLANG_BELARUSIAN_BELARUS 1

#define SUBLANG_BENGALI_BANGLADESH 2

#define SUBLANG_BENGALI_INDIA 1

#define SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC 8

#define SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN 5

#define SUBLANG_BRETON_FRANCE 1

#define SUBLANG_BULGARIAN_BULGARIA 1

#define SUBLANG_CATALAN_CATALAN 1

#define SUBLANG_CHINESE_HONGKONG 3

#define SUBLANG_CHINESE_MACAU 5

#define SUBLANG_CHINESE_SIMPLIFIED 2

#define SUBLANG_CHINESE_SINGAPORE 4

#define SUBLANG_CHINESE_TRADITIONAL 1

#define SUBLANG_CORSICAN_FRANCE 1

#define SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN 4

#define SUBLANG_CROATIAN_CROATIA 1

#define SUBLANG_CUSTOM_DEFAULT 3

#define SUBLANG_CUSTOM_UNSPECIFIED 4

#define SUBLANG_CZECH_CZECH_REPUBLIC 1

#define SUBLANG_DANISH_DENMARK 1

#define SUBLANG_DARI_AFGHANISTAN 1

#define SUBLANG_DEFAULT 1

#define SUBLANG_DIVEHI_MALDIVES 1

#define SUBLANG_DUTCH 1

#define SUBLANG_DUTCH_BELGIAN 2

#define SUBLANG_ENGLISH_AUS 3

#define SUBLANG_ENGLISH_BELIZE 10

#define SUBLANG_ENGLISH_CAN 4

#define SUBLANG_ENGLISH_CARIBBEAN 9

#define SUBLANG_ENGLISH_EIRE 6

#define SUBLANG_ENGLISH_INDIA 16

#define SUBLANG_ENGLISH_JAMAICA 8

#define SUBLANG_ENGLISH_MALAYSIA 17

#define SUBLANG_ENGLISH_NZ 5

#define SUBLANG_ENGLISH_PHILIPPINES 13

#define SUBLANG_ENGLISH_SINGAPORE 18

#define SUBLANG_ENGLISH_SOUTH_AFRICA 7

#define SUBLANG_ENGLISH_TRINIDAD 11

#define SUBLANG_ENGLISH_UK 2

#define SUBLANG_ENGLISH_US 1

#define SUBLANG_ENGLISH_ZIMBABWE 12

#define SUBLANG_ESTONIAN_ESTONIA 1

#define SUBLANG_FAEROESE_FAROE_ISLANDS 1

#define SUBLANG_FILIPINO_PHILIPPINES 1

#define SUBLANG_FINNISH_FINLAND 1

#define SUBLANG_FRENCH 1

#define SUBLANG_FRENCH_BELGIAN 2

#define SUBLANG_FRENCH_CANADIAN 3

#define SUBLANG_FRENCH_LUXEMBOURG 5

#define SUBLANG_FRENCH_MONACO 6

#define SUBLANG_FRENCH_SWISS 4

#define SUBLANG_FRISIAN_NETHERLANDS 1

#define SUBLANG_GALICIAN_GALICIAN 1

#define SUBLANG_GEORGIAN_GEORGIA 1

#define SUBLANG_GERMAN 1

#define SUBLANG_GERMAN_AUSTRIAN 3

#define SUBLANG_GERMAN_LIECHTENSTEIN 5

#define SUBLANG_GERMAN_LUXEMBOURG 4

#define SUBLANG_GERMAN_SWISS 2

#define SUBLANG_GREEK_GREECE 1

#define SUBLANG_GREENLANDIC_GREENLAND 1

#define SUBLANG_GUJARATI_INDIA 1

#define SUBLANG_HAUSA_NIGERIA_LATIN 1

#define SUBLANG_HEBREW_ISRAEL 1

#define SUBLANG_HINDI_INDIA 1

#define SUBLANG_HUNGARIAN_HUNGARY 1

#define SUBLANG_ICELANDIC_ICELAND 1

#define SUBLANG_IGBO_NIGERIA 1

#define SUBLANG_INDONESIAN_INDONESIA 1

#define SUBLANG_INUKTITUT_CANADA 1

#define SUBLANG_INUKTITUT_CANADA_LATIN 2

#define SUBLANG_IRISH_IRELAND 2

#define SUBLANG_ITALIAN 1

#define SUBLANG_ITALIAN_SWISS 2

#define SUBLANG_JAPANESE_JAPAN 1

#define SUBLANG_KANNADA_INDIA 1

#define SUBLANG_KASHMIRI_INDIA 2

#define SUBLANG_KASHMIRI_SASIA 2

#define SUBLANG_KAZAK_KAZAKHSTAN 1

#define SUBLANG_KHMER_CAMBODIA 1

#define SUBLANG_KICHE_GUATEMALA 1

#define SUBLANG_KINYARWANDA_RWANDA 1

#define SUBLANG_KONKANI_INDIA 1

#define SUBLANG_KOREAN 1

#define SUBLANG_KYRGYZ_KYRGYZSTAN 1

#define SUBLANG_LAO_LAO 1

#define SUBLANG_LATVIAN_LATVIA 1

#define SUBLANG_LITHUANIAN 1

#define SUBLANG_LOWER_SORBIAN_GERMANY 2

#define SUBLANG_LUXEMBOURGISH_LUXEMBOURG 1

#define SUBLANG_MACEDONIAN_MACEDONIA 1

#define SUBLANG_MALAY_BRUNEI_DARUSSALAM 2

#define SUBLANG_MALAY_MALAYSIA 1

#define SUBLANG_MALAYALAM_INDIA 1

#define SUBLANG_MALTESE_MALTA 1

#define SUBLANG_MAORI_NEW_ZEALAND 1

#define SUBLANG_MAPUDUNGUN_CHILE 1

#define SUBLANG_MARATHI_INDIA 1

#define SUBLANG_MOHAWK_MOHAWK 1

#define SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA 1

#define SUBLANG_MONGOLIAN_PRC 2

#define SUBLANG_NEPALI_INDIA 2

#define SUBLANG_NEPALI_NEPAL 1

#define SUBLANG_NEUTRAL 0

#define SUBLANG_NORWEGIAN_BOKMAL 1

#define SUBLANG_NORWEGIAN_NYNORSK 2

#define SUBLANG_OCCITAN_FRANCE 1

#define SUBLANG_ORIYA_INDIA 1

#define SUBLANG_PASHTO_AFGHANISTAN 1

#define SUBLANG_PERSIAN_IRAN 1

#define SUBLANG_POLISH_POLAND 1

#define SUBLANG_PORTUGUESE 2

#define SUBLANG_PORTUGUESE_BRAZILIAN 1

#define SUBLANG_PUNJABI_INDIA 1

#define SUBLANG_QUECHUA_BOLIVIA 1

#define SUBLANG_QUECHUA_ECUADOR 2

#define SUBLANG_QUECHUA_PERU 3

#define SUBLANG_ROMANIAN_ROMANIA 1

#define SUBLANG_ROMANSH_SWITZERLAND 1

#define SUBLANG_RUSSIAN_RUSSIA 1

#define SUBLANG_SAMI_INARI_FINLAND 9

#define SUBLANG_SAMI_LULE_NORWAY 4

#define SUBLANG_SAMI_LULE_SWEDEN 5

#define SUBLANG_SAMI_NORTHERN_FINLAND 3

#define SUBLANG_SAMI_NORTHERN_NORWAY 1

#define SUBLANG_SAMI_NORTHERN_SWEDEN 2

#define SUBLANG_SAMI_SKOLT_FINLAND 8

#define SUBLANG_SAMI_SOUTHERN_NORWAY 6

#define SUBLANG_SAMI_SOUTHERN_SWEDEN 7

#define SUBLANG_SANSKRIT_INDIA 1

#define SUBLANG_SCOTTISH_GAELIC 1

#define SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC 7

#define SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN 6

#define SUBLANG_SERBIAN_CROATIA 1

#define SUBLANG_SERBIAN_CYRILLIC 3

#define SUBLANG_SERBIAN_LATIN 2

#define SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC 12

#define SUBLANG_SERBIAN_MONTENEGRO_LATIN 11

#define SUBLANG_SERBIAN_SERBIA_CYRILLIC 10

#define SUBLANG_SERBIAN_SERBIA_LATIN 9

#define SUBLANG_SINDHI_AFGHANISTAN 2

#define SUBLANG_SINDHI_INDIA 1

#define SUBLANG_SINDHI_PAKISTAN 2

#define SUBLANG_SINHALESE_SRI_LANKA 1

#define SUBLANG_SLOVAK_SLOVAKIA 1

#define SUBLANG_SLOVENIAN_SLOVENIA 1

#define SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA 1

#define SUBLANG_SPANISH 1

#define SUBLANG_SPANISH_ARGENTINA 11

#define SUBLANG_SPANISH_BOLIVIA 16

#define SUBLANG_SPANISH_CHILE 13

#define SUBLANG_SPANISH_COLOMBIA 9

#define SUBLANG_SPANISH_COSTA_RICA 5

#define SUBLANG_SPANISH_DOMINICAN_REPUBLIC 7

#define SUBLANG_SPANISH_ECUADOR 12

#define SUBLANG_SPANISH_EL_SALVADOR 17

#define SUBLANG_SPANISH_GUATEMALA 4

#define SUBLANG_SPANISH_HONDURAS 18

#define SUBLANG_SPANISH_MEXICAN 2

#define SUBLANG_SPANISH_MODERN 3

#define SUBLANG_SPANISH_NICARAGUA 19

#define SUBLANG_SPANISH_PANAMA 6

#define SUBLANG_SPANISH_PARAGUAY 15

#define SUBLANG_SPANISH_PERU 10

#define SUBLANG_SPANISH_PUERTO_RICO 20

#define SUBLANG_SPANISH_URUGUAY 14

#define SUBLANG_SPANISH_US 21

#define SUBLANG_SPANISH_VENEZUELA 8

#define SUBLANG_SWAHILI_KENYA 1

#define SUBLANG_SWEDISH 1

#define SUBLANG_SWEDISH_FINLAND 2

#define SUBLANG_SYRIAC_SYRIA 1

#define SUBLANG_SYS_DEFAULT 2

#define SUBLANG_TAJIK_TAJIKISTAN 1

#define SUBLANG_TAMAZIGHT_ALGERIA_LATIN 2

#define SUBLANG_TAMIL_INDIA 1

#define SUBLANG_TATAR_RUSSIA 1

#define SUBLANG_TELUGU_INDIA 1

#define SUBLANG_THAI_THAILAND 1

#define SUBLANG_TIBETAN_PRC 1

#define SUBLANG_TIGRIGNA_ERITREA 2

#define SUBLANG_TSWANA_SOUTH_AFRICA 1

#define SUBLANG_TURKISH_TURKEY 1

#define SUBLANG_TURKMEN_TURKMENISTAN 1

#define SUBLANG_UI_CUSTOM_DEFAULT 5

#define SUBLANG_UIGHUR_PRC 1

#define SUBLANG_UKRAINIAN_UKRAINE 1

#define SUBLANG_UPPER_SORBIAN_GERMANY 1

#define SUBLANG_URDU_INDIA 2

#define SUBLANG_URDU_PAKISTAN 1

#define SUBLANG_UZBEK_CYRILLIC 2

#define SUBLANG_UZBEK_LATIN 1

#define SUBLANG_VIETNAMESE_VIETNAM 1

#define SUBLANG_WELSH_UNITED_KINGDOM 1

#define SUBLANG_WOLOF_SENEGAL 1

#define SUBLANG_XHOSA_SOUTH_AFRICA 1

#define SUBLANG_YAKUT_RUSSIA 1

#define SUBLANG_YI_PRC 1

#define SUBLANG_YORUBA_NIGERIA 1

#define SUBLANG_ZULU_SOUTH_AFRICA 1

#define SUCCESSFUL_ACCESS_ACE_FLAG 64

#define SYNCHRONIZE 1048576

#define SYSTEM_ALARM_ACE_TYPE 3

#define SYSTEM_ALARM_CALLBACK_ACE_TYPE 14

#define SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE 16

#define SYSTEM_ALARM_OBJECT_ACE_TYPE 8

#define SYSTEM_AUDIT_ACE_TYPE 2

#define SYSTEM_AUDIT_CALLBACK_ACE_TYPE 13

#define SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE 15

#define SYSTEM_AUDIT_OBJECT_ACE_TYPE 7

#define SYSTEM_CACHE_ALIGNMENT_SIZE 64

#define SYSTEM_MANDATORY_LABEL_ACE_TYPE 17

#define SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP 4

#define SYSTEM_MANDATORY_LABEL_NO_READ_UP 2

#define SYSTEM_MANDATORY_LABEL_NO_WRITE_UP 1

#define TAPE_ABSOLUTE_BLOCK 1

#define TAPE_ABSOLUTE_POSITION 0

#define TAPE_CHECK_FOR_DRIVE_PROBLEM 2

#define TAPE_DRIVE_ABS_BLK_IMMED 2147491840

#define TAPE_DRIVE_ABSOLUTE_BLK 2147487744

#define TAPE_DRIVE_CLEAN_REQUESTS 33554432

#define TAPE_DRIVE_COMPRESSION 131072

#define TAPE_DRIVE_ECC 65536

#define TAPE_DRIVE_EJECT_MEDIA 16777216

#define TAPE_DRIVE_END_OF_DATA 2147549184

#define TAPE_DRIVE_EOT_WZ_SIZE 8192

#define TAPE_DRIVE_ERASE_BOP_ONLY 64

#define TAPE_DRIVE_ERASE_IMMEDIATE 128

#define TAPE_DRIVE_ERASE_LONG 32

#define TAPE_DRIVE_ERASE_SHORT 16

#define TAPE_DRIVE_FILEMARKS 2147745792

#define TAPE_DRIVE_FIXED 1

#define TAPE_DRIVE_FIXED_BLOCK 1024

#define TAPE_DRIVE_FORMAT 2684354560

#define TAPE_DRIVE_FORMAT_IMMEDIATE 3221225472

#define TAPE_DRIVE_GET_ABSOLUTE_BLK 1048576

#define TAPE_DRIVE_GET_LOGICAL_BLK 2097152

#define TAPE_DRIVE_HIGH_FEATURES 2147483648

#define TAPE_DRIVE_INITIATOR 4

#define TAPE_DRIVE_LOAD_UNLD_IMMED 2147483680

#define TAPE_DRIVE_LOAD_UNLOAD 2147483649

#define TAPE_DRIVE_LOCK_UNLK_IMMED 2147483776

#define TAPE_DRIVE_LOCK_UNLOCK 2147483652

#define TAPE_DRIVE_LOG_BLK_IMMED 2147516416

#define TAPE_DRIVE_LOGICAL_BLK 2147500032

#define TAPE_DRIVE_PADDING 262144

#define TAPE_DRIVE_RELATIVE_BLKS 2147614720

#define TAPE_DRIVE_REPORT_SMKS 524288

#define TAPE_DRIVE_RESERVED_BIT 2147483648

#define TAPE_DRIVE_REVERSE_POSITION 2151677952

#define TAPE_DRIVE_REWIND_IMMEDIATE 2147483656

#define TAPE_DRIVE_SELECT 2

#define TAPE_DRIVE_SEQUENTIAL_FMKS 2148007936

#define TAPE_DRIVE_SEQUENTIAL_SMKS 2149580800

#define TAPE_DRIVE_SET_BLOCK_SIZE 2147483664

#define TAPE_DRIVE_SET_CMP_BOP_ONLY 67108864

#define TAPE_DRIVE_SET_COMPRESSION 2147484160

#define TAPE_DRIVE_SET_ECC 2147483904

#define TAPE_DRIVE_SET_EOT_WZ_SIZE 4194304

#define TAPE_DRIVE_SET_PADDING 2147484672

#define TAPE_DRIVE_SET_REPORT_SMKS 2147485696

#define TAPE_DRIVE_SETMARKS 2148532224

#define TAPE_DRIVE_SPACE_IMMEDIATE 2155872256

#define TAPE_DRIVE_TAPE_CAPACITY 256

#define TAPE_DRIVE_TAPE_REMAINING 512

#define TAPE_DRIVE_TENSION 2147483650

#define TAPE_DRIVE_TENSION_IMMED 2147483712

#define TAPE_DRIVE_VARIABLE_BLOCK 2048

#define TAPE_DRIVE_WRITE_FILEMARKS 2181038080

#define TAPE_DRIVE_WRITE_LONG_FMKS 2281701376

#define TAPE_DRIVE_WRITE_MARK_IMMED 2415919104

#define TAPE_DRIVE_WRITE_PROTECT 4096

#define TAPE_DRIVE_WRITE_SETMARKS 2164260864

#define TAPE_DRIVE_WRITE_SHORT_FMKS 2214592512

#define TAPE_ERASE_LONG 1

#define TAPE_ERASE_SHORT 0

#define TAPE_FILEMARKS 1

#define TAPE_FIXED_PARTITIONS 0

#define TAPE_FORMAT 5

#define TAPE_INITIATOR_PARTITIONS 2

#define TAPE_LOAD 0

#define TAPE_LOCK 3

#define TAPE_LOGICAL_BLOCK 2

#define TAPE_LOGICAL_POSITION 1

#define TAPE_LONG_FILEMARKS 3

#define TAPE_PSEUDO_LOGICAL_BLOCK 3

#define TAPE_PSEUDO_LOGICAL_POSITION 2

#define TAPE_QUERY_DEVICE_ERROR_DATA 4

#define TAPE_QUERY_DRIVE_PARAMETERS 0

#define TAPE_QUERY_IO_ERROR_DATA 3

#define TAPE_QUERY_MEDIA_CAPACITY 1

#define TAPE_REWIND 0

#define TAPE_SELECT_PARTITIONS 1

#define TAPE_SETMARKS 0

#define TAPE_SHORT_FILEMARKS 2

#define TAPE_SPACE_END_OF_DATA 4

#define TAPE_SPACE_FILEMARKS 6

#define TAPE_SPACE_RELATIVE_BLOCKS 5

#define TAPE_SPACE_SEQUENTIAL_FMKS 7

#define TAPE_SPACE_SEQUENTIAL_SMKS 9

#define TAPE_SPACE_SETMARKS 8

#define TAPE_TENSION 2

#define TAPE_UNLOAD 1

#define TAPE_UNLOCK 4

#define THREAD_BASE_PRIORITY_IDLE -15

#define THREAD_BASE_PRIORITY_LOWRT 15

#define THREAD_BASE_PRIORITY_MAX 2

#define THREAD_BASE_PRIORITY_MIN -2

#define THREAD_DIRECT_IMPERSONATION 512

#define THREAD_GET_CONTEXT 8

#define THREAD_IMPERSONATE 256

#define THREAD_PROFILING_FLAG_DISPATCH 1

#define THREAD_QUERY_INFORMATION 64

#define THREAD_QUERY_LIMITED_INFORMATION 2048

#define THREAD_SET_CONTEXT 16

#define THREAD_SET_INFORMATION 32

#define THREAD_SET_LIMITED_INFORMATION 1024

#define THREAD_SET_THREAD_TOKEN 128

#define THREAD_SUSPEND_RESUME 2

#define THREAD_TERMINATE 1

#define TIME_ZONE_ID_DAYLIGHT 2

#define TIME_ZONE_ID_STANDARD 1

#define TIME_ZONE_ID_UNKNOWN 0

#define TIMER_MODIFY_STATE 2

#define TIMER_QUERY_STATE 1

#define TLS_MINIMUM_AVAILABLE 64

#define TOKEN_ADJUST_DEFAULT 128

#define TOKEN_ADJUST_GROUPS 64

#define TOKEN_ADJUST_PRIVILEGES 32

#define TOKEN_ADJUST_SESSIONID 256

#define TOKEN_ASSIGN_PRIMARY 1

#define TOKEN_DUPLICATE 2

#define TOKEN_EXECUTE 131072

#define TOKEN_IMPERSONATE 4

#define TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN 2

#define TOKEN_MANDATORY_POLICY_NO_WRITE_UP 1

#define TOKEN_MANDATORY_POLICY_OFF 0

#define TOKEN_QUERY 8

#define TOKEN_QUERY_SOURCE 16

#define TOKEN_SOURCE_LENGTH 8

#define TRANSACTION_COMMIT 8

#define TRANSACTION_ENLIST 4

#define TRANSACTION_PROPAGATE 32

#define TRANSACTION_QUERY_INFORMATION 1

#define TRANSACTION_RIGHT_RESERVED1 64

#define TRANSACTION_ROLLBACK 16

#define TRANSACTION_SET_INFORMATION 2

#define TRANSACTIONMANAGER_BIND_TRANSACTION 32

#define TRANSACTIONMANAGER_CREATE_RM 16

#define TRANSACTIONMANAGER_GENERIC_EXECUTE 131072

#define TRANSACTIONMANAGER_QUERY_INFORMATION 1

#define TRANSACTIONMANAGER_RECOVER 4

#define TRANSACTIONMANAGER_RENAME 8

#define TRANSACTIONMANAGER_SET_INFORMATION 2

#define UCSCHAR_INVALID_CHARACTER 4294967295

#define UNICODE_NULL 0

#define UNICODE_STRING_MAX_BYTES 65534

#define UNICODE_STRING_MAX_CHARS 32767

#define UNPROTECTED_DACL_SECURITY_INFORMATION 536870912

#define UNPROTECTED_SACL_SECURITY_INFORMATION 268435456

#define VALID_INHERIT_FLAGS 31

#define VER_AND 6

#define VER_BUILDNUMBER 4

#define VER_CONDITION_MASK 7

#define VER_EQUAL 1

#define VER_GREATER 2

#define VER_GREATER_EQUAL 3

#define VER_LESS 4

#define VER_LESS_EQUAL 5

#define VER_MAJORVERSION 2

#define VER_MINORVERSION 1

#define VER_NT_DOMAIN_CONTROLLER 2

#define VER_NT_SERVER 3

#define VER_NT_WORKSTATION 1

#define VER_NUM_BITS_PER_CONDITION_MASK 3

#define VER_OR 7

#define VER_PLATFORM_WIN32_NT 2

#define VER_PLATFORM_WIN32_WINDOWS 1

#define VER_PLATFORM_WIN32s 0

#define VER_PLATFORMID 8

#define VER_PRODUCT_TYPE 128

#define VER_SERVER_NT 2147483648

#define VER_SERVICEPACKMAJOR 32

#define VER_SERVICEPACKMINOR 16

#define VER_SUITE_BACKOFFICE 4

#define VER_SUITE_BLADE 1024

#define VER_SUITE_COMMUNICATIONS 8

#define VER_SUITE_COMPUTE_SERVER 16384

#define VER_SUITE_DATACENTER 128

#define VER_SUITE_EMBEDDED_RESTRICTED 2048

#define VER_SUITE_EMBEDDEDNT 64

#define VER_SUITE_ENTERPRISE 2

#define VER_SUITE_PERSONAL 512

#define VER_SUITE_SECURITY_APPLIANCE 4096

#define VER_SUITE_SINGLEUSERTS 256

#define VER_SUITE_SMALLBUSINESS 1

#define VER_SUITE_SMALLBUSINESS_RESTRICTED 32

#define VER_SUITE_STORAGE_SERVER 8192

#define VER_SUITE_TERMINAL 16

#define VER_SUITE_WH_SERVER 32768

#define VER_SUITENAME 64

#define VER_WORKSTATION_NT 1073741824

#define WOW64_CONTEXT_CONTROL 65537

#define WOW64_CONTEXT_DEBUG_REGISTERS 65552

#define WOW64_CONTEXT_EXTENDED_REGISTERS 65568

#define WOW64_CONTEXT_FLOATING_POINT 65544

#define WOW64_CONTEXT_FULL 65543

#define WOW64_CONTEXT_i386 65536

#define WOW64_CONTEXT_i486 65536

#define WOW64_CONTEXT_INTEGER 65538

#define WOW64_CONTEXT_SEGMENTS 65540

#define WOW64_CONTEXT_XSTATE 65600

#define WOW64_MAXIMUM_SUPPORTED_EXTENSION 512

#define WOW64_SIZE_OF_80387_REGISTERS 80

#define WRITE_DAC 262144

#define WRITE_OWNER 524288

#define WRITE_RESTRICTED 8

#define WRITE_WATCH_FLAG_RESET 1

#define WT_EXECUTEDEFAULT 0

#define WT_EXECUTEDELETEWAIT 8

#define WT_EXECUTEINIOTHREAD 1

#define WT_EXECUTEINLONGTHREAD 16

#define WT_EXECUTEINPERSISTENTIOTHREAD 64

#define WT_EXECUTEINPERSISTENTTHREAD 128

#define WT_EXECUTEINTIMERTHREAD 32

#define WT_EXECUTEINUITHREAD 2

#define WT_EXECUTEINWAITTHREAD 4

#define WT_EXECUTELONGFUNCTION 16

#define WT_EXECUTEONLYONCE 8

#define WT_TRANSFER_IMPERSONATION 256

#define X3_BTYPE_QP_INST_VAL_POS_X 0

#define X3_BTYPE_QP_INST_WORD_POS_X 23

#define X3_BTYPE_QP_INST_WORD_X 2

#define X3_BTYPE_QP_SIZE_X 9

#define X3_D_WH_INST_WORD_POS_X 24

#define X3_D_WH_INST_WORD_X 3

#define X3_D_WH_SIGN_VAL_POS_X 0

#define X3_D_WH_SIZE_X 3

#define X3_EMPTY_INST_VAL_POS_X 0

#define X3_EMPTY_INST_WORD_POS_X 14

#define X3_EMPTY_INST_WORD_X 1

#define X3_EMPTY_SIZE_X 2

#define X3_I_INST_WORD_POS_X 27

#define X3_I_INST_WORD_X 3

#define X3_I_SIGN_VAL_POS_X 59

#define X3_I_SIZE_X 1

#define X3_IMM20_INST_WORD_POS_X 4

#define X3_IMM20_INST_WORD_X 3

#define X3_IMM20_SIGN_VAL_POS_X 0

#define X3_IMM20_SIZE_X 20

#define X3_IMM39_1_INST_WORD_POS_X 0

#define X3_IMM39_1_INST_WORD_X 2

#define X3_IMM39_1_SIGN_VAL_POS_X 36

#define X3_IMM39_1_SIZE_X 23

#define X3_IMM39_2_INST_WORD_POS_X 16

#define X3_IMM39_2_INST_WORD_X 1

#define X3_IMM39_2_SIGN_VAL_POS_X 20

#define X3_IMM39_2_SIZE_X 16

#define X3_OPCODE_INST_WORD_POS_X 28

#define X3_OPCODE_INST_WORD_X 3

#define X3_OPCODE_SIGN_VAL_POS_X 0

#define X3_OPCODE_SIZE_X 4

#define X3_P_INST_WORD_POS_X 0

#define X3_P_INST_WORD_X 3

#define X3_P_SIGN_VAL_POS_X 0

#define X3_P_SIZE_X 4

#define X3_TMPLT_INST_WORD_POS_X 0

#define X3_TMPLT_INST_WORD_X 0

#define X3_TMPLT_SIGN_VAL_POS_X 0

#define X3_TMPLT_SIZE_X 4

#define XSAVE_ALIGN 64

#define XSTATE_GSSE 2

#define XSTATE_LEGACY_FLOATING_POINT 0

#define XSTATE_LEGACY_SSE 1

typedef char * __C_ASSERT__;

typedef struct _ACCESS_ALLOWED_ACE _ACCESS_ALLOWED_ACE, *P_ACCESS_ALLOWED_ACE;

typedef struct _ACE_HEADER _ACE_HEADER, *P_ACE_HEADER;

typedef struct _ACE_HEADER ACE_HEADER;

struct _ACE_HEADER {
    BYTE AceType;
    BYTE AceFlags;
    WORD AceSize;
};

struct _ACCESS_ALLOWED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE _ACCESS_ALLOWED_CALLBACK_ACE, *P_ACCESS_ALLOWED_CALLBACK_ACE;

struct _ACCESS_ALLOWED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *P_ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE _ACCESS_ALLOWED_OBJECT_ACE, *P_ACCESS_ALLOWED_OBJECT_ACE;

struct _ACCESS_ALLOWED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ACCESS_DENIED_ACE _ACCESS_DENIED_ACE, *P_ACCESS_DENIED_ACE;

struct _ACCESS_DENIED_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_ACE _ACCESS_DENIED_CALLBACK_ACE, *P_ACCESS_DENIED_CALLBACK_ACE;

struct _ACCESS_DENIED_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE _ACCESS_DENIED_CALLBACK_OBJECT_ACE, *P_ACCESS_DENIED_CALLBACK_OBJECT_ACE;

struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _ACCESS_DENIED_OBJECT_ACE _ACCESS_DENIED_OBJECT_ACE, *P_ACCESS_DENIED_OBJECT_ACE;

struct _ACCESS_DENIED_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef enum _ACCESS_REASON_TYPE {
    AccessReasonAllowedAce=65536,
    AccessReasonAllowedParentAce=196608,
    AccessReasonDeniedAce=131072,
    AccessReasonDeniedParentAce=262144,
    AccessReasonEmptyDacl=6291456,
    AccessReasonFromPrivilege=2097152,
    AccessReasonIntegrityLevel=3145728,
    AccessReasonMissingPrivilege=1048576,
    AccessReasonNoGrant=8388608,
    AccessReasonNoSD=7340032,
    AccessReasonNone=0,
    AccessReasonNullDacl=5242880,
    AccessReasonOwnership=4194304
} _ACCESS_REASON_TYPE;

typedef struct _ACCESS_REASONS _ACCESS_REASONS, *P_ACCESS_REASONS;

typedef DWORD ACCESS_REASON;

struct _ACCESS_REASONS {
    ACCESS_REASON Data[32];
};

typedef struct _ACL _ACL, *P_ACL;

struct _ACL {
    BYTE AclRevision;
    BYTE Sbz1;
    WORD AclSize;
    WORD AceCount;
    WORD Sbz2;
};

typedef enum _ACL_INFORMATION_CLASS {
    AclRevisionInformation=1,
    AclSizeInformation=2
} _ACL_INFORMATION_CLASS;

typedef struct _ACL_REVISION_INFORMATION _ACL_REVISION_INFORMATION, *P_ACL_REVISION_INFORMATION;

struct _ACL_REVISION_INFORMATION {
    DWORD AclRevision;
};

typedef struct _ACL_SIZE_INFORMATION _ACL_SIZE_INFORMATION, *P_ACL_SIZE_INFORMATION;

struct _ACL_SIZE_INFORMATION {
    DWORD AceCount;
    DWORD AclBytesInUse;
    DWORD AclBytesFree;
};

typedef struct _ACTIVATION_CONTEXT _ACTIVATION_CONTEXT, *P_ACTIVATION_CONTEXT;

struct _ACTIVATION_CONTEXT {
};

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *P_ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulEncodedAssemblyIdentityLength;
    DWORD ulManifestPathType;
    DWORD ulManifestPathLength;
    LARGE_INTEGER liManifestLastWriteTime;
    DWORD ulPolicyPathType;
    DWORD ulPolicyPathLength;
    LARGE_INTEGER liPolicyLastWriteTime;
    DWORD ulMetadataSatelliteRosterIndex;
    DWORD ulManifestVersionMajor;
    DWORD ulManifestVersionMinor;
    DWORD ulPolicyVersionMajor;
    DWORD ulPolicyVersionMinor;
    DWORD ulAssemblyDirectoryNameLength;
    PCWSTR lpAssemblyEncodedAssemblyIdentity;
    PCWSTR lpAssemblyManifestPath;
    PCWSTR lpAssemblyPolicyPath;
    PCWSTR lpAssemblyDirectoryName;
    DWORD ulFileCount;
};

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION, *P_ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT _COMPATIBILITY_CONTEXT_ELEMENT, *P_COMPATIBILITY_CONTEXT_ELEMENT;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT COMPATIBILITY_CONTEXT_ELEMENT;

typedef enum enum_322 {
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION=2,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS=1,
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN=0
} enum_322;

typedef enum enum_322 ACTCTX_COMPATIBILITY_ELEMENT_TYPE;

struct _COMPATIBILITY_CONTEXT_ELEMENT {
    GUID Id;
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
};

struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {
    DWORD ElementCount;
    COMPATIBILITY_CONTEXT_ELEMENT * Elements;
};

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION _ACTIVATION_CONTEXT_DETAILED_INFORMATION, *P_ACTIVATION_CONTEXT_DETAILED_INFORMATION;

struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
    DWORD dwFlags;
    DWORD ulFormatVersion;
    DWORD ulAssemblyCount;
    DWORD ulRootManifestPathType;
    DWORD ulRootManifestPathChars;
    DWORD ulRootConfigurationPathType;
    DWORD ulRootConfigurationPathChars;
    DWORD ulAppDirPathType;
    DWORD ulAppDirPathChars;
    PCWSTR lpRootManifestPath;
    PCWSTR lpRootConfigurationPath;
    PCWSTR lpAppDirPath;
};

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS {
    ActivationContextBasicInformation=1,
    ActivationContextDetailedInformation=2,
    ActivationContextManifestResourceName=7,
    AssemblyDetailedInformationInActivationContext=3,
    AssemblyDetailedInformationInActivationContxt=3,
    CompatibilityInformationInActivationContext=6,
    FileInformationInAssemblyOfAssemblyInActivationContext=4,
    FileInformationInAssemblyOfAssemblyInActivationContxt=4,
    MaxActivationContextInfoClass=8,
    RunlevelInformationInActivationContext=5
} _ACTIVATION_CONTEXT_INFO_CLASS;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX _ACTIVATION_CONTEXT_QUERY_INDEX, *P_ACTIVATION_CONTEXT_QUERY_INDEX;

struct _ACTIVATION_CONTEXT_QUERY_INDEX {
    DWORD ulAssemblyIndex;
    DWORD ulFileIndexInAssembly;
};

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, *P_ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

typedef enum enum_319 {
    ACTCTX_RUN_LEVEL_AS_INVOKER=1,
    ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE=2,
    ACTCTX_RUN_LEVEL_NUMBERS=4,
    ACTCTX_RUN_LEVEL_REQUIRE_ADMIN=3,
    ACTCTX_RUN_LEVEL_UNSPECIFIED=0
} enum_319;

typedef enum enum_319 ACTCTX_REQUESTED_RUN_LEVEL;

struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {
    DWORD ulFlags;
    ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
    DWORD UiAccess;
};

typedef struct _ADMINISTRATOR_POWER_POLICY _ADMINISTRATOR_POWER_POLICY, *P_ADMINISTRATOR_POWER_POLICY;

typedef enum _SYSTEM_POWER_STATE {
    PowerSystemHibernate=5,
    PowerSystemMaximum=7,
    PowerSystemShutdown=6,
    PowerSystemSleeping1=2,
    PowerSystemSleeping2=3,
    PowerSystemSleeping3=4,
    PowerSystemUnspecified=0,
    PowerSystemWorking=1
} _SYSTEM_POWER_STATE;

typedef enum _SYSTEM_POWER_STATE SYSTEM_POWER_STATE;

struct _ADMINISTRATOR_POWER_POLICY {
    SYSTEM_POWER_STATE MinSleep;
    SYSTEM_POWER_STATE MaxSleep;
    DWORD MinVideoTimeout;
    DWORD MaxVideoTimeout;
    DWORD MinSpindownTimeout;
    DWORD MaxSpindownTimeout;
};

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE _APPLICATIONLAUNCH_SETTING_VALUE, *P_APPLICATIONLAUNCH_SETTING_VALUE;

struct _APPLICATIONLAUNCH_SETTING_VALUE {
    LARGE_INTEGER ActivationTime;
    DWORD Flags;
    DWORD ButtonInstanceID;
};

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION _ASSEMBLY_FILE_DETAILED_INFORMATION, *P_ASSEMBLY_FILE_DETAILED_INFORMATION;

struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
    DWORD ulFlags;
    DWORD ulFilenameLength;
    DWORD ulPathLength;
    PCWSTR lpFileName;
    PCWSTR lpFilePath;
};

typedef enum _AUDIT_EVENT_TYPE {
    AuditEventDirectoryServiceAccess=1,
    AuditEventObjectAccess=0
} _AUDIT_EVENT_TYPE;

typedef struct _CACHE_DESCRIPTOR _CACHE_DESCRIPTOR, *P_CACHE_DESCRIPTOR;

typedef enum _PROCESSOR_CACHE_TYPE {
    CacheData=2,
    CacheInstruction=1,
    CacheTrace=3,
    CacheUnified=0
} _PROCESSOR_CACHE_TYPE;

typedef enum _PROCESSOR_CACHE_TYPE PROCESSOR_CACHE_TYPE;

struct _CACHE_DESCRIPTOR {
    BYTE Level;
    BYTE Associativity;
    WORD LineSize;
    DWORD Size;
    PROCESSOR_CACHE_TYPE Type;
};

typedef struct _CACHE_RELATIONSHIP _CACHE_RELATIONSHIP, *P_CACHE_RELATIONSHIP;

typedef struct _GROUP_AFFINITY _GROUP_AFFINITY, *P_GROUP_AFFINITY;

typedef struct _GROUP_AFFINITY GROUP_AFFINITY;

struct _GROUP_AFFINITY {
    KAFFINITY Mask;
    WORD Group;
    WORD Reserved[3];
};

struct _CACHE_RELATIONSHIP {
    BYTE Level;
    BYTE Associativity;
    WORD LineSize;
    DWORD CacheSize;
    PROCESSOR_CACHE_TYPE Type;
    BYTE Reserved[20];
    GROUP_AFFINITY GroupMask;
};

typedef enum _CM_ERROR_CONTROL_TYPE {
    CriticalError=3,
    IgnoreError=0,
    NormalError=1,
    SevereError=2
} _CM_ERROR_CONTROL_TYPE;

typedef enum _CM_SERVICE_LOAD_TYPE {
    AutoLoad=2,
    BootLoad=0,
    DemandLoad=3,
    DisableLoad=4,
    SystemLoad=1
} _CM_SERVICE_LOAD_TYPE;

typedef enum _CM_SERVICE_NODE_TYPE {
    AdapterType=4,
    DriverType=1,
    FileSystemType=2,
    RecognizerType=8,
    Win32ServiceOwnProcess=16,
    Win32ServiceShareProcess=32
} _CM_SERVICE_NODE_TYPE;

typedef struct _CONTEXT_CHUNK _CONTEXT_CHUNK, *P_CONTEXT_CHUNK;

struct _CONTEXT_CHUNK {
    LONG Offset;
    DWORD Length;
};

typedef struct _CONTEXT_EX _CONTEXT_EX, *P_CONTEXT_EX;

typedef struct _CONTEXT_CHUNK CONTEXT_CHUNK;

struct _CONTEXT_EX {
    CONTEXT_CHUNK All;
    CONTEXT_CHUNK Legacy;
    CONTEXT_CHUNK XState;
};

typedef enum _DEVICE_POWER_STATE {
    PowerDeviceD0=1,
    PowerDeviceD1=2,
    PowerDeviceD2=3,
    PowerDeviceD3=4,
    PowerDeviceMaximum=5,
    PowerDeviceUnspecified=0
} _DEVICE_POWER_STATE;

typedef struct _ENLISTMENT_BASIC_INFORMATION _ENLISTMENT_BASIC_INFORMATION, *P_ENLISTMENT_BASIC_INFORMATION;

struct _ENLISTMENT_BASIC_INFORMATION {
    GUID EnlistmentId;
    GUID TransactionId;
    GUID ResourceManagerId;
};

typedef struct _ENLISTMENT_CRM_INFORMATION _ENLISTMENT_CRM_INFORMATION, *P_ENLISTMENT_CRM_INFORMATION;

struct _ENLISTMENT_CRM_INFORMATION {
    GUID CrmTransactionManagerId;
    GUID CrmResourceManagerId;
    GUID CrmEnlistmentId;
};

typedef enum _ENLISTMENT_INFORMATION_CLASS {
    EnlistmentBasicInformation=0,
    EnlistmentCrmInformation=2,
    EnlistmentRecoveryInformation=1
} _ENLISTMENT_INFORMATION_CLASS;

typedef struct _EVENTLOGRECORD _EVENTLOGRECORD, *P_EVENTLOGRECORD;

struct _EVENTLOGRECORD {
    DWORD Length;
    DWORD Reserved;
    DWORD RecordNumber;
    DWORD TimeGenerated;
    DWORD TimeWritten;
    DWORD EventID;
    WORD EventType;
    WORD NumStrings;
    WORD EventCategory;
    WORD ReservedFlags;
    DWORD ClosingRecordNumber;
    DWORD StringOffset;
    DWORD UserSidLength;
    DWORD UserSidOffset;
    DWORD DataLength;
    DWORD DataOffset;
};

typedef struct _EVENTSFORLOGFILE _EVENTSFORLOGFILE, *P_EVENTSFORLOGFILE;

struct _EVENTSFORLOGFILE {
};

typedef struct _EXCEPTION_RECORD32 _EXCEPTION_RECORD32, *P_EXCEPTION_RECORD32;

struct _EXCEPTION_RECORD32 {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    DWORD ExceptionRecord;
    DWORD ExceptionAddress;
    DWORD NumberParameters;
    DWORD ExceptionInformation[15];
};

typedef struct _EXCEPTION_RECORD64 _EXCEPTION_RECORD64, *P_EXCEPTION_RECORD64;

struct _EXCEPTION_RECORD64 {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    DWORD64 ExceptionRecord;
    DWORD64 ExceptionAddress;
    DWORD NumberParameters;
    DWORD __unusedAlignment;
    DWORD64 ExceptionInformation[15];
};

typedef struct _EXCEPTION_REGISTRATION_RECORD _EXCEPTION_REGISTRATION_RECORD, *P_EXCEPTION_REGISTRATION_RECORD;

struct _EXCEPTION_REGISTRATION_RECORD {
};

typedef struct _FILE_NOTIFY_INFORMATION _FILE_NOTIFY_INFORMATION, *P_FILE_NOTIFY_INFORMATION;

struct _FILE_NOTIFY_INFORMATION {
    DWORD NextEntryOffset;
    DWORD Action;
    DWORD FileNameLength;
    WCHAR FileName[1];
};

typedef union _FILE_SEGMENT_ELEMENT _FILE_SEGMENT_ELEMENT, *P_FILE_SEGMENT_ELEMENT;

typedef void * PVOID64;

union _FILE_SEGMENT_ELEMENT {
    PVOID64 Buffer;
    ULONGLONG Alignment;
};

typedef struct _FLOAT128 _FLOAT128, *P_FLOAT128;

struct _FLOAT128 {
    longlong LowPart;
    longlong HighPart;
};

typedef struct _FPO_DATA _FPO_DATA, *P_FPO_DATA;

typedef union anon__struct_285_bitfield_1 anon__struct_285_bitfield_1, *Panon__struct_285_bitfield_1;

union anon__struct_285_bitfield_1 {
    WORD cbProlog:8; /* : bits 0-7 */
    WORD cbRegs:3; /* : bits 8-10 */
    WORD fHasSEH:1; /* : bits 11 */
    WORD fUseBP:1; /* : bits 12 */
    WORD reserved:1; /* : bits 13 */
    WORD cbFrame:2; /* : bits 14-15 */
};

struct _FPO_DATA {
    DWORD ulOffStart;
    DWORD cbProcSize;
    DWORD cdwLocals;
    WORD cdwParams;
    union anon__struct_285_bitfield_1 field_0xe;
};

typedef struct _GENERIC_MAPPING _GENERIC_MAPPING, *P_GENERIC_MAPPING;

struct _GENERIC_MAPPING {
    ACCESS_MASK GenericRead;
    ACCESS_MASK GenericWrite;
    ACCESS_MASK GenericExecute;
    ACCESS_MASK GenericAll;
};

typedef struct _GROUP_RELATIONSHIP _GROUP_RELATIONSHIP, *P_GROUP_RELATIONSHIP;

typedef struct _PROCESSOR_GROUP_INFO _PROCESSOR_GROUP_INFO, *P_PROCESSOR_GROUP_INFO;

typedef struct _PROCESSOR_GROUP_INFO PROCESSOR_GROUP_INFO;

struct _PROCESSOR_GROUP_INFO {
    BYTE MaximumProcessorCount;
    BYTE ActiveProcessorCount;
    BYTE Reserved[38];
    KAFFINITY ActiveProcessorMask;
};

struct _GROUP_RELATIONSHIP {
    WORD MaximumGroupCount;
    WORD ActiveGroupCount;
    BYTE Reserved[20];
    PROCESSOR_GROUP_INFO GroupInfo[1];
};

typedef struct _HARDWARE_COUNTER_DATA _HARDWARE_COUNTER_DATA, *P_HARDWARE_COUNTER_DATA;

typedef enum _HARDWARE_COUNTER_TYPE {
    MaxHardwareCounterType=1,
    PMCCounter=0
} _HARDWARE_COUNTER_TYPE;

typedef enum _HARDWARE_COUNTER_TYPE HARDWARE_COUNTER_TYPE;

struct _HARDWARE_COUNTER_DATA {
    HARDWARE_COUNTER_TYPE Type;
    DWORD Reserved;
    DWORD64 Value;
};

typedef enum _HEAP_INFORMATION_CLASS {
    HeapCompatibilityInformation=0,
    HeapEnableTerminationOnCorruption=1
} _HEAP_INFORMATION_CLASS;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
    ULONGLONG BeginAddress;
    ULONGLONG EndAddress;
    ULONGLONG ExceptionHandler;
    ULONGLONG HandlerData;
    ULONGLONG PrologEndAddress;
};

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD ExceptionHandler;
    DWORD HandlerData;
    DWORD PrologEndAddress;
};

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER _IMAGE_ARCHIVE_MEMBER_HEADER, *P_IMAGE_ARCHIVE_MEMBER_HEADER;

struct _IMAGE_ARCHIVE_MEMBER_HEADER {
    BYTE Name[16];
    BYTE Date[12];
    BYTE UserID[6];
    BYTE GroupID[6];
    BYTE Mode[8];
    BYTE Size[10];
    BYTE EndHeader[2];
};

typedef union _IMAGE_AUX_SYMBOL _IMAGE_AUX_SYMBOL, *P_IMAGE_AUX_SYMBOL;

typedef struct _struct_235 _struct_235, *P_struct_235;

typedef struct _struct_241 _struct_241, *P_struct_241;

typedef struct _struct_242 _struct_242, *P_struct_242;

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF IMAGE_AUX_SYMBOL_TOKEN_DEF, *PIMAGE_AUX_SYMBOL_TOKEN_DEF;

typedef struct _struct_243 _struct_243, *P_struct_243;

typedef union _union_236 _union_236, *P_union_236;

typedef union _union_238 _union_238, *P_union_238;

typedef struct _struct_237 _struct_237, *P_struct_237;

typedef struct _struct_239 _struct_239, *P_struct_239;

typedef struct _struct_240 _struct_240, *P_struct_240;

struct _struct_237 {
    WORD Linenumber;
    WORD Size;
};

union _union_236 {
    struct _struct_237 LnSz;
    DWORD TotalSize;
};

struct _struct_239 {
    DWORD PointerToLinenumber;
    DWORD PointerToNextFunction;
};

struct _struct_240 {
    WORD Dimension[4];
};

union _union_238 {
    struct _struct_239 Function;
    struct _struct_240 Array;
};

struct _struct_235 {
    DWORD TagIndex;
    union _union_236 Misc;
    union _union_238 FcnAry;
    WORD TvIndex;
};

struct _struct_241 {
    BYTE Name[18];
};

struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
    BYTE bAuxType;
    BYTE bReserved;
    DWORD SymbolTableIndex;
    BYTE rgbReserved[12];
};

struct _struct_242 {
    DWORD Length;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD CheckSum;
    SHORT Number;
    BYTE Selection;
    BYTE bReserved;
    SHORT HighNumber;
};

struct _struct_243 {
    DWORD crc;
    BYTE rgbReserved[14];
};

union _IMAGE_AUX_SYMBOL {
    struct _struct_235 Sym;
    struct _struct_241 File;
    struct _struct_242 Section;
    struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    struct _struct_243 CRC;
};

typedef union _IMAGE_AUX_SYMBOL_EX _IMAGE_AUX_SYMBOL_EX, *P_IMAGE_AUX_SYMBOL_EX;

typedef struct _struct_245 _struct_245, *P_struct_245;

typedef struct _struct_246 _struct_246, *P_struct_246;

typedef struct _struct_247 _struct_247, *P_struct_247;

typedef struct _struct_248 _struct_248, *P_struct_248;

typedef struct _struct_249 _struct_249, *P_struct_249;

struct _struct_249 {
    DWORD crc;
    BYTE rgbReserved[16];
};

struct _struct_246 {
    BYTE * Name;
};

struct _struct_248 {
    struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    BYTE rgbReserved[2];
};

struct _struct_245 {
    DWORD WeakDefaultSymIndex;
    DWORD WeakSearchType;
    BYTE rgbReserved[12];
};

struct _struct_247 {
    DWORD Length;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD CheckSum;
    SHORT Number;
    BYTE Selection;
    BYTE bReserved;
    SHORT HighNumber;
    BYTE rgbReserved[2];
};

union _IMAGE_AUX_SYMBOL_EX {
    struct _struct_245 Sym;
    struct _struct_246 File;
    struct _struct_247 Section;
    struct _struct_248 field3;
    struct _struct_249 CRC;
};

typedef struct _IMAGE_BASE_RELOCATION _IMAGE_BASE_RELOCATION, *P_IMAGE_BASE_RELOCATION;

struct _IMAGE_BASE_RELOCATION {
    DWORD VirtualAddress;
    DWORD SizeOfBlock;
};

typedef struct _IMAGE_BOUND_FORWARDER_REF _IMAGE_BOUND_FORWARDER_REF, *P_IMAGE_BOUND_FORWARDER_REF;

struct _IMAGE_BOUND_FORWARDER_REF {
    DWORD TimeDateStamp;
    WORD OffsetModuleName;
    WORD Reserved;
};

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR _IMAGE_BOUND_IMPORT_DESCRIPTOR, *P_IMAGE_BOUND_IMPORT_DESCRIPTOR;

struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
    DWORD TimeDateStamp;
    WORD OffsetModuleName;
    WORD NumberOfModuleForwarderRefs;
};

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY _IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef union anon__struct_279_bitfield_1 anon__struct_279_bitfield_1, *Panon__struct_279_bitfield_1;

union anon__struct_279_bitfield_1 {
    DWORD PrologLen:8; /* : bits 0-7 */
    DWORD FuncLen:22; /* : bits 8-29 */
    DWORD ThirtyTwoBit:1; /* : bits 30 */
    DWORD ExceptionFlag:1; /* : bits 31 */
};

struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
    DWORD FuncStart;
    union anon__struct_279_bitfield_1 field_0x4;
};

typedef struct _IMAGE_COFF_SYMBOLS_HEADER _IMAGE_COFF_SYMBOLS_HEADER, *P_IMAGE_COFF_SYMBOLS_HEADER;

struct _IMAGE_COFF_SYMBOLS_HEADER {
    DWORD NumberOfSymbols;
    DWORD LvaToFirstSymbol;
    DWORD NumberOfLinenumbers;
    DWORD LvaToFirstLinenumber;
    DWORD RvaToFirstByteOfCode;
    DWORD RvaToLastByteOfCode;
    DWORD RvaToFirstByteOfData;
    DWORD RvaToLastByteOfData;
};

typedef struct _IMAGE_DATA_DIRECTORY _IMAGE_DATA_DIRECTORY, *P_IMAGE_DATA_DIRECTORY;

struct _IMAGE_DATA_DIRECTORY {
    DWORD VirtualAddress;
    DWORD Size;
};

typedef struct _IMAGE_DEBUG_DIRECTORY _IMAGE_DEBUG_DIRECTORY, *P_IMAGE_DEBUG_DIRECTORY;

struct _IMAGE_DEBUG_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD Type;
    DWORD SizeOfData;
    DWORD AddressOfRawData;
    DWORD PointerToRawData;
};

typedef struct _IMAGE_DEBUG_MISC _IMAGE_DEBUG_MISC, *P_IMAGE_DEBUG_MISC;

struct _IMAGE_DEBUG_MISC {
    DWORD DataType;
    DWORD Length;
    BOOLEAN Unicode;
    BYTE Reserved[3];
    BYTE Data[1];
};

typedef struct _IMAGE_DOS_HEADER _IMAGE_DOS_HEADER, *P_IMAGE_DOS_HEADER;

struct _IMAGE_DOS_HEADER {
    WORD e_magic;
    WORD e_cblp;
    WORD e_cp;
    WORD e_crlc;
    WORD e_cparhdr;
    WORD e_minalloc;
    WORD e_maxalloc;
    WORD e_ss;
    WORD e_sp;
    WORD e_csum;
    WORD e_ip;
    WORD e_cs;
    WORD e_lfarlc;
    WORD e_ovno;
    WORD e_res[4];
    WORD e_oemid;
    WORD e_oeminfo;
    WORD e_res2[10];
    LONG e_lfanew;
};

typedef struct _IMAGE_EXPORT_DIRECTORY _IMAGE_EXPORT_DIRECTORY, *P_IMAGE_EXPORT_DIRECTORY;

struct _IMAGE_EXPORT_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD Name;
    DWORD Base;
    DWORD NumberOfFunctions;
    DWORD NumberOfNames;
    DWORD AddressOfFunctions;
    DWORD AddressOfNames;
    DWORD AddressOfNameOrdinals;
};

typedef struct _IMAGE_FILE_HEADER _IMAGE_FILE_HEADER, *P_IMAGE_FILE_HEADER;

struct _IMAGE_FILE_HEADER {
    WORD Machine;
    WORD NumberOfSections;
    DWORD TimeDateStamp;
    DWORD PointerToSymbolTable;
    DWORD NumberOfSymbols;
    WORD SizeOfOptionalHeader;
    WORD Characteristics;
};

typedef struct _IMAGE_FUNCTION_ENTRY _IMAGE_FUNCTION_ENTRY, *P_IMAGE_FUNCTION_ENTRY;

struct _IMAGE_FUNCTION_ENTRY {
    DWORD StartingAddress;
    DWORD EndingAddress;
    DWORD EndOfPrologue;
};

typedef struct _IMAGE_FUNCTION_ENTRY64 _IMAGE_FUNCTION_ENTRY64, *P_IMAGE_FUNCTION_ENTRY64;

typedef union _union_289 _union_289, *P_union_289;

union _union_289 {
    ULONGLONG EndOfPrologue;
    ULONGLONG UnwindInfoAddress;
};

struct _IMAGE_FUNCTION_ENTRY64 {
    ULONGLONG StartingAddress;
    ULONGLONG EndingAddress;
    union _union_289 u;
};

typedef struct _IMAGE_IMPORT_BY_NAME _IMAGE_IMPORT_BY_NAME, *P_IMAGE_IMPORT_BY_NAME;

struct _IMAGE_IMPORT_BY_NAME {
    WORD Hint;
    BYTE Name[1];
};

typedef struct _IMAGE_IMPORT_DESCRIPTOR _IMAGE_IMPORT_DESCRIPTOR, *P_IMAGE_IMPORT_DESCRIPTOR;

typedef union _union_265 _union_265, *P_union_265;

union _union_265 {
    DWORD Characteristics;
    DWORD OriginalFirstThunk;
};

struct _IMAGE_IMPORT_DESCRIPTOR {
    union _union_265 u;
    DWORD TimeDateStamp;
    DWORD ForwarderChain;
    DWORD Name;
    DWORD FirstThunk;
};

typedef struct _IMAGE_LINENUMBER _IMAGE_LINENUMBER, *P_IMAGE_LINENUMBER;

typedef union _union_253 _union_253, *P_union_253;

union _union_253 {
    DWORD SymbolTableIndex;
    DWORD VirtualAddress;
};

struct _IMAGE_LINENUMBER {
    union _union_253 Type;
    WORD Linenumber;
};

typedef struct _IMAGE_NT_HEADERS _IMAGE_NT_HEADERS, *P_IMAGE_NT_HEADERS;

typedef struct _IMAGE_FILE_HEADER IMAGE_FILE_HEADER;

typedef struct _IMAGE_OPTIONAL_HEADER _IMAGE_OPTIONAL_HEADER, *P_IMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_OPTIONAL_HEADER IMAGE_OPTIONAL_HEADER32;

typedef struct _IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY;

struct _IMAGE_OPTIONAL_HEADER {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    DWORD BaseOfData;
    DWORD ImageBase;
    DWORD SectionAlignment;
    DWORD FileAlignment;
    WORD MajorOperatingSystemVersion;
    WORD MinorOperatingSystemVersion;
    WORD MajorImageVersion;
    WORD MinorImageVersion;
    WORD MajorSubsystemVersion;
    WORD MinorSubsystemVersion;
    DWORD Win32VersionValue;
    DWORD SizeOfImage;
    DWORD SizeOfHeaders;
    DWORD CheckSum;
    WORD Subsystem;
    WORD DllCharacteristics;
    DWORD SizeOfStackReserve;
    DWORD SizeOfStackCommit;
    DWORD SizeOfHeapReserve;
    DWORD SizeOfHeapCommit;
    DWORD LoaderFlags;
    DWORD NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
};

struct _IMAGE_NT_HEADERS {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};

typedef struct _IMAGE_NT_HEADERS64 _IMAGE_NT_HEADERS64, *P_IMAGE_NT_HEADERS64;

typedef struct _IMAGE_OPTIONAL_HEADER64 _IMAGE_OPTIONAL_HEADER64, *P_IMAGE_OPTIONAL_HEADER64;

typedef struct _IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER64;

struct _IMAGE_OPTIONAL_HEADER64 {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    ULONGLONG ImageBase;
    DWORD SectionAlignment;
    DWORD FileAlignment;
    WORD MajorOperatingSystemVersion;
    WORD MinorOperatingSystemVersion;
    WORD MajorImageVersion;
    WORD MinorImageVersion;
    WORD MajorSubsystemVersion;
    WORD MinorSubsystemVersion;
    DWORD Win32VersionValue;
    DWORD SizeOfImage;
    DWORD SizeOfHeaders;
    DWORD CheckSum;
    WORD Subsystem;
    WORD DllCharacteristics;
    ULONGLONG SizeOfStackReserve;
    ULONGLONG SizeOfStackCommit;
    ULONGLONG SizeOfHeapReserve;
    ULONGLONG SizeOfHeapCommit;
    DWORD LoaderFlags;
    DWORD NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[16];
};

struct _IMAGE_NT_HEADERS64 {
    DWORD Signature;
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_OPTIONAL_HEADER64 OptionalHeader;
};

typedef struct _IMAGE_OS2_HEADER _IMAGE_OS2_HEADER, *P_IMAGE_OS2_HEADER;

struct _IMAGE_OS2_HEADER {
    WORD ne_magic;
    CHAR ne_ver;
    CHAR ne_rev;
    WORD ne_enttab;
    WORD ne_cbenttab;
    LONG ne_crc;
    WORD ne_flags;
    WORD ne_autodata;
    WORD ne_heap;
    WORD ne_stack;
    LONG ne_csip;
    LONG ne_sssp;
    WORD ne_cseg;
    WORD ne_cmod;
    WORD ne_cbnrestab;
    WORD ne_segtab;
    WORD ne_rsrctab;
    WORD ne_restab;
    WORD ne_modtab;
    WORD ne_imptab;
    LONG ne_nrestab;
    WORD ne_cmovent;
    WORD ne_align;
    WORD ne_cres;
    BYTE ne_exetyp;
    BYTE ne_flagsothers;
    WORD ne_pretthunks;
    WORD ne_psegrefbytes;
    WORD ne_swaparea;
    WORD ne_expver;
};

typedef struct _IMAGE_RELOCATION _IMAGE_RELOCATION, *P_IMAGE_RELOCATION;

typedef union _union_251 _union_251, *P_union_251;

union _union_251 {
    DWORD VirtualAddress;
    DWORD RelocCount;
};

struct _IMAGE_RELOCATION {
    union _union_251 u;
    DWORD SymbolTableIndex;
    WORD Type;
};

typedef struct _IMAGE_RESOURCE_DATA_ENTRY _IMAGE_RESOURCE_DATA_ENTRY, *P_IMAGE_RESOURCE_DATA_ENTRY;

struct _IMAGE_RESOURCE_DATA_ENTRY {
    DWORD OffsetToData;
    DWORD Size;
    DWORD CodePage;
    DWORD Reserved;
};

typedef struct _IMAGE_RESOURCE_DIR_STRING_U _IMAGE_RESOURCE_DIR_STRING_U, *P_IMAGE_RESOURCE_DIR_STRING_U;

struct _IMAGE_RESOURCE_DIR_STRING_U {
    WORD Length;
    WCHAR NameString[1];
};

typedef struct _IMAGE_RESOURCE_DIRECTORY _IMAGE_RESOURCE_DIRECTORY, *P_IMAGE_RESOURCE_DIRECTORY;

struct _IMAGE_RESOURCE_DIRECTORY {
    DWORD Characteristics;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    WORD NumberOfNamedEntries;
    WORD NumberOfIdEntries;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY _IMAGE_RESOURCE_DIRECTORY_ENTRY, *P_IMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef union _union_270 _union_270, *P_union_270;

typedef union _union_272 _union_272, *P_union_272;

typedef struct _struct_271 _struct_271, *P_struct_271;

typedef struct _struct_273 _struct_273, *P_struct_273;

typedef union anon__struct_271_bitfield_1 anon__struct_271_bitfield_1, *Panon__struct_271_bitfield_1;

typedef union anon__struct_273_bitfield_1 anon__struct_273_bitfield_1, *Panon__struct_273_bitfield_1;

union anon__struct_273_bitfield_1 {
    DWORD OffsetToDirectory:31; /* : bits 0-30 */
    DWORD DataIsDirectory:1; /* : bits 31 */
};

struct _struct_273 {
    union anon__struct_273_bitfield_1 field_0x0;
};

union _union_272 {
    DWORD OffsetToData;
    struct _struct_273 s2;
};

union anon__struct_271_bitfield_1 {
    DWORD NameOffset:31; /* : bits 0-30 */
    DWORD NameIsString:1; /* : bits 31 */
};

struct _struct_271 {
    union anon__struct_271_bitfield_1 field_0x0;
};

union _union_270 {
    struct _struct_271 s;
    DWORD Name;
    WORD Id;
};

struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union _union_270 u;
    union _union_272 u2;
};

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING _IMAGE_RESOURCE_DIRECTORY_STRING, *P_IMAGE_RESOURCE_DIRECTORY_STRING;

struct _IMAGE_RESOURCE_DIRECTORY_STRING {
    WORD Length;
    CHAR NameString[1];
};

typedef struct _IMAGE_ROM_HEADERS _IMAGE_ROM_HEADERS, *P_IMAGE_ROM_HEADERS;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER _IMAGE_ROM_OPTIONAL_HEADER, *P_IMAGE_ROM_OPTIONAL_HEADER;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER IMAGE_ROM_OPTIONAL_HEADER;

struct _IMAGE_ROM_OPTIONAL_HEADER {
    WORD Magic;
    BYTE MajorLinkerVersion;
    BYTE MinorLinkerVersion;
    DWORD SizeOfCode;
    DWORD SizeOfInitializedData;
    DWORD SizeOfUninitializedData;
    DWORD AddressOfEntryPoint;
    DWORD BaseOfCode;
    DWORD BaseOfData;
    DWORD BaseOfBss;
    DWORD GprMask;
    DWORD CprMask[4];
    DWORD GpValue;
};

struct _IMAGE_ROM_HEADERS {
    IMAGE_FILE_HEADER FileHeader;
    IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
};

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY _IMAGE_RUNTIME_FUNCTION_ENTRY, *P_IMAGE_RUNTIME_FUNCTION_ENTRY;

struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
    DWORD BeginAddress;
    DWORD EndAddress;
    DWORD UnwindInfoAddress;
};

typedef struct _IMAGE_SECTION_HEADER _IMAGE_SECTION_HEADER, *P_IMAGE_SECTION_HEADER;

typedef union _union_226 _union_226, *P_union_226;

union _union_226 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

struct _IMAGE_SECTION_HEADER {
    BYTE Name[8];
    union _union_226 Misc;
    DWORD VirtualAddress;
    DWORD SizeOfRawData;
    DWORD PointerToRawData;
    DWORD PointerToRelocations;
    DWORD PointerToLinenumbers;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD Characteristics;
};

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER _IMAGE_SEPARATE_DEBUG_HEADER, *P_IMAGE_SEPARATE_DEBUG_HEADER;

struct _IMAGE_SEPARATE_DEBUG_HEADER {
    WORD Signature;
    WORD Flags;
    WORD Machine;
    WORD Characteristics;
    DWORD TimeDateStamp;
    DWORD CheckSum;
    DWORD ImageBase;
    DWORD SizeOfImage;
    DWORD NumberOfSections;
    DWORD ExportedNamesSize;
    DWORD DebugDirectorySize;
    DWORD SectionAlignment;
    DWORD Reserved[2];
};

typedef struct _IMAGE_SYMBOL _IMAGE_SYMBOL, *P_IMAGE_SYMBOL;

typedef union _union_228 _union_228, *P_union_228;

typedef struct _struct_229 _struct_229, *P_struct_229;

struct _struct_229 {
    DWORD Short;
    DWORD Long;
};

union _union_228 {
    BYTE ShortName[8];
    struct _struct_229 Name;
    DWORD LongName[2];
};

struct _IMAGE_SYMBOL {
    union _union_228 N;
    DWORD Value;
    SHORT SectionNumber;
    WORD Type;
    BYTE StorageClass;
    BYTE NumberOfAuxSymbols;
};

typedef struct _IMAGE_SYMBOL_EX _IMAGE_SYMBOL_EX, *P_IMAGE_SYMBOL_EX;

typedef union _union_231 _union_231, *P_union_231;

typedef struct _struct_232 _struct_232, *P_struct_232;

struct _struct_232 {
    DWORD Short;
    DWORD Long;
};

union _union_231 {
    BYTE ShortName[8];
    struct _struct_232 Name;
    DWORD LongName[2];
};

struct _IMAGE_SYMBOL_EX {
    union _union_231 N;
    DWORD Value;
    LONG SectionNumber;
    WORD Type;
    BYTE StorageClass;
    BYTE NumberOfAuxSymbols;
};

typedef struct _IMAGE_THUNK_DATA64 _IMAGE_THUNK_DATA64, *P_IMAGE_THUNK_DATA64;

typedef union _union_259 _union_259, *P_union_259;

union _union_259 {
    ULONGLONG ForwarderString;
    ULONGLONG Function;
    ULONGLONG Ordinal;
    ULONGLONG AddressOfData;
};

struct _IMAGE_THUNK_DATA64 {
    union _union_259 u1;
};

typedef struct _IMAGE_TLS_DIRECTORY32 _IMAGE_TLS_DIRECTORY32, *P_IMAGE_TLS_DIRECTORY32;

struct _IMAGE_TLS_DIRECTORY32 {
    DWORD StartAddressOfRawData;
    DWORD EndAddressOfRawData;
    DWORD AddressOfIndex;
    DWORD AddressOfCallBacks;
    DWORD SizeOfZeroFill;
    DWORD Characteristics;
};

typedef struct _IMAGE_TLS_DIRECTORY64 _IMAGE_TLS_DIRECTORY64, *P_IMAGE_TLS_DIRECTORY64;

struct _IMAGE_TLS_DIRECTORY64 {
    ULONGLONG StartAddressOfRawData;
    ULONGLONG EndAddressOfRawData;
    ULONGLONG AddressOfIndex;
    ULONGLONG AddressOfCallBacks;
    DWORD SizeOfZeroFill;
    DWORD Characteristics;
};

typedef struct _IMAGE_VXD_HEADER _IMAGE_VXD_HEADER, *P_IMAGE_VXD_HEADER;

struct _IMAGE_VXD_HEADER {
    WORD e32_magic;
    BYTE e32_border;
    BYTE e32_worder;
    DWORD e32_level;
    WORD e32_cpu;
    WORD e32_os;
    DWORD e32_ver;
    DWORD e32_mflags;
    DWORD e32_mpages;
    DWORD e32_startobj;
    DWORD e32_eip;
    DWORD e32_stackobj;
    DWORD e32_esp;
    DWORD e32_pagesize;
    DWORD e32_lastpagesize;
    DWORD e32_fixupsize;
    DWORD e32_fixupsum;
    DWORD e32_ldrsize;
    DWORD e32_ldrsum;
    DWORD e32_objtab;
    DWORD e32_objcnt;
    DWORD e32_objmap;
    DWORD e32_itermap;
    DWORD e32_rsrctab;
    DWORD e32_rsrccnt;
    DWORD e32_restab;
    DWORD e32_enttab;
    DWORD e32_dirtab;
    DWORD e32_dircnt;
    DWORD e32_fpagetab;
    DWORD e32_frectab;
    DWORD e32_impmod;
    DWORD e32_impmodcnt;
    DWORD e32_impproc;
    DWORD e32_pagesum;
    DWORD e32_datapage;
    DWORD e32_preload;
    DWORD e32_nrestab;
    DWORD e32_cbnrestab;
    DWORD e32_nressum;
    DWORD e32_autodata;
    DWORD e32_debuginfo;
    DWORD e32_debuglen;
    DWORD e32_instpreload;
    DWORD e32_instdemand;
    DWORD e32_heapsize;
    BYTE e32_res3[12];
    DWORD e32_winresoff;
    DWORD e32_winreslen;
    WORD e32_devid;
    WORD e32_ddkver;
};

typedef struct _ImageArchitectureEntry _ImageArchitectureEntry, *P_ImageArchitectureEntry;

struct _ImageArchitectureEntry {
    DWORD FixupInstRVA;
    DWORD NewInst;
};

typedef struct _ImageArchitectureHeader _ImageArchitectureHeader, *P_ImageArchitectureHeader;

typedef union anon__struct_292_bitfield_1 anon__struct_292_bitfield_1, *Panon__struct_292_bitfield_1;

union anon__struct_292_bitfield_1 {
    uint AmaskValue:1; /* : bits 0 */
    uint AmaskShift:8; /* : bits 1-8 */
};

struct _ImageArchitectureHeader {
    union anon__struct_292_bitfield_1 field_0x0;
    DWORD FirstEntryRVA;
};

typedef struct _IO_COUNTERS _IO_COUNTERS, *P_IO_COUNTERS;

struct _IO_COUNTERS {
    ULONGLONG ReadOperationCount;
    ULONGLONG WriteOperationCount;
    ULONGLONG OtherOperationCount;
    ULONGLONG ReadTransferCount;
    ULONGLONG WriteTransferCount;
    ULONGLONG OtherTransferCount;
};

typedef struct _JOB_SET_ARRAY _JOB_SET_ARRAY, *P_JOB_SET_ARRAY;

struct _JOB_SET_ARRAY {
    HANDLE JobHandle;
    DWORD MemberLevel;
    DWORD Flags;
};

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT _JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *P_JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
    PVOID CompletionKey;
    HANDLE CompletionPort;
};

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *P_JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
    LARGE_INTEGER TotalUserTime;
    LARGE_INTEGER TotalKernelTime;
    LARGE_INTEGER ThisPeriodTotalUserTime;
    LARGE_INTEGER ThisPeriodTotalKernelTime;
    DWORD TotalPageFaultCount;
    DWORD TotalProcesses;
    DWORD ActiveProcesses;
    DWORD TotalTerminatedProcesses;
};

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *P_JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _IO_COUNTERS IO_COUNTERS;

struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
    JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
    IO_COUNTERS IoInfo;
};

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION _JOBOBJECT_BASIC_LIMIT_INFORMATION, *P_JOBOBJECT_BASIC_LIMIT_INFORMATION;

struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
    LARGE_INTEGER PerProcessUserTimeLimit;
    LARGE_INTEGER PerJobUserTimeLimit;
    DWORD LimitFlags;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    DWORD ActiveProcessLimit;
    ULONG_PTR Affinity;
    DWORD PriorityClass;
    DWORD SchedulingClass;
};

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST _JOBOBJECT_BASIC_PROCESS_ID_LIST, *P_JOBOBJECT_BASIC_PROCESS_ID_LIST;

struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
    DWORD NumberOfAssignedProcesses;
    DWORD NumberOfProcessIdsInList;
    ULONG_PTR ProcessIdList[1];
};

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS _JOBOBJECT_BASIC_UI_RESTRICTIONS, *P_JOBOBJECT_BASIC_UI_RESTRICTIONS;

struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
    DWORD UIRestrictionsClass;
};

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION _JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *P_JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
    DWORD EndOfJobTimeAction;
};

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION _JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *P_JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION JOBOBJECT_BASIC_LIMIT_INFORMATION;

struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
    JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
    IO_COUNTERS IoInfo;
    SIZE_T ProcessMemoryLimit;
    SIZE_T JobMemoryLimit;
    SIZE_T PeakProcessMemoryUsed;
    SIZE_T PeakJobMemoryUsed;
};

typedef struct _JOBOBJECT_JOBSET_INFORMATION _JOBOBJECT_JOBSET_INFORMATION, *P_JOBOBJECT_JOBSET_INFORMATION;

struct _JOBOBJECT_JOBSET_INFORMATION {
    DWORD MemberLevel;
};

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION _JOBOBJECT_SECURITY_LIMIT_INFORMATION, *P_JOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef struct _TOKEN_GROUPS _TOKEN_GROUPS, *P_TOKEN_GROUPS;

typedef struct _TOKEN_GROUPS * PTOKEN_GROUPS;

typedef struct _TOKEN_PRIVILEGES _TOKEN_PRIVILEGES, *P_TOKEN_PRIVILEGES;

typedef struct _TOKEN_PRIVILEGES * PTOKEN_PRIVILEGES;

typedef struct _SID_AND_ATTRIBUTES _SID_AND_ATTRIBUTES, *P_SID_AND_ATTRIBUTES;

typedef struct _SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES;

typedef struct _LUID_AND_ATTRIBUTES _LUID_AND_ATTRIBUTES, *P_LUID_AND_ATTRIBUTES;

typedef struct _LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES;

struct _LUID_AND_ATTRIBUTES {
    LUID Luid;
    DWORD Attributes;
};

struct _TOKEN_PRIVILEGES {
    DWORD PrivilegeCount;
    LUID_AND_ATTRIBUTES Privileges[1];
};

struct _SID_AND_ATTRIBUTES {
    PSID Sid;
    DWORD Attributes;
};

struct _TOKEN_GROUPS {
    DWORD GroupCount;
    SID_AND_ATTRIBUTES Groups[1];
};

struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
    DWORD SecurityLimitFlags;
    HANDLE JobToken;
    PTOKEN_GROUPS SidsToDisable;
    PTOKEN_PRIVILEGES PrivilegesToDelete;
    PTOKEN_GROUPS RestrictedSids;
};

typedef enum _JOBOBJECTINFOCLASS {
    JobObjectAssociateCompletionPortInformation=7,
    JobObjectBasicAccountingInformation=1,
    JobObjectBasicAndIoAccountingInformation=8,
    JobObjectBasicLimitInformation=2,
    JobObjectBasicProcessIdList=3,
    JobObjectBasicUIRestrictions=4,
    JobObjectEndOfJobTimeInformation=6,
    JobObjectExtendedLimitInformation=9,
    JobObjectGroupInformation=11,
    JobObjectJobSetInformation=10,
    JobObjectSecurityLimitInformation=5,
    MaxJobObjectInfoClass=12
} _JOBOBJECTINFOCLASS;

typedef struct _KTMOBJECT_CURSOR _KTMOBJECT_CURSOR, *P_KTMOBJECT_CURSOR;

struct _KTMOBJECT_CURSOR {
    GUID LastQuery;
    DWORD ObjectIdCount;
    GUID ObjectIds[1];
};

typedef enum _KTMOBJECT_TYPE {
    KTMOBJECT_ENLISTMENT=3,
    KTMOBJECT_INVALID=4,
    KTMOBJECT_RESOURCE_MANAGER=2,
    KTMOBJECT_TRANSACTION=0,
    KTMOBJECT_TRANSACTION_MANAGER=1
} _KTMOBJECT_TYPE;

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP {
    RelationAll=65535,
    RelationCache=2,
    RelationGroup=4,
    RelationNumaNode=1,
    RelationProcessorCore=0,
    RelationProcessorPackage=3
} _LOGICAL_PROCESSOR_RELATIONSHIP;

typedef struct _M128A _M128A, *P_M128A;

struct _M128A {
    ULONGLONG Low;
    LONGLONG High;
};

typedef enum _MANDATORY_LEVEL {
    MandatoryLevelCount=6,
    MandatoryLevelHigh=3,
    MandatoryLevelLow=1,
    MandatoryLevelMedium=2,
    MandatoryLevelSecureProcess=5,
    MandatoryLevelSystem=4,
    MandatoryLevelUntrusted=0
} _MANDATORY_LEVEL;

typedef struct _MEMORY_BASIC_INFORMATION _MEMORY_BASIC_INFORMATION, *P_MEMORY_BASIC_INFORMATION;

struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    DWORD AllocationProtect;
    SIZE_T RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef struct _MEMORY_BASIC_INFORMATION32 _MEMORY_BASIC_INFORMATION32, *P_MEMORY_BASIC_INFORMATION32;

struct _MEMORY_BASIC_INFORMATION32 {
    DWORD BaseAddress;
    DWORD AllocationBase;
    DWORD AllocationProtect;
    DWORD RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef struct _MEMORY_BASIC_INFORMATION64 _MEMORY_BASIC_INFORMATION64, *P_MEMORY_BASIC_INFORMATION64;

struct _MEMORY_BASIC_INFORMATION64 {
    ULONGLONG BaseAddress;
    ULONGLONG AllocationBase;
    DWORD AllocationProtect;
    DWORD __alignment1;
    ULONGLONG RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
    DWORD __alignment2;
};

typedef struct _MESSAGE_RESOURCE_BLOCK _MESSAGE_RESOURCE_BLOCK, *P_MESSAGE_RESOURCE_BLOCK;

struct _MESSAGE_RESOURCE_BLOCK {
    DWORD LowId;
    DWORD HighId;
    DWORD OffsetToEntries;
};

typedef struct _MESSAGE_RESOURCE_DATA _MESSAGE_RESOURCE_DATA, *P_MESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_BLOCK MESSAGE_RESOURCE_BLOCK;

struct _MESSAGE_RESOURCE_DATA {
    DWORD NumberOfBlocks;
    MESSAGE_RESOURCE_BLOCK Blocks[1];
};

typedef struct _MESSAGE_RESOURCE_ENTRY _MESSAGE_RESOURCE_ENTRY, *P_MESSAGE_RESOURCE_ENTRY;

struct _MESSAGE_RESOURCE_ENTRY {
    WORD Length;
    WORD Flags;
    BYTE Text[1];
};

typedef enum _MONITOR_DISPLAY_STATE {
    PowerMonitorDim=2,
    PowerMonitorOff=0,
    PowerMonitorOn=1
} _MONITOR_DISPLAY_STATE;

typedef struct _NON_PAGED_DEBUG_INFO _NON_PAGED_DEBUG_INFO, *P_NON_PAGED_DEBUG_INFO;

struct _NON_PAGED_DEBUG_INFO {
    WORD Signature;
    WORD Flags;
    DWORD Size;
    WORD Machine;
    WORD Characteristics;
    DWORD TimeDateStamp;
    DWORD CheckSum;
    DWORD SizeOfImage;
    ULONGLONG ImageBase;
};

typedef struct _NT_TIB _NT_TIB, *P_NT_TIB;

struct _NT_TIB {
    struct _EXCEPTION_REGISTRATION_RECORD * ExceptionList;
    PVOID StackBase;
    PVOID StackLimit;
    PVOID SubSystemTib;
    PVOID FiberData;
    PVOID ArbitraryUserPointer;
    struct _NT_TIB * Self;
};

typedef struct _NT_TIB32 _NT_TIB32, *P_NT_TIB32;

struct _NT_TIB32 {
    DWORD ExceptionList;
    DWORD StackBase;
    DWORD StackLimit;
    DWORD SubSystemTib;
    DWORD FiberData;
    DWORD ArbitraryUserPointer;
    DWORD Self;
};

typedef struct _NT_TIB64 _NT_TIB64, *P_NT_TIB64;

struct _NT_TIB64 {
    DWORD64 ExceptionList;
    DWORD64 StackBase;
    DWORD64 StackLimit;
    DWORD64 SubSystemTib;
    DWORD64 FiberData;
    DWORD64 ArbitraryUserPointer;
    DWORD64 Self;
};

typedef struct _NUMA_NODE_RELATIONSHIP _NUMA_NODE_RELATIONSHIP, *P_NUMA_NODE_RELATIONSHIP;

struct _NUMA_NODE_RELATIONSHIP {
    DWORD NodeNumber;
    BYTE Reserved[20];
    GROUP_AFFINITY GroupMask;
};

typedef struct _OBJECT_TYPE_LIST _OBJECT_TYPE_LIST, *P_OBJECT_TYPE_LIST;

struct _OBJECT_TYPE_LIST {
    WORD Level;
    WORD Sbz;
    GUID * ObjectType;
};

typedef struct _OBJECTID _OBJECTID, *P_OBJECTID;

struct _OBJECTID {
    GUID Lineage;
    DWORD Uniquifier;
};

typedef struct _OSVERSIONINFOA _OSVERSIONINFOA, *P_OSVERSIONINFOA;

struct _OSVERSIONINFOA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef struct _OSVERSIONINFOEXA _OSVERSIONINFOEXA, *P_OSVERSIONINFOEXA;

struct _OSVERSIONINFOEXA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
    WORD wServicePackMajor;
    WORD wServicePackMinor;
    WORD wSuiteMask;
    BYTE wProductType;
    BYTE wReserved;
};

typedef struct _OSVERSIONINFOEXW _OSVERSIONINFOEXW, *P_OSVERSIONINFOEXW;

struct _OSVERSIONINFOEXW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR szCSDVersion[128];
    WORD wServicePackMajor;
    WORD wServicePackMinor;
    WORD wSuiteMask;
    BYTE wProductType;
    BYTE wReserved;
};

typedef struct _OSVERSIONINFOW _OSVERSIONINFOW, *P_OSVERSIONINFOW;

struct _OSVERSIONINFOW {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    WCHAR szCSDVersion[128];
};

typedef struct _PACKEDEVENTINFO _PACKEDEVENTINFO, *P_PACKEDEVENTINFO;

struct _PACKEDEVENTINFO {
};

typedef struct _PERFORMANCE_DATA _PERFORMANCE_DATA, *P_PERFORMANCE_DATA;

typedef struct _HARDWARE_COUNTER_DATA HARDWARE_COUNTER_DATA;

struct _PERFORMANCE_DATA {
    WORD Size;
    BYTE Version;
    BYTE HwCountersCount;
    DWORD ContextSwitchCount;
    DWORD64 WaitReasonBitMap;
    DWORD64 CycleTime;
    DWORD RetryCount;
    DWORD Reserved;
    HARDWARE_COUNTER_DATA HwCounters[16];
};

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY * _PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef enum _POWER_REQUEST_TYPE {
    PowerRequestAwayModeRequired=2,
    PowerRequestDisplayRequired=0,
    PowerRequestSystemRequired=1
} _POWER_REQUEST_TYPE;

typedef struct _PRIVILEGE_SET _PRIVILEGE_SET, *P_PRIVILEGE_SET;

struct _PRIVILEGE_SET {
    DWORD PrivilegeCount;
    DWORD Control;
    LUID_AND_ATTRIBUTES Privilege[1];
};

typedef struct _PROCESSOR_NUMBER _PROCESSOR_NUMBER, *P_PROCESSOR_NUMBER;

struct _PROCESSOR_NUMBER {
    WORD Group;
    BYTE Number;
    BYTE Reserved;
};

typedef struct _PROCESSOR_POWER_POLICY _PROCESSOR_POWER_POLICY, *P_PROCESSOR_POWER_POLICY;

typedef union anon__struct_203_bitfield_1 anon__struct_203_bitfield_1, *Panon__struct_203_bitfield_1;

typedef struct _PROCESSOR_POWER_POLICY_INFO _PROCESSOR_POWER_POLICY_INFO, *P_PROCESSOR_POWER_POLICY_INFO;

typedef struct _PROCESSOR_POWER_POLICY_INFO PROCESSOR_POWER_POLICY_INFO;

typedef union anon__struct_202_bitfield_1 anon__struct_202_bitfield_1, *Panon__struct_202_bitfield_1;

union anon__struct_202_bitfield_1 {
    DWORD AllowDemotion:1; /* : bits 0 */
    DWORD AllowPromotion:1; /* : bits 1 */
    DWORD Reserved:30; /* : bits 2-31 */
};

struct _PROCESSOR_POWER_POLICY_INFO {
    DWORD TimeCheck;
    DWORD DemoteLimit;
    DWORD PromoteLimit;
    BYTE DemotePercent;
    BYTE PromotePercent;
    BYTE Spare[2];
    union anon__struct_202_bitfield_1 field_0x10;
};

union anon__struct_203_bitfield_1 {
    DWORD DisableCStates:1; /* : bits 0 */
    DWORD Reserved:31; /* : bits 1-31 */
};

struct _PROCESSOR_POWER_POLICY {
    DWORD Revision;
    BYTE DynamicThrottle;
    BYTE Spare[3];
    union anon__struct_203_bitfield_1 field_0x8;
    DWORD PolicyCount;
    PROCESSOR_POWER_POLICY_INFO Policy[3];
};

typedef struct _PROCESSOR_RELATIONSHIP _PROCESSOR_RELATIONSHIP, *P_PROCESSOR_RELATIONSHIP;

struct _PROCESSOR_RELATIONSHIP {
    BYTE Flags;
    BYTE Reserved[21];
    WORD GroupCount;
    GROUP_AFFINITY GroupMask[1];
};

typedef struct _QUOTA_LIMITS_EX _QUOTA_LIMITS_EX, *P_QUOTA_LIMITS_EX;

typedef union _RATE_QUOTA_LIMIT _RATE_QUOTA_LIMIT, *P_RATE_QUOTA_LIMIT;

typedef union _RATE_QUOTA_LIMIT RATE_QUOTA_LIMIT;

typedef struct _struct_133 _struct_133, *P_struct_133;

typedef union anon__struct_133_bitfield_1 anon__struct_133_bitfield_1, *Panon__struct_133_bitfield_1;

union anon__struct_133_bitfield_1 {
    DWORD RatePercent:7; /* : bits 0-6 */
    DWORD Reserved0:25; /* : bits 7-31 */
};

struct _struct_133 {
    union anon__struct_133_bitfield_1 field_0x0;
};

union _RATE_QUOTA_LIMIT {
    DWORD RateData;
    struct _struct_133 s;
};

struct _QUOTA_LIMITS_EX {
    SIZE_T PagedPoolLimit;
    SIZE_T NonPagedPoolLimit;
    SIZE_T MinimumWorkingSetSize;
    SIZE_T MaximumWorkingSetSize;
    SIZE_T PagefileLimit;
    LARGE_INTEGER TimeLimit;
    SIZE_T WorkingSetLimit;
    SIZE_T Reserved2;
    SIZE_T Reserved3;
    SIZE_T Reserved4;
    DWORD Flags;
    RATE_QUOTA_LIMIT CpuRateLimit;
};

typedef struct _REPARSE_GUID_DATA_BUFFER _REPARSE_GUID_DATA_BUFFER, *P_REPARSE_GUID_DATA_BUFFER;

typedef struct _struct_168 _struct_168, *P_struct_168;

struct _struct_168 {
    BYTE DataBuffer[1];
};

struct _REPARSE_GUID_DATA_BUFFER {
    DWORD ReparseTag;
    WORD ReparseDataLength;
    WORD Reserved;
    GUID ReparseGuid;
    struct _struct_168 GenericReparseBuffer;
};

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION _RESOURCEMANAGER_BASIC_INFORMATION, *P_RESOURCEMANAGER_BASIC_INFORMATION;

struct _RESOURCEMANAGER_BASIC_INFORMATION {
    GUID ResourceManagerId;
    DWORD DescriptionLength;
    WCHAR Description[1];
};

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION _RESOURCEMANAGER_COMPLETION_INFORMATION, *P_RESOURCEMANAGER_COMPLETION_INFORMATION;

struct _RESOURCEMANAGER_COMPLETION_INFORMATION {
    HANDLE IoCompletionPortHandle;
    ULONG_PTR CompletionKey;
};

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS {
    ResourceManagerBasicInformation=0,
    ResourceManagerCompletionInformation=1
} _RESOURCEMANAGER_INFORMATION_CLASS;

typedef struct _SE_ACCESS_REPLY _SE_ACCESS_REPLY, *P_SE_ACCESS_REPLY;

typedef ACCESS_MASK * PACCESS_MASK;

typedef struct _ACCESS_REASONS * PACCESS_REASONS;

typedef struct _PRIVILEGE_SET * PPRIVILEGE_SET;

struct _SE_ACCESS_REPLY {
    DWORD Size;
    DWORD ResultListCount;
    PACCESS_MASK GrantedAccess;
    PDWORD AccessStatus;
    PACCESS_REASONS AccessReason;
    PPRIVILEGE_SET * Privileges;
};

typedef struct _SE_ACCESS_REQUEST _SE_ACCESS_REQUEST, *P_SE_ACCESS_REQUEST;

typedef struct _SE_SECURITY_DESCRIPTOR _SE_SECURITY_DESCRIPTOR, *P_SE_SECURITY_DESCRIPTOR;

typedef struct _SE_SECURITY_DESCRIPTOR * PSE_SECURITY_DESCRIPTOR;

typedef struct _GENERIC_MAPPING GENERIC_MAPPING;

typedef GENERIC_MAPPING * PGENERIC_MAPPING;

typedef struct _OBJECT_TYPE_LIST * POBJECT_TYPE_LIST;

struct _SE_SECURITY_DESCRIPTOR {
    DWORD Size;
    DWORD Flags;
    PSECURITY_DESCRIPTOR SecurityDescriptor;
};

struct _SE_ACCESS_REQUEST {
    DWORD Size;
    PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor;
    ACCESS_MASK DesiredAccess;
    ACCESS_MASK PreviouslyGrantedAccess;
    PSID PrincipalSelfSid;
    PGENERIC_MAPPING GenericMapping;
    DWORD ObjectTypeListCount;
    POBJECT_TYPE_LIST ObjectTypeList;
};

typedef struct _SE_IMPERSONATION_STATE _SE_IMPERSONATION_STATE, *P_SE_IMPERSONATION_STATE;

typedef PVOID PACCESS_TOKEN;

struct _SE_IMPERSONATION_STATE {
    PACCESS_TOKEN Token;
    BOOLEAN CopyOnOpen;
    BOOLEAN EffectiveOnly;
    SECURITY_IMPERSONATION_LEVEL Level;
};

typedef struct _SECURITY_DESCRIPTOR _SECURITY_DESCRIPTOR, *P_SECURITY_DESCRIPTOR;

typedef struct _ACL ACL;

typedef ACL * PACL;

struct _SECURITY_DESCRIPTOR {
    BYTE Revision;
    BYTE Sbz1;
    SECURITY_DESCRIPTOR_CONTROL Control;
    PSID Owner;
    PSID Group;
    PACL Sacl;
    PACL Dacl;
};

typedef struct _SID_AND_ATTRIBUTES_HASH _SID_AND_ATTRIBUTES_HASH, *P_SID_AND_ATTRIBUTES_HASH;

typedef struct _SID_AND_ATTRIBUTES * PSID_AND_ATTRIBUTES;

typedef ULONG_PTR SID_HASH_ENTRY;

struct _SID_AND_ATTRIBUTES_HASH {
    DWORD SidCount;
    PSID_AND_ATTRIBUTES SidAttr;
    SID_HASH_ENTRY Hash[32];
};

typedef struct _SINGLE_LIST_ENTRY _SINGLE_LIST_ENTRY, *P_SINGLE_LIST_ENTRY;

struct _SINGLE_LIST_ENTRY {
    struct _SINGLE_LIST_ENTRY * Next;
};

typedef union _SLIST_HEADER _SLIST_HEADER, *P_SLIST_HEADER;

typedef struct _struct_299 _struct_299, *P_struct_299;

typedef struct _SINGLE_LIST_ENTRY SINGLE_LIST_ENTRY;

struct _struct_299 {
    SINGLE_LIST_ENTRY Next;
    WORD Depth;
    WORD Sequence;
};

union _SLIST_HEADER {
    ULONGLONG Alignment;
    struct _struct_299 s;
};

typedef struct _struct_149 _struct_149, *P_struct_149;

struct _struct_149 {
    BYTE Flags;
};

typedef struct _struct_150 _struct_150, *P_struct_150;

struct _struct_150 {
    DWORD NodeNumber;
};

typedef struct _struct_201 _struct_201, *P_struct_201;

typedef union anon__struct_201_bitfield_1 anon__struct_201_bitfield_1, *Panon__struct_201_bitfield_1;

union anon__struct_201_bitfield_1 {
    WORD AllowScaling:1; /* : bits 0 */
    WORD Disabled:1; /* : bits 1 */
    WORD Reserved:14; /* : bits 2-15 */
};

struct _struct_201 {
    union anon__struct_201_bitfield_1 field_0x0;
};

typedef struct _struct_207 _struct_207, *P_struct_207;

typedef union anon__struct_207_bitfield_1 anon__struct_207_bitfield_1, *Panon__struct_207_bitfield_1;

union anon__struct_207_bitfield_1 {
    BYTE NoDomainAccounting:1; /* : bits 0 */
    BYTE IncreasePolicy:2; /* : bits 1-2 */
    BYTE DecreasePolicy:2; /* : bits 3-4 */
    BYTE Reserved:3; /* : bits 5-7 */
};

struct _struct_207 {
    union anon__struct_207_bitfield_1 field_0x0;
};

typedef struct _struct_382 _struct_382, *P_struct_382;

typedef union anon__struct_382_bitfield_1 anon__struct_382_bitfield_1, *Panon__struct_382_bitfield_1;

union anon__struct_382_bitfield_1 {
    DWORD LongFunction:1; /* : bits 0 */
    DWORD Persistent:1; /* : bits 1 */
    DWORD Private:30; /* : bits 2-31 */
};

struct _struct_382 {
    union anon__struct_382_bitfield_1 field_0x0;
};

typedef struct _struct_61 _struct_61, *P_struct_61;

struct _struct_61 {
    BYTE BaseMid;
    BYTE Flags1;
    BYTE Flags2;
    BYTE BaseHi;
};

typedef struct _struct_62 _struct_62, *P_struct_62;

typedef union anon__struct_62_bitfield_1 anon__struct_62_bitfield_1, *Panon__struct_62_bitfield_1;

union anon__struct_62_bitfield_1 {
    DWORD BaseMid:8; /* : bits 0-7 */
    DWORD Type:5; /* : bits 8-12 */
    DWORD Dpl:2; /* : bits 13-14 */
    DWORD Pres:1; /* : bits 15 */
    DWORD LimitHi:4; /* : bits 16-19 */
    DWORD Sys:1; /* : bits 20 */
    DWORD Reserved_0:1; /* : bits 21 */
    DWORD Default_Big:1; /* : bits 22 */
    DWORD Granularity:1; /* : bits 23 */
    DWORD BaseHi:8; /* : bits 24-31 */
};

struct _struct_62 {
    union anon__struct_62_bitfield_1 field_0x0;
};

typedef struct _SUPPORTED_OS_INFO _SUPPORTED_OS_INFO, *P_SUPPORTED_OS_INFO;

struct _SUPPORTED_OS_INFO {
    WORD OsCount;
    WORD MitigationExist;
    WORD OsList[4];
};

typedef struct _SYSTEM_ALARM_ACE _SYSTEM_ALARM_ACE, *P_SYSTEM_ALARM_ACE;

struct _SYSTEM_ALARM_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _SYSTEM_ALARM_CALLBACK_ACE _SYSTEM_ALARM_CALLBACK_ACE, *P_SYSTEM_ALARM_CALLBACK_ACE;

struct _SYSTEM_ALARM_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE _SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *P_SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _SYSTEM_ALARM_OBJECT_ACE _SYSTEM_ALARM_OBJECT_ACE, *P_SYSTEM_ALARM_OBJECT_ACE;

struct _SYSTEM_ALARM_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _SYSTEM_AUDIT_ACE _SYSTEM_AUDIT_ACE, *P_SYSTEM_AUDIT_ACE;

struct _SYSTEM_AUDIT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE _SYSTEM_AUDIT_CALLBACK_ACE, *P_SYSTEM_AUDIT_CALLBACK_ACE;

struct _SYSTEM_AUDIT_CALLBACK_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *P_SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _SYSTEM_AUDIT_OBJECT_ACE _SYSTEM_AUDIT_OBJECT_ACE, *P_SYSTEM_AUDIT_OBJECT_ACE;

struct _SYSTEM_AUDIT_OBJECT_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD Flags;
    GUID ObjectType;
    GUID InheritedObjectType;
    DWORD SidStart;
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION _SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *P_SYSTEM_LOGICAL_PROCESSOR_INFORMATION;

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP LOGICAL_PROCESSOR_RELATIONSHIP;

typedef union _union_148 _union_148, *P_union_148;

typedef struct _CACHE_DESCRIPTOR CACHE_DESCRIPTOR;

union _union_148 {
    struct _struct_149 ProcessorCore;
    struct _struct_150 NumaNode;
    CACHE_DESCRIPTOR Cache;
    ULONGLONG Reserved[2];
};

struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
    ULONG_PTR ProcessorMask;
    LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    union _union_148 u;
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX, *P_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;

typedef union _union_157 _union_157, *P_union_157;

typedef struct _PROCESSOR_RELATIONSHIP PROCESSOR_RELATIONSHIP;

typedef struct _NUMA_NODE_RELATIONSHIP NUMA_NODE_RELATIONSHIP;

typedef struct _CACHE_RELATIONSHIP CACHE_RELATIONSHIP;

typedef struct _GROUP_RELATIONSHIP GROUP_RELATIONSHIP;

union _union_157 {
    PROCESSOR_RELATIONSHIP Processor;
    NUMA_NODE_RELATIONSHIP NumaNode;
    CACHE_RELATIONSHIP Cache;
    GROUP_RELATIONSHIP Group;
};

struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX {
    LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
    DWORD Size;
    union _union_157 u;
};

typedef struct _SYSTEM_MANDATORY_LABEL_ACE _SYSTEM_MANDATORY_LABEL_ACE, *P_SYSTEM_MANDATORY_LABEL_ACE;

struct _SYSTEM_MANDATORY_LABEL_ACE {
    ACE_HEADER Header;
    ACCESS_MASK Mask;
    DWORD SidStart;
};

typedef struct _SYSTEM_POWER_POLICY _SYSTEM_POWER_POLICY, *P_SYSTEM_POWER_POLICY;

typedef struct POWER_ACTION_POLICY POWER_ACTION_POLICY, *PPOWER_ACTION_POLICY;

typedef struct SYSTEM_POWER_LEVEL SYSTEM_POWER_LEVEL, *PSYSTEM_POWER_LEVEL;

typedef enum enum_169 {
    PowerActionHibernate=3,
    PowerActionNone=0,
    PowerActionReserved=1,
    PowerActionShutdown=4,
    PowerActionShutdownOff=6,
    PowerActionShutdownReset=5,
    PowerActionSleep=2,
    PowerActionWarmEject=7
} enum_169;

typedef enum enum_169 POWER_ACTION;

struct POWER_ACTION_POLICY {
    POWER_ACTION Action;
    DWORD Flags;
    DWORD EventCode;
};

struct SYSTEM_POWER_LEVEL {
    BOOLEAN Enable;
    BYTE Spare[3];
    DWORD BatteryLevel;
    struct POWER_ACTION_POLICY PowerPolicy;
    SYSTEM_POWER_STATE MinSystemState;
};

struct _SYSTEM_POWER_POLICY {
    DWORD Revision;
    struct POWER_ACTION_POLICY PowerButton;
    struct POWER_ACTION_POLICY SleepButton;
    struct POWER_ACTION_POLICY LidClose;
    SYSTEM_POWER_STATE LidOpenWake;
    DWORD Reserved;
    struct POWER_ACTION_POLICY Idle;
    DWORD IdleTimeout;
    BYTE IdleSensitivity;
    BYTE DynamicThrottle;
    BYTE Spare2[2];
    SYSTEM_POWER_STATE MinSleep;
    SYSTEM_POWER_STATE MaxSleep;
    SYSTEM_POWER_STATE ReducedLatencySleep;
    DWORD WinLogonFlags;
    DWORD Spare3;
    DWORD DozeS4Timeout;
    DWORD BroadcastCapacityResolution;
    struct SYSTEM_POWER_LEVEL DischargePolicy[4];
    DWORD VideoTimeout;
    BOOLEAN VideoDimDisplay;
    DWORD VideoReserved[3];
    DWORD SpindownTimeout;
    BOOLEAN OptimizeForPower;
    BYTE FanThrottleTolerance;
    BYTE ForcedThrottle;
    BYTE MinThrottle;
    struct POWER_ACTION_POLICY OverThrottled;
};

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION, *P_SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;

struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION {
    DWORD64 CycleTime;
};

typedef struct _TAPE_CREATE_PARTITION _TAPE_CREATE_PARTITION, *P_TAPE_CREATE_PARTITION;

struct _TAPE_CREATE_PARTITION {
    DWORD Method;
    DWORD Count;
    DWORD Size;
};

typedef enum _TAPE_DRIVE_PROBLEM_TYPE {
    TapeDriveCleanDriveNow=11,
    TapeDriveHardwareError=7,
    TapeDriveMediaLifeExpired=12,
    TapeDriveProblemNone=0,
    TapeDriveReadError=5,
    TapeDriveReadWarning=3,
    TapeDriveReadWriteError=2,
    TapeDriveReadWriteWarning=1,
    TapeDriveScsiConnectionError=9,
    TapeDriveSnappedTape=13,
    TapeDriveTimetoClean=10,
    TapeDriveUnsupportedMedia=8,
    TapeDriveWriteError=6,
    TapeDriveWriteWarning=4
} _TAPE_DRIVE_PROBLEM_TYPE;

typedef struct _TAPE_ERASE _TAPE_ERASE, *P_TAPE_ERASE;

struct _TAPE_ERASE {
    DWORD Type;
    BOOLEAN Immediate;
};

typedef struct _TAPE_GET_DRIVE_PARAMETERS _TAPE_GET_DRIVE_PARAMETERS, *P_TAPE_GET_DRIVE_PARAMETERS;

struct _TAPE_GET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD DefaultBlockSize;
    DWORD MaximumBlockSize;
    DWORD MinimumBlockSize;
    DWORD MaximumPartitionCount;
    DWORD FeaturesLow;
    DWORD FeaturesHigh;
    DWORD EOTWarningZoneSize;
};

typedef struct _TAPE_GET_MEDIA_PARAMETERS _TAPE_GET_MEDIA_PARAMETERS, *P_TAPE_GET_MEDIA_PARAMETERS;

struct _TAPE_GET_MEDIA_PARAMETERS {
    LARGE_INTEGER Capacity;
    LARGE_INTEGER Remaining;
    DWORD BlockSize;
    DWORD PartitionCount;
    BOOLEAN WriteProtected;
};

typedef struct _TAPE_GET_POSITION _TAPE_GET_POSITION, *P_TAPE_GET_POSITION;

struct _TAPE_GET_POSITION {
    DWORD Type;
    DWORD Partition;
    LARGE_INTEGER Offset;
};

typedef struct _TAPE_PREPARE _TAPE_PREPARE, *P_TAPE_PREPARE;

struct _TAPE_PREPARE {
    DWORD Operation;
    BOOLEAN Immediate;
};

typedef struct _TAPE_SET_DRIVE_PARAMETERS _TAPE_SET_DRIVE_PARAMETERS, *P_TAPE_SET_DRIVE_PARAMETERS;

struct _TAPE_SET_DRIVE_PARAMETERS {
    BOOLEAN ECC;
    BOOLEAN Compression;
    BOOLEAN DataPadding;
    BOOLEAN ReportSetmarks;
    DWORD EOTWarningZoneSize;
};

typedef struct _TAPE_SET_MEDIA_PARAMETERS _TAPE_SET_MEDIA_PARAMETERS, *P_TAPE_SET_MEDIA_PARAMETERS;

struct _TAPE_SET_MEDIA_PARAMETERS {
    DWORD BlockSize;
};

typedef struct _TAPE_SET_POSITION _TAPE_SET_POSITION, *P_TAPE_SET_POSITION;

struct _TAPE_SET_POSITION {
    DWORD Method;
    DWORD Partition;
    LARGE_INTEGER Offset;
    BOOLEAN Immediate;
};

typedef struct _TAPE_WMI_OPERATIONS _TAPE_WMI_OPERATIONS, *P_TAPE_WMI_OPERATIONS;

struct _TAPE_WMI_OPERATIONS {
    DWORD Method;
    DWORD DataBufferSize;
    PVOID DataBuffer;
};

typedef struct _TAPE_WRITE_MARKS _TAPE_WRITE_MARKS, *P_TAPE_WRITE_MARKS;

struct _TAPE_WRITE_MARKS {
    DWORD Type;
    DWORD Count;
    BOOLEAN Immediate;
};

typedef struct _TEB _TEB, *P_TEB;

struct _TEB {
};

typedef struct _TOKEN_ACCESS_INFORMATION _TOKEN_ACCESS_INFORMATION, *P_TOKEN_ACCESS_INFORMATION;

typedef struct _SID_AND_ATTRIBUTES_HASH * PSID_AND_ATTRIBUTES_HASH;

typedef enum _TOKEN_TYPE {
    TokenImpersonation=2,
    TokenPrimary=1
} _TOKEN_TYPE;

typedef enum _TOKEN_TYPE TOKEN_TYPE;

typedef struct _TOKEN_MANDATORY_POLICY _TOKEN_MANDATORY_POLICY, *P_TOKEN_MANDATORY_POLICY;

typedef struct _TOKEN_MANDATORY_POLICY TOKEN_MANDATORY_POLICY;

struct _TOKEN_MANDATORY_POLICY {
    DWORD Policy;
};

struct _TOKEN_ACCESS_INFORMATION {
    PSID_AND_ATTRIBUTES_HASH SidHash;
    PSID_AND_ATTRIBUTES_HASH RestrictedSidHash;
    PTOKEN_PRIVILEGES Privileges;
    LUID AuthenticationId;
    TOKEN_TYPE TokenType;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    TOKEN_MANDATORY_POLICY MandatoryPolicy;
    DWORD Flags;
};

typedef struct _TOKEN_AUDIT_POLICY _TOKEN_AUDIT_POLICY, *P_TOKEN_AUDIT_POLICY;

struct _TOKEN_AUDIT_POLICY {
    BYTE PerUserPolicy[27];
};

typedef struct _TOKEN_CONTROL _TOKEN_CONTROL, *P_TOKEN_CONTROL;

typedef struct _TOKEN_SOURCE _TOKEN_SOURCE, *P_TOKEN_SOURCE;

typedef struct _TOKEN_SOURCE TOKEN_SOURCE;

struct _TOKEN_SOURCE {
    CHAR SourceName[8];
    LUID SourceIdentifier;
};

struct _TOKEN_CONTROL {
    LUID TokenId;
    LUID AuthenticationId;
    LUID ModifiedId;
    TOKEN_SOURCE TokenSource;
};

typedef struct _TOKEN_DEFAULT_DACL _TOKEN_DEFAULT_DACL, *P_TOKEN_DEFAULT_DACL;

struct _TOKEN_DEFAULT_DACL {
    PACL DefaultDacl;
};

typedef struct _TOKEN_ELEVATION _TOKEN_ELEVATION, *P_TOKEN_ELEVATION;

struct _TOKEN_ELEVATION {
    DWORD TokenIsElevated;
};

typedef enum _TOKEN_ELEVATION_TYPE {
    TokenElevationTypeDefault=1,
    TokenElevationTypeFull=2,
    TokenElevationTypeLimited=3
} _TOKEN_ELEVATION_TYPE;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES _TOKEN_GROUPS_AND_PRIVILEGES, *P_TOKEN_GROUPS_AND_PRIVILEGES;

typedef struct _LUID_AND_ATTRIBUTES * PLUID_AND_ATTRIBUTES;

struct _TOKEN_GROUPS_AND_PRIVILEGES {
    DWORD SidCount;
    DWORD SidLength;
    PSID_AND_ATTRIBUTES Sids;
    DWORD RestrictedSidCount;
    DWORD RestrictedSidLength;
    PSID_AND_ATTRIBUTES RestrictedSids;
    DWORD PrivilegeCount;
    DWORD PrivilegeLength;
    PLUID_AND_ATTRIBUTES Privileges;
    LUID AuthenticationId;
};

typedef enum _TOKEN_INFORMATION_CLASS {
    MaxTokenInfoClass=29,
    TokenAccessInformation=22,
    TokenAuditPolicy=16,
    TokenDefaultDacl=6,
    TokenElevation=20,
    TokenElevationType=18,
    TokenGroups=2,
    TokenGroupsAndPrivileges=13,
    TokenHasRestrictions=21,
    TokenImpersonationLevel=9,
    TokenIntegrityLevel=25,
    TokenLinkedToken=19,
    TokenLogonSid=28,
    TokenMandatoryPolicy=27,
    TokenOrigin=17,
    TokenOwner=4,
    TokenPrimaryGroup=5,
    TokenPrivileges=3,
    TokenRestrictedSids=11,
    TokenSandBoxInert=15,
    TokenSessionId=12,
    TokenSessionReference=14,
    TokenSource=7,
    TokenStatistics=10,
    TokenType=8,
    TokenUIAccess=26,
    TokenUser=1,
    TokenVirtualizationAllowed=23,
    TokenVirtualizationEnabled=24
} _TOKEN_INFORMATION_CLASS;

typedef struct _TOKEN_LINKED_TOKEN _TOKEN_LINKED_TOKEN, *P_TOKEN_LINKED_TOKEN;

struct _TOKEN_LINKED_TOKEN {
    HANDLE LinkedToken;
};

typedef struct _TOKEN_MANDATORY_LABEL _TOKEN_MANDATORY_LABEL, *P_TOKEN_MANDATORY_LABEL;

struct _TOKEN_MANDATORY_LABEL {
    SID_AND_ATTRIBUTES Label;
};

typedef struct _TOKEN_ORIGIN _TOKEN_ORIGIN, *P_TOKEN_ORIGIN;

struct _TOKEN_ORIGIN {
    LUID OriginatingLogonSession;
};

typedef struct _TOKEN_OWNER _TOKEN_OWNER, *P_TOKEN_OWNER;

struct _TOKEN_OWNER {
    PSID Owner;
};

typedef struct _TOKEN_PRIMARY_GROUP _TOKEN_PRIMARY_GROUP, *P_TOKEN_PRIMARY_GROUP;

struct _TOKEN_PRIMARY_GROUP {
    PSID PrimaryGroup;
};

typedef struct _TOKEN_STATISTICS _TOKEN_STATISTICS, *P_TOKEN_STATISTICS;

struct _TOKEN_STATISTICS {
    LUID TokenId;
    LUID AuthenticationId;
    LARGE_INTEGER ExpirationTime;
    TOKEN_TYPE TokenType;
    SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
    DWORD DynamicCharged;
    DWORD DynamicAvailable;
    DWORD GroupCount;
    DWORD PrivilegeCount;
    LUID ModifiedId;
};

typedef struct _TOKEN_USER _TOKEN_USER, *P_TOKEN_USER;

struct _TOKEN_USER {
    SID_AND_ATTRIBUTES User;
};

typedef struct _TP_CALLBACK_ENVIRON_V3 _TP_CALLBACK_ENVIRON_V3, *P_TP_CALLBACK_ENVIRON_V3;

typedef DWORD TP_VERSION;

typedef struct _TP_POOL _TP_POOL, *P_TP_POOL;

typedef struct _TP_POOL * PTP_POOL;

typedef struct _TP_CLEANUP_GROUP _TP_CLEANUP_GROUP, *P_TP_CLEANUP_GROUP;

typedef struct _TP_CLEANUP_GROUP * PTP_CLEANUP_GROUP;

typedef void (* PTP_CLEANUP_GROUP_CANCEL_CALLBACK)(PVOID, PVOID);

typedef void (* PTP_SIMPLE_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID);

typedef union _union_381 _union_381, *P_union_381;

typedef enum _TP_CALLBACK_PRIORITY {
    TP_CALLBACK_PRIORITY_HIGH=0,
    TP_CALLBACK_PRIORITY_INVALID=3,
    TP_CALLBACK_PRIORITY_LOW=2,
    TP_CALLBACK_PRIORITY_NORMAL=1
} _TP_CALLBACK_PRIORITY;

typedef enum _TP_CALLBACK_PRIORITY TP_CALLBACK_PRIORITY;

struct _TP_CLEANUP_GROUP {
};

union _union_381 {
    DWORD Flags;
    struct _struct_382 s;
};

struct _TP_CALLBACK_ENVIRON_V3 {
    TP_VERSION Version;
    PTP_POOL Pool;
    PTP_CLEANUP_GROUP CleanupGroup;
    PTP_CLEANUP_GROUP_CANCEL_CALLBACK CleanupGroupCancelCallback;
    PVOID RaceDll;
    struct _ACTIVATION_CONTEXT * ActivationContext;
    PTP_SIMPLE_CALLBACK FinalizationCallback;
    union _union_381 u;
    TP_CALLBACK_PRIORITY CallbackPriority;
    DWORD Size;
};

struct _TP_POOL {
};

typedef struct _TP_POOL_STACK_INFORMATION _TP_POOL_STACK_INFORMATION, *P_TP_POOL_STACK_INFORMATION;

struct _TP_POOL_STACK_INFORMATION {
    SIZE_T StackReserve;
    SIZE_T StackCommit;
};

typedef struct _TP_TIMER _TP_TIMER, *P_TP_TIMER;

struct _TP_TIMER {
};

typedef struct _TP_WAIT _TP_WAIT, *P_TP_WAIT;

struct _TP_WAIT {
};

typedef struct _TP_WORK _TP_WORK, *P_TP_WORK;

struct _TP_WORK {
};

typedef struct _TRANSACTION_BASIC_INFORMATION _TRANSACTION_BASIC_INFORMATION, *P_TRANSACTION_BASIC_INFORMATION;

struct _TRANSACTION_BASIC_INFORMATION {
    GUID TransactionId;
    DWORD State;
    DWORD Outcome;
};

typedef struct _TRANSACTION_BIND_INFORMATION _TRANSACTION_BIND_INFORMATION, *P_TRANSACTION_BIND_INFORMATION;

struct _TRANSACTION_BIND_INFORMATION {
    HANDLE TmHandle;
};

typedef struct _TRANSACTION_ENLISTMENT_PAIR _TRANSACTION_ENLISTMENT_PAIR, *P_TRANSACTION_ENLISTMENT_PAIR;

struct _TRANSACTION_ENLISTMENT_PAIR {
    GUID EnlistmentId;
    GUID ResourceManagerId;
};

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION _TRANSACTION_ENLISTMENTS_INFORMATION, *P_TRANSACTION_ENLISTMENTS_INFORMATION;

typedef struct _TRANSACTION_ENLISTMENT_PAIR TRANSACTION_ENLISTMENT_PAIR;

struct _TRANSACTION_ENLISTMENTS_INFORMATION {
    DWORD NumberOfEnlistments;
    TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
};

typedef enum _TRANSACTION_INFORMATION_CLASS {
    TransactionBasicInformation=0,
    TransactionBindInformation=4,
    TransactionDTCPrivateInformation=5,
    TransactionEnlistmentInformation=2,
    TransactionPropertiesInformation=1,
    TransactionSuperiorEnlistmentInformation=3
} _TRANSACTION_INFORMATION_CLASS;

typedef struct _TRANSACTION_LIST_ENTRY _TRANSACTION_LIST_ENTRY, *P_TRANSACTION_LIST_ENTRY;

struct _TRANSACTION_LIST_ENTRY {
    UOW UOW;
};

typedef struct _TRANSACTION_LIST_INFORMATION _TRANSACTION_LIST_INFORMATION, *P_TRANSACTION_LIST_INFORMATION;

typedef struct _TRANSACTION_LIST_ENTRY TRANSACTION_LIST_ENTRY;

struct _TRANSACTION_LIST_INFORMATION {
    DWORD NumberOfTransactions;
    TRANSACTION_LIST_ENTRY TransactionInformation[1];
};

typedef enum _TRANSACTION_OUTCOME {
    TransactionOutcomeAborted=3,
    TransactionOutcomeCommitted=2,
    TransactionOutcomeUndetermined=1
} _TRANSACTION_OUTCOME;

typedef struct _TRANSACTION_PROPERTIES_INFORMATION _TRANSACTION_PROPERTIES_INFORMATION, *P_TRANSACTION_PROPERTIES_INFORMATION;

struct _TRANSACTION_PROPERTIES_INFORMATION {
    DWORD IsolationLevel;
    DWORD IsolationFlags;
    LARGE_INTEGER Timeout;
    DWORD Outcome;
    DWORD DescriptionLength;
    WCHAR Description[1];
};

typedef enum _TRANSACTION_STATE {
    TransactionStateCommittedNotify=3,
    TransactionStateIndoubt=2,
    TransactionStateNormal=1
} _TRANSACTION_STATE;

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *P_TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;

struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION {
    TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
};

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION _TRANSACTIONMANAGER_BASIC_INFORMATION, *P_TRANSACTIONMANAGER_BASIC_INFORMATION;

struct _TRANSACTIONMANAGER_BASIC_INFORMATION {
    GUID TmIdentity;
    LARGE_INTEGER VirtualClock;
};

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS {
    TransactionManagerBasicInformation=0,
    TransactionManagerLogInformation=1,
    TransactionManagerLogPathInformation=2,
    TransactionManagerOldestTransactionInformation=5,
    TransactionManagerOnlineProbeInformation=3,
    TransactionManagerRecoveryInformation=4
} _TRANSACTIONMANAGER_INFORMATION_CLASS;

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION _TRANSACTIONMANAGER_LOG_INFORMATION, *P_TRANSACTIONMANAGER_LOG_INFORMATION;

struct _TRANSACTIONMANAGER_LOG_INFORMATION {
    GUID LogIdentity;
};

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION _TRANSACTIONMANAGER_LOGPATH_INFORMATION, *P_TRANSACTIONMANAGER_LOGPATH_INFORMATION;

struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION {
    DWORD LogPathLength;
    WCHAR LogPath[1];
};

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION _TRANSACTIONMANAGER_OLDEST_INFORMATION, *P_TRANSACTIONMANAGER_OLDEST_INFORMATION;

struct _TRANSACTIONMANAGER_OLDEST_INFORMATION {
    GUID OldestTransactionGuid;
};

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION _TRANSACTIONMANAGER_RECOVERY_INFORMATION, *P_TRANSACTIONMANAGER_RECOVERY_INFORMATION;

struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION {
    ULONGLONG LastRecoveredLsn;
};

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES _UMS_CREATE_THREAD_ATTRIBUTES, *P_UMS_CREATE_THREAD_ATTRIBUTES;

struct _UMS_CREATE_THREAD_ATTRIBUTES {
    DWORD UmsVersion;
    PVOID UmsContext;
    PVOID UmsCompletionList;
};

typedef union _union_200 _union_200, *P_union_200;

union _union_200 {
    WORD AsWORD;
    struct _struct_201 s;
};

typedef union _union_205 _union_205, *P_union_205;

typedef union _union_206 _union_206, *P_union_206;

union _union_206 {
    BYTE AsBYTE;
    struct _struct_207 s;
};

union _union_205 {
    BYTE Spare;
    union _union_206 Flags;
};

typedef union _union_295 _union_295, *P_union_295;

union _union_295 {
    WORD Ordinal;
    WORD Hint;
};

typedef union _union_297 _union_297, *P_union_297;

union _union_297 {
    DWORD EntryPointToken;
    DWORD EntryPointRVA;
};

typedef union _union_60 _union_60, *P_union_60;

union _union_60 {
    struct _struct_61 Bytes;
    struct _struct_62 Bits;
};

typedef struct _WOW64_CONTEXT _WOW64_CONTEXT, *P_WOW64_CONTEXT;

typedef struct _WOW64_FLOATING_SAVE_AREA _WOW64_FLOATING_SAVE_AREA, *P_WOW64_FLOATING_SAVE_AREA;

typedef struct _WOW64_FLOATING_SAVE_AREA WOW64_FLOATING_SAVE_AREA;

struct _WOW64_FLOATING_SAVE_AREA {
    DWORD ControlWord;
    DWORD StatusWord;
    DWORD TagWord;
    DWORD ErrorOffset;
    DWORD ErrorSelector;
    DWORD DataOffset;
    DWORD DataSelector;
    BYTE RegisterArea[80];
    DWORD Cr0NpxState;
};

struct _WOW64_CONTEXT {
    DWORD ContextFlags;
    DWORD Dr0;
    DWORD Dr1;
    DWORD Dr2;
    DWORD Dr3;
    DWORD Dr6;
    DWORD Dr7;
    WOW64_FLOATING_SAVE_AREA FloatSave;
    DWORD SegGs;
    DWORD SegFs;
    DWORD SegEs;
    DWORD SegDs;
    DWORD Edi;
    DWORD Esi;
    DWORD Ebx;
    DWORD Edx;
    DWORD Ecx;
    DWORD Eax;
    DWORD Ebp;
    DWORD Eip;
    DWORD SegCs;
    DWORD EFlags;
    DWORD Esp;
    DWORD SegSs;
    BYTE ExtendedRegisters[512];
};

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY _WOW64_DESCRIPTOR_TABLE_ENTRY, *P_WOW64_DESCRIPTOR_TABLE_ENTRY;

typedef struct _WOW64_LDT_ENTRY _WOW64_LDT_ENTRY, *P_WOW64_LDT_ENTRY;

typedef struct _WOW64_LDT_ENTRY WOW64_LDT_ENTRY;

struct _WOW64_LDT_ENTRY {
    WORD LimitLow;
    WORD BaseLow;
    union _union_60 HighWord;
};

struct _WOW64_DESCRIPTOR_TABLE_ENTRY {
    DWORD Selector;
    WOW64_LDT_ENTRY Descriptor;
};

typedef struct _XSAVE_AREA _XSAVE_AREA, *P_XSAVE_AREA;

typedef struct _XSAVE_FORMAT _XSAVE_FORMAT, *P_XSAVE_FORMAT;

typedef struct _XSAVE_FORMAT XSAVE_FORMAT;

typedef struct _XSAVE_AREA_HEADER _XSAVE_AREA_HEADER, *P_XSAVE_AREA_HEADER;

typedef struct _XSAVE_AREA_HEADER XSAVE_AREA_HEADER;

typedef struct _M128A M128A;

struct _XSAVE_FORMAT {
    WORD ControlWord;
    WORD StatusWord;
    BYTE TagWord;
    BYTE Reserved1;
    WORD ErrorOpcode;
    DWORD ErrorOffset;
    WORD ErrorSelector;
    WORD Reserved2;
    DWORD DataOffset;
    WORD DataSelector;
    WORD Reserved3;
    DWORD MxCsr;
    DWORD MxCsr_Mask;
    M128A FloatRegisters[8];
    M128A XmmRegisters[8];
    BYTE Reserved4[192];
    DWORD StackControl[7];
    DWORD Cr0NpxState;
};

struct _XSAVE_AREA_HEADER {
    DWORD64 Mask;
    DWORD64 Reserved[7];
};

struct _XSAVE_AREA {
    XSAVE_FORMAT LegacyState;
    XSAVE_AREA_HEADER Header;
};

typedef struct _XSTATE_CONFIGURATION _XSTATE_CONFIGURATION, *P_XSTATE_CONFIGURATION;

typedef union anon__struct_161_bitfield_1 anon__struct_161_bitfield_1, *Panon__struct_161_bitfield_1;

typedef struct _XSTATE_FEATURE _XSTATE_FEATURE, *P_XSTATE_FEATURE;

typedef struct _XSTATE_FEATURE XSTATE_FEATURE;

struct _XSTATE_FEATURE {
    DWORD Offset;
    DWORD Size;
};

union anon__struct_161_bitfield_1 {
    DWORD OptimizedSave:1; /* : bits 0 */
};

struct _XSTATE_CONFIGURATION {
    DWORD64 EnabledFeatures;
    DWORD Size;
    union anon__struct_161_bitfield_1 field_0xc;
    XSTATE_FEATURE Features[64];
};

typedef struct _XSTATE_CONTEXT _XSTATE_CONTEXT, *P_XSTATE_CONTEXT;

typedef struct _XSAVE_AREA * PXSAVE_AREA;

struct _XSTATE_CONTEXT {
    DWORD64 Mask;
    DWORD Length;
    DWORD Reserved1;
    PXSAVE_AREA Area;
    DWORD Reserved2;
    PVOID Buffer;
    DWORD Reserved3;
};

typedef struct _ACCESS_ALLOWED_ACE ACCESS_ALLOWED_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE ACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef struct _ACCESS_ALLOWED_OBJECT_ACE ACCESS_ALLOWED_OBJECT_ACE;

typedef struct _ACCESS_DENIED_ACE ACCESS_DENIED_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_ACE ACCESS_DENIED_CALLBACK_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE ACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef struct _ACCESS_DENIED_OBJECT_ACE ACCESS_DENIED_OBJECT_ACE;

typedef enum _ACCESS_REASON_TYPE ACCESS_REASON_TYPE;

typedef struct _ACCESS_REASONS ACCESS_REASONS;

typedef enum _ACL_INFORMATION_CLASS ACL_INFORMATION_CLASS;

typedef struct _ACL_REVISION_INFORMATION ACL_REVISION_INFORMATION;

typedef struct _ACL_SIZE_INFORMATION ACL_SIZE_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION ACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS ACTIVATION_CONTEXT_INFO_CLASS;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX ACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

typedef struct _ADMINISTRATOR_POWER_POLICY ADMINISTRATOR_POWER_POLICY;

typedef union anon__struct_294_bitfield_1 anon__struct_294_bitfield_1, *Panon__struct_294_bitfield_1;

union anon__struct_294_bitfield_1 {
    WORD Type:2; /* : bits 0-1 */
    WORD NameType:3; /* : bits 2-4 */
    WORD Reserved:11; /* : bits 5-15 */
};

typedef struct ANON_OBJECT_HEADER ANON_OBJECT_HEADER, *PANON_OBJECT_HEADER;

struct ANON_OBJECT_HEADER {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    CLSID ClassID;
    DWORD SizeOfData;
};

typedef struct ANON_OBJECT_HEADER_BIGOBJ ANON_OBJECT_HEADER_BIGOBJ, *PANON_OBJECT_HEADER_BIGOBJ;

struct ANON_OBJECT_HEADER_BIGOBJ {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    CLSID ClassID;
    DWORD SizeOfData;
    DWORD Flags;
    DWORD MetaDataSize;
    DWORD MetaDataOffset;
    DWORD NumberOfSections;
    DWORD PointerToSymbolTable;
    DWORD NumberOfSymbols;
};

typedef struct ANON_OBJECT_HEADER_V2 ANON_OBJECT_HEADER_V2, *PANON_OBJECT_HEADER_V2;

struct ANON_OBJECT_HEADER_V2 {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    CLSID ClassID;
    DWORD SizeOfData;
    DWORD Flags;
    DWORD MetaDataSize;
    DWORD MetaDataOffset;
};

typedef void (* APC_CALLBACK_FUNCTION)(DWORD, PVOID, PVOID);

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE APPLICATIONLAUNCH_SETTING_VALUE;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION ASSEMBLY_FILE_DETAILED_INFORMATION;

typedef enum _AUDIT_EVENT_TYPE AUDIT_EVENT_TYPE;

typedef struct BATTERY_REPORTING_SCALE BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE;

struct BATTERY_REPORTING_SCALE {
    DWORD Granularity;
    DWORD Capacity;
};

typedef struct _CONTEXT_EX CONTEXT_EX;

typedef enum _DEVICE_POWER_STATE DEVICE_POWER_STATE;

typedef struct _ENLISTMENT_BASIC_INFORMATION ENLISTMENT_BASIC_INFORMATION;

typedef struct _ENLISTMENT_CRM_INFORMATION ENLISTMENT_CRM_INFORMATION;

typedef enum _ENLISTMENT_INFORMATION_CLASS ENLISTMENT_INFORMATION_CLASS;

typedef enum enum_170 {
    LT_DONT_CARE=0,
    LT_LOWEST_LATENCY=1
} enum_170;

typedef enum enum_171 {
    AdministratorPowerPolicy=9,
    GetPowerRequestList=45,
    GroupPark=48,
    LastSleepTime=15,
    LastWakeTime=14,
    MonitorCapabilities=40,
    NotifyUserModeLegacyPowerEvent=47,
    NotifyUserPowerSetting=26,
    PowerInformationLevelMaximum=52,
    PowerInformationLevelUnused0=27,
    PowerInformationLevelUnused1=28,
    PowerRequestAction=44,
    PowerRequestCreate=43,
    PowerShutdownNotification=39,
    ProcessorCap=34,
    ProcessorIdleDomains=49,
    ProcessorIdleStates=33,
    ProcessorInformation=11,
    ProcessorInformationEx=46,
    ProcessorLoad=38,
    ProcessorPerfStates=32,
    ProcessorPowerPolicyAc=18,
    ProcessorPowerPolicyCurrent=22,
    ProcessorPowerPolicyDc=19,
    ProcessorStateHandler=7,
    ProcessorStateHandler2=13,
    SessionDisplayState=42,
    SessionPowerInit=41,
    SetPowerSettingValue=25,
    SystemBatteryState=5,
    SystemExecutionState=16,
    SystemHiberFileInformation=36,
    SystemHiberFileSize=51,
    SystemPowerCapabilities=4,
    SystemPowerInformation=12,
    SystemPowerLoggingEntry=24,
    SystemPowerPolicyAc=0,
    SystemPowerPolicyCurrent=8,
    SystemPowerPolicyDc=1,
    SystemPowerStateHandler=6,
    SystemPowerStateLogging=23,
    SystemPowerStateNotifyHandler=17,
    SystemReserveHiberFile=10,
    SystemVideoState=29,
    SystemWakeSource=35,
    TraceApplicationPowerMessage=30,
    TraceApplicationPowerMessageEnd=31,
    TraceServicePowerMessage=37,
    VerifyProcessorPowerPolicyAc=20,
    VerifyProcessorPowerPolicyDc=21,
    VerifySystemPolicyAc=2,
    VerifySystemPolicyDc=3,
    WakeTimerList=50
} enum_171;

typedef enum enum_172 {
    PoAc=0,
    PoConditionMaximum=3,
    PoDc=1,
    PoHot=2
} enum_172;

typedef enum enum_176 {
    PlatformRoleAppliancePC=6,
    PlatformRoleDesktop=1,
    PlatformRoleEnterpriseServer=4,
    PlatformRoleMaximum=8,
    PlatformRoleMobile=2,
    PlatformRolePerformanceServer=7,
    PlatformRoleSOHOServer=5,
    PlatformRoleUnspecified=0,
    PlatformRoleWorkstation=3
} enum_176;

typedef enum enum_75 {
    WinAccountAdministratorSid=38,
    WinAccountCertAdminsSid=46,
    WinAccountComputersSid=44,
    WinAccountControllersSid=45,
    WinAccountDomainAdminsSid=41,
    WinAccountDomainGuestsSid=43,
    WinAccountDomainUsersSid=42,
    WinAccountEnterpriseAdminsSid=48,
    WinAccountGuestSid=39,
    WinAccountKrbtgtSid=40,
    WinAccountPolicyAdminsSid=49,
    WinAccountRasAndIasServersSid=50,
    WinAccountReadonlyControllersSid=75,
    WinAccountSchemaAdminsSid=47,
    WinAnonymousSid=13,
    WinAuthenticatedUserSid=17,
    WinBatchSid=10,
    WinBuiltinAccountOperatorsSid=30,
    WinBuiltinAdministratorsSid=26,
    WinBuiltinAuthorizationAccessSid=59,
    WinBuiltinBackupOperatorsSid=33,
    WinBuiltinCertSvcDComAccessGroup=78,
    WinBuiltinCryptoOperatorsSid=64,
    WinBuiltinDCOMUsersSid=61,
    WinBuiltinDomainSid=25,
    WinBuiltinEventLogReadersGroup=76,
    WinBuiltinGuestsSid=28,
    WinBuiltinIUsersSid=62,
    WinBuiltinIncomingForestTrustBuildersSid=56,
    WinBuiltinNetworkConfigurationOperatorsSid=37,
    WinBuiltinPerfLoggingUsersSid=58,
    WinBuiltinPerfMonitoringUsersSid=57,
    WinBuiltinPowerUsersSid=29,
    WinBuiltinPreWindows2000CompatibleAccessSid=35,
    WinBuiltinPrintOperatorsSid=32,
    WinBuiltinRemoteDesktopUsersSid=36,
    WinBuiltinReplicatorSid=34,
    WinBuiltinSystemOperatorsSid=31,
    WinBuiltinTerminalServerLicenseServersSid=60,
    WinBuiltinUsersSid=27,
    WinCacheablePrincipalsGroupSid=72,
    WinConsoleLogonSid=81,
    WinCreatorGroupServerSid=6,
    WinCreatorGroupSid=4,
    WinCreatorOwnerRightsSid=71,
    WinCreatorOwnerServerSid=5,
    WinCreatorOwnerSid=3,
    WinDialupSid=8,
    WinDigestAuthenticationSid=52,
    WinEnterpriseControllersSid=15,
    WinEnterpriseReadonlyControllersSid=74,
    WinHighLabelSid=68,
    WinIUserSid=63,
    WinInteractiveSid=11,
    WinLocalLogonSid=80,
    WinLocalServiceSid=23,
    WinLocalSid=2,
    WinLocalSystemSid=22,
    WinLogonIdsSid=21,
    WinLowLabelSid=66,
    WinMediumLabelSid=67,
    WinMediumPlusLabelSid=79,
    WinNTLMAuthenticationSid=51,
    WinNetworkServiceSid=24,
    WinNetworkSid=9,
    WinNewEnterpriseReadonlyControllersSid=77,
    WinNonCacheablePrincipalsGroupSid=73,
    WinNtAuthoritySid=7,
    WinNullSid=0,
    WinOtherOrganizationSid=55,
    WinProxySid=14,
    WinRemoteLogonIdSid=20,
    WinRestrictedCodeSid=18,
    WinSChannelAuthenticationSid=53,
    WinSelfSid=16,
    WinServiceSid=12,
    WinSystemLabelSid=69,
    WinTerminalServerSid=19,
    WinThisOrganizationCertificateSid=82,
    WinThisOrganizationSid=54,
    WinUntrustedLabelSid=65,
    WinWorldSid=1,
    WinWriteRestrictedCodeSid=70
} enum_75;

typedef struct _EVENTLOGRECORD EVENTLOGRECORD;

typedef struct _EVENTSFORLOGFILE EVENTSFORLOGFILE;

typedef struct _EXCEPTION_POINTERS EXCEPTION_POINTERS;

typedef struct _EXCEPTION_RECORD32 EXCEPTION_RECORD32;

typedef struct _EXCEPTION_RECORD64 EXCEPTION_RECORD64;

typedef EXCEPTION_DISPOSITION (EXCEPTION_ROUTINE)(struct _EXCEPTION_RECORD *, PVOID, struct _CONTEXT *, PVOID);

typedef DWORD EXECUTION_STATE;

typedef BYTE FCHAR;

typedef struct _FILE_NOTIFY_INFORMATION FILE_NOTIFY_INFORMATION;

typedef union _FILE_SEGMENT_ELEMENT FILE_SEGMENT_ELEMENT;

typedef struct _FLOAT128 FLOAT128;

typedef DWORD FLONG;

typedef struct _FPO_DATA FPO_DATA;

typedef WORD FSHORT;

typedef enum _HEAP_INFORMATION_CLASS HEAP_INFORMATION_CLASS;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _ImageArchitectureEntry IMAGE_ARCHITECTURE_ENTRY;

typedef struct _ImageArchitectureHeader IMAGE_ARCHITECTURE_HEADER;

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER IMAGE_ARCHIVE_MEMBER_HEADER;

typedef union _IMAGE_AUX_SYMBOL IMAGE_AUX_SYMBOL;

typedef union _IMAGE_AUX_SYMBOL_EX IMAGE_AUX_SYMBOL_EX;

typedef enum IMAGE_AUX_SYMBOL_TYPE {
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF=1
} IMAGE_AUX_SYMBOL_TYPE;

typedef struct _IMAGE_BASE_RELOCATION IMAGE_BASE_RELOCATION;

typedef struct _IMAGE_BOUND_FORWARDER_REF IMAGE_BOUND_FORWARDER_REF;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR IMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY IMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER IMAGE_COFF_SYMBOLS_HEADER;

typedef struct IMAGE_COR20_HEADER IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;

struct IMAGE_COR20_HEADER {
    DWORD cb;
    WORD MajorRuntimeVersion;
    WORD MinorRuntimeVersion;
    IMAGE_DATA_DIRECTORY MetaData;
    DWORD Flags;
    union _union_297 u;
    IMAGE_DATA_DIRECTORY Resources;
    IMAGE_DATA_DIRECTORY StrongNameSignature;
    IMAGE_DATA_DIRECTORY CodeManagerTable;
    IMAGE_DATA_DIRECTORY VTableFixups;
    IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
    IMAGE_DATA_DIRECTORY ManagedNativeHeader;
};

typedef struct _IMAGE_DEBUG_DIRECTORY IMAGE_DEBUG_DIRECTORY;

typedef struct _IMAGE_DEBUG_MISC IMAGE_DEBUG_MISC;

typedef struct _IMAGE_DOS_HEADER IMAGE_DOS_HEADER;

typedef struct _IMAGE_EXPORT_DIRECTORY IMAGE_EXPORT_DIRECTORY;

typedef struct _IMAGE_FUNCTION_ENTRY IMAGE_FUNCTION_ENTRY;

typedef struct _IMAGE_FUNCTION_ENTRY64 IMAGE_FUNCTION_ENTRY64;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_IMPORT_BY_NAME IMAGE_IMPORT_BY_NAME;

typedef struct _IMAGE_IMPORT_DESCRIPTOR IMAGE_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_LINENUMBER IMAGE_LINENUMBER;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32;

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY;

struct IMAGE_LOAD_CONFIG_DIRECTORY32 {
    DWORD Size;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD GlobalFlagsClear;
    DWORD GlobalFlagsSet;
    DWORD CriticalSectionDefaultTimeout;
    DWORD DeCommitFreeBlockThreshold;
    DWORD DeCommitTotalFreeThreshold;
    DWORD LockPrefixTable;
    DWORD MaximumAllocationSize;
    DWORD VirtualMemoryThreshold;
    DWORD ProcessHeapFlags;
    DWORD ProcessAffinityMask;
    WORD CSDVersion;
    WORD Reserved1;
    DWORD EditList;
    DWORD SecurityCookie;
    DWORD SEHandlerTable;
    DWORD SEHandlerCount;
};

typedef struct IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY64, *PIMAGE_LOAD_CONFIG_DIRECTORY64;

struct IMAGE_LOAD_CONFIG_DIRECTORY64 {
    DWORD Size;
    DWORD TimeDateStamp;
    WORD MajorVersion;
    WORD MinorVersion;
    DWORD GlobalFlagsClear;
    DWORD GlobalFlagsSet;
    DWORD CriticalSectionDefaultTimeout;
    ULONGLONG DeCommitFreeBlockThreshold;
    ULONGLONG DeCommitTotalFreeThreshold;
    ULONGLONG LockPrefixTable;
    ULONGLONG MaximumAllocationSize;
    ULONGLONG VirtualMemoryThreshold;
    ULONGLONG ProcessAffinityMask;
    DWORD ProcessHeapFlags;
    WORD CSDVersion;
    WORD Reserved1;
    ULONGLONG EditList;
    ULONGLONG SecurityCookie;
    ULONGLONG SEHandlerTable;
    ULONGLONG SEHandlerCount;
};

typedef struct _IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;

typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS;

typedef struct _IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS64;

typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_OS2_HEADER IMAGE_OS2_HEADER;

typedef struct _IMAGE_RELOCATION IMAGE_RELOCATION;

typedef struct _IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U IMAGE_RESOURCE_DIR_STRING_U;

typedef struct _IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING IMAGE_RESOURCE_DIRECTORY_STRING;

typedef struct _IMAGE_ROM_HEADERS IMAGE_ROM_HEADERS;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER IMAGE_SEPARATE_DEBUG_HEADER;

typedef struct _IMAGE_SYMBOL IMAGE_SYMBOL;

typedef struct _IMAGE_SYMBOL_EX IMAGE_SYMBOL_EX;

typedef struct _IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA64;

typedef struct _IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY32;

typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY;

typedef struct _IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY64;

typedef struct _IMAGE_VXD_HEADER IMAGE_VXD_HEADER;

typedef struct IMPORT_OBJECT_HEADER IMPORT_OBJECT_HEADER, *PIMPORT_OBJECT_HEADER;

struct IMPORT_OBJECT_HEADER {
    WORD Sig1;
    WORD Sig2;
    WORD Version;
    WORD Machine;
    DWORD TimeDateStamp;
    DWORD SizeOfData;
    union _union_295 u;
    union anon__struct_294_bitfield_1 field_0x12;
};

typedef enum IMPORT_OBJECT_NAME_TYPE {
    IMPORT_OBJECT_NAME=1,
    IMPORT_OBJECT_NAME_NO_PREFIX=2,
    IMPORT_OBJECT_NAME_UNDECORATE=3,
    IMPORT_OBJECT_ORDINAL=0
} IMPORT_OBJECT_NAME_TYPE;

typedef enum IMPORT_OBJECT_TYPE {
    IMPORT_OBJECT_CODE=0,
    IMPORT_OBJECT_CONST=2,
    IMPORT_OBJECT_DATA=1
} IMPORT_OBJECT_TYPE;

typedef struct _JOB_SET_ARRAY JOB_SET_ARRAY;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT JOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST JOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS JOBOBJECT_BASIC_UI_RESTRICTIONS;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION JOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION JOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_JOBSET_INFORMATION JOBOBJECT_JOBSET_INFORMATION;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION JOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef enum _JOBOBJECTINFOCLASS JOBOBJECTINFOCLASS;

typedef ULONG_PTR KSPIN_LOCK;

typedef struct _KTMOBJECT_CURSOR KTMOBJECT_CURSOR;

typedef enum _KTMOBJECT_TYPE KTMOBJECT_TYPE;

typedef enum enum_170 LATENCY_TIME;

typedef struct _LDT_ENTRY LDT_ENTRY;

typedef struct LIST_ENTRY32 LIST_ENTRY32, *PLIST_ENTRY32;

struct LIST_ENTRY32 {
    DWORD Flink;
    DWORD Blink;
};

typedef struct LIST_ENTRY64 LIST_ENTRY64, *PLIST_ENTRY64;

struct LIST_ENTRY64 {
    ULONGLONG Flink;
    ULONGLONG Blink;
};

typedef CHAR * LPCCH;

typedef CHAR * LPCH;

typedef LPCCH LPCTCH;

typedef LPCSTR LPCTSTR;

typedef LPCSTR LPCUTSTR;

typedef WCHAR * LPCUWCHAR;

typedef WCHAR * LPCUWSTR;

typedef WCHAR * LPCWCH;

typedef WCHAR * LPCWCHAR;

typedef struct _OSVERSIONINFOA * LPOSVERSIONINFOA;

typedef LPOSVERSIONINFOA LPOSVERSIONINFO;

typedef struct _OSVERSIONINFOEXA * LPOSVERSIONINFOEXA;

typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;

typedef struct _OSVERSIONINFOEXW * LPOSVERSIONINFOEXW;

typedef struct _OSVERSIONINFOW * LPOSVERSIONINFOW;

typedef LPCH LPTCH;

typedef LPSTR LPTSTR;

typedef LPSTR LPUTSTR;

typedef WCHAR * LPUWSTR;

typedef WCHAR * LPWCH;

typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[1];

typedef enum _MANDATORY_LEVEL MANDATORY_LEVEL;

typedef struct _MEMORY_BASIC_INFORMATION MEMORY_BASIC_INFORMATION;

typedef struct _MEMORY_BASIC_INFORMATION32 MEMORY_BASIC_INFORMATION32;

typedef struct _MEMORY_BASIC_INFORMATION64 MEMORY_BASIC_INFORMATION64;

typedef struct _MESSAGE_RESOURCE_DATA MESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_ENTRY MESSAGE_RESOURCE_ENTRY;

typedef enum _MONITOR_DISPLAY_STATE MONITOR_DISPLAY_STATE;

typedef struct _NON_PAGED_DEBUG_INFO NON_PAGED_DEBUG_INFO;

typedef struct NOTIFY_USER_POWER_SETTING NOTIFY_USER_POWER_SETTING, *PNOTIFY_USER_POWER_SETTING;

struct NOTIFY_USER_POWER_SETTING {
    GUID Guid;
};

typedef CHAR * NPSTR;

typedef struct _NT_TIB NT_TIB;

typedef struct _NT_TIB32 NT_TIB32;

typedef struct _NT_TIB64 NT_TIB64;

typedef WCHAR * NWPSTR;

typedef struct _OBJECT_TYPE_LIST OBJECT_TYPE_LIST;

typedef struct _OBJECTID OBJECTID;

typedef struct _OSVERSIONINFOA OSVERSIONINFOA;

typedef OSVERSIONINFOA OSVERSIONINFO;

typedef struct _OSVERSIONINFOEXA OSVERSIONINFOEXA;

typedef OSVERSIONINFOEXA OSVERSIONINFOEX;

typedef struct _OSVERSIONINFOEXW OSVERSIONINFOEXW;

typedef struct _OSVERSIONINFOW OSVERSIONINFOW;

typedef ACCESS_ALLOWED_ACE * PACCESS_ALLOWED_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE * PACCESS_ALLOWED_CALLBACK_ACE;

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE * PACCESS_ALLOWED_CALLBACK_OBJECT_ACE;

typedef struct _ACCESS_ALLOWED_OBJECT_ACE * PACCESS_ALLOWED_OBJECT_ACE;

typedef ACCESS_DENIED_ACE * PACCESS_DENIED_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_ACE * PACCESS_DENIED_CALLBACK_ACE;

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE * PACCESS_DENIED_CALLBACK_OBJECT_ACE;

typedef struct _ACCESS_DENIED_OBJECT_ACE * PACCESS_DENIED_OBJECT_ACE;

typedef ACE_HEADER * PACE_HEADER;

typedef struct _PACKEDEVENTINFO PACKEDEVENTINFO;

typedef ACL_REVISION_INFORMATION * PACL_REVISION_INFORMATION;

typedef ACL_SIZE_INFORMATION * PACL_SIZE_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION * PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION * PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION * PACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX * PACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION * PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

typedef struct _ADMINISTRATOR_POWER_POLICY * PADMINISTRATOR_POWER_POLICY;

typedef void (* PAPCFUNC)(ULONG_PTR);

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE * PAPPLICATIONLAUNCH_SETTING_VALUE;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION * PASSEMBLY_FILE_DETAILED_INFORMATION;

typedef enum _AUDIT_EVENT_TYPE * PAUDIT_EVENT_TYPE;

typedef BOOLEAN * PBOOLEAN;

typedef struct _CACHE_DESCRIPTOR * PCACHE_DESCRIPTOR;

typedef struct _CACHE_RELATIONSHIP * PCACHE_RELATIONSHIP;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION * PCACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION * PCACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION * PCACTIVATION_CONTEXT_DETAILED_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX * PCACTIVATION_CONTEXT_QUERY_INDEX;

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION * PCACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;

typedef ASSEMBLY_FILE_DETAILED_INFORMATION * PCASSEMBLY_FILE_DETAILED_INFORMATION;

typedef CHAR * PCCH;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT * PCCOMPATIBILITY_CONTEXT_ELEMENT;

typedef CHAR * PCH;

typedef CHAR * PCNZCH;

typedef PCNZCH PCNZTCH;

typedef WCHAR * PCNZWCH;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT * PCOMPATIBILITY_CONTEXT_ELEMENT;

typedef struct _CONTEXT_CHUNK * PCONTEXT_CHUNK;

typedef struct _CONTEXT_EX * PCONTEXT_EX;

typedef LPCCH PCTCH;

typedef LPCSTR PCTSTR;

typedef ulong UCSCHAR;

typedef UCSCHAR * PCUCSCHAR;

typedef UCSCHAR * PCUCSSTR;

typedef PCNZCH PCUNZTCH;

typedef WCHAR * PCUNZWCH;

typedef LPCSTR PCUTSTR;

typedef UCSCHAR * PCUUCSCHAR;

typedef UCSCHAR * PCUUCSSTR;

typedef WCHAR * PCUWCHAR;

typedef WCHAR * PCUWSTR;

typedef CHAR * PCZZSTR;

typedef PCZZSTR PCUZZTSTR;

typedef WCHAR * PCUZZWSTR;

typedef WCHAR * PCWCH;

typedef WCHAR * PCWCHAR;

typedef PSTR * PCZPSTR;

typedef PWSTR * PCZPWSTR;

typedef PCZZSTR PCZZTSTR;

typedef WCHAR * PCZZWSTR;

typedef enum _DEVICE_POWER_STATE * PDEVICE_POWER_STATE;

typedef DWORDLONG * PDWORDLONG;

typedef struct _ENLISTMENT_BASIC_INFORMATION * PENLISTMENT_BASIC_INFORMATION;

typedef struct _ENLISTMENT_CRM_INFORMATION * PENLISTMENT_CRM_INFORMATION;

typedef struct _PERFORMANCE_DATA PERFORMANCE_DATA;

typedef struct _EVENTLOGRECORD * PEVENTLOGRECORD;

typedef struct _EVENTSFORLOGFILE * PEVENTSFORLOGFILE;

typedef struct _EXCEPTION_RECORD32 * PEXCEPTION_RECORD32;

typedef struct _EXCEPTION_RECORD64 * PEXCEPTION_RECORD64;

typedef EXCEPTION_ROUTINE * PEXCEPTION_ROUTINE;

typedef DWORD * PEXECUTION_STATE;

typedef struct _FILE_NOTIFY_INFORMATION * PFILE_NOTIFY_INFORMATION;

typedef union _FILE_SEGMENT_ELEMENT * PFILE_SEGMENT_ELEMENT;

typedef FLOAT128 * PFLOAT128;

typedef FLOATING_SAVE_AREA * PFLOATING_SAVE_AREA;

typedef void (* PFLS_CALLBACK_FUNCTION)(PVOID);

typedef struct _FPO_DATA * PFPO_DATA;

typedef struct _GROUP_AFFINITY * PGROUP_AFFINITY;

typedef struct _GROUP_RELATIONSHIP * PGROUP_RELATIONSHIP;

typedef HANDLE * PHANDLE;

typedef struct _HARDWARE_COUNTER_DATA * PHARDWARE_COUNTER_DATA;

typedef enum _HARDWARE_COUNTER_TYPE * PHARDWARE_COUNTER_TYPE;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY * PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY * PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;

typedef struct _ImageArchitectureEntry * PIMAGE_ARCHITECTURE_ENTRY;

typedef struct _ImageArchitectureHeader * PIMAGE_ARCHITECTURE_HEADER;

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER * PIMAGE_ARCHIVE_MEMBER_HEADER;

typedef IMAGE_AUX_SYMBOL * PIMAGE_AUX_SYMBOL;

typedef IMAGE_AUX_SYMBOL_EX * PIMAGE_AUX_SYMBOL_EX;

typedef IMAGE_BASE_RELOCATION * PIMAGE_BASE_RELOCATION;

typedef struct _IMAGE_BOUND_FORWARDER_REF * PIMAGE_BOUND_FORWARDER_REF;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR * PIMAGE_BOUND_IMPORT_DESCRIPTOR;

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY * PIMAGE_CE_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_COFF_SYMBOLS_HEADER * PIMAGE_COFF_SYMBOLS_HEADER;

typedef struct _IMAGE_DATA_DIRECTORY * PIMAGE_DATA_DIRECTORY;

typedef struct _IMAGE_DEBUG_DIRECTORY * PIMAGE_DEBUG_DIRECTORY;

typedef struct _IMAGE_DEBUG_MISC * PIMAGE_DEBUG_MISC;

typedef struct _IMAGE_DOS_HEADER * PIMAGE_DOS_HEADER;

typedef struct _IMAGE_EXPORT_DIRECTORY * PIMAGE_EXPORT_DIRECTORY;

typedef struct _IMAGE_FILE_HEADER * PIMAGE_FILE_HEADER;

typedef struct _IMAGE_FUNCTION_ENTRY * PIMAGE_FUNCTION_ENTRY;

typedef struct _IMAGE_FUNCTION_ENTRY64 * PIMAGE_FUNCTION_ENTRY64;

typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_IMPORT_BY_NAME * PIMAGE_IMPORT_BY_NAME;

typedef IMAGE_IMPORT_DESCRIPTOR * PIMAGE_IMPORT_DESCRIPTOR;

typedef IMAGE_LINENUMBER * PIMAGE_LINENUMBER;

typedef PIMAGE_LOAD_CONFIG_DIRECTORY32 PIMAGE_LOAD_CONFIG_DIRECTORY;

typedef struct _IMAGE_NT_HEADERS * PIMAGE_NT_HEADERS32;

typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS;

typedef struct _IMAGE_NT_HEADERS64 * PIMAGE_NT_HEADERS64;

typedef struct _IMAGE_OPTIONAL_HEADER * PIMAGE_OPTIONAL_HEADER32;

typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER;

typedef struct _IMAGE_OPTIONAL_HEADER64 * PIMAGE_OPTIONAL_HEADER64;

typedef struct _IMAGE_OS2_HEADER * PIMAGE_OS2_HEADER;

typedef IMAGE_RELOCATION * PIMAGE_RELOCATION;

typedef struct _IMAGE_RESOURCE_DATA_ENTRY * PIMAGE_RESOURCE_DATA_ENTRY;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U * PIMAGE_RESOURCE_DIR_STRING_U;

typedef struct _IMAGE_RESOURCE_DIRECTORY * PIMAGE_RESOURCE_DIRECTORY;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY * PIMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING * PIMAGE_RESOURCE_DIRECTORY_STRING;

typedef struct _IMAGE_ROM_HEADERS * PIMAGE_ROM_HEADERS;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER * PIMAGE_ROM_OPTIONAL_HEADER;

typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY;

typedef struct _IMAGE_SECTION_HEADER * PIMAGE_SECTION_HEADER;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER * PIMAGE_SEPARATE_DEBUG_HEADER;

typedef IMAGE_SYMBOL * PIMAGE_SYMBOL;

typedef IMAGE_SYMBOL_EX * PIMAGE_SYMBOL_EX;

typedef IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32;

typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA;

typedef IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64;

typedef void (* PIMAGE_TLS_CALLBACK)(PVOID, DWORD, PVOID);

typedef IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY32;

typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY;

typedef IMAGE_TLS_DIRECTORY64 * PIMAGE_TLS_DIRECTORY64;

typedef struct _IMAGE_VXD_HEADER * PIMAGE_VXD_HEADER;

typedef IO_COUNTERS * PIO_COUNTERS;

typedef struct _SECURITY_DESCRIPTOR * PISECURITY_DESCRIPTOR;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE * PISECURITY_DESCRIPTOR_RELATIVE;

typedef struct _SID * PISID;

typedef struct _JOB_SET_ARRAY * PJOB_SET_ARRAY;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT * PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION * PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION * PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION * PJOBOBJECT_BASIC_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST * PJOBOBJECT_BASIC_PROCESS_ID_LIST;

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS * PJOBOBJECT_BASIC_UI_RESTRICTIONS;

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION * PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION * PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;

typedef struct _JOBOBJECT_JOBSET_INFORMATION * PJOBOBJECT_JOBSET_INFORMATION;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION * PJOBOBJECT_SECURITY_LIMIT_INFORMATION;

typedef KSPIN_LOCK * PKSPIN_LOCK;

typedef struct _KTMOBJECT_CURSOR * PKTMOBJECT_CURSOR;

typedef enum _KTMOBJECT_TYPE * PKTMOBJECT_TYPE;

typedef LARGE_INTEGER * PLARGE_INTEGER;

typedef PDWORD PLCID;

typedef struct _LIST_ENTRY * PLIST_ENTRY;

typedef LONG * PLONG;

typedef LONGLONG * PLONGLONG;

typedef LUID_AND_ATTRIBUTES_ARRAY * PLUID_AND_ATTRIBUTES_ARRAY;

typedef struct _M128A * PM128A;

typedef enum _MANDATORY_LEVEL * PMANDATORY_LEVEL;

typedef struct _MEMORY_BASIC_INFORMATION * PMEMORY_BASIC_INFORMATION;

typedef struct _MEMORY_BASIC_INFORMATION32 * PMEMORY_BASIC_INFORMATION32;

typedef struct _MEMORY_BASIC_INFORMATION64 * PMEMORY_BASIC_INFORMATION64;

typedef struct _MESSAGE_RESOURCE_BLOCK * PMESSAGE_RESOURCE_BLOCK;

typedef struct _MESSAGE_RESOURCE_DATA * PMESSAGE_RESOURCE_DATA;

typedef struct _MESSAGE_RESOURCE_ENTRY * PMESSAGE_RESOURCE_ENTRY;

typedef enum _MONITOR_DISPLAY_STATE * PMONITOR_DISPLAY_STATE;

typedef struct _NON_PAGED_DEBUG_INFO * PNON_PAGED_DEBUG_INFO;

typedef NT_TIB * PNT_TIB;

typedef struct _NT_TIB32 * PNT_TIB32;

typedef struct _NT_TIB64 * PNT_TIB64;

typedef struct _NUMA_NODE_RELATIONSHIP * PNUMA_NODE_RELATIONSHIP;

typedef CHAR * PNZCH;

typedef PNZCH PNZTCH;

typedef WCHAR * PNZWCH;

typedef struct _OSVERSIONINFOA * POSVERSIONINFOA;

typedef POSVERSIONINFOA POSVERSIONINFO;

typedef struct _OSVERSIONINFOEXA * POSVERSIONINFOEXA;

typedef POSVERSIONINFOEXA POSVERSIONINFOEX;

typedef struct _OSVERSIONINFOEXW * POSVERSIONINFOEXW;

typedef struct _OSVERSIONINFOW * POSVERSIONINFOW;

typedef enum enum_171 POWER_INFORMATION_LEVEL;

typedef enum enum_176 POWER_PLATFORM_ROLE;

typedef enum _POWER_REQUEST_TYPE POWER_REQUEST_TYPE;

typedef struct _PACKEDEVENTINFO * PPACKEDEVENTINFO;

typedef struct _PERFORMANCE_DATA * PPERFORMANCE_DATA;

typedef struct PPM_IDLE_ACCOUNTING PPM_IDLE_ACCOUNTING, *PPPM_IDLE_ACCOUNTING;

typedef struct PPM_IDLE_STATE_ACCOUNTING PPM_IDLE_STATE_ACCOUNTING, *PPPM_IDLE_STATE_ACCOUNTING;

struct PPM_IDLE_STATE_ACCOUNTING {
    DWORD IdleTransitions;
    DWORD FailedTransitions;
    DWORD InvalidBucketIndex;
    DWORD64 TotalTime;
    DWORD IdleTimeBuckets[6];
};

struct PPM_IDLE_ACCOUNTING {
    DWORD StateCount;
    DWORD TotalTransitions;
    DWORD ResetCount;
    DWORD64 StartTime;
    struct PPM_IDLE_STATE_ACCOUNTING State[1];
};

typedef struct PPM_IDLE_ACCOUNTING_EX PPM_IDLE_ACCOUNTING_EX, *PPPM_IDLE_ACCOUNTING_EX;

typedef struct PPM_IDLE_STATE_ACCOUNTING_EX PPM_IDLE_STATE_ACCOUNTING_EX, *PPPM_IDLE_STATE_ACCOUNTING_EX;

typedef struct PPM_IDLE_STATE_BUCKET_EX PPM_IDLE_STATE_BUCKET_EX, *PPPM_IDLE_STATE_BUCKET_EX;

struct PPM_IDLE_STATE_BUCKET_EX {
    DWORD64 TotalTimeUs;
    DWORD MinTimeUs;
    DWORD MaxTimeUs;
    DWORD Count;
};

struct PPM_IDLE_STATE_ACCOUNTING_EX {
    DWORD64 TotalTime;
    DWORD IdleTransitions;
    DWORD FailedTransitions;
    DWORD InvalidBucketIndex;
    DWORD MinTimeUs;
    DWORD MaxTimeUs;
    struct PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
};

struct PPM_IDLE_ACCOUNTING_EX {
    DWORD StateCount;
    DWORD TotalTransitions;
    DWORD ResetCount;
    DWORD64 StartTime;
    struct PPM_IDLE_STATE_ACCOUNTING_EX State[1];
};

typedef struct PPM_IDLESTATE_EVENT PPM_IDLESTATE_EVENT, *PPPM_IDLESTATE_EVENT;

struct PPM_IDLESTATE_EVENT {
    DWORD NewState;
    DWORD OldState;
    DWORD64 Processors;
};

typedef struct PPM_PERFSTATE_DOMAIN_EVENT PPM_PERFSTATE_DOMAIN_EVENT, *PPPM_PERFSTATE_DOMAIN_EVENT;

struct PPM_PERFSTATE_DOMAIN_EVENT {
    DWORD State;
    DWORD Latency;
    DWORD Speed;
    DWORD64 Processors;
};

typedef struct PPM_PERFSTATE_EVENT PPM_PERFSTATE_EVENT, *PPPM_PERFSTATE_EVENT;

struct PPM_PERFSTATE_EVENT {
    DWORD State;
    DWORD Status;
    DWORD Latency;
    DWORD Speed;
    DWORD Processor;
};

typedef struct PPM_THERMAL_POLICY_EVENT PPM_THERMAL_POLICY_EVENT, *PPPM_THERMAL_POLICY_EVENT;

struct PPM_THERMAL_POLICY_EVENT {
    BYTE Mode;
    DWORD64 Processors;
};

typedef struct PPM_THERMALCHANGE_EVENT PPM_THERMALCHANGE_EVENT, *PPPM_THERMALCHANGE_EVENT;

struct PPM_THERMALCHANGE_EVENT {
    DWORD ThermalConstraint;
    DWORD64 Processors;
};

typedef struct PPM_WMI_IDLE_STATE PPM_WMI_IDLE_STATE, *PPPM_WMI_IDLE_STATE;

struct PPM_WMI_IDLE_STATE {
    DWORD Latency;
    DWORD Power;
    DWORD TimeCheck;
    BYTE PromotePercent;
    BYTE DemotePercent;
    BYTE StateType;
    BYTE Reserved;
    DWORD StateFlags;
    DWORD Context;
    DWORD IdleHandler;
    DWORD Reserved1;
};

typedef struct PPM_WMI_IDLE_STATES PPM_WMI_IDLE_STATES, *PPPM_WMI_IDLE_STATES;

struct PPM_WMI_IDLE_STATES {
    DWORD Type;
    DWORD Count;
    DWORD TargetState;
    DWORD OldState;
    DWORD64 TargetProcessors;
    struct PPM_WMI_IDLE_STATE State[1];
};

typedef struct PPM_WMI_IDLE_STATES_EX PPM_WMI_IDLE_STATES_EX, *PPPM_WMI_IDLE_STATES_EX;

struct PPM_WMI_IDLE_STATES_EX {
    DWORD Type;
    DWORD Count;
    DWORD TargetState;
    DWORD OldState;
    PVOID TargetProcessors;
    struct PPM_WMI_IDLE_STATE State[1];
};

typedef struct PPM_WMI_LEGACY_PERFSTATE PPM_WMI_LEGACY_PERFSTATE, *PPPM_WMI_LEGACY_PERFSTATE;

struct PPM_WMI_LEGACY_PERFSTATE {
    DWORD Frequency;
    DWORD Flags;
    DWORD PercentFrequency;
};

typedef struct PPM_WMI_PERF_STATE PPM_WMI_PERF_STATE, *PPPM_WMI_PERF_STATE;

struct PPM_WMI_PERF_STATE {
    DWORD Frequency;
    DWORD Power;
    BYTE PercentFrequency;
    BYTE IncreaseLevel;
    BYTE DecreaseLevel;
    BYTE Type;
    DWORD IncreaseTime;
    DWORD DecreaseTime;
    DWORD64 Control;
    DWORD64 Status;
    DWORD HitCount;
    DWORD Reserved1;
    DWORD64 Reserved2;
    DWORD64 Reserved3;
};

typedef struct PPM_WMI_PERF_STATES PPM_WMI_PERF_STATES, *PPPM_WMI_PERF_STATES;

struct PPM_WMI_PERF_STATES {
    DWORD Count;
    DWORD MaxFrequency;
    DWORD CurrentState;
    DWORD MaxPerfState;
    DWORD MinPerfState;
    DWORD LowestPerfState;
    DWORD ThermalConstraint;
    BYTE BusyAdjThreshold;
    BYTE PolicyType;
    BYTE Type;
    BYTE Reserved;
    DWORD TimerInterval;
    DWORD64 TargetProcessors;
    DWORD PStateHandler;
    DWORD PStateContext;
    DWORD TStateHandler;
    DWORD TStateContext;
    DWORD FeedbackHandler;
    DWORD Reserved1;
    DWORD64 Reserved2;
    struct PPM_WMI_PERF_STATE State[1];
};

typedef struct PPM_WMI_PERF_STATES_EX PPM_WMI_PERF_STATES_EX, *PPPM_WMI_PERF_STATES_EX;

struct PPM_WMI_PERF_STATES_EX {
    DWORD Count;
    DWORD MaxFrequency;
    DWORD CurrentState;
    DWORD MaxPerfState;
    DWORD MinPerfState;
    DWORD LowestPerfState;
    DWORD ThermalConstraint;
    BYTE BusyAdjThreshold;
    BYTE PolicyType;
    BYTE Type;
    BYTE Reserved;
    DWORD TimerInterval;
    PVOID TargetProcessors;
    DWORD PStateHandler;
    DWORD PStateContext;
    DWORD TStateHandler;
    DWORD TStateContext;
    DWORD FeedbackHandler;
    DWORD Reserved1;
    DWORD64 Reserved2;
    struct PPM_WMI_PERF_STATE State[1];
};

typedef enum enum_169 * PPOWER_ACTION;

typedef enum _POWER_REQUEST_TYPE * PPOWER_REQUEST_TYPE;

typedef struct _PROCESSOR_GROUP_INFO * PPROCESSOR_GROUP_INFO;

typedef struct PROCESSOR_IDLESTATE_INFO PROCESSOR_IDLESTATE_INFO, *PPROCESSOR_IDLESTATE_INFO;

struct PROCESSOR_IDLESTATE_INFO {
    DWORD TimeCheck;
    BYTE DemotePercent;
    BYTE PromotePercent;
    BYTE Spare[2];
};

typedef struct PROCESSOR_IDLESTATE_POLICY PROCESSOR_IDLESTATE_POLICY, *PPROCESSOR_IDLESTATE_POLICY;

struct PROCESSOR_IDLESTATE_POLICY {
    WORD Revision;
    union _union_200 Flags;
    DWORD PolicyCount;
    struct PROCESSOR_IDLESTATE_INFO Policy[3];
};

typedef struct _PROCESSOR_NUMBER * PPROCESSOR_NUMBER;

typedef struct PROCESSOR_PERFSTATE_POLICY PROCESSOR_PERFSTATE_POLICY, *PPROCESSOR_PERFSTATE_POLICY;

struct PROCESSOR_PERFSTATE_POLICY {
    DWORD Revision;
    BYTE MaxThrottle;
    BYTE MinThrottle;
    BYTE BusyAdjThreshold;
    union _union_205 u;
    DWORD TimeCheck;
    DWORD IncreaseTime;
    DWORD DecreaseTime;
    DWORD IncreasePercent;
    DWORD DecreasePercent;
};

typedef struct _PROCESSOR_POWER_POLICY * PPROCESSOR_POWER_POLICY;

typedef struct _PROCESSOR_POWER_POLICY_INFO * PPROCESSOR_POWER_POLICY_INFO;

typedef struct _PROCESSOR_RELATIONSHIP * PPROCESSOR_RELATIONSHIP;

typedef struct _QUOTA_LIMITS * PQUOTA_LIMITS;

typedef struct _QUOTA_LIMITS_EX * PQUOTA_LIMITS_EX;

typedef union _RATE_QUOTA_LIMIT * PRATE_QUOTA_LIMIT;

typedef struct _REPARSE_GUID_DATA_BUFFER * PREPARSE_GUID_DATA_BUFFER;

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION * PRESOURCEMANAGER_BASIC_INFORMATION;

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION * PRESOURCEMANAGER_COMPLETION_INFORMATION;

typedef struct _PRIVILEGE_SET PRIVILEGE_SET;

typedef struct _LIST_ENTRY * PRLIST_ENTRY;

typedef struct _PROCESSOR_NUMBER PROCESSOR_NUMBER;

typedef struct _PROCESSOR_POWER_POLICY PROCESSOR_POWER_POLICY;

typedef struct _RTL_CONDITION_VARIABLE * PRTL_CONDITION_VARIABLE;

typedef struct _OSVERSIONINFOEXW * PRTL_OSVERSIONINFOEXW;

typedef struct _OSVERSIONINFOW * PRTL_OSVERSIONINFOW;

typedef struct _RTL_CRITICAL_SECTION_DEBUG * PRTL_RESOURCE_DEBUG;

typedef DWORD (RTL_RUN_ONCE_INIT_FN)(PRTL_RUN_ONCE, PVOID, PVOID *);

typedef RTL_RUN_ONCE_INIT_FN * PRTL_RUN_ONCE_INIT_FN;

typedef struct _RTL_SRWLOCK * PRTL_SRWLOCK;

typedef enum _RTL_UMS_SCHEDULER_REASON * PRTL_UMS_SCHEDULER_REASON;

typedef enum _RTL_UMS_THREAD_INFO_CLASS * PRTL_UMS_THREAD_INFO_CLASS;

typedef struct _SE_ACCESS_REPLY * PSE_ACCESS_REPLY;

typedef struct _SE_ACCESS_REQUEST * PSE_ACCESS_REQUEST;

typedef struct _SE_IMPERSONATION_STATE * PSE_IMPERSONATION_STATE;

typedef BOOLEAN (* PSECURE_MEMORY_CACHE_CALLBACK)(PVOID, SIZE_T);

typedef BOOLEAN * PSECURITY_CONTEXT_TRACKING_MODE;

typedef WORD * PSECURITY_DESCRIPTOR_CONTROL;

typedef enum _SECURITY_IMPERSONATION_LEVEL * PSECURITY_IMPERSONATION_LEVEL;

typedef DWORD * PSECURITY_INFORMATION;

typedef struct _SECURITY_QUALITY_OF_SERVICE * PSECURITY_QUALITY_OF_SERVICE;

typedef struct SET_POWER_SETTING_VALUE SET_POWER_SETTING_VALUE, *PSET_POWER_SETTING_VALUE;

typedef enum enum_172 SYSTEM_POWER_CONDITION;

struct SET_POWER_SETTING_VALUE {
    DWORD Version;
    GUID Guid;
    SYSTEM_POWER_CONDITION PowerCondition;
    DWORD DataLength;
    BYTE Data[1];
};

typedef SHORT * PSHORT;

typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[1];

typedef SID_AND_ATTRIBUTES_ARRAY * PSID_AND_ATTRIBUTES_ARRAY;

typedef ULONG_PTR * PSID_HASH_ENTRY;

typedef struct _SID_IDENTIFIER_AUTHORITY * PSID_IDENTIFIER_AUTHORITY;

typedef enum _SID_NAME_USE * PSID_NAME_USE;

typedef struct _SINGLE_LIST_ENTRY * PSINGLE_LIST_ENTRY;

typedef SINGLE_LIST_ENTRY * PSLIST_ENTRY32;

typedef union _SLIST_HEADER * PSLIST_HEADER;

typedef union _SLIST_HEADER SLIST_HEADER;

typedef SLIST_HEADER * PSLIST_HEADER32;

typedef struct _SUPPORTED_OS_INFO * PSUPPORTED_OS_INFO;

typedef struct _SYSTEM_ALARM_ACE SYSTEM_ALARM_ACE;

typedef SYSTEM_ALARM_ACE * PSYSTEM_ALARM_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE * PSYSTEM_ALARM_CALLBACK_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE * PSYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_ALARM_OBJECT_ACE * PSYSTEM_ALARM_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_ACE SYSTEM_AUDIT_ACE;

typedef SYSTEM_AUDIT_ACE * PSYSTEM_AUDIT_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE * PSYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE * PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE * PSYSTEM_AUDIT_OBJECT_ACE;

typedef struct SYSTEM_BATTERY_STATE SYSTEM_BATTERY_STATE, *PSYSTEM_BATTERY_STATE;

struct SYSTEM_BATTERY_STATE {
    BOOLEAN AcOnLine;
    BOOLEAN BatteryPresent;
    BOOLEAN Charging;
    BOOLEAN Discharging;
    BOOLEAN Spare1[4];
    DWORD MaxCapacity;
    DWORD RemainingCapacity;
    DWORD Rate;
    DWORD EstimatedTime;
    DWORD DefaultAlert1;
    DWORD DefaultAlert2;
};

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION * PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX * PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;

typedef struct _SYSTEM_MANDATORY_LABEL_ACE * PSYSTEM_MANDATORY_LABEL_ACE;

typedef struct SYSTEM_POWER_CAPABILITIES SYSTEM_POWER_CAPABILITIES, *PSYSTEM_POWER_CAPABILITIES;

struct SYSTEM_POWER_CAPABILITIES {
    BOOLEAN PowerButtonPresent;
    BOOLEAN SleepButtonPresent;
    BOOLEAN LidPresent;
    BOOLEAN SystemS1;
    BOOLEAN SystemS2;
    BOOLEAN SystemS3;
    BOOLEAN SystemS4;
    BOOLEAN SystemS5;
    BOOLEAN HiberFilePresent;
    BOOLEAN FullWake;
    BOOLEAN VideoDimPresent;
    BOOLEAN ApmPresent;
    BOOLEAN UpsPresent;
    BOOLEAN ThermalControl;
    BOOLEAN ProcessorThrottle;
    BYTE ProcessorMinThrottle;
    BYTE ProcessorThrottleScale;
    BYTE spare2[4];
    BOOLEAN DiskSpinDown;
    BYTE spare3[8];
    BOOLEAN SystemBatteriesPresent;
    BOOLEAN BatteriesAreShortTerm;
    struct BATTERY_REPORTING_SCALE BatteryScale[3];
    SYSTEM_POWER_STATE AcOnLineWake;
    SYSTEM_POWER_STATE SoftLidWake;
    SYSTEM_POWER_STATE RtcWake;
    SYSTEM_POWER_STATE MinDeviceWakeState;
    SYSTEM_POWER_STATE DefaultLowLatencyWake;
};

typedef struct _SYSTEM_POWER_POLICY * PSYSTEM_POWER_POLICY;

typedef enum _SYSTEM_POWER_STATE * PSYSTEM_POWER_STATE;

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION * PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;

typedef struct _TAPE_CREATE_PARTITION * PTAPE_CREATE_PARTITION;

typedef struct _TAPE_ERASE * PTAPE_ERASE;

typedef struct _TAPE_GET_DRIVE_PARAMETERS * PTAPE_GET_DRIVE_PARAMETERS;

typedef struct _TAPE_GET_MEDIA_PARAMETERS * PTAPE_GET_MEDIA_PARAMETERS;

typedef struct _TAPE_GET_POSITION * PTAPE_GET_POSITION;

typedef struct _TAPE_PREPARE * PTAPE_PREPARE;

typedef struct _TAPE_SET_DRIVE_PARAMETERS * PTAPE_SET_DRIVE_PARAMETERS;

typedef struct _TAPE_SET_MEDIA_PARAMETERS * PTAPE_SET_MEDIA_PARAMETERS;

typedef struct _TAPE_SET_POSITION * PTAPE_SET_POSITION;

typedef struct _TAPE_WMI_OPERATIONS * PTAPE_WMI_OPERATIONS;

typedef struct _TAPE_WRITE_MARKS * PTAPE_WRITE_MARKS;

typedef uchar * PTBYTE;

typedef LPCH PTCH;

typedef char * PTCHAR;

typedef struct _TOKEN_ACCESS_INFORMATION * PTOKEN_ACCESS_INFORMATION;

typedef struct _TOKEN_AUDIT_POLICY * PTOKEN_AUDIT_POLICY;

typedef struct _TOKEN_CONTROL * PTOKEN_CONTROL;

typedef struct _TOKEN_DEFAULT_DACL * PTOKEN_DEFAULT_DACL;

typedef struct _TOKEN_ELEVATION * PTOKEN_ELEVATION;

typedef enum _TOKEN_ELEVATION_TYPE * PTOKEN_ELEVATION_TYPE;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES * PTOKEN_GROUPS_AND_PRIVILEGES;

typedef enum _TOKEN_INFORMATION_CLASS * PTOKEN_INFORMATION_CLASS;

typedef struct _TOKEN_LINKED_TOKEN * PTOKEN_LINKED_TOKEN;

typedef struct _TOKEN_MANDATORY_LABEL * PTOKEN_MANDATORY_LABEL;

typedef struct _TOKEN_MANDATORY_POLICY * PTOKEN_MANDATORY_POLICY;

typedef struct _TOKEN_ORIGIN * PTOKEN_ORIGIN;

typedef struct _TOKEN_OWNER * PTOKEN_OWNER;

typedef struct _TOKEN_PRIMARY_GROUP * PTOKEN_PRIMARY_GROUP;

typedef struct _TOKEN_SOURCE * PTOKEN_SOURCE;

typedef struct _TOKEN_STATISTICS * PTOKEN_STATISTICS;

typedef TOKEN_TYPE * PTOKEN_TYPE;

typedef struct _TOKEN_USER * PTOKEN_USER;

typedef struct _TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON_V3;

typedef TP_CALLBACK_ENVIRON_V3 * PTP_CALLBACK_ENVIRON;

typedef struct _TP_POOL_STACK_INFORMATION * PTP_POOL_STACK_INFORMATION;

typedef struct _TP_TIMER * PTP_TIMER;

typedef void (* PTP_TIMER_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PTP_TIMER);

typedef DWORD * PTP_VERSION;

typedef struct _TP_WAIT * PTP_WAIT;

typedef DWORD TP_WAIT_RESULT;

typedef void (* PTP_WAIT_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PTP_WAIT, TP_WAIT_RESULT);

typedef struct _TP_WORK * PTP_WORK;

typedef void (* PTP_WORK_CALLBACK)(PTP_CALLBACK_INSTANCE, PVOID, PTP_WORK);

typedef struct _TRANSACTION_BASIC_INFORMATION * PTRANSACTION_BASIC_INFORMATION;

typedef struct _TRANSACTION_BIND_INFORMATION * PTRANSACTION_BIND_INFORMATION;

typedef struct _TRANSACTION_ENLISTMENT_PAIR * PTRANSACTION_ENLISTMENT_PAIR;

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION * PTRANSACTION_ENLISTMENTS_INFORMATION;

typedef struct _TRANSACTION_LIST_ENTRY * PTRANSACTION_LIST_ENTRY;

typedef struct _TRANSACTION_LIST_INFORMATION * PTRANSACTION_LIST_INFORMATION;

typedef struct _TRANSACTION_PROPERTIES_INFORMATION * PTRANSACTION_PROPERTIES_INFORMATION;

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION * PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION * PTRANSACTIONMANAGER_BASIC_INFORMATION;

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION * PTRANSACTIONMANAGER_LOG_INFORMATION;

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION * PTRANSACTIONMANAGER_LOGPATH_INFORMATION;

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION * PTRANSACTIONMANAGER_OLDEST_INFORMATION;

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION * PTRANSACTIONMANAGER_RECOVERY_INFORMATION;

typedef LPSTR PTSTR;

typedef UCSCHAR * PUCSCHAR;

typedef UCSCHAR * PUCSSTR;

typedef ULARGE_INTEGER * PULARGE_INTEGER;

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES * PUMS_CREATE_THREAD_ATTRIBUTES;

typedef PNZCH PUNZTCH;

typedef WCHAR * PUNZWCH;

typedef LPSTR PUTSTR;

typedef UCSCHAR * PUUCSCHAR;

typedef UCSCHAR * PUUCSSTR;

typedef WCHAR * PUWSTR;

typedef CHAR * PZZSTR;

typedef PZZSTR PUZZTSTR;

typedef WCHAR * PUZZWSTR;

typedef LONG (* PVECTORED_EXCEPTION_HANDLER)(struct _EXCEPTION_POINTERS *);

typedef WCHAR * PWCH;

typedef struct _WOW64_CONTEXT WOW64_CONTEXT;

typedef WOW64_CONTEXT * PWOW64_CONTEXT;

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY * PWOW64_DESCRIPTOR_TABLE_ENTRY;

typedef WOW64_FLOATING_SAVE_AREA * PWOW64_FLOATING_SAVE_AREA;

typedef struct _WOW64_LDT_ENTRY * PWOW64_LDT_ENTRY;

typedef struct _XSAVE_AREA_HEADER * PXSAVE_AREA_HEADER;

typedef struct _XSAVE_FORMAT * PXSAVE_FORMAT;

typedef struct _XSTATE_CONFIGURATION * PXSTATE_CONFIGURATION;

typedef struct _XSTATE_CONTEXT * PXSTATE_CONTEXT;

typedef struct _XSTATE_FEATURE * PXSTATE_FEATURE;

typedef PCSTR * PZPCSTR;

typedef PCWSTR * PZPCWSTR;

typedef PSTR * PZPSTR;

typedef PWSTR * PZPWSTR;

typedef PZZSTR PZZTSTR;

typedef WCHAR * PZZWSTR;

typedef struct _QUOTA_LIMITS_EX QUOTA_LIMITS_EX;

typedef struct _REPARSE_GUID_DATA_BUFFER REPARSE_GUID_DATA_BUFFER;

typedef enum ReplacesCorHdrNumericDefines {
    COMIMAGE_FLAGS_32BITREQUIRED=2,
    COMIMAGE_FLAGS_ILONLY=1,
    COMIMAGE_FLAGS_IL_LIBRARY=4,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT=16,
    COMIMAGE_FLAGS_STRONGNAMESIGNED=8,
    COMIMAGE_FLAGS_TRACKDEBUGDATA=65536,
    COR_DELETED_NAME_LENGTH=8,
    COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=255,
    COR_VERSION_MAJOR=3,
    COR_VERSION_MAJOR_V2=2,
    COR_VERSION_MINOR=0,
    COR_VTABLEGAP_NAME_LENGTH=8,
    COR_VTABLE_32BIT=1,
    COR_VTABLE_64BIT=2,
    COR_VTABLE_CALL_MOST_DERIVED=16,
    COR_VTABLE_FROM_UNMANAGED=4,
    COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN=8,
    IMAGE_COR_EATJ_THUNK_SIZE=32,
    IMAGE_COR_MIH_BASICBLOCK=8,
    IMAGE_COR_MIH_EHRVA=2,
    IMAGE_COR_MIH_METHODRVA=1,
    MAX_CLASS_NAME=1024,
    MAX_PACKAGE_NAME=1024,
    NATIVE_TYPE_MAX_CB=1
} ReplacesCorHdrNumericDefines;

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION RESOURCEMANAGER_BASIC_INFORMATION;

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION RESOURCEMANAGER_COMPLETION_INFORMATION;

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS RESOURCEMANAGER_INFORMATION_CLASS;

typedef struct _OSVERSIONINFOEXW RTL_OSVERSIONINFOEXW;

typedef struct _OSVERSIONINFOW RTL_OSVERSIONINFOW;

typedef struct _RTL_CRITICAL_SECTION_DEBUG RTL_RESOURCE_DEBUG;

typedef enum _RTL_UMS_THREAD_INFO_CLASS RTL_UMS_THREAD_INFO_CLASS;

typedef struct _SE_ACCESS_REPLY SE_ACCESS_REPLY;

typedef struct _SE_ACCESS_REQUEST SE_ACCESS_REQUEST;

typedef struct _SE_IMPERSONATION_STATE SE_IMPERSONATION_STATE;

typedef struct _SE_SECURITY_DESCRIPTOR SE_SECURITY_DESCRIPTOR;

typedef struct _SECURITY_DESCRIPTOR SECURITY_DESCRIPTOR;

typedef enum _CM_ERROR_CONTROL_TYPE SERVICE_ERROR_TYPE;

typedef enum _CM_SERVICE_LOAD_TYPE SERVICE_LOAD_TYPE;

typedef enum _CM_SERVICE_NODE_TYPE SERVICE_NODE_TYPE;

typedef struct _SID_AND_ATTRIBUTES_HASH SID_AND_ATTRIBUTES_HASH;

typedef SINGLE_LIST_ENTRY SLIST_ENTRY32;

typedef SLIST_HEADER SLIST_HEADER32;

typedef struct _SUPPORTED_OS_INFO SUPPORTED_OS_INFO;

typedef struct _SYSTEM_ALARM_CALLBACK_ACE SYSTEM_ALARM_CALLBACK_ACE;

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE SYSTEM_ALARM_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_ALARM_OBJECT_ACE SYSTEM_ALARM_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE SYSTEM_AUDIT_CALLBACK_ACE;

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;

typedef struct _SYSTEM_AUDIT_OBJECT_ACE SYSTEM_AUDIT_OBJECT_ACE;

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION SYSTEM_LOGICAL_PROCESSOR_INFORMATION;

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;

typedef struct _SYSTEM_MANDATORY_LABEL_ACE SYSTEM_MANDATORY_LABEL_ACE;

typedef struct _SYSTEM_POWER_POLICY SYSTEM_POWER_POLICY;

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;

typedef struct _TAPE_CREATE_PARTITION TAPE_CREATE_PARTITION;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE TAPE_DRIVE_PROBLEM_TYPE;

typedef struct _TAPE_ERASE TAPE_ERASE;

typedef struct _TAPE_GET_DRIVE_PARAMETERS TAPE_GET_DRIVE_PARAMETERS;

typedef struct _TAPE_GET_MEDIA_PARAMETERS TAPE_GET_MEDIA_PARAMETERS;

typedef struct _TAPE_GET_POSITION TAPE_GET_POSITION;

typedef struct _TAPE_PREPARE TAPE_PREPARE;

typedef struct _TAPE_SET_DRIVE_PARAMETERS TAPE_SET_DRIVE_PARAMETERS;

typedef struct _TAPE_SET_MEDIA_PARAMETERS TAPE_SET_MEDIA_PARAMETERS;

typedef struct _TAPE_SET_POSITION TAPE_SET_POSITION;

typedef struct _TAPE_WMI_OPERATIONS TAPE_WMI_OPERATIONS;

typedef struct _TAPE_WRITE_MARKS TAPE_WRITE_MARKS;

typedef uchar TBYTE;

typedef char TCHAR;

typedef struct _TOKEN_ACCESS_INFORMATION TOKEN_ACCESS_INFORMATION;

typedef struct _TOKEN_AUDIT_POLICY TOKEN_AUDIT_POLICY;

typedef struct _TOKEN_CONTROL TOKEN_CONTROL;

typedef struct _TOKEN_DEFAULT_DACL TOKEN_DEFAULT_DACL;

typedef struct _TOKEN_ELEVATION TOKEN_ELEVATION;

typedef enum _TOKEN_ELEVATION_TYPE TOKEN_ELEVATION_TYPE;

typedef struct _TOKEN_GROUPS TOKEN_GROUPS;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES TOKEN_GROUPS_AND_PRIVILEGES;

typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;

typedef struct _TOKEN_LINKED_TOKEN TOKEN_LINKED_TOKEN;

typedef struct _TOKEN_MANDATORY_LABEL TOKEN_MANDATORY_LABEL;

typedef struct _TOKEN_ORIGIN TOKEN_ORIGIN;

typedef struct _TOKEN_OWNER TOKEN_OWNER;

typedef struct _TOKEN_PRIMARY_GROUP TOKEN_PRIMARY_GROUP;

typedef struct _TOKEN_PRIVILEGES TOKEN_PRIVILEGES;

typedef struct _TOKEN_STATISTICS TOKEN_STATISTICS;

typedef struct _TOKEN_USER TOKEN_USER;

typedef TP_CALLBACK_ENVIRON_V3 TP_CALLBACK_ENVIRON;

typedef struct _TP_CALLBACK_INSTANCE TP_CALLBACK_INSTANCE;

typedef struct _TP_CLEANUP_GROUP TP_CLEANUP_GROUP;

typedef struct _TP_IO TP_IO;

typedef struct _TP_POOL TP_POOL;

typedef struct _TP_POOL_STACK_INFORMATION TP_POOL_STACK_INFORMATION;

typedef struct _TP_TIMER TP_TIMER;

typedef struct _TP_WAIT TP_WAIT;

typedef struct _TP_WORK TP_WORK;

typedef struct _TRANSACTION_BASIC_INFORMATION TRANSACTION_BASIC_INFORMATION;

typedef struct _TRANSACTION_BIND_INFORMATION TRANSACTION_BIND_INFORMATION;

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION TRANSACTION_ENLISTMENTS_INFORMATION;

typedef enum _TRANSACTION_INFORMATION_CLASS TRANSACTION_INFORMATION_CLASS;

typedef struct _TRANSACTION_LIST_INFORMATION TRANSACTION_LIST_INFORMATION;

typedef enum _TRANSACTION_OUTCOME TRANSACTION_OUTCOME;

typedef struct _TRANSACTION_PROPERTIES_INFORMATION TRANSACTION_PROPERTIES_INFORMATION;

typedef enum _TRANSACTION_STATE TRANSACTION_STATE;

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION TRANSACTIONMANAGER_BASIC_INFORMATION;

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS TRANSACTIONMANAGER_INFORMATION_CLASS;

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION TRANSACTIONMANAGER_LOG_INFORMATION;

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION TRANSACTIONMANAGER_LOGPATH_INFORMATION;

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION TRANSACTIONMANAGER_OLDEST_INFORMATION;

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION TRANSACTIONMANAGER_RECOVERY_INFORMATION;

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES UMS_CREATE_THREAD_ATTRIBUTES;

typedef enum enum_75 WELL_KNOWN_SID_TYPE;

typedef void (* WORKERCALLBACKFUNC)(PVOID);

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY WOW64_DESCRIPTOR_TABLE_ENTRY;

typedef struct _XSAVE_AREA XSAVE_AREA;

typedef struct _XSTATE_CONFIGURATION XSTATE_CONFIGURATION;

typedef struct _XSTATE_CONTEXT XSTATE_CONTEXT;

#define MAX_PERF_OBJECTS_IN_QUERY_FUNCTION 64

#define PERF_COUNTER_BASE 196608

#define PERF_COUNTER_ELAPSED 262144

#define PERF_COUNTER_FRACTION 131072

#define PERF_COUNTER_HISTOGRAM 393216

#define PERF_COUNTER_HISTOGRAM_TYPE 2147483648

#define PERF_COUNTER_NODATA 1073742336

#define PERF_COUNTER_PRECISION 458752

#define PERF_COUNTER_QUEUELEN 327680

#define PERF_COUNTER_RATE 65536

#define PERF_COUNTER_VALUE 0

#define PERF_DATA_REVISION 1

#define PERF_DATA_VERSION 1

#define PERF_DELTA_BASE 8388608

#define PERF_DELTA_COUNTER 4194304

#define PERF_DETAIL_ADVANCED 200

#define PERF_DETAIL_EXPERT 300

#define PERF_DETAIL_NOVICE 100

#define PERF_DETAIL_WIZARD 400

#define PERF_DISPLAY_NO_SUFFIX 0

#define PERF_DISPLAY_NOSHOW 1073741824

#define PERF_DISPLAY_PER_SEC 268435456

#define PERF_DISPLAY_PERCENT 536870912

#define PERF_DISPLAY_SECONDS 805306368

#define PERF_INVERSE_COUNTER 16777216

#define PERF_MULTI_COUNTER 33554432

#define PERF_NO_INSTANCES -1

#define PERF_NO_UNIQUE_ID -1

#define PERF_NUMBER_DEC_1000 131072

#define PERF_NUMBER_DECIMAL 65536

#define PERF_NUMBER_HEX 0

#define PERF_OBJECT_TIMER 2097152

#define PERF_PRECISION_TIMESTAMP 1073939712

#define PERF_QUERY_COSTLY 2147483650

#define PERF_QUERY_GLOBAL 2147483649

#define PERF_QUERY_OBJECTS 2147483648

#define PERF_SIZE_DWORD 0

#define PERF_SIZE_LARGE 256

#define PERF_SIZE_VARIABLE_LEN 768

#define PERF_SIZE_ZERO 512

#define PERF_TEXT_ASCII 65536

#define PERF_TEXT_UNICODE 0

#define PERF_TIMER_100NS 1048576

#define PERF_TIMER_TICK 0

#define PERF_TYPE_COUNTER 1024

#define PERF_TYPE_NUMBER 0

#define PERF_TYPE_TEXT 2048

#define PERF_TYPE_ZERO 3072

#define WINPERF_LOG_DEBUG 2

#define WINPERF_LOG_NONE 0

#define WINPERF_LOG_USER 1

#define WINPERF_LOG_VERBOSE 3

typedef struct _PERF_COUNTER_BLOCK _PERF_COUNTER_BLOCK, *P_PERF_COUNTER_BLOCK;

struct _PERF_COUNTER_BLOCK {
    DWORD ByteLength;
};

typedef struct _PERF_COUNTER_DEFINITION _PERF_COUNTER_DEFINITION, *P_PERF_COUNTER_DEFINITION;

struct _PERF_COUNTER_DEFINITION {
    DWORD ByteLength;
    DWORD CounterNameTitleIndex;
    LPWSTR CounterNameTitle;
    DWORD CounterHelpTitleIndex;
    LPWSTR CounterHelpTitle;
    LONG DefaultScale;
    DWORD DetailLevel;
    DWORD CounterType;
    DWORD CounterSize;
    DWORD CounterOffset;
};

typedef struct _PERF_DATA_BLOCK _PERF_DATA_BLOCK, *P_PERF_DATA_BLOCK;

struct _PERF_DATA_BLOCK {
    WCHAR Signature[4];
    DWORD LittleEndian;
    DWORD Version;
    DWORD Revision;
    DWORD TotalByteLength;
    DWORD HeaderLength;
    DWORD NumObjectTypes;
    LONG DefaultObject;
    SYSTEMTIME SystemTime;
    LARGE_INTEGER PerfTime;
    LARGE_INTEGER PerfFreq;
    LARGE_INTEGER PerfTime100nSec;
    DWORD SystemNameLength;
    DWORD SystemNameOffset;
};

typedef struct _PERF_INSTANCE_DEFINITION _PERF_INSTANCE_DEFINITION, *P_PERF_INSTANCE_DEFINITION;

struct _PERF_INSTANCE_DEFINITION {
    DWORD ByteLength;
    DWORD ParentObjectTitleIndex;
    DWORD ParentObjectInstance;
    LONG UniqueID;
    DWORD NameOffset;
    DWORD NameLength;
};

typedef struct _PERF_OBJECT_TYPE _PERF_OBJECT_TYPE, *P_PERF_OBJECT_TYPE;

struct _PERF_OBJECT_TYPE {
    DWORD TotalByteLength;
    DWORD DefinitionLength;
    DWORD HeaderLength;
    DWORD ObjectNameTitleIndex;
    LPWSTR ObjectNameTitle;
    DWORD ObjectHelpTitleIndex;
    LPWSTR ObjectHelpTitle;
    DWORD DetailLevel;
    DWORD NumCounters;
    LONG DefaultCounter;
    LONG NumInstances;
    DWORD CodePage;
    LARGE_INTEGER PerfTime;
    LARGE_INTEGER PerfFreq;
};

typedef struct _PERF_COUNTER_BLOCK PERF_COUNTER_BLOCK;

typedef struct _PERF_COUNTER_DEFINITION PERF_COUNTER_DEFINITION;

typedef struct _PERF_DATA_BLOCK PERF_DATA_BLOCK;

typedef struct _PERF_INSTANCE_DEFINITION PERF_INSTANCE_DEFINITION;

typedef struct _PERF_OBJECT_TYPE PERF_OBJECT_TYPE;

typedef DWORD (PM_CLOSE_PROC)(void);

typedef DWORD (PM_COLLECT_PROC)(LPWSTR, LPVOID *, LPDWORD, LPDWORD);

typedef DWORD (PM_OPEN_PROC)(LPWSTR);

typedef DWORD (PM_QUERY_PROC)(LPDWORD, LPVOID *, LPDWORD, LPDWORD);

typedef struct _PERF_COUNTER_BLOCK * PPERF_COUNTER_BLOCK;

typedef struct _PERF_COUNTER_DEFINITION * PPERF_COUNTER_DEFINITION;

typedef struct _PERF_DATA_BLOCK * PPERF_DATA_BLOCK;

typedef struct _PERF_INSTANCE_DEFINITION * PPERF_INSTANCE_DEFINITION;

typedef struct _PERF_OBJECT_TYPE * PPERF_OBJECT_TYPE;

#define HKEY_CLASSES_ROOT 2147483648

#define HKEY_CURRENT_CONFIG 2147483653

#define HKEY_CURRENT_USER 2147483649

#define HKEY_CURRENT_USER_LOCAL_SETTINGS 2147483655

#define HKEY_DYN_DATA 2147483654

#define HKEY_LOCAL_MACHINE 2147483650

#define HKEY_PERFORMANCE_DATA 2147483652

#define HKEY_PERFORMANCE_NLSTEXT 2147483744

#define HKEY_PERFORMANCE_TEXT 2147483728

#define HKEY_USERS 2147483651

#define MAX_SHUTDOWN_TIMEOUT 315360000

#define PROVIDER_KEEPS_VALUE_LENGTH 1

#define REASON_HWINSTALL 65538

#define REASON_LEGACY_API 2147942400

#define REASON_OTHER 0

#define REASON_PLANNED_FLAG 2147483648

#define REASON_SERVICEHANG 196613

#define REASON_SWHWRECONF 196612

#define REASON_SWINSTALL 196610

#define REASON_UNKNOWN 255

#define REASON_UNSTABLE 327686

#define REG_MUI_STRING_TRUNCATE 1

#define REG_PROCESS_APPKEY 1

#define REG_SECURE_CONNECTION 1

#define RRF_NOEXPAND 268435456

#define RRF_RT_ANY 65535

#define RRF_RT_DWORD 24

#define RRF_RT_QWORD 72

#define RRF_RT_REG_BINARY 8

#define RRF_RT_REG_DWORD 16

#define RRF_RT_REG_EXPAND_SZ 4

#define RRF_RT_REG_MULTI_SZ 32

#define RRF_RT_REG_NONE 1

#define RRF_RT_REG_QWORD 64

#define RRF_RT_REG_SZ 2

#define RRF_ZEROONFAILURE 536870912

#define SHUTDOWN_FORCE_OTHERS 1

#define SHUTDOWN_FORCE_SELF 2

#define SHUTDOWN_GRACE_OVERRIDE 32

#define SHUTDOWN_INSTALL_UPDATES 64

#define SHUTDOWN_NOREBOOT 16

#define SHUTDOWN_POWEROFF 8

#define SHUTDOWN_RESTART 4

#define SHUTDOWN_RESTARTAPPS 128

#define SHUTDOWN_SKIP_SVC_PRESHUTDOWN 256

#define WIN31_CLASS 0

typedef LONG LSTATUS;

typedef struct provider_info provider_info, *Pprovider_info;

typedef struct provider_info * PPROVIDER;

typedef struct val_context val_context, *Pval_context;

typedef struct val_context * PVALCONTEXT;

typedef DWORD (QUERYHANDLER)(LPVOID, PVALCONTEXT, DWORD, LPVOID, DWORD *, DWORD);

typedef QUERYHANDLER * PQUERYHANDLER;

struct val_context {
    int valuelen;
    LPVOID value_context;
    LPVOID val_buff_ptr;
};

struct provider_info {
    PQUERYHANDLER pi_R0_1val;
    PQUERYHANDLER pi_R0_allvals;
    PQUERYHANDLER pi_R3_1val;
    PQUERYHANDLER pi_R3_allvals;
    DWORD pi_flags;
    LPVOID pi_key_context;
};

typedef struct pvalueA pvalueA, *PpvalueA;

typedef struct pvalueA * PPVALUEA;

typedef PPVALUEA PPVALUE;

struct pvalueA {
    LPSTR pv_valuename;
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
};

typedef struct pvalueW pvalueW, *PpvalueW;

typedef struct pvalueW * PPVALUEW;

struct pvalueW {
    LPWSTR pv_valuename;
    int pv_valuelen;
    LPVOID pv_value_context;
    DWORD pv_type;
};

typedef struct value_entA value_entA, *Pvalue_entA;

typedef struct value_entA * PVALENTA;

typedef PVALENTA PVALENT;

struct value_entA {
    LPSTR ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
};

typedef struct value_entW value_entW, *Pvalue_entW;

typedef struct value_entW * PVALENTW;

struct value_entW {
    LPWSTR ve_valuename;
    DWORD ve_valuelen;
    DWORD_PTR ve_valueptr;
    DWORD ve_type;
};

typedef struct pvalueA PVALUEA;

typedef PVALUEA PVALUE;

typedef struct pvalueW PVALUEW;

typedef struct provider_info REG_PROVIDER;

typedef struct value_entA VALENTA;

typedef VALENTA VALENT;

typedef struct value_entW VALENTW;

#define SC_DLG_FORCE_UI 4

#define SC_DLG_MINIMAL_UI 1

#define SC_DLG_NO_UI 2

#define SCARD_AUTOALLOCATE -1

#define SCARD_EJECT_CARD 3

#define SCARD_LEAVE_CARD 0

#define SCARD_PROVIDER_CSP 2

#define SCARD_PROVIDER_KSP 3

#define SCARD_PROVIDER_PRIMARY 1

#define SCARD_RESET_CARD 1

#define SCARD_SCOPE_SYSTEM 2

#define SCARD_SCOPE_TERMINAL 1

#define SCARD_SCOPE_USER 0

#define SCARD_SHARE_DIRECT 3

#define SCARD_SHARE_EXCLUSIVE 1

#define SCARD_SHARE_SHARED 2

#define SCARD_STATE_ATRMATCH 64

#define SCARD_STATE_CHANGED 2

#define SCARD_STATE_EMPTY 16

#define SCARD_STATE_EXCLUSIVE 128

#define SCARD_STATE_IGNORE 1

#define SCARD_STATE_INUSE 256

#define SCARD_STATE_MUTE 512

#define SCARD_STATE_PRESENT 32

#define SCARD_STATE_UNAVAILABLE 8

#define SCARD_STATE_UNAWARE 0

#define SCARD_STATE_UNKNOWN 4

#define SCARD_STATE_UNPOWERED 1024

#define SCARD_UNPOWER_CARD 2

#define SCERR_NOCARDNAME 16384

#define SCERR_NOGUIDS 32768

typedef BYTE * LPCBYTE;

typedef ULONG_PTR SCARDCONTEXT;

typedef ULONG_PTR SCARDHANDLE;

typedef BOOL (* LPOCNCHKPROC)(SCARDCONTEXT, SCARDHANDLE, PVOID);

typedef SCARDHANDLE (* LPOCNCONNPROCA)(SCARDCONTEXT, LPSTR, LPSTR, PVOID);

typedef SCARDHANDLE (* LPOCNCONNPROCW)(SCARDCONTEXT, LPWSTR, LPWSTR, PVOID);

typedef void (* LPOCNDSCPROC)(SCARDCONTEXT, SCARDHANDLE, PVOID);

typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIAA, *POPENCARD_SEARCH_CRITERIAA;

typedef struct OPENCARD_SEARCH_CRITERIAA * LPOPENCARD_SEARCH_CRITERIAA;

typedef LPOPENCARD_SEARCH_CRITERIAA LPOPENCARD_SEARCH_CRITERIA;

struct OPENCARD_SEARCH_CRITERIAA {
    DWORD dwStructSize;
    LPSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPOCNCHKPROC lpfnCheck;
    LPOCNCONNPROCA lpfnConnect;
    LPOCNDSCPROC lpfnDisconnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
};

typedef struct OPENCARD_SEARCH_CRITERIAW OPENCARD_SEARCH_CRITERIAW, *POPENCARD_SEARCH_CRITERIAW;

typedef struct OPENCARD_SEARCH_CRITERIAW * LPOPENCARD_SEARCH_CRITERIAW;

struct OPENCARD_SEARCH_CRITERIAW {
    DWORD dwStructSize;
    LPWSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPWSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPOCNCHKPROC lpfnCheck;
    LPOCNCONNPROCW lpfnConnect;
    LPOCNDSCPROC lpfnDisconnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
};

typedef struct OPENCARDNAMEA OPENCARDNAMEA, *POPENCARDNAMEA;

typedef struct OPENCARDNAMEA * LPOPENCARDNAMEA;

typedef LPOPENCARDNAMEA LPOPENCARDNAME;

struct OPENCARDNAMEA {
    DWORD dwStructSize;
    HWND hwndOwner;
    SCARDCONTEXT hSCardContext;
    LPSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPSTR lpstrRdr;
    DWORD nMaxRdr;
    LPSTR lpstrCard;
    DWORD nMaxCard;
    LPCSTR lpstrTitle;
    DWORD dwFlags;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    DWORD dwActiveProtocol;
    LPOCNCONNPROCA lpfnConnect;
    LPOCNCHKPROC lpfnCheck;
    LPOCNDSCPROC lpfnDisconnect;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAME_EXA OPENCARDNAME_EXA, *POPENCARDNAME_EXA;

typedef struct OPENCARDNAME_EXA * LPOPENCARDNAME_EXA;

typedef LPOPENCARDNAME_EXA LPOPENCARDNAME_EX;

struct OPENCARDNAME_EXA {
    DWORD dwStructSize;
    SCARDCONTEXT hSCardContext;
    HWND hwndOwner;
    DWORD dwFlags;
    LPCSTR lpstrTitle;
    LPCSTR lpstrSearchDesc;
    HICON hIcon;
    POPENCARD_SEARCH_CRITERIAA pOpenCardSearchCriteria;
    LPOCNCONNPROCA lpfnConnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    LPSTR lpstrRdr;
    DWORD nMaxRdr;
    LPSTR lpstrCard;
    DWORD nMaxCard;
    DWORD dwActiveProtocol;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAME_EXW OPENCARDNAME_EXW, *POPENCARDNAME_EXW;

typedef struct OPENCARDNAME_EXW * LPOPENCARDNAME_EXW;

struct OPENCARDNAME_EXW {
    DWORD dwStructSize;
    SCARDCONTEXT hSCardContext;
    HWND hwndOwner;
    DWORD dwFlags;
    LPCWSTR lpstrTitle;
    LPCWSTR lpstrSearchDesc;
    HICON hIcon;
    POPENCARD_SEARCH_CRITERIAW pOpenCardSearchCriteria;
    LPOCNCONNPROCW lpfnConnect;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    LPWSTR lpstrRdr;
    DWORD nMaxRdr;
    LPWSTR lpstrCard;
    DWORD nMaxCard;
    DWORD dwActiveProtocol;
    SCARDHANDLE hCardHandle;
};

typedef struct OPENCARDNAMEW OPENCARDNAMEW, *POPENCARDNAMEW;

typedef struct OPENCARDNAMEW * LPOPENCARDNAMEW;

struct OPENCARDNAMEW {
    DWORD dwStructSize;
    HWND hwndOwner;
    SCARDCONTEXT hSCardContext;
    LPWSTR lpstrGroupNames;
    DWORD nMaxGroupNames;
    LPWSTR lpstrCardNames;
    DWORD nMaxCardNames;
    LPCGUID rgguidInterfaces;
    DWORD cguidInterfaces;
    LPWSTR lpstrRdr;
    DWORD nMaxRdr;
    LPWSTR lpstrCard;
    DWORD nMaxCard;
    LPCWSTR lpstrTitle;
    DWORD dwFlags;
    LPVOID pvUserData;
    DWORD dwShareMode;
    DWORD dwPreferredProtocols;
    DWORD dwActiveProtocol;
    LPOCNCONNPROCW lpfnConnect;
    LPOCNCHKPROC lpfnCheck;
    LPOCNDSCPROC lpfnDisconnect;
    SCARDHANDLE hCardHandle;
};

typedef struct SCARD_READERSTATEA SCARD_READERSTATEA, *PSCARD_READERSTATEA;

typedef struct SCARD_READERSTATEA * LPSCARD_READERSTATEA;

typedef LPSCARD_READERSTATEA LPSCARD_READERSTATE;

struct SCARD_READERSTATEA {
    LPCSTR szReader;
    LPVOID pvUserData;
    DWORD dwCurrentState;
    DWORD dwEventState;
    DWORD cbAtr;
    BYTE rgbAtr[36];
};

typedef struct SCARD_READERSTATEW SCARD_READERSTATEW, *PSCARD_READERSTATEW;

typedef struct SCARD_READERSTATEW * LPSCARD_READERSTATEW;

struct SCARD_READERSTATEW {
    LPCWSTR szReader;
    LPVOID pvUserData;
    DWORD dwCurrentState;
    DWORD dwEventState;
    DWORD cbAtr;
    BYTE rgbAtr[36];
};

typedef SCARDCONTEXT * LPSCARDCONTEXT;

typedef SCARDHANDLE * LPSCARDHANDLE;

typedef struct OPENCARD_SEARCH_CRITERIAA OPENCARD_SEARCH_CRITERIA;

typedef struct OPENCARDNAMEA OPENCARDNAME;

typedef struct OPENCARDNAME_EXA OPENCARDNAME_EX;

typedef POPENCARD_SEARCH_CRITERIAA POPENCARD_SEARCH_CRITERIA;

typedef POPENCARDNAMEA POPENCARDNAME;

typedef POPENCARDNAME_EXA POPENCARDNAME_EX;

typedef PSCARD_READERSTATEA PSCARD_READERSTATE;

typedef SCARDCONTEXT * PSCARDCONTEXT;

typedef SCARDHANDLE * PSCARDHANDLE;

typedef struct SCARD_READERSTATEA SCARD_READERSTATE;

#define IOCTL_SMARTCARD_CONFISCATE 3211280

#define IOCTL_SMARTCARD_EJECT 3211288

#define IOCTL_SMARTCARD_GET_ATTRIBUTE 3211272

#define IOCTL_SMARTCARD_GET_LAST_ERROR 3211324

#define IOCTL_SMARTCARD_GET_PERF_CNTR 3211328

#define IOCTL_SMARTCARD_GET_STATE 3211320

#define IOCTL_SMARTCARD_IS_ABSENT 3211308

#define IOCTL_SMARTCARD_IS_PRESENT 3211304

#define IOCTL_SMARTCARD_POWER 3211268

#define IOCTL_SMARTCARD_SET_ATTRIBUTE 3211276

#define IOCTL_SMARTCARD_SET_PROTOCOL 3211312

#define IOCTL_SMARTCARD_SWALLOW 3211292

#define IOCTL_SMARTCARD_TRANSMIT 3211284

#define MAXIMUM_ATTR_STRING_LENGTH 32

#define MAXIMUM_SMARTCARD_READERS 10

#define SCARD_ABSENT 1

#define SCARD_ATR_LENGTH 33

#define SCARD_ATTR_ATR_STRING 590595

#define SCARD_ATTR_CHANNEL_ID 131344

#define SCARD_ATTR_CHARACTERISTICS 393552

#define SCARD_ATTR_CURRENT_BWT 524809

#define SCARD_ATTR_CURRENT_CLK 524802

#define SCARD_ATTR_CURRENT_CWT 524810

#define SCARD_ATTR_CURRENT_D 524804

#define SCARD_ATTR_CURRENT_EBC_ENCODING 524811

#define SCARD_ATTR_CURRENT_F 524803

#define SCARD_ATTR_CURRENT_IFSC 524807

#define SCARD_ATTR_CURRENT_IFSD 524808

#define SCARD_ATTR_CURRENT_IO_STATE 590594

#define SCARD_ATTR_CURRENT_N 524805

#define SCARD_ATTR_CURRENT_PROTOCOL_TYPE 524801

#define SCARD_ATTR_CURRENT_W 524806

#define SCARD_ATTR_DEFAULT_CLK 196897

#define SCARD_ATTR_DEFAULT_DATA_RATE 196899

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME 2147418115

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_A 2147418115

#define SCARD_ATTR_DEVICE_FRIENDLY_NAME_W 2147418117

#define SCARD_ATTR_DEVICE_IN_USE 2147418114

#define SCARD_ATTR_DEVICE_SYSTEM_NAME 2147418116

#define SCARD_ATTR_DEVICE_SYSTEM_NAME_A 2147418116

#define SCARD_ATTR_DEVICE_SYSTEM_NAME_W 2147418118

#define SCARD_ATTR_DEVICE_UNIT 2147418113

#define SCARD_ATTR_ESC_AUTHREQUEST 499717

#define SCARD_ATTR_ESC_CANCEL 499715

#define SCARD_ATTR_ESC_RESET 499712

#define SCARD_ATTR_EXTENDED_BWT 524812

#define SCARD_ATTR_ICC_INTERFACE_STATUS 590593

#define SCARD_ATTR_ICC_PRESENCE 590592

#define SCARD_ATTR_ICC_TYPE_PER_ATR 590596

#define SCARD_ATTR_MAX_CLK 196898

#define SCARD_ATTR_MAX_DATA_RATE 196900

#define SCARD_ATTR_MAX_IFSD 196901

#define SCARD_ATTR_MAXINPUT 499719

#define SCARD_ATTR_POWER_MGMT_SUPPORT 262449

#define SCARD_ATTR_PROTOCOL_TYPES 196896

#define SCARD_ATTR_SUPRESS_T1_IFS_REQUEST 2147418119

#define SCARD_ATTR_USER_AUTH_INPUT_DEVICE 328002

#define SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE 328000

#define SCARD_ATTR_VENDOR_IFD_SERIAL_NO 65795

#define SCARD_ATTR_VENDOR_IFD_TYPE 65793

#define SCARD_ATTR_VENDOR_IFD_VERSION 65794

#define SCARD_ATTR_VENDOR_NAME 65792

#define SCARD_CLASS_COMMUNICATIONS 2

#define SCARD_CLASS_ICC_STATE 9

#define SCARD_CLASS_IFD_PROTOCOL 8

#define SCARD_CLASS_MECHANICAL 6

#define SCARD_CLASS_PERF 32766

#define SCARD_CLASS_POWER_MGMT 4

#define SCARD_CLASS_PROTOCOL 3

#define SCARD_CLASS_SECURITY 5

#define SCARD_CLASS_SYSTEM 32767

#define SCARD_CLASS_VENDOR_DEFINED 7

#define SCARD_CLASS_VENDOR_INFO 1

#define SCARD_COLD_RESET 1

#define SCARD_NEGOTIABLE 5

#define SCARD_PERF_BYTES_TRANSMITTED 2147352578

#define SCARD_PERF_NUM_TRANSMISSIONS 2147352577

#define SCARD_PERF_TRANSMISSION_TIME 2147352579

#define SCARD_POWER_DOWN 0

#define SCARD_POWERED 4

#define SCARD_PRESENT 2

#define SCARD_PROTOCOL_DEFAULT 2147483648

#define SCARD_PROTOCOL_OPTIMAL 0

#define SCARD_PROTOCOL_RAW 65536

#define SCARD_PROTOCOL_T0 1

#define SCARD_PROTOCOL_T1 2

#define SCARD_PROTOCOL_Tx 3

#define SCARD_PROTOCOL_UNDEFINED 0

#define SCARD_READER_CONFISCATES 4

#define SCARD_READER_EJECTS 2

#define SCARD_READER_SWALLOWS 1

#define SCARD_READER_TYPE_IDE 16

#define SCARD_READER_TYPE_KEYBOARD 4

#define SCARD_READER_TYPE_PARALELL 2

#define SCARD_READER_TYPE_PCMCIA 64

#define SCARD_READER_TYPE_SCSI 8

#define SCARD_READER_TYPE_SERIAL 1

#define SCARD_READER_TYPE_USB 32

#define SCARD_READER_TYPE_VENDOR 240

#define SCARD_SPECIFIC 6

#define SCARD_SWALLOWED 3

#define SCARD_T0_CMD_LENGTH 5

#define SCARD_T0_HEADER_LENGTH 7

#define SCARD_T1_EPILOGUE_LENGTH 2

#define SCARD_T1_MAX_IFS 254

#define SCARD_T1_PROLOGUE_LENGTH 3

#define SCARD_UNKNOWN 0

#define SCARD_WARM_RESET 2

typedef struct _SCARD_IO_REQUEST _SCARD_IO_REQUEST, *P_SCARD_IO_REQUEST;

struct _SCARD_IO_REQUEST {
    DWORD dwProtocol;
    DWORD cbPciLength;
};

typedef union _union_1907 _union_1907, *P_union_1907;

typedef struct SCARD_T0_COMMAND SCARD_T0_COMMAND, *PSCARD_T0_COMMAND;

struct SCARD_T0_COMMAND {
    BYTE bCla;
    BYTE bIns;
    BYTE bP1;
    BYTE bP2;
    BYTE bP3;
};

union _union_1907 {
    struct SCARD_T0_COMMAND CmdBytes;
    BYTE rgbHeader[5];
};

typedef struct _SCARD_IO_REQUEST SCARD_IO_REQUEST;

typedef SCARD_IO_REQUEST * LPCSCARD_IO_REQUEST;

typedef struct _SCARD_IO_REQUEST * LPSCARD_IO_REQUEST;

typedef struct SCARD_T0_COMMAND * LPSCARD_T0_COMMAND;

typedef struct SCARD_T0_REQUEST SCARD_T0_REQUEST, *PSCARD_T0_REQUEST;

typedef struct SCARD_T0_REQUEST * LPSCARD_T0_REQUEST;

struct SCARD_T0_REQUEST {
    SCARD_IO_REQUEST ioRequest;
    BYTE bSw1;
    BYTE bSw2;
    union _union_1907 u;
};

typedef struct SCARD_T1_REQUEST SCARD_T1_REQUEST, *PSCARD_T1_REQUEST;

typedef struct SCARD_T1_REQUEST * LPSCARD_T1_REQUEST;

struct SCARD_T1_REQUEST {
    SCARD_IO_REQUEST ioRequest;
};

typedef struct _SCARD_IO_REQUEST * PSCARD_IO_REQUEST;

typedef WORD UWORD;

#define AF_APPLETALK 16

#define AF_BAN 21

#define AF_CCITT 10

#define AF_CHAOS 5

#define AF_DATAKIT 9

#define AF_DECnet 12

#define AF_DLI 13

#define AF_ECMA 8

#define AF_FIREFOX 19

#define AF_HYLINK 15

#define AF_IMPLINK 3

#define AF_INET 2

#define AF_IPX 6

#define AF_ISO 7

#define AF_LAT 14

#define AF_MAX 22

#define AF_NETBIOS 17

#define AF_NS 6

#define AF_OSI 7

#define AF_PUP 4

#define AF_SNA 11

#define AF_UNIX 1

#define AF_UNKNOWN1 20

#define AF_UNSPEC 0

#define AF_VOICEVIEW 18

#define FD_ACCEPT 8

#define FD_CLOSE 32

#define FD_CONNECT 16

#define FD_OOB 4

#define FD_READ 1

#define FD_SETSIZE 64

#define FD_WRITE 2

#define HOST_NOT_FOUND 11001

#define IMPLINK_HIGHEXPER 158

#define IMPLINK_IP 155

#define IMPLINK_LOWEXPER 156

#define IN_CLASSA_HOST 16777215

#define IN_CLASSA_MAX 128

#define IN_CLASSA_NET 4278190080

#define IN_CLASSA_NSHIFT 24

#define IN_CLASSB_HOST 65535

#define IN_CLASSB_MAX 65536

#define IN_CLASSB_NET 4294901760

#define IN_CLASSB_NSHIFT 16

#define IN_CLASSC_HOST 255

#define IN_CLASSC_NET 4294967040

#define IN_CLASSC_NSHIFT 8

#define INADDR_ANY 0

#define INADDR_BROADCAST 4294967295

#define INADDR_LOOPBACK 2130706433

#define INADDR_NONE 4294967295

#define INVALID_SOCKET -1

#define IOC_IN 2147483648

#define IOC_INOUT 3221225472

#define IOC_OUT 1073741824

#define IOC_VOID 536870912

#define IOCPARM_MASK 127

#define IP_ADD_MEMBERSHIP 5

#define IP_DEFAULT_MULTICAST_LOOP 1

#define IP_DEFAULT_MULTICAST_TTL 1

#define IP_DONTFRAGMENT 9

#define IP_DROP_MEMBERSHIP 6

#define IP_MAX_MEMBERSHIPS 20

#define IP_MULTICAST_IF 2

#define IP_MULTICAST_LOOP 4

#define IP_MULTICAST_TTL 3

#define IP_OPTIONS 1

#define IP_TOS 8

#define IP_TTL 7

#define IPPORT_BIFFUDP 512

#define IPPORT_CMDSERVER 514

#define IPPORT_DAYTIME 13

#define IPPORT_DISCARD 9

#define IPPORT_ECHO 7

#define IPPORT_EFSSERVER 520

#define IPPORT_EXECSERVER 512

#define IPPORT_FINGER 79

#define IPPORT_FTP 21

#define IPPORT_LOGINSERVER 513

#define IPPORT_MTP 57

#define IPPORT_NAMESERVER 42

#define IPPORT_NETSTAT 15

#define IPPORT_RESERVED 1024

#define IPPORT_RJE 77

#define IPPORT_ROUTESERVER 520

#define IPPORT_SMTP 25

#define IPPORT_SUPDUP 95

#define IPPORT_SYSTAT 11

#define IPPORT_TELNET 23

#define IPPORT_TFTP 69

#define IPPORT_TIMESERVER 37

#define IPPORT_TTYLINK 87

#define IPPORT_WHOIS 43

#define IPPORT_WHOSERVER 513

#define IPPROTO_GGP 3

#define IPPROTO_ICMP 1

#define IPPROTO_IDP 22

#define IPPROTO_IGMP 2

#define IPPROTO_IP 0

#define IPPROTO_MAX 256

#define IPPROTO_ND 77

#define IPPROTO_PUP 12

#define IPPROTO_RAW 255

#define IPPROTO_TCP 6

#define IPPROTO_UDP 17

#define MAXGETHOSTSTRUCT 1024

#define MSG_DONTROUTE 4

#define MSG_MAXIOVLEN 16

#define MSG_OOB 1

#define MSG_PARTIAL 32768

#define MSG_PEEK 2

#define NO_ADDRESS 11004

#define NO_DATA 11004

#define NO_RECOVERY 11003

#define PF_APPLETALK 16

#define PF_BAN 21

#define PF_CCITT 10

#define PF_CHAOS 5

#define PF_DATAKIT 9

#define PF_DECnet 12

#define PF_DLI 13

#define PF_ECMA 8

#define PF_FIREFOX 19

#define PF_HYLINK 15

#define PF_IMPLINK 3

#define PF_INET 2

#define PF_IPX 6

#define PF_ISO 7

#define PF_LAT 14

#define PF_MAX 22

#define PF_NS 6

#define PF_OSI 7

#define PF_PUP 4

#define PF_SNA 11

#define PF_UNIX 1

#define PF_UNKNOWN1 20

#define PF_UNSPEC 0

#define PF_VOICEVIEW 18

#define SO_ACCEPTCONN 2

#define SO_BROADCAST 32

#define SO_CONNDATA 28672

#define SO_CONNDATALEN 28676

#define SO_CONNECT_TIME 28684

#define SO_CONNOPT 28673

#define SO_CONNOPTLEN 28677

#define SO_DEBUG 1

#define SO_DISCDATA 28674

#define SO_DISCDATALEN 28678

#define SO_DISCOPT 28675

#define SO_DISCOPTLEN 28679

#define SO_DONTLINGER -129

#define SO_DONTROUTE 16

#define SO_ERROR 4103

#define SO_KEEPALIVE 8

#define SO_LINGER 128

#define SO_MAXDG 28681

#define SO_MAXPATHDG 28682

#define SO_OOBINLINE 256

#define SO_OPENTYPE 28680

#define SO_RCVBUF 4098

#define SO_RCVLOWAT 4100

#define SO_RCVTIMEO 4102

#define SO_REUSEADDR 4

#define SO_SNDBUF 4097

#define SO_SNDLOWAT 4099

#define SO_SNDTIMEO 4101

#define SO_SYNCHRONOUS_ALERT 16

#define SO_SYNCHRONOUS_NONALERT 32

#define SO_TYPE 4104

#define SO_UPDATE_ACCEPT_CONTEXT 28683

#define SO_USELOOPBACK 64

#define SOCK_DGRAM 2

#define SOCK_RAW 3

#define SOCK_RDM 4

#define SOCK_SEQPACKET 5

#define SOCK_STREAM 1

#define SOCKET_ERROR -1

#define SOL_SOCKET 65535

#define SOMAXCONN 5

#define TCP_BSDURGENT 28672

#define TCP_NODELAY 1

#define TF_DISCONNECT 1

#define TF_REUSE_SOCKET 2

#define TF_WRITE_BEHIND 4

#define TRY_AGAIN 11002

#define WSADESCRIPTION_LEN 256

#define WSANO_ADDRESS 11004

#define WSASYS_STATUS_LEN 128

typedef struct _TRANSMIT_FILE_BUFFERS _TRANSMIT_FILE_BUFFERS, *P_TRANSMIT_FILE_BUFFERS;

struct _TRANSMIT_FILE_BUFFERS {
    PVOID Head;
    DWORD HeadLength;
    PVOID Tail;
    DWORD TailLength;
};

typedef struct fd_set fd_set, *Pfd_set;

typedef struct fd_set FD_SET;

typedef uint u_int;

typedef UINT_PTR SOCKET;

struct fd_set {
    u_int fd_count;
    SOCKET fd_array[64];
};

typedef struct hostent hostent, *Phostent;

struct hostent {
    char * h_name;
    char * * h_aliases;
    short h_addrtype;
    short h_length;
    char * * h_addr_list;
};

typedef struct hostent HOSTENT;

typedef struct ip_mreq ip_mreq, *Pip_mreq;

struct ip_mreq {
    IN_ADDR imr_multiaddr;
    IN_ADDR imr_interface;
};

typedef struct linger linger, *Plinger;

typedef ushort u_short;

struct linger {
    u_short l_onoff;
    u_short l_linger;
};

typedef struct linger LINGER;

typedef struct fd_set * LPFD_SET;

typedef struct hostent * LPHOSTENT;

typedef struct linger * LPLINGER;

typedef struct protoent protoent, *Pprotoent;

typedef struct protoent * LPPROTOENT;

struct protoent {
    char * p_name;
    char * * p_aliases;
    short p_proto;
};

typedef struct servent servent, *Pservent;

typedef struct servent * LPSERVENT;

struct servent {
    char * s_name;
    char * * s_aliases;
    short s_port;
    char * s_proto;
};

typedef struct sockaddr sockaddr, *Psockaddr;

typedef struct sockaddr * LPSOCKADDR;

struct sockaddr {
    ADDRESS_FAMILY sa_family;
    CHAR sa_data[14];
};

typedef struct sockaddr_in * LPSOCKADDR_IN;

typedef struct timeval timeval, *Ptimeval;

typedef struct timeval * LPTIMEVAL;

struct timeval {
    long tv_sec;
    long tv_usec;
};

typedef struct _TRANSMIT_FILE_BUFFERS * LPTRANSMIT_FILE_BUFFERS;

typedef struct WSAData WSAData, *PWSAData;

typedef struct WSAData WSADATA;

typedef WSADATA * LPWSADATA;

struct WSAData {
    WORD wVersion;
    WORD wHighVersion;
    char szDescription[257];
    char szSystemStatus[129];
    ushort iMaxSockets;
    ushort iMaxUdpDg;
    char * lpVendorInfo;
};

typedef struct netent netent, *Pnetent;

typedef ulong u_long;

struct netent {
    char * n_name;
    char * * n_aliases;
    short n_addrtype;
    u_long n_net;
};

typedef struct fd_set * PFD_SET;

typedef struct hostent * PHOSTENT;

typedef struct linger * PLINGER;

typedef struct protoent * PPROTOENT;

typedef struct protoent PROTOENT;

typedef struct servent * PSERVENT;

typedef struct sockaddr * PSOCKADDR;

typedef struct sockaddr_in * PSOCKADDR_IN;

typedef struct timeval * PTIMEVAL;

typedef struct _TRANSMIT_FILE_BUFFERS * PTRANSMIT_FILE_BUFFERS;

typedef struct servent SERVENT;

typedef struct sockaddr SOCKADDR;

typedef struct sockproto sockproto, *Psockproto;

struct sockproto {
    u_short sp_family;
    u_short sp_protocol;
};

typedef struct timeval TIMEVAL;

typedef struct _TRANSMIT_FILE_BUFFERS TRANSMIT_FILE_BUFFERS;

#define APD_COPY_ALL_FILES 4

#define APD_COPY_NEW_FILES 8

#define APD_STRICT_DOWNGRADE 2

#define APD_STRICT_UPGRADE 1

#define DEF_PRIORITY 1

#define DI_CHANNEL 1

#define DI_MEMORYMAP_WRITE 1

#define DI_READ_SPOOL_JOB 3

#define DPD_DELETE_ALL_FILES 4

#define DPD_DELETE_SPECIFIC_VERSION 2

#define DPD_DELETE_UNUSED_FILES 1

#define DRIVER_KERNELMODE 1

#define DRIVER_USERMODE 2

#define DSPRINT_PENDING 2147483648

#define DSPRINT_PUBLISH 1

#define DSPRINT_REPUBLISH 8

#define DSPRINT_UNPUBLISH 4

#define DSPRINT_UPDATE 2

#define FORM_BUILTIN 1

#define FORM_PRINTER 2

#define FORM_USER 0

#define JOB_ACCESS_ADMINISTER 16

#define JOB_CONTROL_CANCEL 3

#define JOB_CONTROL_DELETE 5

#define JOB_CONTROL_LAST_PAGE_EJECTED 7

#define JOB_CONTROL_PAUSE 1

#define JOB_CONTROL_RESTART 4

#define JOB_CONTROL_RESUME 2

#define JOB_CONTROL_SENT_TO_PRINTER 6

#define JOB_NOTIFY_FIELD_BYTES_PRINTED 23

#define JOB_NOTIFY_FIELD_DATATYPE 5

#define JOB_NOTIFY_FIELD_DEVMODE 9

#define JOB_NOTIFY_FIELD_DOCUMENT 13

#define JOB_NOTIFY_FIELD_DRIVER_NAME 8

#define JOB_NOTIFY_FIELD_MACHINE_NAME 1

#define JOB_NOTIFY_FIELD_NOTIFY_NAME 4

#define JOB_NOTIFY_FIELD_PAGES_PRINTED 21

#define JOB_NOTIFY_FIELD_PARAMETERS 7

#define JOB_NOTIFY_FIELD_PORT_NAME 2

#define JOB_NOTIFY_FIELD_POSITION 15

#define JOB_NOTIFY_FIELD_PRINT_PROCESSOR 6

#define JOB_NOTIFY_FIELD_PRINTER_NAME 0

#define JOB_NOTIFY_FIELD_PRIORITY 14

#define JOB_NOTIFY_FIELD_REMOTE_JOB_ID 24

#define JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR 12

#define JOB_NOTIFY_FIELD_START_TIME 17

#define JOB_NOTIFY_FIELD_STATUS 10

#define JOB_NOTIFY_FIELD_STATUS_STRING 11

#define JOB_NOTIFY_FIELD_SUBMITTED 16

#define JOB_NOTIFY_FIELD_TIME 19

#define JOB_NOTIFY_FIELD_TOTAL_BYTES 22

#define JOB_NOTIFY_FIELD_TOTAL_PAGES 20

#define JOB_NOTIFY_FIELD_UNTIL_TIME 18

#define JOB_NOTIFY_FIELD_USER_NAME 3

#define JOB_NOTIFY_TYPE 1

#define JOB_POSITION_UNSPECIFIED 0

#define JOB_STATUS_BLOCKED_DEVQ 512

#define JOB_STATUS_DELETED 256

#define JOB_STATUS_DELETING 4

#define JOB_STATUS_ERROR 2

#define JOB_STATUS_OFFLINE 32

#define JOB_STATUS_PAPEROUT 64

#define JOB_STATUS_PAUSED 1

#define JOB_STATUS_PRINTED 128

#define JOB_STATUS_PRINTING 16

#define JOB_STATUS_RESTART 2048

#define JOB_STATUS_SPOOLING 8

#define JOB_STATUS_USER_INTERVENTION 1024

#define MAX_PRIORITY 99

#define MIN_PRIORITY 1

#define NO_PRIORITY 0

#define PORT_STATUS_DOOR_OPEN 7

#define PORT_STATUS_NO_TONER 6

#define PORT_STATUS_OFFLINE 1

#define PORT_STATUS_OUT_OF_MEMORY 9

#define PORT_STATUS_OUTPUT_BIN_FULL 4

#define PORT_STATUS_PAPER_JAM 2

#define PORT_STATUS_PAPER_OUT 3

#define PORT_STATUS_PAPER_PROBLEM 5

#define PORT_STATUS_POWER_SAVE 12

#define PORT_STATUS_TONER_LOW 10

#define PORT_STATUS_TYPE_ERROR 1

#define PORT_STATUS_TYPE_INFO 3

#define PORT_STATUS_TYPE_WARNING 2

#define PORT_STATUS_USER_INTERVENTION 8

#define PORT_STATUS_WARMING_UP 11

#define PORT_TYPE_NET_ATTACHED 8

#define PORT_TYPE_READ 2

#define PORT_TYPE_REDIRECTED 4

#define PORT_TYPE_WRITE 1

#define PRINTER_ACCESS_ADMINISTER 4

#define PRINTER_ACCESS_USE 8

#define PRINTER_ATTRIBUTE_DEFAULT 4

#define PRINTER_ATTRIBUTE_DIRECT 2

#define PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST 512

#define PRINTER_ATTRIBUTE_ENABLE_BIDI 2048

#define PRINTER_ATTRIBUTE_ENABLE_DEVQ 128

#define PRINTER_ATTRIBUTE_HIDDEN 32

#define PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS 256

#define PRINTER_ATTRIBUTE_LOCAL 64

#define PRINTER_ATTRIBUTE_NETWORK 16

#define PRINTER_ATTRIBUTE_PUBLISHED 8192

#define PRINTER_ATTRIBUTE_QUEUED 1

#define PRINTER_ATTRIBUTE_RAW_ONLY 4096

#define PRINTER_ATTRIBUTE_SHARED 8

#define PRINTER_ATTRIBUTE_WORK_OFFLINE 1024

#define PRINTER_CHANGE_ADD_FORM 65536

#define PRINTER_CHANGE_ADD_JOB 256

#define PRINTER_CHANGE_ADD_PORT 1048576

#define PRINTER_CHANGE_ADD_PRINT_PROCESSOR 16777216

#define PRINTER_CHANGE_ADD_PRINTER 1

#define PRINTER_CHANGE_ADD_PRINTER_DRIVER 268435456

#define PRINTER_CHANGE_ALL 2004353023

#define PRINTER_CHANGE_CONFIGURE_PORT 2097152

#define PRINTER_CHANGE_DELETE_FORM 262144

#define PRINTER_CHANGE_DELETE_JOB 1024

#define PRINTER_CHANGE_DELETE_PORT 4194304

#define PRINTER_CHANGE_DELETE_PRINT_PROCESSOR 67108864

#define PRINTER_CHANGE_DELETE_PRINTER 4

#define PRINTER_CHANGE_DELETE_PRINTER_DRIVER 1073741824

#define PRINTER_CHANGE_FAILED_CONNECTION_PRINTER 8

#define PRINTER_CHANGE_FORM 458752

#define PRINTER_CHANGE_JOB 65280

#define PRINTER_CHANGE_PORT 7340032

#define PRINTER_CHANGE_PRINT_PROCESSOR 117440512

#define PRINTER_CHANGE_PRINTER 255

#define PRINTER_CHANGE_PRINTER_DRIVER 1879048192

#define PRINTER_CHANGE_SET_FORM 131072

#define PRINTER_CHANGE_SET_JOB 512

#define PRINTER_CHANGE_SET_PRINTER 2

#define PRINTER_CHANGE_SET_PRINTER_DRIVER 536870912

#define PRINTER_CHANGE_TIMEOUT 2147483648

#define PRINTER_CHANGE_WRITE_JOB 2048

#define PRINTER_CONTROL_PAUSE 1

#define PRINTER_CONTROL_PURGE 3

#define PRINTER_CONTROL_RESUME 2

#define PRINTER_CONTROL_SET_STATUS 4

#define PRINTER_DRIVER_PACKAGE_AWARE 1

#define PRINTER_DRIVER_SANDBOX_ENABLED 4

#define PRINTER_ENUM_CONNECTIONS 4

#define PRINTER_ENUM_CONTAINER 32768

#define PRINTER_ENUM_DEFAULT 1

#define PRINTER_ENUM_EXPAND 16384

#define PRINTER_ENUM_FAVORITE 4

#define PRINTER_ENUM_HIDE 16777216

#define PRINTER_ENUM_ICON1 65536

#define PRINTER_ENUM_ICON2 131072

#define PRINTER_ENUM_ICON3 262144

#define PRINTER_ENUM_ICON4 524288

#define PRINTER_ENUM_ICON5 1048576

#define PRINTER_ENUM_ICON6 2097152

#define PRINTER_ENUM_ICON7 4194304

#define PRINTER_ENUM_ICON8 8388608

#define PRINTER_ENUM_ICONMASK 16711680

#define PRINTER_ENUM_LOCAL 2

#define PRINTER_ENUM_NAME 8

#define PRINTER_ENUM_NETWORK 64

#define PRINTER_ENUM_REMOTE 16

#define PRINTER_ENUM_SHARED 32

#define PRINTER_ERROR_INFORMATION 2147483648

#define PRINTER_ERROR_JAM 2

#define PRINTER_ERROR_OUTOFPAPER 1

#define PRINTER_ERROR_OUTOFTONER 4

#define PRINTER_ERROR_SEVERE 536870912

#define PRINTER_ERROR_WARNING 1073741824

#define PRINTER_NOTIFY_FIELD_ATTRIBUTES 13

#define PRINTER_NOTIFY_FIELD_AVERAGE_PPM 21

#define PRINTER_NOTIFY_FIELD_BYTES_PRINTED 25

#define PRINTER_NOTIFY_FIELD_CJOBS 20

#define PRINTER_NOTIFY_FIELD_COMMENT 5

#define PRINTER_NOTIFY_FIELD_DATATYPE 11

#define PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY 15

#define PRINTER_NOTIFY_FIELD_DEVMODE 7

#define PRINTER_NOTIFY_FIELD_DRIVER_NAME 4

#define PRINTER_NOTIFY_FIELD_LOCATION 6

#define PRINTER_NOTIFY_FIELD_OBJECT_GUID 26

#define PRINTER_NOTIFY_FIELD_PAGES_PRINTED 23

#define PRINTER_NOTIFY_FIELD_PARAMETERS 10

#define PRINTER_NOTIFY_FIELD_PORT_NAME 3

#define PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR 9

#define PRINTER_NOTIFY_FIELD_PRINTER_NAME 1

#define PRINTER_NOTIFY_FIELD_PRIORITY 14

#define PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR 12

#define PRINTER_NOTIFY_FIELD_SEPFILE 8

#define PRINTER_NOTIFY_FIELD_SERVER_NAME 0

#define PRINTER_NOTIFY_FIELD_SHARE_NAME 2

#define PRINTER_NOTIFY_FIELD_START_TIME 16

#define PRINTER_NOTIFY_FIELD_STATUS 18

#define PRINTER_NOTIFY_FIELD_STATUS_STRING 19

#define PRINTER_NOTIFY_FIELD_TOTAL_BYTES 24

#define PRINTER_NOTIFY_FIELD_TOTAL_PAGES 22

#define PRINTER_NOTIFY_FIELD_UNTIL_TIME 17

#define PRINTER_NOTIFY_INFO_DISCARDED 1

#define PRINTER_NOTIFY_OPTIONS_REFRESH 1

#define PRINTER_NOTIFY_TYPE 0

#define PRINTER_STATUS_BUSY 512

#define PRINTER_STATUS_DOOR_OPEN 4194304

#define PRINTER_STATUS_DRIVER_UPDATE_NEEDED 67108864

#define PRINTER_STATUS_ERROR 2

#define PRINTER_STATUS_INITIALIZING 32768

#define PRINTER_STATUS_IO_ACTIVE 256

#define PRINTER_STATUS_MANUAL_FEED 32

#define PRINTER_STATUS_NO_TONER 262144

#define PRINTER_STATUS_NOT_AVAILABLE 4096

#define PRINTER_STATUS_OFFLINE 128

#define PRINTER_STATUS_OUT_OF_MEMORY 2097152

#define PRINTER_STATUS_OUTPUT_BIN_FULL 2048

#define PRINTER_STATUS_PAGE_PUNT 524288

#define PRINTER_STATUS_PAPER_JAM 8

#define PRINTER_STATUS_PAPER_OUT 16

#define PRINTER_STATUS_PAPER_PROBLEM 64

#define PRINTER_STATUS_PAUSED 1

#define PRINTER_STATUS_PENDING_DELETION 4

#define PRINTER_STATUS_POWER_SAVE 16777216

#define PRINTER_STATUS_PRINTING 1024

#define PRINTER_STATUS_PROCESSING 16384

#define PRINTER_STATUS_SERVER_OFFLINE 33554432

#define PRINTER_STATUS_SERVER_UNKNOWN 8388608

#define PRINTER_STATUS_TONER_LOW 131072

#define PRINTER_STATUS_USER_INTERVENTION 1048576

#define PRINTER_STATUS_WAITING 8192

#define PRINTER_STATUS_WARMING_UP 65536

#define SERVER_ACCESS_ADMINISTER 1

#define SERVER_ACCESS_ENUMERATE 2

#define SERVER_NOTIFY_TYPE 2

#define SPOOL_FILE_PERSISTENT 1

#define SPOOL_FILE_TEMPORARY 2

typedef struct _ADDJOB_INFO_1A _ADDJOB_INFO_1A, *P_ADDJOB_INFO_1A;

struct _ADDJOB_INFO_1A {
    LPSTR Path;
    DWORD JobId;
};

typedef struct _ADDJOB_INFO_1W _ADDJOB_INFO_1W, *P_ADDJOB_INFO_1W;

struct _ADDJOB_INFO_1W {
    LPWSTR Path;
    DWORD JobId;
};

typedef struct _DATATYPES_INFO_1A _DATATYPES_INFO_1A, *P_DATATYPES_INFO_1A;

struct _DATATYPES_INFO_1A {
    LPSTR pName;
};

typedef struct _DATATYPES_INFO_1W _DATATYPES_INFO_1W, *P_DATATYPES_INFO_1W;

struct _DATATYPES_INFO_1W {
    LPWSTR pName;
};

typedef struct _DOC_INFO_1A _DOC_INFO_1A, *P_DOC_INFO_1A;

struct _DOC_INFO_1A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
};

typedef struct _DOC_INFO_1W _DOC_INFO_1W, *P_DOC_INFO_1W;

struct _DOC_INFO_1W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
};

typedef struct _DOC_INFO_2A _DOC_INFO_2A, *P_DOC_INFO_2A;

struct _DOC_INFO_2A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
    DWORD dwMode;
    DWORD JobId;
};

typedef struct _DOC_INFO_2W _DOC_INFO_2W, *P_DOC_INFO_2W;

struct _DOC_INFO_2W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
    DWORD dwMode;
    DWORD JobId;
};

typedef struct _DOC_INFO_3A _DOC_INFO_3A, *P_DOC_INFO_3A;

struct _DOC_INFO_3A {
    LPSTR pDocName;
    LPSTR pOutputFile;
    LPSTR pDatatype;
    DWORD dwFlags;
};

typedef struct _DOC_INFO_3W _DOC_INFO_3W, *P_DOC_INFO_3W;

struct _DOC_INFO_3W {
    LPWSTR pDocName;
    LPWSTR pOutputFile;
    LPWSTR pDatatype;
    DWORD dwFlags;
};

typedef struct _DRIVER_INFO_1A _DRIVER_INFO_1A, *P_DRIVER_INFO_1A;

struct _DRIVER_INFO_1A {
    LPSTR pName;
};

typedef struct _DRIVER_INFO_1W _DRIVER_INFO_1W, *P_DRIVER_INFO_1W;

struct _DRIVER_INFO_1W {
    LPWSTR pName;
};

typedef struct _DRIVER_INFO_2A _DRIVER_INFO_2A, *P_DRIVER_INFO_2A;

struct _DRIVER_INFO_2A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
};

typedef struct _DRIVER_INFO_2W _DRIVER_INFO_2W, *P_DRIVER_INFO_2W;

struct _DRIVER_INFO_2W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
};

typedef struct _DRIVER_INFO_3A _DRIVER_INFO_3A, *P_DRIVER_INFO_3A;

struct _DRIVER_INFO_3A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
};

typedef struct _DRIVER_INFO_3W _DRIVER_INFO_3W, *P_DRIVER_INFO_3W;

struct _DRIVER_INFO_3W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
};

typedef struct _DRIVER_INFO_4A _DRIVER_INFO_4A, *P_DRIVER_INFO_4A;

struct _DRIVER_INFO_4A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
};

typedef struct _DRIVER_INFO_4W _DRIVER_INFO_4W, *P_DRIVER_INFO_4W;

struct _DRIVER_INFO_4W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
};

typedef struct _DRIVER_INFO_5A _DRIVER_INFO_5A, *P_DRIVER_INFO_5A;

struct _DRIVER_INFO_5A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    DWORD dwDriverAttributes;
    DWORD dwConfigVersion;
    DWORD dwDriverVersion;
};

typedef struct _DRIVER_INFO_5W _DRIVER_INFO_5W, *P_DRIVER_INFO_5W;

struct _DRIVER_INFO_5W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    DWORD dwDriverAttributes;
    DWORD dwConfigVersion;
    DWORD dwDriverVersion;
};

typedef struct _DRIVER_INFO_6A _DRIVER_INFO_6A, *P_DRIVER_INFO_6A;

struct _DRIVER_INFO_6A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPSTR pszMfgName;
    LPSTR pszOEMUrl;
    LPSTR pszHardwareID;
    LPSTR pszProvider;
};

typedef struct _DRIVER_INFO_6W _DRIVER_INFO_6W, *P_DRIVER_INFO_6W;

struct _DRIVER_INFO_6W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPWSTR pszMfgName;
    LPWSTR pszOEMUrl;
    LPWSTR pszHardwareID;
    LPWSTR pszProvider;
};

typedef struct _DRIVER_INFO_8A _DRIVER_INFO_8A, *P_DRIVER_INFO_8A;

struct _DRIVER_INFO_8A {
    DWORD cVersion;
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDriverPath;
    LPSTR pDataFile;
    LPSTR pConfigFile;
    LPSTR pHelpFile;
    LPSTR pDependentFiles;
    LPSTR pMonitorName;
    LPSTR pDefaultDataType;
    LPSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPSTR pszMfgName;
    LPSTR pszOEMUrl;
    LPSTR pszHardwareID;
    LPSTR pszProvider;
    LPSTR pszPrintProcessor;
    LPSTR pszVendorSetup;
    LPSTR pszzColorProfiles;
    LPSTR pszInfPath;
    DWORD dwPrinterDriverAttributes;
    LPSTR pszzCoreDriverDependencies;
    FILETIME ftMinInboxDriverVerDate;
    DWORDLONG dwlMinInboxDriverVerVersion;
};

typedef struct _DRIVER_INFO_8W _DRIVER_INFO_8W, *P_DRIVER_INFO_8W;

struct _DRIVER_INFO_8W {
    DWORD cVersion;
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDriverPath;
    LPWSTR pDataFile;
    LPWSTR pConfigFile;
    LPWSTR pHelpFile;
    LPWSTR pDependentFiles;
    LPWSTR pMonitorName;
    LPWSTR pDefaultDataType;
    LPWSTR pszzPreviousNames;
    FILETIME ftDriverDate;
    DWORDLONG dwlDriverVersion;
    LPWSTR pszMfgName;
    LPWSTR pszOEMUrl;
    LPWSTR pszHardwareID;
    LPWSTR pszProvider;
    LPWSTR pszPrintProcessor;
    LPWSTR pszVendorSetup;
    LPWSTR pszzColorProfiles;
    LPWSTR pszInfPath;
    DWORD dwPrinterDriverAttributes;
    LPWSTR pszzCoreDriverDependencies;
    FILETIME ftMinInboxDriverVerDate;
    DWORDLONG dwlMinInboxDriverVerVersion;
};

typedef struct _FORM_INFO_1A _FORM_INFO_1A, *P_FORM_INFO_1A;

struct _FORM_INFO_1A {
    DWORD Flags;
    LPSTR pName;
    SIZEL Size;
    RECTL ImageableArea;
};

typedef struct _FORM_INFO_1W _FORM_INFO_1W, *P_FORM_INFO_1W;

struct _FORM_INFO_1W {
    DWORD Flags;
    LPWSTR pName;
    SIZEL Size;
    RECTL ImageableArea;
};

typedef struct _JOB_INFO_1A _JOB_INFO_1A, *P_JOB_INFO_1A;

struct _JOB_INFO_1A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pDatatype;
    LPSTR pStatus;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD TotalPages;
    DWORD PagesPrinted;
    SYSTEMTIME Submitted;
};

typedef struct _JOB_INFO_1W _JOB_INFO_1W, *P_JOB_INFO_1W;

struct _JOB_INFO_1W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pDatatype;
    LPWSTR pStatus;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD TotalPages;
    DWORD PagesPrinted;
    SYSTEMTIME Submitted;
};

typedef struct _JOB_INFO_2A _JOB_INFO_2A, *P_JOB_INFO_2A;

struct _JOB_INFO_2A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pNotifyName;
    LPSTR pDatatype;
    LPSTR pPrintProcessor;
    LPSTR pParameters;
    LPSTR pDriverName;
    LPDEVMODEA pDevMode;
    LPSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
};

typedef struct _JOB_INFO_2W _JOB_INFO_2W, *P_JOB_INFO_2W;

struct _JOB_INFO_2W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pNotifyName;
    LPWSTR pDatatype;
    LPWSTR pPrintProcessor;
    LPWSTR pParameters;
    LPWSTR pDriverName;
    LPDEVMODEW pDevMode;
    LPWSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
};

typedef struct _JOB_INFO_3 _JOB_INFO_3, *P_JOB_INFO_3;

struct _JOB_INFO_3 {
    DWORD JobId;
    DWORD NextJobId;
    DWORD Reserved;
};

typedef struct _JOB_INFO_4A _JOB_INFO_4A, *P_JOB_INFO_4A;

struct _JOB_INFO_4A {
    DWORD JobId;
    LPSTR pPrinterName;
    LPSTR pMachineName;
    LPSTR pUserName;
    LPSTR pDocument;
    LPSTR pNotifyName;
    LPSTR pDatatype;
    LPSTR pPrintProcessor;
    LPSTR pParameters;
    LPSTR pDriverName;
    LPDEVMODEA pDevMode;
    LPSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
    LONG SizeHigh;
};

typedef struct _JOB_INFO_4W _JOB_INFO_4W, *P_JOB_INFO_4W;

struct _JOB_INFO_4W {
    DWORD JobId;
    LPWSTR pPrinterName;
    LPWSTR pMachineName;
    LPWSTR pUserName;
    LPWSTR pDocument;
    LPWSTR pNotifyName;
    LPWSTR pDatatype;
    LPWSTR pPrintProcessor;
    LPWSTR pParameters;
    LPWSTR pDriverName;
    LPDEVMODEW pDevMode;
    LPWSTR pStatus;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Status;
    DWORD Priority;
    DWORD Position;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD TotalPages;
    DWORD Size;
    SYSTEMTIME Submitted;
    DWORD Time;
    DWORD PagesPrinted;
    LONG SizeHigh;
};

typedef struct _MONITOR_INFO_1A _MONITOR_INFO_1A, *P_MONITOR_INFO_1A;

struct _MONITOR_INFO_1A {
    LPSTR pName;
};

typedef struct _MONITOR_INFO_1W _MONITOR_INFO_1W, *P_MONITOR_INFO_1W;

struct _MONITOR_INFO_1W {
    LPWSTR pName;
};

typedef struct _MONITOR_INFO_2A _MONITOR_INFO_2A, *P_MONITOR_INFO_2A;

struct _MONITOR_INFO_2A {
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDLLName;
};

typedef struct _MONITOR_INFO_2W _MONITOR_INFO_2W, *P_MONITOR_INFO_2W;

struct _MONITOR_INFO_2W {
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDLLName;
};

typedef struct _PORT_INFO_1A _PORT_INFO_1A, *P_PORT_INFO_1A;

struct _PORT_INFO_1A {
    LPSTR pName;
};

typedef struct _PORT_INFO_1W _PORT_INFO_1W, *P_PORT_INFO_1W;

struct _PORT_INFO_1W {
    LPWSTR pName;
};

typedef struct _PORT_INFO_2A _PORT_INFO_2A, *P_PORT_INFO_2A;

struct _PORT_INFO_2A {
    LPSTR pPortName;
    LPSTR pMonitorName;
    LPSTR pDescription;
    DWORD fPortType;
    DWORD Reserved;
};

typedef struct _PORT_INFO_2W _PORT_INFO_2W, *P_PORT_INFO_2W;

struct _PORT_INFO_2W {
    LPWSTR pPortName;
    LPWSTR pMonitorName;
    LPWSTR pDescription;
    DWORD fPortType;
    DWORD Reserved;
};

typedef struct _PORT_INFO_3A _PORT_INFO_3A, *P_PORT_INFO_3A;

struct _PORT_INFO_3A {
    DWORD dwStatus;
    LPSTR pszStatus;
    DWORD dwSeverity;
};

typedef struct _PORT_INFO_3W _PORT_INFO_3W, *P_PORT_INFO_3W;

struct _PORT_INFO_3W {
    DWORD dwStatus;
    LPWSTR pszStatus;
    DWORD dwSeverity;
};

typedef struct _PRINTER_DEFAULTSA _PRINTER_DEFAULTSA, *P_PRINTER_DEFAULTSA;

struct _PRINTER_DEFAULTSA {
    LPSTR pDatatype;
    LPDEVMODEA pDevMode;
    ACCESS_MASK DesiredAccess;
};

typedef struct _PRINTER_DEFAULTSW _PRINTER_DEFAULTSW, *P_PRINTER_DEFAULTSW;

struct _PRINTER_DEFAULTSW {
    LPWSTR pDatatype;
    LPDEVMODEW pDevMode;
    ACCESS_MASK DesiredAccess;
};

typedef struct _PRINTER_ENUM_VALUESA _PRINTER_ENUM_VALUESA, *P_PRINTER_ENUM_VALUESA;

struct _PRINTER_ENUM_VALUESA {
    LPSTR pValueName;
    DWORD cbValueName;
    DWORD dwType;
    LPBYTE pData;
    DWORD cbData;
};

typedef struct _PRINTER_ENUM_VALUESW _PRINTER_ENUM_VALUESW, *P_PRINTER_ENUM_VALUESW;

struct _PRINTER_ENUM_VALUESW {
    LPWSTR pValueName;
    DWORD cbValueName;
    DWORD dwType;
    LPBYTE pData;
    DWORD cbData;
};

typedef struct _PRINTER_INFO_1A _PRINTER_INFO_1A, *P_PRINTER_INFO_1A;

struct _PRINTER_INFO_1A {
    DWORD Flags;
    LPSTR pDescription;
    LPSTR pName;
    LPSTR pComment;
};

typedef struct _PRINTER_INFO_1W _PRINTER_INFO_1W, *P_PRINTER_INFO_1W;

struct _PRINTER_INFO_1W {
    DWORD Flags;
    LPWSTR pDescription;
    LPWSTR pName;
    LPWSTR pComment;
};

typedef struct _PRINTER_INFO_2A _PRINTER_INFO_2A, *P_PRINTER_INFO_2A;

struct _PRINTER_INFO_2A {
    LPSTR pServerName;
    LPSTR pPrinterName;
    LPSTR pShareName;
    LPSTR pPortName;
    LPSTR pDriverName;
    LPSTR pComment;
    LPSTR pLocation;
    LPDEVMODEA pDevMode;
    LPSTR pSepFile;
    LPSTR pPrintProcessor;
    LPSTR pDatatype;
    LPSTR pParameters;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Attributes;
    DWORD Priority;
    DWORD DefaultPriority;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD Status;
    DWORD cJobs;
    DWORD AveragePPM;
};

typedef struct _PRINTER_INFO_2W _PRINTER_INFO_2W, *P_PRINTER_INFO_2W;

struct _PRINTER_INFO_2W {
    LPWSTR pServerName;
    LPWSTR pPrinterName;
    LPWSTR pShareName;
    LPWSTR pPortName;
    LPWSTR pDriverName;
    LPWSTR pComment;
    LPWSTR pLocation;
    LPDEVMODEW pDevMode;
    LPWSTR pSepFile;
    LPWSTR pPrintProcessor;
    LPWSTR pDatatype;
    LPWSTR pParameters;
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
    DWORD Attributes;
    DWORD Priority;
    DWORD DefaultPriority;
    DWORD StartTime;
    DWORD UntilTime;
    DWORD Status;
    DWORD cJobs;
    DWORD AveragePPM;
};

typedef struct _PRINTER_INFO_3 _PRINTER_INFO_3, *P_PRINTER_INFO_3;

struct _PRINTER_INFO_3 {
    PSECURITY_DESCRIPTOR pSecurityDescriptor;
};

typedef struct _PRINTER_INFO_4A _PRINTER_INFO_4A, *P_PRINTER_INFO_4A;

struct _PRINTER_INFO_4A {
    LPSTR pPrinterName;
    LPSTR pServerName;
    DWORD Attributes;
};

typedef struct _PRINTER_INFO_4W _PRINTER_INFO_4W, *P_PRINTER_INFO_4W;

struct _PRINTER_INFO_4W {
    LPWSTR pPrinterName;
    LPWSTR pServerName;
    DWORD Attributes;
};

typedef struct _PRINTER_INFO_5A _PRINTER_INFO_5A, *P_PRINTER_INFO_5A;

struct _PRINTER_INFO_5A {
    LPSTR pPrinterName;
    LPSTR pPortName;
    DWORD Attributes;
    DWORD DeviceNotSelectedTimeout;
    DWORD TransmissionRetryTimeout;
};

typedef struct _PRINTER_INFO_5W _PRINTER_INFO_5W, *P_PRINTER_INFO_5W;

struct _PRINTER_INFO_5W {
    LPWSTR pPrinterName;
    LPWSTR pPortName;
    DWORD Attributes;
    DWORD DeviceNotSelectedTimeout;
    DWORD TransmissionRetryTimeout;
};

typedef struct _PRINTER_INFO_6 _PRINTER_INFO_6, *P_PRINTER_INFO_6;

struct _PRINTER_INFO_6 {
    DWORD dwStatus;
};

typedef struct _PRINTER_INFO_7A _PRINTER_INFO_7A, *P_PRINTER_INFO_7A;

struct _PRINTER_INFO_7A {
    LPSTR pszObjectGUID;
    DWORD dwAction;
};

typedef struct _PRINTER_INFO_7W _PRINTER_INFO_7W, *P_PRINTER_INFO_7W;

struct _PRINTER_INFO_7W {
    LPWSTR pszObjectGUID;
    DWORD dwAction;
};

typedef struct _PRINTER_INFO_8A _PRINTER_INFO_8A, *P_PRINTER_INFO_8A;

struct _PRINTER_INFO_8A {
    LPDEVMODEA pDevMode;
};

typedef struct _PRINTER_INFO_8W _PRINTER_INFO_8W, *P_PRINTER_INFO_8W;

struct _PRINTER_INFO_8W {
    LPDEVMODEW pDevMode;
};

typedef struct _PRINTER_INFO_9A _PRINTER_INFO_9A, *P_PRINTER_INFO_9A;

struct _PRINTER_INFO_9A {
    LPDEVMODEA pDevMode;
};

typedef struct _PRINTER_INFO_9W _PRINTER_INFO_9W, *P_PRINTER_INFO_9W;

struct _PRINTER_INFO_9W {
    LPDEVMODEW pDevMode;
};

typedef struct _PRINTER_NOTIFY_INFO _PRINTER_NOTIFY_INFO, *P_PRINTER_NOTIFY_INFO;

typedef struct _PRINTER_NOTIFY_INFO_DATA _PRINTER_NOTIFY_INFO_DATA, *P_PRINTER_NOTIFY_INFO_DATA;

typedef struct _PRINTER_NOTIFY_INFO_DATA PRINTER_NOTIFY_INFO_DATA;

typedef union _union_2038 _union_2038, *P_union_2038;

typedef struct _struct_2039 _struct_2039, *P_struct_2039;

struct _struct_2039 {
    DWORD cbBuf;
    LPVOID pBuf;
};

union _union_2038 {
    DWORD adwData[2];
    struct _struct_2039 Data;
};

struct _PRINTER_NOTIFY_INFO_DATA {
    WORD Type;
    WORD Field;
    DWORD Reserved;
    DWORD Id;
    union _union_2038 NotifyData;
};

struct _PRINTER_NOTIFY_INFO {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    PRINTER_NOTIFY_INFO_DATA aData[1];
};

typedef struct _PRINTER_NOTIFY_OPTIONS _PRINTER_NOTIFY_OPTIONS, *P_PRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE _PRINTER_NOTIFY_OPTIONS_TYPE, *P_PRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE * PPRINTER_NOTIFY_OPTIONS_TYPE;

struct _PRINTER_NOTIFY_OPTIONS {
    DWORD Version;
    DWORD Flags;
    DWORD Count;
    PPRINTER_NOTIFY_OPTIONS_TYPE pTypes;
};

struct _PRINTER_NOTIFY_OPTIONS_TYPE {
    WORD Type;
    WORD Reserved0;
    DWORD Reserved1;
    DWORD Reserved2;
    DWORD Count;
    PWORD pFields;
};

typedef struct _PRINTPROCESSOR_INFO_1A _PRINTPROCESSOR_INFO_1A, *P_PRINTPROCESSOR_INFO_1A;

struct _PRINTPROCESSOR_INFO_1A {
    LPSTR pName;
};

typedef struct _PRINTPROCESSOR_INFO_1W _PRINTPROCESSOR_INFO_1W, *P_PRINTPROCESSOR_INFO_1W;

struct _PRINTPROCESSOR_INFO_1W {
    LPWSTR pName;
};

typedef struct _PROVIDOR_INFO_1A _PROVIDOR_INFO_1A, *P_PROVIDOR_INFO_1A;

struct _PROVIDOR_INFO_1A {
    LPSTR pName;
    LPSTR pEnvironment;
    LPSTR pDLLName;
};

typedef struct _PROVIDOR_INFO_1W _PROVIDOR_INFO_1W, *P_PROVIDOR_INFO_1W;

struct _PROVIDOR_INFO_1W {
    LPWSTR pName;
    LPWSTR pEnvironment;
    LPWSTR pDLLName;
};

typedef struct _PROVIDOR_INFO_2A _PROVIDOR_INFO_2A, *P_PROVIDOR_INFO_2A;

struct _PROVIDOR_INFO_2A {
    LPSTR pOrder;
};

typedef struct _PROVIDOR_INFO_2W _PROVIDOR_INFO_2W, *P_PROVIDOR_INFO_2W;

struct _PROVIDOR_INFO_2W {
    LPWSTR pOrder;
};

typedef struct _ADDJOB_INFO_1A ADDJOB_INFO_1A;

typedef ADDJOB_INFO_1A ADDJOB_INFO_1;

typedef struct _ADDJOB_INFO_1W ADDJOB_INFO_1W;

typedef struct _DATATYPES_INFO_1A DATATYPES_INFO_1A;

typedef DATATYPES_INFO_1A DATATYPES_INFO_1;

typedef struct _DATATYPES_INFO_1W DATATYPES_INFO_1W;

typedef struct _DOC_INFO_1A DOC_INFO_1A;

typedef DOC_INFO_1A DOC_INFO_1;

typedef struct _DOC_INFO_1W DOC_INFO_1W;

typedef struct _DOC_INFO_2A DOC_INFO_2A;

typedef DOC_INFO_2A DOC_INFO_2;

typedef struct _DOC_INFO_2W DOC_INFO_2W;

typedef struct _DOC_INFO_3A DOC_INFO_3A;

typedef DOC_INFO_3A DOC_INFO_3;

typedef struct _DOC_INFO_3W DOC_INFO_3W;

typedef struct _DRIVER_INFO_1A DRIVER_INFO_1A;

typedef DRIVER_INFO_1A DRIVER_INFO_1;

typedef struct _DRIVER_INFO_1W DRIVER_INFO_1W;

typedef struct _DRIVER_INFO_2A DRIVER_INFO_2A;

typedef DRIVER_INFO_2A DRIVER_INFO_2;

typedef struct _DRIVER_INFO_2W DRIVER_INFO_2W;

typedef struct _DRIVER_INFO_3A DRIVER_INFO_3A;

typedef DRIVER_INFO_3A DRIVER_INFO_3;

typedef struct _DRIVER_INFO_3W DRIVER_INFO_3W;

typedef struct _DRIVER_INFO_4A DRIVER_INFO_4A;

typedef DRIVER_INFO_4A DRIVER_INFO_4;

typedef struct _DRIVER_INFO_4W DRIVER_INFO_4W;

typedef struct _DRIVER_INFO_5A DRIVER_INFO_5A;

typedef DRIVER_INFO_5A DRIVER_INFO_5;

typedef struct _DRIVER_INFO_5W DRIVER_INFO_5W;

typedef struct _DRIVER_INFO_6A DRIVER_INFO_6A;

typedef DRIVER_INFO_6A DRIVER_INFO_6;

typedef struct _DRIVER_INFO_6W DRIVER_INFO_6W;

typedef struct _DRIVER_INFO_8A DRIVER_INFO_8A;

typedef DRIVER_INFO_8A DRIVER_INFO_8;

typedef struct _DRIVER_INFO_8W DRIVER_INFO_8W;

typedef struct _FORM_INFO_1A FORM_INFO_1A;

typedef FORM_INFO_1A FORM_INFO_1;

typedef struct _FORM_INFO_1W FORM_INFO_1W;

typedef struct _JOB_INFO_1A JOB_INFO_1A;

typedef JOB_INFO_1A JOB_INFO_1;

typedef struct _JOB_INFO_1W JOB_INFO_1W;

typedef struct _JOB_INFO_2A JOB_INFO_2A;

typedef JOB_INFO_2A JOB_INFO_2;

typedef struct _JOB_INFO_2W JOB_INFO_2W;

typedef struct _JOB_INFO_3 JOB_INFO_3;

typedef struct _JOB_INFO_4A JOB_INFO_4A;

typedef JOB_INFO_4A JOB_INFO_4;

typedef struct _JOB_INFO_4W JOB_INFO_4W;

typedef struct _ADDJOB_INFO_1A * LPADDJOB_INFO_1A;

typedef LPADDJOB_INFO_1A LPADDJOB_INFO_1;

typedef struct _ADDJOB_INFO_1W * LPADDJOB_INFO_1W;

typedef struct _DATATYPES_INFO_1A * LPDATATYPES_INFO_1A;

typedef LPDATATYPES_INFO_1A LPDATATYPES_INFO_1;

typedef struct _DATATYPES_INFO_1W * LPDATATYPES_INFO_1W;

typedef struct _DOC_INFO_1A * LPDOC_INFO_1A;

typedef LPDOC_INFO_1A LPDOC_INFO_1;

typedef struct _DOC_INFO_1W * LPDOC_INFO_1W;

typedef struct _DOC_INFO_2A * LPDOC_INFO_2A;

typedef LPDOC_INFO_2A LPDOC_INFO_2;

typedef struct _DOC_INFO_2W * LPDOC_INFO_2W;

typedef struct _DOC_INFO_3A * LPDOC_INFO_3A;

typedef LPDOC_INFO_3A LPDOC_INFO_3;

typedef struct _DOC_INFO_3W * LPDOC_INFO_3W;

typedef struct _DRIVER_INFO_1A * LPDRIVER_INFO_1A;

typedef LPDRIVER_INFO_1A LPDRIVER_INFO_1;

typedef struct _DRIVER_INFO_1W * LPDRIVER_INFO_1W;

typedef struct _DRIVER_INFO_2A * LPDRIVER_INFO_2A;

typedef LPDRIVER_INFO_2A LPDRIVER_INFO_2;

typedef struct _DRIVER_INFO_2W * LPDRIVER_INFO_2W;

typedef struct _DRIVER_INFO_3A * LPDRIVER_INFO_3A;

typedef LPDRIVER_INFO_3A LPDRIVER_INFO_3;

typedef struct _DRIVER_INFO_3W * LPDRIVER_INFO_3W;

typedef struct _DRIVER_INFO_4A * LPDRIVER_INFO_4A;

typedef LPDRIVER_INFO_4A LPDRIVER_INFO_4;

typedef struct _DRIVER_INFO_4W * LPDRIVER_INFO_4W;

typedef struct _DRIVER_INFO_5A * LPDRIVER_INFO_5A;

typedef LPDRIVER_INFO_5A LPDRIVER_INFO_5;

typedef struct _DRIVER_INFO_5W * LPDRIVER_INFO_5W;

typedef struct _DRIVER_INFO_6A * LPDRIVER_INFO_6A;

typedef LPDRIVER_INFO_6A LPDRIVER_INFO_6;

typedef struct _DRIVER_INFO_6W * LPDRIVER_INFO_6W;

typedef struct _DRIVER_INFO_8A * LPDRIVER_INFO_8A;

typedef LPDRIVER_INFO_8A LPDRIVER_INFO_8;

typedef struct _DRIVER_INFO_8W * LPDRIVER_INFO_8W;

typedef struct _FORM_INFO_1A * LPFORM_INFO_1A;

typedef LPFORM_INFO_1A LPFORM_INFO_1;

typedef struct _FORM_INFO_1W * LPFORM_INFO_1W;

typedef struct _JOB_INFO_1A * LPJOB_INFO_1A;

typedef LPJOB_INFO_1A LPJOB_INFO_1;

typedef struct _JOB_INFO_1W * LPJOB_INFO_1W;

typedef struct _JOB_INFO_2A * LPJOB_INFO_2A;

typedef LPJOB_INFO_2A LPJOB_INFO_2;

typedef struct _JOB_INFO_2W * LPJOB_INFO_2W;

typedef struct _JOB_INFO_3 * LPJOB_INFO_3;

typedef struct _JOB_INFO_4A * LPJOB_INFO_4A;

typedef LPJOB_INFO_4A LPJOB_INFO_4;

typedef struct _JOB_INFO_4W * LPJOB_INFO_4W;

typedef struct _MONITOR_INFO_1A * LPMONITOR_INFO_1A;

typedef LPMONITOR_INFO_1A LPMONITOR_INFO_1;

typedef struct _MONITOR_INFO_1W * LPMONITOR_INFO_1W;

typedef struct _MONITOR_INFO_2A * LPMONITOR_INFO_2A;

typedef LPMONITOR_INFO_2A LPMONITOR_INFO_2;

typedef struct _MONITOR_INFO_2W * LPMONITOR_INFO_2W;

typedef struct _PORT_INFO_1A * LPPORT_INFO_1A;

typedef LPPORT_INFO_1A LPPORT_INFO_1;

typedef struct _PORT_INFO_1W * LPPORT_INFO_1W;

typedef struct _PORT_INFO_2A * LPPORT_INFO_2A;

typedef LPPORT_INFO_2A LPPORT_INFO_2;

typedef struct _PORT_INFO_2W * LPPORT_INFO_2W;

typedef struct _PORT_INFO_3A * LPPORT_INFO_3A;

typedef LPPORT_INFO_3A LPPORT_INFO_3;

typedef struct _PORT_INFO_3W * LPPORT_INFO_3W;

typedef struct _PRINTER_DEFAULTSA * LPPRINTER_DEFAULTSA;

typedef LPPRINTER_DEFAULTSA LPPRINTER_DEFAULTS;

typedef struct _PRINTER_DEFAULTSW * LPPRINTER_DEFAULTSW;

typedef struct _PRINTER_ENUM_VALUESA * LPPRINTER_ENUM_VALUESA;

typedef LPPRINTER_ENUM_VALUESA LPPRINTER_ENUM_VALUES;

typedef struct _PRINTER_ENUM_VALUESW * LPPRINTER_ENUM_VALUESW;

typedef struct _PRINTER_INFO_1A * LPPRINTER_INFO_1A;

typedef LPPRINTER_INFO_1A LPPRINTER_INFO_1;

typedef struct _PRINTER_INFO_1W * LPPRINTER_INFO_1W;

typedef struct _PRINTER_INFO_2A * LPPRINTER_INFO_2A;

typedef LPPRINTER_INFO_2A LPPRINTER_INFO_2;

typedef struct _PRINTER_INFO_2W * LPPRINTER_INFO_2W;

typedef struct _PRINTER_INFO_3 * LPPRINTER_INFO_3;

typedef struct _PRINTER_INFO_4A * LPPRINTER_INFO_4A;

typedef LPPRINTER_INFO_4A LPPRINTER_INFO_4;

typedef struct _PRINTER_INFO_4W * LPPRINTER_INFO_4W;

typedef struct _PRINTER_INFO_5A * LPPRINTER_INFO_5A;

typedef LPPRINTER_INFO_5A LPPRINTER_INFO_5;

typedef struct _PRINTER_INFO_5W * LPPRINTER_INFO_5W;

typedef struct _PRINTER_INFO_6 * LPPRINTER_INFO_6;

typedef struct _PRINTER_INFO_7A * LPPRINTER_INFO_7A;

typedef LPPRINTER_INFO_7A LPPRINTER_INFO_7;

typedef struct _PRINTER_INFO_7W * LPPRINTER_INFO_7W;

typedef struct _PRINTER_INFO_8A * LPPRINTER_INFO_8A;

typedef LPPRINTER_INFO_8A LPPRINTER_INFO_8;

typedef struct _PRINTER_INFO_8W * LPPRINTER_INFO_8W;

typedef struct _PRINTER_INFO_9A * LPPRINTER_INFO_9A;

typedef LPPRINTER_INFO_9A LPPRINTER_INFO_9;

typedef struct _PRINTER_INFO_9W * LPPRINTER_INFO_9W;

typedef struct _PRINTER_NOTIFY_INFO * LPPRINTER_NOTIFY_INFO;

typedef struct _PRINTER_NOTIFY_INFO_DATA * LPPRINTER_NOTIFY_INFO_DATA;

typedef struct _PRINTER_NOTIFY_OPTIONS * LPPRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE * LPPRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _PRINTPROCESSOR_INFO_1A * LPPRINTPROCESSOR_INFO_1A;

typedef LPPRINTPROCESSOR_INFO_1A LPPRINTPROCESSOR_INFO_1;

typedef struct _PRINTPROCESSOR_INFO_1W * LPPRINTPROCESSOR_INFO_1W;

typedef struct _PROVIDOR_INFO_1A * LPPROVIDOR_INFO_1A;

typedef LPPROVIDOR_INFO_1A LPPROVIDOR_INFO_1;

typedef struct _PROVIDOR_INFO_1W * LPPROVIDOR_INFO_1W;

typedef struct _PROVIDOR_INFO_2A * LPPROVIDOR_INFO_2A;

typedef LPPROVIDOR_INFO_2A LPPROVIDOR_INFO_2;

typedef struct _PROVIDOR_INFO_2W * LPPROVIDOR_INFO_2W;

typedef struct _MONITOR_INFO_1A MONITOR_INFO_1A;

typedef MONITOR_INFO_1A MONITOR_INFO_1;

typedef struct _MONITOR_INFO_1W MONITOR_INFO_1W;

typedef struct _MONITOR_INFO_2A MONITOR_INFO_2A;

typedef MONITOR_INFO_2A MONITOR_INFO_2;

typedef struct _MONITOR_INFO_2W MONITOR_INFO_2W;

typedef struct _ADDJOB_INFO_1A * PADDJOB_INFO_1A;

typedef PADDJOB_INFO_1A PADDJOB_INFO_1;

typedef struct _ADDJOB_INFO_1W * PADDJOB_INFO_1W;

typedef struct _DATATYPES_INFO_1A * PDATATYPES_INFO_1A;

typedef PDATATYPES_INFO_1A PDATATYPES_INFO_1;

typedef struct _DATATYPES_INFO_1W * PDATATYPES_INFO_1W;

typedef struct _DOC_INFO_1A * PDOC_INFO_1A;

typedef PDOC_INFO_1A PDOC_INFO_1;

typedef struct _DOC_INFO_1W * PDOC_INFO_1W;

typedef struct _DOC_INFO_2A * PDOC_INFO_2A;

typedef PDOC_INFO_2A PDOC_INFO_2;

typedef struct _DOC_INFO_2W * PDOC_INFO_2W;

typedef struct _DOC_INFO_3A * PDOC_INFO_3A;

typedef PDOC_INFO_3A PDOC_INFO_3;

typedef struct _DOC_INFO_3W * PDOC_INFO_3W;

typedef struct _DRIVER_INFO_1A * PDRIVER_INFO_1A;

typedef PDRIVER_INFO_1A PDRIVER_INFO_1;

typedef struct _DRIVER_INFO_1W * PDRIVER_INFO_1W;

typedef struct _DRIVER_INFO_2A * PDRIVER_INFO_2A;

typedef PDRIVER_INFO_2A PDRIVER_INFO_2;

typedef struct _DRIVER_INFO_2W * PDRIVER_INFO_2W;

typedef struct _DRIVER_INFO_3A * PDRIVER_INFO_3A;

typedef PDRIVER_INFO_3A PDRIVER_INFO_3;

typedef struct _DRIVER_INFO_3W * PDRIVER_INFO_3W;

typedef struct _DRIVER_INFO_4A * PDRIVER_INFO_4A;

typedef PDRIVER_INFO_4A PDRIVER_INFO_4;

typedef struct _DRIVER_INFO_4W * PDRIVER_INFO_4W;

typedef struct _DRIVER_INFO_5A * PDRIVER_INFO_5A;

typedef PDRIVER_INFO_5A PDRIVER_INFO_5;

typedef struct _DRIVER_INFO_5W * PDRIVER_INFO_5W;

typedef struct _DRIVER_INFO_6A * PDRIVER_INFO_6A;

typedef PDRIVER_INFO_6A PDRIVER_INFO_6;

typedef struct _DRIVER_INFO_6W * PDRIVER_INFO_6W;

typedef struct _DRIVER_INFO_8A * PDRIVER_INFO_8A;

typedef PDRIVER_INFO_8A PDRIVER_INFO_8;

typedef struct _DRIVER_INFO_8W * PDRIVER_INFO_8W;

typedef struct _FORM_INFO_1A * PFORM_INFO_1A;

typedef PFORM_INFO_1A PFORM_INFO_1;

typedef struct _FORM_INFO_1W * PFORM_INFO_1W;

typedef struct _JOB_INFO_1A * PJOB_INFO_1A;

typedef PJOB_INFO_1A PJOB_INFO_1;

typedef struct _JOB_INFO_1W * PJOB_INFO_1W;

typedef struct _JOB_INFO_2A * PJOB_INFO_2A;

typedef PJOB_INFO_2A PJOB_INFO_2;

typedef struct _JOB_INFO_2W * PJOB_INFO_2W;

typedef struct _JOB_INFO_3 * PJOB_INFO_3;

typedef struct _JOB_INFO_4A * PJOB_INFO_4A;

typedef PJOB_INFO_4A PJOB_INFO_4;

typedef struct _JOB_INFO_4W * PJOB_INFO_4W;

typedef struct _MONITOR_INFO_1A * PMONITOR_INFO_1A;

typedef PMONITOR_INFO_1A PMONITOR_INFO_1;

typedef struct _MONITOR_INFO_1W * PMONITOR_INFO_1W;

typedef struct _MONITOR_INFO_2A * PMONITOR_INFO_2A;

typedef PMONITOR_INFO_2A PMONITOR_INFO_2;

typedef struct _MONITOR_INFO_2W * PMONITOR_INFO_2W;

typedef struct _PORT_INFO_1A PORT_INFO_1A;

typedef PORT_INFO_1A PORT_INFO_1;

typedef struct _PORT_INFO_1W PORT_INFO_1W;

typedef struct _PORT_INFO_2A PORT_INFO_2A;

typedef PORT_INFO_2A PORT_INFO_2;

typedef struct _PORT_INFO_2W PORT_INFO_2W;

typedef struct _PORT_INFO_3A PORT_INFO_3A;

typedef PORT_INFO_3A PORT_INFO_3;

typedef struct _PORT_INFO_3W PORT_INFO_3W;

typedef struct _PORT_INFO_1A * PPORT_INFO_1A;

typedef PPORT_INFO_1A PPORT_INFO_1;

typedef struct _PORT_INFO_1W * PPORT_INFO_1W;

typedef struct _PORT_INFO_2A * PPORT_INFO_2A;

typedef PPORT_INFO_2A PPORT_INFO_2;

typedef struct _PORT_INFO_2W * PPORT_INFO_2W;

typedef struct _PORT_INFO_3A * PPORT_INFO_3A;

typedef PPORT_INFO_3A PPORT_INFO_3;

typedef struct _PORT_INFO_3W * PPORT_INFO_3W;

typedef struct _PRINTER_DEFAULTSA * PPRINTER_DEFAULTSA;

typedef PPRINTER_DEFAULTSA PPRINTER_DEFAULTS;

typedef struct _PRINTER_DEFAULTSW * PPRINTER_DEFAULTSW;

typedef struct _PRINTER_ENUM_VALUESA * PPRINTER_ENUM_VALUESA;

typedef PPRINTER_ENUM_VALUESA PPRINTER_ENUM_VALUES;

typedef struct _PRINTER_ENUM_VALUESW * PPRINTER_ENUM_VALUESW;

typedef struct _PRINTER_INFO_1A * PPRINTER_INFO_1A;

typedef PPRINTER_INFO_1A PPRINTER_INFO_1;

typedef struct _PRINTER_INFO_1W * PPRINTER_INFO_1W;

typedef struct _PRINTER_INFO_2A * PPRINTER_INFO_2A;

typedef PPRINTER_INFO_2A PPRINTER_INFO_2;

typedef struct _PRINTER_INFO_2W * PPRINTER_INFO_2W;

typedef struct _PRINTER_INFO_3 * PPRINTER_INFO_3;

typedef struct _PRINTER_INFO_4A * PPRINTER_INFO_4A;

typedef PPRINTER_INFO_4A PPRINTER_INFO_4;

typedef struct _PRINTER_INFO_4W * PPRINTER_INFO_4W;

typedef struct _PRINTER_INFO_5A * PPRINTER_INFO_5A;

typedef PPRINTER_INFO_5A PPRINTER_INFO_5;

typedef struct _PRINTER_INFO_5W * PPRINTER_INFO_5W;

typedef struct _PRINTER_INFO_6 * PPRINTER_INFO_6;

typedef struct _PRINTER_INFO_7A * PPRINTER_INFO_7A;

typedef PPRINTER_INFO_7A PPRINTER_INFO_7;

typedef struct _PRINTER_INFO_7W * PPRINTER_INFO_7W;

typedef struct _PRINTER_INFO_8A * PPRINTER_INFO_8A;

typedef PPRINTER_INFO_8A PPRINTER_INFO_8;

typedef struct _PRINTER_INFO_8W * PPRINTER_INFO_8W;

typedef struct _PRINTER_INFO_9A * PPRINTER_INFO_9A;

typedef PPRINTER_INFO_9A PPRINTER_INFO_9;

typedef struct _PRINTER_INFO_9W * PPRINTER_INFO_9W;

typedef struct _PRINTER_NOTIFY_INFO * PPRINTER_NOTIFY_INFO;

typedef struct _PRINTER_NOTIFY_INFO_DATA * PPRINTER_NOTIFY_INFO_DATA;

typedef struct _PRINTER_NOTIFY_OPTIONS * PPRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTPROCESSOR_INFO_1A * PPRINTPROCESSOR_INFO_1A;

typedef PPRINTPROCESSOR_INFO_1A PPRINTPROCESSOR_INFO_1;

typedef struct _PRINTPROCESSOR_INFO_1W * PPRINTPROCESSOR_INFO_1W;

typedef struct _PROVIDOR_INFO_1A * PPROVIDOR_INFO_1A;

typedef PPROVIDOR_INFO_1A PPROVIDOR_INFO_1;

typedef struct _PROVIDOR_INFO_1W * PPROVIDOR_INFO_1W;

typedef struct _PROVIDOR_INFO_2A * PPROVIDOR_INFO_2A;

typedef PPROVIDOR_INFO_2A PPROVIDOR_INFO_2;

typedef struct _PROVIDOR_INFO_2W * PPROVIDOR_INFO_2W;

typedef struct _PRINTER_DEFAULTSA PRINTER_DEFAULTSA;

typedef PRINTER_DEFAULTSA PRINTER_DEFAULTS;

typedef struct _PRINTER_DEFAULTSW PRINTER_DEFAULTSW;

typedef struct _PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUESA;

typedef PRINTER_ENUM_VALUESA PRINTER_ENUM_VALUES;

typedef struct _PRINTER_ENUM_VALUESW PRINTER_ENUM_VALUESW;

typedef struct _PRINTER_INFO_1A PRINTER_INFO_1A;

typedef PRINTER_INFO_1A PRINTER_INFO_1;

typedef struct _PRINTER_INFO_1W PRINTER_INFO_1W;

typedef struct _PRINTER_INFO_2A PRINTER_INFO_2A;

typedef PRINTER_INFO_2A PRINTER_INFO_2;

typedef struct _PRINTER_INFO_2W PRINTER_INFO_2W;

typedef struct _PRINTER_INFO_3 PRINTER_INFO_3;

typedef struct _PRINTER_INFO_4A PRINTER_INFO_4A;

typedef PRINTER_INFO_4A PRINTER_INFO_4;

typedef struct _PRINTER_INFO_4W PRINTER_INFO_4W;

typedef struct _PRINTER_INFO_5A PRINTER_INFO_5A;

typedef PRINTER_INFO_5A PRINTER_INFO_5;

typedef struct _PRINTER_INFO_5W PRINTER_INFO_5W;

typedef struct _PRINTER_INFO_6 PRINTER_INFO_6;

typedef struct _PRINTER_INFO_7A PRINTER_INFO_7A;

typedef PRINTER_INFO_7A PRINTER_INFO_7;

typedef struct _PRINTER_INFO_7W PRINTER_INFO_7W;

typedef struct _PRINTER_INFO_8A PRINTER_INFO_8A;

typedef PRINTER_INFO_8A PRINTER_INFO_8;

typedef struct _PRINTER_INFO_8W PRINTER_INFO_8W;

typedef struct _PRINTER_INFO_9A PRINTER_INFO_9A;

typedef PRINTER_INFO_9A PRINTER_INFO_9;

typedef struct _PRINTER_INFO_9W PRINTER_INFO_9W;

typedef struct _PRINTER_NOTIFY_INFO PRINTER_NOTIFY_INFO;

typedef struct _PRINTER_NOTIFY_OPTIONS PRINTER_NOTIFY_OPTIONS;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE PRINTER_NOTIFY_OPTIONS_TYPE;

typedef struct _PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1A;

typedef PRINTPROCESSOR_INFO_1A PRINTPROCESSOR_INFO_1;

typedef struct _PRINTPROCESSOR_INFO_1W PRINTPROCESSOR_INFO_1W;

typedef struct _PROVIDOR_INFO_1A PROVIDOR_INFO_1A;

typedef PROVIDOR_INFO_1A PROVIDOR_INFO_1;

typedef struct _PROVIDOR_INFO_1W PROVIDOR_INFO_1W;

typedef struct _PROVIDOR_INFO_2A PROVIDOR_INFO_2A;

typedef PROVIDOR_INFO_2A PROVIDOR_INFO_2;

typedef struct _PROVIDOR_INFO_2W PROVIDOR_INFO_2W;

#define SC_MANAGER_CONNECT 1

#define SC_MANAGER_CREATE_SERVICE 2

#define SC_MANAGER_ENUMERATE_SERVICE 4

#define SC_MANAGER_LOCK 8

#define SC_MANAGER_MODIFY_BOOT_CONFIG 32

#define SC_MANAGER_QUERY_LOCK_STATUS 16

#define SERVICE_ACCEPT_HARDWAREPROFILECHANGE 32

#define SERVICE_ACCEPT_NETBINDCHANGE 16

#define SERVICE_ACCEPT_PARAMCHANGE 8

#define SERVICE_ACCEPT_PAUSE_CONTINUE 2

#define SERVICE_ACCEPT_POWEREVENT 64

#define SERVICE_ACCEPT_PRESHUTDOWN 256

#define SERVICE_ACCEPT_SESSIONCHANGE 128

#define SERVICE_ACCEPT_SHUTDOWN 4

#define SERVICE_ACCEPT_STOP 1

#define SERVICE_ACCEPT_TIMECHANGE 512

#define SERVICE_ACCEPT_TRIGGEREVENT 1024

#define SERVICE_ACTIVE 1

#define SERVICE_CHANGE_CONFIG 2

#define SERVICE_CONFIG_DELAYED_AUTO_START_INFO 3

#define SERVICE_CONFIG_DESCRIPTION 1

#define SERVICE_CONFIG_FAILURE_ACTIONS 2

#define SERVICE_CONFIG_FAILURE_ACTIONS_FLAG 4

#define SERVICE_CONFIG_PREFERRED_NODE 9

#define SERVICE_CONFIG_PRESHUTDOWN_INFO 7

#define SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO 6

#define SERVICE_CONFIG_SERVICE_SID_INFO 5

#define SERVICE_CONFIG_TRIGGER_INFO 8

#define SERVICE_CONTINUE_PENDING 5

#define SERVICE_CONTROL_CONTINUE 3

#define SERVICE_CONTROL_DEVICEEVENT 11

#define SERVICE_CONTROL_HARDWAREPROFILECHANGE 12

#define SERVICE_CONTROL_INTERROGATE 4

#define SERVICE_CONTROL_NETBINDADD 7

#define SERVICE_CONTROL_NETBINDDISABLE 10

#define SERVICE_CONTROL_NETBINDENABLE 9

#define SERVICE_CONTROL_NETBINDREMOVE 8

#define SERVICE_CONTROL_PARAMCHANGE 6

#define SERVICE_CONTROL_PAUSE 2

#define SERVICE_CONTROL_POWEREVENT 13

#define SERVICE_CONTROL_PRESHUTDOWN 15

#define SERVICE_CONTROL_SESSIONCHANGE 14

#define SERVICE_CONTROL_SHUTDOWN 5

#define SERVICE_CONTROL_STATUS_REASON_INFO 1

#define SERVICE_CONTROL_STOP 1

#define SERVICE_CONTROL_TIMECHANGE 16

#define SERVICE_CONTROL_TRIGGEREVENT 32

#define SERVICE_ENUMERATE_DEPENDENTS 8

#define SERVICE_INACTIVE 2

#define SERVICE_INTERROGATE 128

#define SERVICE_NO_CHANGE 4294967295

#define SERVICE_NOTIFY_CONTINUE_PENDING 16

#define SERVICE_NOTIFY_CREATED 128

#define SERVICE_NOTIFY_DELETE_PENDING 512

#define SERVICE_NOTIFY_DELETED 256

#define SERVICE_NOTIFY_PAUSE_PENDING 32

#define SERVICE_NOTIFY_PAUSED 64

#define SERVICE_NOTIFY_RUNNING 8

#define SERVICE_NOTIFY_START_PENDING 2

#define SERVICE_NOTIFY_STATUS_CHANGE 2

#define SERVICE_NOTIFY_STATUS_CHANGE_1 1

#define SERVICE_NOTIFY_STATUS_CHANGE_2 2

#define SERVICE_NOTIFY_STOP_PENDING 4

#define SERVICE_NOTIFY_STOPPED 1

#define SERVICE_PAUSE_CONTINUE 64

#define SERVICE_PAUSE_PENDING 6

#define SERVICE_PAUSED 7

#define SERVICE_QUERY_CONFIG 1

#define SERVICE_QUERY_STATUS 4

#define SERVICE_RUNNING 4

#define SERVICE_RUNS_IN_SYSTEM_PROCESS 1

#define SERVICE_SID_TYPE_NONE 0

#define SERVICE_SID_TYPE_RESTRICTED 3

#define SERVICE_SID_TYPE_UNRESTRICTED 1

#define SERVICE_START 16

#define SERVICE_START_PENDING 2

#define SERVICE_STOP 32

#define SERVICE_STOP_PENDING 3

#define SERVICE_STOP_REASON_FLAG_CUSTOM 536870912

#define SERVICE_STOP_REASON_FLAG_MAX 2147483648

#define SERVICE_STOP_REASON_FLAG_MIN 0

#define SERVICE_STOP_REASON_FLAG_PLANNED 1073741824

#define SERVICE_STOP_REASON_FLAG_UNPLANNED 268435456

#define SERVICE_STOP_REASON_MAJOR_APPLICATION 327680

#define SERVICE_STOP_REASON_MAJOR_HARDWARE 131072

#define SERVICE_STOP_REASON_MAJOR_MAX 458752

#define SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM 16711680

#define SERVICE_STOP_REASON_MAJOR_MIN 0

#define SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM 4194304

#define SERVICE_STOP_REASON_MAJOR_NONE 393216

#define SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM 196608

#define SERVICE_STOP_REASON_MAJOR_OTHER 65536

#define SERVICE_STOP_REASON_MAJOR_SOFTWARE 262144

#define SERVICE_STOP_REASON_MINOR_DISK 8

#define SERVICE_STOP_REASON_MINOR_ENVIRONMENT 10

#define SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER 11

#define SERVICE_STOP_REASON_MINOR_HUNG 6

#define SERVICE_STOP_REASON_MINOR_INSTALLATION 3

#define SERVICE_STOP_REASON_MINOR_MAINTENANCE 2

#define SERVICE_STOP_REASON_MINOR_MAX 24

#define SERVICE_STOP_REASON_MINOR_MAX_CUSTOM 65535

#define SERVICE_STOP_REASON_MINOR_MIN 0

#define SERVICE_STOP_REASON_MINOR_MIN_CUSTOM 256

#define SERVICE_STOP_REASON_MINOR_MMC 22

#define SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY 17

#define SERVICE_STOP_REASON_MINOR_NETWORKCARD 9

#define SERVICE_STOP_REASON_MINOR_NONE 23

#define SERVICE_STOP_REASON_MINOR_OTHER 1

#define SERVICE_STOP_REASON_MINOR_OTHERDRIVER 12

#define SERVICE_STOP_REASON_MINOR_RECONFIG 5

#define SERVICE_STOP_REASON_MINOR_SECURITY 16

#define SERVICE_STOP_REASON_MINOR_SECURITYFIX 15

#define SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL 21

#define SERVICE_STOP_REASON_MINOR_SERVICEPACK 13

#define SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL 19

#define SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE 14

#define SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL 20

#define SERVICE_STOP_REASON_MINOR_UNSTABLE 7

#define SERVICE_STOP_REASON_MINOR_UPGRADE 4

#define SERVICE_STOP_REASON_MINOR_WMI 18

#define SERVICE_STOPPED 1

#define SERVICE_TRIGGER_ACTION_SERVICE_START 1

#define SERVICE_TRIGGER_ACTION_SERVICE_STOP 2

#define SERVICE_TRIGGER_DATA_TYPE_BINARY 1

#define SERVICE_TRIGGER_DATA_TYPE_STRING 2

#define SERVICE_TRIGGER_TYPE_CUSTOM 20

#define SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL 1

#define SERVICE_TRIGGER_TYPE_DOMAIN_JOIN 3

#define SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT 4

#define SERVICE_TRIGGER_TYPE_GROUP_POLICY 5

#define SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY 2

#define SERVICE_USER_DEFINED_CONTROL 256

typedef struct _ENUM_SERVICE_STATUS_PROCESSA _ENUM_SERVICE_STATUS_PROCESSA, *P_ENUM_SERVICE_STATUS_PROCESSA;

typedef struct _SERVICE_STATUS_PROCESS _SERVICE_STATUS_PROCESS, *P_SERVICE_STATUS_PROCESS;

typedef struct _SERVICE_STATUS_PROCESS SERVICE_STATUS_PROCESS;

struct _SERVICE_STATUS_PROCESS {
    DWORD dwServiceType;
    DWORD dwCurrentState;
    DWORD dwControlsAccepted;
    DWORD dwWin32ExitCode;
    DWORD dwServiceSpecificExitCode;
    DWORD dwCheckPoint;
    DWORD dwWaitHint;
    DWORD dwProcessId;
    DWORD dwServiceFlags;
};

struct _ENUM_SERVICE_STATUS_PROCESSA {
    LPSTR lpServiceName;
    LPSTR lpDisplayName;
    SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _ENUM_SERVICE_STATUS_PROCESSW _ENUM_SERVICE_STATUS_PROCESSW, *P_ENUM_SERVICE_STATUS_PROCESSW;

struct _ENUM_SERVICE_STATUS_PROCESSW {
    LPWSTR lpServiceName;
    LPWSTR lpDisplayName;
    SERVICE_STATUS_PROCESS ServiceStatusProcess;
};

typedef struct _ENUM_SERVICE_STATUSA _ENUM_SERVICE_STATUSA, *P_ENUM_SERVICE_STATUSA;

typedef struct _SERVICE_STATUS _SERVICE_STATUS, *P_SERVICE_STATUS;

typedef struct _SERVICE_STATUS SERVICE_STATUS;

struct _SERVICE_STATUS {
    DWORD dwServiceType;
    DWORD dwCurrentState;
    DWORD dwControlsAccepted;
    DWORD dwWin32ExitCode;
    DWORD dwServiceSpecificExitCode;
    DWORD dwCheckPoint;
    DWORD dwWaitHint;
};

struct _ENUM_SERVICE_STATUSA {
    LPSTR lpServiceName;
    LPSTR lpDisplayName;
    SERVICE_STATUS ServiceStatus;
};

typedef struct _ENUM_SERVICE_STATUSW _ENUM_SERVICE_STATUSW, *P_ENUM_SERVICE_STATUSW;

struct _ENUM_SERVICE_STATUSW {
    LPWSTR lpServiceName;
    LPWSTR lpDisplayName;
    SERVICE_STATUS ServiceStatus;
};

typedef struct _QUERY_SERVICE_CONFIGA _QUERY_SERVICE_CONFIGA, *P_QUERY_SERVICE_CONFIGA;

struct _QUERY_SERVICE_CONFIGA {
    DWORD dwServiceType;
    DWORD dwStartType;
    DWORD dwErrorControl;
    LPSTR lpBinaryPathName;
    LPSTR lpLoadOrderGroup;
    DWORD dwTagId;
    LPSTR lpDependencies;
    LPSTR lpServiceStartName;
    LPSTR lpDisplayName;
};

typedef struct _QUERY_SERVICE_CONFIGW _QUERY_SERVICE_CONFIGW, *P_QUERY_SERVICE_CONFIGW;

struct _QUERY_SERVICE_CONFIGW {
    DWORD dwServiceType;
    DWORD dwStartType;
    DWORD dwErrorControl;
    LPWSTR lpBinaryPathName;
    LPWSTR lpLoadOrderGroup;
    DWORD dwTagId;
    LPWSTR lpDependencies;
    LPWSTR lpServiceStartName;
    LPWSTR lpDisplayName;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSA _QUERY_SERVICE_LOCK_STATUSA, *P_QUERY_SERVICE_LOCK_STATUSA;

struct _QUERY_SERVICE_LOCK_STATUSA {
    DWORD fIsLocked;
    LPSTR lpLockOwner;
    DWORD dwLockDuration;
};

typedef struct _QUERY_SERVICE_LOCK_STATUSW _QUERY_SERVICE_LOCK_STATUSW, *P_QUERY_SERVICE_LOCK_STATUSW;

struct _QUERY_SERVICE_LOCK_STATUSW {
    DWORD fIsLocked;
    LPWSTR lpLockOwner;
    DWORD dwLockDuration;
};

typedef struct _SC_ACTION _SC_ACTION, *P_SC_ACTION;

typedef enum _SC_ACTION_TYPE {
    SC_ACTION_NONE=0,
    SC_ACTION_REBOOT=2,
    SC_ACTION_RESTART=1,
    SC_ACTION_RUN_COMMAND=3
} _SC_ACTION_TYPE;

typedef enum _SC_ACTION_TYPE SC_ACTION_TYPE;

struct _SC_ACTION {
    SC_ACTION_TYPE Type;
    DWORD Delay;
};

typedef enum _SC_ENUM_TYPE {
    SC_ENUM_PROCESS_INFO=0
} _SC_ENUM_TYPE;

typedef enum _SC_STATUS_TYPE {
    SC_STATUS_PROCESS_INFO=0
} _SC_STATUS_TYPE;

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA _SERVICE_CONTROL_STATUS_REASON_PARAMSA, *P_SERVICE_CONTROL_STATUS_REASON_PARAMSA;

struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA {
    DWORD dwReason;
    LPSTR pszComment;
    SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW _SERVICE_CONTROL_STATUS_REASON_PARAMSW, *P_SERVICE_CONTROL_STATUS_REASON_PARAMSW;

struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW {
    DWORD dwReason;
    LPWSTR pszComment;
    SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_DELAYED_AUTO_START_INFO _SERVICE_DELAYED_AUTO_START_INFO, *P_SERVICE_DELAYED_AUTO_START_INFO;

struct _SERVICE_DELAYED_AUTO_START_INFO {
    BOOL fDelayedAutostart;
};

typedef struct _SERVICE_DESCRIPTIONA _SERVICE_DESCRIPTIONA, *P_SERVICE_DESCRIPTIONA;

struct _SERVICE_DESCRIPTIONA {
    LPSTR lpDescription;
};

typedef struct _SERVICE_DESCRIPTIONW _SERVICE_DESCRIPTIONW, *P_SERVICE_DESCRIPTIONW;

struct _SERVICE_DESCRIPTIONW {
    LPWSTR lpDescription;
};

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG _SERVICE_FAILURE_ACTIONS_FLAG, *P_SERVICE_FAILURE_ACTIONS_FLAG;

struct _SERVICE_FAILURE_ACTIONS_FLAG {
    BOOL fFailureActionsOnNonCrashFailures;
};

typedef struct _SERVICE_FAILURE_ACTIONSA _SERVICE_FAILURE_ACTIONSA, *P_SERVICE_FAILURE_ACTIONSA;

typedef struct _SC_ACTION SC_ACTION;

struct _SERVICE_FAILURE_ACTIONSA {
    DWORD dwResetPeriod;
    LPSTR lpRebootMsg;
    LPSTR lpCommand;
    DWORD cActions;
    SC_ACTION * lpsaActions;
};

typedef struct _SERVICE_FAILURE_ACTIONSW _SERVICE_FAILURE_ACTIONSW, *P_SERVICE_FAILURE_ACTIONSW;

struct _SERVICE_FAILURE_ACTIONSW {
    DWORD dwResetPeriod;
    LPWSTR lpRebootMsg;
    LPWSTR lpCommand;
    DWORD cActions;
    SC_ACTION * lpsaActions;
};

typedef struct _SERVICE_NOTIFY_1 _SERVICE_NOTIFY_1, *P_SERVICE_NOTIFY_1;

typedef void (* PFN_SC_NOTIFY_CALLBACK)(PVOID);

struct _SERVICE_NOTIFY_1 {
    DWORD dwVersion;
    PFN_SC_NOTIFY_CALLBACK pfnNotifyCallback;
    PVOID pContext;
    DWORD dwNotificationStatus;
    SERVICE_STATUS_PROCESS ServiceStatus;
};

typedef struct _SERVICE_NOTIFY_2A _SERVICE_NOTIFY_2A, *P_SERVICE_NOTIFY_2A;

struct _SERVICE_NOTIFY_2A {
    DWORD dwVersion;
    PFN_SC_NOTIFY_CALLBACK pfnNotifyCallback;
    PVOID pContext;
    DWORD dwNotificationStatus;
    SERVICE_STATUS_PROCESS ServiceStatus;
    DWORD dwNotificationTriggered;
    LPSTR pszServiceNames;
};

typedef struct _SERVICE_NOTIFY_2W _SERVICE_NOTIFY_2W, *P_SERVICE_NOTIFY_2W;

struct _SERVICE_NOTIFY_2W {
    DWORD dwVersion;
    PFN_SC_NOTIFY_CALLBACK pfnNotifyCallback;
    PVOID pContext;
    DWORD dwNotificationStatus;
    SERVICE_STATUS_PROCESS ServiceStatus;
    DWORD dwNotificationTriggered;
    LPWSTR pszServiceNames;
};

typedef struct _SERVICE_PREFERRED_NODE_INFO _SERVICE_PREFERRED_NODE_INFO, *P_SERVICE_PREFERRED_NODE_INFO;

struct _SERVICE_PREFERRED_NODE_INFO {
    USHORT usPreferredNode;
    BOOLEAN fDelete;
};

typedef struct _SERVICE_PRESHUTDOWN_INFO _SERVICE_PRESHUTDOWN_INFO, *P_SERVICE_PRESHUTDOWN_INFO;

struct _SERVICE_PRESHUTDOWN_INFO {
    DWORD dwPreshutdownTimeout;
};

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA _SERVICE_REQUIRED_PRIVILEGES_INFOA, *P_SERVICE_REQUIRED_PRIVILEGES_INFOA;

struct _SERVICE_REQUIRED_PRIVILEGES_INFOA {
    LPSTR pmszRequiredPrivileges;
};

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW _SERVICE_REQUIRED_PRIVILEGES_INFOW, *P_SERVICE_REQUIRED_PRIVILEGES_INFOW;

struct _SERVICE_REQUIRED_PRIVILEGES_INFOW {
    LPWSTR pmszRequiredPrivileges;
};

typedef struct _SERVICE_SID_INFO _SERVICE_SID_INFO, *P_SERVICE_SID_INFO;

struct _SERVICE_SID_INFO {
    DWORD dwServiceSidType;
};

typedef struct _SERVICE_TABLE_ENTRYA _SERVICE_TABLE_ENTRYA, *P_SERVICE_TABLE_ENTRYA;

typedef void (* LPSERVICE_MAIN_FUNCTIONA)(DWORD, LPSTR *);

struct _SERVICE_TABLE_ENTRYA {
    LPSTR lpServiceName;
    LPSERVICE_MAIN_FUNCTIONA lpServiceProc;
};

typedef struct _SERVICE_TABLE_ENTRYW _SERVICE_TABLE_ENTRYW, *P_SERVICE_TABLE_ENTRYW;

typedef void (* LPSERVICE_MAIN_FUNCTIONW)(DWORD, LPWSTR *);

struct _SERVICE_TABLE_ENTRYW {
    LPWSTR lpServiceName;
    LPSERVICE_MAIN_FUNCTIONW lpServiceProc;
};

typedef struct _SERVICE_TIMECHANGE_INFO _SERVICE_TIMECHANGE_INFO, *P_SERVICE_TIMECHANGE_INFO;

struct _SERVICE_TIMECHANGE_INFO {
    LARGE_INTEGER liNewTime;
    LARGE_INTEGER liOldTime;
};

typedef struct _SERVICE_TRIGGER _SERVICE_TRIGGER, *P_SERVICE_TRIGGER;

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM, *P_SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM * PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM {
    DWORD dwDataType;
    DWORD cbData;
    PBYTE pData;
};

struct _SERVICE_TRIGGER {
    DWORD dwTriggerType;
    DWORD dwAction;
    GUID * pTriggerSubtype;
    DWORD cDataItems;
    PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM pDataItems;
};

typedef struct _SERVICE_TRIGGER_INFO _SERVICE_TRIGGER_INFO, *P_SERVICE_TRIGGER_INFO;

typedef struct _SERVICE_TRIGGER * PSERVICE_TRIGGER;

struct _SERVICE_TRIGGER_INFO {
    DWORD cTriggers;
    PSERVICE_TRIGGER pTriggers;
    PBYTE pReserved;
};

typedef struct _ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUSA;

typedef ENUM_SERVICE_STATUSA ENUM_SERVICE_STATUS;

typedef struct _ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESSA;

typedef ENUM_SERVICE_STATUS_PROCESSA ENUM_SERVICE_STATUS_PROCESS;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW ENUM_SERVICE_STATUS_PROCESSW;

typedef struct _ENUM_SERVICE_STATUSW ENUM_SERVICE_STATUSW;

typedef struct _ENUM_SERVICE_STATUSA * LPENUM_SERVICE_STATUSA;

typedef LPENUM_SERVICE_STATUSA LPENUM_SERVICE_STATUS;

typedef struct _ENUM_SERVICE_STATUS_PROCESSA * LPENUM_SERVICE_STATUS_PROCESSA;

typedef LPENUM_SERVICE_STATUS_PROCESSA LPENUM_SERVICE_STATUS_PROCESS;

typedef struct _ENUM_SERVICE_STATUS_PROCESSW * LPENUM_SERVICE_STATUS_PROCESSW;

typedef struct _ENUM_SERVICE_STATUSW * LPENUM_SERVICE_STATUSW;

typedef void (* LPHANDLER_FUNCTION)(DWORD);

typedef DWORD (* LPHANDLER_FUNCTION_EX)(DWORD, DWORD, LPVOID, LPVOID);

typedef struct _QUERY_SERVICE_CONFIGA * LPQUERY_SERVICE_CONFIGA;

typedef LPQUERY_SERVICE_CONFIGA LPQUERY_SERVICE_CONFIG;

typedef struct _QUERY_SERVICE_CONFIGW * LPQUERY_SERVICE_CONFIGW;

typedef struct _QUERY_SERVICE_LOCK_STATUSA * LPQUERY_SERVICE_LOCK_STATUSA;

typedef LPQUERY_SERVICE_LOCK_STATUSA LPQUERY_SERVICE_LOCK_STATUS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW * LPQUERY_SERVICE_LOCK_STATUSW;

typedef struct _SC_ACTION * LPSC_ACTION;

typedef struct _SERVICE_DELAYED_AUTO_START_INFO * LPSERVICE_DELAYED_AUTO_START_INFO;

typedef struct _SERVICE_DESCRIPTIONA * LPSERVICE_DESCRIPTIONA;

typedef LPSERVICE_DESCRIPTIONA LPSERVICE_DESCRIPTION;

typedef struct _SERVICE_DESCRIPTIONW * LPSERVICE_DESCRIPTIONW;

typedef struct _SERVICE_FAILURE_ACTIONSA * LPSERVICE_FAILURE_ACTIONSA;

typedef LPSERVICE_FAILURE_ACTIONSA LPSERVICE_FAILURE_ACTIONS;

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG * LPSERVICE_FAILURE_ACTIONS_FLAG;

typedef struct _SERVICE_FAILURE_ACTIONSW * LPSERVICE_FAILURE_ACTIONSW;

typedef struct _SERVICE_PREFERRED_NODE_INFO * LPSERVICE_PREFERRED_NODE_INFO;

typedef struct _SERVICE_PRESHUTDOWN_INFO * LPSERVICE_PRESHUTDOWN_INFO;

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA * LPSERVICE_REQUIRED_PRIVILEGES_INFOA;

typedef LPSERVICE_REQUIRED_PRIVILEGES_INFOA LPSERVICE_REQUIRED_PRIVILEGES_INFO;

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW * LPSERVICE_REQUIRED_PRIVILEGES_INFOW;

typedef struct _SERVICE_SID_INFO * LPSERVICE_SID_INFO;

typedef struct _SERVICE_STATUS * LPSERVICE_STATUS;

typedef struct _SERVICE_STATUS_PROCESS * LPSERVICE_STATUS_PROCESS;

typedef struct _SERVICE_TABLE_ENTRYA * LPSERVICE_TABLE_ENTRYA;

typedef LPSERVICE_TABLE_ENTRYA LPSERVICE_TABLE_ENTRY;

typedef struct _SERVICE_TABLE_ENTRYW * LPSERVICE_TABLE_ENTRYW;

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA * PSERVICE_CONTROL_STATUS_REASON_PARAMSA;

typedef PSERVICE_CONTROL_STATUS_REASON_PARAMSA PSERVICE_CONTROL_STATUS_REASON_PARAMS;

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW * PSERVICE_CONTROL_STATUS_REASON_PARAMSW;

typedef struct _SERVICE_NOTIFY_2A SERVICE_NOTIFY_2A;

typedef SERVICE_NOTIFY_2A * PSERVICE_NOTIFYA;

typedef PSERVICE_NOTIFYA PSERVICE_NOTIFY;

typedef struct _SERVICE_NOTIFY_1 * PSERVICE_NOTIFY_1;

typedef struct _SERVICE_NOTIFY_2A * PSERVICE_NOTIFY_2A;

typedef PSERVICE_NOTIFY_2A PSERVICE_NOTIFY_2;

typedef struct _SERVICE_NOTIFY_2W * PSERVICE_NOTIFY_2W;

typedef struct _SERVICE_NOTIFY_2W SERVICE_NOTIFY_2W;

typedef SERVICE_NOTIFY_2W * PSERVICE_NOTIFYW;

typedef struct _SERVICE_TIMECHANGE_INFO * PSERVICE_TIMECHANGE_INFO;

typedef struct _SERVICE_TRIGGER_INFO * PSERVICE_TRIGGER_INFO;

typedef struct _QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIGA;

typedef QUERY_SERVICE_CONFIGA QUERY_SERVICE_CONFIG;

typedef struct _QUERY_SERVICE_CONFIGW QUERY_SERVICE_CONFIGW;

typedef struct _QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUSA;

typedef QUERY_SERVICE_LOCK_STATUSA QUERY_SERVICE_LOCK_STATUS;

typedef struct _QUERY_SERVICE_LOCK_STATUSW QUERY_SERVICE_LOCK_STATUSW;

typedef enum _SC_ENUM_TYPE SC_ENUM_TYPE;

typedef LPVOID SC_LOCK;

typedef enum _SC_STATUS_TYPE SC_STATUS_TYPE;

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA SERVICE_CONTROL_STATUS_REASON_PARAMSA;

typedef SERVICE_CONTROL_STATUS_REASON_PARAMSA SERVICE_CONTROL_STATUS_REASON_PARAMS;

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW SERVICE_CONTROL_STATUS_REASON_PARAMSW;

typedef struct _SERVICE_DELAYED_AUTO_START_INFO SERVICE_DELAYED_AUTO_START_INFO;

typedef struct _SERVICE_DESCRIPTIONA SERVICE_DESCRIPTIONA;

typedef SERVICE_DESCRIPTIONA SERVICE_DESCRIPTION;

typedef struct _SERVICE_DESCRIPTIONW SERVICE_DESCRIPTIONW;

typedef struct _SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONSA;

typedef SERVICE_FAILURE_ACTIONSA SERVICE_FAILURE_ACTIONS;

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG SERVICE_FAILURE_ACTIONS_FLAG;

typedef struct _SERVICE_FAILURE_ACTIONSW SERVICE_FAILURE_ACTIONSW;

typedef SERVICE_NOTIFY_2A SERVICE_NOTIFYA;

typedef SERVICE_NOTIFYA SERVICE_NOTIFY;

typedef struct _SERVICE_NOTIFY_1 SERVICE_NOTIFY_1;

typedef SERVICE_NOTIFY_2A SERVICE_NOTIFY_2;

typedef SERVICE_NOTIFY_2W SERVICE_NOTIFYW;

typedef struct _SERVICE_PREFERRED_NODE_INFO SERVICE_PREFERRED_NODE_INFO;

typedef struct _SERVICE_PRESHUTDOWN_INFO SERVICE_PRESHUTDOWN_INFO;

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA SERVICE_REQUIRED_PRIVILEGES_INFOA;

typedef SERVICE_REQUIRED_PRIVILEGES_INFOA SERVICE_REQUIRED_PRIVILEGES_INFO;

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW SERVICE_REQUIRED_PRIVILEGES_INFOW;

typedef struct _SERVICE_SID_INFO SERVICE_SID_INFO;

typedef struct SERVICE_STATUS_HANDLE__ SERVICE_STATUS_HANDLE__, *PSERVICE_STATUS_HANDLE__;

typedef struct SERVICE_STATUS_HANDLE__ * SERVICE_STATUS_HANDLE;

struct SERVICE_STATUS_HANDLE__ {
    int unused;
};

typedef struct _SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRYA;

typedef SERVICE_TABLE_ENTRYA SERVICE_TABLE_ENTRY;

typedef struct _SERVICE_TABLE_ENTRYW SERVICE_TABLE_ENTRYW;

typedef struct _SERVICE_TIMECHANGE_INFO SERVICE_TIMECHANGE_INFO;

typedef struct _SERVICE_TRIGGER SERVICE_TRIGGER;

typedef struct _SERVICE_TRIGGER_INFO SERVICE_TRIGGER_INFO;

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;

#define CAT_MEMBERINFO_STRUCT 2222

#define CAT_NAMEVALUE_STRUCT 2221

#define CERT_CONFIDENCE_AUTHIDEXT 65536

#define CERT_CONFIDENCE_HIGHEST 286330880

#define CERT_CONFIDENCE_HYGIENE 4096

#define CERT_CONFIDENCE_SIG 268435456

#define CERT_CONFIDENCE_TIME 16777216

#define CERT_CONFIDENCE_TIMENEST 1048576

#define CPD_CHOICE_SIP 1

#define CPD_REVOCATION_CHECK_CHAIN 262144

#define CPD_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 524288

#define CPD_REVOCATION_CHECK_END_CERT 131072

#define CPD_REVOCATION_CHECK_NONE 65536

#define CPD_UISTATE_MODE_ALLOW 2

#define CPD_UISTATE_MODE_BLOCK 1

#define CPD_UISTATE_MODE_MASK 3

#define CPD_UISTATE_MODE_PROMPT 0

#define CPD_USE_NT5_CHAIN_FLAG 2147483648

#define DWACTION_ALLOCANDFILL 1

#define DWACTION_FREE 2

#define SGNR_TYPE_TIMESTAMP 16

#define SPC_CAB_DATA_STRUCT 2008

#define SPC_FILE_LINK_CHOICE 3

#define SPC_FINANCIAL_CRITERIA_STRUCT 2002

#define SPC_INDIRECT_DATA_CONTENT_STRUCT 2003

#define SPC_JAVA_CLASS_DATA_STRUCT 2009

#define SPC_LINK_STRUCT 2005

#define SPC_MINIMAL_CRITERIA_STRUCT 2001

#define SPC_MONIKER_LINK_CHOICE 2

#define SPC_PE_IMAGE_DATA_STRUCT 2004

#define SPC_SIGINFO_STRUCT 2130

#define SPC_SP_AGENCY_INFO_STRUCT 2000

#define SPC_SP_OPUS_INFO_STRUCT 2007

#define SPC_STATEMENT_TYPE_STRUCT 2006

#define SPC_URL_LINK_CHOICE 1

#define SPC_UUID_LENGTH 16

#define TRUSTERROR_MAX_STEPS 38

#define TRUSTERROR_STEP_CATALOGFILE 6

#define TRUSTERROR_STEP_CERTSTORE 7

#define TRUSTERROR_STEP_FILEIO 2

#define TRUSTERROR_STEP_FINAL_CERTCHKPROV 35

#define TRUSTERROR_STEP_FINAL_CERTPROV 34

#define TRUSTERROR_STEP_FINAL_INITPROV 31

#define TRUSTERROR_STEP_FINAL_OBJPROV 32

#define TRUSTERROR_STEP_FINAL_POLICYPROV 36

#define TRUSTERROR_STEP_FINAL_SIGPROV 33

#define TRUSTERROR_STEP_FINAL_UIPROV 37

#define TRUSTERROR_STEP_FINAL_WVTINIT 30

#define TRUSTERROR_STEP_MESSAGE 8

#define TRUSTERROR_STEP_MSG_CERTCHAIN 15

#define TRUSTERROR_STEP_MSG_COUNTERSIGCERT 17

#define TRUSTERROR_STEP_MSG_COUNTERSIGINFO 16

#define TRUSTERROR_STEP_MSG_INNERCNT 11

#define TRUSTERROR_STEP_MSG_INNERCNTTYPE 10

#define TRUSTERROR_STEP_MSG_SIGNERCERT 14

#define TRUSTERROR_STEP_MSG_SIGNERCOUNT 9

#define TRUSTERROR_STEP_MSG_SIGNERINFO 13

#define TRUSTERROR_STEP_MSG_STORE 12

#define TRUSTERROR_STEP_SIP 3

#define TRUSTERROR_STEP_SIPSUBJINFO 5

#define TRUSTERROR_STEP_VERIFY_MSGHASH 18

#define TRUSTERROR_STEP_VERIFY_MSGINDIRECTDATA 19

#define TRUSTERROR_STEP_WVTPARAMS 0

#define WIN_CERT_REVISION_1_0 256

#define WIN_CERT_REVISION_2_0 512

#define WIN_CERT_TYPE_PKCS_SIGNED_DATA 2

#define WIN_CERT_TYPE_RESERVED_1 3

#define WIN_CERT_TYPE_TS_STACK_SIGNED 4

#define WIN_CERT_TYPE_X509 1

#define WINTRUST_MAX_HASH_BYTES_TO_MAP_DEFAULT 1048576

#define WINTRUST_MAX_HEADER_BYTES_TO_MAP_DEFAULT 10485760

#define WT_ADD_ACTION_ID_RET_RESULT_FLAG 1

#define WT_CURRENT_VERSION 512

#define WT_TRUSTDBDIALOG_NO_UI_FLAG 1

#define WT_TRUSTDBDIALOG_ONLY_PUB_TAB_FLAG 2

#define WT_TRUSTDBDIALOG_WRITE_IEAK_STORE_FLAG 512

#define WT_TRUSTDBDIALOG_WRITE_LEGACY_REG_FLAG 256

#define WTCI_DONT_OPEN_STORES 1

#define WTCI_OPEN_ONLY_ROOT 2

#define WTCI_USE_LOCAL_MACHINE 4

#define WTD_CACHE_ONLY_URL_RETRIEVAL 4096

#define WTD_CHOICE_BLOB 3

#define WTD_CHOICE_CATALOG 2

#define WTD_CHOICE_CERT 5

#define WTD_CHOICE_FILE 1

#define WTD_CHOICE_SIGNER 4

#define WTD_HASH_ONLY_FLAG 512

#define WTD_LIFETIME_SIGNING_FLAG 2048

#define WTD_NO_IE4_CHAIN_FLAG 2

#define WTD_NO_POLICY_USAGE_FLAG 4

#define WTD_PROV_FLAGS_MASK 65535

#define WTD_REVOCATION_CHECK_CHAIN 64

#define WTD_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT 128

#define WTD_REVOCATION_CHECK_END_CERT 32

#define WTD_REVOCATION_CHECK_NONE 16

#define WTD_REVOKE_NONE 0

#define WTD_REVOKE_WHOLECHAIN 1

#define WTD_SAFER_FLAG 256

#define WTD_STATEACTION_AUTO_CACHE 3

#define WTD_STATEACTION_AUTO_CACHE_FLUSH 4

#define WTD_STATEACTION_CLOSE 2

#define WTD_STATEACTION_IGNORE 0

#define WTD_STATEACTION_VERIFY 1

#define WTD_UI_ALL 1

#define WTD_UI_NOBAD 3

#define WTD_UI_NOGOOD 4

#define WTD_UI_NONE 2

#define WTD_UICONTEXT_EXECUTE 0

#define WTD_UICONTEXT_INSTALL 1

#define WTD_USE_DEFAULT_OSVER_CHECK 1024

#define WTD_USE_IE4_TRUST_FLAG 1

#define WTPF_ALLOWONLYPERTRUST 262144

#define WTPF_IGNOREEXPIRATION 256

#define WTPF_IGNOREREVOCATIONONTS 131072

#define WTPF_IGNOREREVOKATION 512

#define WTPF_OFFLINEOK_COM 2048

#define WTPF_OFFLINEOK_IND 1024

#define WTPF_OFFLINEOKNBU_COM 8192

#define WTPF_OFFLINEOKNBU_IND 4096

#define WTPF_TESTCANBEVALID 128

#define WTPF_TRUSTTEST 32

#define WTPF_VERIFY_V1_OFF 65536

typedef struct _CAT_MEMBERINFO _CAT_MEMBERINFO, *P_CAT_MEMBERINFO;

struct _CAT_MEMBERINFO {
    LPWSTR pwszSubjGuid;
    DWORD dwCertVersion;
};

typedef struct _CAT_NAMEVALUE _CAT_NAMEVALUE, *P_CAT_NAMEVALUE;

struct _CAT_NAMEVALUE {
    LPWSTR pwszTag;
    DWORD fdwFlags;
    CRYPT_DATA_BLOB Value;
};

typedef struct _CRYPT_PROVIDER_DEFUSAGE _CRYPT_PROVIDER_DEFUSAGE, *P_CRYPT_PROVIDER_DEFUSAGE;

struct _CRYPT_PROVIDER_DEFUSAGE {
    DWORD cbStruct;
    GUID gActionID;
    LPVOID pDefPolicyCallbackData;
    LPVOID pDefSIPClientData;
};

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE _CRYPT_PROVIDER_REGDEFUSAGE, *P_CRYPT_PROVIDER_REGDEFUSAGE;

struct _CRYPT_PROVIDER_REGDEFUSAGE {
    DWORD cbStruct;
    GUID * pgActionID;
    WCHAR * pwszDllName;
    char * pwszLoadCallbackDataFunctionName;
    char * pwszFreeCallbackDataFunctionName;
};

typedef struct _CRYPT_REGISTER_ACTIONID _CRYPT_REGISTER_ACTIONID, *P_CRYPT_REGISTER_ACTIONID;

typedef struct _CRYPT_TRUST_REG_ENTRY _CRYPT_TRUST_REG_ENTRY, *P_CRYPT_TRUST_REG_ENTRY;

typedef struct _CRYPT_TRUST_REG_ENTRY CRYPT_TRUST_REG_ENTRY;

struct _CRYPT_TRUST_REG_ENTRY {
    DWORD cbStruct;
    WCHAR * pwszDLLName;
    WCHAR * pwszFunctionName;
};

struct _CRYPT_REGISTER_ACTIONID {
    DWORD cbStruct;
    CRYPT_TRUST_REG_ENTRY sInitProvider;
    CRYPT_TRUST_REG_ENTRY sObjectProvider;
    CRYPT_TRUST_REG_ENTRY sSignatureProvider;
    CRYPT_TRUST_REG_ENTRY sCertificateProvider;
    CRYPT_TRUST_REG_ENTRY sCertificatePolicyProvider;
    CRYPT_TRUST_REG_ENTRY sFinalPolicyProvider;
    CRYPT_TRUST_REG_ENTRY sTestPolicyProvider;
    CRYPT_TRUST_REG_ENTRY sCleanupProvider;
};

typedef struct _SPC_FINANCIAL_CRITERIA _SPC_FINANCIAL_CRITERIA, *P_SPC_FINANCIAL_CRITERIA;

struct _SPC_FINANCIAL_CRITERIA {
    BOOL fFinancialInfoAvailable;
    BOOL fMeetsCriteria;
};

typedef struct _SPC_IMAGE _SPC_IMAGE, *P_SPC_IMAGE;

typedef struct SPC_LINK_ SPC_LINK_, *PSPC_LINK_;

typedef union _union_5429 _union_5429, *P_union_5429;

typedef struct _SPC_SERIALIZED_OBJECT _SPC_SERIALIZED_OBJECT, *P_SPC_SERIALIZED_OBJECT;

typedef struct _SPC_SERIALIZED_OBJECT SPC_SERIALIZED_OBJECT;

typedef BYTE SPC_UUID[16];

struct _SPC_SERIALIZED_OBJECT {
    SPC_UUID ClassId;
    CRYPT_DATA_BLOB SerializedData;
};

union _union_5429 {
    LPWSTR pwszUrl;
    SPC_SERIALIZED_OBJECT Moniker;
    LPWSTR pwszFile;
};

struct SPC_LINK_ {
    DWORD dwLinkChoice;
    union _union_5429 field_0x4;
};

struct _SPC_IMAGE {
    struct SPC_LINK_ * pImageLink;
    CRYPT_DATA_BLOB Bitmap;
    CRYPT_DATA_BLOB Metafile;
    CRYPT_DATA_BLOB EnhancedMetafile;
    CRYPT_DATA_BLOB GifFile;
};

typedef struct _SPC_INDIRECT_DATA_CONTENT _SPC_INDIRECT_DATA_CONTENT, *P_SPC_INDIRECT_DATA_CONTENT;

struct _SPC_INDIRECT_DATA_CONTENT {
    CRYPT_ATTRIBUTE_TYPE_VALUE Data;
    CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
    CRYPT_HASH_BLOB Digest;
};

typedef struct _SPC_PE_IMAGE_DATA _SPC_PE_IMAGE_DATA, *P_SPC_PE_IMAGE_DATA;

typedef struct SPC_LINK_ * PSPC_LINK;

struct _SPC_PE_IMAGE_DATA {
    CRYPT_BIT_BLOB Flags;
    PSPC_LINK pFile;
};

typedef struct _SPC_SP_AGENCY_INFO _SPC_SP_AGENCY_INFO, *P_SPC_SP_AGENCY_INFO;

typedef struct _SPC_IMAGE * PSPC_IMAGE;

struct _SPC_SP_AGENCY_INFO {
    struct SPC_LINK_ * pPolicyInformation;
    LPWSTR pwszPolicyDisplayText;
    PSPC_IMAGE pLogoImage;
    struct SPC_LINK_ * pLogoLink;
};

typedef struct _SPC_SP_OPUS_INFO _SPC_SP_OPUS_INFO, *P_SPC_SP_OPUS_INFO;

struct _SPC_SP_OPUS_INFO {
    LPCWSTR pwszProgramName;
    struct SPC_LINK_ * pMoreInfo;
    struct SPC_LINK_ * pPublisherInfo;
};

typedef struct _SPC_STATEMENT_TYPE _SPC_STATEMENT_TYPE, *P_SPC_STATEMENT_TYPE;

struct _SPC_STATEMENT_TYPE {
    DWORD cKeyPurposeId;
    LPSTR * rgpszKeyPurposeId;
};

typedef struct _WIN_CERTIFICATE _WIN_CERTIFICATE, *P_WIN_CERTIFICATE;

struct _WIN_CERTIFICATE {
    DWORD dwLength;
    WORD wRevision;
    WORD wCertificateType;
    BYTE bCertificate[1];
};

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA _WIN_SPUB_TRUSTED_PUBLISHER_DATA, *P_WIN_SPUB_TRUSTED_PUBLISHER_DATA;

typedef struct _WIN_CERTIFICATE * LPWIN_CERTIFICATE;

struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA {
    HANDLE hClientToken;
    LPWIN_CERTIFICATE lpCertificate;
};

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT, *P_WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;

typedef LPVOID WIN_TRUST_SUBJECT;

struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT {
    HANDLE hClientToken;
    GUID * SubjectType;
    WIN_TRUST_SUBJECT Subject;
};

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY _WIN_TRUST_ACTDATA_SUBJECT_ONLY, *P_WIN_TRUST_ACTDATA_SUBJECT_ONLY;

struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY {
    GUID * SubjectType;
    WIN_TRUST_SUBJECT Subject;
};

typedef struct _WIN_TRUST_SUBJECT_FILE _WIN_TRUST_SUBJECT_FILE, *P_WIN_TRUST_SUBJECT_FILE;

struct _WIN_TRUST_SUBJECT_FILE {
    HANDLE hFile;
    LPCWSTR lpPath;
};

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY, *P_WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;

struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY {
    HANDLE hFile;
    LPCWSTR lpPath;
    LPCWSTR lpDisplayName;
};

typedef struct _CAT_MEMBERINFO CAT_MEMBERINFO;

typedef struct _CAT_NAMEVALUE CAT_NAMEVALUE;

typedef struct _CRYPT_PROVIDER_CERT CRYPT_PROVIDER_CERT;

typedef struct _CRYPT_PROVIDER_DEFUSAGE CRYPT_PROVIDER_DEFUSAGE;

typedef struct _CRYPT_PROVIDER_FUNCTIONS CRYPT_PROVIDER_FUNCTIONS;

typedef struct _CRYPT_PROVIDER_PRIVDATA CRYPT_PROVIDER_PRIVDATA;

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE CRYPT_PROVIDER_REGDEFUSAGE;

typedef struct _CRYPT_PROVIDER_SGNR CRYPT_PROVIDER_SGNR;

typedef struct _CRYPT_PROVUI_DATA CRYPT_PROVUI_DATA;

typedef struct _CRYPT_PROVUI_FUNCS CRYPT_PROVUI_FUNCS;

typedef struct _CRYPT_REGISTER_ACTIONID CRYPT_REGISTER_ACTIONID;

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA * LPWIN_SPUB_TRUSTED_PUBLISHER_DATA;

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT * LPWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY * LPWIN_TRUST_ACTDATA_SUBJECT_ONLY;

typedef struct _WIN_TRUST_SUBJECT_FILE * LPWIN_TRUST_SUBJECT_FILE;

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY * LPWIN_TRUST_SUBJECT_FILE_AND_DISPLAY;

typedef struct _CAT_MEMBERINFO * PCAT_MEMBERINFO;

typedef struct _CAT_NAMEVALUE * PCAT_NAMEVALUE;

typedef struct _CRYPT_PROVIDER_CERT * PCRYPT_PROVIDER_CERT;

typedef struct _CRYPT_PROVIDER_DATA * PCRYPT_PROVIDER_DATA;

typedef struct _CRYPT_PROVIDER_DEFUSAGE * PCRYPT_PROVIDER_DEFUSAGE;

typedef struct _CRYPT_PROVIDER_FUNCTIONS * PCRYPT_PROVIDER_FUNCTIONS;

typedef struct _CRYPT_PROVIDER_PRIVDATA * PCRYPT_PROVIDER_PRIVDATA;

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE * PCRYPT_PROVIDER_REGDEFUSAGE;

typedef struct _CRYPT_PROVIDER_SGNR * PCRYPT_PROVIDER_SGNR;

typedef struct _CRYPT_PROVUI_DATA * PCRYPT_PROVUI_DATA;

typedef struct _CRYPT_PROVUI_FUNCS * PCRYPT_PROVUI_FUNCS;

typedef struct _CRYPT_REGISTER_ACTIONID * PCRYPT_REGISTER_ACTIONID;

typedef struct _CRYPT_TRUST_REG_ENTRY * PCRYPT_TRUST_REG_ENTRY;

typedef BOOL (* PFN_ALLOCANDFILLDEFUSAGE)(char *, struct _CRYPT_PROVIDER_DEFUSAGE *);

typedef BOOL (* PFN_FREEDEFUSAGE)(char *, struct _CRYPT_PROVIDER_DEFUSAGE *);

typedef struct _PROVDATA_SIP * PPROVDATA_SIP;

typedef struct _PROVDATA_SIP PROVDATA_SIP;

typedef struct _SPC_FINANCIAL_CRITERIA * PSPC_FINANCIAL_CRITERIA;

typedef struct _SPC_INDIRECT_DATA_CONTENT * PSPC_INDIRECT_DATA_CONTENT;

typedef struct _SPC_PE_IMAGE_DATA * PSPC_PE_IMAGE_DATA;

typedef struct _SPC_SERIALIZED_OBJECT * PSPC_SERIALIZED_OBJECT;

typedef struct SPC_SIGINFO_ SPC_SIGINFO_, *PSPC_SIGINFO_;

typedef struct SPC_SIGINFO_ * PSPC_SIGINFO;

struct SPC_SIGINFO_ {
    DWORD dwSipVersion;
    GUID gSIPGuid;
    DWORD dwReserved1;
    DWORD dwReserved2;
    DWORD dwReserved3;
    DWORD dwReserved4;
    DWORD dwReserved5;
};

typedef struct _SPC_SP_AGENCY_INFO * PSPC_SP_AGENCY_INFO;

typedef struct _SPC_SP_OPUS_INFO * PSPC_SP_OPUS_INFO;

typedef struct _SPC_STATEMENT_TYPE * PSPC_STATEMENT_TYPE;

typedef struct WINTRUST_BLOB_INFO_ * PWINTRUST_BLOB_INFO;

typedef struct WINTRUST_CATALOG_INFO_ * PWINTRUST_CATALOG_INFO;

typedef struct WINTRUST_CERT_INFO_ * PWINTRUST_CERT_INFO;

typedef struct _WINTRUST_DATA * PWINTRUST_DATA;

typedef struct WINTRUST_FILE_INFO_ * PWINTRUST_FILE_INFO;

typedef struct WINTRUST_SGNR_INFO_ * PWINTRUST_SGNR_INFO;

typedef struct _SPC_FINANCIAL_CRITERIA SPC_FINANCIAL_CRITERIA;

typedef struct _SPC_IMAGE SPC_IMAGE;

typedef struct _SPC_INDIRECT_DATA_CONTENT SPC_INDIRECT_DATA_CONTENT;

typedef struct SPC_LINK_ SPC_LINK;

typedef struct _SPC_PE_IMAGE_DATA SPC_PE_IMAGE_DATA;

typedef struct SPC_SIGINFO_ SPC_SIGINFO;

typedef struct _SPC_SP_AGENCY_INFO SPC_SP_AGENCY_INFO;

typedef struct _SPC_SP_OPUS_INFO SPC_SP_OPUS_INFO;

typedef struct _SPC_STATEMENT_TYPE SPC_STATEMENT_TYPE;

typedef struct _WIN_CERTIFICATE WIN_CERTIFICATE;

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA WIN_SPUB_TRUSTED_PUBLISHER_DATA;

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY WIN_TRUST_ACTDATA_SUBJECT_ONLY;

typedef struct _WIN_TRUST_SUBJECT_FILE WIN_TRUST_SUBJECT_FILE;

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;

typedef struct WINTRUST_BLOB_INFO_ WINTRUST_BLOB_INFO;

typedef struct WINTRUST_CATALOG_INFO_ WINTRUST_CATALOG_INFO;

typedef struct WINTRUST_CERT_INFO_ WINTRUST_CERT_INFO;

typedef struct WINTRUST_FILE_INFO_ WINTRUST_FILE_INFO;

typedef struct WINTRUST_SGNR_INFO_ WINTRUST_SGNR_INFO;

#define ALERT_SYSTEM_CRITICAL 5

#define ALERT_SYSTEM_ERROR 3

#define ALERT_SYSTEM_INFORMATIONAL 1

#define ALERT_SYSTEM_QUERY 4

#define ALERT_SYSTEM_WARNING 2

#define APPCOMMAND_BASS_BOOST 20

#define APPCOMMAND_BASS_DOWN 19

#define APPCOMMAND_BASS_UP 21

#define APPCOMMAND_BROWSER_BACKWARD 1

#define APPCOMMAND_BROWSER_FAVORITES 6

#define APPCOMMAND_BROWSER_FORWARD 2

#define APPCOMMAND_BROWSER_HOME 7

#define APPCOMMAND_BROWSER_REFRESH 3

#define APPCOMMAND_BROWSER_SEARCH 5

#define APPCOMMAND_BROWSER_STOP 4

#define APPCOMMAND_CLOSE 31

#define APPCOMMAND_COPY 36

#define APPCOMMAND_CORRECTION_LIST 45

#define APPCOMMAND_CUT 37

#define APPCOMMAND_DELETE 53

#define APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE 43

#define APPCOMMAND_DWM_FLIP3D 54

#define APPCOMMAND_FIND 28

#define APPCOMMAND_FORWARD_MAIL 40

#define APPCOMMAND_HELP 27

#define APPCOMMAND_LAUNCH_APP1 17

#define APPCOMMAND_LAUNCH_APP2 18

#define APPCOMMAND_LAUNCH_MAIL 15

#define APPCOMMAND_LAUNCH_MEDIA_SELECT 16

#define APPCOMMAND_MEDIA_CHANNEL_DOWN 52

#define APPCOMMAND_MEDIA_CHANNEL_UP 51

#define APPCOMMAND_MEDIA_FAST_FORWARD 49

#define APPCOMMAND_MEDIA_NEXTTRACK 11

#define APPCOMMAND_MEDIA_PAUSE 47

#define APPCOMMAND_MEDIA_PLAY 46

#define APPCOMMAND_MEDIA_PLAY_PAUSE 14

#define APPCOMMAND_MEDIA_PREVIOUSTRACK 12

#define APPCOMMAND_MEDIA_RECORD 48

#define APPCOMMAND_MEDIA_REWIND 50

#define APPCOMMAND_MEDIA_STOP 13

#define APPCOMMAND_MIC_ON_OFF_TOGGLE 44

#define APPCOMMAND_MICROPHONE_VOLUME_DOWN 25

#define APPCOMMAND_MICROPHONE_VOLUME_MUTE 24

#define APPCOMMAND_MICROPHONE_VOLUME_UP 26

#define APPCOMMAND_NEW 29

#define APPCOMMAND_OPEN 30

#define APPCOMMAND_PASTE 38

#define APPCOMMAND_PRINT 33

#define APPCOMMAND_REDO 35

#define APPCOMMAND_REPLY_TO_MAIL 39

#define APPCOMMAND_SAVE 32

#define APPCOMMAND_SEND_MAIL 41

#define APPCOMMAND_SPELL_CHECK 42

#define APPCOMMAND_TREBLE_DOWN 22

#define APPCOMMAND_TREBLE_UP 23

#define APPCOMMAND_UNDO 34

#define APPCOMMAND_VOLUME_DOWN 9

#define APPCOMMAND_VOLUME_MUTE 8

#define APPCOMMAND_VOLUME_UP 10

#define ARW_BOTTOMLEFT 0

#define ARW_BOTTOMRIGHT 1

#define ARW_DOWN 4

#define ARW_HIDE 8

#define ARW_LEFT 0

#define ARW_RIGHT 0

#define ARW_STARTMASK 3

#define ARW_STARTRIGHT 1

#define ARW_STARTTOP 2

#define ARW_TOPLEFT 2

#define ARW_TOPRIGHT 3

#define ARW_UP 4

#define ASFW_ANY -1

#define ATF_ONOFFFEEDBACK 2

#define ATF_TIMEOUTON 1

#define AW_ACTIVATE 131072

#define AW_BLEND 524288

#define AW_CENTER 16

#define AW_HIDE 65536

#define AW_HOR_NEGATIVE 2

#define AW_HOR_POSITIVE 1

#define AW_SLIDE 262144

#define AW_VER_NEGATIVE 8

#define AW_VER_POSITIVE 4

#define BDR_INNER 12

#define BDR_OUTER 3

#define BDR_RAISED 5

#define BDR_RAISEDINNER 4

#define BDR_RAISEDOUTER 1

#define BDR_SUNKEN 10

#define BDR_SUNKENINNER 8

#define BDR_SUNKENOUTER 2

#define BF_ADJUST 8192

#define BF_BOTTOM 8

#define BF_BOTTOMLEFT 9

#define BF_BOTTOMRIGHT 12

#define BF_DIAGONAL 16

#define BF_DIAGONAL_ENDBOTTOMLEFT 25

#define BF_DIAGONAL_ENDBOTTOMRIGHT 28

#define BF_DIAGONAL_ENDTOPLEFT 19

#define BF_DIAGONAL_ENDTOPRIGHT 22

#define BF_FLAT 16384

#define BF_LEFT 1

#define BF_MIDDLE 2048

#define BF_MONO 32768

#define BF_RECT 15

#define BF_RIGHT 4

#define BF_SOFT 4096

#define BF_TOP 2

#define BF_TOPLEFT 3

#define BF_TOPRIGHT 6

#define BM_CLICK 245

#define BM_GETCHECK 240

#define BM_GETIMAGE 246

#define BM_GETSTATE 242

#define BM_SETCHECK 241

#define BM_SETDONTCLICK 248

#define BM_SETIMAGE 247

#define BM_SETSTATE 243

#define BM_SETSTYLE 244

#define BN_CLICKED 0

#define BN_DBLCLK 5

#define BN_DISABLE 4

#define BN_DOUBLECLICKED 5

#define BN_HILITE 2

#define BN_KILLFOCUS 7

#define BN_PAINT 1

#define BN_PUSHED 2

#define BN_SETFOCUS 6

#define BN_UNHILITE 3

#define BN_UNPUSHED 3

#define BROADCAST_QUERY_DENY 1112363332

#define BS_3STATE 5

#define BS_AUTO3STATE 6

#define BS_AUTOCHECKBOX 3

#define BS_AUTORADIOBUTTON 9

#define BS_BITMAP 128

#define BS_BOTTOM 2048

#define BS_CENTER 768

#define BS_CHECKBOX 2

#define BS_DEFPUSHBUTTON 1

#define BS_FLAT 32768

#define BS_GROUPBOX 7

#define BS_ICON 64

#define BS_LEFT 256

#define BS_LEFTTEXT 32

#define BS_MULTILINE 8192

#define BS_NOTIFY 16384

#define BS_OWNERDRAW 11

#define BS_PUSHBOX 10

#define BS_PUSHBUTTON 0

#define BS_PUSHLIKE 4096

#define BS_RADIOBUTTON 4

#define BS_RIGHT 512

#define BS_RIGHTBUTTON 32

#define BS_TEXT 0

#define BS_TOP 1024

#define BS_TYPEMASK 15

#define BS_USERBUTTON 8

#define BS_VCENTER 3072

#define BSF_ALLOWSFW 128

#define BSF_FLUSHDISK 4

#define BSF_FORCEIFHUNG 32

#define BSF_IGNORECURRENTTASK 2

#define BSF_LUID 1024

#define BSF_NOHANG 8

#define BSF_NOTIMEOUTIFNOTHUNG 64

#define BSF_POSTMESSAGE 16

#define BSF_QUERY 1

#define BSF_RETURNHDESK 512

#define BSF_SENDNOTIFYMESSAGE 256

#define BSM_ALLCOMPONENTS 0

#define BSM_ALLDESKTOPS 16

#define BSM_APPLICATIONS 8

#define BSM_INSTALLABLEDRIVERS 4

#define BSM_NETDRIVER 2

#define BSM_VXDS 1

#define BST_CHECKED 1

#define BST_FOCUS 8

#define BST_INDETERMINATE 2

#define BST_PUSHED 4

#define BST_UNCHECKED 0

#define CALERT_SYSTEM 6

#define CB_ADDSTRING 323

#define CB_DELETESTRING 324

#define CB_DIR 325

#define CB_ERR -1

#define CB_ERRSPACE -2

#define CB_FINDSTRING 332

#define CB_FINDSTRINGEXACT 344

#define CB_GETCOMBOBOXINFO 356

#define CB_GETCOUNT 326

#define CB_GETCURSEL 327

#define CB_GETDROPPEDCONTROLRECT 338

#define CB_GETDROPPEDSTATE 343

#define CB_GETDROPPEDWIDTH 351

#define CB_GETEDITSEL 320

#define CB_GETEXTENDEDUI 342

#define CB_GETHORIZONTALEXTENT 349

#define CB_GETITEMDATA 336

#define CB_GETITEMHEIGHT 340

#define CB_GETLBTEXT 328

#define CB_GETLBTEXTLEN 329

#define CB_GETLOCALE 346

#define CB_GETTOPINDEX 347

#define CB_INITSTORAGE 353

#define CB_INSERTSTRING 330

#define CB_LIMITTEXT 321

#define CB_MSGMAX 357

#define CB_OKAY 0

#define CB_RESETCONTENT 331

#define CB_SELECTSTRING 333

#define CB_SETCURSEL 334

#define CB_SETDROPPEDWIDTH 352

#define CB_SETEDITSEL 322

#define CB_SETEXTENDEDUI 341

#define CB_SETHORIZONTALEXTENT 350

#define CB_SETITEMDATA 337

#define CB_SETITEMHEIGHT 339

#define CB_SETLOCALE 345

#define CB_SETTOPINDEX 348

#define CB_SHOWDROPDOWN 335

#define CBN_CLOSEUP 8

#define CBN_DBLCLK 2

#define CBN_DROPDOWN 7

#define CBN_EDITCHANGE 5

#define CBN_EDITUPDATE 6

#define CBN_ERRSPACE -1

#define CBN_KILLFOCUS 4

#define CBN_SELCHANGE 1

#define CBN_SELENDCANCEL 10

#define CBN_SELENDOK 9

#define CBN_SETFOCUS 3

#define CBS_AUTOHSCROLL 64

#define CBS_DISABLENOSCROLL 2048

#define CBS_DROPDOWN 2

#define CBS_DROPDOWNLIST 3

#define CBS_HASSTRINGS 512

#define CBS_LOWERCASE 16384

#define CBS_NOINTEGRALHEIGHT 1024

#define CBS_OEMCONVERT 128

#define CBS_OWNERDRAWFIXED 16

#define CBS_OWNERDRAWVARIABLE 32

#define CBS_SIMPLE 1

#define CBS_SORT 256

#define CBS_UPPERCASE 8192

#define CCHILDREN_SCROLLBAR 5

#define CCHILDREN_TITLEBAR 5

#define CDS_DISABLE_UNSAFE_MODES 512

#define CDS_ENABLE_UNSAFE_MODES 256

#define CDS_FULLSCREEN 4

#define CDS_GLOBAL 8

#define CDS_NORESET 268435456

#define CDS_RESET 1073741824

#define CDS_RESET_EX 536870912

#define CDS_SET_PRIMARY 16

#define CDS_TEST 2

#define CDS_UPDATEREGISTRY 1

#define CDS_VIDEOPARAMETERS 32

#define CF_BITMAP 2

#define CF_DIB 8

#define CF_DIBV5 17

#define CF_DIF 5

#define CF_DSPBITMAP 130

#define CF_DSPENHMETAFILE 142

#define CF_DSPMETAFILEPICT 131

#define CF_DSPTEXT 129

#define CF_ENHMETAFILE 14

#define CF_GDIOBJFIRST 768

#define CF_GDIOBJLAST 1023

#define CF_HDROP 15

#define CF_LOCALE 16

#define CF_MAX 18

#define CF_METAFILEPICT 3

#define CF_OEMTEXT 7

#define CF_OWNERDISPLAY 128

#define CF_PALETTE 9

#define CF_PENDATA 10

#define CF_PRIVATEFIRST 512

#define CF_PRIVATELAST 767

#define CF_RIFF 11

#define CF_SYLK 4

#define CF_TEXT 1

#define CF_TIFF 6

#define CF_UNICODETEXT 13

#define CF_WAVE 12

#define CHILDID_SELF 0

#define COLOR_3DDKSHADOW 21

#define COLOR_3DFACE 15

#define COLOR_3DHIGHLIGHT 20

#define COLOR_3DHILIGHT 20

#define COLOR_3DLIGHT 22

#define COLOR_3DSHADOW 16

#define COLOR_ACTIVEBORDER 10

#define COLOR_ACTIVECAPTION 2

#define COLOR_APPWORKSPACE 12

#define COLOR_BACKGROUND 1

#define COLOR_BTNFACE 15

#define COLOR_BTNHIGHLIGHT 20

#define COLOR_BTNHILIGHT 20

#define COLOR_BTNSHADOW 16

#define COLOR_BTNTEXT 18

#define COLOR_CAPTIONTEXT 9

#define COLOR_DESKTOP 1

#define COLOR_GRADIENTACTIVECAPTION 27

#define COLOR_GRADIENTINACTIVECAPTION 28

#define COLOR_GRAYTEXT 17

#define COLOR_HIGHLIGHT 13

#define COLOR_HIGHLIGHTTEXT 14

#define COLOR_HOTLIGHT 26

#define COLOR_INACTIVEBORDER 11

#define COLOR_INACTIVECAPTION 3

#define COLOR_INACTIVECAPTIONTEXT 19

#define COLOR_INFOBK 24

#define COLOR_INFOTEXT 23

#define COLOR_MENU 4

#define COLOR_MENUBAR 30

#define COLOR_MENUHILIGHT 29

#define COLOR_MENUTEXT 7

#define COLOR_SCROLLBAR 0

#define COLOR_WINDOW 5

#define COLOR_WINDOWFRAME 6

#define COLOR_WINDOWTEXT 8

#define CONSOLE_APPLICATION_16BIT 1

#define CONSOLE_CARET_SELECTION 1

#define CONSOLE_CARET_VISIBLE 2

#define CS_BYTEALIGNCLIENT 4096

#define CS_BYTEALIGNWINDOW 8192

#define CS_CLASSDC 64

#define CS_DBLCLKS 8

#define CS_DROPSHADOW 131072

#define CS_GLOBALCLASS 16384

#define CS_HREDRAW 2

#define CS_IME 65536

#define CS_NOCLOSE 512

#define CS_OWNDC 32

#define CS_PARENTDC 128

#define CS_SAVEBITS 2048

#define CS_VREDRAW 1

#define CSOUND_SYSTEM 16

#define CTLCOLOR_BTN 3

#define CTLCOLOR_DLG 4

#define CTLCOLOR_EDIT 1

#define CTLCOLOR_LISTBOX 2

#define CTLCOLOR_MAX 7

#define CTLCOLOR_MSGBOX 0

#define CTLCOLOR_SCROLLBAR 5

#define CTLCOLOR_STATIC 6

#define CURSOR_SHOWING 1

#define CW_USEDEFAULT 2147483648

#define CWF_CREATE_ONLY 1

#define CWP_ALL 0

#define CWP_SKIPDISABLED 2

#define CWP_SKIPINVISIBLE 1

#define CWP_SKIPTRANSPARENT 4

#define DC_ACTIVE 1

#define DC_BUTTONS 4096

#define DC_GRADIENT 32

#define DC_HASDEFID 21323

#define DC_ICON 4

#define DC_INBUTTON 16

#define DC_SMALLCAP 2

#define DC_TEXT 8

#define DCX_CACHE 2

#define DCX_CLIPCHILDREN 8

#define DCX_CLIPSIBLINGS 16

#define DCX_EXCLUDERGN 64

#define DCX_EXCLUDEUPDATE 256

#define DCX_INTERSECTRGN 128

#define DCX_INTERSECTUPDATE 512

#define DCX_LOCKWINDOWUPDATE 1024

#define DCX_NORESETATTRS 4

#define DCX_PARENTCLIP 32

#define DCX_VALIDATE 2097152

#define DCX_WINDOW 1

#define DDL_ARCHIVE 32

#define DDL_DIRECTORY 16

#define DDL_DRIVES 16384

#define DDL_EXCLUSIVE 32768

#define DDL_HIDDEN 2

#define DDL_POSTMSGS 8192

#define DDL_READONLY 1

#define DDL_READWRITE 0

#define DDL_SYSTEM 4

#define DESKTOP_CREATEMENU 4

#define DESKTOP_CREATEWINDOW 2

#define DESKTOP_ENUMERATE 64

#define DESKTOP_HOOKCONTROL 8

#define DESKTOP_JOURNALPLAYBACK 32

#define DESKTOP_JOURNALRECORD 16

#define DESKTOP_READOBJECTS 1

#define DESKTOP_SWITCHDESKTOP 256

#define DESKTOP_WRITEOBJECTS 128

#define DEVICE_NOTIFY_ALL_INTERFACE_CLASSES 4

#define DEVICE_NOTIFY_SERVICE_HANDLE 1

#define DEVICE_NOTIFY_WINDOW_HANDLE 0

#define DF_ALLOWOTHERACCOUNTHOOK 1

#define DFC_BUTTON 4

#define DFC_CAPTION 1

#define DFC_MENU 2

#define DFC_POPUPMENU 5

#define DFC_SCROLL 3

#define DFCS_ADJUSTRECT 8192

#define DFCS_BUTTON3STATE 8

#define DFCS_BUTTONCHECK 0

#define DFCS_BUTTONPUSH 16

#define DFCS_BUTTONRADIO 4

#define DFCS_BUTTONRADIOIMAGE 1

#define DFCS_BUTTONRADIOMASK 2

#define DFCS_CAPTIONCLOSE 0

#define DFCS_CAPTIONHELP 4

#define DFCS_CAPTIONMAX 2

#define DFCS_CAPTIONMIN 1

#define DFCS_CAPTIONRESTORE 3

#define DFCS_CHECKED 1024

#define DFCS_FLAT 16384

#define DFCS_HOT 4096

#define DFCS_INACTIVE 256

#define DFCS_MENUARROW 0

#define DFCS_MENUARROWRIGHT 4

#define DFCS_MENUBULLET 2

#define DFCS_MENUCHECK 1

#define DFCS_MONO 32768

#define DFCS_PUSHED 512

#define DFCS_SCROLLCOMBOBOX 5

#define DFCS_SCROLLDOWN 1

#define DFCS_SCROLLLEFT 2

#define DFCS_SCROLLRIGHT 3

#define DFCS_SCROLLSIZEGRIP 8

#define DFCS_SCROLLSIZEGRIPRIGHT 16

#define DFCS_SCROLLUP 0

#define DFCS_TRANSPARENT 2048

#define DI_COMPAT 4

#define DI_DEFAULTSIZE 8

#define DI_IMAGE 2

#define DI_MASK 1

#define DI_NOMIRROR 16

#define DI_NORMAL 3

#define DIFFERENCE 11

#define DISP_CHANGE_BADDUALVIEW -6

#define DISP_CHANGE_BADFLAGS -4

#define DISP_CHANGE_BADMODE -2

#define DISP_CHANGE_BADPARAM -5

#define DISP_CHANGE_FAILED -1

#define DISP_CHANGE_NOTUPDATED -3

#define DISP_CHANGE_RESTART 1

#define DISP_CHANGE_SUCCESSFUL 0

#define DLGC_BUTTON 8192

#define DLGC_DEFPUSHBUTTON 16

#define DLGC_HASSETSEL 8

#define DLGC_RADIOBUTTON 64

#define DLGC_STATIC 256

#define DLGC_UNDEFPUSHBUTTON 32

#define DLGC_WANTALLKEYS 4

#define DLGC_WANTARROWS 1

#define DLGC_WANTCHARS 128

#define DLGC_WANTMESSAGE 4

#define DLGC_WANTTAB 2

#define DLGWINDOWEXTRA 30

#define DM_GETDEFID 1024

#define DM_REPOSITION 1026

#define DM_SETDEFID 1025

#define DO_DROPFILE 1162627398

#define DO_PRINTFILE 1414419024

#define DOF_DIRECTORY 32771

#define DOF_DOCUMENT 32770

#define DOF_EXECUTABLE 32769

#define DOF_MULTIPLE 32772

#define DOF_PROGMAN 1

#define DOF_SHELLDATA 2

#define DS_3DLOOK 4

#define DS_ABSALIGN 1

#define DS_CENTER 2048

#define DS_CENTERMOUSE 4096

#define DS_CONTEXTHELP 8192

#define DS_CONTROL 1024

#define DS_FIXEDSYS 8

#define DS_LOCALEDIT 32

#define DS_MODALFRAME 128

#define DS_NOFAILCREATE 16

#define DS_NOIDLEMSG 256

#define DS_SETFONT 64

#define DS_SETFOREGROUND 512

#define DS_SHELLFONT 72

#define DS_SYSMODAL 2

#define DSS_DISABLED 32

#define DSS_HIDEPREFIX 512

#define DSS_MONO 128

#define DSS_NORMAL 0

#define DSS_PREFIXONLY 1024

#define DSS_RIGHT 32768

#define DSS_UNION 16

#define DST_BITMAP 4

#define DST_COMPLEX 0

#define DST_ICON 3

#define DST_PREFIXTEXT 2

#define DST_TEXT 1

#define DT_BOTTOM 8

#define DT_CALCRECT 1024

#define DT_CENTER 1

#define DT_EDITCONTROL 8192

#define DT_END_ELLIPSIS 32768

#define DT_EXPANDTABS 64

#define DT_EXTERNALLEADING 512

#define DT_HIDEPREFIX 1048576

#define DT_INTERNAL 4096

#define DT_LEFT 0

#define DT_MODIFYSTRING 65536

#define DT_NOCLIP 256

#define DT_NOFULLWIDTHCHARBREAK 524288

#define DT_NOPREFIX 2048

#define DT_PATH_ELLIPSIS 16384

#define DT_PREFIXONLY 2097152

#define DT_RIGHT 2

#define DT_RTLREADING 131072

#define DT_SINGLELINE 32

#define DT_TABSTOP 128

#define DT_TOP 0

#define DT_VCENTER 4

#define DT_WORD_ELLIPSIS 262144

#define DT_WORDBREAK 16

#define DWL_DLGPROC 4

#define DWL_MSGRESULT 0

#define DWL_USER 8

#define DWLP_MSGRESULT 0

#define EC_LEFTMARGIN 1

#define EC_RIGHTMARGIN 2

#define EC_USEFONTINFO 65535

#define EDD_GET_DEVICE_INTERFACE_NAME 1

#define EDGE_BUMP 9

#define EDGE_ETCHED 6

#define EDGE_RAISED 5

#define EDGE_SUNKEN 10

#define EDS_RAWMODE 2

#define EDS_ROTATEDMODE 4

#define EIMES_CANCELCOMPSTRINFOCUS 2

#define EIMES_COMPLETECOMPSTRKILLFOCUS 4

#define EIMES_GETCOMPSTRATONCE 1

#define EM_CANUNDO 198

#define EM_CHARFROMPOS 215

#define EM_EMPTYUNDOBUFFER 205

#define EM_FMTLINES 200

#define EM_GETFIRSTVISIBLELINE 206

#define EM_GETHANDLE 189

#define EM_GETIMESTATUS 217

#define EM_GETLIMITTEXT 213

#define EM_GETLINE 196

#define EM_GETLINECOUNT 186

#define EM_GETMARGINS 212

#define EM_GETMODIFY 184

#define EM_GETPASSWORDCHAR 210

#define EM_GETRECT 178

#define EM_GETSEL 176

#define EM_GETTHUMB 190

#define EM_GETWORDBREAKPROC 209

#define EM_LIMITTEXT 197

#define EM_LINEFROMCHAR 201

#define EM_LINEINDEX 187

#define EM_LINELENGTH 193

#define EM_LINESCROLL 182

#define EM_POSFROMCHAR 214

#define EM_REPLACESEL 194

#define EM_SCROLL 181

#define EM_SCROLLCARET 183

#define EM_SETHANDLE 188

#define EM_SETIMESTATUS 216

#define EM_SETLIMITTEXT 197

#define EM_SETMARGINS 211

#define EM_SETMODIFY 185

#define EM_SETPASSWORDCHAR 204

#define EM_SETREADONLY 207

#define EM_SETRECT 179

#define EM_SETRECTNP 180

#define EM_SETSEL 177

#define EM_SETTABSTOPS 203

#define EM_SETWORDBREAKPROC 208

#define EM_UNDO 199

#define EMSIS_COMPOSITIONSTRING 1

#define EN_ALIGN_LTR_EC 1792

#define EN_ALIGN_RTL_EC 1793

#define EN_CHANGE 768

#define EN_ERRSPACE 1280

#define EN_HSCROLL 1537

#define EN_KILLFOCUS 512

#define EN_MAXTEXT 1281

#define EN_SETFOCUS 256

#define EN_UPDATE 1024

#define EN_VSCROLL 1538

#define ENDSESSION_CLOSEAPP 1

#define ENDSESSION_CRITICAL 1073741824

#define ENDSESSION_LOGOFF 2147483648

#define ENUM_CURRENT_SETTINGS -1

#define ENUM_REGISTRY_SETTINGS -2

#define ES_AUTOHSCROLL 128

#define ES_AUTOVSCROLL 64

#define ES_CENTER 1

#define ES_LEFT 0

#define ES_LOWERCASE 16

#define ES_MULTILINE 4

#define ES_NOHIDESEL 256

#define ES_NUMBER 8192

#define ES_OEMCONVERT 1024

#define ES_PASSWORD 32

#define ES_READONLY 2048

#define ES_RIGHT 2

#define ES_UPPERCASE 8

#define ES_WANTRETURN 4096

#define ESB_DISABLE_BOTH 3

#define ESB_DISABLE_DOWN 2

#define ESB_DISABLE_LEFT 1

#define ESB_DISABLE_LTUP 1

#define ESB_DISABLE_RIGHT 2

#define ESB_DISABLE_RTDN 2

#define ESB_DISABLE_UP 1

#define ESB_ENABLE_BOTH 0

#define EVENT_AIA_END 45055

#define EVENT_AIA_START 40960

#define EVENT_CONSOLE_CARET 16385

#define EVENT_CONSOLE_END 16639

#define EVENT_CONSOLE_END_APPLICATION 16391

#define EVENT_CONSOLE_LAYOUT 16389

#define EVENT_CONSOLE_START_APPLICATION 16390

#define EVENT_CONSOLE_UPDATE_REGION 16386

#define EVENT_CONSOLE_UPDATE_SCROLL 16388

#define EVENT_CONSOLE_UPDATE_SIMPLE 16387

#define EVENT_MAX 2147483647

#define EVENT_MIN 1

#define EVENT_OBJECT_ACCELERATORCHANGE 32786

#define EVENT_OBJECT_CONTENTSCROLLED 32789

#define EVENT_OBJECT_CREATE 32768

#define EVENT_OBJECT_DEFACTIONCHANGE 32785

#define EVENT_OBJECT_DESCRIPTIONCHANGE 32781

#define EVENT_OBJECT_DESTROY 32769

#define EVENT_OBJECT_END 33023

#define EVENT_OBJECT_FOCUS 32773

#define EVENT_OBJECT_HELPCHANGE 32784

#define EVENT_OBJECT_HIDE 32771

#define EVENT_OBJECT_INVOKED 32787

#define EVENT_OBJECT_LOCATIONCHANGE 32779

#define EVENT_OBJECT_NAMECHANGE 32780

#define EVENT_OBJECT_PARENTCHANGE 32783

#define EVENT_OBJECT_REORDER 32772

#define EVENT_OBJECT_SELECTION 32774

#define EVENT_OBJECT_SELECTIONADD 32775

#define EVENT_OBJECT_SELECTIONREMOVE 32776

#define EVENT_OBJECT_SELECTIONWITHIN 32777

#define EVENT_OBJECT_SHOW 32770

#define EVENT_OBJECT_STATECHANGE 32778

#define EVENT_OBJECT_TEXTSELECTIONCHANGED 32788

#define EVENT_OBJECT_VALUECHANGE 32782

#define EVENT_OEM_DEFINED_END 511

#define EVENT_OEM_DEFINED_START 257

#define EVENT_SYSTEM_ALERT 2

#define EVENT_SYSTEM_ARRANGMENTPREVIEW 32790

#define EVENT_SYSTEM_CAPTUREEND 9

#define EVENT_SYSTEM_CAPTURESTART 8

#define EVENT_SYSTEM_CONTEXTHELPEND 13

#define EVENT_SYSTEM_CONTEXTHELPSTART 12

#define EVENT_SYSTEM_DESKTOPSWITCH 32

#define EVENT_SYSTEM_DIALOGEND 17

#define EVENT_SYSTEM_DIALOGSTART 16

#define EVENT_SYSTEM_DRAGDROPEND 15

#define EVENT_SYSTEM_DRAGDROPSTART 14

#define EVENT_SYSTEM_END 255

#define EVENT_SYSTEM_FOREGROUND 3

#define EVENT_SYSTEM_MENUEND 5

#define EVENT_SYSTEM_MENUPOPUPEND 7

#define EVENT_SYSTEM_MENUPOPUPSTART 6

#define EVENT_SYSTEM_MENUSTART 4

#define EVENT_SYSTEM_MINIMIZEEND 23

#define EVENT_SYSTEM_MINIMIZESTART 22

#define EVENT_SYSTEM_MOVESIZEEND 11

#define EVENT_SYSTEM_MOVESIZESTART 10

#define EVENT_SYSTEM_SCROLLINGEND 19

#define EVENT_SYSTEM_SCROLLINGSTART 18

#define EVENT_SYSTEM_SOUND 1

#define EVENT_SYSTEM_SWITCHEND 21

#define EVENT_SYSTEM_SWITCHSTART 20

#define EVENT_UIA_EVENTID_END 20223

#define EVENT_UIA_EVENTID_START 19968

#define EVENT_UIA_PROPID_END 30207

#define EVENT_UIA_PROPID_START 29952

#define EWX_FORCE 4

#define EWX_FORCEIFHUNG 16

#define EWX_LOGOFF 0

#define EWX_POWEROFF 8

#define EWX_QUICKRESOLVE 32

#define EWX_REBOOT 2

#define EWX_RESTARTAPPS 64

#define EWX_SHUTDOWN 1

#define FALT 16

#define FAPPCOMMAND_KEY 0

#define FAPPCOMMAND_MASK 61440

#define FAPPCOMMAND_MOUSE 32768

#define FAPPCOMMAND_OEM 4096

#define FCONTROL 8

#define FE_FONTSMOOTHINGCLEARTYPE 2

#define FE_FONTSMOOTHINGORIENTATIONBGR 0

#define FE_FONTSMOOTHINGORIENTATIONRGB 1

#define FE_FONTSMOOTHINGSTANDARD 1

#define FKF_AVAILABLE 2

#define FKF_CLICKON 64

#define FKF_CONFIRMHOTKEY 8

#define FKF_FILTERKEYSON 1

#define FKF_HOTKEYACTIVE 4

#define FKF_HOTKEYSOUND 16

#define FKF_INDICATOR 32

#define FLASHW_ALL 3

#define FLASHW_CAPTION 1

#define FLASHW_STOP 0

#define FLASHW_TIMER 4

#define FLASHW_TIMERNOFG 12

#define FLASHW_TRAY 2

#define FNOINVERT 2

#define FSHIFT 4

#define FVIRTKEY 1

#define GA_PARENT 1

#define GA_ROOT 2

#define GA_ROOTOWNER 3

#define GC_ALLGESTURES 1

#define GC_PAN 1

#define GC_PAN_WITH_GUTTER 8

#define GC_PAN_WITH_INERTIA 16

#define GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY 4

#define GC_PAN_WITH_SINGLE_FINGER_VERTICALLY 2

#define GC_PRESSANDTAP 1

#define GC_ROLLOVER 1

#define GC_ROTATE 1

#define GC_TWOFINGERTAP 1

#define GC_ZOOM 1

#define GCF_INCLUDE_ANCESTORS 1

#define GCL_CBCLSEXTRA -20

#define GCL_CBWNDEXTRA -18

#define GCL_HBRBACKGROUND -10

#define GCL_HCURSOR -12

#define GCL_HICON -14

#define GCL_HICONSM -34

#define GCL_HMODULE -16

#define GCL_MENUNAME -8

#define GCL_STYLE -26

#define GCL_WNDPROC -24

#define GCLP_HBRBACKGROUND -10

#define GCLP_HCURSOR -12

#define GCLP_HICON -14

#define GCLP_HICONSM -34

#define GCLP_HMODULE -16

#define GCLP_MENUNAME -8

#define GCLP_WNDPROC -24

#define GCW_ATOM -32

#define GESTURECONFIGMAXCOUNT 256

#define GetSysModalWindow 0

#define GF_BEGIN 1

#define GF_END 4

#define GF_INERTIA 2

#define GID_BEGIN 1

#define GID_END 2

#define GID_PAN 4

#define GID_PRESSANDTAP 7

#define GID_ROLLOVER 7

#define GID_ROTATE 5

#define GID_TWOFINGERTAP 6

#define GID_ZOOM 3

#define GIDC_ARRIVAL 1

#define GIDC_REMOVAL 2

#define GMDI_GOINTOPOPUPS 2

#define GMDI_USEDISABLED 1

#define GMMP_USE_DISPLAY_POINTS 1

#define GMMP_USE_HIGH_RESOLUTION_POINTS 2

#define GR_GDIOBJECTS 0

#define GR_GDIOBJECTS_PEAK 2

#define GR_GLOBAL -2

#define GR_USEROBJECTS 1

#define GR_USEROBJECTS_PEAK 4

#define GUI_16BITTASK 32

#define GUI_CARETBLINKING 1

#define GUI_INMENUMODE 4

#define GUI_INMOVESIZE 2

#define GUI_POPUPMENUMODE 16

#define GUI_SYSTEMMENUMODE 8

#define GW_CHILD 5

#define GW_ENABLEDPOPUP 6

#define GW_HWNDFIRST 0

#define GW_HWNDLAST 1

#define GW_HWNDNEXT 2

#define GW_HWNDPREV 3

#define GW_MAX 6

#define GW_OWNER 4

#define GWL_EXSTYLE -20

#define GWL_HINSTANCE -6

#define GWL_HWNDPARENT -8

#define GWL_ID -12

#define GWL_STYLE -16

#define GWL_USERDATA -21

#define GWL_WNDPROC -4

#define GWLP_HINSTANCE -6

#define GWLP_HWNDPARENT -8

#define GWLP_ID -12

#define GWLP_USERDATA -21

#define GWLP_WNDPROC -4

#define HBMMENU_CALLBACK -1

#define HBMMENU_MBAR_CLOSE 5

#define HBMMENU_MBAR_CLOSE_D 6

#define HBMMENU_MBAR_MINIMIZE 3

#define HBMMENU_MBAR_MINIMIZE_D 7

#define HBMMENU_MBAR_RESTORE 2

#define HBMMENU_POPUP_CLOSE 8

#define HBMMENU_POPUP_MAXIMIZE 10

#define HBMMENU_POPUP_MINIMIZE 11

#define HBMMENU_POPUP_RESTORE 9

#define HBMMENU_SYSTEM 1

#define HC_ACTION 0

#define HC_GETNEXT 1

#define HC_NOREM 3

#define HC_NOREMOVE 3

#define HC_SKIP 2

#define HC_SYSMODALOFF 5

#define HC_SYSMODALON 4

#define HCBT_ACTIVATE 5

#define HCBT_CLICKSKIPPED 6

#define HCBT_CREATEWND 3

#define HCBT_DESTROYWND 4

#define HCBT_KEYSKIPPED 7

#define HCBT_MINMAX 1

#define HCBT_MOVESIZE 0

#define HCBT_QS 2

#define HCBT_SETFOCUS 9

#define HCBT_SYSCOMMAND 8

#define HCF_AVAILABLE 2

#define HCF_CONFIRMHOTKEY 8

#define HCF_DEFAULTDESKTOP 512

#define HCF_HIGHCONTRASTON 1

#define HCF_HOTKEYACTIVE 4

#define HCF_HOTKEYAVAILABLE 64

#define HCF_HOTKEYSOUND 16

#define HCF_INDICATOR 32

#define HCF_LOGONDESKTOP 256

#define HELP_COMMAND 258

#define HELP_CONTENTS 3

#define HELP_CONTEXT 1

#define HELP_CONTEXTMENU 10

#define HELP_CONTEXTPOPUP 8

#define HELP_FINDER 11

#define HELP_FORCEFILE 9

#define HELP_HELPONHELP 4

#define HELP_INDEX 3

#define HELP_KEY 257

#define HELP_MULTIKEY 513

#define HELP_PARTIALKEY 261

#define HELP_QUIT 2

#define HELP_SETCONTENTS 5

#define HELP_SETINDEX 5

#define HELP_SETPOPUP_POS 13

#define HELP_SETWINPOS 515

#define HELP_TCARD 32768

#define HELP_TCARD_DATA 16

#define HELP_TCARD_OTHER_CALLER 17

#define HELP_WM_HELP 12

#define HELPINFO_MENUITEM 2

#define HELPINFO_WINDOW 1

#define HIDE_WINDOW 0

#define HKL_NEXT 1

#define HKL_PREV 0

#define HOVER_DEFAULT 4294967295

#define HSHELL_ACCESSIBILITYSTATE 11

#define HSHELL_ACTIVATESHELLWINDOW 3

#define HSHELL_APPCOMMAND 12

#define HSHELL_ENDTASK 10

#define HSHELL_FLASH 32774

#define HSHELL_GETMINRECT 5

#define HSHELL_HIGHBIT 32768

#define HSHELL_LANGUAGE 8

#define HSHELL_REDRAW 6

#define HSHELL_RUDEAPPACTIVATED 32772

#define HSHELL_SYSMENU 9

#define HSHELL_TASKMAN 7

#define HSHELL_WINDOWACTIVATED 4

#define HSHELL_WINDOWCREATED 1

#define HSHELL_WINDOWDESTROYED 2

#define HSHELL_WINDOWREPLACED 13

#define HSHELL_WINDOWREPLACING 14

#define HTBORDER 18

#define HTBOTTOM 15

#define HTBOTTOMLEFT 16

#define HTBOTTOMRIGHT 17

#define HTCAPTION 2

#define HTCLIENT 1

#define HTCLOSE 20

#define HTERROR -2

#define HTGROWBOX 4

#define HTHELP 21

#define HTHSCROLL 6

#define HTLEFT 10

#define HTMAXBUTTON 9

#define HTMENU 5

#define HTMINBUTTON 8

#define HTNOWHERE 0

#define HTOBJECT 19

#define HTREDUCE 8

#define HTRIGHT 11

#define HTSIZE 4

#define HTSIZEFIRST 10

#define HTSIZELAST 17

#define HTSYSMENU 3

#define HTTOP 12

#define HTTOPLEFT 13

#define HTTOPRIGHT 14

#define HTTRANSPARENT -1

#define HTVSCROLL 7

#define HTZOOM 9

#define HWND_BOTTOM 1

#define HWND_BROADCAST 65535

#define HWND_DESKTOP 0

#define HWND_MESSAGE -3

#define HWND_NOTOPMOST -2

#define HWND_TOP 0

#define HWND_TOPMOST -1

#define ICON_BIG 1

#define ICON_SMALL 0

#define ICON_SMALL2 2

#define IDABORT 3

#define IDANI_CAPTION 3

#define IDANI_OPEN 1

#define IDCANCEL 2

#define IDCLOSE 8

#define IDCONTINUE 11

#define IDH_CANCEL 28444

#define IDH_GENERIC_HELP_BUTTON 28442

#define IDH_HELP 28445

#define IDH_MISSING_CONTEXT 28441

#define IDH_NO_HELP 28440

#define IDH_OK 28443

#define IDHELP 9

#define IDHOT_SNAPDESKTOP -2

#define IDHOT_SNAPWINDOW -1

#define IDIGNORE 5

#define IDNO 7

#define IDOK 1

#define IDRETRY 4

#define IDTIMEOUT 32000

#define IDTRYAGAIN 10

#define IDYES 6

#define IMAGE_BITMAP 0

#define IMAGE_CURSOR 2

#define IMAGE_ENHMETAFILE 3

#define IMAGE_ICON 1

#define INDEXID_CONTAINER 0

#define INDEXID_OBJECT 0

#define INPUT_HARDWARE 2

#define INPUT_KEYBOARD 1

#define INPUT_MOUSE 0

#define INPUTLANGCHANGE_BACKWARD 4

#define INPUTLANGCHANGE_FORWARD 2

#define INPUTLANGCHANGE_SYSCHARSET 1

#define ISMEX_CALLBACK 4

#define ISMEX_NOSEND 0

#define ISMEX_NOTIFY 2

#define ISMEX_REPLIED 8

#define ISMEX_SEND 1

#define KEYBOARD_OVERRUN_MAKE_CODE 255

#define KEYEVENTF_EXTENDEDKEY 1

#define KEYEVENTF_KEYUP 2

#define KEYEVENTF_SCANCODE 8

#define KEYEVENTF_UNICODE 4

#define KF_ALTDOWN 8192

#define KF_DLGMODE 2048

#define KF_EXTENDED 256

#define KF_MENUMODE 4096

#define KF_REPEAT 16384

#define KF_UP 32768

#define KL_NAMELENGTH 9

#define KLF_ACTIVATE 1

#define KLF_NOTELLSHELL 128

#define KLF_REORDER 8

#define KLF_REPLACELANG 16

#define KLF_RESET 1073741824

#define KLF_SETFORPROCESS 256

#define KLF_SHIFTLOCK 65536

#define KLF_SUBSTITUTE_OK 2

#define LB_ADDFILE 406

#define LB_ADDSTRING 384

#define LB_CTLCODE 0

#define LB_DELETESTRING 386

#define LB_DIR 397

#define LB_ERR -1

#define LB_ERRSPACE -2

#define LB_FINDSTRING 399

#define LB_FINDSTRINGEXACT 418

#define LB_GETANCHORINDEX 413

#define LB_GETCARETINDEX 415

#define LB_GETCOUNT 395

#define LB_GETCURSEL 392

#define LB_GETHORIZONTALEXTENT 403

#define LB_GETITEMDATA 409

#define LB_GETITEMHEIGHT 417

#define LB_GETITEMRECT 408

#define LB_GETLISTBOXINFO 434

#define LB_GETLOCALE 422

#define LB_GETSEL 391

#define LB_GETSELCOUNT 400

#define LB_GETSELITEMS 401

#define LB_GETTEXT 393

#define LB_GETTEXTLEN 394

#define LB_GETTOPINDEX 398

#define LB_INITSTORAGE 424

#define LB_INSERTSTRING 385

#define LB_ITEMFROMPOINT 425

#define LB_MSGMAX 435

#define LB_OKAY 0

#define LB_RESETCONTENT 388

#define LB_SELECTSTRING 396

#define LB_SELITEMRANGE 411

#define LB_SELITEMRANGEEX 387

#define LB_SETANCHORINDEX 412

#define LB_SETCARETINDEX 414

#define LB_SETCOLUMNWIDTH 405

#define LB_SETCOUNT 423

#define LB_SETCURSEL 390

#define LB_SETHORIZONTALEXTENT 404

#define LB_SETITEMDATA 410

#define LB_SETITEMHEIGHT 416

#define LB_SETLOCALE 421

#define LB_SETSEL 389

#define LB_SETTABSTOPS 402

#define LB_SETTOPINDEX 407

#define LBN_DBLCLK 2

#define LBN_ERRSPACE -2

#define LBN_KILLFOCUS 5

#define LBN_SELCANCEL 3

#define LBN_SELCHANGE 1

#define LBN_SETFOCUS 4

#define LBS_COMBOBOX 32768

#define LBS_DISABLENOSCROLL 4096

#define LBS_EXTENDEDSEL 2048

#define LBS_HASSTRINGS 64

#define LBS_MULTICOLUMN 512

#define LBS_MULTIPLESEL 8

#define LBS_NODATA 8192

#define LBS_NOINTEGRALHEIGHT 256

#define LBS_NOREDRAW 4

#define LBS_NOSEL 16384

#define LBS_NOTIFY 1

#define LBS_OWNERDRAWFIXED 16

#define LBS_OWNERDRAWVARIABLE 32

#define LBS_SORT 2

#define LBS_STANDARD 10485763

#define LBS_USETABSTOPS 128

#define LBS_WANTKEYBOARDINPUT 1024

#define LLKHF_ALTDOWN 32

#define LLKHF_EXTENDED 1

#define LLKHF_INJECTED 16

#define LLKHF_UP 128

#define LLMHF_INJECTED 1

#define LR_COLOR 2

#define LR_COPYDELETEORG 8

#define LR_COPYFROMRESOURCE 16384

#define LR_COPYRETURNORG 4

#define LR_CREATEDIBSECTION 8192

#define LR_DEFAULTCOLOR 0

#define LR_DEFAULTSIZE 64

#define LR_LOADFROMFILE 16

#define LR_LOADMAP3DCOLORS 4096

#define LR_LOADTRANSPARENT 32

#define LR_MONOCHROME 1

#define LR_SHARED 32768

#define LR_VGACOLOR 128

#define LSFW_LOCK 1

#define LSFW_UNLOCK 2

#define LWA_ALPHA 2

#define LWA_COLORKEY 1

#define MA_ACTIVATE 1

#define MA_ACTIVATEANDEAT 2

#define MA_NOACTIVATE 3

#define MA_NOACTIVATEANDEAT 4

#define MAPVK_VK_TO_CHAR 2

#define MAPVK_VK_TO_VSC 0

#define MAPVK_VK_TO_VSC_EX 4

#define MAPVK_VSC_TO_VK 1

#define MAPVK_VSC_TO_VK_EX 3

#define MAX_STR_BLOCKREASON 256

#define MB_ABORTRETRYIGNORE 2

#define MB_APPLMODAL 0

#define MB_CANCELTRYCONTINUE 6

#define MB_DEFAULT_DESKTOP_ONLY 131072

#define MB_DEFBUTTON1 0

#define MB_DEFBUTTON2 256

#define MB_DEFBUTTON3 512

#define MB_DEFBUTTON4 768

#define MB_DEFMASK 3840

#define MB_HELP 16384

#define MB_ICONASTERISK 64

#define MB_ICONERROR 16

#define MB_ICONEXCLAMATION 48

#define MB_ICONHAND 16

#define MB_ICONINFORMATION 64

#define MB_ICONMASK 240

#define MB_ICONQUESTION 32

#define MB_ICONSTOP 16

#define MB_ICONWARNING 48

#define MB_MISCMASK 49152

#define MB_MODEMASK 12288

#define MB_NOFOCUS 32768

#define MB_OK 0

#define MB_OKCANCEL 1

#define MB_RETRYCANCEL 5

#define MB_RIGHT 524288

#define MB_RTLREADING 1048576

#define MB_SERVICE_NOTIFICATION 2097152

#define MB_SERVICE_NOTIFICATION_NT3X 262144

#define MB_SETFOREGROUND 65536

#define MB_SYSTEMMODAL 4096

#define MB_TASKMODAL 8192

#define MB_TOPMOST 262144

#define MB_TYPEMASK 15

#define MB_USERICON 128

#define MB_YESNO 4

#define MB_YESNOCANCEL 3

#define MDIS_ALLCHILDSTYLES 1

#define MDITILE_HORIZONTAL 1

#define MDITILE_SKIPDISABLED 2

#define MDITILE_VERTICAL 0

#define MDITILE_ZORDER 4

#define METRICS_USEDEFAULT -1

#define MF_APPEND 256

#define MF_BITMAP 4

#define MF_BYCOMMAND 0

#define MF_BYPOSITION 1024

#define MF_CHANGE 128

#define MF_CHECKED 8

#define MF_DEFAULT 4096

#define MF_DELETE 512

#define MF_DISABLED 2

#define MF_ENABLED 0

#define MF_END 128

#define MF_GRAYED 1

#define MF_HELP 16384

#define MF_HILITE 128

#define MF_INSERT 0

#define MF_MENUBARBREAK 32

#define MF_MENUBREAK 64

#define MF_MOUSESELECT 32768

#define MF_OWNERDRAW 256

#define MF_POPUP 16

#define MF_REMOVE 4096

#define MF_RIGHTJUSTIFY 16384

#define MF_SEPARATOR 2048

#define MF_STRING 0

#define MF_SYSMENU 8192

#define MF_UNCHECKED 0

#define MF_UNHILITE 0

#define MF_USECHECKBITMAPS 512

#define MFS_CHECKED 8

#define MFS_DEFAULT 4096

#define MFS_DISABLED 3

#define MFS_ENABLED 0

#define MFS_GRAYED 3

#define MFS_HILITE 128

#define MFS_UNCHECKED 0

#define MFS_UNHILITE 0

#define MFT_BITMAP 4

#define MFT_MENUBARBREAK 32

#define MFT_MENUBREAK 64

#define MFT_OWNERDRAW 256

#define MFT_RADIOCHECK 512

#define MFT_RIGHTJUSTIFY 16384

#define MFT_RIGHTORDER 8192

#define MFT_SEPARATOR 2048

#define MFT_STRING 0

#define MIIM_BITMAP 128

#define MIIM_CHECKMARKS 8

#define MIIM_DATA 32

#define MIIM_FTYPE 256

#define MIIM_ID 2

#define MIIM_STATE 1

#define MIIM_STRING 64

#define MIIM_SUBMENU 4

#define MIIM_TYPE 16

#define MIM_APPLYTOSUBMENUS 2147483648

#define MIM_BACKGROUND 2

#define MIM_HELPID 4

#define MIM_MAXHEIGHT 1

#define MIM_MENUDATA 8

#define MIM_STYLE 16

#define MK_CONTROL 8

#define MK_LBUTTON 1

#define MK_MBUTTON 16

#define MK_RBUTTON 2

#define MK_SHIFT 4

#define MK_XBUTTON1 32

#define MK_XBUTTON2 64

#define MKF_AVAILABLE 2

#define MKF_CONFIRMHOTKEY 8

#define MKF_HOTKEYACTIVE 4

#define MKF_HOTKEYSOUND 16

#define MKF_INDICATOR 32

#define MKF_LEFTBUTTONDOWN 16777216

#define MKF_LEFTBUTTONSEL 268435456

#define MKF_MODIFIERS 64

#define MKF_MOUSEKEYSON 1

#define MKF_MOUSEMODE 2147483648

#define MKF_REPLACENUMBERS 128

#define MKF_RIGHTBUTTONDOWN 33554432

#define MKF_RIGHTBUTTONSEL 536870912

#define MN_GETHMENU 481

#define MNC_CLOSE 1

#define MNC_EXECUTE 2

#define MNC_IGNORE 0

#define MNC_SELECT 3

#define MND_CONTINUE 0

#define MND_ENDMENU 1

#define MNGO_NOERROR 1

#define MNGO_NOINTERFACE 0

#define MNGOF_BOTTOMGAP 2

#define MNGOF_TOPGAP 1

#define MNS_AUTODISMISS 268435456

#define MNS_CHECKORBMP 67108864

#define MNS_DRAGDROP 536870912

#define MNS_MODELESS 1073741824

#define MNS_NOCHECK 2147483648

#define MNS_NOTIFYBYPOS 134217728

#define MOD_ALT 1

#define MOD_CONTROL 2

#define MOD_NOREPEAT 16384

#define MOD_SHIFT 4

#define MOD_WIN 8

#define MONITOR_DEFAULTTONEAREST 2

#define MONITOR_DEFAULTTONULL 0

#define MONITOR_DEFAULTTOPRIMARY 1

#define MONITORINFOF_PRIMARY 1

#define MOUSE_ATTRIBUTES_CHANGED 4

#define MOUSE_MOVE_ABSOLUTE 1

#define MOUSE_MOVE_NOCOALESCE 8

#define MOUSE_MOVE_RELATIVE 0

#define MOUSE_VIRTUAL_DESKTOP 2

#define MOUSEEVENTF_ABSOLUTE 32768

#define MOUSEEVENTF_HWHEEL 4096

#define MOUSEEVENTF_LEFTDOWN 2

#define MOUSEEVENTF_LEFTUP 4

#define MOUSEEVENTF_MIDDLEDOWN 32

#define MOUSEEVENTF_MIDDLEUP 64

#define MOUSEEVENTF_MOVE 1

#define MOUSEEVENTF_MOVE_NOCOALESCE 8192

#define MOUSEEVENTF_RIGHTDOWN 8

#define MOUSEEVENTF_RIGHTUP 16

#define MOUSEEVENTF_VIRTUALDESK 16384

#define MOUSEEVENTF_WHEEL 2048

#define MOUSEEVENTF_XDOWN 128

#define MOUSEEVENTF_XUP 256

#define MSGF_DIALOGBOX 0

#define MSGF_MAX 8

#define MSGF_MENU 2

#define MSGF_MESSAGEBOX 1

#define MSGF_NEXTWINDOW 6

#define MSGF_SCROLLBAR 5

#define MSGF_USER 4096

#define MSGFLT_ADD 1

#define MSGFLT_ALLOW 1

#define MSGFLT_DISALLOW 2

#define MSGFLT_REMOVE 2

#define MSGFLT_RESET 0

#define MSGFLTINFO_ALLOWED_HIGHER 3

#define MSGFLTINFO_ALREADYALLOWED_FORWND 1

#define MSGFLTINFO_ALREADYDISALLOWED_FORWND 2

#define MSGFLTINFO_NONE 0

#define MWMO_ALERTABLE 2

#define MWMO_INPUTAVAILABLE 4

#define MWMO_WAITALL 1

#define NF_QUERY 3

#define NF_REQUERY 4

#define NFR_ANSI 1

#define NFR_UNICODE 2

#define NID_EXTERNAL_PEN 8

#define NID_EXTERNAL_TOUCH 2

#define NID_INTEGRATED_PEN 4

#define NID_INTEGRATED_TOUCH 1

#define NID_MULTI_INPUT 64

#define NID_READY 128

#define OBJID_ALERT 4294967286

#define OBJID_CARET 4294967288

#define OBJID_CLIENT 4294967292

#define OBJID_CURSOR 4294967287

#define OBJID_HSCROLL 4294967290

#define OBJID_MENU 4294967293

#define OBJID_NATIVEOM 4294967280

#define OBJID_QUERYCLASSNAMEIDX 4294967284

#define OBJID_SIZEGRIP 4294967289

#define OBJID_SOUND 4294967285

#define OBJID_SYSMENU 4294967295

#define OBJID_TITLEBAR 4294967294

#define OBJID_VSCROLL 4294967291

#define OBJID_WINDOW 0

#define ODA_DRAWENTIRE 1

#define ODA_FOCUS 4

#define ODA_SELECT 2

#define ODS_CHECKED 8

#define ODS_COMBOBOXEDIT 4096

#define ODS_DEFAULT 32

#define ODS_DISABLED 4

#define ODS_FOCUS 16

#define ODS_GRAYED 2

#define ODS_HOTLIGHT 64

#define ODS_INACTIVE 128

#define ODS_NOACCEL 256

#define ODS_NOFOCUSRECT 512

#define ODS_SELECTED 1

#define ODT_BUTTON 4

#define ODT_COMBOBOX 3

#define ODT_LISTBOX 2

#define ODT_MENU 1

#define ODT_STATIC 5

#define ORD_LANGDRIVER 1

#define PBT_APMBATTERYLOW 9

#define PBT_APMOEMEVENT 11

#define PBT_APMPOWERSTATUSCHANGE 10

#define PBT_APMQUERYSTANDBY 1

#define PBT_APMQUERYSTANDBYFAILED 3

#define PBT_APMQUERYSUSPEND 0

#define PBT_APMQUERYSUSPENDFAILED 2

#define PBT_APMRESUMEAUTOMATIC 18

#define PBT_APMRESUMECRITICAL 6

#define PBT_APMRESUMESTANDBY 8

#define PBT_APMRESUMESUSPEND 7

#define PBT_APMSTANDBY 5

#define PBT_APMSUSPEND 4

#define PBT_POWERSETTINGCHANGE 32787

#define PBTF_APMRESUMEFROMFAILURE 1

#define PM_NOREMOVE 0

#define PM_NOYIELD 2

#define PM_QS_INPUT 67567616

#define PM_QS_PAINT 2097152

#define PM_QS_POSTMESSAGE 9961472

#define PM_QS_SENDMESSAGE 4194304

#define PM_REMOVE 1

#define PMB_ACTIVE 1

#define PRF_CHECKVISIBLE 1

#define PRF_CHILDREN 16

#define PRF_CLIENT 4

#define PRF_ERASEBKGND 8

#define PRF_NONCLIENT 2

#define PRF_OWNED 32

#define PW_CLIENTONLY 1

#define PWR_CRITICALRESUME 3

#define PWR_FAIL -1

#define PWR_OK 1

#define PWR_SUSPENDREQUEST 1

#define PWR_SUSPENDRESUME 2

#define QS_ALLPOSTMESSAGE 256

#define QS_HOTKEY 128

#define QS_KEY 1

#define QS_MOUSEBUTTON 4

#define QS_MOUSEMOVE 2

#define QS_PAINT 32

#define QS_POSTMESSAGE 8

#define QS_RAWINPUT 1024

#define QS_SENDMESSAGE 64

#define QS_TIMER 16

#define RDW_ALLCHILDREN 128

#define RDW_ERASE 4

#define RDW_ERASENOW 512

#define RDW_FRAME 1024

#define RDW_INTERNALPAINT 2

#define RDW_INVALIDATE 1

#define RDW_NOCHILDREN 64

#define RDW_NOERASE 32

#define RDW_NOFRAME 2048

#define RDW_NOINTERNALPAINT 16

#define RDW_UPDATENOW 256

#define RDW_VALIDATE 8

#define RES_CURSOR 2

#define RES_ICON 1

#define RI_KEY_BREAK 1

#define RI_KEY_E0 2

#define RI_KEY_E1 4

#define RI_KEY_MAKE 0

#define RI_KEY_TERMSRV_SET_LED 8

#define RI_KEY_TERMSRV_SHADOW 16

#define RI_MOUSE_BUTTON_1_DOWN 1

#define RI_MOUSE_BUTTON_1_UP 2

#define RI_MOUSE_BUTTON_2_DOWN 4

#define RI_MOUSE_BUTTON_2_UP 8

#define RI_MOUSE_BUTTON_3_DOWN 16

#define RI_MOUSE_BUTTON_3_UP 32

#define RI_MOUSE_BUTTON_4_DOWN 64

#define RI_MOUSE_BUTTON_4_UP 128

#define RI_MOUSE_BUTTON_5_DOWN 256

#define RI_MOUSE_BUTTON_5_UP 512

#define RI_MOUSE_LEFT_BUTTON_DOWN 1

#define RI_MOUSE_LEFT_BUTTON_UP 2

#define RI_MOUSE_MIDDLE_BUTTON_DOWN 16

#define RI_MOUSE_MIDDLE_BUTTON_UP 32

#define RI_MOUSE_RIGHT_BUTTON_DOWN 4

#define RI_MOUSE_RIGHT_BUTTON_UP 8

#define RI_MOUSE_WHEEL 1024

#define RID_HEADER 268435461

#define RID_INPUT 268435459

#define RIDEV_APPKEYS 1024

#define RIDEV_CAPTUREMOUSE 512

#define RIDEV_DEVNOTIFY 8192

#define RIDEV_EXCLUDE 16

#define RIDEV_EXINPUTSINK 4096

#define RIDEV_EXMODEMASK 240

#define RIDEV_INPUTSINK 256

#define RIDEV_NOHOTKEYS 512

#define RIDEV_NOLEGACY 48

#define RIDEV_PAGEONLY 32

#define RIDEV_REMOVE 1

#define RIDI_DEVICEINFO 536870923

#define RIDI_DEVICENAME 536870919

#define RIDI_PREPARSEDDATA 536870917

#define RIM_INPUT 0

#define RIM_INPUTSINK 1

#define RIM_TYPEHID 2

#define RIM_TYPEKEYBOARD 1

#define RIM_TYPEMOUSE 0

#define SB_BOTH 3

#define SB_BOTTOM 7

#define SB_CTL 2

#define SB_ENDSCROLL 8

#define SB_HORZ 0

#define SB_LEFT 6

#define SB_LINEDOWN 1

#define SB_LINELEFT 0

#define SB_LINERIGHT 1

#define SB_LINEUP 0

#define SB_PAGEDOWN 3

#define SB_PAGELEFT 2

#define SB_PAGERIGHT 3

#define SB_PAGEUP 2

#define SB_RIGHT 7

#define SB_THUMBPOSITION 4

#define SB_THUMBTRACK 5

#define SB_TOP 6

#define SB_VERT 1

#define SBM_ENABLE_ARROWS 228

#define SBM_GETPOS 225

#define SBM_GETRANGE 227

#define SBM_GETSCROLLBARINFO 235

#define SBM_GETSCROLLINFO 234

#define SBM_SETPOS 224

#define SBM_SETRANGE 226

#define SBM_SETRANGEREDRAW 230

#define SBM_SETSCROLLINFO 233

#define SBS_BOTTOMALIGN 4

#define SBS_HORZ 0

#define SBS_LEFTALIGN 2

#define SBS_RIGHTALIGN 4

#define SBS_SIZEBOX 8

#define SBS_SIZEBOXBOTTOMRIGHTALIGN 4

#define SBS_SIZEBOXTOPLEFTALIGN 2

#define SBS_SIZEGRIP 16

#define SBS_TOPALIGN 2

#define SBS_VERT 1

#define SC_ARRANGE 61712

#define SC_CLOSE 61536

#define SC_CONTEXTHELP 61824

#define SC_DEFAULT 61792

#define SC_HOTKEY 61776

#define SC_HSCROLL 61568

#define SC_ICON 61472

#define SC_KEYMENU 61696

#define SC_MAXIMIZE 61488

#define SC_MINIMIZE 61472

#define SC_MONITORPOWER 61808

#define SC_MOUSEMENU 61584

#define SC_MOVE 61456

#define SC_NEXTWINDOW 61504

#define SC_PREVWINDOW 61520

#define SC_RESTORE 61728

#define SC_SCREENSAVE 61760

#define SC_SEPARATOR 61455

#define SC_SIZE 61440

#define SC_TASKLIST 61744

#define SC_VSCROLL 61552

#define SC_ZOOM 61488

#define SCF_ISSECURE 1

#define SERKF_AVAILABLE 2

#define SERKF_INDICATOR 4

#define SERKF_SERIALKEYSON 1

#define SETWALLPAPER_DEFAULT -1

#define SHOW_FULLSCREEN 3

#define SHOW_ICONWINDOW 2

#define SHOW_OPENNOACTIVATE 4

#define SHOW_OPENWINDOW 1

#define SIF_ALL 23

#define SIF_DISABLENOSCROLL 8

#define SIF_PAGE 2

#define SIF_POS 4

#define SIF_RANGE 1

#define SIF_TRACKPOS 16

#define SIZE_MAXHIDE 4

#define SIZE_MAXIMIZED 2

#define SIZE_MAXSHOW 3

#define SIZE_MINIMIZED 1

#define SIZE_RESTORED 0

#define SIZEFULLSCREEN 2

#define SIZEICONIC 1

#define SIZENORMAL 0

#define SIZEZOOMHIDE 4

#define SIZEZOOMSHOW 3

#define SKF_AUDIBLEFEEDBACK 64

#define SKF_AVAILABLE 2

#define SKF_CONFIRMHOTKEY 8

#define SKF_HOTKEYACTIVE 4

#define SKF_HOTKEYSOUND 16

#define SKF_INDICATOR 32

#define SKF_LALTLATCHED 268435456

#define SKF_LALTLOCKED 1048576

#define SKF_LCTLLATCHED 67108864

#define SKF_LCTLLOCKED 262144

#define SKF_LSHIFTLATCHED 16777216

#define SKF_LSHIFTLOCKED 65536

#define SKF_LWINLATCHED 1073741824

#define SKF_LWINLOCKED 4194304

#define SKF_RALTLATCHED 536870912

#define SKF_RALTLOCKED 2097152

#define SKF_RCTLLATCHED 134217728

#define SKF_RCTLLOCKED 524288

#define SKF_RSHIFTLATCHED 33554432

#define SKF_RSHIFTLOCKED 131072

#define SKF_RWINLATCHED 2147483648

#define SKF_RWINLOCKED 8388608

#define SKF_STICKYKEYSON 1

#define SKF_TRISTATE 128

#define SKF_TWOKEYSOFF 256

#define SLE_ERROR 1

#define SLE_MINORERROR 2

#define SLE_WARNING 3

#define SM_ARRANGE 56

#define SM_CARETBLINKINGENABLED 8194

#define SM_CLEANBOOT 67

#define SM_CMETRICS 97

#define SM_CMONITORS 80

#define SM_CMOUSEBUTTONS 43

#define SM_CXBORDER 5

#define SM_CXCURSOR 13

#define SM_CXDLGFRAME 7

#define SM_CXDOUBLECLK 36

#define SM_CXDRAG 68

#define SM_CXEDGE 45

#define SM_CXFIXEDFRAME 7

#define SM_CXFOCUSBORDER 83

#define SM_CXFRAME 32

#define SM_CXFULLSCREEN 16

#define SM_CXHSCROLL 21

#define SM_CXHTHUMB 10

#define SM_CXICON 11

#define SM_CXICONSPACING 38

#define SM_CXMAXIMIZED 61

#define SM_CXMAXTRACK 59

#define SM_CXMENUCHECK 71

#define SM_CXMENUSIZE 54

#define SM_CXMIN 28

#define SM_CXMINIMIZED 57

#define SM_CXMINSPACING 47

#define SM_CXMINTRACK 34

#define SM_CXPADDEDBORDER 92

#define SM_CXSCREEN 0

#define SM_CXSIZE 30

#define SM_CXSIZEFRAME 32

#define SM_CXSMICON 49

#define SM_CXSMSIZE 52

#define SM_CXVIRTUALSCREEN 78

#define SM_CXVSCROLL 2

#define SM_CYBORDER 6

#define SM_CYCAPTION 4

#define SM_CYCURSOR 14

#define SM_CYDLGFRAME 8

#define SM_CYDOUBLECLK 37

#define SM_CYDRAG 69

#define SM_CYEDGE 46

#define SM_CYFIXEDFRAME 8

#define SM_CYFOCUSBORDER 84

#define SM_CYFRAME 33

#define SM_CYFULLSCREEN 17

#define SM_CYHSCROLL 3

#define SM_CYICON 12

#define SM_CYICONSPACING 39

#define SM_CYKANJIWINDOW 18

#define SM_CYMAXIMIZED 62

#define SM_CYMAXTRACK 60

#define SM_CYMENU 15

#define SM_CYMENUCHECK 72

#define SM_CYMENUSIZE 55

#define SM_CYMIN 29

#define SM_CYMINIMIZED 58

#define SM_CYMINSPACING 48

#define SM_CYMINTRACK 35

#define SM_CYSCREEN 1

#define SM_CYSIZE 31

#define SM_CYSIZEFRAME 33

#define SM_CYSMCAPTION 51

#define SM_CYSMICON 50

#define SM_CYSMSIZE 53

#define SM_CYVIRTUALSCREEN 79

#define SM_CYVSCROLL 20

#define SM_CYVTHUMB 9

#define SM_DBCSENABLED 42

#define SM_DEBUG 22

#define SM_DIGITIZER 94

#define SM_IMMENABLED 82

#define SM_MAXIMUMTOUCHES 95

#define SM_MEDIACENTER 87

#define SM_MENUDROPALIGNMENT 40

#define SM_MIDEASTENABLED 74

#define SM_MOUSEHORIZONTALWHEELPRESENT 91

#define SM_MOUSEPRESENT 19

#define SM_MOUSEWHEELPRESENT 75

#define SM_NETWORK 63

#define SM_PENWINDOWS 41

#define SM_REMOTECONTROL 8193

#define SM_REMOTESESSION 4096

#define SM_RESERVED1 24

#define SM_RESERVED2 25

#define SM_RESERVED3 26

#define SM_RESERVED4 27

#define SM_SAMEDISPLAYFORMAT 81

#define SM_SECURE 44

#define SM_SERVERR2 89

#define SM_SHOWSOUNDS 70

#define SM_SHUTTINGDOWN 8192

#define SM_SLOWMACHINE 73

#define SM_STARTER 88

#define SM_SWAPBUTTON 23

#define SM_TABLETPC 86

#define SM_XVIRTUALSCREEN 76

#define SM_YVIRTUALSCREEN 77

#define SMTO_ABORTIFHUNG 2

#define SMTO_BLOCK 1

#define SMTO_ERRORONEXIT 32

#define SMTO_NORMAL 0

#define SMTO_NOTIMEOUTIFNOTHUNG 8

#define SOUND_SYSTEM_APPEND 14

#define SOUND_SYSTEM_APPSTART 12

#define SOUND_SYSTEM_BEEP 3

#define SOUND_SYSTEM_ERROR 4

#define SOUND_SYSTEM_FAULT 13

#define SOUND_SYSTEM_INFORMATION 7

#define SOUND_SYSTEM_MAXIMIZE 8

#define SOUND_SYSTEM_MENUCOMMAND 15

#define SOUND_SYSTEM_MENUPOPUP 16

#define SOUND_SYSTEM_MINIMIZE 9

#define SOUND_SYSTEM_QUESTION 5

#define SOUND_SYSTEM_RESTOREDOWN 11

#define SOUND_SYSTEM_RESTOREUP 10

#define SOUND_SYSTEM_SHUTDOWN 2

#define SOUND_SYSTEM_STARTUP 1

#define SOUND_SYSTEM_WARNING 6

#define SPI_GETACCESSTIMEOUT 60

#define SPI_GETACTIVEWINDOWTRACKING 4096

#define SPI_GETACTIVEWNDTRKTIMEOUT 8194

#define SPI_GETACTIVEWNDTRKZORDER 4108

#define SPI_GETANIMATION 72

#define SPI_GETAUDIODESCRIPTION 116

#define SPI_GETBEEP 1

#define SPI_GETBLOCKSENDINPUTRESETS 4134

#define SPI_GETBORDER 5

#define SPI_GETCARETWIDTH 8198

#define SPI_GETCLEARTYPE 4168

#define SPI_GETCLIENTAREAANIMATION 4162

#define SPI_GETCOMBOBOXANIMATION 4100

#define SPI_GETCURSORSHADOW 4122

#define SPI_GETDEFAULTINPUTLANG 89

#define SPI_GETDESKWALLPAPER 115

#define SPI_GETDISABLEOVERLAPPEDCONTENT 4160

#define SPI_GETDOCKMOVING 144

#define SPI_GETDRAGFROMMAXIMIZE 140

#define SPI_GETDRAGFULLWINDOWS 38

#define SPI_GETDROPSHADOW 4132

#define SPI_GETFASTTASKSWITCH 35

#define SPI_GETFILTERKEYS 50

#define SPI_GETFLATMENU 4130

#define SPI_GETFOCUSBORDERHEIGHT 8208

#define SPI_GETFOCUSBORDERWIDTH 8206

#define SPI_GETFONTSMOOTHING 74

#define SPI_GETFONTSMOOTHINGCONTRAST 8204

#define SPI_GETFONTSMOOTHINGORIENTATION 8210

#define SPI_GETFONTSMOOTHINGTYPE 8202

#define SPI_GETFOREGROUNDFLASHCOUNT 8196

#define SPI_GETFOREGROUNDLOCKTIMEOUT 8192

#define SPI_GETGRADIENTCAPTIONS 4104

#define SPI_GETGRIDGRANULARITY 18

#define SPI_GETHIGHCONTRAST 66

#define SPI_GETHOTTRACKING 4110

#define SPI_GETHUNGAPPTIMEOUT 120

#define SPI_GETICONMETRICS 45

#define SPI_GETICONTITLELOGFONT 31

#define SPI_GETICONTITLEWRAP 25

#define SPI_GETKEYBOARDCUES 4106

#define SPI_GETKEYBOARDDELAY 22

#define SPI_GETKEYBOARDPREF 68

#define SPI_GETKEYBOARDSPEED 10

#define SPI_GETLISTBOXSMOOTHSCROLLING 4102

#define SPI_GETLOWPOWERACTIVE 83

#define SPI_GETLOWPOWERTIMEOUT 79

#define SPI_GETMENUANIMATION 4098

#define SPI_GETMENUDROPALIGNMENT 27

#define SPI_GETMENUFADE 4114

#define SPI_GETMENUSHOWDELAY 106

#define SPI_GETMENUUNDERLINES 4106

#define SPI_GETMESSAGEDURATION 8214

#define SPI_GETMINIMIZEDMETRICS 43

#define SPI_GETMINIMUMHITRADIUS 8212

#define SPI_GETMOUSE 3

#define SPI_GETMOUSECLICKLOCK 4126

#define SPI_GETMOUSECLICKLOCKTIME 8200

#define SPI_GETMOUSEDOCKTHRESHOLD 126

#define SPI_GETMOUSEDRAGOUTTHRESHOLD 132

#define SPI_GETMOUSEHOVERHEIGHT 100

#define SPI_GETMOUSEHOVERTIME 102

#define SPI_GETMOUSEHOVERWIDTH 98

#define SPI_GETMOUSEKEYS 54

#define SPI_GETMOUSESIDEMOVETHRESHOLD 136

#define SPI_GETMOUSESONAR 4124

#define SPI_GETMOUSESPEED 112

#define SPI_GETMOUSETRAILS 94

#define SPI_GETMOUSEVANISH 4128

#define SPI_GETNONCLIENTMETRICS 41

#define SPI_GETPENDOCKTHRESHOLD 128

#define SPI_GETPENDRAGOUTTHRESHOLD 134

#define SPI_GETPENSIDEMOVETHRESHOLD 138

#define SPI_GETPOWEROFFACTIVE 84

#define SPI_GETPOWEROFFTIMEOUT 80

#define SPI_GETSCREENREADER 70

#define SPI_GETSCREENSAVEACTIVE 16

#define SPI_GETSCREENSAVERRUNNING 114

#define SPI_GETSCREENSAVESECURE 118

#define SPI_GETSCREENSAVETIMEOUT 14

#define SPI_GETSELECTIONFADE 4116

#define SPI_GETSERIALKEYS 62

#define SPI_GETSHOWIMEUI 110

#define SPI_GETSHOWSOUNDS 56

#define SPI_GETSNAPSIZING 142

#define SPI_GETSNAPTODEFBUTTON 95

#define SPI_GETSOUNDSENTRY 64

#define SPI_GETSPEECHRECOGNITION 4170

#define SPI_GETSTICKYKEYS 58

#define SPI_GETTOGGLEKEYS 52

#define SPI_GETTOOLTIPANIMATION 4118

#define SPI_GETTOOLTIPFADE 4120

#define SPI_GETUIEFFECTS 4158

#define SPI_GETWAITTOKILLSERVICETIMEOUT 124

#define SPI_GETWAITTOKILLTIMEOUT 122

#define SPI_GETWHEELSCROLLCHARS 108

#define SPI_GETWHEELSCROLLLINES 104

#define SPI_GETWINARRANGING 130

#define SPI_GETWINDOWSEXTENSION 92

#define SPI_GETWORKAREA 48

#define SPI_ICONHORIZONTALSPACING 13

#define SPI_ICONVERTICALSPACING 24

#define SPI_LANGDRIVER 12

#define SPI_SCREENSAVERRUNNING 97

#define SPI_SETACCESSTIMEOUT 61

#define SPI_SETACTIVEWINDOWTRACKING 4097

#define SPI_SETACTIVEWNDTRKTIMEOUT 8195

#define SPI_SETACTIVEWNDTRKZORDER 4109

#define SPI_SETANIMATION 73

#define SPI_SETAUDIODESCRIPTION 117

#define SPI_SETBEEP 2

#define SPI_SETBLOCKSENDINPUTRESETS 4135

#define SPI_SETBORDER 6

#define SPI_SETCARETWIDTH 8199

#define SPI_SETCLEARTYPE 4169

#define SPI_SETCLIENTAREAANIMATION 4163

#define SPI_SETCOMBOBOXANIMATION 4101

#define SPI_SETCURSORS 87

#define SPI_SETCURSORSHADOW 4123

#define SPI_SETDEFAULTINPUTLANG 90

#define SPI_SETDESKPATTERN 21

#define SPI_SETDESKWALLPAPER 20

#define SPI_SETDISABLEOVERLAPPEDCONTENT 4161

#define SPI_SETDOCKMOVING 145

#define SPI_SETDOUBLECLICKTIME 32

#define SPI_SETDOUBLECLKHEIGHT 30

#define SPI_SETDOUBLECLKWIDTH 29

#define SPI_SETDRAGFROMMAXIMIZE 141

#define SPI_SETDRAGFULLWINDOWS 37

#define SPI_SETDRAGHEIGHT 77

#define SPI_SETDRAGWIDTH 76

#define SPI_SETDROPSHADOW 4133

#define SPI_SETFASTTASKSWITCH 36

#define SPI_SETFILTERKEYS 51

#define SPI_SETFLATMENU 4131

#define SPI_SETFOCUSBORDERHEIGHT 8209

#define SPI_SETFOCUSBORDERWIDTH 8207

#define SPI_SETFONTSMOOTHING 75

#define SPI_SETFONTSMOOTHINGCONTRAST 8205

#define SPI_SETFONTSMOOTHINGORIENTATION 8211

#define SPI_SETFONTSMOOTHINGTYPE 8203

#define SPI_SETFOREGROUNDFLASHCOUNT 8197

#define SPI_SETFOREGROUNDLOCKTIMEOUT 8193

#define SPI_SETGRADIENTCAPTIONS 4105

#define SPI_SETGRIDGRANULARITY 19

#define SPI_SETHANDHELD 78

#define SPI_SETHIGHCONTRAST 67

#define SPI_SETHOTTRACKING 4111

#define SPI_SETHUNGAPPTIMEOUT 121

#define SPI_SETICONMETRICS 46

#define SPI_SETICONS 88

#define SPI_SETICONTITLELOGFONT 34

#define SPI_SETICONTITLEWRAP 26

#define SPI_SETKEYBOARDCUES 4107

#define SPI_SETKEYBOARDDELAY 23

#define SPI_SETKEYBOARDPREF 69

#define SPI_SETKEYBOARDSPEED 11

#define SPI_SETLANGTOGGLE 91

#define SPI_SETLISTBOXSMOOTHSCROLLING 4103

#define SPI_SETLOWPOWERACTIVE 85

#define SPI_SETLOWPOWERTIMEOUT 81

#define SPI_SETMENUANIMATION 4099

#define SPI_SETMENUDROPALIGNMENT 28

#define SPI_SETMENUFADE 4115

#define SPI_SETMENUSHOWDELAY 107

#define SPI_SETMENUUNDERLINES 4107

#define SPI_SETMESSAGEDURATION 8215

#define SPI_SETMINIMIZEDMETRICS 44

#define SPI_SETMINIMUMHITRADIUS 8213

#define SPI_SETMOUSE 4

#define SPI_SETMOUSEBUTTONSWAP 33

#define SPI_SETMOUSECLICKLOCK 4127

#define SPI_SETMOUSECLICKLOCKTIME 8201

#define SPI_SETMOUSEDOCKTHRESHOLD 127

#define SPI_SETMOUSEDRAGOUTTHRESHOLD 133

#define SPI_SETMOUSEHOVERHEIGHT 101

#define SPI_SETMOUSEHOVERTIME 103

#define SPI_SETMOUSEHOVERWIDTH 99

#define SPI_SETMOUSEKEYS 55

#define SPI_SETMOUSESIDEMOVETHRESHOLD 137

#define SPI_SETMOUSESONAR 4125

#define SPI_SETMOUSESPEED 113

#define SPI_SETMOUSETRAILS 93

#define SPI_SETMOUSEVANISH 4129

#define SPI_SETNONCLIENTMETRICS 42

#define SPI_SETPENDOCKTHRESHOLD 129

#define SPI_SETPENDRAGOUTTHRESHOLD 135

#define SPI_SETPENSIDEMOVETHRESHOLD 139

#define SPI_SETPENWINDOWS 49

#define SPI_SETPOWEROFFACTIVE 86

#define SPI_SETPOWEROFFTIMEOUT 82

#define SPI_SETSCREENREADER 71

#define SPI_SETSCREENSAVEACTIVE 17

#define SPI_SETSCREENSAVERRUNNING 97

#define SPI_SETSCREENSAVESECURE 119

#define SPI_SETSCREENSAVETIMEOUT 15

#define SPI_SETSELECTIONFADE 4117

#define SPI_SETSERIALKEYS 63

#define SPI_SETSHOWIMEUI 111

#define SPI_SETSHOWSOUNDS 57

#define SPI_SETSNAPSIZING 143

#define SPI_SETSNAPTODEFBUTTON 96

#define SPI_SETSOUNDSENTRY 65

#define SPI_SETSPEECHRECOGNITION 4171

#define SPI_SETSTICKYKEYS 59

#define SPI_SETTOGGLEKEYS 53

#define SPI_SETTOOLTIPANIMATION 4119

#define SPI_SETTOOLTIPFADE 4121

#define SPI_SETUIEFFECTS 4159

#define SPI_SETWAITTOKILLSERVICETIMEOUT 125

#define SPI_SETWAITTOKILLTIMEOUT 123

#define SPI_SETWHEELSCROLLCHARS 109

#define SPI_SETWHEELSCROLLLINES 105

#define SPI_SETWINARRANGING 131

#define SPI_SETWORKAREA 47

#define SPIF_SENDCHANGE 2

#define SPIF_SENDWININICHANGE 2

#define SPIF_UPDATEINIFILE 1

#define SS_BITMAP 14

#define SS_BLACKFRAME 7

#define SS_BLACKRECT 4

#define SS_CENTER 1

#define SS_CENTERIMAGE 512

#define SS_EDITCONTROL 8192

#define SS_ELLIPSISMASK 49152

#define SS_ENDELLIPSIS 16384

#define SS_ENHMETAFILE 15

#define SS_ETCHEDFRAME 18

#define SS_ETCHEDHORZ 16

#define SS_ETCHEDVERT 17

#define SS_GRAYFRAME 8

#define SS_GRAYRECT 5

#define SS_ICON 3

#define SS_LEFT 0

#define SS_LEFTNOWORDWRAP 12

#define SS_NOPREFIX 128

#define SS_NOTIFY 256

#define SS_OWNERDRAW 13

#define SS_PATHELLIPSIS 32768

#define SS_REALSIZECONTROL 64

#define SS_REALSIZEIMAGE 2048

#define SS_RIGHT 2

#define SS_RIGHTJUST 1024

#define SS_SIMPLE 11

#define SS_SUNKEN 4096

#define SS_TYPEMASK 31

#define SS_USERITEM 10

#define SS_WHITEFRAME 9

#define SS_WHITERECT 6

#define SS_WORDELLIPSIS 49152

#define SSF_AVAILABLE 2

#define SSF_INDICATOR 4

#define SSF_SOUNDSENTRYON 1

#define SSGF_DISPLAY 3

#define SSGF_NONE 0

#define SSTF_BORDER 2

#define SSTF_CHARS 1

#define SSTF_DISPLAY 3

#define SSTF_NONE 0

#define SSWF_CUSTOM 4

#define SSWF_DISPLAY 3

#define SSWF_NONE 0

#define SSWF_TITLE 1

#define SSWF_WINDOW 2

#define STATE_SYSTEM_ALERT_HIGH 268435456

#define STATE_SYSTEM_ALERT_LOW 67108864

#define STATE_SYSTEM_ALERT_MEDIUM 134217728

#define STATE_SYSTEM_ANIMATED 16384

#define STATE_SYSTEM_BUSY 2048

#define STATE_SYSTEM_CHECKED 16

#define STATE_SYSTEM_COLLAPSED 1024

#define STATE_SYSTEM_DEFAULT 256

#define STATE_SYSTEM_EXPANDED 512

#define STATE_SYSTEM_EXTSELECTABLE 33554432

#define STATE_SYSTEM_FLOATING 4096

#define STATE_SYSTEM_FOCUSABLE 1048576

#define STATE_SYSTEM_FOCUSED 4

#define STATE_SYSTEM_HOTTRACKED 128

#define STATE_SYSTEM_INDETERMINATE 32

#define STATE_SYSTEM_INVISIBLE 32768

#define STATE_SYSTEM_LINKED 4194304

#define STATE_SYSTEM_MARQUEED 8192

#define STATE_SYSTEM_MIXED 32

#define STATE_SYSTEM_MOVEABLE 262144

#define STATE_SYSTEM_MULTISELECTABLE 16777216

#define STATE_SYSTEM_OFFSCREEN 65536

#define STATE_SYSTEM_PRESSED 8

#define STATE_SYSTEM_PROTECTED 536870912

#define STATE_SYSTEM_READONLY 64

#define STATE_SYSTEM_SELECTABLE 2097152

#define STATE_SYSTEM_SELECTED 2

#define STATE_SYSTEM_SELFVOICING 524288

#define STATE_SYSTEM_SIZEABLE 131072

#define STATE_SYSTEM_TRAVERSED 8388608

#define STATE_SYSTEM_UNAVAILABLE 1

#define STATE_SYSTEM_VALID 1073741823

#define STM_GETICON 369

#define STM_GETIMAGE 371

#define STM_MSGMAX 372

#define STM_SETICON 368

#define STM_SETIMAGE 370

#define STN_CLICKED 0

#define STN_DBLCLK 1

#define STN_DISABLE 3

#define STN_ENABLE 2

#define SW_ERASE 4

#define SW_FORCEMINIMIZE 11

#define SW_HIDE 0

#define SW_INVALIDATE 2

#define SW_MAX 11

#define SW_MAXIMIZE 3

#define SW_MINIMIZE 6

#define SW_NORMAL 1

#define SW_OTHERUNZOOM 4

#define SW_OTHERZOOM 2

#define SW_PARENTCLOSING 1

#define SW_PARENTOPENING 3

#define SW_RESTORE 9

#define SW_SCROLLCHILDREN 1

#define SW_SHOW 5

#define SW_SHOWDEFAULT 10

#define SW_SHOWMAXIMIZED 3

#define SW_SHOWMINIMIZED 2

#define SW_SHOWMINNOACTIVE 7

#define SW_SHOWNA 8

#define SW_SHOWNOACTIVATE 4

#define SW_SHOWNORMAL 1

#define SW_SMOOTHSCROLL 16

#define SWP_ASYNCWINDOWPOS 16384

#define SWP_DEFERERASE 8192

#define SWP_DRAWFRAME 32

#define SWP_FRAMECHANGED 32

#define SWP_HIDEWINDOW 128

#define SWP_NOACTIVATE 16

#define SWP_NOCOPYBITS 256

#define SWP_NOMOVE 2

#define SWP_NOOWNERZORDER 512

#define SWP_NOREDRAW 8

#define SWP_NOREPOSITION 512

#define SWP_NOSENDCHANGING 1024

#define SWP_NOSIZE 1

#define SWP_NOZORDER 4

#define SWP_SHOWWINDOW 64

#define TKF_AVAILABLE 2

#define TKF_CONFIRMHOTKEY 8

#define TKF_HOTKEYACTIVE 4

#define TKF_HOTKEYSOUND 16

#define TKF_INDICATOR 32

#define TKF_TOGGLEKEYSON 1

#define TME_CANCEL 2147483648

#define TME_HOVER 1

#define TME_LEAVE 2

#define TME_NONCLIENT 16

#define TME_QUERY 1073741824

#define TOUCHEVENTF_DOWN 2

#define TOUCHEVENTF_INRANGE 8

#define TOUCHEVENTF_MOVE 1

#define TOUCHEVENTF_NOCOALESCE 32

#define TOUCHEVENTF_PALM 128

#define TOUCHEVENTF_PEN 64

#define TOUCHEVENTF_PRIMARY 16

#define TOUCHEVENTF_UP 4

#define TOUCHINPUTMASKF_CONTACTAREA 4

#define TOUCHINPUTMASKF_EXTRAINFO 2

#define TOUCHINPUTMASKF_TIMEFROMSYSTEM 1

#define TPM_BOTTOMALIGN 32

#define TPM_CENTERALIGN 4

#define TPM_HORIZONTAL 0

#define TPM_HORNEGANIMATION 2048

#define TPM_HORPOSANIMATION 1024

#define TPM_LAYOUTRTL 32768

#define TPM_LEFTALIGN 0

#define TPM_LEFTBUTTON 0

#define TPM_NOANIMATION 16384

#define TPM_NONOTIFY 128

#define TPM_RECURSE 1

#define TPM_RETURNCMD 256

#define TPM_RIGHTALIGN 8

#define TPM_RIGHTBUTTON 2

#define TPM_TOPALIGN 0

#define TPM_VCENTERALIGN 16

#define TPM_VERNEGANIMATION 8192

#define TPM_VERPOSANIMATION 4096

#define TPM_VERTICAL 64

#define TPM_WORKAREA 65536

#define TWF_FINETOUCH 1

#define TWF_WANTPALM 2

#define UIS_CLEAR 2

#define UIS_INITIALIZE 3

#define UIS_SET 1

#define UISF_ACTIVE 4

#define UISF_HIDEACCEL 2

#define UISF_HIDEFOCUS 1

#define ULW_ALPHA 2

#define ULW_COLORKEY 1

#define ULW_EX_NORESIZE 8

#define ULW_OPAQUE 4

#define UNICODE_NOCHAR 65535

#define UOI_FLAGS 1

#define UOI_HEAPSIZE 5

#define UOI_IO 6

#define UOI_NAME 2

#define UOI_TYPE 3

#define UOI_USER_SID 4

#define USER_DEFAULT_SCREEN_DPI 96

#define USER_TIMER_MAXIMUM 2147483647

#define USER_TIMER_MINIMUM 10

#define VK_ACCEPT 30

#define VK_ADD 107

#define VK_APPS 93

#define VK_ATTN 246

#define VK_BACK 8

#define VK_BROWSER_BACK 166

#define VK_BROWSER_FAVORITES 171

#define VK_BROWSER_FORWARD 167

#define VK_BROWSER_HOME 172

#define VK_BROWSER_REFRESH 168

#define VK_BROWSER_SEARCH 170

#define VK_BROWSER_STOP 169

#define VK_CANCEL 3

#define VK_CAPITAL 20

#define VK_CLEAR 12

#define VK_CONTROL 17

#define VK_CONVERT 28

#define VK_CRSEL 247

#define VK_DECIMAL 110

#define VK_DELETE 46

#define VK_DIVIDE 111

#define VK_DOWN 40

#define VK_END 35

#define VK_EREOF 249

#define VK_ESCAPE 27

#define VK_EXECUTE 43

#define VK_EXSEL 248

#define VK_F1 112

#define VK_F10 121

#define VK_F11 122

#define VK_F12 123

#define VK_F13 124

#define VK_F14 125

#define VK_F15 126

#define VK_F16 127

#define VK_F17 128

#define VK_F18 129

#define VK_F19 130

#define VK_F2 113

#define VK_F20 131

#define VK_F21 132

#define VK_F22 133

#define VK_F23 134

#define VK_F24 135

#define VK_F3 114

#define VK_F4 115

#define VK_F5 116

#define VK_F6 117

#define VK_F7 118

#define VK_F8 119

#define VK_F9 120

#define VK_FINAL 24

#define VK_HANGEUL 21

#define VK_HANGUL 21

#define VK_HANJA 25

#define VK_HELP 47

#define VK_HOME 36

#define VK_ICO_00 228

#define VK_ICO_CLEAR 230

#define VK_ICO_HELP 227

#define VK_INSERT 45

#define VK_JUNJA 23

#define VK_KANA 21

#define VK_KANJI 25

#define VK_LAUNCH_APP1 182

#define VK_LAUNCH_APP2 183

#define VK_LAUNCH_MAIL 180

#define VK_LAUNCH_MEDIA_SELECT 181

#define VK_LBUTTON 1

#define VK_LCONTROL 162

#define VK_LEFT 37

#define VK_LMENU 164

#define VK_LSHIFT 160

#define VK_LWIN 91

#define VK_MBUTTON 4

#define VK_MEDIA_NEXT_TRACK 176

#define VK_MEDIA_PLAY_PAUSE 179

#define VK_MEDIA_PREV_TRACK 177

#define VK_MEDIA_STOP 178

#define VK_MENU 18

#define VK_MODECHANGE 31

#define VK_MULTIPLY 106

#define VK_NEXT 34

#define VK_NONAME 252

#define VK_NONCONVERT 29

#define VK_NUMLOCK 144

#define VK_NUMPAD0 96

#define VK_NUMPAD1 97

#define VK_NUMPAD2 98

#define VK_NUMPAD3 99

#define VK_NUMPAD4 100

#define VK_NUMPAD5 101

#define VK_NUMPAD6 102

#define VK_NUMPAD7 103

#define VK_NUMPAD8 104

#define VK_NUMPAD9 105

#define VK_OEM_1 186

#define VK_OEM_102 226

#define VK_OEM_2 191

#define VK_OEM_3 192

#define VK_OEM_4 219

#define VK_OEM_5 220

#define VK_OEM_6 221

#define VK_OEM_7 222

#define VK_OEM_8 223

#define VK_OEM_ATTN 240

#define VK_OEM_AUTO 243

#define VK_OEM_AX 225

#define VK_OEM_BACKTAB 245

#define VK_OEM_CLEAR 254

#define VK_OEM_COMMA 188

#define VK_OEM_COPY 242

#define VK_OEM_CUSEL 239

#define VK_OEM_ENLW 244

#define VK_OEM_FINISH 241

#define VK_OEM_FJ_JISHO 146

#define VK_OEM_FJ_LOYA 149

#define VK_OEM_FJ_MASSHOU 147

#define VK_OEM_FJ_ROYA 150

#define VK_OEM_FJ_TOUROKU 148

#define VK_OEM_JUMP 234

#define VK_OEM_MINUS 189

#define VK_OEM_NEC_EQUAL 146

#define VK_OEM_PA1 235

#define VK_OEM_PA2 236

#define VK_OEM_PA3 237

#define VK_OEM_PERIOD 190

#define VK_OEM_PLUS 187

#define VK_OEM_RESET 233

#define VK_OEM_WSCTRL 238

#define VK_PA1 253

#define VK_PACKET 231

#define VK_PAUSE 19

#define VK_PLAY 250

#define VK_PRINT 42

#define VK_PRIOR 33

#define VK_PROCESSKEY 229

#define VK_RBUTTON 2

#define VK_RCONTROL 163

#define VK_RETURN 13

#define VK_RIGHT 39

#define VK_RMENU 165

#define VK_RSHIFT 161

#define VK_RWIN 92

#define VK_SCROLL 145

#define VK_SELECT 41

#define VK_SEPARATOR 108

#define VK_SHIFT 16

#define VK_SLEEP 95

#define VK_SNAPSHOT 44

#define VK_SPACE 32

#define VK_SUBTRACT 109

#define VK_TAB 9

#define VK_UP 38

#define VK_VOLUME_DOWN 174

#define VK_VOLUME_MUTE 173

#define VK_VOLUME_UP 175

#define VK_XBUTTON1 5

#define VK_XBUTTON2 6

#define VK_ZOOM 251

#define WA_ACTIVE 1

#define WA_CLICKACTIVE 2

#define WA_INACTIVE 0

#define WB_ISDELIMITER 2

#define WB_LEFT 0

#define WB_RIGHT 1

#define WC_DIALOG 32770

#define WDA_MONITOR 1

#define WDA_NONE 0

#define WH_CALLWNDPROC 4

#define WH_CALLWNDPROCRET 12

#define WH_CBT 5

#define WH_DEBUG 9

#define WH_FOREGROUNDIDLE 11

#define WH_GETMESSAGE 3

#define WH_JOURNALPLAYBACK 1

#define WH_JOURNALRECORD 0

#define WH_KEYBOARD 2

#define WH_KEYBOARD_LL 13

#define WH_MAX 14

#define WH_MAXHOOK 14

#define WH_MIN -1

#define WH_MINHOOK -1

#define WH_MOUSE 7

#define WH_MOUSE_LL 14

#define WH_MSGFILTER -1

#define WH_SHELL 10

#define WH_SYSMSGFILTER 6

#define WHEEL_DELTA 120

#define WHEEL_PAGESCROLL 4294967295

#define WINEVENT_INCONTEXT 4

#define WINEVENT_OUTOFCONTEXT 0

#define WINEVENT_SKIPOWNPROCESS 2

#define WINEVENT_SKIPOWNTHREAD 1

#define WINSTA_ACCESSCLIPBOARD 4

#define WINSTA_ACCESSGLOBALATOMS 32

#define WINSTA_CREATEDESKTOP 8

#define WINSTA_ENUMDESKTOPS 1

#define WINSTA_ENUMERATE 256

#define WINSTA_EXITWINDOWS 64

#define WINSTA_READATTRIBUTES 2

#define WINSTA_READSCREEN 512

#define WINSTA_WRITEATTRIBUTES 16

#define WM_ACTIVATE 6

#define WM_ACTIVATEAPP 28

#define WM_AFXFIRST 864

#define WM_AFXLAST 895

#define WM_APP 32768

#define WM_APPCOMMAND 793

#define WM_ASKCBFORMATNAME 780

#define WM_CANCELJOURNAL 75

#define WM_CANCELMODE 31

#define WM_CAPTURECHANGED 533

#define WM_CHANGECBCHAIN 781

#define WM_CHANGEUISTATE 295

#define WM_CHAR 258

#define WM_CHARTOITEM 47

#define WM_CHILDACTIVATE 34

#define WM_CLEAR 771

#define WM_CLIPBOARDUPDATE 797

#define WM_CLOSE 16

#define WM_COMMAND 273

#define WM_COMMNOTIFY 68

#define WM_COMPACTING 65

#define WM_COMPAREITEM 57

#define WM_CONTEXTMENU 123

#define WM_COPY 769

#define WM_COPYDATA 74

#define WM_CREATE 1

#define WM_CTLCOLORBTN 309

#define WM_CTLCOLORDLG 310

#define WM_CTLCOLOREDIT 307

#define WM_CTLCOLORLISTBOX 308

#define WM_CTLCOLORMSGBOX 306

#define WM_CTLCOLORSCROLLBAR 311

#define WM_CTLCOLORSTATIC 312

#define WM_CUT 768

#define WM_DEADCHAR 259

#define WM_DELETEITEM 45

#define WM_DESTROY 2

#define WM_DESTROYCLIPBOARD 775

#define WM_DEVICECHANGE 537

#define WM_DEVMODECHANGE 27

#define WM_DISPLAYCHANGE 126

#define WM_DRAWCLIPBOARD 776

#define WM_DRAWITEM 43

#define WM_DROPFILES 563

#define WM_DWMCOLORIZATIONCOLORCHANGED 800

#define WM_DWMCOMPOSITIONCHANGED 798

#define WM_DWMNCRENDERINGCHANGED 799

#define WM_DWMSENDICONICLIVEPREVIEWBITMAP 806

#define WM_DWMSENDICONICTHUMBNAIL 803

#define WM_DWMWINDOWMAXIMIZEDCHANGE 801

#define WM_ENABLE 10

#define WM_ENDSESSION 22

#define WM_ENTERIDLE 289

#define WM_ENTERMENULOOP 529

#define WM_ENTERSIZEMOVE 561

#define WM_ERASEBKGND 20

#define WM_EXITMENULOOP 530

#define WM_EXITSIZEMOVE 562

#define WM_FONTCHANGE 29

#define WM_GESTURE 281

#define WM_GESTURENOTIFY 282

#define WM_GETDLGCODE 135

#define WM_GETFONT 49

#define WM_GETHOTKEY 51

#define WM_GETICON 127

#define WM_GETMINMAXINFO 36

#define WM_GETOBJECT 61

#define WM_GETTEXT 13

#define WM_GETTEXTLENGTH 14

#define WM_GETTITLEBARINFOEX 831

#define WM_HANDHELDFIRST 856

#define WM_HANDHELDLAST 863

#define WM_HELP 83

#define WM_HOTKEY 786

#define WM_HSCROLL 276

#define WM_HSCROLLCLIPBOARD 782

#define WM_ICONERASEBKGND 39

#define WM_IME_CHAR 646

#define WM_IME_COMPOSITION 271

#define WM_IME_COMPOSITIONFULL 644

#define WM_IME_CONTROL 643

#define WM_IME_ENDCOMPOSITION 270

#define WM_IME_KEYDOWN 656

#define WM_IME_KEYLAST 271

#define WM_IME_KEYUP 657

#define WM_IME_NOTIFY 642

#define WM_IME_REQUEST 648

#define WM_IME_SELECT 645

#define WM_IME_SETCONTEXT 641

#define WM_IME_STARTCOMPOSITION 269

#define WM_INITDIALOG 272

#define WM_INITMENU 278

#define WM_INITMENUPOPUP 279

#define WM_INPUT 255

#define WM_INPUT_DEVICE_CHANGE 254

#define WM_INPUTLANGCHANGE 81

#define WM_INPUTLANGCHANGEREQUEST 80

#define WM_KEYDOWN 256

#define WM_KEYFIRST 256

#define WM_KEYLAST 265

#define WM_KEYUP 257

#define WM_KILLFOCUS 8

#define WM_LBUTTONDBLCLK 515

#define WM_LBUTTONDOWN 513

#define WM_LBUTTONUP 514

#define WM_MBUTTONDBLCLK 521

#define WM_MBUTTONDOWN 519

#define WM_MBUTTONUP 520

#define WM_MDIACTIVATE 546

#define WM_MDICASCADE 551

#define WM_MDICREATE 544

#define WM_MDIDESTROY 545

#define WM_MDIGETACTIVE 553

#define WM_MDIICONARRANGE 552

#define WM_MDIMAXIMIZE 549

#define WM_MDINEXT 548

#define WM_MDIREFRESHMENU 564

#define WM_MDIRESTORE 547

#define WM_MDISETMENU 560

#define WM_MDITILE 550

#define WM_MEASUREITEM 44

#define WM_MENUCHAR 288

#define WM_MENUCOMMAND 294

#define WM_MENUDRAG 291

#define WM_MENUGETOBJECT 292

#define WM_MENURBUTTONUP 290

#define WM_MENUSELECT 287

#define WM_MOUSEACTIVATE 33

#define WM_MOUSEFIRST 512

#define WM_MOUSEHOVER 673

#define WM_MOUSEHWHEEL 526

#define WM_MOUSELAST 526

#define WM_MOUSELEAVE 675

#define WM_MOUSEMOVE 512

#define WM_MOUSEWHEEL 522

#define WM_MOVE 3

#define WM_MOVING 534

#define WM_NCACTIVATE 134

#define WM_NCCALCSIZE 131

#define WM_NCCREATE 129

#define WM_NCDESTROY 130

#define WM_NCHITTEST 132

#define WM_NCLBUTTONDBLCLK 163

#define WM_NCLBUTTONDOWN 161

#define WM_NCLBUTTONUP 162

#define WM_NCMBUTTONDBLCLK 169

#define WM_NCMBUTTONDOWN 167

#define WM_NCMBUTTONUP 168

#define WM_NCMOUSEHOVER 672

#define WM_NCMOUSELEAVE 674

#define WM_NCMOUSEMOVE 160

#define WM_NCPAINT 133

#define WM_NCRBUTTONDBLCLK 166

#define WM_NCRBUTTONDOWN 164

#define WM_NCRBUTTONUP 165

#define WM_NCXBUTTONDBLCLK 173

#define WM_NCXBUTTONDOWN 171

#define WM_NCXBUTTONUP 172

#define WM_NEXTDLGCTL 40

#define WM_NEXTMENU 531

#define WM_NOTIFY 78

#define WM_NOTIFYFORMAT 85

#define WM_NULL 0

#define WM_PAINT 15

#define WM_PAINTCLIPBOARD 777

#define WM_PAINTICON 38

#define WM_PALETTECHANGED 785

#define WM_PALETTEISCHANGING 784

#define WM_PARENTNOTIFY 528

#define WM_PASTE 770

#define WM_PENWINFIRST 896

#define WM_PENWINLAST 911

#define WM_POWER 72

#define WM_POWERBROADCAST 536

#define WM_PRINT 791

#define WM_PRINTCLIENT 792

#define WM_QUERYDRAGICON 55

#define WM_QUERYENDSESSION 17

#define WM_QUERYNEWPALETTE 783

#define WM_QUERYOPEN 19

#define WM_QUERYUISTATE 297

#define WM_QUEUESYNC 35

#define WM_QUIT 18

#define WM_RBUTTONDBLCLK 518

#define WM_RBUTTONDOWN 516

#define WM_RBUTTONUP 517

#define WM_RENDERALLFORMATS 774

#define WM_RENDERFORMAT 773

#define WM_SETCURSOR 32

#define WM_SETFOCUS 7

#define WM_SETFONT 48

#define WM_SETHOTKEY 50

#define WM_SETICON 128

#define WM_SETREDRAW 11

#define WM_SETTEXT 12

#define WM_SETTINGCHANGE 26

#define WM_SHOWWINDOW 24

#define WM_SIZE 5

#define WM_SIZECLIPBOARD 779

#define WM_SIZING 532

#define WM_SPOOLERSTATUS 42

#define WM_STYLECHANGED 125

#define WM_STYLECHANGING 124

#define WM_SYNCPAINT 136

#define WM_SYSCHAR 262

#define WM_SYSCOLORCHANGE 21

#define WM_SYSCOMMAND 274

#define WM_SYSDEADCHAR 263

#define WM_SYSKEYDOWN 260

#define WM_SYSKEYUP 261

#define WM_TABLET_FIRST 704

#define WM_TABLET_LAST 735

#define WM_TCARD 82

#define WM_THEMECHANGED 794

#define WM_TIMECHANGE 30

#define WM_TIMER 275

#define WM_TOUCH 576

#define WM_UNDO 772

#define WM_UNICHAR 265

#define WM_UNINITMENUPOPUP 293

#define WM_UPDATEUISTATE 296

#define WM_USER 1024

#define WM_USERCHANGED 84

#define WM_VKEYTOITEM 46

#define WM_VSCROLL 277

#define WM_VSCROLLCLIPBOARD 778

#define WM_WINDOWPOSCHANGED 71

#define WM_WINDOWPOSCHANGING 70

#define WM_WININICHANGE 26

#define WM_WTSSESSION_CHANGE 689

#define WM_XBUTTONDBLCLK 525

#define WM_XBUTTONDOWN 523

#define WM_XBUTTONUP 524

#define WMSZ_BOTTOM 6

#define WMSZ_BOTTOMLEFT 7

#define WMSZ_BOTTOMRIGHT 8

#define WMSZ_LEFT 1

#define WMSZ_RIGHT 2

#define WMSZ_TOP 3

#define WMSZ_TOPLEFT 4

#define WMSZ_TOPRIGHT 5

#define WPF_ASYNCWINDOWPLACEMENT 4

#define WPF_RESTORETOMAXIMIZED 2

#define WPF_SETMINPOSITION 1

#define WS_ACTIVECAPTION 1

#define WS_BORDER 8388608

#define WS_CAPTION 12582912

#define WS_CHILD 1073741824

#define WS_CHILDWINDOW 1073741824

#define WS_CLIPCHILDREN 33554432

#define WS_CLIPSIBLINGS 67108864

#define WS_DISABLED 134217728

#define WS_DLGFRAME 4194304

#define WS_EX_ACCEPTFILES 16

#define WS_EX_APPWINDOW 262144

#define WS_EX_CLIENTEDGE 512

#define WS_EX_COMPOSITED 33554432

#define WS_EX_CONTEXTHELP 1024

#define WS_EX_CONTROLPARENT 65536

#define WS_EX_DLGMODALFRAME 1

#define WS_EX_LAYERED 524288

#define WS_EX_LAYOUTRTL 4194304

#define WS_EX_LEFT 0

#define WS_EX_LEFTSCROLLBAR 16384

#define WS_EX_LTRREADING 0

#define WS_EX_MDICHILD 64

#define WS_EX_NOACTIVATE 134217728

#define WS_EX_NOINHERITLAYOUT 1048576

#define WS_EX_NOPARENTNOTIFY 4

#define WS_EX_OVERLAPPEDWINDOW 768

#define WS_EX_PALETTEWINDOW 392

#define WS_EX_RIGHT 4096

#define WS_EX_RIGHTSCROLLBAR 0

#define WS_EX_RTLREADING 8192

#define WS_EX_STATICEDGE 131072

#define WS_EX_TOOLWINDOW 128

#define WS_EX_TOPMOST 8

#define WS_EX_TRANSPARENT 32

#define WS_EX_WINDOWEDGE 256

#define WS_GROUP 131072

#define WS_HSCROLL 1048576

#define WS_ICONIC 536870912

#define WS_MAXIMIZE 16777216

#define WS_MAXIMIZEBOX 65536

#define WS_MINIMIZE 536870912

#define WS_MINIMIZEBOX 131072

#define WS_OVERLAPPED 0

#define WS_POPUP 2147483648

#define WS_SIZEBOX 262144

#define WS_SYSMENU 524288

#define WS_TABSTOP 65536

#define WS_THICKFRAME 262144

#define WS_TILED 0

#define WS_TILEDWINDOW 13565952

#define WS_VISIBLE 268435456

#define WS_VSCROLL 2097152

#define WSF_VISIBLE 1

#define WTS_CONSOLE_CONNECT 1

#define WTS_CONSOLE_DISCONNECT 2

#define WTS_REMOTE_CONNECT 3

#define WTS_REMOTE_DISCONNECT 4

#define WTS_SESSION_LOCK 7

#define WTS_SESSION_LOGOFF 6

#define WTS_SESSION_LOGON 5

#define WTS_SESSION_REMOTE_CONTROL 9

#define WTS_SESSION_UNLOCK 8

#define WVR_ALIGNBOTTOM 64

#define WVR_ALIGNLEFT 32

#define WVR_ALIGNRIGHT 128

#define WVR_ALIGNTOP 16

#define WVR_HREDRAW 256

#define WVR_VALIDRECTS 1024

#define WVR_VREDRAW 512

#define XBUTTON1 1

#define XBUTTON2 2

typedef struct _ICONINFO _ICONINFO, *P_ICONINFO;

struct _ICONINFO {
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
};

typedef struct _ICONINFOEXA _ICONINFOEXA, *P_ICONINFOEXA;

struct _ICONINFOEXA {
    DWORD cbSize;
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
    WORD wResID;
    CHAR szModName[260];
    CHAR szResName[260];
};

typedef struct _ICONINFOEXW _ICONINFOEXW, *P_ICONINFOEXW;

struct _ICONINFOEXW {
    DWORD cbSize;
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
    WORD wResID;
    WCHAR szModName[260];
    WCHAR szResName[260];
};

typedef struct _struct_924 _struct_924, *P_struct_924;

struct _struct_924 {
    USHORT usButtonFlags;
    USHORT usButtonData;
};

typedef union _union_859 _union_859, *P_union_859;

typedef struct tagMOUSEINPUT tagMOUSEINPUT, *PtagMOUSEINPUT;

typedef struct tagMOUSEINPUT MOUSEINPUT;

typedef struct tagKEYBDINPUT tagKEYBDINPUT, *PtagKEYBDINPUT;

typedef struct tagKEYBDINPUT KEYBDINPUT;

typedef struct tagHARDWAREINPUT tagHARDWAREINPUT, *PtagHARDWAREINPUT;

typedef struct tagHARDWAREINPUT HARDWAREINPUT;

struct tagKEYBDINPUT {
    WORD wVk;
    WORD wScan;
    DWORD dwFlags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

struct tagMOUSEINPUT {
    LONG dx;
    LONG dy;
    DWORD mouseData;
    DWORD dwFlags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

struct tagHARDWAREINPUT {
    DWORD uMsg;
    WORD wParamL;
    WORD wParamH;
};

union _union_859 {
    MOUSEINPUT mi;
    KEYBDINPUT ki;
    HARDWAREINPUT hi;
};

typedef union _union_923 _union_923, *P_union_923;

union _union_923 {
    ULONG ulButtons;
    struct _struct_924 field1;
};

typedef union _union_928 _union_928, *P_union_928;

typedef struct tagRAWMOUSE tagRAWMOUSE, *PtagRAWMOUSE;

typedef struct tagRAWMOUSE RAWMOUSE;

typedef struct tagRAWKEYBOARD tagRAWKEYBOARD, *PtagRAWKEYBOARD;

typedef struct tagRAWKEYBOARD RAWKEYBOARD;

typedef struct tagRAWHID tagRAWHID, *PtagRAWHID;

typedef struct tagRAWHID RAWHID;

struct tagRAWMOUSE {
    USHORT usFlags;
    union _union_923 field_0x2;
    ULONG ulRawButtons;
    LONG lLastX;
    LONG lLastY;
    ULONG ulExtraInformation;
};

struct tagRAWHID {
    DWORD dwSizeHid;
    DWORD dwCount;
    BYTE bRawData[1];
};

struct tagRAWKEYBOARD {
    USHORT MakeCode;
    USHORT Flags;
    USHORT Reserved;
    USHORT VKey;
    UINT Message;
    ULONG ExtraInformation;
};

union _union_928 {
    RAWMOUSE mouse;
    RAWKEYBOARD keyboard;
    RAWHID hid;
};

typedef union _union_933 _union_933, *P_union_933;

typedef struct tagRID_DEVICE_INFO_MOUSE tagRID_DEVICE_INFO_MOUSE, *PtagRID_DEVICE_INFO_MOUSE;

typedef struct tagRID_DEVICE_INFO_MOUSE RID_DEVICE_INFO_MOUSE;

typedef struct tagRID_DEVICE_INFO_KEYBOARD tagRID_DEVICE_INFO_KEYBOARD, *PtagRID_DEVICE_INFO_KEYBOARD;

typedef struct tagRID_DEVICE_INFO_KEYBOARD RID_DEVICE_INFO_KEYBOARD;

typedef struct tagRID_DEVICE_INFO_HID tagRID_DEVICE_INFO_HID, *PtagRID_DEVICE_INFO_HID;

typedef struct tagRID_DEVICE_INFO_HID RID_DEVICE_INFO_HID;

struct tagRID_DEVICE_INFO_HID {
    DWORD dwVendorId;
    DWORD dwProductId;
    DWORD dwVersionNumber;
    USHORT usUsagePage;
    USHORT usUsage;
};

struct tagRID_DEVICE_INFO_KEYBOARD {
    DWORD dwType;
    DWORD dwSubType;
    DWORD dwKeyboardMode;
    DWORD dwNumberOfFunctionKeys;
    DWORD dwNumberOfIndicators;
    DWORD dwNumberOfKeysTotal;
};

struct tagRID_DEVICE_INFO_MOUSE {
    DWORD dwId;
    DWORD dwNumberOfButtons;
    DWORD dwSampleRate;
    BOOL fHasHorizontalWheel;
};

union _union_933 {
    RID_DEVICE_INFO_MOUSE mouse;
    RID_DEVICE_INFO_KEYBOARD keyboard;
    RID_DEVICE_INFO_HID hid;
};

typedef struct tagACCEL tagACCEL, *PtagACCEL;

typedef struct tagACCEL ACCEL;

struct tagACCEL {
    BYTE fVirt;
    WORD key;
    WORD cmd;
};

typedef struct tagACCESSTIMEOUT tagACCESSTIMEOUT, *PtagACCESSTIMEOUT;

typedef struct tagACCESSTIMEOUT ACCESSTIMEOUT;

struct tagACCESSTIMEOUT {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iTimeOutMSec;
};

typedef struct tagALTTABINFO tagALTTABINFO, *PtagALTTABINFO;

typedef struct tagALTTABINFO ALTTABINFO;

struct tagALTTABINFO {
    DWORD cbSize;
    int cItems;
    int cColumns;
    int cRows;
    int iColFocus;
    int iRowFocus;
    int cxItem;
    int cyItem;
    POINT ptStart;
};

typedef struct tagANIMATIONINFO tagANIMATIONINFO, *PtagANIMATIONINFO;

typedef struct tagANIMATIONINFO ANIMATIONINFO;

struct tagANIMATIONINFO {
    UINT cbSize;
    int iMinAnimate;
};

typedef union anon__struct_915_bitfield_1 anon__struct_915_bitfield_1, *Panon__struct_915_bitfield_1;

union anon__struct_915_bitfield_1 {
    BOOL fBarFocused:1; /* : bits 0 */
    BOOL fFocused:1; /* : bits 1 */
};

typedef struct tagAUDIODESCRIPTION tagAUDIODESCRIPTION, *PtagAUDIODESCRIPTION;

typedef struct tagAUDIODESCRIPTION AUDIODESCRIPTION;

struct tagAUDIODESCRIPTION {
    UINT cbSize;
    BOOL Enabled;
    LCID Locale;
};

typedef struct BSMINFO BSMINFO, *PBSMINFO;

struct BSMINFO {
    UINT cbSize;
    HDESK hdesk;
    HWND hwnd;
    LUID luid;
};

typedef struct tagCBT_CREATEWNDA tagCBT_CREATEWNDA, *PtagCBT_CREATEWNDA;

typedef struct tagCBT_CREATEWNDA CBT_CREATEWNDA;

typedef CBT_CREATEWNDA CBT_CREATEWND;

typedef struct tagCREATESTRUCTA tagCREATESTRUCTA, *PtagCREATESTRUCTA;

struct tagCBT_CREATEWNDA {
    struct tagCREATESTRUCTA * lpcs;
    HWND hwndInsertAfter;
};

struct tagCREATESTRUCTA {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    int cy;
    int cx;
    int y;
    int x;
    LONG style;
    LPCSTR lpszName;
    LPCSTR lpszClass;
    DWORD dwExStyle;
};

typedef struct tagCBT_CREATEWNDW tagCBT_CREATEWNDW, *PtagCBT_CREATEWNDW;

typedef struct tagCBT_CREATEWNDW CBT_CREATEWNDW;

typedef struct tagCREATESTRUCTW tagCREATESTRUCTW, *PtagCREATESTRUCTW;

struct tagCREATESTRUCTW {
    LPVOID lpCreateParams;
    HINSTANCE hInstance;
    HMENU hMenu;
    HWND hwndParent;
    int cy;
    int cx;
    int y;
    int x;
    LONG style;
    LPCWSTR lpszName;
    LPCWSTR lpszClass;
    DWORD dwExStyle;
};

struct tagCBT_CREATEWNDW {
    struct tagCREATESTRUCTW * lpcs;
    HWND hwndInsertAfter;
};

typedef struct tagCBTACTIVATESTRUCT tagCBTACTIVATESTRUCT, *PtagCBTACTIVATESTRUCT;

typedef struct tagCBTACTIVATESTRUCT CBTACTIVATESTRUCT;

struct tagCBTACTIVATESTRUCT {
    BOOL fMouse;
    HWND hWndActive;
};

typedef struct tagCHANGEFILTERSTRUCT tagCHANGEFILTERSTRUCT, *PtagCHANGEFILTERSTRUCT;

typedef struct tagCHANGEFILTERSTRUCT CHANGEFILTERSTRUCT;

struct tagCHANGEFILTERSTRUCT {
    DWORD cbSize;
    DWORD ExtStatus;
};

typedef struct tagCLIENTCREATESTRUCT tagCLIENTCREATESTRUCT, *PtagCLIENTCREATESTRUCT;

typedef struct tagCLIENTCREATESTRUCT CLIENTCREATESTRUCT;

struct tagCLIENTCREATESTRUCT {
    HANDLE hWindowMenu;
    UINT idFirstChild;
};

typedef struct tagCOMBOBOXINFO tagCOMBOBOXINFO, *PtagCOMBOBOXINFO;

typedef struct tagCOMBOBOXINFO COMBOBOXINFO;

struct tagCOMBOBOXINFO {
    DWORD cbSize;
    RECT rcItem;
    RECT rcButton;
    DWORD stateButton;
    HWND hwndCombo;
    HWND hwndItem;
    HWND hwndList;
};

typedef struct tagCOMPAREITEMSTRUCT tagCOMPAREITEMSTRUCT, *PtagCOMPAREITEMSTRUCT;

typedef struct tagCOMPAREITEMSTRUCT COMPAREITEMSTRUCT;

struct tagCOMPAREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    HWND hwndItem;
    UINT itemID1;
    ULONG_PTR itemData1;
    UINT itemID2;
    ULONG_PTR itemData2;
    DWORD dwLocaleId;
};

typedef struct tagCOPYDATASTRUCT tagCOPYDATASTRUCT, *PtagCOPYDATASTRUCT;

typedef struct tagCOPYDATASTRUCT COPYDATASTRUCT;

struct tagCOPYDATASTRUCT {
    ULONG_PTR dwData;
    DWORD cbData;
    PVOID lpData;
};

typedef struct tagCREATESTRUCTA CREATESTRUCTA;

typedef CREATESTRUCTA CREATESTRUCT;

typedef struct tagCREATESTRUCTW CREATESTRUCTW;

typedef struct tagCURSORINFO tagCURSORINFO, *PtagCURSORINFO;

typedef struct tagCURSORINFO CURSORINFO;

struct tagCURSORINFO {
    DWORD cbSize;
    DWORD flags;
    HCURSOR hCursor;
    POINT ptScreenPos;
};

typedef struct tagCURSORSHAPE tagCURSORSHAPE, *PtagCURSORSHAPE;

typedef struct tagCURSORSHAPE CURSORSHAPE;

struct tagCURSORSHAPE {
    int xHotSpot;
    int yHotSpot;
    int cx;
    int cy;
    int cbWidth;
    BYTE Planes;
    BYTE BitsPixel;
};

typedef struct tagCWPRETSTRUCT tagCWPRETSTRUCT, *PtagCWPRETSTRUCT;

typedef struct tagCWPRETSTRUCT CWPRETSTRUCT;

struct tagCWPRETSTRUCT {
    LRESULT lResult;
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
};

typedef struct tagCWPSTRUCT tagCWPSTRUCT, *PtagCWPSTRUCT;

typedef struct tagCWPSTRUCT CWPSTRUCT;

struct tagCWPSTRUCT {
    LPARAM lParam;
    WPARAM wParam;
    UINT message;
    HWND hwnd;
};

typedef struct tagDEBUGHOOKINFO tagDEBUGHOOKINFO, *PtagDEBUGHOOKINFO;

typedef struct tagDEBUGHOOKINFO DEBUGHOOKINFO;

struct tagDEBUGHOOKINFO {
    DWORD idThread;
    DWORD idThreadInstaller;
    LPARAM lParam;
    WPARAM wParam;
    int code;
};

typedef struct tagDELETEITEMSTRUCT tagDELETEITEMSTRUCT, *PtagDELETEITEMSTRUCT;

typedef struct tagDELETEITEMSTRUCT DELETEITEMSTRUCT;

struct tagDELETEITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    HWND hwndItem;
    ULONG_PTR itemData;
};

typedef BOOL (* NAMEENUMPROCA)(LPSTR, LPARAM);

typedef NAMEENUMPROCA DESKTOPENUMPROCA;

typedef DESKTOPENUMPROCA DESKTOPENUMPROC;

typedef BOOL (* NAMEENUMPROCW)(LPWSTR, LPARAM);

typedef NAMEENUMPROCW DESKTOPENUMPROCW;

typedef struct DLGITEMTEMPLATE DLGITEMTEMPLATE, *PDLGITEMTEMPLATE;

struct DLGITEMTEMPLATE {
    DWORD style;
    DWORD dwExtendedStyle;
    short x;
    short y;
    short cx;
    short cy;
    WORD id;
};

typedef struct tagDRAWITEMSTRUCT tagDRAWITEMSTRUCT, *PtagDRAWITEMSTRUCT;

typedef struct tagDRAWITEMSTRUCT DRAWITEMSTRUCT;

struct tagDRAWITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemAction;
    UINT itemState;
    HWND hwndItem;
    HDC hDC;
    RECT rcItem;
    ULONG_PTR itemData;
};

typedef BOOL (* DRAWSTATEPROC)(HDC, LPARAM, WPARAM, int, int);

typedef struct tagDRAWTEXTPARAMS tagDRAWTEXTPARAMS, *PtagDRAWTEXTPARAMS;

typedef struct tagDRAWTEXTPARAMS DRAWTEXTPARAMS;

struct tagDRAWTEXTPARAMS {
    UINT cbSize;
    int iTabLength;
    int iLeftMargin;
    int iRightMargin;
    UINT uiLengthDrawn;
};

typedef struct tagDROPSTRUCT tagDROPSTRUCT, *PtagDROPSTRUCT;

typedef struct tagDROPSTRUCT DROPSTRUCT;

struct tagDROPSTRUCT {
    HWND hwndSource;
    HWND hwndSink;
    DWORD wFmt;
    ULONG_PTR dwData;
    POINT ptDrop;
    DWORD dwControlData;
};

typedef int (* EDITWORDBREAKPROCA)(LPSTR, int, int, int);

typedef EDITWORDBREAKPROCA EDITWORDBREAKPROC;

typedef int (* EDITWORDBREAKPROCW)(LPWSTR, int, int, int);

typedef struct tagEVENTMSG tagEVENTMSG, *PtagEVENTMSG;

typedef struct tagEVENTMSG EVENTMSG;

struct tagEVENTMSG {
    UINT message;
    UINT paramL;
    UINT paramH;
    DWORD time;
    HWND hwnd;
};

typedef struct tagFILTERKEYS tagFILTERKEYS, *PtagFILTERKEYS;

typedef struct tagFILTERKEYS FILTERKEYS;

struct tagFILTERKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iWaitMSec;
    DWORD iDelayMSec;
    DWORD iRepeatMSec;
    DWORD iBounceMSec;
};

typedef struct FLASHWINFO FLASHWINFO, *PFLASHWINFO;

struct FLASHWINFO {
    UINT cbSize;
    HWND hwnd;
    DWORD dwFlags;
    UINT uCount;
    DWORD dwTimeout;
};

typedef struct tagGESTURECONFIG tagGESTURECONFIG, *PtagGESTURECONFIG;

typedef struct tagGESTURECONFIG GESTURECONFIG;

struct tagGESTURECONFIG {
    DWORD dwID;
    DWORD dwWant;
    DWORD dwBlock;
};

typedef struct tagGESTUREINFO tagGESTUREINFO, *PtagGESTUREINFO;

typedef struct tagGESTUREINFO GESTUREINFO;

struct tagGESTUREINFO {
    UINT cbSize;
    DWORD dwFlags;
    DWORD dwID;
    HWND hwndTarget;
    POINTS ptsLocation;
    DWORD dwInstanceID;
    DWORD dwSequenceID;
    ULONGLONG ullArguments;
    UINT cbExtraArgs;
};

typedef struct tagGESTURENOTIFYSTRUCT tagGESTURENOTIFYSTRUCT, *PtagGESTURENOTIFYSTRUCT;

typedef struct tagGESTURENOTIFYSTRUCT GESTURENOTIFYSTRUCT;

struct tagGESTURENOTIFYSTRUCT {
    UINT cbSize;
    DWORD dwFlags;
    HWND hwndTarget;
    POINTS ptsLocation;
    DWORD dwInstanceID;
};

typedef BOOL (* GRAYSTRINGPROC)(HDC, LPARAM, int);

typedef struct tagGUITHREADINFO tagGUITHREADINFO, *PtagGUITHREADINFO;

typedef struct tagGUITHREADINFO GUITHREADINFO;

struct tagGUITHREADINFO {
    DWORD cbSize;
    DWORD flags;
    HWND hwndActive;
    HWND hwndFocus;
    HWND hwndCapture;
    HWND hwndMenuOwner;
    HWND hwndMoveSize;
    HWND hwndCaret;
    RECT rcCaret;
};

typedef struct tagHARDWAREHOOKSTRUCT tagHARDWAREHOOKSTRUCT, *PtagHARDWAREHOOKSTRUCT;

typedef struct tagHARDWAREHOOKSTRUCT HARDWAREHOOKSTRUCT;

struct tagHARDWAREHOOKSTRUCT {
    HWND hwnd;
    UINT message;
    WPARAM wParam;
    LPARAM lParam;
};

typedef PVOID HDEVNOTIFY;

typedef struct tagHELPINFO tagHELPINFO, *PtagHELPINFO;

typedef struct tagHELPINFO HELPINFO;

struct tagHELPINFO {
    UINT cbSize;
    int iContextType;
    int iCtrlId;
    HANDLE hItemHandle;
    DWORD_PTR dwContextId;
    POINT MousePos;
};

typedef DWORD HELPPOLY;

typedef struct tagHELPWININFOA tagHELPWININFOA, *PtagHELPWININFOA;

typedef struct tagHELPWININFOA HELPWININFOA;

typedef HELPWININFOA HELPWININFO;

struct tagHELPWININFOA {
    int wStructSize;
    int x;
    int y;
    int dx;
    int dy;
    int wMax;
    CHAR rgchMember[2];
};

typedef struct tagHELPWININFOW tagHELPWININFOW, *PtagHELPWININFOW;

typedef struct tagHELPWININFOW HELPWININFOW;

struct tagHELPWININFOW {
    int wStructSize;
    int x;
    int y;
    int dx;
    int dy;
    int wMax;
    WCHAR rgchMember[2];
};

typedef struct HGESTUREINFO__ HGESTUREINFO__, *PHGESTUREINFO__;

typedef struct HGESTUREINFO__ * HGESTUREINFO;

struct HGESTUREINFO__ {
    int unused;
};

typedef struct tagHIGHCONTRASTA tagHIGHCONTRASTA, *PtagHIGHCONTRASTA;

typedef struct tagHIGHCONTRASTA HIGHCONTRASTA;

typedef HIGHCONTRASTA HIGHCONTRAST;

struct tagHIGHCONTRASTA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszDefaultScheme;
};

typedef struct tagHIGHCONTRASTW tagHIGHCONTRASTW, *PtagHIGHCONTRASTW;

typedef struct tagHIGHCONTRASTW HIGHCONTRASTW;

struct tagHIGHCONTRASTW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszDefaultScheme;
};

typedef LRESULT (* HOOKPROC)(int, WPARAM, LPARAM);

typedef PVOID HPOWERNOTIFY;

typedef struct HRAWINPUT__ HRAWINPUT__, *PHRAWINPUT__;

typedef struct HRAWINPUT__ * HRAWINPUT;

struct HRAWINPUT__ {
    int unused;
};

typedef struct HTOUCHINPUT__ HTOUCHINPUT__, *PHTOUCHINPUT__;

typedef struct HTOUCHINPUT__ * HTOUCHINPUT;

struct HTOUCHINPUT__ {
    int unused;
};

typedef struct _ICONINFO ICONINFO;

typedef struct _ICONINFOEXA ICONINFOEXA;

typedef ICONINFOEXA ICONINFOEX;

typedef struct _ICONINFOEXW ICONINFOEXW;

typedef struct tagICONMETRICSA tagICONMETRICSA, *PtagICONMETRICSA;

typedef struct tagICONMETRICSA ICONMETRICSA;

typedef ICONMETRICSA ICONMETRICS;

struct tagICONMETRICSA {
    UINT cbSize;
    int iHorzSpacing;
    int iVertSpacing;
    int iTitleWrap;
    LOGFONTA lfFont;
};

typedef struct tagICONMETRICSW tagICONMETRICSW, *PtagICONMETRICSW;

typedef struct tagICONMETRICSW ICONMETRICSW;

struct tagICONMETRICSW {
    UINT cbSize;
    int iHorzSpacing;
    int iVertSpacing;
    int iTitleWrap;
    LOGFONTW lfFont;
};

typedef struct tagINPUT tagINPUT, *PtagINPUT;

typedef struct tagINPUT INPUT;

struct tagINPUT {
    DWORD type;
    union _union_859 field_0x4;
};

typedef struct tagKBDLLHOOKSTRUCT tagKBDLLHOOKSTRUCT, *PtagKBDLLHOOKSTRUCT;

typedef struct tagKBDLLHOOKSTRUCT KBDLLHOOKSTRUCT;

struct tagKBDLLHOOKSTRUCT {
    DWORD vkCode;
    DWORD scanCode;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagLASTINPUTINFO tagLASTINPUTINFO, *PtagLASTINPUTINFO;

typedef struct tagLASTINPUTINFO LASTINPUTINFO;

struct tagLASTINPUTINFO {
    UINT cbSize;
    DWORD dwTime;
};

typedef struct tagACCEL * LPACCEL;

typedef struct tagACCESSTIMEOUT * LPACCESSTIMEOUT;

typedef struct tagALTTABINFO * LPALTTABINFO;

typedef struct tagANIMATIONINFO * LPANIMATIONINFO;

typedef struct tagAUDIODESCRIPTION * LPAUDIODESCRIPTION;

typedef struct tagCBT_CREATEWNDA * LPCBT_CREATEWNDA;

typedef LPCBT_CREATEWNDA LPCBT_CREATEWND;

typedef struct tagCBT_CREATEWNDW * LPCBT_CREATEWNDW;

typedef struct tagCBTACTIVATESTRUCT * LPCBTACTIVATESTRUCT;

typedef struct DLGTEMPLATE * LPCDLGTEMPLATEW;

typedef struct tagCLIENTCREATESTRUCT * LPCLIENTCREATESTRUCT;

typedef struct tagMENUINFO tagMENUINFO, *PtagMENUINFO;

typedef struct tagMENUINFO MENUINFO;

typedef MENUINFO * LPCMENUINFO;

struct tagMENUINFO {
    DWORD cbSize;
    DWORD fMask;
    DWORD dwStyle;
    UINT cyMax;
    HBRUSH hbrBack;
    DWORD dwContextHelpID;
    ULONG_PTR dwMenuData;
};

typedef struct tagMENUITEMINFOA tagMENUITEMINFOA, *PtagMENUITEMINFOA;

typedef struct tagMENUITEMINFOA MENUITEMINFOA;

typedef MENUITEMINFOA * LPCMENUITEMINFOA;

typedef LPCMENUITEMINFOA LPCMENUITEMINFO;

struct tagMENUITEMINFOA {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

typedef struct tagMENUITEMINFOW tagMENUITEMINFOW, *PtagMENUITEMINFOW;

typedef struct tagMENUITEMINFOW MENUITEMINFOW;

typedef MENUITEMINFOW * LPCMENUITEMINFOW;

struct tagMENUITEMINFOW {
    UINT cbSize;
    UINT fMask;
    UINT fType;
    UINT fState;
    UINT wID;
    HMENU hSubMenu;
    HBITMAP hbmpChecked;
    HBITMAP hbmpUnchecked;
    ULONG_PTR dwItemData;
    LPWSTR dwTypeData;
    UINT cch;
    HBITMAP hbmpItem;
};

typedef struct tagCOMBOBOXINFO * LPCOMBOBOXINFO;

typedef struct tagCOMPAREITEMSTRUCT * LPCOMPAREITEMSTRUCT;

typedef struct tagCREATESTRUCTA * LPCREATESTRUCTA;

typedef LPCREATESTRUCTA LPCREATESTRUCT;

typedef struct tagCREATESTRUCTW * LPCREATESTRUCTW;

typedef struct tagSCROLLINFO tagSCROLLINFO, *PtagSCROLLINFO;

typedef struct tagSCROLLINFO SCROLLINFO;

typedef SCROLLINFO * LPCSCROLLINFO;

struct tagSCROLLINFO {
    UINT cbSize;
    UINT fMask;
    int nMin;
    int nMax;
    UINT nPage;
    int nPos;
    int nTrackPos;
};

typedef struct tagCURSORINFO * LPCURSORINFO;

typedef struct tagCURSORSHAPE * LPCURSORSHAPE;

typedef struct tagCWPRETSTRUCT * LPCWPRETSTRUCT;

typedef struct tagCWPSTRUCT * LPCWPSTRUCT;

typedef struct tagDEBUGHOOKINFO * LPDEBUGHOOKINFO;

typedef struct tagDELETEITEMSTRUCT * LPDELETEITEMSTRUCT;

typedef struct DLGITEMTEMPLATE * LPDLGITEMTEMPLATEA;

typedef LPDLGITEMTEMPLATEA LPDLGITEMTEMPLATE;

typedef struct DLGITEMTEMPLATE * LPDLGITEMTEMPLATEW;

typedef struct DLGTEMPLATE * LPDLGTEMPLATEA;

typedef LPDLGTEMPLATEA LPDLGTEMPLATE;

typedef struct DLGTEMPLATE * LPDLGTEMPLATEW;

typedef struct tagDRAWITEMSTRUCT * LPDRAWITEMSTRUCT;

typedef struct tagDRAWTEXTPARAMS * LPDRAWTEXTPARAMS;

typedef struct tagDROPSTRUCT * LPDROPSTRUCT;

typedef struct tagEVENTMSG * LPEVENTMSG;

typedef struct tagEVENTMSG * LPEVENTMSGMSG;

typedef struct tagFILTERKEYS * LPFILTERKEYS;

typedef struct tagGUITHREADINFO * LPGUITHREADINFO;

typedef struct tagHARDWAREHOOKSTRUCT * LPHARDWAREHOOKSTRUCT;

typedef struct tagHARDWAREINPUT * LPHARDWAREINPUT;

typedef struct tagHELPINFO * LPHELPINFO;

typedef struct tagHELPWININFOA * LPHELPWININFOA;

typedef LPHELPWININFOA LPHELPWININFO;

typedef struct tagHELPWININFOW * LPHELPWININFOW;

typedef struct tagHIGHCONTRASTA * LPHIGHCONTRASTA;

typedef LPHIGHCONTRASTA LPHIGHCONTRAST;

typedef struct tagHIGHCONTRASTW * LPHIGHCONTRASTW;

typedef struct tagICONMETRICSA * LPICONMETRICSA;

typedef LPICONMETRICSA LPICONMETRICS;

typedef struct tagICONMETRICSW * LPICONMETRICSW;

typedef struct tagINPUT * LPINPUT;

typedef struct tagKBDLLHOOKSTRUCT * LPKBDLLHOOKSTRUCT;

typedef struct tagKEYBDINPUT * LPKEYBDINPUT;

typedef struct tagMDICREATESTRUCTA tagMDICREATESTRUCTA, *PtagMDICREATESTRUCTA;

typedef struct tagMDICREATESTRUCTA * LPMDICREATESTRUCTA;

typedef LPMDICREATESTRUCTA LPMDICREATESTRUCT;

struct tagMDICREATESTRUCTA {
    LPCSTR szClass;
    LPCSTR szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;
};

typedef struct tagMDICREATESTRUCTW tagMDICREATESTRUCTW, *PtagMDICREATESTRUCTW;

typedef struct tagMDICREATESTRUCTW * LPMDICREATESTRUCTW;

struct tagMDICREATESTRUCTW {
    LPCWSTR szClass;
    LPCWSTR szTitle;
    HANDLE hOwner;
    int x;
    int y;
    int cx;
    int cy;
    DWORD style;
    LPARAM lParam;
};

typedef struct tagMDINEXTMENU tagMDINEXTMENU, *PtagMDINEXTMENU;

typedef struct tagMDINEXTMENU * LPMDINEXTMENU;

struct tagMDINEXTMENU {
    HMENU hmenuIn;
    HMENU hmenuNext;
    HWND hwndNext;
};

typedef struct tagMEASUREITEMSTRUCT tagMEASUREITEMSTRUCT, *PtagMEASUREITEMSTRUCT;

typedef struct tagMEASUREITEMSTRUCT * LPMEASUREITEMSTRUCT;

struct tagMEASUREITEMSTRUCT {
    UINT CtlType;
    UINT CtlID;
    UINT itemID;
    UINT itemWidth;
    UINT itemHeight;
    ULONG_PTR itemData;
};

typedef struct tagMENUBARINFO tagMENUBARINFO, *PtagMENUBARINFO;

typedef struct tagMENUBARINFO * LPMENUBARINFO;

struct tagMENUBARINFO {
    DWORD cbSize;
    RECT rcBar;
    HMENU hMenu;
    HWND hwndMenu;
    union anon__struct_915_bitfield_1 field_0x1c;
};

typedef struct tagMENUINFO * LPMENUINFO;

typedef struct tagMENUITEMINFOA * LPMENUITEMINFOA;

typedef LPMENUITEMINFOA LPMENUITEMINFO;

typedef struct tagMENUITEMINFOW * LPMENUITEMINFOW;

typedef PVOID LPMENUTEMPLATEA;

typedef LPMENUTEMPLATEA LPMENUTEMPLATE;

typedef PVOID LPMENUTEMPLATEW;

typedef struct tagMINIMIZEDMETRICS tagMINIMIZEDMETRICS, *PtagMINIMIZEDMETRICS;

typedef struct tagMINIMIZEDMETRICS * LPMINIMIZEDMETRICS;

struct tagMINIMIZEDMETRICS {
    UINT cbSize;
    int iWidth;
    int iHorzGap;
    int iVertGap;
    int iArrange;
};

typedef struct tagMINMAXINFO tagMINMAXINFO, *PtagMINMAXINFO;

typedef struct tagMINMAXINFO * LPMINMAXINFO;

struct tagMINMAXINFO {
    POINT ptReserved;
    POINT ptMaxSize;
    POINT ptMaxPosition;
    POINT ptMinTrackSize;
    POINT ptMaxTrackSize;
};

typedef struct tagMONITORINFO tagMONITORINFO, *PtagMONITORINFO;

typedef struct tagMONITORINFO * LPMONITORINFO;

struct tagMONITORINFO {
    DWORD cbSize;
    RECT rcMonitor;
    RECT rcWork;
    DWORD dwFlags;
};

typedef struct tagMONITORINFOEXA tagMONITORINFOEXA, *PtagMONITORINFOEXA;

typedef struct tagMONITORINFOEXA * LPMONITORINFOEXA;

typedef LPMONITORINFOEXA LPMONITORINFOEX;

typedef struct tagMONITORINFO MONITORINFO;

struct tagMONITORINFOEXA {
    MONITORINFO field_0x0;
    CHAR szDevice[32];
};

typedef struct tagMONITORINFOEXW tagMONITORINFOEXW, *PtagMONITORINFOEXW;

typedef struct tagMONITORINFOEXW * LPMONITORINFOEXW;

struct tagMONITORINFOEXW {
    MONITORINFO field_0x0;
    WCHAR szDevice[32];
};

typedef struct tagMOUSEHOOKSTRUCT tagMOUSEHOOKSTRUCT, *PtagMOUSEHOOKSTRUCT;

typedef struct tagMOUSEHOOKSTRUCT * LPMOUSEHOOKSTRUCT;

struct tagMOUSEHOOKSTRUCT {
    POINT pt;
    HWND hwnd;
    UINT wHitTestCode;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMOUSEHOOKSTRUCTEX tagMOUSEHOOKSTRUCTEX, *PtagMOUSEHOOKSTRUCTEX;

typedef struct tagMOUSEHOOKSTRUCTEX * LPMOUSEHOOKSTRUCTEX;

typedef struct tagMOUSEHOOKSTRUCT MOUSEHOOKSTRUCT;

struct tagMOUSEHOOKSTRUCTEX {
    MOUSEHOOKSTRUCT field_0x0;
    DWORD mouseData;
};

typedef struct tagMOUSEINPUT * LPMOUSEINPUT;

typedef struct tagMOUSEKEYS tagMOUSEKEYS, *PtagMOUSEKEYS;

typedef struct tagMOUSEKEYS * LPMOUSEKEYS;

struct tagMOUSEKEYS {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iMaxSpeed;
    DWORD iTimeToMaxSpeed;
    DWORD iCtrlSpeed;
    DWORD dwReserved1;
    DWORD dwReserved2;
};

typedef struct tagMOUSEMOVEPOINT tagMOUSEMOVEPOINT, *PtagMOUSEMOVEPOINT;

typedef struct tagMOUSEMOVEPOINT * LPMOUSEMOVEPOINT;

struct tagMOUSEMOVEPOINT {
    int x;
    int y;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMSGBOXPARAMSA tagMSGBOXPARAMSA, *PtagMSGBOXPARAMSA;

typedef struct tagMSGBOXPARAMSA * LPMSGBOXPARAMSA;

typedef LPMSGBOXPARAMSA LPMSGBOXPARAMS;

typedef void (* MSGBOXCALLBACK)(LPHELPINFO);

struct tagMSGBOXPARAMSA {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCSTR lpszText;
    LPCSTR lpszCaption;
    DWORD dwStyle;
    LPCSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

typedef struct tagMSGBOXPARAMSW tagMSGBOXPARAMSW, *PtagMSGBOXPARAMSW;

typedef struct tagMSGBOXPARAMSW * LPMSGBOXPARAMSW;

struct tagMSGBOXPARAMSW {
    UINT cbSize;
    HWND hwndOwner;
    HINSTANCE hInstance;
    LPCWSTR lpszText;
    LPCWSTR lpszCaption;
    DWORD dwStyle;
    LPCWSTR lpszIcon;
    DWORD_PTR dwContextHelpId;
    MSGBOXCALLBACK lpfnMsgBoxCallback;
    DWORD dwLanguageId;
};

typedef struct tagMSLLHOOKSTRUCT tagMSLLHOOKSTRUCT, *PtagMSLLHOOKSTRUCT;

typedef struct tagMSLLHOOKSTRUCT * LPMSLLHOOKSTRUCT;

struct tagMSLLHOOKSTRUCT {
    POINT pt;
    DWORD mouseData;
    DWORD flags;
    DWORD time;
    ULONG_PTR dwExtraInfo;
};

typedef struct tagMULTIKEYHELPA tagMULTIKEYHELPA, *PtagMULTIKEYHELPA;

typedef struct tagMULTIKEYHELPA * LPMULTIKEYHELPA;

typedef LPMULTIKEYHELPA LPMULTIKEYHELP;

struct tagMULTIKEYHELPA {
    DWORD mkSize;
    CHAR mkKeylist;
    CHAR szKeyphrase[1];
};

typedef struct tagMULTIKEYHELPW tagMULTIKEYHELPW, *PtagMULTIKEYHELPW;

typedef struct tagMULTIKEYHELPW * LPMULTIKEYHELPW;

struct tagMULTIKEYHELPW {
    DWORD mkSize;
    WCHAR mkKeylist;
    WCHAR szKeyphrase[1];
};

typedef struct tagNCCALCSIZE_PARAMS tagNCCALCSIZE_PARAMS, *PtagNCCALCSIZE_PARAMS;

typedef struct tagNCCALCSIZE_PARAMS * LPNCCALCSIZE_PARAMS;

typedef struct tagWINDOWPOS * PWINDOWPOS;

struct tagNCCALCSIZE_PARAMS {
    RECT rgrc[3];
    PWINDOWPOS lppos;
};

typedef NMHDR * LPNMHDR;

typedef struct tagNONCLIENTMETRICSA tagNONCLIENTMETRICSA, *PtagNONCLIENTMETRICSA;

typedef struct tagNONCLIENTMETRICSA * LPNONCLIENTMETRICSA;

typedef LPNONCLIENTMETRICSA LPNONCLIENTMETRICS;

struct tagNONCLIENTMETRICSA {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTA lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTA lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTA lfMenuFont;
    LOGFONTA lfStatusFont;
    LOGFONTA lfMessageFont;
    int iPaddedBorderWidth;
};

typedef struct tagNONCLIENTMETRICSW tagNONCLIENTMETRICSW, *PtagNONCLIENTMETRICSW;

typedef struct tagNONCLIENTMETRICSW * LPNONCLIENTMETRICSW;

struct tagNONCLIENTMETRICSW {
    UINT cbSize;
    int iBorderWidth;
    int iScrollWidth;
    int iScrollHeight;
    int iCaptionWidth;
    int iCaptionHeight;
    LOGFONTW lfCaptionFont;
    int iSmCaptionWidth;
    int iSmCaptionHeight;
    LOGFONTW lfSmCaptionFont;
    int iMenuWidth;
    int iMenuHeight;
    LOGFONTW lfMenuFont;
    LOGFONTW lfStatusFont;
    LOGFONTW lfMessageFont;
    int iPaddedBorderWidth;
};

typedef struct tagPAINTSTRUCT tagPAINTSTRUCT, *PtagPAINTSTRUCT;

typedef struct tagPAINTSTRUCT * LPPAINTSTRUCT;

struct tagPAINTSTRUCT {
    HDC hdc;
    BOOL fErase;
    RECT rcPaint;
    BOOL fRestore;
    BOOL fIncUpdate;
    BYTE rgbReserved[32];
};

typedef struct tagRAWHID * LPRAWHID;

typedef struct tagRAWINPUT tagRAWINPUT, *PtagRAWINPUT;

typedef struct tagRAWINPUT * LPRAWINPUT;

typedef struct tagRAWINPUTHEADER tagRAWINPUTHEADER, *PtagRAWINPUTHEADER;

typedef struct tagRAWINPUTHEADER RAWINPUTHEADER;

struct tagRAWINPUTHEADER {
    DWORD dwType;
    DWORD dwSize;
    HANDLE hDevice;
    WPARAM wParam;
};

struct tagRAWINPUT {
    RAWINPUTHEADER header;
    union _union_928 data;
};

typedef struct tagRAWINPUTDEVICE tagRAWINPUTDEVICE, *PtagRAWINPUTDEVICE;

typedef struct tagRAWINPUTDEVICE * LPRAWINPUTDEVICE;

struct tagRAWINPUTDEVICE {
    USHORT usUsagePage;
    USHORT usUsage;
    DWORD dwFlags;
    HWND hwndTarget;
};

typedef struct tagRAWINPUTHEADER * LPRAWINPUTHEADER;

typedef struct tagRAWKEYBOARD * LPRAWKEYBOARD;

typedef struct tagRAWMOUSE * LPRAWMOUSE;

typedef struct tagRID_DEVICE_INFO tagRID_DEVICE_INFO, *PtagRID_DEVICE_INFO;

typedef struct tagRID_DEVICE_INFO * LPRID_DEVICE_INFO;

struct tagRID_DEVICE_INFO {
    DWORD cbSize;
    DWORD dwType;
    union _union_933 field_0x8;
};

typedef struct tagSCROLLBARINFO tagSCROLLBARINFO, *PtagSCROLLBARINFO;

typedef struct tagSCROLLBARINFO * LPSCROLLBARINFO;

struct tagSCROLLBARINFO {
    DWORD cbSize;
    RECT rcScrollBar;
    int dxyLineButton;
    int xyThumbTop;
    int xyThumbBottom;
    int reserved;
    DWORD rgstate[6];
};

typedef struct tagSCROLLINFO * LPSCROLLINFO;

typedef struct tagSERIALKEYSA tagSERIALKEYSA, *PtagSERIALKEYSA;

typedef struct tagSERIALKEYSA * LPSERIALKEYSA;

typedef LPSERIALKEYSA LPSERIALKEYS;

struct tagSERIALKEYSA {
    UINT cbSize;
    DWORD dwFlags;
    LPSTR lpszActivePort;
    LPSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
};

typedef struct tagSERIALKEYSW tagSERIALKEYSW, *PtagSERIALKEYSW;

typedef struct tagSERIALKEYSW * LPSERIALKEYSW;

struct tagSERIALKEYSW {
    UINT cbSize;
    DWORD dwFlags;
    LPWSTR lpszActivePort;
    LPWSTR lpszPort;
    UINT iBaudRate;
    UINT iPortState;
    UINT iActive;
};

typedef struct SHELLHOOKINFO SHELLHOOKINFO, *PSHELLHOOKINFO;

typedef struct SHELLHOOKINFO * LPSHELLHOOKINFO;

struct SHELLHOOKINFO {
    HWND hwnd;
    RECT rc;
};

typedef struct tagSOUNDSENTRYA tagSOUNDSENTRYA, *PtagSOUNDSENTRYA;

typedef struct tagSOUNDSENTRYA * LPSOUNDSENTRYA;

typedef LPSOUNDSENTRYA LPSOUNDSENTRY;

struct tagSOUNDSENTRYA {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
};

typedef struct tagSOUNDSENTRYW tagSOUNDSENTRYW, *PtagSOUNDSENTRYW;

typedef struct tagSOUNDSENTRYW * LPSOUNDSENTRYW;

struct tagSOUNDSENTRYW {
    UINT cbSize;
    DWORD dwFlags;
    DWORD iFSTextEffect;
    DWORD iFSTextEffectMSec;
    DWORD iFSTextEffectColorBits;
    DWORD iFSGrafEffect;
    DWORD iFSGrafEffectMSec;
    DWORD iFSGrafEffectColor;
    DWORD iWindowsEffect;
    DWORD iWindowsEffectMSec;
    LPWSTR lpszWindowsEffectDLL;
    DWORD iWindowsEffectOrdinal;
};

typedef struct tagSTICKYKEYS tagSTICKYKEYS, *PtagSTICKYKEYS;

typedef struct tagSTICKYKEYS * LPSTICKYKEYS;

struct tagSTICKYKEYS {
    UINT cbSize;
    DWORD dwFlags;
};

typedef struct tagSTYLESTRUCT tagSTYLESTRUCT, *PtagSTYLESTRUCT;

typedef struct tagSTYLESTRUCT * LPSTYLESTRUCT;

struct tagSTYLESTRUCT {
    DWORD styleOld;
    DWORD styleNew;
};

typedef struct tagTITLEBARINFO tagTITLEBARINFO, *PtagTITLEBARINFO;

typedef struct tagTITLEBARINFO * LPTITLEBARINFO;

struct tagTITLEBARINFO {
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[6];
};

typedef struct tagTITLEBARINFOEX tagTITLEBARINFOEX, *PtagTITLEBARINFOEX;

typedef struct tagTITLEBARINFOEX * LPTITLEBARINFOEX;

struct tagTITLEBARINFOEX {
    DWORD cbSize;
    RECT rcTitleBar;
    DWORD rgstate[6];
    RECT rgrect[6];
};

typedef struct tagTOGGLEKEYS tagTOGGLEKEYS, *PtagTOGGLEKEYS;

typedef struct tagTOGGLEKEYS * LPTOGGLEKEYS;

struct tagTOGGLEKEYS {
    UINT cbSize;
    DWORD dwFlags;
};

typedef struct tagTPMPARAMS tagTPMPARAMS, *PtagTPMPARAMS;

typedef struct tagTPMPARAMS TPMPARAMS;

typedef TPMPARAMS * LPTPMPARAMS;

struct tagTPMPARAMS {
    UINT cbSize;
    RECT rcExclude;
};

typedef struct tagTRACKMOUSEEVENT tagTRACKMOUSEEVENT, *PtagTRACKMOUSEEVENT;

typedef struct tagTRACKMOUSEEVENT * LPTRACKMOUSEEVENT;

struct tagTRACKMOUSEEVENT {
    DWORD cbSize;
    DWORD dwFlags;
    HWND hwndTrack;
    DWORD dwHoverTime;
};

typedef struct tagWINDOWINFO tagWINDOWINFO, *PtagWINDOWINFO;

typedef struct tagWINDOWINFO * LPWINDOWINFO;

struct tagWINDOWINFO {
    DWORD cbSize;
    RECT rcWindow;
    RECT rcClient;
    DWORD dwStyle;
    DWORD dwExStyle;
    DWORD dwWindowStatus;
    UINT cxWindowBorders;
    UINT cyWindowBorders;
    ATOM atomWindowType;
    WORD wCreatorVersion;
};

typedef struct tagWINDOWPLACEMENT tagWINDOWPLACEMENT, *PtagWINDOWPLACEMENT;

typedef struct tagWINDOWPLACEMENT WINDOWPLACEMENT;

typedef WINDOWPLACEMENT * LPWINDOWPLACEMENT;

struct tagWINDOWPLACEMENT {
    UINT length;
    UINT flags;
    UINT showCmd;
    POINT ptMinPosition;
    POINT ptMaxPosition;
    RECT rcNormalPosition;
};

typedef struct tagWINDOWPOS * LPWINDOWPOS;

typedef struct tagWNDCLASSA tagWNDCLASSA, *PtagWNDCLASSA;

typedef struct tagWNDCLASSA * LPWNDCLASSA;

typedef LPWNDCLASSA LPWNDCLASS;

typedef LRESULT (* WNDPROC)(HWND, UINT, WPARAM, LPARAM);

struct tagWNDCLASSA {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
};

typedef struct tagWNDCLASSEXA tagWNDCLASSEXA, *PtagWNDCLASSEXA;

typedef struct tagWNDCLASSEXA * LPWNDCLASSEXA;

typedef LPWNDCLASSEXA LPWNDCLASSEX;

struct tagWNDCLASSEXA {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCSTR lpszMenuName;
    LPCSTR lpszClassName;
    HICON hIconSm;
};

typedef struct tagWNDCLASSEXW tagWNDCLASSEXW, *PtagWNDCLASSEXW;

typedef struct tagWNDCLASSEXW * LPWNDCLASSEXW;

struct tagWNDCLASSEXW {
    UINT cbSize;
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
    HICON hIconSm;
};

typedef struct tagWNDCLASSW tagWNDCLASSW, *PtagWNDCLASSW;

typedef struct tagWNDCLASSW * LPWNDCLASSW;

struct tagWNDCLASSW {
    UINT style;
    WNDPROC lpfnWndProc;
    int cbClsExtra;
    int cbWndExtra;
    HINSTANCE hInstance;
    HICON hIcon;
    HCURSOR hCursor;
    HBRUSH hbrBackground;
    LPCWSTR lpszMenuName;
    LPCWSTR lpszClassName;
};

typedef struct tagMDICREATESTRUCTA MDICREATESTRUCTA;

typedef MDICREATESTRUCTA MDICREATESTRUCT;

typedef struct tagMDICREATESTRUCTW MDICREATESTRUCTW;

typedef struct tagMDINEXTMENU MDINEXTMENU;

typedef struct tagMEASUREITEMSTRUCT MEASUREITEMSTRUCT;

typedef struct tagMENUBARINFO MENUBARINFO;

typedef struct tagMENUGETOBJECTINFO tagMENUGETOBJECTINFO, *PtagMENUGETOBJECTINFO;

typedef struct tagMENUGETOBJECTINFO MENUGETOBJECTINFO;

struct tagMENUGETOBJECTINFO {
    DWORD dwFlags;
    UINT uPos;
    HMENU hmenu;
    PVOID riid;
    PVOID pvObj;
};

typedef MENUITEMINFOA MENUITEMINFO;

typedef struct MENUITEMTEMPLATE MENUITEMTEMPLATE, *PMENUITEMTEMPLATE;

struct MENUITEMTEMPLATE {
    WORD mtOption;
    WORD mtID;
    WCHAR mtString[1];
};

typedef struct MENUITEMTEMPLATEHEADER MENUITEMTEMPLATEHEADER, *PMENUITEMTEMPLATEHEADER;

struct MENUITEMTEMPLATEHEADER {
    WORD versionNumber;
    WORD offset;
};

typedef void MENUTEMPLATEA;

typedef MENUTEMPLATEA MENUTEMPLATE;

typedef void MENUTEMPLATEW;

typedef struct tagMINIMIZEDMETRICS MINIMIZEDMETRICS;

typedef struct tagMINMAXINFO MINMAXINFO;

typedef BOOL (* MONITORENUMPROC)(HMONITOR, HDC, LPRECT, LPARAM);

typedef struct tagMONITORINFOEXA MONITORINFOEXA;

typedef MONITORINFOEXA MONITORINFOEX;

typedef struct tagMONITORINFOEXW MONITORINFOEXW;

typedef struct tagMOUSEHOOKSTRUCTEX MOUSEHOOKSTRUCTEX;

typedef struct tagMOUSEKEYS MOUSEKEYS;

typedef struct tagMOUSEMOVEPOINT MOUSEMOVEPOINT;

typedef struct tagMSGBOXPARAMSA MSGBOXPARAMSA;

typedef MSGBOXPARAMSA MSGBOXPARAMS;

typedef struct tagMSGBOXPARAMSW MSGBOXPARAMSW;

typedef struct tagMSLLHOOKSTRUCT MSLLHOOKSTRUCT;

typedef struct tagMULTIKEYHELPA MULTIKEYHELPA;

typedef MULTIKEYHELPA MULTIKEYHELP;

typedef struct tagMULTIKEYHELPW MULTIKEYHELPW;

typedef struct tagNCCALCSIZE_PARAMS NCCALCSIZE_PARAMS;

typedef struct tagNONCLIENTMETRICSA NONCLIENTMETRICSA;

typedef NONCLIENTMETRICSA NONCLIENTMETRICS;

typedef struct tagNONCLIENTMETRICSW NONCLIENTMETRICSW;

typedef struct tagCWPRETSTRUCT * NPCWPRETSTRUCT;

typedef struct tagCWPSTRUCT * NPCWPSTRUCT;

typedef struct tagDEBUGHOOKINFO * NPDEBUGHOOKINFO;

typedef struct tagEVENTMSG * NPEVENTMSG;

typedef struct tagEVENTMSG * NPEVENTMSGMSG;

typedef struct tagMSG * NPMSG;

typedef struct tagPAINTSTRUCT * NPPAINTSTRUCT;

typedef struct tagWNDCLASSA * NPWNDCLASSA;

typedef NPWNDCLASSA NPWNDCLASS;

typedef struct tagWNDCLASSEXA * NPWNDCLASSEXA;

typedef NPWNDCLASSEXA NPWNDCLASSEX;

typedef struct tagWNDCLASSEXW * NPWNDCLASSEXW;

typedef struct tagWNDCLASSW * NPWNDCLASSW;

typedef struct tagPAINTSTRUCT PAINTSTRUCT;

typedef struct tagALTTABINFO * PALTTABINFO;

typedef GESTUREINFO * PCGESTUREINFO;

typedef struct tagCHANGEFILTERSTRUCT * PCHANGEFILTERSTRUCT;

typedef struct tagCOMBOBOXINFO * PCOMBOBOXINFO;

typedef struct tagCOMPAREITEMSTRUCT * PCOMPAREITEMSTRUCT;

typedef struct tagCOPYDATASTRUCT * PCOPYDATASTRUCT;

typedef struct tagRAWINPUTDEVICE RAWINPUTDEVICE;

typedef RAWINPUTDEVICE * PCRAWINPUTDEVICE;

typedef struct tagTOUCHINPUT tagTOUCHINPUT, *PtagTOUCHINPUT;

typedef struct tagTOUCHINPUT TOUCHINPUT;

typedef TOUCHINPUT * PCTOUCHINPUT;

struct tagTOUCHINPUT {
    LONG x;
    LONG y;
    HANDLE hSource;
    DWORD dwID;
    DWORD dwFlags;
    DWORD dwMask;
    DWORD dwTime;
    ULONG_PTR dwExtraInfo;
    DWORD cxContact;
    DWORD cyContact;
};

typedef struct tagCURSORINFO * PCURSORINFO;

typedef struct tagCWPRETSTRUCT * PCWPRETSTRUCT;

typedef struct tagCWPSTRUCT * PCWPSTRUCT;

typedef struct tagDEBUGHOOKINFO * PDEBUGHOOKINFO;

typedef struct tagDELETEITEMSTRUCT * PDELETEITEMSTRUCT;

typedef struct DLGITEMTEMPLATE * PDLGITEMTEMPLATEA;

typedef struct DLGITEMTEMPLATE * PDLGITEMTEMPLATEW;

typedef struct tagDRAWITEMSTRUCT * PDRAWITEMSTRUCT;

typedef struct tagDROPSTRUCT * PDROPSTRUCT;

typedef struct tagEVENTMSG * PEVENTMSG;

typedef struct tagEVENTMSG * PEVENTMSGMSG;

typedef struct tagGESTURECONFIG * PGESTURECONFIG;

typedef struct tagGESTUREINFO * PGESTUREINFO;

typedef struct tagGESTURENOTIFYSTRUCT * PGESTURENOTIFYSTRUCT;

typedef struct tagGUITHREADINFO * PGUITHREADINFO;

typedef struct tagHARDWAREHOOKSTRUCT * PHARDWAREHOOKSTRUCT;

typedef struct tagHARDWAREINPUT * PHARDWAREINPUT;

typedef HDEVNOTIFY * PHDEVNOTIFY;

typedef struct tagHELPWININFOA * PHELPWININFOA;

typedef PHELPWININFOA PHELPWININFO;

typedef struct tagHELPWININFOW * PHELPWININFOW;

typedef HPOWERNOTIFY * PHPOWERNOTIFY;

typedef ICONINFO * PICONINFO;

typedef struct _ICONINFOEXA * PICONINFOEXA;

typedef PICONINFOEXA PICONINFOEX;

typedef struct _ICONINFOEXW * PICONINFOEXW;

typedef struct tagICONMETRICSA * PICONMETRICSA;

typedef PICONMETRICSA PICONMETRICS;

typedef struct tagICONMETRICSW * PICONMETRICSW;

typedef struct tagINPUT * PINPUT;

typedef struct tagKBDLLHOOKSTRUCT * PKBDLLHOOKSTRUCT;

typedef struct tagKEYBDINPUT * PKEYBDINPUT;

typedef struct tagLASTINPUTINFO * PLASTINPUTINFO;

typedef struct tagMDINEXTMENU * PMDINEXTMENU;

typedef struct tagMEASUREITEMSTRUCT * PMEASUREITEMSTRUCT;

typedef struct tagMENUBARINFO * PMENUBARINFO;

typedef struct tagMENUGETOBJECTINFO * PMENUGETOBJECTINFO;

typedef struct tagMINIMIZEDMETRICS * PMINIMIZEDMETRICS;

typedef struct tagMINMAXINFO * PMINMAXINFO;

typedef struct tagMOUSEHOOKSTRUCT * PMOUSEHOOKSTRUCT;

typedef struct tagMOUSEHOOKSTRUCTEX * PMOUSEHOOKSTRUCTEX;

typedef struct tagMOUSEINPUT * PMOUSEINPUT;

typedef struct tagMOUSEMOVEPOINT * PMOUSEMOVEPOINT;

typedef struct tagMSG * PMSG;

typedef struct tagMSGBOXPARAMSA * PMSGBOXPARAMSA;

typedef PMSGBOXPARAMSA PMSGBOXPARAMS;

typedef struct tagMSGBOXPARAMSW * PMSGBOXPARAMSW;

typedef struct tagMSLLHOOKSTRUCT * PMSLLHOOKSTRUCT;

typedef struct tagMULTIKEYHELPA * PMULTIKEYHELPA;

typedef PMULTIKEYHELPA PMULTIKEYHELP;

typedef struct tagMULTIKEYHELPW * PMULTIKEYHELPW;

typedef struct tagNONCLIENTMETRICSA * PNONCLIENTMETRICSA;

typedef PNONCLIENTMETRICSA PNONCLIENTMETRICS;

typedef struct tagNONCLIENTMETRICSW * PNONCLIENTMETRICSW;

typedef struct POWERBROADCAST_SETTING POWERBROADCAST_SETTING, *PPOWERBROADCAST_SETTING;

struct POWERBROADCAST_SETTING {
    GUID PowerSetting;
    DWORD DataLength;
    UCHAR Data[1];
};

typedef struct tagPAINTSTRUCT * PPAINTSTRUCT;

typedef struct tagRAWHID * PRAWHID;

typedef struct tagRAWINPUT * PRAWINPUT;

typedef struct tagRAWINPUTDEVICE * PRAWINPUTDEVICE;

typedef struct tagRAWINPUTDEVICELIST tagRAWINPUTDEVICELIST, *PtagRAWINPUTDEVICELIST;

typedef struct tagRAWINPUTDEVICELIST * PRAWINPUTDEVICELIST;

struct tagRAWINPUTDEVICELIST {
    HANDLE hDevice;
    DWORD dwType;
};

typedef struct tagRAWINPUTHEADER * PRAWINPUTHEADER;

typedef struct tagRAWKEYBOARD * PRAWKEYBOARD;

typedef struct tagRAWMOUSE * PRAWMOUSE;

typedef BOOLEAN (* PREGISTERCLASSNAMEW)(LPCWSTR);

typedef struct tagRID_DEVICE_INFO * PRID_DEVICE_INFO;

typedef struct tagRID_DEVICE_INFO_HID * PRID_DEVICE_INFO_HID;

typedef struct tagRID_DEVICE_INFO_KEYBOARD * PRID_DEVICE_INFO_KEYBOARD;

typedef struct tagRID_DEVICE_INFO_MOUSE * PRID_DEVICE_INFO_MOUSE;

typedef BOOL (* PROPENUMPROCA)(HWND, LPCSTR, HANDLE);

typedef PROPENUMPROCA PROPENUMPROC;

typedef BOOL (* PROPENUMPROCEXA)(HWND, LPSTR, HANDLE, ULONG_PTR);

typedef PROPENUMPROCEXA PROPENUMPROCEX;

typedef BOOL (* PROPENUMPROCEXW)(HWND, LPWSTR, HANDLE, ULONG_PTR);

typedef BOOL (* PROPENUMPROCW)(HWND, LPCWSTR, HANDLE);

typedef struct tagSCROLLBARINFO * PSCROLLBARINFO;

typedef struct tagTITLEBARINFO * PTITLEBARINFO;

typedef struct tagTITLEBARINFOEX * PTITLEBARINFOEX;

typedef struct tagTOUCHINPUT * PTOUCHINPUT;

typedef struct tagUPDATELAYEREDWINDOWINFO tagUPDATELAYEREDWINDOWINFO, *PtagUPDATELAYEREDWINDOWINFO;

typedef struct tagUPDATELAYEREDWINDOWINFO * PUPDATELAYEREDWINDOWINFO;

struct tagUPDATELAYEREDWINDOWINFO {
    DWORD cbSize;
    HDC hdcDst;
    POINT * pptDst;
    SIZE * psize;
    HDC hdcSrc;
    POINT * pptSrc;
    COLORREF crKey;
    BLENDFUNCTION * pblend;
    DWORD dwFlags;
    RECT * prcDirty;
};

typedef struct tagUSEROBJECTFLAGS tagUSEROBJECTFLAGS, *PtagUSEROBJECTFLAGS;

typedef struct tagUSEROBJECTFLAGS * PUSEROBJECTFLAGS;

struct tagUSEROBJECTFLAGS {
    BOOL fInherit;
    BOOL fReserved;
    DWORD dwFlags;
};

typedef struct tagWINDOWINFO * PWINDOWINFO;

typedef WINDOWPLACEMENT * PWINDOWPLACEMENT;

typedef struct tagWNDCLASSA * PWNDCLASSA;

typedef PWNDCLASSA PWNDCLASS;

typedef struct tagWNDCLASSEXA * PWNDCLASSEXA;

typedef PWNDCLASSEXA PWNDCLASSEX;

typedef struct tagWNDCLASSEXW * PWNDCLASSEXW;

typedef struct tagWNDCLASSW * PWNDCLASSW;

typedef struct tagWTSSESSION_NOTIFICATION tagWTSSESSION_NOTIFICATION, *PtagWTSSESSION_NOTIFICATION;

typedef struct tagWTSSESSION_NOTIFICATION * PWTSSESSION_NOTIFICATION;

struct tagWTSSESSION_NOTIFICATION {
    DWORD cbSize;
    DWORD dwSessionId;
};

typedef struct tagRAWINPUT RAWINPUT;

typedef struct tagRAWINPUTDEVICELIST RAWINPUTDEVICELIST;

typedef struct tagRID_DEVICE_INFO RID_DEVICE_INFO;

typedef struct tagSCROLLBARINFO SCROLLBARINFO;

typedef void (* SENDASYNCPROC)(HWND, UINT, ULONG_PTR, LRESULT);

typedef struct tagSERIALKEYSA SERIALKEYSA;

typedef SERIALKEYSA SERIALKEYS;

typedef struct tagSERIALKEYSW SERIALKEYSW;

typedef struct tagSOUNDSENTRYA SOUNDSENTRYA;

typedef SOUNDSENTRYA SOUNDSENTRY;

typedef struct tagSOUNDSENTRYW SOUNDSENTRYW;

typedef struct tagSTICKYKEYS STICKYKEYS;

typedef struct tagSTYLESTRUCT STYLESTRUCT;

typedef void (* TIMERPROC)(HWND, UINT, UINT_PTR, DWORD);

typedef struct tagTITLEBARINFO TITLEBARINFO;

typedef struct tagTITLEBARINFOEX TITLEBARINFOEX;

typedef struct tagTOGGLEKEYS TOGGLEKEYS;

typedef struct tagTRACKMOUSEEVENT TRACKMOUSEEVENT;

typedef struct tagUPDATELAYEREDWINDOWINFO UPDATELAYEREDWINDOWINFO;

typedef struct tagUSEROBJECTFLAGS USEROBJECTFLAGS;

typedef struct tagWINDOWINFO WINDOWINFO;

typedef void (* WINEVENTPROC)(HWINEVENTHOOK, DWORD, HWND, LONG, LONG, DWORD, DWORD);

typedef NAMEENUMPROCA WINSTAENUMPROCA;

typedef WINSTAENUMPROCA WINSTAENUMPROC;

typedef NAMEENUMPROCW WINSTAENUMPROCW;

typedef struct tagWNDCLASSA WNDCLASSA;

typedef WNDCLASSA WNDCLASS;

typedef struct tagWNDCLASSEXA WNDCLASSEXA;

typedef WNDCLASSEXA WNDCLASSEX;

typedef struct tagWNDCLASSEXW WNDCLASSEXW;

typedef struct tagWNDCLASSW WNDCLASSW;

typedef BOOL (* WNDENUMPROC)(HWND, LPARAM);

typedef struct tagWTSSESSION_NOTIFICATION WTSSESSION_NOTIFICATION;

#define DOT11_PSD_IE_MAX_DATA_SIZE 240

#define DOT11_PSD_IE_MAX_ENTRY_NUMBER 5

#define WLAN_API_VERSION 2

#define WLAN_API_VERSION_1_0 1

#define WLAN_API_VERSION_2_0 2

#define WLAN_AVAILABLE_NETWORK_CONNECTED 1

#define WLAN_AVAILABLE_NETWORK_CONSOLE_USER_PROFILE 4

#define WLAN_AVAILABLE_NETWORK_HAS_PROFILE 2

#define WLAN_AVAILABLE_NETWORK_INCLUDE_ALL_ADHOC_PROFILES 1

#define WLAN_AVAILABLE_NETWORK_INCLUDE_ALL_MANUAL_HIDDEN_PROFILES 2

#define WLAN_CONNECTION_ADHOC_JOIN_ONLY 2

#define WLAN_CONNECTION_EAPOL_PASSTHROUGH 8

#define WLAN_CONNECTION_HIDDEN_NETWORK 1

#define WLAN_CONNECTION_IGNORE_PRIVACY_BIT 4

#define WLAN_CONNECTION_NOTIFICATION_ADHOC_NETWORK_FORMED 1

#define WLAN_CONNECTION_NOTIFICATION_CONSOLE_USER_PROFILE 4

#define WLAN_EXECUTE_ACCESS 131105

#define WLAN_MAX_NAME_LENGTH 256

#define WLAN_MAX_PHY_INDEX 64

#define WLAN_MAX_PHY_TYPE_NUMBER 8

#define WLAN_NOTIFICATION_SOURCE_ACM 8

#define WLAN_NOTIFICATION_SOURCE_ALL 65535

#define WLAN_NOTIFICATION_SOURCE_HNWK 128

#define WLAN_NOTIFICATION_SOURCE_IHV 64

#define WLAN_NOTIFICATION_SOURCE_MSM 16

#define WLAN_NOTIFICATION_SOURCE_NONE 0

#define WLAN_NOTIFICATION_SOURCE_ONEX 4

#define WLAN_NOTIFICATION_SOURCE_SECURITY 32

#define WLAN_PROFILE_CONNECTION_MODE_AUTO 131072

#define WLAN_PROFILE_CONNECTION_MODE_SET_BY_CLIENT 65536

#define WLAN_PROFILE_GET_PLAINTEXT_KEY 4

#define WLAN_PROFILE_GROUP_POLICY 1

#define WLAN_PROFILE_USER 2

#define WLAN_READ_ACCESS 131073

#define WLAN_REASON_CODE_AC_BASE 131072

#define WLAN_REASON_CODE_AC_CONNECT_BASE 163840

#define WLAN_REASON_CODE_AC_END 196607

#define WLAN_REASON_CODE_ADHOC_SECURITY_FAILURE 229386

#define WLAN_REASON_CODE_AP_PROFILE_NOT_ALLOWED 163856

#define WLAN_REASON_CODE_AP_PROFILE_NOT_ALLOWED_FOR_CLIENT 163855

#define WLAN_REASON_CODE_AP_STARTING_FAILURE 229395

#define WLAN_REASON_CODE_ASSOCIATION_FAILURE 229378

#define WLAN_REASON_CODE_ASSOCIATION_TIMEOUT 229379

#define WLAN_REASON_CODE_AUTO_AP_PROFILE_NOT_ALLOWED 524313

#define WLAN_REASON_CODE_AUTO_CONNECTION_NOT_ALLOWED 524314

#define WLAN_REASON_CODE_AUTO_SWITCH_SET_FOR_ADHOC 524304

#define WLAN_REASON_CODE_AUTO_SWITCH_SET_FOR_MANUAL_CONNECTION 524305

#define WLAN_REASON_CODE_BAD_MAX_NUMBER_OF_CLIENTS_FOR_AP 524310

#define WLAN_REASON_CODE_BASE 131072

#define WLAN_REASON_CODE_BSS_TYPE_NOT_ALLOWED 163845

#define WLAN_REASON_CODE_BSS_TYPE_UNMATCH 196611

#define WLAN_REASON_CODE_CONFLICT_SECURITY 524299

#define WLAN_REASON_CODE_CONNECT_CALL_FAIL 163849

#define WLAN_REASON_CODE_DATARATE_UNMATCH 196613

#define WLAN_REASON_CODE_DISCONNECT_TIMEOUT 229391

#define WLAN_REASON_CODE_DRIVER_DISCONNECTED 229387

#define WLAN_REASON_CODE_DRIVER_OPERATION_FAILURE 229388

#define WLAN_REASON_CODE_GP_DENIED 163843

#define WLAN_REASON_CODE_IHV_CONNECTIVITY_NOT_SUPPORTED 524309

#define WLAN_REASON_CODE_IHV_NOT_AVAILABLE 229389

#define WLAN_REASON_CODE_IHV_NOT_RESPONDING 229390

#define WLAN_REASON_CODE_IHV_OUI_MISMATCH 524296

#define WLAN_REASON_CODE_IHV_OUI_MISSING 524297

#define WLAN_REASON_CODE_IHV_SECURITY_NOT_SUPPORTED 524295

#define WLAN_REASON_CODE_IHV_SECURITY_ONEX_MISSING 524306

#define WLAN_REASON_CODE_IHV_SETTINGS_MISSING 524298

#define WLAN_REASON_CODE_IN_BLOCKED_LIST 163847

#define WLAN_REASON_CODE_IN_FAILED_LIST 163846

#define WLAN_REASON_CODE_INTERNAL_FAILURE 229392

#define WLAN_REASON_CODE_INVALID_ADHOC_CONNECTION_MODE 524302

#define WLAN_REASON_CODE_INVALID_BSS_TYPE 524301

#define WLAN_REASON_CODE_INVALID_CHANNEL 524311

#define WLAN_REASON_CODE_INVALID_PHY_TYPE 524293

#define WLAN_REASON_CODE_INVALID_PROFILE_NAME 524291

#define WLAN_REASON_CODE_INVALID_PROFILE_SCHEMA 524289

#define WLAN_REASON_CODE_INVALID_PROFILE_TYPE 524292

#define WLAN_REASON_CODE_KEY_MISMATCH 163853

#define WLAN_REASON_CODE_MSM_BASE 196608

#define WLAN_REASON_CODE_MSM_CONNECT_BASE 229376

#define WLAN_REASON_CODE_MSM_END 262143

#define WLAN_REASON_CODE_MSM_SECURITY_MISSING 524294

#define WLAN_REASON_CODE_MSMSEC_AUTH_START_TIMEOUT 294914

#define WLAN_REASON_CODE_MSMSEC_AUTH_SUCCESS_TIMEOUT 294915

#define WLAN_REASON_CODE_MSMSEC_AUTH_WCN_COMPLETED 294937

#define WLAN_REASON_CODE_MSMSEC_BASE 262144

#define WLAN_REASON_CODE_MSMSEC_CANCELLED 294929

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_DISCOVERY 262165

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_NETWORK 262162

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_NIC 262163

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_PROFILE 262164

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_PROFILE_AUTH 262174

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_PROFILE_CIPHER 262175

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_PROFILE_SAFE_MODE_NIC 262177

#define WLAN_REASON_CODE_MSMSEC_CAPABILITY_PROFILE_SAFE_MODE_NW 262178

#define WLAN_REASON_CODE_MSMSEC_CONNECT_BASE 294912

#define WLAN_REASON_CODE_MSMSEC_DOWNGRADE_DETECTED 294931

#define WLAN_REASON_CODE_MSMSEC_END 327679

#define WLAN_REASON_CODE_MSMSEC_FORCED_FAILURE 294933

#define WLAN_REASON_CODE_MSMSEC_G1_MISSING_GRP_KEY 294925

#define WLAN_REASON_CODE_MSMSEC_G1_MISSING_KEY_DATA 294924

#define WLAN_REASON_CODE_MSMSEC_KEY_FORMAT 294930

#define WLAN_REASON_CODE_MSMSEC_KEY_START_TIMEOUT 294916

#define WLAN_REASON_CODE_MSMSEC_KEY_SUCCESS_TIMEOUT 294917

#define WLAN_REASON_CODE_MSMSEC_M2_MISSING_IE 294936

#define WLAN_REASON_CODE_MSMSEC_M2_MISSING_KEY_DATA 294935

#define WLAN_REASON_CODE_MSMSEC_M3_MISSING_GRP_KEY 294920

#define WLAN_REASON_CODE_MSMSEC_M3_MISSING_IE 294919

#define WLAN_REASON_CODE_MSMSEC_M3_MISSING_KEY_DATA 294918

#define WLAN_REASON_CODE_MSMSEC_M3_TOO_MANY_RSNIE 294934

#define WLAN_REASON_CODE_MSMSEC_MAX 327679

#define WLAN_REASON_CODE_MSMSEC_MIN 262144

#define WLAN_REASON_CODE_MSMSEC_MIXED_CELL 262169

#define WLAN_REASON_CODE_MSMSEC_NIC_FAILURE 294928

#define WLAN_REASON_CODE_MSMSEC_NO_AUTHENTICATOR 294927

#define WLAN_REASON_CODE_MSMSEC_NO_PAIRWISE_KEY 294923

#define WLAN_REASON_CODE_MSMSEC_PEER_INDICATED_INSECURE 294926

#define WLAN_REASON_CODE_MSMSEC_PR_IE_MATCHING 294921

#define WLAN_REASON_CODE_MSMSEC_PROFILE_AUTH_TIMERS_INVALID 262170

#define WLAN_REASON_CODE_MSMSEC_PROFILE_DUPLICATE_AUTH_CIPHER 262151

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_AUTH_CIPHER 262153

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_GKEY_INTV 262171

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_KEY_INDEX 262145

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_PMKCACHE_MODE 262156

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_PMKCACHE_SIZE 262157

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_PMKCACHE_TTL 262158

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_PREAUTH_MODE 262159

#define WLAN_REASON_CODE_MSMSEC_PROFILE_INVALID_PREAUTH_THROTTLE 262160

#define WLAN_REASON_CODE_MSMSEC_PROFILE_KEY_LENGTH 262147

#define WLAN_REASON_CODE_MSMSEC_PROFILE_KEY_UNMAPPED_CHAR 262173

#define WLAN_REASON_CODE_MSMSEC_PROFILE_KEYMATERIAL_CHAR 262167

#define WLAN_REASON_CODE_MSMSEC_PROFILE_NO_AUTH_CIPHER_SPECIFIED 262149

#define WLAN_REASON_CODE_MSMSEC_PROFILE_ONEX_DISABLED 262154

#define WLAN_REASON_CODE_MSMSEC_PROFILE_ONEX_ENABLED 262155

#define WLAN_REASON_CODE_MSMSEC_PROFILE_PASSPHRASE_CHAR 262166

#define WLAN_REASON_CODE_MSMSEC_PROFILE_PREAUTH_ONLY_ENABLED 262161

#define WLAN_REASON_CODE_MSMSEC_PROFILE_PSK_LENGTH 262148

#define WLAN_REASON_CODE_MSMSEC_PROFILE_PSK_PRESENT 262146

#define WLAN_REASON_CODE_MSMSEC_PROFILE_RAWDATA_INVALID 262152

#define WLAN_REASON_CODE_MSMSEC_PROFILE_SAFE_MODE 262176

#define WLAN_REASON_CODE_MSMSEC_PROFILE_TOO_MANY_AUTH_CIPHER_SPECIFIED 262150

#define WLAN_REASON_CODE_MSMSEC_PROFILE_UNSUPPORTED_AUTH 262179

#define WLAN_REASON_CODE_MSMSEC_PROFILE_UNSUPPORTED_CIPHER 262180

#define WLAN_REASON_CODE_MSMSEC_PROFILE_WRONG_KEYTYPE 262168

#define WLAN_REASON_CODE_MSMSEC_PSK_MISMATCH_SUSPECTED 294932

#define WLAN_REASON_CODE_MSMSEC_SEC_IE_MATCHING 294922

#define WLAN_REASON_CODE_MSMSEC_TRANSITION_NETWORK 262172

#define WLAN_REASON_CODE_MSMSEC_UI_REQUEST_FAILURE 294913

#define WLAN_REASON_CODE_NETWORK_NOT_AVAILABLE 163851

#define WLAN_REASON_CODE_NETWORK_NOT_COMPATIBLE 131073

#define WLAN_REASON_CODE_NO_AUTO_CONNECTION 163841

#define WLAN_REASON_CODE_NON_BROADCAST_SET_FOR_ADHOC 524303

#define WLAN_REASON_CODE_NOT_VISIBLE 163842

#define WLAN_REASON_CODE_OPERATION_MODE_NOT_SUPPORTED 524312

#define WLAN_REASON_CODE_PHY_TYPE_UNMATCH 196612

#define WLAN_REASON_CODE_PRE_SECURITY_FAILURE 229380

#define WLAN_REASON_CODE_PROFILE_BASE 524288

#define WLAN_REASON_CODE_PROFILE_CHANGED_OR_DELETED 163852

#define WLAN_REASON_CODE_PROFILE_CONNECT_BASE 557056

#define WLAN_REASON_CODE_PROFILE_END 589823

#define WLAN_REASON_CODE_PROFILE_MISSING 524290

#define WLAN_REASON_CODE_PROFILE_NOT_COMPATIBLE 131074

#define WLAN_REASON_CODE_PROFILE_SSID_INVALID 524307

#define WLAN_REASON_CODE_RANGE_SIZE 65536

#define WLAN_REASON_CODE_ROAMING_FAILURE 229384

#define WLAN_REASON_CODE_ROAMING_SECURITY_FAILURE 229385

#define WLAN_REASON_CODE_SCAN_CALL_FAIL 163850

#define WLAN_REASON_CODE_SECURITY_FAILURE 229382

#define WLAN_REASON_CODE_SECURITY_MISSING 524300

#define WLAN_REASON_CODE_SECURITY_TIMEOUT 229383

#define WLAN_REASON_CODE_SSID_LIST_TOO_LONG 163848

#define WLAN_REASON_CODE_START_SECURITY_FAILURE 229381

#define WLAN_REASON_CODE_SUCCESS 0

#define WLAN_REASON_CODE_TOO_MANY_SECURITY_ATTEMPTS 229394

#define WLAN_REASON_CODE_TOO_MANY_SSID 524308

#define WLAN_REASON_CODE_UI_REQUEST_TIMEOUT 229393

#define WLAN_REASON_CODE_UNKNOWN 65537

#define WLAN_REASON_CODE_UNSUPPORTED_SECURITY_SET 196610

#define WLAN_REASON_CODE_UNSUPPORTED_SECURITY_SET_BY_OS 196609

#define WLAN_REASON_CODE_USER_CANCELLED 229377

#define WLAN_REASON_CODE_USER_DENIED 163844

#define WLAN_REASON_CODE_USER_NOT_RESPOND 163854

#define WLAN_SET_EAPHOST_DATA_ALL_USERS 1

#define WLAN_UI_API_INITIAL_VERSION 1

#define WLAN_UI_API_VERSION 1

#define WLAN_WRITE_ACCESS 458787

typedef struct _DOT11_NETWORK _DOT11_NETWORK, *P_DOT11_NETWORK;

typedef struct _DOT11_SSID _DOT11_SSID, *P_DOT11_SSID;

typedef struct _DOT11_SSID DOT11_SSID;

typedef enum _DOT11_BSS_TYPE {
    dot11_BSS_type_any=3,
    dot11_BSS_type_independent=2,
    dot11_BSS_type_infrastructure=1
} _DOT11_BSS_TYPE;

typedef enum _DOT11_BSS_TYPE DOT11_BSS_TYPE;

struct _DOT11_SSID {
    ULONG uSSIDLength;
    UCHAR ucSSID[32];
};

struct _DOT11_NETWORK {
    DOT11_SSID dot11Ssid;
    DOT11_BSS_TYPE dot11BssType;
};

typedef struct _DOT11_NETWORK_LIST _DOT11_NETWORK_LIST, *P_DOT11_NETWORK_LIST;

typedef struct _DOT11_NETWORK DOT11_NETWORK;

struct _DOT11_NETWORK_LIST {
    DWORD dwNumberOfItems;
    DWORD dwIndex;
    DOT11_NETWORK Network[1];
};

typedef enum _DOT11_RADIO_STATE {
    dot11_radio_state_off=2,
    dot11_radio_state_on=1,
    dot11_radio_state_unknown=0
} _DOT11_RADIO_STATE;

typedef struct _struct_8477 _struct_8477, *P_struct_8477;

struct _struct_8477 {
    DWORD dwDataOffset;
    DWORD dwDataSize;
};

typedef enum _WL_DISPLAY_PAGES {
    WLAdvPage=2,
    WLConnectionPage=0,
    WLSecurityPage=1
} _WL_DISPLAY_PAGES;

typedef enum _WLAN_ADHOC_NETWORK_STATE {
    wlan_adhoc_network_state_connected=1,
    wlan_adhoc_network_state_formed=0
} _WLAN_ADHOC_NETWORK_STATE;

typedef struct _WLAN_ASSOCIATION_ATTRIBUTES _WLAN_ASSOCIATION_ATTRIBUTES, *P_WLAN_ASSOCIATION_ATTRIBUTES;

typedef ULONG WLAN_SIGNAL_QUALITY;

struct _WLAN_ASSOCIATION_ATTRIBUTES {
    DOT11_SSID dot11Ssid;
    DOT11_BSS_TYPE dot11BssType;
    DOT11_MAC_ADDRESS dot11Bssid;
    DOT11_PHY_TYPE dot11PhyType;
    ULONG uDot11PhyIndex;
    WLAN_SIGNAL_QUALITY wlanSignalQuality;
    ULONG ulRxRate;
    ULONG ulTxRate;
};

typedef struct _WLAN_AUTH_CIPHER_PAIR_LIST _WLAN_AUTH_CIPHER_PAIR_LIST, *P_WLAN_AUTH_CIPHER_PAIR_LIST;

typedef struct DOT11_AUTH_CIPHER_PAIR DOT11_AUTH_CIPHER_PAIR, *PDOT11_AUTH_CIPHER_PAIR;

typedef enum _DOT11_AUTH_ALGORITHM {
    DOT11_AUTH_ALGO_80211_OPEN=1,
    DOT11_AUTH_ALGO_80211_SHARED_KEY=2,
    DOT11_AUTH_ALGO_IHV_END=-1,
    DOT11_AUTH_ALGO_IHV_START=-2147483648,
    DOT11_AUTH_ALGO_RSNA=6,
    DOT11_AUTH_ALGO_RSNA_PSK=7,
    DOT11_AUTH_ALGO_WPA=3,
    DOT11_AUTH_ALGO_WPA_NONE=5,
    DOT11_AUTH_ALGO_WPA_PSK=4
} _DOT11_AUTH_ALGORITHM;

typedef enum _DOT11_AUTH_ALGORITHM DOT11_AUTH_ALGORITHM;

typedef enum _DOT11_CIPHER_ALGORITHM {
    DOT11_CIPHER_ALGO_CCMP=4,
    DOT11_CIPHER_ALGO_IHV_END=-1,
    DOT11_CIPHER_ALGO_IHV_START=-2147483648,
    DOT11_CIPHER_ALGO_NONE=0,
    DOT11_CIPHER_ALGO_RSN_USE_GROUP=256,
    DOT11_CIPHER_ALGO_TKIP=2,
    DOT11_CIPHER_ALGO_WEP=257,
    DOT11_CIPHER_ALGO_WEP104=5,
    DOT11_CIPHER_ALGO_WEP40=1,
    DOT11_CIPHER_ALGO_WPA_USE_GROUP=256
} _DOT11_CIPHER_ALGORITHM;

typedef enum _DOT11_CIPHER_ALGORITHM DOT11_CIPHER_ALGORITHM;

struct DOT11_AUTH_CIPHER_PAIR {
    DOT11_AUTH_ALGORITHM AuthAlgoId;
    DOT11_CIPHER_ALGORITHM CipherAlgoId;
};

struct _WLAN_AUTH_CIPHER_PAIR_LIST {
    DWORD dwNumberOfItems;
    struct DOT11_AUTH_CIPHER_PAIR pAuthCipherPairList[1];
};

typedef enum _WLAN_AUTOCONF_OPCODE {
    wlan_autoconf_opcode_allow_explicit_creds=4,
    wlan_autoconf_opcode_allow_virtual_station_extensibility=6,
    wlan_autoconf_opcode_block_period=5,
    wlan_autoconf_opcode_end=7,
    wlan_autoconf_opcode_only_use_gp_profiles_for_allowed_networks=3,
    wlan_autoconf_opcode_power_setting=2,
    wlan_autoconf_opcode_show_denied_networks=1,
    wlan_autoconf_opcode_start=0
} _WLAN_AUTOCONF_OPCODE;

typedef struct _WLAN_AVAILABLE_NETWORK _WLAN_AVAILABLE_NETWORK, *P_WLAN_AVAILABLE_NETWORK;

typedef DWORD WLAN_REASON_CODE;

struct _WLAN_AVAILABLE_NETWORK {
    WCHAR strProfileName[256];
    DOT11_SSID dot11Ssid;
    DOT11_BSS_TYPE dot11BssType;
    ULONG uNumberOfBssids;
    BOOL bNetworkConnectable;
    WLAN_REASON_CODE wlanNotConnectableReason;
    ULONG uNumberOfPhyTypes;
    DOT11_PHY_TYPE dot11PhyTypes[8];
    BOOL bMorePhyTypes;
    WLAN_SIGNAL_QUALITY wlanSignalQuality;
    BOOL bSecurityEnabled;
    DOT11_AUTH_ALGORITHM dot11DefaultAuthAlgorithm;
    DOT11_CIPHER_ALGORITHM dot11DefaultCipherAlgorithm;
    DWORD dwFlags;
    DWORD dwReserved;
};

typedef struct _WLAN_AVAILABLE_NETWORK_LIST _WLAN_AVAILABLE_NETWORK_LIST, *P_WLAN_AVAILABLE_NETWORK_LIST;

typedef struct _WLAN_AVAILABLE_NETWORK WLAN_AVAILABLE_NETWORK;

struct _WLAN_AVAILABLE_NETWORK_LIST {
    DWORD dwNumberOfItems;
    DWORD dwIndex;
    WLAN_AVAILABLE_NETWORK Network[1];
};

typedef struct _WLAN_BSS_ENTRY _WLAN_BSS_ENTRY, *P_WLAN_BSS_ENTRY;

typedef struct _WLAN_RATE_SET _WLAN_RATE_SET, *P_WLAN_RATE_SET;

typedef struct _WLAN_RATE_SET WLAN_RATE_SET;

struct _WLAN_RATE_SET {
    ULONG uRateSetLength;
    USHORT usRateSet[126];
};

struct _WLAN_BSS_ENTRY {
    DOT11_SSID dot11Ssid;
    ULONG uPhyId;
    DOT11_MAC_ADDRESS dot11Bssid;
    DOT11_BSS_TYPE dot11BssType;
    DOT11_PHY_TYPE dot11BssPhyType;
    LONG lRssi;
    ULONG uLinkQuality;
    BOOLEAN bInRegDomain;
    USHORT usBeaconPeriod;
    ULONGLONG ullTimestamp;
    ULONGLONG ullHostTimestamp;
    USHORT usCapabilityInformation;
    ULONG ulChCenterFrequency;
    WLAN_RATE_SET wlanRateSet;
    ULONG ulIeOffset;
    ULONG ulIeSize;
};

typedef struct _WLAN_BSS_LIST _WLAN_BSS_LIST, *P_WLAN_BSS_LIST;

typedef struct _WLAN_BSS_ENTRY WLAN_BSS_ENTRY;

struct _WLAN_BSS_LIST {
    DWORD dwTotalSize;
    DWORD dwNumberOfItems;
    WLAN_BSS_ENTRY wlanBssEntries[1];
};

typedef struct _WLAN_CONNECTION_ATTRIBUTES _WLAN_CONNECTION_ATTRIBUTES, *P_WLAN_CONNECTION_ATTRIBUTES;

typedef enum _WLAN_INTERFACE_STATE {
    wlan_interface_state_ad_hoc_network_formed=2,
    wlan_interface_state_associating=5,
    wlan_interface_state_authenticating=7,
    wlan_interface_state_connected=1,
    wlan_interface_state_disconnected=4,
    wlan_interface_state_disconnecting=3,
    wlan_interface_state_discovering=6,
    wlan_interface_state_not_ready=0
} _WLAN_INTERFACE_STATE;

typedef enum _WLAN_INTERFACE_STATE WLAN_INTERFACE_STATE;

typedef enum _WLAN_CONNECTION_MODE {
    wlan_connection_mode_auto=4,
    wlan_connection_mode_discovery_secure=2,
    wlan_connection_mode_discovery_unsecure=3,
    wlan_connection_mode_invalid=5,
    wlan_connection_mode_profile=0,
    wlan_connection_mode_temporary_profile=1
} _WLAN_CONNECTION_MODE;

typedef enum _WLAN_CONNECTION_MODE WLAN_CONNECTION_MODE;

typedef struct _WLAN_ASSOCIATION_ATTRIBUTES WLAN_ASSOCIATION_ATTRIBUTES;

typedef struct _WLAN_SECURITY_ATTRIBUTES _WLAN_SECURITY_ATTRIBUTES, *P_WLAN_SECURITY_ATTRIBUTES;

typedef struct _WLAN_SECURITY_ATTRIBUTES WLAN_SECURITY_ATTRIBUTES;

struct _WLAN_SECURITY_ATTRIBUTES {
    BOOL bSecurityEnabled;
    BOOL bOneXEnabled;
    DOT11_AUTH_ALGORITHM dot11AuthAlgorithm;
    DOT11_CIPHER_ALGORITHM dot11CipherAlgorithm;
};

struct _WLAN_CONNECTION_ATTRIBUTES {
    WLAN_INTERFACE_STATE isState;
    WLAN_CONNECTION_MODE wlanConnectionMode;
    WCHAR strProfileName[256];
    WLAN_ASSOCIATION_ATTRIBUTES wlanAssociationAttributes;
    WLAN_SECURITY_ATTRIBUTES wlanSecurityAttributes;
};

typedef struct _WLAN_CONNECTION_NOTIFICATION_DATA _WLAN_CONNECTION_NOTIFICATION_DATA, *P_WLAN_CONNECTION_NOTIFICATION_DATA;

struct _WLAN_CONNECTION_NOTIFICATION_DATA {
    WLAN_CONNECTION_MODE wlanConnectionMode;
    WCHAR strProfileName[256];
    DOT11_SSID dot11Ssid;
    DOT11_BSS_TYPE dot11BssType;
    BOOL bSecurityEnabled;
    WLAN_REASON_CODE wlanReasonCode;
    DWORD dwFlags;
    WCHAR strProfileXml[1];
};

typedef struct _WLAN_CONNECTION_PARAMETERS _WLAN_CONNECTION_PARAMETERS, *P_WLAN_CONNECTION_PARAMETERS;

typedef struct _DOT11_SSID * PDOT11_SSID;

struct _WLAN_CONNECTION_PARAMETERS {
    WLAN_CONNECTION_MODE wlanConnectionMode;
    LPCWSTR strProfile;
    PDOT11_SSID pDot11Ssid;
    PDOT11_BSSID_LIST pDesiredBssidList;
    DOT11_BSS_TYPE dot11BssType;
    DWORD dwFlags;
};

typedef struct _WLAN_COUNTRY_OR_REGION_STRING_LIST _WLAN_COUNTRY_OR_REGION_STRING_LIST, *P_WLAN_COUNTRY_OR_REGION_STRING_LIST;

struct _WLAN_COUNTRY_OR_REGION_STRING_LIST {
    DWORD dwNumberOfItems;
    DOT11_COUNTRY_OR_REGION_STRING pCountryOrRegionStringList[1];
};

typedef enum _WLAN_FILTER_LIST_TYPE {
    wlan_filter_list_type_gp_deny=1,
    wlan_filter_list_type_gp_permit=0,
    wlan_filter_list_type_user_deny=3,
    wlan_filter_list_type_user_permit=2
} _WLAN_FILTER_LIST_TYPE;

typedef struct _WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS _WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS, *P_WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS;

struct _WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS {
    DOT11_SSID hostedNetworkSSID;
    DWORD dwMaxNumberOfPeers;
};

typedef struct _WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE _WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE, *P_WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE;

typedef struct _WLAN_HOSTED_NETWORK_PEER_STATE _WLAN_HOSTED_NETWORK_PEER_STATE, *P_WLAN_HOSTED_NETWORK_PEER_STATE;

typedef struct _WLAN_HOSTED_NETWORK_PEER_STATE WLAN_HOSTED_NETWORK_PEER_STATE;

typedef enum _WLAN_HOSTED_NETWORK_REASON {
    wlan_hosted_network_reason_ap_start_failed=19,
    wlan_hosted_network_reason_bad_parameters=2,
    wlan_hosted_network_reason_client_abort=18,
    wlan_hosted_network_reason_crypt_error=8,
    wlan_hosted_network_reason_device_change=25,
    wlan_hosted_network_reason_elevation_required=5,
    wlan_hosted_network_reason_gp_denied=23,
    wlan_hosted_network_reason_impersonation=9,
    wlan_hosted_network_reason_incompatible_connection_started=15,
    wlan_hosted_network_reason_incompatible_connection_stopped=16,
    wlan_hosted_network_reason_insufficient_resources=4,
    wlan_hosted_network_reason_interface_available=11,
    wlan_hosted_network_reason_interface_unavailable=12,
    wlan_hosted_network_reason_miniport_started=14,
    wlan_hosted_network_reason_miniport_stopped=13,
    wlan_hosted_network_reason_peer_arrived=20,
    wlan_hosted_network_reason_peer_departed=21,
    wlan_hosted_network_reason_peer_timeout=22,
    wlan_hosted_network_reason_persistence_failed=7,
    wlan_hosted_network_reason_properties_change=26,
    wlan_hosted_network_reason_read_only=6,
    wlan_hosted_network_reason_service_available_on_virtual_station=28,
    wlan_hosted_network_reason_service_shutting_down=3,
    wlan_hosted_network_reason_service_unavailable=24,
    wlan_hosted_network_reason_stop_before_start=10,
    wlan_hosted_network_reason_success=0,
    wlan_hosted_network_reason_unspecified=1,
    wlan_hosted_network_reason_user_action=17,
    wlan_hosted_network_reason_virtual_station_blocking_use=27
} _WLAN_HOSTED_NETWORK_REASON;

typedef enum _WLAN_HOSTED_NETWORK_REASON WLAN_HOSTED_NETWORK_REASON;

typedef enum _WLAN_HOSTED_NETWORK_PEER_AUTH_STATE {
    wlan_hosted_network_peer_state_authenticated=1,
    wlan_hosted_network_peer_state_invalid=0
} _WLAN_HOSTED_NETWORK_PEER_AUTH_STATE;

typedef enum _WLAN_HOSTED_NETWORK_PEER_AUTH_STATE WLAN_HOSTED_NETWORK_PEER_AUTH_STATE;

struct _WLAN_HOSTED_NETWORK_PEER_STATE {
    DOT11_MAC_ADDRESS PeerMacAddress;
    WLAN_HOSTED_NETWORK_PEER_AUTH_STATE PeerAuthState;
};

struct _WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE {
    WLAN_HOSTED_NETWORK_PEER_STATE OldState;
    WLAN_HOSTED_NETWORK_PEER_STATE NewState;
    WLAN_HOSTED_NETWORK_REASON PeerStateChangeReason;
};

typedef enum _WLAN_HOSTED_NETWORK_NOTIFICATION_CODE {
    wlan_hosted_network_peer_state_change=4097,
    wlan_hosted_network_radio_state_change=4098,
    wlan_hosted_network_state_change=4096
} _WLAN_HOSTED_NETWORK_NOTIFICATION_CODE;

typedef enum _WLAN_HOSTED_NETWORK_OPCODE {
    wlan_hosted_network_opcode_connection_settings=0,
    wlan_hosted_network_opcode_enable=3,
    wlan_hosted_network_opcode_security_settings=1,
    wlan_hosted_network_opcode_station_profile=2
} _WLAN_HOSTED_NETWORK_OPCODE;

typedef struct _WLAN_HOSTED_NETWORK_RADIO_STATE _WLAN_HOSTED_NETWORK_RADIO_STATE, *P_WLAN_HOSTED_NETWORK_RADIO_STATE;

typedef enum _DOT11_RADIO_STATE DOT11_RADIO_STATE;

struct _WLAN_HOSTED_NETWORK_RADIO_STATE {
    DOT11_RADIO_STATE dot11SoftwareRadioState;
    DOT11_RADIO_STATE dot11HardwareRadioState;
};

typedef struct _WLAN_HOSTED_NETWORK_SECURITY_SETTINGS _WLAN_HOSTED_NETWORK_SECURITY_SETTINGS, *P_WLAN_HOSTED_NETWORK_SECURITY_SETTINGS;

struct _WLAN_HOSTED_NETWORK_SECURITY_SETTINGS {
    DOT11_AUTH_ALGORITHM dot11AuthAlgo;
    DOT11_CIPHER_ALGORITHM dot11CipherAlgo;
};

typedef enum _WLAN_HOSTED_NETWORK_STATE {
    wlan_hosted_network_active=2,
    wlan_hosted_network_idle=1,
    wlan_hosted_network_unavailable=0
} _WLAN_HOSTED_NETWORK_STATE;

typedef struct _WLAN_HOSTED_NETWORK_STATE_CHANGE _WLAN_HOSTED_NETWORK_STATE_CHANGE, *P_WLAN_HOSTED_NETWORK_STATE_CHANGE;

typedef enum _WLAN_HOSTED_NETWORK_STATE WLAN_HOSTED_NETWORK_STATE;

struct _WLAN_HOSTED_NETWORK_STATE_CHANGE {
    WLAN_HOSTED_NETWORK_STATE OldState;
    WLAN_HOSTED_NETWORK_STATE NewState;
    WLAN_HOSTED_NETWORK_REASON StateChangeReason;
};

typedef struct _WLAN_HOSTED_NETWORK_STATUS _WLAN_HOSTED_NETWORK_STATUS, *P_WLAN_HOSTED_NETWORK_STATUS;

struct _WLAN_HOSTED_NETWORK_STATUS {
    WLAN_HOSTED_NETWORK_STATE HostedNetworkState;
    GUID IPDeviceID;
    DOT11_MAC_ADDRESS wlanHostedNetworkBSSID;
    DOT11_PHY_TYPE dot11PhyType;
    ULONG ulChannelFrequency;
    DWORD dwNumberOfPeers;
    WLAN_HOSTED_NETWORK_PEER_STATE PeerList[1];
};

typedef enum _WLAN_IHV_CONTROL_TYPE {
    wlan_ihv_control_type_driver=1,
    wlan_ihv_control_type_service=0
} _WLAN_IHV_CONTROL_TYPE;

typedef struct _WLAN_INTERFACE_CAPABILITY _WLAN_INTERFACE_CAPABILITY, *P_WLAN_INTERFACE_CAPABILITY;

typedef enum _WLAN_INTERFACE_TYPE {
    wlan_interface_type_emulated_802_11=0,
    wlan_interface_type_invalid=2,
    wlan_interface_type_native_802_11=1
} _WLAN_INTERFACE_TYPE;

typedef enum _WLAN_INTERFACE_TYPE WLAN_INTERFACE_TYPE;

struct _WLAN_INTERFACE_CAPABILITY {
    WLAN_INTERFACE_TYPE interfaceType;
    BOOL bDot11DSupported;
    DWORD dwMaxDesiredSsidListSize;
    DWORD dwMaxDesiredBssidListSize;
    DWORD dwNumberOfSupportedPhys;
    DOT11_PHY_TYPE dot11PhyTypes[64];
};

typedef struct _WLAN_INTERFACE_INFO _WLAN_INTERFACE_INFO, *P_WLAN_INTERFACE_INFO;

struct _WLAN_INTERFACE_INFO {
    GUID InterfaceGuid;
    WCHAR strInterfaceDescription[256];
    WLAN_INTERFACE_STATE isState;
};

typedef struct _WLAN_INTERFACE_INFO_LIST _WLAN_INTERFACE_INFO_LIST, *P_WLAN_INTERFACE_INFO_LIST;

typedef struct _WLAN_INTERFACE_INFO WLAN_INTERFACE_INFO;

struct _WLAN_INTERFACE_INFO_LIST {
    DWORD dwNumberOfItems;
    DWORD dwIndex;
    WLAN_INTERFACE_INFO InterfaceInfo[1];
};

typedef enum _WLAN_INTF_OPCODE {
    wlan_intf_opcode_autoconf_enabled=1,
    wlan_intf_opcode_autoconf_end=268435455,
    wlan_intf_opcode_autoconf_start=0,
    wlan_intf_opcode_background_scan_enabled=2,
    wlan_intf_opcode_bss_type=5,
    wlan_intf_opcode_certified_safe_mode=14,
    wlan_intf_opcode_channel_number=8,
    wlan_intf_opcode_current_connection=7,
    wlan_intf_opcode_current_operation_mode=12,
    wlan_intf_opcode_hosted_network_capable=15,
    wlan_intf_opcode_ihv_end=1073741823,
    wlan_intf_opcode_ihv_start=805306368,
    wlan_intf_opcode_interface_state=6,
    wlan_intf_opcode_media_streaming_mode=3,
    wlan_intf_opcode_msm_end=536870911,
    wlan_intf_opcode_msm_start=268435712,
    wlan_intf_opcode_radio_state=4,
    wlan_intf_opcode_rssi=268435714,
    wlan_intf_opcode_security_end=805306367,
    wlan_intf_opcode_security_start=536936448,
    wlan_intf_opcode_statistics=268435713,
    wlan_intf_opcode_supported_adhoc_auth_cipher_pairs=10,
    wlan_intf_opcode_supported_country_or_region_string_list=11,
    wlan_intf_opcode_supported_infrastructure_auth_cipher_pairs=9,
    wlan_intf_opcode_supported_safe_mode=13
} _WLAN_INTF_OPCODE;

typedef struct _WLAN_MSM_NOTIFICATION_DATA _WLAN_MSM_NOTIFICATION_DATA, *P_WLAN_MSM_NOTIFICATION_DATA;

struct _WLAN_MSM_NOTIFICATION_DATA {
    WLAN_CONNECTION_MODE wlanConnectionMode;
    WCHAR strProfileName[256];
    DOT11_SSID dot11Ssid;
    DOT11_BSS_TYPE dot11BssType;
    DOT11_MAC_ADDRESS dot11MacAddr;
    BOOL bSecurityEnabled;
    BOOL bFirstPeer;
    BOOL bLastPeer;
    WLAN_REASON_CODE wlanReasonCode;
};

typedef enum _WLAN_NOTIFICATION_ACM {
    wlan_notification_acm_adhoc_network_state_change=22,
    wlan_notification_acm_autoconf_disabled=2,
    wlan_notification_acm_autoconf_enabled=1,
    wlan_notification_acm_background_scan_disabled=4,
    wlan_notification_acm_background_scan_enabled=3,
    wlan_notification_acm_bss_type_change=5,
    wlan_notification_acm_connection_attempt_fail=11,
    wlan_notification_acm_connection_complete=10,
    wlan_notification_acm_connection_start=9,
    wlan_notification_acm_disconnected=21,
    wlan_notification_acm_disconnecting=20,
    wlan_notification_acm_end=23,
    wlan_notification_acm_filter_list_change=12,
    wlan_notification_acm_interface_arrival=13,
    wlan_notification_acm_interface_removal=14,
    wlan_notification_acm_network_available=19,
    wlan_notification_acm_network_not_available=18,
    wlan_notification_acm_power_setting_change=6,
    wlan_notification_acm_profile_change=15,
    wlan_notification_acm_profile_name_change=16,
    wlan_notification_acm_profiles_exhausted=17,
    wlan_notification_acm_scan_complete=7,
    wlan_notification_acm_scan_fail=8,
    wlan_notification_acm_start=0
} _WLAN_NOTIFICATION_ACM;

typedef enum _WLAN_NOTIFICATION_MSM {
    wlan_notification_msm_adapter_operation_mode_change=14,
    wlan_notification_msm_adapter_removal=13,
    wlan_notification_msm_associated=2,
    wlan_notification_msm_associating=1,
    wlan_notification_msm_authenticating=3,
    wlan_notification_msm_connected=4,
    wlan_notification_msm_disassociating=9,
    wlan_notification_msm_disconnected=10,
    wlan_notification_msm_end=15,
    wlan_notification_msm_peer_join=11,
    wlan_notification_msm_peer_leave=12,
    wlan_notification_msm_radio_state_change=7,
    wlan_notification_msm_roaming_end=6,
    wlan_notification_msm_roaming_start=5,
    wlan_notification_msm_signal_quality_change=8,
    wlan_notification_msm_start=0
} _WLAN_NOTIFICATION_MSM;

typedef enum _WLAN_NOTIFICATION_SECURITY {
    wlan_notification_security_end=1,
    wlan_notification_security_start=0
} _WLAN_NOTIFICATION_SECURITY;

typedef enum _WLAN_OPCODE_VALUE_TYPE {
    wlan_opcode_value_type_invalid=3,
    wlan_opcode_value_type_query_only=0,
    wlan_opcode_value_type_set_by_group_policy=1,
    wlan_opcode_value_type_set_by_user=2
} _WLAN_OPCODE_VALUE_TYPE;

typedef struct _WLAN_PHY_RADIO_STATE _WLAN_PHY_RADIO_STATE, *P_WLAN_PHY_RADIO_STATE;

struct _WLAN_PHY_RADIO_STATE {
    DWORD dwPhyIndex;
    DOT11_RADIO_STATE dot11SoftwareRadioState;
    DOT11_RADIO_STATE dot11HardwareRadioState;
};

typedef enum _WLAN_POWER_SETTING {
    wlan_power_setting_invalid=4,
    wlan_power_setting_low_saving=1,
    wlan_power_setting_maximum_saving=3,
    wlan_power_setting_medium_saving=2,
    wlan_power_setting_no_saving=0
} _WLAN_POWER_SETTING;

typedef struct _WLAN_PROFILE_INFO _WLAN_PROFILE_INFO, *P_WLAN_PROFILE_INFO;

struct _WLAN_PROFILE_INFO {
    WCHAR strProfileName[256];
    DWORD dwFlags;
};

typedef struct _WLAN_PROFILE_INFO_LIST _WLAN_PROFILE_INFO_LIST, *P_WLAN_PROFILE_INFO_LIST;

typedef struct _WLAN_PROFILE_INFO WLAN_PROFILE_INFO;

struct _WLAN_PROFILE_INFO_LIST {
    DWORD dwNumberOfItems;
    DWORD dwIndex;
    WLAN_PROFILE_INFO ProfileInfo[1];
};

typedef struct _WLAN_RADIO_STATE _WLAN_RADIO_STATE, *P_WLAN_RADIO_STATE;

typedef struct _WLAN_PHY_RADIO_STATE WLAN_PHY_RADIO_STATE;

struct _WLAN_RADIO_STATE {
    DWORD dwNumberOfPhys;
    WLAN_PHY_RADIO_STATE PhyRadioState[64];
};

typedef struct _WLAN_RAW_DATA _WLAN_RAW_DATA, *P_WLAN_RAW_DATA;

struct _WLAN_RAW_DATA {
    DWORD dwDataSize;
    BYTE DataBlob[1];
};

typedef struct _WLAN_RAW_DATA_LIST _WLAN_RAW_DATA_LIST, *P_WLAN_RAW_DATA_LIST;

struct _WLAN_RAW_DATA_LIST {
    DWORD dwTotalSize;
    DWORD dwNumberOfItems;
    struct _struct_8477 DataList[1];
};

typedef enum _WLAN_SECURABLE_OBJECT {
    WLAN_SECURABLE_OBJECT_COUNT=16,
    wlan_secure_ac_enabled=2,
    wlan_secure_add_new_all_user_profiles=9,
    wlan_secure_add_new_per_user_profiles=10,
    wlan_secure_all_user_profiles_order=8,
    wlan_secure_bc_scan_enabled=3,
    wlan_secure_bss_type=4,
    wlan_secure_current_operation_mode=12,
    wlan_secure_deny_list=1,
    wlan_secure_get_plaintext_key=13,
    wlan_secure_hosted_network_elevated_access=14,
    wlan_secure_ihv_control=7,
    wlan_secure_interface_properties=6,
    wlan_secure_media_streaming_mode_enabled=11,
    wlan_secure_permit_list=0,
    wlan_secure_show_denied=5,
    wlan_secure_virtual_station_extensibility=15
} _WLAN_SECURABLE_OBJECT;

typedef struct _DOT11_NETWORK_LIST DOT11_NETWORK_LIST;

typedef struct _DOT11_NETWORK * PDOT11_NETWORK;

typedef struct _DOT11_NETWORK_LIST * PDOT11_NETWORK_LIST;

typedef enum _DOT11_RADIO_STATE * PDOT11_RADIO_STATE;

typedef enum _WL_DISPLAY_PAGES * PWL_DISPLAY_PAGES;

typedef enum _WLAN_ADHOC_NETWORK_STATE * PWLAN_ADHOC_NETWORK_STATE;

typedef struct _WLAN_ASSOCIATION_ATTRIBUTES * PWLAN_ASSOCIATION_ATTRIBUTES;

typedef struct _WLAN_AUTH_CIPHER_PAIR_LIST * PWLAN_AUTH_CIPHER_PAIR_LIST;

typedef enum _WLAN_AUTOCONF_OPCODE * PWLAN_AUTOCONF_OPCODE;

typedef struct _WLAN_AVAILABLE_NETWORK * PWLAN_AVAILABLE_NETWORK;

typedef struct _WLAN_AVAILABLE_NETWORK_LIST * PWLAN_AVAILABLE_NETWORK_LIST;

typedef struct _WLAN_BSS_ENTRY * PWLAN_BSS_ENTRY;

typedef struct _WLAN_BSS_LIST * PWLAN_BSS_LIST;

typedef struct _WLAN_CONNECTION_ATTRIBUTES * PWLAN_CONNECTION_ATTRIBUTES;

typedef enum _WLAN_CONNECTION_MODE * PWLAN_CONNECTION_MODE;

typedef struct _WLAN_CONNECTION_NOTIFICATION_DATA * PWLAN_CONNECTION_NOTIFICATION_DATA;

typedef struct _WLAN_CONNECTION_PARAMETERS * PWLAN_CONNECTION_PARAMETERS;

typedef struct _WLAN_COUNTRY_OR_REGION_STRING_LIST * PWLAN_COUNTRY_OR_REGION_STRING_LIST;

typedef enum _WLAN_FILTER_LIST_TYPE * PWLAN_FILTER_LIST_TYPE;

typedef struct _WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS * PWLAN_HOSTED_NETWORK_CONNECTION_SETTINGS;

typedef struct _WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE * PWLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE;

typedef enum _WLAN_HOSTED_NETWORK_NOTIFICATION_CODE * PWLAN_HOSTED_NETWORK_NOTIFICATION_CODE;

typedef enum _WLAN_HOSTED_NETWORK_OPCODE * PWLAN_HOSTED_NETWORK_OPCODE;

typedef enum _WLAN_HOSTED_NETWORK_PEER_AUTH_STATE * PWLAN_HOSTED_NETWORK_PEER_AUTH_STATE;

typedef struct _WLAN_HOSTED_NETWORK_PEER_STATE * PWLAN_HOSTED_NETWORK_PEER_STATE;

typedef struct _WLAN_HOSTED_NETWORK_RADIO_STATE * PWLAN_HOSTED_NETWORK_RADIO_STATE;

typedef enum _WLAN_HOSTED_NETWORK_REASON * PWLAN_HOSTED_NETWORK_REASON;

typedef struct _WLAN_HOSTED_NETWORK_SECURITY_SETTINGS * PWLAN_HOSTED_NETWORK_SECURITY_SETTINGS;

typedef enum _WLAN_HOSTED_NETWORK_STATE * PWLAN_HOSTED_NETWORK_STATE;

typedef struct _WLAN_HOSTED_NETWORK_STATE_CHANGE * PWLAN_HOSTED_NETWORK_STATE_CHANGE;

typedef struct _WLAN_HOSTED_NETWORK_STATUS * PWLAN_HOSTED_NETWORK_STATUS;

typedef enum _WLAN_IHV_CONTROL_TYPE * PWLAN_IHV_CONTROL_TYPE;

typedef struct _WLAN_INTERFACE_CAPABILITY * PWLAN_INTERFACE_CAPABILITY;

typedef struct _WLAN_INTERFACE_INFO * PWLAN_INTERFACE_INFO;

typedef struct _WLAN_INTERFACE_INFO_LIST * PWLAN_INTERFACE_INFO_LIST;

typedef enum _WLAN_INTERFACE_STATE * PWLAN_INTERFACE_STATE;

typedef enum _WLAN_INTERFACE_TYPE * PWLAN_INTERFACE_TYPE;

typedef enum _WLAN_INTF_OPCODE * PWLAN_INTF_OPCODE;

typedef struct WLAN_MAC_FRAME_STATISTICS WLAN_MAC_FRAME_STATISTICS, *PWLAN_MAC_FRAME_STATISTICS;

struct WLAN_MAC_FRAME_STATISTICS {
    ULONGLONG ullTransmittedFrameCount;
    ULONGLONG ullReceivedFrameCount;
    ULONGLONG ullWEPExcludedCount;
    ULONGLONG ullTKIPLocalMICFailures;
    ULONGLONG ullTKIPReplays;
    ULONGLONG ullTKIPICVErrorCount;
    ULONGLONG ullCCMPReplays;
    ULONGLONG ullCCMPDecryptErrors;
    ULONGLONG ullWEPUndecryptableCount;
    ULONGLONG ullWEPICVErrorCount;
    ULONGLONG ullDecryptSuccessCount;
    ULONGLONG ullDecryptFailureCount;
};

typedef struct _WLAN_MSM_NOTIFICATION_DATA * PWLAN_MSM_NOTIFICATION_DATA;

typedef enum _WLAN_NOTIFICATION_ACM * PWLAN_NOTIFICATION_ACM;

typedef L2_NOTIFICATION_DATA * PWLAN_NOTIFICATION_DATA;

typedef enum _WLAN_NOTIFICATION_MSM * PWLAN_NOTIFICATION_MSM;

typedef enum _WLAN_NOTIFICATION_SECURITY * PWLAN_NOTIFICATION_SECURITY;

typedef enum _WLAN_OPCODE_VALUE_TYPE * PWLAN_OPCODE_VALUE_TYPE;

typedef struct WLAN_PHY_FRAME_STATISTICS WLAN_PHY_FRAME_STATISTICS, *PWLAN_PHY_FRAME_STATISTICS;

struct WLAN_PHY_FRAME_STATISTICS {
    ULONGLONG ullTransmittedFrameCount;
    ULONGLONG ullMulticastTransmittedFrameCount;
    ULONGLONG ullFailedCount;
    ULONGLONG ullRetryCount;
    ULONGLONG ullMultipleRetryCount;
    ULONGLONG ullMaxTXLifetimeExceededCount;
    ULONGLONG ullTransmittedFragmentCount;
    ULONGLONG ullRTSSuccessCount;
    ULONGLONG ullRTSFailureCount;
    ULONGLONG ullACKFailureCount;
    ULONGLONG ullReceivedFrameCount;
    ULONGLONG ullMulticastReceivedFrameCount;
    ULONGLONG ullPromiscuousReceivedFrameCount;
    ULONGLONG ullMaxRXLifetimeExceededCount;
    ULONGLONG ullFrameDuplicateCount;
    ULONGLONG ullReceivedFragmentCount;
    ULONGLONG ullPromiscuousReceivedFragmentCount;
    ULONGLONG ullFCSErrorCount;
};

typedef struct _WLAN_PHY_RADIO_STATE * PWLAN_PHY_RADIO_STATE;

typedef enum _WLAN_POWER_SETTING * PWLAN_POWER_SETTING;

typedef struct _WLAN_PROFILE_INFO * PWLAN_PROFILE_INFO;

typedef struct _WLAN_PROFILE_INFO_LIST * PWLAN_PROFILE_INFO_LIST;

typedef struct _WLAN_RADIO_STATE * PWLAN_RADIO_STATE;

typedef struct _WLAN_RATE_SET * PWLAN_RATE_SET;

typedef struct _WLAN_RAW_DATA * PWLAN_RAW_DATA;

typedef struct _WLAN_RAW_DATA_LIST * PWLAN_RAW_DATA_LIST;

typedef DWORD * PWLAN_REASON_CODE;

typedef enum _WLAN_SECURABLE_OBJECT * PWLAN_SECURABLE_OBJECT;

typedef struct _WLAN_SECURITY_ATTRIBUTES * PWLAN_SECURITY_ATTRIBUTES;

typedef ULONG * PWLAN_SIGNAL_QUALITY;

typedef struct WLAN_STATISTICS WLAN_STATISTICS, *PWLAN_STATISTICS;

struct WLAN_STATISTICS {
    ULONGLONG ullFourWayHandshakeFailures;
    ULONGLONG ullTKIPCounterMeasuresInvoked;
    ULONGLONG ullReserved;
    struct WLAN_MAC_FRAME_STATISTICS MacUcastCounters;
    struct WLAN_MAC_FRAME_STATISTICS MacMcastCounters;
    DWORD dwNumberOfPhys;
    struct WLAN_PHY_FRAME_STATISTICS PhyCounters[1];
};

typedef enum _WL_DISPLAY_PAGES WL_DISPLAY_PAGES;

typedef enum _WLAN_ADHOC_NETWORK_STATE WLAN_ADHOC_NETWORK_STATE;

typedef struct _WLAN_AUTH_CIPHER_PAIR_LIST WLAN_AUTH_CIPHER_PAIR_LIST;

typedef enum _WLAN_AUTOCONF_OPCODE WLAN_AUTOCONF_OPCODE;

typedef struct _WLAN_AVAILABLE_NETWORK_LIST WLAN_AVAILABLE_NETWORK_LIST;

typedef struct _WLAN_BSS_LIST WLAN_BSS_LIST;

typedef struct _WLAN_CONNECTION_ATTRIBUTES WLAN_CONNECTION_ATTRIBUTES;

typedef struct _WLAN_CONNECTION_NOTIFICATION_DATA WLAN_CONNECTION_NOTIFICATION_DATA;

typedef struct _WLAN_CONNECTION_PARAMETERS WLAN_CONNECTION_PARAMETERS;

typedef struct _WLAN_COUNTRY_OR_REGION_STRING_LIST WLAN_COUNTRY_OR_REGION_STRING_LIST;

typedef enum _WLAN_FILTER_LIST_TYPE WLAN_FILTER_LIST_TYPE;

typedef struct _WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS WLAN_HOSTED_NETWORK_CONNECTION_SETTINGS;

typedef struct _WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE WLAN_HOSTED_NETWORK_DATA_PEER_STATE_CHANGE;

typedef enum _WLAN_HOSTED_NETWORK_NOTIFICATION_CODE WLAN_HOSTED_NETWORK_NOTIFICATION_CODE;

typedef enum _WLAN_HOSTED_NETWORK_OPCODE WLAN_HOSTED_NETWORK_OPCODE;

typedef struct _WLAN_HOSTED_NETWORK_RADIO_STATE WLAN_HOSTED_NETWORK_RADIO_STATE;

typedef struct _WLAN_HOSTED_NETWORK_SECURITY_SETTINGS WLAN_HOSTED_NETWORK_SECURITY_SETTINGS;

typedef struct _WLAN_HOSTED_NETWORK_STATE_CHANGE WLAN_HOSTED_NETWORK_STATE_CHANGE;

typedef struct _WLAN_HOSTED_NETWORK_STATUS WLAN_HOSTED_NETWORK_STATUS;

typedef enum _WLAN_IHV_CONTROL_TYPE WLAN_IHV_CONTROL_TYPE;

typedef struct _WLAN_INTERFACE_CAPABILITY WLAN_INTERFACE_CAPABILITY;

typedef struct _WLAN_INTERFACE_INFO_LIST WLAN_INTERFACE_INFO_LIST;

typedef enum _WLAN_INTF_OPCODE WLAN_INTF_OPCODE;

typedef struct _WLAN_MSM_NOTIFICATION_DATA WLAN_MSM_NOTIFICATION_DATA;

typedef enum _WLAN_NOTIFICATION_ACM WLAN_NOTIFICATION_ACM;

typedef void (* WLAN_NOTIFICATION_CALLBACK)(PWLAN_NOTIFICATION_DATA, PVOID);

typedef L2_NOTIFICATION_DATA WLAN_NOTIFICATION_DATA;

typedef enum _WLAN_NOTIFICATION_MSM WLAN_NOTIFICATION_MSM;

typedef enum _WLAN_NOTIFICATION_SECURITY WLAN_NOTIFICATION_SECURITY;

typedef enum _WLAN_OPCODE_VALUE_TYPE WLAN_OPCODE_VALUE_TYPE;

typedef enum _WLAN_POWER_SETTING WLAN_POWER_SETTING;

typedef struct _WLAN_PROFILE_INFO_LIST WLAN_PROFILE_INFO_LIST;

typedef struct _WLAN_RADIO_STATE WLAN_RADIO_STATE;

typedef struct _WLAN_RAW_DATA WLAN_RAW_DATA;

typedef struct _WLAN_RAW_DATA_LIST WLAN_RAW_DATA_LIST;

typedef enum _WLAN_SECURABLE_OBJECT WLAN_SECURABLE_OBJECT;

#define DOT11_SSID_MAX_LENGTH 32

typedef enum _DOT11_AUTH_ALGORITHM * PDOT11_AUTH_ALGORITHM;

typedef enum _DOT11_BSS_TYPE * PDOT11_BSS_TYPE;

typedef enum _DOT11_CIPHER_ALGORITHM * PDOT11_CIPHER_ALGORITHM;

#define WNNC_CRED_MANAGER 4294901760

#define WNNC_NET_10NET 327680

#define WNNC_NET_3IN1 2555904

#define WNNC_NET_9TILES 589824

#define WNNC_NET_APPLETALK 1245184

#define WNNC_NET_AS400 720896

#define WNNC_NET_AVID 1703936

#define WNNC_NET_AVID1 3801088

#define WNNC_NET_BMC 1572864

#define WNNC_NET_BWNFS 1048576

#define WNNC_NET_CLEARCASE 1441792

#define WNNC_NET_COGENT 1114112

#define WNNC_NET_CSC 2490368

#define WNNC_NET_DAV 3014656

#define WNNC_NET_DCE 1638400

#define WNNC_NET_DECORB 2097152

#define WNNC_NET_DFS 3866624

#define WNNC_NET_DISTINCT 2293760

#define WNNC_NET_DOCUSPACE 1769472

#define WNNC_NET_DRIVEONWEB 4063232

#define WNNC_NET_EXIFS 2949120

#define WNNC_NET_EXTENDNET 2686976

#define WNNC_NET_FARALLON 1179648

#define WNNC_NET_FJ_REDIR 2228224

#define WNNC_NET_FOXBAT 2818048

#define WNNC_NET_FRONTIER 1507328

#define WNNC_NET_FTP_NFS 786432

#define WNNC_NET_GOOGLE 4390912

#define WNNC_NET_HOB_NFS 3276800

#define WNNC_NET_IBMAL 3407872

#define WNNC_NET_INTERGRAPH 1310720

#define WNNC_NET_KNOWARE 3080192

#define WNNC_NET_KWNP 3932160

#define WNNC_NET_LANMAN 131072

#define WNNC_NET_LANSTEP 524288

#define WNNC_NET_LANTASTIC 655360

#define WNNC_NET_LIFENET 917504

#define WNNC_NET_LOCK 3473408

#define WNNC_NET_LOCUS 393216

#define WNNC_NET_MANGOSOFT 1835008

#define WNNC_NET_MASFAX 3211264

#define WNNC_NET_MFILES 4259840

#define WNNC_NET_MS_NFS 4325376

#define WNNC_NET_MSNET 65536

#define WNNC_NET_NETWARE 196608

#define WNNC_NET_OBJECT_DIRE 3145728

#define WNNC_NET_OPENAFS 3735552

#define WNNC_NET_PATHWORKS 851968

#define WNNC_NET_POWERLAN 983040

#define WNNC_NET_PROTSTOR 2162688

#define WNNC_NET_QUINCY 3670016

#define WNNC_NET_RDR2SAMPLE 2424832

#define WNNC_NET_RIVERFRONT1 1966080

#define WNNC_NET_RIVERFRONT2 2031616

#define WNNC_NET_RSFX 4194304

#define WNNC_NET_SERNET 1900544

#define WNNC_NET_SHIVA 3342336

#define WNNC_NET_SMB 131072

#define WNNC_NET_SRT 3604480

#define WNNC_NET_STAC 2752512

#define WNNC_NET_SUN_PC_NFS 458752

#define WNNC_NET_SYMFONET 1376256

#define WNNC_NET_TERMSRV 3538944

#define WNNC_NET_TWINS 2359296

#define WNNC_NET_VINES 262144

#define WNNC_NET_VMWARE 4128768

#define WNNC_NET_YAHOO 2883584

#define WNNC_NET_ZENWORKS 3997696

#define MAX_SITENAME_LEN 128

#define WPF_ENABLE_LOCAL_BASE_DIR 1048576

#define WPF_FIRST_FILE_AS_DEFAULT 8

#define WPF_MINIMAL_UI 4

#define WPF_NO_DIRECT_LOOKUP 16

#define WPF_NO_PROGRESS_DLGS 512

#define WPF_NO_RECURSIVE_POST 1

#define WPF_NO_URL_LOOKUP 32

#define WPF_NO_VERIFY_POST 128

#define WPF_NO_WIZARD 2

#define WPF_SHOWPAGE_DESTSITE 262144

#define WPF_SHOWPAGE_PROVIDER 524288

#define WPF_SHOWPAGE_SRCFILE 131072

#define WPF_SHOWPAGE_WELCOME 65536

#define WPF_USE_PROVIDER_PASSED 64

typedef struct IWindowsParentalControls IWindowsParentalControls, *PIWindowsParentalControls;

typedef struct IWindowsParentalControlsVtbl IWindowsParentalControlsVtbl, *PIWindowsParentalControlsVtbl;

typedef enum tagWPCFLAG_VISIBILITY {
    WPCFLAG_WPC_HIDDEN=1,
    WPCFLAG_WPC_VISIBLE=0
} tagWPCFLAG_VISIBILITY;

typedef enum tagWPCFLAG_VISIBILITY WPCFLAG_VISIBILITY;

typedef struct IWPCSettings IWPCSettings, *PIWPCSettings;

typedef struct IWPCWebSettings IWPCWebSettings, *PIWPCWebSettings;

typedef struct IWPCGamesSettings IWPCGamesSettings, *PIWPCGamesSettings;

typedef struct IWPCSettingsVtbl IWPCSettingsVtbl, *PIWPCSettingsVtbl;

typedef struct IWPCWebSettingsVtbl IWPCWebSettingsVtbl, *PIWPCWebSettingsVtbl;

typedef struct IWPCGamesSettingsVtbl IWPCGamesSettingsVtbl, *PIWPCGamesSettingsVtbl;

struct IWindowsParentalControlsVtbl {
    HRESULT (* QueryInterface)(struct IWindowsParentalControls *, IID *, void * *);
    ULONG (* AddRef)(struct IWindowsParentalControls *);
    ULONG (* Release)(struct IWindowsParentalControls *);
    HRESULT (* GetVisibility)(struct IWindowsParentalControls *, WPCFLAG_VISIBILITY *);
    HRESULT (* GetUserSettings)(struct IWindowsParentalControls *, LPCWSTR, struct IWPCSettings * *);
    HRESULT (* GetWebSettings)(struct IWindowsParentalControls *, LPCWSTR, struct IWPCWebSettings * *);
    HRESULT (* GetWebFilterInfo)(struct IWindowsParentalControls *, GUID *, LPWSTR *);
    HRESULT (* GetGamesSettings)(struct IWindowsParentalControls *, LPCWSTR, struct IWPCGamesSettings * *);
};

struct IWPCGamesSettingsVtbl {
    HRESULT (* QueryInterface)(struct IWPCGamesSettings *, IID *, void * *);
    ULONG (* AddRef)(struct IWPCGamesSettings *);
    ULONG (* Release)(struct IWPCGamesSettings *);
    HRESULT (* IsLoggingRequired)(struct IWPCGamesSettings *, BOOL *);
    HRESULT (* GetLastSettingsChangeTime)(struct IWPCGamesSettings *, SYSTEMTIME *);
    HRESULT (* GetRestrictions)(struct IWPCGamesSettings *, DWORD *);
    HRESULT (* IsBlocked)(struct IWPCGamesSettings *, GUID, DWORD *);
};

struct IWPCWebSettingsVtbl {
    HRESULT (* QueryInterface)(struct IWPCWebSettings *, IID *, void * *);
    ULONG (* AddRef)(struct IWPCWebSettings *);
    ULONG (* Release)(struct IWPCWebSettings *);
    HRESULT (* IsLoggingRequired)(struct IWPCWebSettings *, BOOL *);
    HRESULT (* GetLastSettingsChangeTime)(struct IWPCWebSettings *, SYSTEMTIME *);
    HRESULT (* GetRestrictions)(struct IWPCWebSettings *, DWORD *);
    HRESULT (* GetSettings)(struct IWPCWebSettings *, DWORD *);
    HRESULT (* RequestURLOverride)(struct IWPCWebSettings *, HWND, LPCWSTR, DWORD, LPCWSTR *, BOOL *);
};

struct IWPCWebSettings {
    struct IWPCWebSettingsVtbl * lpVtbl;
};

struct IWPCGamesSettings {
    struct IWPCGamesSettingsVtbl * lpVtbl;
};

struct IWPCSettingsVtbl {
    HRESULT (* QueryInterface)(struct IWPCSettings *, IID *, void * *);
    ULONG (* AddRef)(struct IWPCSettings *);
    ULONG (* Release)(struct IWPCSettings *);
    HRESULT (* IsLoggingRequired)(struct IWPCSettings *, BOOL *);
    HRESULT (* GetLastSettingsChangeTime)(struct IWPCSettings *, SYSTEMTIME *);
    HRESULT (* GetRestrictions)(struct IWPCSettings *, DWORD *);
};

struct IWindowsParentalControls {
    struct IWindowsParentalControlsVtbl * lpVtbl;
};

struct IWPCSettings {
    struct IWPCSettingsVtbl * lpVtbl;
};

typedef struct IWindowsParentalControlsCore IWindowsParentalControlsCore, *PIWindowsParentalControlsCore;

typedef struct IWindowsParentalControlsCoreVtbl IWindowsParentalControlsCoreVtbl, *PIWindowsParentalControlsCoreVtbl;

struct IWindowsParentalControlsCoreVtbl {
    HRESULT (* QueryInterface)(struct IWindowsParentalControlsCore *, IID *, void * *);
    ULONG (* AddRef)(struct IWindowsParentalControlsCore *);
    ULONG (* Release)(struct IWindowsParentalControlsCore *);
    HRESULT (* GetVisibility)(struct IWindowsParentalControlsCore *, WPCFLAG_VISIBILITY *);
    HRESULT (* GetUserSettings)(struct IWindowsParentalControlsCore *, LPCWSTR, struct IWPCSettings * *);
    HRESULT (* GetWebSettings)(struct IWindowsParentalControlsCore *, LPCWSTR, struct IWPCWebSettings * *);
    HRESULT (* GetWebFilterInfo)(struct IWindowsParentalControlsCore *, GUID *, LPWSTR *);
};

struct IWindowsParentalControlsCore {
    struct IWindowsParentalControlsCoreVtbl * lpVtbl;
};

typedef struct IWPCProviderConfig IWPCProviderConfig, *PIWPCProviderConfig;

typedef struct IWPCProviderConfigVtbl IWPCProviderConfigVtbl, *PIWPCProviderConfigVtbl;

struct IWPCProviderConfig {
    struct IWPCProviderConfigVtbl * lpVtbl;
};

struct IWPCProviderConfigVtbl {
    HRESULT (* QueryInterface)(struct IWPCProviderConfig *, IID *, void * *);
    ULONG (* AddRef)(struct IWPCProviderConfig *);
    ULONG (* Release)(struct IWPCProviderConfig *);
    HRESULT (* GetUserSummary)(struct IWPCProviderConfig *, BSTR, BSTR *);
    HRESULT (* Configure)(struct IWPCProviderConfig *, HWND, BSTR);
    HRESULT (* RequestOverride)(struct IWPCProviderConfig *, HWND, BSTR, DWORD);
};

typedef struct IWPCProviderState IWPCProviderState, *PIWPCProviderState;

typedef struct IWPCProviderStateVtbl IWPCProviderStateVtbl, *PIWPCProviderStateVtbl;

struct IWPCProviderStateVtbl {
    HRESULT (* QueryInterface)(struct IWPCProviderState *, IID *, void * *);
    ULONG (* AddRef)(struct IWPCProviderState *);
    ULONG (* Release)(struct IWPCProviderState *);
    HRESULT (* Enable)(struct IWPCProviderState *);
    HRESULT (* Disable)(struct IWPCProviderState *);
};

struct IWPCProviderState {
    struct IWPCProviderStateVtbl * lpVtbl;
};

typedef struct IWPCProviderSupport IWPCProviderSupport, *PIWPCProviderSupport;

typedef struct IWPCProviderSupportVtbl IWPCProviderSupportVtbl, *PIWPCProviderSupportVtbl;

struct IWPCProviderSupport {
    struct IWPCProviderSupportVtbl * lpVtbl;
};

struct IWPCProviderSupportVtbl {
    HRESULT (* QueryInterface)(struct IWPCProviderSupport *, IID *, void * *);
    ULONG (* AddRef)(struct IWPCProviderSupport *);
    ULONG (* Release)(struct IWPCProviderSupport *);
    HRESULT (* GetCurrent)(struct IWPCProviderSupport *, GUID *);
};

typedef enum tagWPCFLAG_OVERRIDE {
    WPCFLAG_APPLICATION=1
} tagWPCFLAG_OVERRIDE;

typedef enum tagWPCFLAG_RESTRICTION {
    WPCFLAG_APPS_RESTRICTED=16,
    WPCFLAG_GAMES_BLOCKED=8,
    WPCFLAG_HOURS_RESTRICTED=4,
    WPCFLAG_LOGGING_REQUIRED=1,
    WPCFLAG_NO_RESTRICTION=0,
    WPCFLAG_WEB_FILTERED=2
} tagWPCFLAG_RESTRICTION;

typedef enum tagWPCFLAG_WEB_SETTING {
    WPCFLAG_WEB_SETTING_DOWNLOADSBLOCKED=1,
    WPCFLAG_WEB_SETTING_NOTBLOCKED=0
} tagWPCFLAG_WEB_SETTING;

typedef struct WindowsParentalControls WindowsParentalControls, *PWindowsParentalControls;

struct WindowsParentalControls {
};

typedef enum tagWPCFLAG_OVERRIDE WPCFLAG_OVERRIDE;

typedef enum tagWPCFLAG_RESTRICTION WPCFLAG_RESTRICTION;

typedef enum tagWPCFLAG_WEB_SETTING WPCFLAG_WEB_SETTING;

typedef struct WpcProviderSupport WpcProviderSupport, *PWpcProviderSupport;

struct WpcProviderSupport {
};

typedef struct WpcSettingsProvider WpcSettingsProvider, *PWpcSettingsProvider;

struct WpcSettingsProvider {
};

typedef struct tagWPPROVINFOA tagWPPROVINFOA, *PtagWPPROVINFOA;

typedef struct tagWPPROVINFOA * LPWPPROVINFOA;

struct tagWPPROVINFOA {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwPriority;
    LPSTR lpszProviderName;
    LPSTR lpszProviderCLSID;
    LPSTR lpszDllPath;
};

typedef struct tagWPPROVINFOW tagWPPROVINFOW, *PtagWPPROVINFOW;

typedef struct tagWPPROVINFOW * LPWPPROVINFOW;

struct tagWPPROVINFOW {
    DWORD dwSize;
    DWORD dwFlags;
    DWORD dwPriority;
    LPWSTR lpszProviderName;
    LPWSTR lpszProviderCLSID;
    LPWSTR lpszDllPath;
};

typedef struct tagWPSITEINFOA tagWPSITEINFOA, *PtagWPSITEINFOA;

typedef struct tagWPSITEINFOA * LPWPSITEINFOA;

struct tagWPSITEINFOA {
    DWORD dwSize;
    DWORD dwFlags;
    LPSTR lpszSiteName;
    LPSTR lpszSiteURL;
};

typedef struct tagWPSITEINFOW tagWPSITEINFOW, *PtagWPSITEINFOW;

typedef struct tagWPSITEINFOW * LPWPSITEINFOW;

struct tagWPSITEINFOW {
    DWORD dwSize;
    DWORD dwFlags;
    LPWSTR lpszSiteName;
    LPWSTR lpszSiteURL;
};

typedef struct tagWPPROVINFOA WPPROVINFOA;

typedef struct tagWPPROVINFOW WPPROVINFOW;

typedef struct tagWPSITEINFOA WPSITEINFOA;

typedef struct tagWPSITEINFOW WPSITEINFOW;

#define _SS_MAXSIZE 128

#define AF_12844 25

#define AF_ATM 22

#define AF_BTH 32

#define AF_CLUSTER 24

#define AF_ICLFXBM 31

#define AF_INET6 23

#define AF_IRDA 26

#define AF_LINK 33

#define AF_NETDES 28

#define AF_TCNMESSAGE 30

#define AF_TCNPROCESS 29

#define AI_ADDRCONFIG 1024

#define AI_ALL 256

#define AI_CANONNAME 2

#define AI_FILESERVER 262144

#define AI_FQDN 131072

#define AI_NON_AUTHORITATIVE 16384

#define AI_NUMERICHOST 4

#define AI_NUMERICSERV 8

#define AI_PASSIVE 1

#define AI_RETURN_PREFERRED_NAMES 65536

#define AI_SECURE 32768

#define AI_V4MAPPED 2048

#define IN_CLASSD_HOST 268435455

#define IN_CLASSD_NET 4026531840

#define IN_CLASSD_NSHIFT 28

#define IOC_PROTOCOL 268435456

#define IOC_UNIX 0

#define IOC_VENDOR 402653184

#define IOC_WS2 134217728

#define IOC_WSK 251658240

#define IPPORT_CHARGEN 19

#define IPPORT_DYNAMIC_MAX 65535

#define IPPORT_DYNAMIC_MIN 49152

#define IPPORT_EPMAP 135

#define IPPORT_FTP_DATA 20

#define IPPORT_HTTPS 443

#define IPPORT_IMAP 143

#define IPPORT_IMAP3 220

#define IPPORT_LDAP 389

#define IPPORT_MICROSOFT_DS 445

#define IPPORT_MSP 18

#define IPPORT_NETBIOS_DGM 138

#define IPPORT_NETBIOS_NS 137

#define IPPORT_NETBIOS_SSN 139

#define IPPORT_NTP 123

#define IPPORT_POP3 110

#define IPPORT_QOTD 17

#define IPPORT_REGISTERED_MAX 49151

#define IPPORT_REGISTERED_MIN 1024

#define IPPORT_SNMP 161

#define IPPORT_SNMP_TRAP 162

#define IPPORT_TCPMUX 1

#define MSG_BCAST 1024

#define MSG_CTRUNC 512

#define MSG_MCAST 2048

#define MSG_TRUNC 256

#define NI_DGRAM 16

#define NI_MAXHOST 1025

#define NI_MAXSERV 32

#define NI_NAMEREQD 4

#define NI_NOFQDN 1

#define NI_NUMERICHOST 2

#define NI_NUMERICSERV 8

#define NS_ALL 0

#define NS_BTH 16

#define NS_DHCP 6

#define NS_DNS 12

#define NS_EMAIL 37

#define NS_MS 30

#define NS_NBP 20

#define NS_NDS 2

#define NS_NETBT 13

#define NS_NETDES 60

#define NS_NIS 41

#define NS_NISPLUS 42

#define NS_NLA 15

#define NS_NTDS 32

#define NS_PEER_BROWSE 3

#define NS_PNRPCLOUD 39

#define NS_PNRPNAME 38

#define NS_SAP 1

#define NS_SLP 5

#define NS_STDA 31

#define NS_TCPIP_HOSTS 11

#define NS_TCPIP_LOCAL 10

#define NS_WINS 14

#define NS_WRQ 50

#define NS_X500 40

#define SIO_ADDRESS_LIST_CHANGE 671088663

#define SIO_ADDRESS_LIST_QUERY 1207959574

#define SIO_ADDRESS_LIST_SORT 3355443225

#define SIO_ASSOCIATE_HANDLE 2281701377

#define SIO_ENABLE_CIRCULAR_QUEUEING 671088642

#define SIO_FIND_ROUTE 1207959555

#define SIO_FLUSH 671088644

#define SIO_GET_BROADCAST_ADDRESS 1207959557

#define SIO_GET_EXTENSION_FUNCTION_POINTER 3355443206

#define SIO_GET_GROUP_QOS 3355443208

#define SIO_GET_QOS 3355443207

#define SIO_MULTICAST_SCOPE 2281701386

#define SIO_MULTIPOINT_LOOPBACK 2281701385

#define SIO_QUERY_TARGET_PNP_HANDLE 1207959576

#define SIO_RESERVED_1 2281701402

#define SIO_RESERVED_2 2281701409

#define SIO_ROUTING_INTERFACE_CHANGE 2281701397

#define SIO_ROUTING_INTERFACE_QUERY 3355443220

#define SIO_SET_GROUP_QOS 2281701388

#define SIO_SET_QOS 2281701387

#define SIO_TRANSLATE_HANDLE 3355443213

#define SO_BSP_STATE 4105

#define SO_COMPARTMENT_ID 12292

#define SO_CONDITIONAL_ACCEPT 12290

#define SO_EXCLUSIVEADDRUSE -5

#define SO_GROUP_ID 8193

#define SO_GROUP_PRIORITY 8194

#define SO_MAX_MSG_SIZE 8195

#define SO_PAUSE_ACCEPT 12291

#define SO_PORT_SCALABILITY 12294

#define SO_RANDOMIZE_PORT 12293

#define WSK_SO_BASE 16384

typedef struct _CSADDR_INFO _CSADDR_INFO, *P_CSADDR_INFO;

typedef struct _SOCKET_ADDRESS _SOCKET_ADDRESS, *P_SOCKET_ADDRESS;

typedef struct _SOCKET_ADDRESS SOCKET_ADDRESS;

struct _SOCKET_ADDRESS {
    LPSOCKADDR lpSockaddr;
    INT iSockaddrLength;
};

struct _CSADDR_INFO {
    SOCKET_ADDRESS LocalAddr;
    SOCKET_ADDRESS RemoteAddr;
    INT iSocketType;
    INT iProtocol;
};

typedef struct _SOCKET_ADDRESS_LIST _SOCKET_ADDRESS_LIST, *P_SOCKET_ADDRESS_LIST;

struct _SOCKET_ADDRESS_LIST {
    INT iAddressCount;
    SOCKET_ADDRESS Address[1];
};

typedef struct _WSABUF _WSABUF, *P_WSABUF;

struct _WSABUF {
    ULONG len;
    CHAR * buf;
};

typedef struct _WSAMSG _WSAMSG, *P_WSAMSG;

typedef struct _WSABUF * LPWSABUF;

typedef struct _WSABUF WSABUF;

struct _WSAMSG {
    LPSOCKADDR name;
    INT namelen;
    LPWSABUF lpBuffers;
    ULONG dwBufferCount;
    WSABUF Control;
    ULONG dwFlags;
};

typedef struct addrinfo addrinfo, *Paddrinfo;

struct addrinfo {
    int ai_flags;
    int ai_family;
    int ai_socktype;
    int ai_protocol;
    size_t ai_addrlen;
    char * ai_canonname;
    struct sockaddr * ai_addr;
    struct addrinfo * ai_next;
};

typedef struct addrinfo ADDRINFOA;

typedef struct addrinfoexA addrinfoexA, *PaddrinfoexA;

struct addrinfoexA {
    int ai_flags;
    int ai_family;
    int ai_socktype;
    int ai_protocol;
    size_t ai_addrlen;
    char * ai_canonname;
    struct sockaddr * ai_addr;
    void * ai_blob;
    size_t ai_bloblen;
    LPGUID ai_provider;
    struct addrinfoexA * ai_next;
};

typedef struct addrinfoexA ADDRINFOEXA;

typedef struct addrinfoexW addrinfoexW, *PaddrinfoexW;

typedef struct addrinfoexW ADDRINFOEXW;

struct addrinfoexW {
    int ai_flags;
    int ai_family;
    int ai_socktype;
    int ai_protocol;
    size_t ai_addrlen;
    PWSTR ai_canonname;
    struct sockaddr * ai_addr;
    void * ai_blob;
    size_t ai_bloblen;
    LPGUID ai_provider;
    struct addrinfoexW * ai_next;
};

typedef struct addrinfoW addrinfoW, *PaddrinfoW;

struct addrinfoW {
    int ai_flags;
    int ai_family;
    int ai_socktype;
    int ai_protocol;
    size_t ai_addrlen;
    PWSTR ai_canonname;
    struct sockaddr * ai_addr;
    struct addrinfoW * ai_next;
};

typedef struct addrinfoW ADDRINFOW;

typedef struct cmsghdr cmsghdr, *Pcmsghdr;

struct cmsghdr {
    SIZE_T cmsg_len;
    INT cmsg_level;
    INT cmsg_type;
};

typedef struct cmsghdr WSACMSGHDR;

typedef WSACMSGHDR CMSGHDR;

typedef struct _CSADDR_INFO CSADDR_INFO;

typedef enum enum_6594 {
    IPPROTO_AH=51,
    IPPROTO_CBT=7,
    IPPROTO_DSTOPTS=60,
    IPPROTO_EGP=8,
    IPPROTO_ESP=50,
    IPPROTO_FRAGMENT=44,
    IPPROTO_HOPOPTS=0,
    IPPROTO_ICLFXBM=78,
    IPPROTO_ICMPV6=58,
    IPPROTO_IGP=9,
    IPPROTO_IPV4=4,
    IPPROTO_IPV6=41,
    IPPROTO_L2TP=115,
    IPPROTO_NONE=59,
    IPPROTO_PGM=113,
    IPPROTO_PIM=103,
    IPPROTO_RDP=27,
    IPPROTO_RESERVED_IPSEC=258,
    IPPROTO_RESERVED_IPSECOFFLOAD=259,
    IPPROTO_RESERVED_MAX=260,
    IPPROTO_RESERVED_RAW=257,
    IPPROTO_ROUTING=43,
    IPPROTO_SCTP=132,
    IPPROTO_ST=5
} enum_6594;

typedef enum enum_6595 {
    ScopeLevelAdmin=4,
    ScopeLevelCount=16,
    ScopeLevelGlobal=14,
    ScopeLevelInterface=1,
    ScopeLevelLink=2,
    ScopeLevelOrganization=8,
    ScopeLevelSite=5,
    ScopeLevelSubnet=3
} enum_6595;

typedef enum enum_6594 IPPROTO;

typedef struct addrinfoexA * LPADDRINFOEXA;

typedef struct addrinfoexW * LPADDRINFOEXW;

typedef struct _CSADDR_INFO * LPCSADDR_INFO;

typedef struct sockaddr_storage sockaddr_storage, *Psockaddr_storage;

typedef struct sockaddr_storage SOCKADDR_STORAGE_LH;

typedef SOCKADDR_STORAGE_LH SOCKADDR_STORAGE;

typedef SOCKADDR_STORAGE * LPSOCKADDR_STORAGE;

struct sockaddr_storage {
    ADDRESS_FAMILY ss_family;
    CHAR __ss_pad1[8];
    longlong __ss_align;
    CHAR __ss_pad2[128];
};

typedef struct sockaddr_storage * LPSOCKADDR_STORAGE_LH;

typedef struct sockaddr_storage_xp sockaddr_storage_xp, *Psockaddr_storage_xp;

typedef struct sockaddr_storage_xp * LPSOCKADDR_STORAGE_XP;

struct sockaddr_storage_xp {
    short ss_family;
    CHAR __ss_pad1[8];
    longlong __ss_align;
    CHAR __ss_pad2[128];
};

typedef struct _SOCKET_ADDRESS * LPSOCKET_ADDRESS;

typedef struct _SOCKET_ADDRESS_LIST * LPSOCKET_ADDRESS_LIST;

typedef struct cmsghdr * LPWSACMSGHDR;

typedef struct _WSAMSG * LPWSAMSG;

typedef struct addrinfo * PADDRINFOA;

typedef struct addrinfoexA * PADDRINFOEXA;

typedef struct addrinfoexW * PADDRINFOEXW;

typedef struct addrinfoW * PADDRINFOW;

typedef WSACMSGHDR * PCMSGHDR;

typedef struct _CSADDR_INFO * PCSADDR_INFO;

typedef enum enum_6594 * PIPROTO;

typedef struct sockaddr_dl sockaddr_dl, *Psockaddr_dl;

typedef struct sockaddr_dl * PSOCKADDR_DL;

struct sockaddr_dl {
    ADDRESS_FAMILY sdl_family;
    UCHAR sdl_data[8];
    UCHAR sdl_zero[4];
};

typedef SOCKADDR_STORAGE * PSOCKADDR_STORAGE;

typedef struct sockaddr_storage * PSOCKADDR_STORAGE_LH;

typedef struct sockaddr_storage_xp * PSOCKADDR_STORAGE_XP;

typedef struct _SOCKET_ADDRESS * PSOCKET_ADDRESS;

typedef struct cmsghdr * PWSACMSGHDR;

typedef struct _WSAMSG * PWSAMSG;

typedef enum enum_6595 SCOPE_LEVEL;

typedef struct sockaddr_dl SOCKADDR_DL;

typedef struct sockaddr_storage_xp SOCKADDR_STORAGE_XP;


/* WARNING! conflicting data type names: /ws2def.h/SOCKET_ADDRESS_LIST - /ndfapi.h/SOCKET_ADDRESS_LIST */

typedef struct _WSAMSG WSAMSG;

#define IFF_BROADCAST 2

#define IFF_LOOPBACK 4

#define IFF_MULTICAST 16

#define IFF_POINTTOPOINT 8

#define IFF_UP 1

#define INET6_ADDRSTRLEN 65

#define INET_ADDRSTRLEN 22

#define IP_ADD_IFLIST 29

#define IP_ADD_SOURCE_MEMBERSHIP 15

#define IP_BLOCK_SOURCE 17

#define IP_DEL_IFLIST 30

#define IP_DROP_SOURCE_MEMBERSHIP 16

#define IP_HDRINCL 2

#define IP_HOPLIMIT 21

#define IP_IFLIST 28

#define IP_ORIGINAL_ARRIVAL_IF 47

#define IP_PKTINFO 19

#define IP_PROTECTION_LEVEL 23

#define IP_RECEIVE_BROADCAST 22

#define IP_RECVDSTADDR 25

#define IP_RECVIF 24

#define IP_RECVRTHDR 38

#define IP_RECVTCLASS 40

#define IP_RTHDR 32

#define IP_TCLASS 39

#define IP_UNBLOCK_SOURCE 18

#define IP_UNICAST_IF 31

#define IP_UNSPECIFIED_HOP_LIMIT -1

#define IP_UNSPECIFIED_TYPE_OF_SERVICE -1

#define IPV6_ADD_IFLIST 29

#define IPV6_ADD_MEMBERSHIP 12

#define IPV6_CHECKSUM 26

#define IPV6_DEL_IFLIST 30

#define IPV6_DONTFRAG 14

#define IPV6_DROP_MEMBERSHIP 13

#define IPV6_HDRINCL 2

#define IPV6_HOPLIMIT 21

#define IPV6_HOPOPTS 1

#define IPV6_IFLIST 28

#define IPV6_JOIN_GROUP 12

#define IPV6_LEAVE_GROUP 13

#define IPV6_MULTICAST_HOPS 10

#define IPV6_MULTICAST_IF 9

#define IPV6_MULTICAST_LOOP 11

#define IPV6_PKTINFO 19

#define IPV6_PROTECTION_LEVEL 23

#define IPV6_RECVDSTADDR 25

#define IPV6_RECVIF 24

#define IPV6_RECVRTHDR 38

#define IPV6_RECVTCLASS 40

#define IPV6_RTHDR 32

#define IPV6_TCLASS 39

#define IPV6_UNICAST_HOPS 4

#define IPV6_UNICAST_IF 31

#define IPV6_V6ONLY 27

#define MCAST_BLOCK_SOURCE 43

#define MCAST_JOIN_GROUP 41

#define MCAST_JOIN_SOURCE_GROUP 45

#define MCAST_LEAVE_GROUP 42

#define MCAST_LEAVE_SOURCE_GROUP 46

#define MCAST_UNBLOCK_SOURCE 44

#define PROTECTION_LEVEL_DEFAULT 20

#define PROTECTION_LEVEL_EDGERESTRICTED 20

#define PROTECTION_LEVEL_RESTRICTED 30

#define PROTECTION_LEVEL_UNRESTRICTED 10

#define TCP_ATMARK 8

#define TCP_CONGESTION_ALGORITHM 12

#define TCP_DELAY_FIN_ACK 13

#define TCP_EXPEDITED_1122 2

#define TCP_KEEPALIVE 3

#define TCP_MAXRT 5

#define TCP_MAXSEG 4

#define TCP_NOSYNRETRIES 9

#define TCP_NOURG 7

#define TCP_OFFLOAD_NO_PREFERENCE 0

#define TCP_OFFLOAD_NOT_PREFERRED 1

#define TCP_OFFLOAD_PREFERENCE 11

#define TCP_OFFLOAD_PREFERRED 2

#define TCP_STDURG 6

#define TCP_TIMESTAMPS 10

typedef struct _INTERFACE_INFO _INTERFACE_INFO, *P_INTERFACE_INFO;

typedef union sockaddr_gen sockaddr_gen, *Psockaddr_gen;

typedef struct sockaddr_in6_old sockaddr_in6_old, *Psockaddr_in6_old;

struct sockaddr_in6_old {
    SHORT sin6_family;
    USHORT sin6_port;
    ULONG sin6_flowinfo;
    IN6_ADDR sin6_addr;
};

union sockaddr_gen {
    struct sockaddr Address;
    struct sockaddr_in AddressIn;
    struct sockaddr_in6_old AddressIn6;
};

struct _INTERFACE_INFO {
    ULONG iiFlags;
    union sockaddr_gen iiAddress;
    union sockaddr_gen iiBroadcastAddress;
    union sockaddr_gen iiNetmask;
};

typedef struct _INTERFACE_INFO_EX _INTERFACE_INFO_EX, *P_INTERFACE_INFO_EX;

struct _INTERFACE_INFO_EX {
    ULONG iiFlags;
    SOCKET_ADDRESS iiAddress;
    SOCKET_ADDRESS iiBroadcastAddress;
    SOCKET_ADDRESS iiNetmask;
};

typedef struct _sockaddr_in6_pair _sockaddr_in6_pair, *P_sockaddr_in6_pair;

typedef SOCKADDR_IN6_LH * PSOCKADDR_IN6;

struct _sockaddr_in6_pair {
    PSOCKADDR_IN6 SourceAddress;
    PSOCKADDR_IN6 DestinationAddress;
};

typedef enum enum_6629 {
    MCAST_EXCLUDE=1,
    MCAST_INCLUDE=0
} enum_6629;

typedef struct in6_pktinfo in6_pktinfo, *Pin6_pktinfo;

typedef struct in6_pktinfo IN6_PKTINFO;

struct in6_pktinfo {
    IN6_ADDR ipi6_addr;
    ULONG ipi6_ifindex;
};

typedef struct in_pktinfo in_pktinfo, *Pin_pktinfo;

struct in_pktinfo {
    IN_ADDR ipi_addr;
    ULONG ipi_ifindex;
};

typedef struct in_pktinfo IN_PKTINFO;

typedef struct _INTERFACE_INFO INTERFACE_INFO;

typedef struct _INTERFACE_INFO_EX INTERFACE_INFO_EX;

typedef struct ip_mreq IP_MREQ;

typedef struct ip_mreq_source ip_mreq_source, *Pip_mreq_source;

typedef struct ip_mreq_source IP_MREQ_SOURCE;

struct ip_mreq_source {
    IN_ADDR imr_multiaddr;
    IN_ADDR imr_sourceaddr;
    IN_ADDR imr_interface;
};

typedef struct ip_msfilter ip_msfilter, *Pip_msfilter;

typedef enum enum_6629 MULTICAST_MODE_TYPE;

struct ip_msfilter {
    IN_ADDR imsf_multiaddr;
    IN_ADDR imsf_interface;
    MULTICAST_MODE_TYPE imsf_fmode;
    ULONG imsf_numsrc;
    IN_ADDR imsf_slist[1];
};

typedef struct ip_msfilter IP_MSFILTER;

typedef struct ipv6_mreq ipv6_mreq, *Pipv6_mreq;

struct ipv6_mreq {
    IN6_ADDR ipv6mr_multiaddr;
    ULONG ipv6mr_interface;
};

typedef struct ipv6_mreq IPV6_MREQ;

typedef struct _INTERFACE_INFO * LPINTERFACE_INFO;

typedef struct _INTERFACE_INFO_EX * LPINTERFACE_INFO_EX;

typedef SOCKADDR_IN6_LH * LPSOCKADDR_IN6;

typedef struct sockaddr_in6 * LPSOCKADDR_IN6_LH;

typedef struct sockaddr_in6_w2ksp1 sockaddr_in6_w2ksp1, *Psockaddr_in6_w2ksp1;

typedef struct sockaddr_in6_w2ksp1 * LPSOCKADDR_IN6_W2KSP1;

struct sockaddr_in6_w2ksp1 {
    short sin6_family;
    USHORT sin6_port;
    ULONG sin6_flowinfo;
    struct in6_addr sin6_addr;
    ULONG sin6_scope_id;
};

typedef struct in6_pktinfo * PIN6_PKTINFO;

typedef struct in_pktinfo * PIN_PKTINFO;

typedef struct ip_mreq * PIP_MREQ;

typedef struct ip_mreq_source * PIP_MREQ_SOURCE;

typedef struct ip_msfilter * PIP_MSFILTER;

typedef struct ipv6_mreq * PIPV6_MREQ;

typedef struct sockaddr_in6 * PSOCKADDR_IN6_LH;

typedef struct _sockaddr_in6_pair * PSOCKADDR_IN6_PAIR;

typedef struct sockaddr_in6_w2ksp1 * PSOCKADDR_IN6_W2KSP1;

typedef union _SOCKADDR_INET * PSOCKADDR_INET;

typedef struct _sockaddr_in6_pair SOCKADDR_IN6_PAIR;

typedef struct sockaddr_in6_w2ksp1 SOCKADDR_IN6_W2KSP1;

typedef enum _WSC_SECURITY_PROVIDER {
    WSC_SECURITY_PROVIDER_ALL=1,
    WSC_SECURITY_PROVIDER_ANTISPYWARE=8,
    WSC_SECURITY_PROVIDER_ANTIVIRUS=4,
    WSC_SECURITY_PROVIDER_AUTOUPDATE_SETTINGS=2,
    WSC_SECURITY_PROVIDER_FIREWALL=1,
    WSC_SECURITY_PROVIDER_INTERNET_SETTINGS=16,
    WSC_SECURITY_PROVIDER_NONE=0,
    WSC_SECURITY_PROVIDER_SERVICE=64,
    WSC_SECURITY_PROVIDER_USER_ACCOUNT_CONTROL=32
} _WSC_SECURITY_PROVIDER;

typedef enum _WSC_SECURITY_PROVIDER_HEALTH {
    WSC_SECURITY_PROVIDER_HEALTH_GOOD=0,
    WSC_SECURITY_PROVIDER_HEALTH_NOTMONITORED=1,
    WSC_SECURITY_PROVIDER_HEALTH_POOR=2,
    WSC_SECURITY_PROVIDER_HEALTH_SNOOZE=3
} _WSC_SECURITY_PROVIDER_HEALTH;

typedef enum _WSC_SECURITY_PROVIDER * PWSC_SECURITY_PROVIDER;

typedef enum _WSC_SECURITY_PROVIDER_HEALTH * PWSC_SECURITY_PROVIDER_HEALTH;

typedef enum _WSC_SECURITY_PROVIDER WSC_SECURITY_PROVIDER;

typedef enum _WSC_SECURITY_PROVIDER_HEALTH WSC_SECURITY_PROVIDER_HEALTH;

typedef struct IWSDAttachment IWSDAttachment, *PIWSDAttachment;

typedef struct IWSDAttachmentVtbl IWSDAttachmentVtbl, *PIWSDAttachmentVtbl;

struct IWSDAttachmentVtbl {
    HRESULT (* QueryInterface)(struct IWSDAttachment *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDAttachment *);
    ULONG (* Release)(struct IWSDAttachment *);
};

struct IWSDAttachment {
    struct IWSDAttachmentVtbl * lpVtbl;
};

typedef struct IWSDInboundAttachment IWSDInboundAttachment, *PIWSDInboundAttachment;

typedef struct IWSDInboundAttachmentVtbl IWSDInboundAttachmentVtbl, *PIWSDInboundAttachmentVtbl;

struct IWSDInboundAttachment {
    struct IWSDInboundAttachmentVtbl * lpVtbl;
};

struct IWSDInboundAttachmentVtbl {
    HRESULT (* QueryInterface)(struct IWSDInboundAttachment *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDInboundAttachment *);
    ULONG (* Release)(struct IWSDInboundAttachment *);
    HRESULT (* Read)(struct IWSDInboundAttachment *, BYTE *, DWORD, LPDWORD);
    HRESULT (* Close)(struct IWSDInboundAttachment *);
};

typedef struct IWSDOutboundAttachment IWSDOutboundAttachment, *PIWSDOutboundAttachment;

typedef struct IWSDOutboundAttachmentVtbl IWSDOutboundAttachmentVtbl, *PIWSDOutboundAttachmentVtbl;

struct IWSDOutboundAttachment {
    struct IWSDOutboundAttachmentVtbl * lpVtbl;
};

struct IWSDOutboundAttachmentVtbl {
    HRESULT (* QueryInterface)(struct IWSDOutboundAttachment *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDOutboundAttachment *);
    ULONG (* Release)(struct IWSDOutboundAttachment *);
    HRESULT (* Write)(struct IWSDOutboundAttachment *, BYTE *, DWORD, LPDWORD);
    HRESULT (* Close)(struct IWSDOutboundAttachment *);
    HRESULT (* Abort)(struct IWSDOutboundAttachment *);
};

#define WSDAPI_ADDRESSFAMILY_IPV4 1

#define WSDAPI_ADDRESSFAMILY_IPV6 2

#define WSDAPI_COMPACTSIG_ACCEPT_ALL_MESSAGES 1

#define WSDAPI_SSL_CERT_APPLY_DEFAULT_CHECKS 0

#define WSDAPI_SSL_CERT_IGNORE_EXPIRY 2

#define WSDAPI_SSL_CERT_IGNORE_INVALID_CN 16

#define WSDAPI_SSL_CERT_IGNORE_REVOCATION 1

#define WSDAPI_SSL_CERT_IGNORE_UNKNOWN_CA 8

#define WSDAPI_SSL_CERT_IGNORE_WRONG_USAGE 4

typedef enum __MIDL___MIDL_itf_wsdbase_0000_0000_0001 {
    WSD_CONFIG_DEVICE_ADDRESSES=10,
    WSD_CONFIG_HOSTING_ADDRESSES=9,
    WSD_CONFIG_MAX_INBOUND_MESSAGE_SIZE=1,
    WSD_CONFIG_MAX_OUTBOUND_MESSAGE_SIZE=2,
    WSD_SECURITY_COMPACTSIG_SIGNING_CERT=7,
    WSD_SECURITY_COMPACTSIG_VALIDATION=8,
    WSD_SECURITY_SSL_CERT_FOR_CLIENT_AUTH=3,
    WSD_SECURITY_SSL_CLIENT_CERT_VALIDATION=5,
    WSD_SECURITY_SSL_NEGOTIATE_CLIENT_CERT=6,
    WSD_SECURITY_SSL_SERVER_CERT_VALIDATION=4
} __MIDL___MIDL_itf_wsdbase_0000_0000_0001;

typedef struct _WSD_CONFIG_ADDRESSES _WSD_CONFIG_ADDRESSES, *P_WSD_CONFIG_ADDRESSES;

typedef struct IWSDAddress IWSDAddress, *PIWSDAddress;

typedef struct IWSDAddressVtbl IWSDAddressVtbl, *PIWSDAddressVtbl;

struct IWSDAddress {
    struct IWSDAddressVtbl * lpVtbl;
};

struct IWSDAddressVtbl {
    HRESULT (* QueryInterface)(struct IWSDAddress *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDAddress *);
    ULONG (* Release)(struct IWSDAddress *);
    HRESULT (* Serialize)(struct IWSDAddress *, LPWSTR, DWORD, BOOL);
    HRESULT (* Deserialize)(struct IWSDAddress *, LPCWSTR);
};

struct _WSD_CONFIG_ADDRESSES {
    struct IWSDAddress * * addresses;
    DWORD dwAddressCount;
};

typedef struct _WSD_CONFIG_PARAM _WSD_CONFIG_PARAM, *P_WSD_CONFIG_PARAM;

typedef enum __MIDL___MIDL_itf_wsdbase_0000_0000_0001 WSD_CONFIG_PARAM_TYPE;

struct _WSD_CONFIG_PARAM {
    WSD_CONFIG_PARAM_TYPE configParamType;
    PVOID pConfigData;
    DWORD dwConfigDataSize;
};

typedef struct _WSD_SECURITY_CERT_VALIDATION _WSD_SECURITY_CERT_VALIDATION, *P_WSD_SECURITY_CERT_VALIDATION;

struct _WSD_SECURITY_CERT_VALIDATION {
    PCCERT_CONTEXT * certMatchArray;
    DWORD dwCertMatchArrayCount;
    HCERTSTORE hCertMatchStore;
    HCERTSTORE hCertIssuerStore;
    DWORD dwCertCheckOptions;
};

typedef struct _WSD_SECURITY_SIGNATURE_VALIDATION _WSD_SECURITY_SIGNATURE_VALIDATION, *P_WSD_SECURITY_SIGNATURE_VALIDATION;

struct _WSD_SECURITY_SIGNATURE_VALIDATION {
    PCCERT_CONTEXT * signingCertArray;
    DWORD dwSigningCertArrayCount;
    HCERTSTORE hSigningCertStore;
    DWORD dwFlags;
};

typedef enum _WSDUdpMessageType {
    ONE_WAY=0,
    TWO_WAY=1
} _WSDUdpMessageType;

typedef struct _WSDUdpRetransmitParams _WSDUdpRetransmitParams, *P_WSDUdpRetransmitParams;

struct _WSDUdpRetransmitParams {
    ULONG ulSendDelay;
    ULONG ulRepeat;
    ULONG ulRepeatMinDelay;
    ULONG ulRepeatMaxDelay;
    ULONG ulRepeatUpperDelay;
};

typedef struct IWSDHttpAddress IWSDHttpAddress, *PIWSDHttpAddress;

typedef struct IWSDHttpAddressVtbl IWSDHttpAddressVtbl, *PIWSDHttpAddressVtbl;

struct IWSDHttpAddress {
    struct IWSDHttpAddressVtbl * lpVtbl;
};

struct IWSDHttpAddressVtbl {
    HRESULT (* QueryInterface)(struct IWSDHttpAddress *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDHttpAddress *);
    ULONG (* Release)(struct IWSDHttpAddress *);
    HRESULT (* Serialize)(struct IWSDHttpAddress *, LPWSTR, DWORD, BOOL);
    HRESULT (* Deserialize)(struct IWSDHttpAddress *, LPCWSTR);
    HRESULT (* GetPort)(struct IWSDHttpAddress *, WORD *);
    HRESULT (* SetPortA)(struct IWSDHttpAddress *, WORD);
    HRESULT (* GetTransportAddress)(struct IWSDHttpAddress *, LPCWSTR *);
    HRESULT (* GetTransportAddressEx)(struct IWSDHttpAddress *, BOOL, LPCWSTR *);
    HRESULT (* SetTransportAddress)(struct IWSDHttpAddress *, LPCWSTR);
    HRESULT (* GetSecure)(struct IWSDHttpAddress *);
    HRESULT (* SetSecure)(struct IWSDHttpAddress *, BOOL);
    HRESULT (* GetPath)(struct IWSDHttpAddress *, LPCWSTR *);
    HRESULT (* SetPath)(struct IWSDHttpAddress *, LPCWSTR);
};

typedef struct IWSDHttpMessageParameters IWSDHttpMessageParameters, *PIWSDHttpMessageParameters;

typedef struct IWSDHttpMessageParametersVtbl IWSDHttpMessageParametersVtbl, *PIWSDHttpMessageParametersVtbl;

typedef struct IWSDMessageParameters IWSDMessageParameters, *PIWSDMessageParameters;

typedef struct IWSDMessageParametersVtbl IWSDMessageParametersVtbl, *PIWSDMessageParametersVtbl;

struct IWSDHttpMessageParameters {
    struct IWSDHttpMessageParametersVtbl * lpVtbl;
};

struct IWSDHttpMessageParametersVtbl {
    HRESULT (* QueryInterface)(struct IWSDHttpMessageParameters *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDHttpMessageParameters *);
    ULONG (* Release)(struct IWSDHttpMessageParameters *);
    HRESULT (* GetLocalAddress)(struct IWSDHttpMessageParameters *, struct IWSDAddress * *);
    HRESULT (* SetLocalAddress)(struct IWSDHttpMessageParameters *, struct IWSDAddress *);
    HRESULT (* GetRemoteAddress)(struct IWSDHttpMessageParameters *, struct IWSDAddress * *);
    HRESULT (* SetRemoteAddress)(struct IWSDHttpMessageParameters *, struct IWSDAddress *);
    HRESULT (* GetLowerParameters)(struct IWSDHttpMessageParameters *, struct IWSDMessageParameters * *);
    HRESULT (* SetInboundHttpHeaders)(struct IWSDHttpMessageParameters *, LPCWSTR);
    HRESULT (* GetInboundHttpHeaders)(struct IWSDHttpMessageParameters *, LPCWSTR *);
    HRESULT (* SetOutboundHttpHeaders)(struct IWSDHttpMessageParameters *, LPCWSTR);
    HRESULT (* GetOutboundHttpHeaders)(struct IWSDHttpMessageParameters *, LPCWSTR *);
    HRESULT (* SetID)(struct IWSDHttpMessageParameters *, LPCWSTR);
    HRESULT (* GetID)(struct IWSDHttpMessageParameters *, LPCWSTR *);
    HRESULT (* SetContext)(struct IWSDHttpMessageParameters *, struct IUnknown *);
    HRESULT (* GetContext)(struct IWSDHttpMessageParameters *, struct IUnknown * *);
    HRESULT (* Clear)(struct IWSDHttpMessageParameters *);
};

struct IWSDMessageParameters {
    struct IWSDMessageParametersVtbl * lpVtbl;
};

struct IWSDMessageParametersVtbl {
    HRESULT (* QueryInterface)(struct IWSDMessageParameters *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDMessageParameters *);
    ULONG (* Release)(struct IWSDMessageParameters *);
    HRESULT (* GetLocalAddress)(struct IWSDMessageParameters *, struct IWSDAddress * *);
    HRESULT (* SetLocalAddress)(struct IWSDMessageParameters *, struct IWSDAddress *);
    HRESULT (* GetRemoteAddress)(struct IWSDMessageParameters *, struct IWSDAddress * *);
    HRESULT (* SetRemoteAddress)(struct IWSDMessageParameters *, struct IWSDAddress *);
    HRESULT (* GetLowerParameters)(struct IWSDMessageParameters *, struct IWSDMessageParameters * *);
};

typedef struct IWSDSignatureProperty IWSDSignatureProperty, *PIWSDSignatureProperty;

typedef struct IWSDSignaturePropertyVtbl IWSDSignaturePropertyVtbl, *PIWSDSignaturePropertyVtbl;

struct IWSDSignaturePropertyVtbl {
    HRESULT (* QueryInterface)(struct IWSDSignatureProperty *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDSignatureProperty *);
    ULONG (* Release)(struct IWSDSignatureProperty *);
    HRESULT (* IsMessageSigned)(struct IWSDSignatureProperty *, BOOL *);
    HRESULT (* IsMessageSignatureTrusted)(struct IWSDSignatureProperty *, BOOL *);
    HRESULT (* GetKeyInfo)(struct IWSDSignatureProperty *, BYTE *, DWORD *);
    HRESULT (* GetSignature)(struct IWSDSignatureProperty *, BYTE *, DWORD *);
    HRESULT (* GetSignedInfoHash)(struct IWSDSignatureProperty *, BYTE *, DWORD *);
};

struct IWSDSignatureProperty {
    struct IWSDSignaturePropertyVtbl * lpVtbl;
};

typedef struct IWSDSSLClientCertificate IWSDSSLClientCertificate, *PIWSDSSLClientCertificate;

typedef struct IWSDSSLClientCertificateVtbl IWSDSSLClientCertificateVtbl, *PIWSDSSLClientCertificateVtbl;

struct IWSDSSLClientCertificateVtbl {
    HRESULT (* QueryInterface)(struct IWSDSSLClientCertificate *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDSSLClientCertificate *);
    ULONG (* Release)(struct IWSDSSLClientCertificate *);
    HRESULT (* GetClientCertificate)(struct IWSDSSLClientCertificate *, PCCERT_CONTEXT *);
    HRESULT (* GetMappedAccessToken)(struct IWSDSSLClientCertificate *, HANDLE *);
};

struct IWSDSSLClientCertificate {
    struct IWSDSSLClientCertificateVtbl * lpVtbl;
};

typedef struct IWSDTransportAddress IWSDTransportAddress, *PIWSDTransportAddress;

typedef struct IWSDTransportAddressVtbl IWSDTransportAddressVtbl, *PIWSDTransportAddressVtbl;

struct IWSDTransportAddress {
    struct IWSDTransportAddressVtbl * lpVtbl;
};

struct IWSDTransportAddressVtbl {
    HRESULT (* QueryInterface)(struct IWSDTransportAddress *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDTransportAddress *);
    ULONG (* Release)(struct IWSDTransportAddress *);
    HRESULT (* Serialize)(struct IWSDTransportAddress *, LPWSTR, DWORD, BOOL);
    HRESULT (* Deserialize)(struct IWSDTransportAddress *, LPCWSTR);
    HRESULT (* GetPort)(struct IWSDTransportAddress *, WORD *);
    HRESULT (* SetPortA)(struct IWSDTransportAddress *, WORD);
    HRESULT (* GetTransportAddress)(struct IWSDTransportAddress *, LPCWSTR *);
    HRESULT (* GetTransportAddressEx)(struct IWSDTransportAddress *, BOOL, LPCWSTR *);
    HRESULT (* SetTransportAddress)(struct IWSDTransportAddress *, LPCWSTR);
};

typedef struct IWSDUdpAddress IWSDUdpAddress, *PIWSDUdpAddress;

typedef struct IWSDUdpAddressVtbl IWSDUdpAddressVtbl, *PIWSDUdpAddressVtbl;

typedef enum _WSDUdpMessageType WSDUdpMessageType;

struct IWSDUdpAddress {
    struct IWSDUdpAddressVtbl * lpVtbl;
};

struct IWSDUdpAddressVtbl {
    HRESULT (* QueryInterface)(struct IWSDUdpAddress *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDUdpAddress *);
    ULONG (* Release)(struct IWSDUdpAddress *);
    HRESULT (* Serialize)(struct IWSDUdpAddress *, LPWSTR, DWORD, BOOL);
    HRESULT (* Deserialize)(struct IWSDUdpAddress *, LPCWSTR);
    HRESULT (* GetPort)(struct IWSDUdpAddress *, WORD *);
    HRESULT (* SetPortA)(struct IWSDUdpAddress *, WORD);
    HRESULT (* GetTransportAddress)(struct IWSDUdpAddress *, LPCWSTR *);
    HRESULT (* GetTransportAddressEx)(struct IWSDUdpAddress *, BOOL, LPCWSTR *);
    HRESULT (* SetTransportAddress)(struct IWSDUdpAddress *, LPCWSTR);
    HRESULT (* SetSockaddr)(struct IWSDUdpAddress *, SOCKADDR_STORAGE *);
    HRESULT (* GetSockaddr)(struct IWSDUdpAddress *, SOCKADDR_STORAGE *);
    HRESULT (* SetExclusive)(struct IWSDUdpAddress *, BOOL);
    HRESULT (* GetExclusive)(struct IWSDUdpAddress *);
    HRESULT (* SetMessageType)(struct IWSDUdpAddress *, WSDUdpMessageType);
    HRESULT (* GetMessageType)(struct IWSDUdpAddress *, WSDUdpMessageType *);
    HRESULT (* SetTTL)(struct IWSDUdpAddress *, DWORD);
    HRESULT (* GetTTL)(struct IWSDUdpAddress *, DWORD *);
    HRESULT (* SetAlias)(struct IWSDUdpAddress *, GUID *);
    HRESULT (* GetAlias)(struct IWSDUdpAddress *, GUID *);
};

typedef struct IWSDUdpMessageParameters IWSDUdpMessageParameters, *PIWSDUdpMessageParameters;

typedef struct IWSDUdpMessageParametersVtbl IWSDUdpMessageParametersVtbl, *PIWSDUdpMessageParametersVtbl;

typedef struct _WSDUdpRetransmitParams WSDUdpRetransmitParams;

struct IWSDUdpMessageParametersVtbl {
    HRESULT (* QueryInterface)(struct IWSDUdpMessageParameters *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDUdpMessageParameters *);
    ULONG (* Release)(struct IWSDUdpMessageParameters *);
    HRESULT (* GetLocalAddress)(struct IWSDUdpMessageParameters *, struct IWSDAddress * *);
    HRESULT (* SetLocalAddress)(struct IWSDUdpMessageParameters *, struct IWSDAddress *);
    HRESULT (* GetRemoteAddress)(struct IWSDUdpMessageParameters *, struct IWSDAddress * *);
    HRESULT (* SetRemoteAddress)(struct IWSDUdpMessageParameters *, struct IWSDAddress *);
    HRESULT (* GetLowerParameters)(struct IWSDUdpMessageParameters *, struct IWSDMessageParameters * *);
    HRESULT (* SetRetransmitParams)(struct IWSDUdpMessageParameters *, WSDUdpRetransmitParams *);
    HRESULT (* GetRetransmitParams)(struct IWSDUdpMessageParameters *, WSDUdpRetransmitParams *);
};

struct IWSDUdpMessageParameters {
    struct IWSDUdpMessageParametersVtbl * lpVtbl;
};

typedef struct _WSD_CONFIG_ADDRESSES * PWSD_CONFIG_ADDRESSES;

typedef struct _WSD_CONFIG_PARAM * PWSD_CONFIG_PARAM;

typedef struct _WSD_SECURITY_CERT_VALIDATION * PWSD_SECURITY_CERT_VALIDATION;

typedef struct _WSD_SECURITY_SIGNATURE_VALIDATION * PWSD_SECURITY_SIGNATURE_VALIDATION;

typedef struct _WSD_CONFIG_ADDRESSES WSD_CONFIG_ADDRESSES;

typedef struct _WSD_CONFIG_PARAM WSD_CONFIG_PARAM;

typedef struct _WSD_SECURITY_CERT_VALIDATION WSD_SECURITY_CERT_VALIDATION;

typedef struct _WSD_SECURITY_SIGNATURE_VALIDATION WSD_SECURITY_SIGNATURE_VALIDATION;

typedef struct IWSDAsyncCallback IWSDAsyncCallback, *PIWSDAsyncCallback;

typedef struct IWSDAsyncCallbackVtbl IWSDAsyncCallbackVtbl, *PIWSDAsyncCallbackVtbl;

typedef struct IWSDAsyncResult IWSDAsyncResult, *PIWSDAsyncResult;

typedef struct IWSDAsyncResultVtbl IWSDAsyncResultVtbl, *PIWSDAsyncResultVtbl;

typedef struct _WSD_EVENT _WSD_EVENT, *P_WSD_EVENT;

typedef struct _WSD_EVENT WSD_EVENT;

typedef struct IWSDEndpointProxy IWSDEndpointProxy, *PIWSDEndpointProxy;

typedef struct _WSD_HANDLER_CONTEXT _WSD_HANDLER_CONTEXT, *P_WSD_HANDLER_CONTEXT;

typedef struct _WSD_HANDLER_CONTEXT WSD_HANDLER_CONTEXT;

typedef struct _WSD_SOAP_MESSAGE _WSD_SOAP_MESSAGE, *P_WSD_SOAP_MESSAGE;

typedef struct _WSD_SOAP_MESSAGE WSD_SOAP_MESSAGE;

typedef struct _WSD_OPERATION _WSD_OPERATION, *P_WSD_OPERATION;

typedef struct _WSD_OPERATION WSD_OPERATION;

typedef struct IWSDEndpointProxyVtbl IWSDEndpointProxyVtbl, *PIWSDEndpointProxyVtbl;

typedef struct _WSD_SYNCHRONOUS_RESPONSE_CONTEXT _WSD_SYNCHRONOUS_RESPONSE_CONTEXT, *P_WSD_SYNCHRONOUS_RESPONSE_CONTEXT;

typedef struct _WSD_SYNCHRONOUS_RESPONSE_CONTEXT WSD_SYNCHRONOUS_RESPONSE_CONTEXT;

typedef struct _WSD_SOAP_FAULT _WSD_SOAP_FAULT, *P_WSD_SOAP_FAULT;

typedef struct _WSD_SOAP_FAULT WSD_SOAP_FAULT;

typedef HRESULT (* PWSD_SOAP_MESSAGE_HANDLER)(struct IUnknown *, WSD_EVENT *);

typedef struct _WSD_SOAP_HEADER _WSD_SOAP_HEADER, *P_WSD_SOAP_HEADER;

typedef struct _WSD_SOAP_HEADER WSD_SOAP_HEADER;

typedef struct _WSDXML_TYPE _WSDXML_TYPE, *P_WSDXML_TYPE;

typedef struct _WSDXML_TYPE WSDXML_TYPE;

typedef struct IWSDServiceMessaging IWSDServiceMessaging, *PIWSDServiceMessaging;

typedef HRESULT (* WSD_STUB_FUNCTION)(struct IUnknown *, struct IWSDServiceMessaging *, WSD_EVENT *);

typedef struct _WSD_SOAP_FAULT_CODE _WSD_SOAP_FAULT_CODE, *P_WSD_SOAP_FAULT_CODE;

typedef struct _WSD_SOAP_FAULT_CODE WSD_SOAP_FAULT_CODE;

typedef struct _WSD_SOAP_FAULT_REASON _WSD_SOAP_FAULT_REASON, *P_WSD_SOAP_FAULT_REASON;

typedef struct _WSD_SOAP_FAULT_REASON WSD_SOAP_FAULT_REASON;

typedef struct _WSDXML_ELEMENT _WSDXML_ELEMENT, *P_WSDXML_ELEMENT;

typedef struct _WSDXML_ELEMENT WSDXML_ELEMENT;

typedef struct _WSD_HEADER_RELATESTO _WSD_HEADER_RELATESTO, *P_WSD_HEADER_RELATESTO;

typedef struct _WSD_HEADER_RELATESTO WSD_HEADER_RELATESTO;

typedef struct _WSD_ENDPOINT_REFERENCE _WSD_ENDPOINT_REFERENCE, *P_WSD_ENDPOINT_REFERENCE;

typedef struct _WSD_ENDPOINT_REFERENCE WSD_ENDPOINT_REFERENCE;

typedef struct _WSD_APP_SEQUENCE _WSD_APP_SEQUENCE, *P_WSD_APP_SEQUENCE;

typedef struct _WSD_APP_SEQUENCE WSD_APP_SEQUENCE;

typedef struct IWSDServiceMessagingVtbl IWSDServiceMessagingVtbl, *PIWSDServiceMessagingVtbl;

typedef struct _WSDXML_NAME _WSDXML_NAME, *P_WSDXML_NAME;

typedef struct _WSDXML_NAME WSDXML_NAME;

typedef struct _WSD_SOAP_FAULT_SUBCODE _WSD_SOAP_FAULT_SUBCODE, *P_WSD_SOAP_FAULT_SUBCODE;

typedef struct _WSD_SOAP_FAULT_SUBCODE WSD_SOAP_FAULT_SUBCODE;

typedef struct _WSD_LOCALIZED_STRING_LIST _WSD_LOCALIZED_STRING_LIST, *P_WSD_LOCALIZED_STRING_LIST;

typedef struct _WSD_LOCALIZED_STRING_LIST WSD_LOCALIZED_STRING_LIST;

typedef struct _WSDXML_NODE _WSDXML_NODE, *P_WSDXML_NODE;

typedef struct _WSDXML_NODE WSDXML_NODE;

typedef struct _WSDXML_ATTRIBUTE _WSDXML_ATTRIBUTE, *P_WSDXML_ATTRIBUTE;

typedef struct _WSDXML_ATTRIBUTE WSDXML_ATTRIBUTE;

typedef struct _WSDXML_PREFIX_MAPPING _WSDXML_PREFIX_MAPPING, *P_WSDXML_PREFIX_MAPPING;

typedef struct _WSDXML_PREFIX_MAPPING WSDXML_PREFIX_MAPPING;

typedef struct _WSD_REFERENCE_PROPERTIES _WSD_REFERENCE_PROPERTIES, *P_WSD_REFERENCE_PROPERTIES;

typedef struct _WSD_REFERENCE_PROPERTIES WSD_REFERENCE_PROPERTIES;

typedef struct _WSD_REFERENCE_PARAMETERS _WSD_REFERENCE_PARAMETERS, *P_WSD_REFERENCE_PARAMETERS;

typedef struct _WSD_REFERENCE_PARAMETERS WSD_REFERENCE_PARAMETERS;

typedef struct _WSDXML_NAMESPACE _WSDXML_NAMESPACE, *P_WSDXML_NAMESPACE;

typedef struct _WSDXML_NAMESPACE WSDXML_NAMESPACE;

typedef struct _WSD_LOCALIZED_STRING _WSD_LOCALIZED_STRING, *P_WSD_LOCALIZED_STRING;

typedef struct _WSD_LOCALIZED_STRING WSD_LOCALIZED_STRING;

typedef enum enum_8640 {
    ElementType=0,
    TextType=1
} enum_8640;

struct _WSD_LOCALIZED_STRING_LIST {
    WSD_LOCALIZED_STRING_LIST * Next;
    WSD_LOCALIZED_STRING * Element;
};

struct _WSD_SOAP_FAULT_REASON {
    WSD_LOCALIZED_STRING_LIST * Text;
};

struct _WSD_HEADER_RELATESTO {
    WSDXML_NAME * RelationshipType;
    WCHAR * MessageID;
};

struct _WSD_SOAP_HEADER {
    WCHAR * To;
    WCHAR * Action;
    WCHAR * MessageID;
    WSD_HEADER_RELATESTO RelatesTo;
    WSD_ENDPOINT_REFERENCE * ReplyTo;
    WSD_ENDPOINT_REFERENCE * From;
    WSD_ENDPOINT_REFERENCE * FaultTo;
    WSD_APP_SEQUENCE * AppSequence;
    WSDXML_ELEMENT * AnyHeaders;
};

struct _WSD_SOAP_MESSAGE {
    WSD_SOAP_HEADER Header;
    void * Body;
    WSDXML_TYPE * BodyType;
};

struct IWSDServiceMessaging {
    struct IWSDServiceMessagingVtbl * lpVtbl;
};

struct _WSDXML_ATTRIBUTE {
    WSDXML_ELEMENT * Element;
    WSDXML_ATTRIBUTE * Next;
    WSDXML_NAME * Name;
    WCHAR * Value;
};

struct _WSDXML_PREFIX_MAPPING {
    DWORD Refs;
    WSDXML_PREFIX_MAPPING * Next;
    WSDXML_NAMESPACE * Space;
    WCHAR * Prefix;
};

struct _WSD_OPERATION {
    WSDXML_TYPE * RequestType;
    WSDXML_TYPE * ResponseType;
    WSD_STUB_FUNCTION RequestStubFunction;
};

struct _WSD_SOAP_FAULT {
    WSD_SOAP_FAULT_CODE * Code;
    WSD_SOAP_FAULT_REASON * Reason;
    WCHAR * Node;
    WCHAR * Role;
    WSDXML_ELEMENT * Detail;
};

struct IWSDAsyncCallbackVtbl {
    HRESULT (* QueryInterface)(struct IWSDAsyncCallback *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDAsyncCallback *);
    ULONG (* Release)(struct IWSDAsyncCallback *);
    HRESULT (* AsyncOperationComplete)(struct IWSDAsyncCallback *, struct IWSDAsyncResult *, struct IUnknown *);
};

struct _WSD_HANDLER_CONTEXT {
    PWSD_SOAP_MESSAGE_HANDLER Handler;
    void * PVoid;
    struct IUnknown * Unknown;
};

struct _WSD_EVENT {
    HRESULT Hr;
    DWORD EventType;
    WCHAR * DispatchTag;
    WSD_HANDLER_CONTEXT HandlerContext;
    WSD_SOAP_MESSAGE * Soap;
    WSD_OPERATION * Operation;
    struct IWSDMessageParameters * MessageParameters;
};

struct _WSD_SOAP_FAULT_SUBCODE {
    WSDXML_NAME * Value;
    WSD_SOAP_FAULT_SUBCODE * Subcode;
};

struct IWSDEndpointProxyVtbl {
    HRESULT (* QueryInterface)(struct IWSDEndpointProxy *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDEndpointProxy *);
    ULONG (* Release)(struct IWSDEndpointProxy *);
    HRESULT (* SendOneWayRequest)(struct IWSDEndpointProxy *, void *, WSD_OPERATION *);
    HRESULT (* SendTwoWayRequest)(struct IWSDEndpointProxy *, void *, WSD_OPERATION *, WSD_SYNCHRONOUS_RESPONSE_CONTEXT *);
    HRESULT (* SendTwoWayRequestAsync)(struct IWSDEndpointProxy *, void *, WSD_OPERATION *, struct IUnknown *, struct IWSDAsyncCallback *, struct IWSDAsyncResult * *);
    HRESULT (* AbortAsyncOperation)(struct IWSDEndpointProxy *, struct IWSDAsyncResult *);
    HRESULT (* ProcessFault)(struct IWSDEndpointProxy *, WSD_SOAP_FAULT *);
    HRESULT (* GetErrorInfo)(struct IWSDEndpointProxy *, LPCWSTR *);
    HRESULT (* GetFaultInfo)(struct IWSDEndpointProxy *, WSD_SOAP_FAULT * *);
};

struct _WSD_APP_SEQUENCE {
    ULONGLONG InstanceId;
    WCHAR * SequenceId;
    ULONGLONG MessageNumber;
};

struct _WSD_SYNCHRONOUS_RESPONSE_CONTEXT {
    HRESULT hr;
    HANDLE eventHandle;
    struct IWSDMessageParameters * messageParameters;
    void * results;
};

struct _WSDXML_NAME {
    WSDXML_NAMESPACE * Space;
    WCHAR * LocalName;
};

struct IWSDAsyncResultVtbl {
    HRESULT (* QueryInterface)(struct IWSDAsyncResult *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDAsyncResult *);
    ULONG (* Release)(struct IWSDAsyncResult *);
    HRESULT (* SetCallback)(struct IWSDAsyncResult *, struct IWSDAsyncCallback *, struct IUnknown *);
    HRESULT (* SetWaitHandle)(struct IWSDAsyncResult *, HANDLE);
    HRESULT (* HasCompleted)(struct IWSDAsyncResult *);
    HRESULT (* GetAsyncState)(struct IWSDAsyncResult *, struct IUnknown * *);
    HRESULT (* Abort)(struct IWSDAsyncResult *);
    HRESULT (* GetEvent)(struct IWSDAsyncResult *, WSD_EVENT *);
    HRESULT (* GetEndpointProxy)(struct IWSDAsyncResult *, struct IWSDEndpointProxy * *);
};

struct _WSD_SOAP_FAULT_CODE {
    WSDXML_NAME * Value;
    WSD_SOAP_FAULT_SUBCODE * Subcode;
};

struct _WSD_REFERENCE_PARAMETERS {
    WSDXML_ELEMENT * Any;
};

struct _WSDXML_NAMESPACE {
    WCHAR * Uri;
    WCHAR * PreferredPrefix;
    WSDXML_NAME * Names;
    WORD NamesCount;
    WORD Encoding;
};

struct IWSDEndpointProxy {
    struct IWSDEndpointProxyVtbl * lpVtbl;
};

struct _WSDXML_NODE {
    enum enum_8640 Type;
    WSDXML_ELEMENT * Parent;
    WSDXML_NODE * Next;
};

struct _WSD_REFERENCE_PROPERTIES {
    WSDXML_ELEMENT * Any;
};

struct _WSD_ENDPOINT_REFERENCE {
    WCHAR * Address;
    WSD_REFERENCE_PROPERTIES ReferenceProperties;
    WSD_REFERENCE_PARAMETERS ReferenceParameters;
    WSDXML_NAME * PortType;
    WSDXML_NAME * ServiceName;
    WSDXML_ELEMENT * Any;
};

struct _WSDXML_ELEMENT {
    WSDXML_NODE Node;
    WSDXML_NAME * Name;
    WSDXML_ATTRIBUTE * FirstAttribute;
    WSDXML_NODE * FirstChild;
    WSDXML_PREFIX_MAPPING * PrefixMappings;
};

struct IWSDServiceMessagingVtbl {
    HRESULT (* QueryInterface)(struct IWSDServiceMessaging *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDServiceMessaging *);
    ULONG (* Release)(struct IWSDServiceMessaging *);
    HRESULT (* SendResponse)(struct IWSDServiceMessaging *, void *, WSD_OPERATION *, struct IWSDMessageParameters *);
    HRESULT (* FaultRequest)(struct IWSDServiceMessaging *, WSD_SOAP_HEADER *, struct IWSDMessageParameters *, WSD_SOAP_FAULT *);
};

struct IWSDAsyncCallback {
    struct IWSDAsyncCallbackVtbl * lpVtbl;
};

struct _WSD_LOCALIZED_STRING {
    WCHAR * lang;
    WCHAR * String;
};

struct _WSDXML_TYPE {
    WCHAR * Uri;
    BYTE * Table;
};

struct IWSDAsyncResult {
    struct IWSDAsyncResultVtbl * lpVtbl;
};

typedef struct IWSDDeviceProxy IWSDDeviceProxy, *PIWSDDeviceProxy;

typedef struct IWSDDeviceProxyVtbl IWSDDeviceProxyVtbl, *PIWSDDeviceProxyVtbl;

typedef struct IWSDXMLContext IWSDXMLContext, *PIWSDXMLContext;

typedef struct _WSD_HOST_METADATA _WSD_HOST_METADATA, *P_WSD_HOST_METADATA;

typedef struct _WSD_HOST_METADATA WSD_HOST_METADATA;

typedef struct _WSD_THIS_MODEL_METADATA _WSD_THIS_MODEL_METADATA, *P_WSD_THIS_MODEL_METADATA;

typedef struct _WSD_THIS_MODEL_METADATA WSD_THIS_MODEL_METADATA;

typedef struct _WSD_THIS_DEVICE_METADATA _WSD_THIS_DEVICE_METADATA, *P_WSD_THIS_DEVICE_METADATA;

typedef struct _WSD_THIS_DEVICE_METADATA WSD_THIS_DEVICE_METADATA;

typedef struct _WSD_METADATA_SECTION_LIST _WSD_METADATA_SECTION_LIST, *P_WSD_METADATA_SECTION_LIST;

typedef struct _WSD_METADATA_SECTION_LIST WSD_METADATA_SECTION_LIST;

typedef struct IWSDServiceProxy IWSDServiceProxy, *PIWSDServiceProxy;

typedef struct IWSDXMLContextVtbl IWSDXMLContextVtbl, *PIWSDXMLContextVtbl;

typedef WSDXML_NAMESPACE * PCWSDXML_NAMESPACE;

typedef WSDXML_TYPE * PCWSDXML_TYPE;

typedef struct _WSD_SERVICE_METADATA _WSD_SERVICE_METADATA, *P_WSD_SERVICE_METADATA;

typedef struct _WSD_SERVICE_METADATA WSD_SERVICE_METADATA;

typedef struct _WSD_SERVICE_METADATA_LIST _WSD_SERVICE_METADATA_LIST, *P_WSD_SERVICE_METADATA_LIST;

typedef struct _WSD_SERVICE_METADATA_LIST WSD_SERVICE_METADATA_LIST;

typedef struct _WSD_METADATA_SECTION _WSD_METADATA_SECTION, *P_WSD_METADATA_SECTION;

typedef struct _WSD_METADATA_SECTION WSD_METADATA_SECTION;

typedef struct IWSDServiceProxyVtbl IWSDServiceProxyVtbl, *PIWSDServiceProxyVtbl;

typedef struct IWSDEventingStatus IWSDEventingStatus, *PIWSDEventingStatus;

typedef struct _WSD_ENDPOINT_REFERENCE_LIST _WSD_ENDPOINT_REFERENCE_LIST, *P_WSD_ENDPOINT_REFERENCE_LIST;

typedef struct _WSD_ENDPOINT_REFERENCE_LIST WSD_ENDPOINT_REFERENCE_LIST;

typedef struct _WSD_NAME_LIST _WSD_NAME_LIST, *P_WSD_NAME_LIST;

typedef struct _WSD_NAME_LIST WSD_NAME_LIST;

typedef struct IWSDEventingStatusVtbl IWSDEventingStatusVtbl, *PIWSDEventingStatusVtbl;

struct _WSD_THIS_MODEL_METADATA {
    WSD_LOCALIZED_STRING_LIST * Manufacturer;
    WCHAR * ManufacturerUrl;
    WSD_LOCALIZED_STRING_LIST * ModelName;
    WCHAR * ModelNumber;
    WCHAR * ModelUrl;
    WCHAR * PresentationUrl;
    WSDXML_ELEMENT * Any;
};

struct IWSDDeviceProxy {
    struct IWSDDeviceProxyVtbl * lpVtbl;
};

struct IWSDXMLContext {
    struct IWSDXMLContextVtbl * lpVtbl;
};

struct IWSDXMLContextVtbl {
    HRESULT (* QueryInterface)(struct IWSDXMLContext *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDXMLContext *);
    ULONG (* Release)(struct IWSDXMLContext *);
    HRESULT (* AddNamespace)(struct IWSDXMLContext *, LPCWSTR, LPCWSTR, WSDXML_NAMESPACE * *);
    HRESULT (* AddNameToNamespace)(struct IWSDXMLContext *, LPCWSTR, LPCWSTR, WSDXML_NAME * *);
    HRESULT (* SetNamespaces)(struct IWSDXMLContext *, PCWSDXML_NAMESPACE *, WORD, BYTE);
    HRESULT (* SetTypes)(struct IWSDXMLContext *, PCWSDXML_TYPE *, DWORD, BYTE);
};

struct _WSD_SERVICE_METADATA_LIST {
    WSD_SERVICE_METADATA_LIST * Next;
    WSD_SERVICE_METADATA * Element;
};

struct _WSD_ENDPOINT_REFERENCE_LIST {
    WSD_ENDPOINT_REFERENCE_LIST * Next;
    WSD_ENDPOINT_REFERENCE * Element;
};

struct _WSD_THIS_DEVICE_METADATA {
    WSD_LOCALIZED_STRING_LIST * FriendlyName;
    WCHAR * FirmwareVersion;
    WCHAR * SerialNumber;
    WSDXML_ELEMENT * Any;
};

struct IWSDServiceProxy {
    struct IWSDServiceProxyVtbl * lpVtbl;
};

struct _WSD_METADATA_SECTION {
    WCHAR * Dialect;
    WCHAR * Identifier;
    void * Data;
    WSD_ENDPOINT_REFERENCE * MetadataReference;
    WCHAR * Location;
    WSDXML_ELEMENT * Any;
};

struct IWSDServiceProxyVtbl {
    HRESULT (* QueryInterface)(struct IWSDServiceProxy *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDServiceProxy *);
    ULONG (* Release)(struct IWSDServiceProxy *);
    HRESULT (* GetMetadata)(struct IWSDServiceProxy *, WSD_METADATA_SECTION_LIST * *);
    HRESULT (* BeginGetMetadata)(struct IWSDServiceProxy *, struct IWSDAsyncResult * *);
    HRESULT (* EndGetMetadata)(struct IWSDServiceProxy *, struct IWSDAsyncResult *, WSD_METADATA_SECTION_LIST * *);
    HRESULT (* GetServiceMetadata)(struct IWSDServiceProxy *, WSD_SERVICE_METADATA * *);
    HRESULT (* SubscribeToOperation)(struct IWSDServiceProxy *, WSD_OPERATION *, struct IUnknown *, WSDXML_ELEMENT *, WSDXML_ELEMENT * *);
    HRESULT (* UnsubscribeToOperation)(struct IWSDServiceProxy *, WSD_OPERATION *);
    HRESULT (* SetEventingStatusCallback)(struct IWSDServiceProxy *, struct IWSDEventingStatus *);
    HRESULT (* GetEndpointProxy)(struct IWSDServiceProxy *, struct IWSDEndpointProxy * *);
};

struct IWSDEventingStatusVtbl {
    HRESULT (* QueryInterface)(struct IWSDEventingStatus *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDEventingStatus *);
    ULONG (* Release)(struct IWSDEventingStatus *);
    void (* SubscriptionRenewed)(struct IWSDEventingStatus *, LPCWSTR);
    void (* SubscriptionRenewalFailed)(struct IWSDEventingStatus *, LPCWSTR, HRESULT);
    void (* SubscriptionEnded)(struct IWSDEventingStatus *, LPCWSTR);
};

struct _WSD_SERVICE_METADATA {
    WSD_ENDPOINT_REFERENCE_LIST * EndpointReference;
    WSD_NAME_LIST * Types;
    WCHAR * ServiceId;
    WSDXML_ELEMENT * Any;
};

struct IWSDEventingStatus {
    struct IWSDEventingStatusVtbl * lpVtbl;
};

struct IWSDDeviceProxyVtbl {
    HRESULT (* QueryInterface)(struct IWSDDeviceProxy *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDDeviceProxy *);
    ULONG (* Release)(struct IWSDDeviceProxy *);
    HRESULT (* Init)(struct IWSDDeviceProxy *, LPCWSTR, struct IWSDAddress *, LPCWSTR, struct IWSDXMLContext *, struct IWSDDeviceProxy *);
    HRESULT (* BeginGetMetadata)(struct IWSDDeviceProxy *, struct IWSDAsyncResult * *);
    HRESULT (* EndGetMetadata)(struct IWSDDeviceProxy *, struct IWSDAsyncResult *);
    HRESULT (* GetHostMetadata)(struct IWSDDeviceProxy *, WSD_HOST_METADATA * *);
    HRESULT (* GetThisModelMetadata)(struct IWSDDeviceProxy *, WSD_THIS_MODEL_METADATA * *);
    HRESULT (* GetThisDeviceMetadata)(struct IWSDDeviceProxy *, WSD_THIS_DEVICE_METADATA * *);
    HRESULT (* GetAllMetadata)(struct IWSDDeviceProxy *, WSD_METADATA_SECTION_LIST * *);
    HRESULT (* GetServiceProxyById)(struct IWSDDeviceProxy *, LPCWSTR, struct IWSDServiceProxy * *);
    HRESULT (* GetServiceProxyByType)(struct IWSDDeviceProxy *, WSDXML_NAME *, struct IWSDServiceProxy * *);
    HRESULT (* GetEndpointProxy)(struct IWSDDeviceProxy *, struct IWSDEndpointProxy * *);
};

struct _WSD_NAME_LIST {
    WSD_NAME_LIST * Next;
    WSDXML_NAME * Element;
};

struct _WSD_HOST_METADATA {
    WSD_SERVICE_METADATA * Host;
    WSD_SERVICE_METADATA_LIST * Hosted;
};

struct _WSD_METADATA_SECTION_LIST {
    WSD_METADATA_SECTION_LIST * Next;
    WSD_METADATA_SECTION * Element;
};

typedef struct IWSDMetadataExchange IWSDMetadataExchange, *PIWSDMetadataExchange;

typedef struct IWSDMetadataExchangeVtbl IWSDMetadataExchangeVtbl, *PIWSDMetadataExchangeVtbl;

struct IWSDMetadataExchange {
    struct IWSDMetadataExchangeVtbl * lpVtbl;
};

struct IWSDMetadataExchangeVtbl {
    HRESULT (* QueryInterface)(struct IWSDMetadataExchange *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDMetadataExchange *);
    ULONG (* Release)(struct IWSDMetadataExchange *);
    HRESULT (* GetMetadata)(struct IWSDMetadataExchange *, WSD_METADATA_SECTION_LIST * *);
};

typedef struct IWSDServiceProxyEventing IWSDServiceProxyEventing, *PIWSDServiceProxyEventing;

typedef struct IWSDServiceProxyEventingVtbl IWSDServiceProxyEventingVtbl, *PIWSDServiceProxyEventingVtbl;

typedef struct _WSD_EVENTING_EXPIRES _WSD_EVENTING_EXPIRES, *P_WSD_EVENTING_EXPIRES;

typedef struct _WSD_EVENTING_EXPIRES WSD_EVENTING_EXPIRES;

typedef struct _WSD_DURATION _WSD_DURATION, *P_WSD_DURATION;

typedef struct _WSD_DURATION WSD_DURATION;

typedef struct _WSD_DATETIME _WSD_DATETIME, *P_WSD_DATETIME;

typedef struct _WSD_DATETIME WSD_DATETIME;

struct _WSD_EVENTING_EXPIRES {
    WSD_DURATION * Duration;
    WSD_DATETIME * DateTime;
};

struct _WSD_DATETIME {
    BOOL isPositive;
    ULONG year;
    UCHAR month;
    UCHAR day;
    UCHAR hour;
    UCHAR minute;
    UCHAR second;
    UINT millisecond;
    BOOL TZIsLocal;
    BOOL TZIsPositive;
    UCHAR TZHour;
    UCHAR TZMinute;
};

struct IWSDServiceProxyEventingVtbl {
    HRESULT (* QueryInterface)(struct IWSDServiceProxyEventing *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDServiceProxyEventing *);
    ULONG (* Release)(struct IWSDServiceProxyEventing *);
    HRESULT (* GetMetadata)(struct IWSDServiceProxyEventing *, WSD_METADATA_SECTION_LIST * *);
    HRESULT (* BeginGetMetadata)(struct IWSDServiceProxyEventing *, struct IWSDAsyncResult * *);
    HRESULT (* EndGetMetadata)(struct IWSDServiceProxyEventing *, struct IWSDAsyncResult *, WSD_METADATA_SECTION_LIST * *);
    HRESULT (* GetServiceMetadata)(struct IWSDServiceProxyEventing *, WSD_SERVICE_METADATA * *);
    HRESULT (* SubscribeToOperation)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, struct IUnknown *, WSDXML_ELEMENT *, WSDXML_ELEMENT * *);
    HRESULT (* UnsubscribeToOperation)(struct IWSDServiceProxyEventing *, WSD_OPERATION *);
    HRESULT (* SetEventingStatusCallback)(struct IWSDServiceProxyEventing *, struct IWSDEventingStatus *);
    HRESULT (* GetEndpointProxy)(struct IWSDServiceProxyEventing *, struct IWSDEndpointProxy * *);
    HRESULT (* SubscribeToMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, struct IUnknown *, WSD_EVENTING_EXPIRES *, WSDXML_ELEMENT *, WSD_EVENTING_EXPIRES * *, WSDXML_ELEMENT * *);
    HRESULT (* BeginSubscribeToMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, struct IUnknown *, WSD_EVENTING_EXPIRES *, WSDXML_ELEMENT *, struct IUnknown *, struct IWSDAsyncCallback *, struct IWSDAsyncResult * *);
    HRESULT (* EndSubscribeToMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, struct IWSDAsyncResult *, WSD_EVENTING_EXPIRES * *, WSDXML_ELEMENT * *);
    HRESULT (* UnsubscribeToMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, WSDXML_ELEMENT *);
    HRESULT (* BeginUnsubscribeToMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, WSDXML_ELEMENT *, struct IUnknown *, struct IWSDAsyncCallback *, struct IWSDAsyncResult * *);
    HRESULT (* EndUnsubscribeToMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, struct IWSDAsyncResult *);
    HRESULT (* RenewMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, WSD_EVENTING_EXPIRES *, WSDXML_ELEMENT *, WSD_EVENTING_EXPIRES * *, WSDXML_ELEMENT * *);
    HRESULT (* BeginRenewMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, WSD_EVENTING_EXPIRES *, WSDXML_ELEMENT *, struct IUnknown *, struct IWSDAsyncCallback *, struct IWSDAsyncResult * *);
    HRESULT (* EndRenewMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, struct IWSDAsyncResult *, WSD_EVENTING_EXPIRES * *, WSDXML_ELEMENT * *);
    HRESULT (* GetStatusForMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, WSDXML_ELEMENT *, WSD_EVENTING_EXPIRES * *, WSDXML_ELEMENT * *);
    HRESULT (* BeginGetStatusForMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, WSDXML_ELEMENT *, struct IUnknown *, struct IWSDAsyncCallback *, struct IWSDAsyncResult * *);
    HRESULT (* EndGetStatusForMultipleOperations)(struct IWSDServiceProxyEventing *, WSD_OPERATION *, DWORD, struct IWSDAsyncResult *, WSD_EVENTING_EXPIRES * *, WSDXML_ELEMENT * *);
};

struct IWSDServiceProxyEventing {
    struct IWSDServiceProxyEventingVtbl * lpVtbl;
};

struct _WSD_DURATION {
    BOOL isPositive;
    ULONG year;
    ULONG month;
    ULONG day;
    ULONG hour;
    ULONG minute;
    ULONG second;
    ULONG millisecond;
};

typedef struct IWSDiscoveredService IWSDiscoveredService, *PIWSDiscoveredService;

typedef struct IWSDiscoveredServiceVtbl IWSDiscoveredServiceVtbl, *PIWSDiscoveredServiceVtbl;

typedef struct _WSD_URI_LIST _WSD_URI_LIST, *P_WSD_URI_LIST;

typedef struct _WSD_URI_LIST WSD_URI_LIST;

struct IWSDiscoveredService {
    struct IWSDiscoveredServiceVtbl * lpVtbl;
};

struct IWSDiscoveredServiceVtbl {
    HRESULT (* QueryInterface)(struct IWSDiscoveredService *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDiscoveredService *);
    ULONG (* Release)(struct IWSDiscoveredService *);
    HRESULT (* GetEndpointReference)(struct IWSDiscoveredService *, WSD_ENDPOINT_REFERENCE * *);
    HRESULT (* GetTypes)(struct IWSDiscoveredService *, WSD_NAME_LIST * *);
    HRESULT (* GetScopes)(struct IWSDiscoveredService *, WSD_URI_LIST * *);
    HRESULT (* GetXAddrs)(struct IWSDiscoveredService *, WSD_URI_LIST * *);
    HRESULT (* GetMetadataVersion)(struct IWSDiscoveredService *, ULONGLONG *);
    HRESULT (* GetExtendedDiscoXML)(struct IWSDiscoveredService *, WSDXML_ELEMENT * *, WSDXML_ELEMENT * *);
    HRESULT (* GetProbeResolveTag)(struct IWSDiscoveredService *, LPCWSTR *);
    HRESULT (* GetRemoteTransportAddress)(struct IWSDiscoveredService *, LPCWSTR *);
    HRESULT (* GetLocalTransportAddress)(struct IWSDiscoveredService *, LPCWSTR *);
    HRESULT (* GetLocalInterfaceGUID)(struct IWSDiscoveredService *, GUID *);
    HRESULT (* GetInstanceId)(struct IWSDiscoveredService *, ULONGLONG *);
};

struct _WSD_URI_LIST {
    WSD_URI_LIST * Next;
    WCHAR * Element;
};

typedef struct IWSDiscoveryProvider IWSDiscoveryProvider, *PIWSDiscoveryProvider;

typedef struct IWSDiscoveryProviderVtbl IWSDiscoveryProviderVtbl, *PIWSDiscoveryProviderVtbl;

typedef struct IWSDiscoveryProviderNotify IWSDiscoveryProviderNotify, *PIWSDiscoveryProviderNotify;

typedef struct IWSDiscoveryProviderNotifyVtbl IWSDiscoveryProviderNotifyVtbl, *PIWSDiscoveryProviderNotifyVtbl;

struct IWSDiscoveryProviderNotify {
    struct IWSDiscoveryProviderNotifyVtbl * lpVtbl;
};

struct IWSDiscoveryProvider {
    struct IWSDiscoveryProviderVtbl * lpVtbl;
};

struct IWSDiscoveryProviderVtbl {
    HRESULT (* QueryInterface)(struct IWSDiscoveryProvider *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDiscoveryProvider *);
    ULONG (* Release)(struct IWSDiscoveryProvider *);
    HRESULT (* SetAddressFamily)(struct IWSDiscoveryProvider *, DWORD);
    HRESULT (* Attach)(struct IWSDiscoveryProvider *, struct IWSDiscoveryProviderNotify *);
    HRESULT (* Detach)(struct IWSDiscoveryProvider *);
    HRESULT (* SearchById)(struct IWSDiscoveryProvider *, LPCWSTR, LPCWSTR);
    HRESULT (* SearchByAddress)(struct IWSDiscoveryProvider *, LPCWSTR, LPCWSTR);
    HRESULT (* SearchByType)(struct IWSDiscoveryProvider *, WSD_NAME_LIST *, WSD_URI_LIST *, LPCWSTR, LPCWSTR);
    HRESULT (* GetXMLContext)(struct IWSDiscoveryProvider *, struct IWSDXMLContext * *);
};

struct IWSDiscoveryProviderNotifyVtbl {
    HRESULT (* QueryInterface)(struct IWSDiscoveryProviderNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDiscoveryProviderNotify *);
    ULONG (* Release)(struct IWSDiscoveryProviderNotify *);
    HRESULT (* Add)(struct IWSDiscoveryProviderNotify *, struct IWSDiscoveredService *);
    HRESULT (* Remove)(struct IWSDiscoveryProviderNotify *, struct IWSDiscoveredService *);
    HRESULT (* SearchFailed)(struct IWSDiscoveryProviderNotify *, HRESULT, LPCWSTR);
    HRESULT (* SearchComplete)(struct IWSDiscoveryProviderNotify *, LPCWSTR);
};

typedef struct IWSDiscoveryPublisher IWSDiscoveryPublisher, *PIWSDiscoveryPublisher;

typedef struct IWSDiscoveryPublisherVtbl IWSDiscoveryPublisherVtbl, *PIWSDiscoveryPublisherVtbl;

typedef struct IWSDiscoveryPublisherNotify IWSDiscoveryPublisherNotify, *PIWSDiscoveryPublisherNotify;

typedef struct IWSDScopeMatchingRule IWSDScopeMatchingRule, *PIWSDScopeMatchingRule;

typedef struct IWSDiscoveryPublisherNotifyVtbl IWSDiscoveryPublisherNotifyVtbl, *PIWSDiscoveryPublisherNotifyVtbl;

typedef struct IWSDScopeMatchingRuleVtbl IWSDScopeMatchingRuleVtbl, *PIWSDScopeMatchingRuleVtbl;

struct IWSDiscoveryPublisherVtbl {
    HRESULT (* QueryInterface)(struct IWSDiscoveryPublisher *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDiscoveryPublisher *);
    ULONG (* Release)(struct IWSDiscoveryPublisher *);
    HRESULT (* SetAddressFamily)(struct IWSDiscoveryPublisher *, DWORD);
    HRESULT (* RegisterNotificationSink)(struct IWSDiscoveryPublisher *, struct IWSDiscoveryPublisherNotify *);
    HRESULT (* UnRegisterNotificationSink)(struct IWSDiscoveryPublisher *, struct IWSDiscoveryPublisherNotify *);
    HRESULT (* Publish)(struct IWSDiscoveryPublisher *, LPCWSTR, ULONGLONG, ULONGLONG, ULONGLONG, LPCWSTR, WSD_NAME_LIST *, WSD_URI_LIST *, WSD_URI_LIST *);
    HRESULT (* UnPublish)(struct IWSDiscoveryPublisher *, LPCWSTR, ULONGLONG, ULONGLONG, LPCWSTR, WSDXML_ELEMENT *);
    HRESULT (* MatchProbe)(struct IWSDiscoveryPublisher *, WSD_SOAP_MESSAGE *, struct IWSDMessageParameters *, LPCWSTR, ULONGLONG, ULONGLONG, ULONGLONG, LPCWSTR, WSD_NAME_LIST *, WSD_URI_LIST *, WSD_URI_LIST *);
    HRESULT (* MatchResolve)(struct IWSDiscoveryPublisher *, WSD_SOAP_MESSAGE *, struct IWSDMessageParameters *, LPCWSTR, ULONGLONG, ULONGLONG, ULONGLONG, LPCWSTR, WSD_NAME_LIST *, WSD_URI_LIST *, WSD_URI_LIST *);
    HRESULT (* PublishEx)(struct IWSDiscoveryPublisher *, LPCWSTR, ULONGLONG, ULONGLONG, ULONGLONG, LPCWSTR, WSD_NAME_LIST *, WSD_URI_LIST *, WSD_URI_LIST *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *);
    HRESULT (* MatchProbeEx)(struct IWSDiscoveryPublisher *, WSD_SOAP_MESSAGE *, struct IWSDMessageParameters *, LPCWSTR, ULONGLONG, ULONGLONG, ULONGLONG, LPCWSTR, WSD_NAME_LIST *, WSD_URI_LIST *, WSD_URI_LIST *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *);
    HRESULT (* MatchResolveEx)(struct IWSDiscoveryPublisher *, WSD_SOAP_MESSAGE *, struct IWSDMessageParameters *, LPCWSTR, ULONGLONG, ULONGLONG, ULONGLONG, LPCWSTR, WSD_NAME_LIST *, WSD_URI_LIST *, WSD_URI_LIST *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *, WSDXML_ELEMENT *);
    HRESULT (* RegisterScopeMatchingRule)(struct IWSDiscoveryPublisher *, struct IWSDScopeMatchingRule *);
    HRESULT (* UnRegisterScopeMatchingRule)(struct IWSDiscoveryPublisher *, struct IWSDScopeMatchingRule *);
    HRESULT (* GetXMLContext)(struct IWSDiscoveryPublisher *, struct IWSDXMLContext * *);
};

struct IWSDScopeMatchingRuleVtbl {
    HRESULT (* QueryInterface)(struct IWSDScopeMatchingRule *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDScopeMatchingRule *);
    ULONG (* Release)(struct IWSDScopeMatchingRule *);
    HRESULT (* GetScopeRule)(struct IWSDScopeMatchingRule *, LPCWSTR *);
    HRESULT (* MatchScopes)(struct IWSDScopeMatchingRule *, LPCWSTR, LPCWSTR, BOOL *);
};

struct IWSDiscoveryPublisherNotifyVtbl {
    HRESULT (* QueryInterface)(struct IWSDiscoveryPublisherNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDiscoveryPublisherNotify *);
    ULONG (* Release)(struct IWSDiscoveryPublisherNotify *);
    HRESULT (* ProbeHandler)(struct IWSDiscoveryPublisherNotify *, WSD_SOAP_MESSAGE *, struct IWSDMessageParameters *);
    HRESULT (* ResolveHandler)(struct IWSDiscoveryPublisherNotify *, WSD_SOAP_MESSAGE *, struct IWSDMessageParameters *);
};

struct IWSDiscoveryPublisher {
    struct IWSDiscoveryPublisherVtbl * lpVtbl;
};

struct IWSDScopeMatchingRule {
    struct IWSDScopeMatchingRuleVtbl * lpVtbl;
};

struct IWSDiscoveryPublisherNotify {
    struct IWSDiscoveryPublisherNotifyVtbl * lpVtbl;
};

typedef struct IWSDDeviceHost IWSDDeviceHost, *PIWSDDeviceHost;

typedef struct IWSDDeviceHostVtbl IWSDDeviceHostVtbl, *PIWSDDeviceHostVtbl;

typedef struct IWSDDeviceHostNotify IWSDDeviceHostNotify, *PIWSDDeviceHostNotify;

typedef struct _WSD_PORT_TYPE _WSD_PORT_TYPE, *P_WSD_PORT_TYPE;

typedef struct _WSD_PORT_TYPE WSD_PORT_TYPE;

typedef struct IWSDDeviceHostNotifyVtbl IWSDDeviceHostNotifyVtbl, *PIWSDDeviceHostNotifyVtbl;

typedef enum _WSD_PROTOCOL_TYPE {
    WSD_PT_ALL=255,
    WSD_PT_HTTP=2,
    WSD_PT_HTTPS=4,
    WSD_PT_NONE=0,
    WSD_PT_UDP=1
} _WSD_PROTOCOL_TYPE;

typedef enum _WSD_PROTOCOL_TYPE WSD_PROTOCOL_TYPE;

struct IWSDDeviceHost {
    struct IWSDDeviceHostVtbl * lpVtbl;
};

struct IWSDDeviceHostNotify {
    struct IWSDDeviceHostNotifyVtbl * lpVtbl;
};

struct _WSD_PORT_TYPE {
    DWORD EncodedName;
    DWORD OperationCount;
    WSD_OPERATION * Operations;
    WSD_PROTOCOL_TYPE ProtocolType;
};

struct IWSDDeviceHostNotifyVtbl {
    HRESULT (* QueryInterface)(struct IWSDDeviceHostNotify *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDDeviceHostNotify *);
    ULONG (* Release)(struct IWSDDeviceHostNotify *);
    HRESULT (* GetServiceA)(struct IWSDDeviceHostNotify *, LPCWSTR, struct IUnknown * *);
};

struct IWSDDeviceHostVtbl {
    HRESULT (* QueryInterface)(struct IWSDDeviceHost *, IID *, void * *);
    ULONG (* AddRef)(struct IWSDDeviceHost *);
    ULONG (* Release)(struct IWSDDeviceHost *);
    HRESULT (* Init)(struct IWSDDeviceHost *, LPCWSTR, struct IWSDXMLContext *, struct IWSDAddress * *, DWORD);
    HRESULT (* Start)(struct IWSDDeviceHost *, ULONGLONG, WSD_URI_LIST *, struct IWSDDeviceHostNotify *);
    HRESULT (* Stop)(struct IWSDDeviceHost *);
    HRESULT (* Terminate)(struct IWSDDeviceHost *);
    HRESULT (* RegisterPortType)(struct IWSDDeviceHost *, WSD_PORT_TYPE *);
    HRESULT (* SetMetadata)(struct IWSDDeviceHost *, WSD_THIS_MODEL_METADATA *, WSD_THIS_DEVICE_METADATA *, WSD_HOST_METADATA *, WSD_METADATA_SECTION_LIST *);
    HRESULT (* RegisterService)(struct IWSDDeviceHost *, LPCWSTR, struct IUnknown *);
    HRESULT (* RetireService)(struct IWSDDeviceHost *, LPCWSTR);
    HRESULT (* AddDynamicService)(struct IWSDDeviceHost *, LPCWSTR, LPCWSTR, WSD_PORT_TYPE *, WSDXML_NAME *, WSDXML_ELEMENT *, struct IUnknown *);
    HRESULT (* RemoveDynamicService)(struct IWSDDeviceHost *, LPCWSTR);
    HRESULT (* SetServiceDiscoverable)(struct IWSDDeviceHost *, LPCWSTR, BOOL);
    HRESULT (* SignalEvent)(struct IWSDDeviceHost *, LPCWSTR, void *, WSD_OPERATION *);
};

#define DPP_AppSequence 524299

#define DPP_Bye 524289

#define DPP_DiscoveryProxy 524305

#define DPP_Element 524307

#define DPP_Hello 524288

#define DPP_Id 524309

#define DPP_InstanceId 524300

#define DPP_KeyId 524313

#define DPP_MatchBy 524303

#define DPP_MessageNumber 524302

#define DPP_MetadataVersion 524297

#define DPP_Probe 524290

#define DPP_ProbeMatch 524292

#define DPP_ProbeMatches 524291

#define DPP_Refs 524314

#define DPP_Resolve 524293

#define DPP_ResolveMatch 524294

#define DPP_ResolveMatches 524308

#define DPP_Scheme 524312

#define DPP_Scopes 524296

#define DPP_Security 524310

#define DPP_SequenceId 524301

#define DPP_Sig 524311

#define DPP_TargetService 524306

#define DPP_Transport 524298

#define DPP_Types 524295

#define DPP_XAddrs 524304

#define NAMESPACE_ENCODING_ADDRESSING 1

#define NAMESPACE_ENCODING_DEVPROF 5

#define NAMESPACE_ENCODING_DISCOVERY 2

#define NAMESPACE_ENCODING_DISCOVERY11 8

#define NAMESPACE_ENCODING_ENVELOPE 7

#define NAMESPACE_ENCODING_EVENTING 0

#define NAMESPACE_ENCODING_INCLUDE 3

#define NAMESPACE_ENCODING_MEX 6

#define NAMESPACE_ENCODING_XML 4

#define SOAP_Actor 458757

#define SOAP_Body 458754

#define SOAP_Code 458759

#define SOAP_DataEncodingUnknown 458772

#define SOAP_Detail 458766

#define SOAP_Element 458775

#define SOAP_Envelope 458752

#define SOAP_Fault 458758

#define SOAP_Header 458753

#define SOAP_MustUnderstand 458755

#define SOAP_MustUnderstand_1 458771

#define SOAP_Node 458764

#define SOAP_NotUnderstood 458769

#define SOAP_Reason 458762

#define SOAP_Receiver 458774

#define SOAP_Relay 458776

#define SOAP_Role 458756

#define SOAP_Role_1 458765

#define SOAP_Sender 458773

#define SOAP_Subcode 458760

#define SOAP_SupportedEnvelope 458768

#define SOAP_Text 458763

#define SOAP_Upgrade 458767

#define SOAP_Value 458761

#define SOAP_VersionMismatch 458770

#define WSA_Action 65550

#define WSA_ActionNotSupported 65555

#define WSA_Address 65537

#define WSA_DestinationUnreachable 65554

#define WSA_Element 65558

#define WSA_EndpointReference 65536

#define WSA_EndpointUnavailable 65556

#define WSA_FaultTo 65548

#define WSA_From 65547

#define WSA_InvalidMessageInformationHeader 65552

#define WSA_MessageID 65542

#define WSA_MessageInformationHeaderRequired 65553

#define WSA_PortName 65541

#define WSA_PortType 65539

#define WSA_Recipient 65551

#define WSA_ReferenceParameters 65538

#define WSA_ReferenceProperties 65557

#define WSA_RelatesTo 65543

#define WSA_RelationshipType 65544

#define WSA_Reply 65545

#define WSA_ReplyAfter 65560

#define WSA_ReplyTo 65546

#define WSA_RetryAfter 65559

#define WSA_ServiceName 65540

#define WSA_To 65549

#define WSD_Actions 327682

#define WSD_Data 327701

#define WSD_Device 327680

#define WSD_Element 327683

#define WSD_FilterActionNotSupported 327681

#define WSD_FirmwareVersion 327693

#define WSD_FriendlyName 327692

#define WSD_Host 327697

#define WSD_Hosted 327698

#define WSD_Manufacturer 327685

#define WSD_ManufacturerUrl 327686

#define WSD_ModelName 327687

#define WSD_ModelNumber 327688

#define WSD_ModelUrl 327689

#define WSD_PresentationUrl 327690

#define WSD_Relationship 327699

#define WSD_SerialNumber 327694

#define WSD_ServiceId 327696

#define WSD_ThisDevice 327691

#define WSD_ThisModel 327684

#define WSD_Type 327700

#define WSD_Types 327695

#define WSDISCO_AppSequence 131083

#define WSDISCO_Bye 131073

#define WSDISCO_DiscoveryProxy 131089

#define WSDISCO_Element 131091

#define WSDISCO_Hello 131072

#define WSDISCO_Id 131093

#define WSDISCO_InstanceId 131084

#define WSDISCO_KeyId 131097

#define WSDISCO_MatchBy 131087

#define WSDISCO_MessageNumber 131086

#define WSDISCO_MetadataVersion 131081

#define WSDISCO_Probe 131074

#define WSDISCO_ProbeMatch 131076

#define WSDISCO_ProbeMatches 131075

#define WSDISCO_Refs 131098

#define WSDISCO_Resolve 131077

#define WSDISCO_ResolveMatch 131078

#define WSDISCO_ResolveMatches 131092

#define WSDISCO_Scheme 131096

#define WSDISCO_Scopes 131080

#define WSDISCO_Security 131094

#define WSDISCO_SequenceId 131085

#define WSDISCO_Sig 131095

#define WSDISCO_TargetService 131090

#define WSDISCO_Transport 131082

#define WSDISCO_Types 131079

#define WSDISCO_XAddrs 131088

#define WSE_Any 27

#define WSE_Any_1 29

#define WSE_Data 19

#define WSE_DateTime 22

#define WSE_Delivery 20

#define WSE_DeliveryModeRequestedUnavailable 1

#define WSE_Dialect 24

#define WSE_Duration 21

#define WSE_EndTo 15

#define WSE_Eventing 11

#define WSE_EventSink 36

#define WSE_EventSourceUnableToProcess 6

#define WSE_Expires 23

#define WSE_Filter 26

#define WSE_FilterAction 25

#define WSE_FilteringNotSupported 4

#define WSE_FilteringRequestedUnavailable 5

#define WSE_GetStatus 32

#define WSE_GetStatusResponse 33

#define WSE_Identifier 0

#define WSE_InvalidExpirationTime 2

#define WSE_InvalidMessage 8

#define WSE_Mode 16

#define WSE_NotifyTo 18

#define WSE_Push 17

#define WSE_Reason 40

#define WSE_Renew 30

#define WSE_RenewResponse 31

#define WSE_ReturnValue 14

#define WSE_Status 38

#define WSE_String 39

#define WSE_Subscribe 12

#define WSE_SubscribeResponse 13

#define WSE_SubscriptionEnd 37

#define WSE_SubscriptionManager 28

#define WSE_SupportedDeliveryMode 10

#define WSE_SupportedDialect 9

#define WSE_UnableToRenew 7

#define WSE_Unsubscribe 34

#define WSE_UnsubscribeResponse 35

#define WSE_UnsupportedExpirationTime 3

#define WSX_Data 393223

#define WSX_Dialect 393221

#define WSX_Element 393226

#define WSX_GetMetadata 393217

#define WSX_GetMetadataResponse 393218

#define WSX_Identifier 393222

#define WSX_Location 393225

#define WSX_Metadata 393227

#define WSX_MetadataReference 393224

#define WSX_MetadataSection 393220

#define WSX_Mex 393216

#define WSX_ReturnValue 393219

#define XML_Lang 262144

#define XML_Space 262145

#define XOP_Href 196609

#define XOP_Include 196608

#define TYPE_ENCODING_WSD11_BYE 38

#define TYPE_ENCODING_WSD11_HELLO 39

#define TYPE_ENCODING_WSD11_PROBE 37

#define TYPE_ENCODING_WSD11_PROBE_MATCH 35

#define TYPE_ENCODING_WSD11_PROBE_MATCHES 36

#define TYPE_ENCODING_WSD11_RESOLVE 34

#define TYPE_ENCODING_WSD11_RESOLVE_MATCH 32

#define TYPE_ENCODING_WSD11_RESOLVE_MATCHES 33

#define TYPE_ENCODING_WSD_APP_SEQUENCE 9

#define TYPE_ENCODING_WSD_BYE 19

#define TYPE_ENCODING_WSD_ENDPOINT_REFERENCE 24

#define TYPE_ENCODING_WSD_EVENTING_DELIVERY_MODE 30

#define TYPE_ENCODING_WSD_EVENTING_DELIVERY_MODE_PUSH 29

#define TYPE_ENCODING_WSD_EVENTING_EXPIRES 28

#define TYPE_ENCODING_WSD_EVENTING_FILTER 27

#define TYPE_ENCODING_WSD_EVENTING_FILTER_ACTION 26

#define TYPE_ENCODING_WSD_HEADER_RELATESTO 10

#define TYPE_ENCODING_WSD_HELLO 21

#define TYPE_ENCODING_WSD_HOST_METADATA 1

#define TYPE_ENCODING_WSD_LOCALIZED_STRING 31

#define TYPE_ENCODING_WSD_METADATA_SECTION 25

#define TYPE_ENCODING_WSD_PROBE 18

#define TYPE_ENCODING_WSD_PROBE_MATCH 16

#define TYPE_ENCODING_WSD_PROBE_MATCHES 17

#define TYPE_ENCODING_WSD_REFERENCE_PARAMETERS 22

#define TYPE_ENCODING_WSD_REFERENCE_PROPERTIES 23

#define TYPE_ENCODING_WSD_RELATIONSHIP_METADATA 0

#define TYPE_ENCODING_WSD_RESOLVE 15

#define TYPE_ENCODING_WSD_RESOLVE_MATCH 14

#define TYPE_ENCODING_WSD_RESOLVE_MATCHES 13

#define TYPE_ENCODING_WSD_SCOPES 20

#define TYPE_ENCODING_WSD_SERVICE_METADATA 2

#define TYPE_ENCODING_WSD_SOAP_FAULT 8

#define TYPE_ENCODING_WSD_SOAP_FAULT_CODE 7

#define TYPE_ENCODING_WSD_SOAP_FAULT_REASON 5

#define TYPE_ENCODING_WSD_SOAP_FAULT_SUBCODE 6

#define TYPE_ENCODING_WSD_SOAP_HEADER 11

#define TYPE_ENCODING_WSD_SOAP_MESSAGE 12

#define TYPE_ENCODING_WSD_THIS_DEVICE_METADATA 3

#define TYPE_ENCODING_WSD_THIS_MODEL_METADATA 4

typedef struct _WSD_BYE _WSD_BYE, *P_WSD_BYE;

struct _WSD_BYE {
    WSD_ENDPOINT_REFERENCE * EndpointReference;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_EVENTING_DELIVERY_MODE _WSD_EVENTING_DELIVERY_MODE, *P_WSD_EVENTING_DELIVERY_MODE;

typedef struct _WSD_EVENTING_DELIVERY_MODE_PUSH _WSD_EVENTING_DELIVERY_MODE_PUSH, *P_WSD_EVENTING_DELIVERY_MODE_PUSH;

typedef struct _WSD_EVENTING_DELIVERY_MODE_PUSH WSD_EVENTING_DELIVERY_MODE_PUSH;

struct _WSD_EVENTING_DELIVERY_MODE {
    WCHAR * Mode;
    WSD_EVENTING_DELIVERY_MODE_PUSH * Push;
    void * Data;
};

struct _WSD_EVENTING_DELIVERY_MODE_PUSH {
    WSD_ENDPOINT_REFERENCE * NotifyTo;
};

typedef struct _WSD_EVENTING_FILTER _WSD_EVENTING_FILTER, *P_WSD_EVENTING_FILTER;

typedef struct _WSD_EVENTING_FILTER_ACTION _WSD_EVENTING_FILTER_ACTION, *P_WSD_EVENTING_FILTER_ACTION;

typedef struct _WSD_EVENTING_FILTER_ACTION WSD_EVENTING_FILTER_ACTION;

struct _WSD_EVENTING_FILTER {
    WCHAR * Dialect;
    WSD_EVENTING_FILTER_ACTION * FilterAction;
    void * Data;
};

struct _WSD_EVENTING_FILTER_ACTION {
    WSD_URI_LIST * Actions;
};

typedef struct _WSD_HELLO _WSD_HELLO, *P_WSD_HELLO;

typedef struct _WSD_SCOPES _WSD_SCOPES, *P_WSD_SCOPES;

typedef struct _WSD_SCOPES WSD_SCOPES;

struct _WSD_HELLO {
    WSD_ENDPOINT_REFERENCE * EndpointReference;
    WSD_NAME_LIST * Types;
    WSD_SCOPES * Scopes;
    WSD_URI_LIST * XAddrs;
    ULONGLONG MetadataVersion;
    WSDXML_ELEMENT * Any;
};

struct _WSD_SCOPES {
    WCHAR * MatchBy;
    WSD_URI_LIST * Scopes;
};

typedef struct _WSD_PROBE _WSD_PROBE, *P_WSD_PROBE;

struct _WSD_PROBE {
    WSD_NAME_LIST * Types;
    WSD_SCOPES * Scopes;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_PROBE_MATCH _WSD_PROBE_MATCH, *P_WSD_PROBE_MATCH;

struct _WSD_PROBE_MATCH {
    WSD_ENDPOINT_REFERENCE * EndpointReference;
    WSD_NAME_LIST * Types;
    WSD_SCOPES * Scopes;
    WSD_URI_LIST * XAddrs;
    ULONGLONG MetadataVersion;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_PROBE_MATCH_LIST _WSD_PROBE_MATCH_LIST, *P_WSD_PROBE_MATCH_LIST;

typedef struct _WSD_PROBE_MATCH_LIST WSD_PROBE_MATCH_LIST;

typedef struct _WSD_PROBE_MATCH WSD_PROBE_MATCH;

struct _WSD_PROBE_MATCH_LIST {
    WSD_PROBE_MATCH_LIST * Next;
    WSD_PROBE_MATCH * Element;
};

typedef struct _WSD_PROBE_MATCHES _WSD_PROBE_MATCHES, *P_WSD_PROBE_MATCHES;

struct _WSD_PROBE_MATCHES {
    WSD_PROBE_MATCH_LIST * ProbeMatch;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_RELATIONSHIP_METADATA _WSD_RELATIONSHIP_METADATA, *P_WSD_RELATIONSHIP_METADATA;

struct _WSD_RELATIONSHIP_METADATA {
    WCHAR * Type;
    WSD_HOST_METADATA * Data;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_RESOLVE _WSD_RESOLVE, *P_WSD_RESOLVE;

struct _WSD_RESOLVE {
    WSD_ENDPOINT_REFERENCE * EndpointReference;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_RESOLVE_MATCH _WSD_RESOLVE_MATCH, *P_WSD_RESOLVE_MATCH;

struct _WSD_RESOLVE_MATCH {
    WSD_ENDPOINT_REFERENCE * EndpointReference;
    WSD_NAME_LIST * Types;
    WSD_SCOPES * Scopes;
    WSD_URI_LIST * XAddrs;
    ULONGLONG MetadataVersion;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_RESOLVE_MATCHES _WSD_RESOLVE_MATCHES, *P_WSD_RESOLVE_MATCHES;

typedef struct _WSD_RESOLVE_MATCH WSD_RESOLVE_MATCH;

struct _WSD_RESOLVE_MATCHES {
    WSD_RESOLVE_MATCH * ResolveMatch;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_UNKNOWN_LOOKUP _WSD_UNKNOWN_LOOKUP, *P_WSD_UNKNOWN_LOOKUP;

struct _WSD_UNKNOWN_LOOKUP {
    WSDXML_ELEMENT * Any;
};

typedef enum _WSDEventType {
    WSDET_INCOMING_FAULT=2,
    WSDET_INCOMING_MESSAGE=1,
    WSDET_NONE=0,
    WSDET_RESPONSE_TIMEOUT=4,
    WSDET_TRANSMISSION_FAILURE=3
} _WSDEventType;

typedef struct REQUESTBODY_GetStatus REQUESTBODY_GetStatus, *PREQUESTBODY_GetStatus;

struct REQUESTBODY_GetStatus {
    WSDXML_ELEMENT * Any;
};

typedef struct REQUESTBODY_Renew REQUESTBODY_Renew, *PREQUESTBODY_Renew;

struct REQUESTBODY_Renew {
    WSD_EVENTING_EXPIRES * Expires;
    WSDXML_ELEMENT * Any;
};

typedef struct REQUESTBODY_Subscribe REQUESTBODY_Subscribe, *PREQUESTBODY_Subscribe;

typedef struct _WSD_EVENTING_DELIVERY_MODE WSD_EVENTING_DELIVERY_MODE;

typedef struct _WSD_EVENTING_FILTER WSD_EVENTING_FILTER;

struct REQUESTBODY_Subscribe {
    WSD_ENDPOINT_REFERENCE * EndTo;
    WSD_EVENTING_DELIVERY_MODE * Delivery;
    WSD_EVENTING_EXPIRES * Expires;
    WSD_EVENTING_FILTER * Filter;
    WSDXML_ELEMENT * Any;
};

typedef struct REQUESTBODY_Unsubscribe REQUESTBODY_Unsubscribe, *PREQUESTBODY_Unsubscribe;

struct REQUESTBODY_Unsubscribe {
    WSDXML_ELEMENT * any;
};

typedef struct RESPONSEBODY_GetMetadata RESPONSEBODY_GetMetadata, *PRESPONSEBODY_GetMetadata;

struct RESPONSEBODY_GetMetadata {
    WSD_METADATA_SECTION_LIST * Metadata;
};

typedef struct RESPONSEBODY_GetStatus RESPONSEBODY_GetStatus, *PRESPONSEBODY_GetStatus;

struct RESPONSEBODY_GetStatus {
    WSD_EVENTING_EXPIRES * expires;
    WSDXML_ELEMENT * any;
};

typedef struct RESPONSEBODY_Renew RESPONSEBODY_Renew, *PRESPONSEBODY_Renew;

struct RESPONSEBODY_Renew {
    WSD_EVENTING_EXPIRES * expires;
    WSDXML_ELEMENT * any;
};

typedef struct RESPONSEBODY_Subscribe RESPONSEBODY_Subscribe, *PRESPONSEBODY_Subscribe;

struct RESPONSEBODY_Subscribe {
    WSD_ENDPOINT_REFERENCE * SubscriptionManager;
    WSD_EVENTING_EXPIRES * expires;
    WSDXML_ELEMENT * any;
};

typedef struct RESPONSEBODY_SubscriptionEnd RESPONSEBODY_SubscriptionEnd, *PRESPONSEBODY_SubscriptionEnd;

struct RESPONSEBODY_SubscriptionEnd {
    WSD_ENDPOINT_REFERENCE * SubscriptionManager;
    WCHAR * Status;
    WSD_LOCALIZED_STRING * Reason;
    WSDXML_ELEMENT * Any;
};

typedef struct _WSD_BYE WSD_BYE;

typedef struct _WSD_HELLO WSD_HELLO;

typedef struct _WSD_PROBE WSD_PROBE;

typedef struct _WSD_PROBE_MATCHES WSD_PROBE_MATCHES;

typedef struct _WSD_RELATIONSHIP_METADATA WSD_RELATIONSHIP_METADATA;

typedef struct _WSD_RESOLVE WSD_RESOLVE;

typedef struct _WSD_RESOLVE_MATCHES WSD_RESOLVE_MATCHES;

typedef struct _WSD_UNKNOWN_LOOKUP WSD_UNKNOWN_LOOKUP;

typedef enum _WSDEventType WSDEventType;

#define WSDAPI_OPTION_MAX_INBOUND_MESSAGE_SIZE 1

#define WSDAPI_OPTION_TRACE_XML_TO_DEBUGGER 2

#define WSDAPI_OPTION_TRACE_XML_TO_FILE 3

typedef enum __MIDL___MIDL_itf_wsdxml_0000_0000_0001 {
    OpAnyElement=6,
    OpAnyElements=7,
    OpAnyNumber=17,
    OpAnyText=8,
    OpAnything=16,
    OpAttribute_=9,
    OpBeginAll=14,
    OpBeginAnyElement=3,
    OpBeginChoice=10,
    OpBeginElement_=2,
    OpBeginSequence=12,
    OpElement_=5,
    OpEndAll=15,
    OpEndChoice=11,
    OpEndElement=4,
    OpEndOfTable=1,
    OpEndSequence=13,
    OpFormatBool_=20,
    OpFormatDateTime_=40,
    OpFormatDom_=30,
    OpFormatDouble_=42,
    OpFormatDuration_=39,
    OpFormatDynamicType_=37,
    OpFormatFloat_=41,
    OpFormatInt16_=22,
    OpFormatInt32_=23,
    OpFormatInt64_=24,
    OpFormatInt8_=21,
    OpFormatListInsertTail_=35,
    OpFormatLookupType_=38,
    OpFormatMax=46,
    OpFormatName_=34,
    OpFormatStruct_=31,
    OpFormatType_=36,
    OpFormatUInt16_=26,
    OpFormatUInt32_=27,
    OpFormatUInt64_=28,
    OpFormatUInt8_=25,
    OpFormatUnicodeString_=29,
    OpFormatUri_=32,
    OpFormatUuidUri_=33,
    OpFormatXMLDeclaration_=45,
    OpNone=0,
    OpOneOrMore=18,
    OpOptional=19,
    OpProcess_=43,
    OpQualifiedAttribute_=44
} __MIDL___MIDL_itf_wsdxml_0000_0000_0001;

typedef struct _WSDXML_ELEMENT_LIST _WSDXML_ELEMENT_LIST, *P_WSDXML_ELEMENT_LIST;

typedef struct _WSDXML_ELEMENT_LIST WSDXML_ELEMENT_LIST;

struct _WSDXML_ELEMENT_LIST {
    WSDXML_ELEMENT_LIST * Next;
    WSDXML_ELEMENT * Element;
};

typedef struct _WSDXML_TEXT _WSDXML_TEXT, *P_WSDXML_TEXT;

struct _WSDXML_TEXT {
    WSDXML_NODE Node;
    WCHAR * Text;
};

typedef struct _WSDXML_TEXT WSDXML_TEXT;

#define __REQUIRED_RPCNDR_H_VERSION__ 500

#define __REQUIRED_RPCSAL_H_VERSION__ 100

#define APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP 1

#define APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY 4

#define APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND 2

#define DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL 2

#define DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES 1

#define DCOMSCM_PING_DISALLOW_UNSECURE_CALL 32

#define DCOMSCM_PING_USE_MID_AUTHNSERVICE 16

#define DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL 8

#define DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES 4

#define DECIMAL_NEG 128

#define ROT_COMPARE_MAX 2048

#define ROTFLAGS_ALLOWANYCLIENT 2

#define ROTFLAGS_REGISTRATIONKEEPSALIVE 1

#define ROTREGFLAGS_ALLOWANYCLIENT 1

#define VARIANT_FALSE 0

#define VARIANT_TRUE -1

#define WDT_INPROC64_CALL 1349805143

#define WDT_INPROC_CALL 1215587415

#define WDT_REMOTE_CALL 1383359575

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 __MIDL___MIDL_itf_wtypes_0000_0001_0001, *P__MIDL___MIDL_itf_wtypes_0000_0001_0001;

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0005 __MIDL___MIDL_itf_wtypes_0000_0001_0005, *P__MIDL___MIDL_itf_wtypes_0000_0001_0005;

typedef struct _struct_1709 _struct_1709, *P_struct_1709;

typedef struct _struct_1710 _struct_1710, *P_struct_1710;

struct _struct_1710 {
    GUID ObjectId;
    GUID PolicyId;
};

struct _struct_1709 {
    LPOLESTR pPackageName;
    GUID PolicyId;
};

union __MIDL___MIDL_itf_wtypes_0000_0001_0005 {
    CLSID clsid;
    LPOLESTR pFileExt;
    LPOLESTR pMimeType;
    LPOLESTR pProgId;
    LPOLESTR pFileName;
    struct _struct_1709 ByName;
    struct _struct_1710 ByObjectId;
};

struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 {
    DWORD tyspec;
    union __MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
};

typedef union __MIDL_IWinTypes_0001 __MIDL_IWinTypes_0001, *P__MIDL_IWinTypes_0001;

union __MIDL_IWinTypes_0001 {
    DWORD dwValue;
    wchar_t * pwszName;
};

typedef union __MIDL_IWinTypes_0002 __MIDL_IWinTypes_0002, *P__MIDL_IWinTypes_0002;

typedef struct _DWORD_BLOB _DWORD_BLOB, *P_DWORD_BLOB;

typedef struct _DWORD_BLOB DWORD_BLOB;

struct _DWORD_BLOB {
    ulong clSize;
    ulong alData[1];
};

union __MIDL_IWinTypes_0002 {
    long hInproc;
    DWORD_BLOB * hRemote;
};

typedef union __MIDL_IWinTypes_0009 __MIDL_IWinTypes_0009, *P__MIDL_IWinTypes_0009;

union __MIDL_IWinTypes_0009 {
    long hInproc;
    long hRemote;
};

typedef struct _GDI_NONREMOTE _GDI_NONREMOTE, *P_GDI_NONREMOTE;

struct _GDI_NONREMOTE {
    long fContext;
    union __MIDL_IWinTypes_0002 u;
};

typedef struct _RemotableHandle _RemotableHandle, *P_RemotableHandle;

struct _RemotableHandle {
    long fContext;
    union __MIDL_IWinTypes_0009 u;
};

typedef struct _userCLIPFORMAT _userCLIPFORMAT, *P_userCLIPFORMAT;

struct _userCLIPFORMAT {
    long fContext;
    union __MIDL_IWinTypes_0001 u;
};

typedef struct _WORD_BLOB _WORD_BLOB, *P_WORD_BLOB;

struct _WORD_BLOB {
    ulong clSize;
    ushort asData[1];
};

typedef enum tagCLSCTX {
    CLSCTX_ACTIVATE_32_BIT_SERVER=262144,
    CLSCTX_ACTIVATE_64_BIT_SERVER=524288,
    CLSCTX_DISABLE_AAA=32768,
    CLSCTX_ENABLE_AAA=65536,
    CLSCTX_ENABLE_CLOAKING=1048576,
    CLSCTX_ENABLE_CODE_DOWNLOAD=8192,
    CLSCTX_FROM_DEFAULT_CONTEXT=131072,
    CLSCTX_INPROC_HANDLER=2,
    CLSCTX_INPROC_HANDLER16=32,
    CLSCTX_INPROC_SERVER=1,
    CLSCTX_INPROC_SERVER16=8,
    CLSCTX_LOCAL_SERVER=4,
    CLSCTX_NO_CODE_DOWNLOAD=1024,
    CLSCTX_NO_CUSTOM_MARSHAL=4096,
    CLSCTX_NO_FAILURE_LOG=16384,
    CLSCTX_PS_DLL=1048577,
    CLSCTX_REMOTE_SERVER=16,
    CLSCTX_RESERVED1=64,
    CLSCTX_RESERVED2=128,
    CLSCTX_RESERVED3=256,
    CLSCTX_RESERVED4=512,
    CLSCTX_RESERVED5=2048
} tagCLSCTX;

typedef enum tagCLSCTX CLSCTX;

typedef struct tagCSPLATFORM tagCSPLATFORM, *PtagCSPLATFORM;

typedef struct tagCSPLATFORM CSPLATFORM;

struct tagCSPLATFORM {
    DWORD dwPlatformId;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
    DWORD dwProcessorArch;
};

typedef enum tagDVASPECT {
    DVASPECT_CONTENT=1,
    DVASPECT_DOCPRINT=8,
    DVASPECT_ICON=4,
    DVASPECT_THUMBNAIL=2
} tagDVASPECT;

typedef enum tagDVASPECT DVASPECT;

typedef struct _GDI_NONREMOTE GDI_NONREMOTE;

typedef void * HCONTEXT;

typedef struct tagBLOB * LPBLOB;

typedef BSTR * LPBSTR;

typedef struct tagBSTRBLOB * LPBSTRBLOB;

typedef CY * LPCY;

typedef DECIMAL * LPDECIMAL;

typedef enum tagMEMCTX {
    MEMCTX_MACSYSTEM=3,
    MEMCTX_SAME=5,
    MEMCTX_SHARED=2,
    MEMCTX_TASK=1,
    MEMCTX_UNKNOWN=4
} tagMEMCTX;

typedef enum tagMEMCTX MEMCTX;

typedef enum tagMSHCTX {
    MSHCTX_CROSSCTX=4,
    MSHCTX_DIFFERENTMACHINE=2,
    MSHCTX_INPROC=3,
    MSHCTX_LOCAL=0,
    MSHCTX_NOSHAREDMEM=1
} tagMSHCTX;

typedef enum tagMSHCTX MSHCTX;

typedef enum tagMSHLFLAGS {
    MSHLFLAGS_NOPING=4,
    MSHLFLAGS_NORMAL=0,
    MSHLFLAGS_RESERVED1=8,
    MSHLFLAGS_RESERVED2=16,
    MSHLFLAGS_RESERVED3=32,
    MSHLFLAGS_RESERVED4=64,
    MSHLFLAGS_TABLESTRONG=1,
    MSHLFLAGS_TABLEWEAK=2
} tagMSHLFLAGS;

typedef enum tagMSHLFLAGS MSHLFLAGS;

typedef SCODE * PSCODE;

typedef struct tagQUERYCONTEXT tagQUERYCONTEXT, *PtagQUERYCONTEXT;

typedef struct tagQUERYCONTEXT QUERYCONTEXT;

struct tagQUERYCONTEXT {
    DWORD dwContext;
    CSPLATFORM Platform;
    LCID Locale;
    DWORD dwVersionHi;
    DWORD dwVersionLo;
};

typedef struct tagRemHBITMAP tagRemHBITMAP, *PtagRemHBITMAP;

typedef struct tagRemHBITMAP RemHBITMAP;

struct tagRemHBITMAP {
    ulong cbData;
    byte data[1];
};

typedef struct tagRemBRUSH tagRemBRUSH, *PtagRemBRUSH;

typedef struct tagRemBRUSH RemHBRUSH;

struct tagRemBRUSH {
    ulong cbData;
    byte data[1];
};

typedef struct tagRemHENHMETAFILE tagRemHENHMETAFILE, *PtagRemHENHMETAFILE;

typedef struct tagRemHENHMETAFILE RemHENHMETAFILE;

struct tagRemHENHMETAFILE {
    ulong cbData;
    byte data[1];
};

typedef struct tagRemHGLOBAL tagRemHGLOBAL, *PtagRemHGLOBAL;

typedef struct tagRemHGLOBAL RemHGLOBAL;

struct tagRemHGLOBAL {
    long fNullHGlobal;
    ulong cbData;
    byte data[1];
};

typedef struct tagRemHMETAFILEPICT tagRemHMETAFILEPICT, *PtagRemHMETAFILEPICT;

typedef struct tagRemHMETAFILEPICT RemHMETAFILEPICT;

struct tagRemHMETAFILEPICT {
    long mm;
    long xExt;
    long yExt;
    ulong cbData;
    byte data[1];
};

typedef struct tagRemHPALETTE tagRemHPALETTE, *PtagRemHPALETTE;

typedef struct tagRemHPALETTE RemHPALETTE;

struct tagRemHPALETTE {
    ulong cbData;
    byte data[1];
};

typedef struct _RemotableHandle RemotableHandle;

typedef enum tagSTATFLAG {
    STATFLAG_DEFAULT=0,
    STATFLAG_NONAME=1,
    STATFLAG_NOOPEN=2
} tagSTATFLAG;

typedef enum tagSTATFLAG STATFLAG;

typedef enum tagSTGC {
    STGC_CONSOLIDATE=8,
    STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE=4,
    STGC_DEFAULT=0,
    STGC_ONLYIFCURRENT=2,
    STGC_OVERWRITE=1
} tagSTGC;

typedef enum tagSTGC STGC;

typedef enum tagSTGMOVE {
    STGMOVE_COPY=1,
    STGMOVE_MOVE=0,
    STGMOVE_SHALLOWCOPY=2
} tagSTGMOVE;

typedef enum tagSTGMOVE STGMOVE;

typedef enum tagTYSPEC {
    TYSPEC_CLSID=0,
    TYSPEC_FILEEXT=1,
    TYSPEC_FILENAME=3,
    TYSPEC_MIMETYPE=2,
    TYSPEC_OBJECTID=6,
    TYSPEC_PACKAGENAME=5,
    TYSPEC_PROGID=4
} tagTYSPEC;

typedef enum tagTYSPEC TYSPEC;

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001 uCLSSPEC;

typedef BYTE_BLOB * UP_BYTE_BLOB;

typedef DWORD_BLOB * UP_DWORD_BLOB;

typedef FLAGGED_BYTE_BLOB * UP_FLAGGED_BYTE_BLOB;

typedef FLAGGED_WORD_BLOB * UP_FLAGGED_WORD_BLOB;

typedef struct _WORD_BLOB WORD_BLOB;

typedef WORD_BLOB * UP_WORD_BLOB;

typedef struct _userCLIPFORMAT userCLIPFORMAT;

typedef enum VARENUM {
    VT_ARRAY=8192,
    VT_BLOB=65,
    VT_BLOB_OBJECT=70,
    VT_BOOL=11,
    VT_BSTR=8,
    VT_BSTR_BLOB=4095,
    VT_BYREF=16384,
    VT_CARRAY=28,
    VT_CF=71,
    VT_CLSID=72,
    VT_CY=6,
    VT_DATE=7,
    VT_DECIMAL=14,
    VT_DISPATCH=9,
    VT_EMPTY=0,
    VT_ERROR=10,
    VT_FILETIME=64,
    VT_HRESULT=25,
    VT_I1=16,
    VT_I2=2,
    VT_I4=3,
    VT_I8=20,
    VT_ILLEGAL=65535,
    VT_ILLEGALMASKED=4095,
    VT_INT=22,
    VT_INT_PTR=37,
    VT_LPSTR=30,
    VT_LPWSTR=31,
    VT_NULL=1,
    VT_PTR=26,
    VT_R4=4,
    VT_R8=5,
    VT_RECORD=36,
    VT_RESERVED=32768,
    VT_SAFEARRAY=27,
    VT_STORAGE=67,
    VT_STORED_OBJECT=69,
    VT_STREAM=66,
    VT_STREAMED_OBJECT=68,
    VT_TYPEMASK=4095,
    VT_UI1=17,
    VT_UI2=18,
    VT_UI4=19,
    VT_UI8=21,
    VT_UINT=23,
    VT_UINT_PTR=38,
    VT_UNKNOWN=13,
    VT_USERDEFINED=29,
    VT_VARIANT=12,
    VT_VECTOR=4096,
    VT_VERSIONED_STREAM=73,
    VT_VOID=24
} VARENUM;

typedef userCLIPFORMAT * wireCLIPFORMAT;

typedef RemotableHandle * wireHACCEL;

typedef RemotableHandle * wireHBRUSH;

typedef RemotableHandle * wireHDC;

typedef RemotableHandle * wireHFONT;

typedef RemotableHandle * wireHICON;

typedef RemotableHandle * wireHMENU;

typedef userHMETAFILE * wireHMETAFILE;

typedef RemotableHandle * wireHRGN;

typedef RemotableHandle * wireHWND;

#define _BB 32

#define _CN 8

#define _DI 4

#define _LO 2

#define _M_ALL 63

#define _M_COLLATE 1

#define _M_CTYPE 2

#define _M_MESSAGES 32

#define _M_MONETARY 4

#define _M_NUMERIC 8

#define _M_TIME 16

#define _NCAT 7

#define _PU 16

#define _SP 64

#define _UP 1

#define _X_ALL 0

#define _X_COLLATE 1

#define _X_CTYPE 2

#define _X_MAX 5

#define _X_MESSAGES 6

#define _X_MONETARY 3

#define _X_NUMERIC 4

#define _X_TIME 5

#define _XA 256

#define _XB 0

#define _XD 128

#define _XS 0

typedef struct _Collvec _Collvec, *P_Collvec;

struct _Collvec {
    uint _Page;
    wchar_t * _LocaleName;
};

typedef struct _Ctypevec _Ctypevec, *P_Ctypevec;

struct _Ctypevec {
    uint _Page;
    short * _Table;
    int _Delfl;
    wchar_t * _LocaleName;
};

typedef struct _Cvtvec _Cvtvec, *P_Cvtvec;

struct _Cvtvec {
    uint _Page;
    uint _Mbcurmax;
    int _Isclocale;
    uchar _Isleadbyte[32];
};

#define _D0 3

#define _D1 2

#define _D2 1

#define _D3 0

#define _DBIAS 1022

#define _DFRAC 15

#define _Dg 0

#define _DLONG 0

#define _DMASK 32752

#define _DMAX 2047

#define _DOFF 4

#define _DSIGN 32768

#define _F0 1

#define _F1 0

#define _FBIAS 126

#define _FFRAC 127

#define _Fg 0

#define _FMASK 32640

#define _FMAX 255

#define _FOFF 7

#define _FRND 1

#define _FSIGN 32768

#define _L0 3

#define _L1 2

#define _L2 1

#define _L3 0

#define _LBIAS 1022

#define _LFRAC -1

#define _Lg 0

#define _LMASK 32767

#define _LMAX 32767

#define _LOFF 4

#define _LSIGN 32768

#define FHUGE_EXP 229

#define FL_DEC 1

#define FL_ERR 0

#define FL_HEX 2

#define FL_INF 3

#define FL_NAN 4

#define FL_NEG 8

#define FSAFE_EXP 127

#define HUGE_EXP 1842

#define LHUGE_EXP 29490

#define LSAFE_EXP 16383

#define SAFE_EXP 1023

typedef union _Dval _Dval, *P_Dval;

union _Dval {
    ushort _Sh[8];
    double _Val;
};

typedef union _Fval _Fval, *P_Fval;

union _Fval {
    ushort _Sh[8];
    float _Val;
};

typedef union _Lval _Lval, *P_Lval;

union _Lval {
    ushort _Sh[8];
    double _Val;
};

#define _MM_EXCEPT_DENORM 2

#define _MM_EXCEPT_DIV_ZERO 4

#define _MM_EXCEPT_INEXACT 32

#define _MM_EXCEPT_INVALID 1

#define _MM_EXCEPT_MASK 63

#define _MM_EXCEPT_OVERFLOW 8

#define _MM_EXCEPT_UNDERFLOW 16

#define _MM_FLUSH_ZERO_MASK 32768

#define _MM_FLUSH_ZERO_OFF 0

#define _MM_FLUSH_ZERO_ON 32768

#define _MM_HINT_NTA 0

#define _MM_HINT_T0 1

#define _MM_HINT_T1 2

#define _MM_HINT_T2 3

#define _MM_MASK_DENORM 256

#define _MM_MASK_DIV_ZERO 512

#define _MM_MASK_INEXACT 4096

#define _MM_MASK_INVALID 128

#define _MM_MASK_MASK 8064

#define _MM_MASK_OVERFLOW 1024

#define _MM_MASK_UNDERFLOW 2048

#define _MM_ROUND_DOWN 8192

#define _MM_ROUND_MASK 24576

#define _MM_ROUND_NEAREST 0

#define _MM_ROUND_TOWARD_ZERO 24576

#define _MM_ROUND_UP 16384

typedef union __m128 __m128, *P__m128;

union __m128 {
    float m128_f32[4];
    ulonglong m128_u64[2];
    sbyte m128_i8[16];
    short m128_i16[8];
    int m128_i32[4];
    longlong m128_i64[2];
    byte m128_u8[16];
    ushort m128_u16[8];
    uint m128_u32[4];
};

#define _ONCE_T_INIT 0

typedef long _Once_t;

typedef CRITICAL_SECTION _Rmtx;

#define FBITS 53

#define FMAXEXP 1024

#define BIG_EXP 2048

#define BITS_WORD 26

#define NBUF 4

#define _DENORM -2

#define _FE_DIVBYZERO 4

#define _FE_INEXACT 32

#define _FE_INVALID 1

#define _FE_OVERFLOW 8

#define _FE_UNDERFLOW 16

#define _FINITE -1

#define _INFCODE 1

#define _NANCODE 2

typedef union _Dconst _Dconst, *P_Dconst;

union _Dconst {
    ushort _Word[8];
    float _Float;
    double _Double;
    double _Long_double;
};

#define _C2 1

#define _COMPILER_TLS 1

#define _CPPLIB_VER 540

#define _GLOBAL_LOCALE 0

#define _GLOBAL_USING 1

#define _HAS_CHAR16_T_LANGUAGE_SUPPORT 0

#define _HAS_CPP0X 1

#define _HAS_EXCEPTIONS 1

#define _HAS_ITERATOR_DEBUGGING 0

#define _IOSTREAM_OP_LOCKS 1

#define _ITERATOR_DEBUG_ARRAY_OVERLOADS 1

#define _ITERATOR_DEBUG_LEVEL 0

#define _LLONG_MAX 9223372036854775807

#define _LOCK_DEBUG 3

#define _LOCK_LOCALE 0

#define _LOCK_MALLOC 1

#define _LOCK_STREAM 2

#define _MAX_EXP_DIG 8

#define _MAX_INT_DIG 32

#define _MAX_LOCK 4

#define _MAX_SIG_DIG 36

#define _MULTI_THREAD 1

#define _NO_LOCALES 0

#define _SECURE_SCL 0

#define _SECURE_SCL_DEPRECATE 1

#define _ULLONG_MAX -1

#define _WIN32_C_LIB 1

typedef longlong _Longlong;

typedef int _Mbstatet;

typedef ulong _Uint32t;

typedef ulonglong _ULonglong;

typedef ushort char16_t;

typedef uint char32_t;

